

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jan 18 19:50:27 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   100                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   101                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   102                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   103                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   104  0000                     
   105                           ; Version 2.32
   106                           ; Generated 02/02/2021 GMT
   107                           ; 
   108                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   109                           ; All rights reserved.
   110                           ; 
   111                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   112                           ; 
   113                           ; Redistribution and use in source and binary forms, with or without modification, are
   114                           ; permitted provided that the following conditions are met:
   115                           ; 
   116                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   117                           ;        conditions and the following disclaimer.
   118                           ; 
   119                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   120                           ;        of conditions and the following disclaimer in the documentation and/or other
   121                           ;        materials provided with the distribution. Publication is not required when
   122                           ;        this file is used in an embedded application.
   123                           ; 
   124                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   125                           ;        software without specific prior written permission.
   126                           ; 
   127                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   128                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   129                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   130                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   131                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   132                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   133                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   134                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   135                           ; 
   136                           ; 
   137                           ; Code-generator required, PIC18F4520 Definitions
   138                           ; 
   139                           ; SFR Addresses
   140  0000                     
   141                           	psect	idataCOMRAM
   142  00357E                     __pidataCOMRAM:
   143                           	callstack 0
   144                           
   145                           ;initializer for _day
   146  00357E  0011               	dw	17
   147                           
   148                           ;initializer for _month
   149  003580  0001               	dw	1
   150                           
   151                           ;initializer for _year
   152  003582  07E6               	dw	2022
   153                           
   154                           	psect	idataBANK0
   155  003584                     __pidataBANK0:
   156                           	callstack 0
   157                           
   158                           ;initializer for _second
   159  003584  0003               	dw	3
   160                           
   161                           ;initializer for _minute
   162  003586  0005               	dw	5
   163                           
   164                           ;initializer for _hour
   165  003588  0015               	dw	21
   166                           
   167                           	psect	idataBANK1
   168  003536                     __pidataBANK1:
   169                           	callstack 0
   170                           
   171                           ;initializer for lcd1602_setCursor@F2597
   172  003536  0000               	dw	0
   173  003538  0040               	dw	64
   174  00353A  0014               	dw	20
   175  00353C  0054               	dw	84
   176                           
   177                           	psect	smallconst
   178  000600                     __psmallconst:
   179                           	callstack 0
   180  000600  00                 	db	0
   181  000601                     _month_day:
   182                           	callstack 0
   183  000601  0000               	dw	0
   184  000603  001F               	dw	31
   185  000605  001C               	dw	28
   186  000607  001F               	dw	31
   187  000609  001E               	dw	30
   188  00060B  001F               	dw	31
   189  00060D  001E               	dw	30
   190  00060F  001F               	dw	31
   191  000611  001F               	dw	31
   192  000613  001E               	dw	30
   193  000615  001F               	dw	31
   194  000617  001E               	dw	30
   195  000619  001F               	dw	31
   196  00061B                     __end_of_month_day:
   197                           	callstack 0
   198  0000                     _TRISB	set	3987
   199  0000                     _LATB	set	3978
   200  0000                     _PORTBbits	set	3969
   201  0000                     _PORTA	set	3968
   202  0000                     _TRISA	set	3986
   203  0000                     _TRISD	set	3989
   204  0000                     _LATA	set	3977
   205  0000                     _LATD	set	3980
   206  0000                     _TRISC4	set	31908
   207  0000                     _TRISC3	set	31907
   208  0000                     _OSCCONbits	set	4051
   209  0000                     _ADCON1	set	4033
   210  0000                     _TXREG	set	4013
   211  0000                     _SPBRG	set	4015
   212  0000                     _RCSTA	set	4011
   213  0000                     _TXSTA	set	4012
   214  0000                     _SSPBUF	set	4041
   215  0000                     _SSPSTAT	set	4039
   216  0000                     _SSPADD	set	4040
   217  0000                     _SSPCON2	set	4037
   218  0000                     _SSPCON1	set	4038
   219  0000                     _TXIF	set	31988
   220  0000                     _ACKEN	set	32300
   221  0000                     _ACKDT	set	32301
   222  0000                     _RCEN	set	32299
   223  0000                     _PEN	set	32298
   224  0000                     _RSEN	set	32297
   225  0000                     _SEN	set	32296
   226  0000                     _INTCONbits	set	4082
   227  00061B                     STR_1:
   228  00061B  25                 	db	37
   229  00061C  30                 	db	48	;'0'
   230  00061D  34                 	db	52	;'4'
   231  00061E  64                 	db	100	;'d'
   232  00061F  2D                 	db	45
   233  000620  25                 	db	37
   234  000621  30                 	db	48	;'0'
   235  000622  32                 	db	50	;'2'
   236  000623  64                 	db	100	;'d'
   237  000624  2D                 	db	45
   238  000625  25                 	db	37
   239  000626  30                 	db	48	;'0'
   240  000627  32                 	db	50	;'2'
   241  000628  64                 	db	100	;'d'
   242  000629  20                 	db	32
   243  00062A  00                 	db	0
   244  00062B                     STR_3:
   245  00062B  25                 	db	37
   246  00062C  30                 	db	48	;'0'
   247  00062D  34                 	db	52	;'4'
   248  00062E  64                 	db	100	;'d'
   249  00062F  2D                 	db	45
   250  000630  25                 	db	37
   251  000631  30                 	db	48	;'0'
   252  000632  32                 	db	50	;'2'
   253  000633  64                 	db	100	;'d'
   254  000634  2D                 	db	45
   255  000635  25                 	db	37
   256  000636  30                 	db	48	;'0'
   257  000637  32                 	db	50	;'2'
   258  000638  64                 	db	100	;'d'
   259  000639  00                 	db	0
   260  00063A                     STR_2:
   261  00063A  25                 	db	37
   262  00063B  30                 	db	48	;'0'
   263  00063C  32                 	db	50	;'2'
   264  00063D  64                 	db	100	;'d'
   265  00063E  3A                 	db	58	;':'
   266  00063F  25                 	db	37
   267  000640  30                 	db	48	;'0'
   268  000641  32                 	db	50	;'2'
   269  000642  64                 	db	100	;'d'
   270  000643  3A                 	db	58	;':'
   271  000644  25                 	db	37
   272  000645  30                 	db	48	;'0'
   273  000646  32                 	db	50	;'2'
   274  000647  64                 	db	100	;'d'
   275  000648  00                 	db	0
   276  000649  00                 	db	0	; dummy byte at the end
   277  0000                     
   278                           ; #config settings
   279                           
   280                           	psect	cinit
   281  002A66                     __pcinit:
   282                           	callstack 0
   283  002A66                     start_initialization:
   284                           	callstack 0
   285  002A66                     __initialization:
   286                           	callstack 0
   287                           
   288                           ; Initialize objects allocated to BANK1 (8 bytes)
   289                           ; load TBLPTR registers with __pidataBANK1
   290  002A66  0E36               	movlw	low __pidataBANK1
   291  002A68  6EF6               	movwf	tblptrl,c
   292  002A6A  0E35               	movlw	high __pidataBANK1
   293  002A6C  6EF7               	movwf	tblptrh,c
   294  002A6E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   295  002A70  6EF8               	movwf	tblptru,c
   296  002A72  EE01  F047         	lfsr	0,__pdataBANK1
   297  002A76  EE10 F008          	lfsr	1,8
   298  002A7A                     copy_data0:
   299  002A7A  0009               	tblrd		*+
   300  002A7C  CFF5 FFEE          	movff	tablat,postinc0
   301  002A80  50E5               	movf	postdec1,w,c
   302  002A82  50E1               	movf	fsr1l,w,c
   303  002A84  E1FA               	bnz	copy_data0
   304                           
   305                           ; Initialize objects allocated to BANK0 (6 bytes)
   306                           ; load TBLPTR registers with __pidataBANK0
   307  002A86  0E84               	movlw	low __pidataBANK0
   308  002A88  6EF6               	movwf	tblptrl,c
   309  002A8A  0E35               	movlw	high __pidataBANK0
   310  002A8C  6EF7               	movwf	tblptrh,c
   311  002A8E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   312  002A90  6EF8               	movwf	tblptru,c
   313  002A92  EE00  F0F0         	lfsr	0,__pdataBANK0
   314  002A96  EE10 F006          	lfsr	1,6
   315  002A9A                     copy_data1:
   316  002A9A  0009               	tblrd		*+
   317  002A9C  CFF5 FFEE          	movff	tablat,postinc0
   318  002AA0  50E5               	movf	postdec1,w,c
   319  002AA2  50E1               	movf	fsr1l,w,c
   320  002AA4  E1FA               	bnz	copy_data1
   321                           
   322                           ; Initialize objects allocated to COMRAM (6 bytes)
   323                           ; load TBLPTR registers with __pidataCOMRAM
   324  002AA6  0E7E               	movlw	low __pidataCOMRAM
   325  002AA8  6EF6               	movwf	tblptrl,c
   326  002AAA  0E35               	movlw	high __pidataCOMRAM
   327  002AAC  6EF7               	movwf	tblptrh,c
   328  002AAE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   329  002AB0  6EF8               	movwf	tblptru,c
   330  002AB2  EE00  F077         	lfsr	0,__pdataCOMRAM
   331  002AB6  EE10 F006          	lfsr	1,6
   332  002ABA                     copy_data2:
   333  002ABA  0009               	tblrd		*+
   334  002ABC  CFF5 FFEE          	movff	tablat,postinc0
   335  002AC0  50E5               	movf	postdec1,w,c
   336  002AC2  50E1               	movf	fsr1l,w,c
   337  002AC4  E1FA               	bnz	copy_data2
   338                           
   339                           ; Clear objects allocated to BANK1 (53 bytes)
   340  002AC6  EE01  F000         	lfsr	0,__pbssBANK1
   341  002ACA  0E35               	movlw	53
   342  002ACC                     clear_0:
   343  002ACC  6AEE               	clrf	postinc0,c
   344  002ACE  06E8               	decf	wreg,f,c
   345  002AD0  E1FD               	bnz	clear_0
   346                           
   347                           ; Clear objects allocated to BANK0 (6 bytes)
   348  002AD2  0100               	movlb	0
   349  002AD4  6BEF               	clrf	(__pbssBANK0+5)& (0+255),b
   350  002AD6  6BEE               	clrf	(__pbssBANK0+4)& (0+255),b
   351  002AD8  6BED               	clrf	(__pbssBANK0+3)& (0+255),b
   352  002ADA  6BEC               	clrf	(__pbssBANK0+2)& (0+255),b
   353  002ADC  6BEB               	clrf	(__pbssBANK0+1)& (0+255),b
   354  002ADE  6BEA               	clrf	__pbssBANK0& (0+255),b
   355                           
   356                           ; Clear objects allocated to COMRAM (2 bytes)
   357  002AE0  6A7E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   358  002AE2  6A7D               	clrf	__pbssCOMRAM& (0+255),c
   359  002AE4                     end_of_initialization:
   360                           	callstack 0
   361  002AE4                     __end_of__initialization:
   362                           	callstack 0
   363  002AE4  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   364  002AE6  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   365  002AE8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   366  002AEA  6EF8               	movwf	tblptru,c
   367  002AEC  0100               	movlb	0
   368  002AEE  EF77  F00E         	goto	_main	;jump to C main() function
   369                           
   370                           	psect	bssCOMRAM
   371  00007D                     __pbssCOMRAM:
   372                           	callstack 0
   373  00007D                     __displaymode:
   374                           	callstack 0
   375  00007D                     	ds	1
   376  00007E                     __displaycontrol:
   377                           	callstack 0
   378  00007E                     	ds	1
   379                           
   380                           	psect	dataCOMRAM
   381  000077                     __pdataCOMRAM:
   382                           	callstack 0
   383  000077                     _day:
   384                           	callstack 0
   385  000077                     	ds	2
   386  000079                     _month:
   387                           	callstack 0
   388  000079                     	ds	2
   389  00007B                     _year:
   390                           	callstack 0
   391  00007B                     	ds	2
   392                           
   393                           	psect	bssBANK0
   394  0000EA                     __pbssBANK0:
   395                           	callstack 0
   396  0000EA                     _width:
   397                           	callstack 0
   398  0000EA                     	ds	2
   399  0000EC                     _prec:
   400                           	callstack 0
   401  0000EC                     	ds	2
   402  0000EE                     _flags:
   403                           	callstack 0
   404  0000EE                     	ds	2
   405                           
   406                           	psect	dataBANK0
   407  0000F0                     __pdataBANK0:
   408                           	callstack 0
   409  0000F0                     _second:
   410                           	callstack 0
   411  0000F0                     	ds	2
   412  0000F2                     _minute:
   413                           	callstack 0
   414  0000F2                     	ds	2
   415  0000F4                     _hour:
   416                           	callstack 0
   417  0000F4                     	ds	2
   418                           
   419                           	psect	bssBANK1
   420  000100                     __pbssBANK1:
   421                           	callstack 0
   422  000100                     _nout:
   423                           	callstack 0
   424  000100                     	ds	2
   425  000102                     __rows:
   426                           	callstack 0
   427  000102                     	ds	1
   428  000103                     __cols:
   429                           	callstack 0
   430  000103                     	ds	1
   431  000104                     __displayfunction:
   432                           	callstack 0
   433  000104                     	ds	1
   434  000105                     _dbuf:
   435                           	callstack 0
   436  000105                     	ds	32
   437  000125                     _temp:
   438                           	callstack 0
   439  000125                     	ds	16
   440                           
   441                           	psect	dataBANK1
   442  000147                     __pdataBANK1:
   443                           	callstack 0
   444  000147                     lcd1602_setCursor@F2597:
   445                           	callstack 0
   446  000147                     	ds	8
   447                           
   448                           	psect	cstackBANK1
   449  000135                     __pcstackBANK1:
   450                           	callstack 0
   451  000135                     ?_sprintf:
   452                           	callstack 0
   453  000135                     sprintf@s:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x0
   457  000135                     	ds	2
   458  000137                     sprintf@fmt:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x2
   462  000137                     	ds	8
   463  00013F                     sprintf@ap:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0xA
   467  00013F                     	ds	2
   468  000141                     sprintf@f:
   469                           	callstack 0
   470                           
   471                           ; 6 bytes @ 0xC
   472  000141                     	ds	6
   473                           
   474                           	psect	cstackBANK0
   475  000080                     __pcstackBANK0:
   476                           	callstack 0
   477  000080                     ??_Hi_ISR:
   478                           
   479                           ; 1 bytes @ 0x0
   480  000080                     	ds	10
   481  00008A                     ??_I2C_Master_Wait:
   482  00008A                     ?_strlen:
   483                           	callstack 0
   484  00008A                     ?_isdigit:
   485                           	callstack 0
   486  00008A                     ?_isspace:
   487                           	callstack 0
   488  00008A                     ?___wmul:
   489                           	callstack 0
   490  00008A                     ?___lldiv:
   491                           	callstack 0
   492  00008A                     ?___aodiv:
   493                           	callstack 0
   494  00008A                     ?___aomod:
   495                           	callstack 0
   496  00008A                     putch@byte:
   497                           	callstack 0
   498  00008A                     lcd1602_cmd@cmd:
   499                           	callstack 0
   500  00008A                     lcd1602_displaychar@value:
   501                           	callstack 0
   502  00008A                     ___wmul@multiplier:
   503                           	callstack 0
   504  00008A                     isdigit@c:
   505                           	callstack 0
   506  00008A                     isspace@c:
   507                           	callstack 0
   508  00008A                     strlen@s:
   509                           	callstack 0
   510  00008A                     ___lldiv@dividend:
   511                           	callstack 0
   512  00008A                     ___aodiv@dividend:
   513                           	callstack 0
   514  00008A                     ___aomod@dividend:
   515                           	callstack 0
   516                           
   517                           ; 8 bytes @ 0xA
   518  00008A                     	ds	1
   519  00008B                     I2C_Master_Write@d:
   520                           	callstack 0
   521  00008B                     I2C_Master_Read@a:
   522                           	callstack 0
   523  00008B                     lcd1602_setCursor@col:
   524                           	callstack 0
   525  00008B                     lcd1602_print@str:
   526                           	callstack 0
   527  00008B                     fputc@c:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0xB
   531  00008B                     	ds	1
   532  00008C                     ??_isdigit:
   533  00008C                     ??_isspace:
   534  00008C                     I2C_Master_Read@temp:
   535                           	callstack 0
   536  00008C                     setI2C@data:
   537                           	callstack 0
   538  00008C                     ___wmul@multiplicand:
   539                           	callstack 0
   540  00008C                     strlen@a:
   541                           	callstack 0
   542  00008C                     lcd1602_setCursor@row_offsets:
   543                           	callstack 0
   544                           
   545                           ; 8 bytes @ 0xC
   546  00008C                     	ds	1
   547  00008D                     setI2C@reg:
   548                           	callstack 0
   549  00008D                     getI2C@reg:
   550                           	callstack 0
   551  00008D                     lcd1602_print@length:
   552                           	callstack 0
   553  00008D                     fputc@fp:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0xD
   557  00008D                     	ds	1
   558  00008E                     getI2C@data:
   559                           	callstack 0
   560  00008E                     ___wmul@product:
   561                           	callstack 0
   562  00008E                     ___lldiv@divisor:
   563                           	callstack 0
   564                           
   565                           ; 4 bytes @ 0xE
   566  00008E                     	ds	1
   567  00008F                     ??_fputc:
   568  00008F                     ??_lcd1602_print:
   569  00008F                     PCF8563_getDate@year:
   570                           	callstack 0
   571  00008F                     PCF8563_getTime@hour:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0xF
   575  00008F                     	ds	1
   576  000090                     _isspace$998:
   577                           	callstack 0
   578  000090                     lcd1602_print@i:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x10
   582  000090                     	ds	1
   583  000091                     ?_atoi:
   584                           	callstack 0
   585  000091                     PCF8563_getDate@mon:
   586                           	callstack 0
   587  000091                     PCF8563_getTime@min:
   588                           	callstack 0
   589  000091                     atoi@s:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x11
   593  000091                     	ds	1
   594  000092                     ___lldiv@quotient:
   595                           	callstack 0
   596  000092                     ___aodiv@divisor:
   597                           	callstack 0
   598  000092                     ___aomod@divisor:
   599                           	callstack 0
   600                           
   601                           ; 8 bytes @ 0x12
   602  000092                     	ds	1
   603  000093                     ??_atoi:
   604  000093                     PCF8563_getDate@day:
   605                           	callstack 0
   606  000093                     PCF8563_getTime@sec:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x13
   610  000093                     	ds	1
   611  000094                     lcd1602_setCursor@row:
   612                           	callstack 0
   613  000094                     fputs@s:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x14
   617  000094                     	ds	1
   618  000095                     ??_PCF8563_getDate:
   619  000095                     ??_PCF8563_getTime:
   620  000095                     
   621                           ; 1 bytes @ 0x15
   622  000095                     	ds	1
   623  000096                     ___lldiv@counter:
   624                           	callstack 0
   625  000096                     fputs@fp:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x16
   629  000096                     	ds	1
   630  000097                     atoi@neg:
   631                           	callstack 0
   632  000097                     I2C_Master_Init@freq:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0x17
   636  000097                     	ds	1
   637  000098                     fputs@c:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x18
   641  000098                     	ds	1
   642  000099                     _PCF8563_getDate$96:
   643                           	callstack 0
   644  000099                     _atoi$980:
   645                           	callstack 0
   646  000099                     fputs@i:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x19
   650  000099                     	ds	1
   651  00009A                     ___aodiv@counter:
   652                           	callstack 0
   653  00009A                     ___aomod@counter:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x1A
   657  00009A                     	ds	1
   658  00009B                     ?_pad:
   659                           	callstack 0
   660  00009B                     PCF8563_getDate@century:
   661                           	callstack 0
   662  00009B                     ___aodiv@sign:
   663                           	callstack 0
   664  00009B                     ___aomod@sign:
   665                           	callstack 0
   666  00009B                     pad@fp:
   667                           	callstack 0
   668  00009B                     _atoi$982:
   669                           	callstack 0
   670  00009B                     I2C_Master_Init@clock:
   671                           	callstack 0
   672                           
   673                           ; 4 bytes @ 0x1B
   674  00009B                     	ds	1
   675  00009C                     ?_abs:
   676                           	callstack 0
   677  00009C                     abs@a:
   678                           	callstack 0
   679  00009C                     PCF8563_getDate@buf:
   680                           	callstack 0
   681  00009C                     ___aodiv@quotient:
   682                           	callstack 0
   683                           
   684                           ; 8 bytes @ 0x1C
   685  00009C                     	ds	1
   686  00009D                     _atoi$981:
   687                           	callstack 0
   688  00009D                     pad@buf:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x1D
   692  00009D                     	ds	1
   693  00009E                     ??_abs:
   694  00009E                     atoi@n:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x1E
   698  00009E                     	ds	1
   699  00009F                     ??_I2C_Master_Init:
   700  00009F                     pad@p:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x1F
   704  00009F                     	ds	2
   705  0000A1                     ??_pad:
   706                           
   707                           ; 1 bytes @ 0x21
   708  0000A1                     	ds	1
   709  0000A2                     pad@i:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x22
   713  0000A2                     	ds	1
   714  0000A3                     init_i2c@freq:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x23
   718  0000A3                     	ds	1
   719  0000A4                     pad@w:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x24
   723  0000A4                     	ds	2
   724  0000A6                     ?_dtoa:
   725                           	callstack 0
   726  0000A6                     dtoa@fp:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x26
   730  0000A6                     	ds	1
   731  0000A7                     init_i2c@clock:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x27
   735  0000A7                     	ds	1
   736  0000A8                     dtoa@d:
   737                           	callstack 0
   738                           
   739                           ; 8 bytes @ 0x28
   740  0000A8                     	ds	3
   741  0000AB                     
   742                           ; 1 bytes @ 0x2B
   743  0000AB                     	ds	5
   744  0000B0                     ??_dtoa:
   745                           
   746                           ; 1 bytes @ 0x30
   747  0000B0                     	ds	8
   748  0000B8                     _dtoa$945:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x38
   752  0000B8                     	ds	2
   753  0000BA                     dtoa@p:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x3A
   757  0000BA                     	ds	2
   758  0000BC                     dtoa@w:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x3C
   762  0000BC                     	ds	2
   763  0000BE                     dtoa@s:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x3E
   767  0000BE                     	ds	2
   768  0000C0                     dtoa@n:
   769                           	callstack 0
   770                           
   771                           ; 8 bytes @ 0x40
   772  0000C0                     	ds	8
   773  0000C8                     dtoa@i:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x48
   777  0000C8                     	ds	2
   778  0000CA                     ?_vfpfcnvrt:
   779                           	callstack 0
   780  0000CA                     vfpfcnvrt@fp:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x4A
   784  0000CA                     	ds	2
   785  0000CC                     vfpfcnvrt@fmt:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x4C
   789  0000CC                     	ds	2
   790  0000CE                     vfpfcnvrt@ap:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x4E
   794  0000CE                     	ds	2
   795  0000D0                     ??_vfpfcnvrt:
   796                           
   797                           ; 1 bytes @ 0x50
   798  0000D0                     	ds	4
   799  0000D4                     vfpfcnvrt@ll:
   800                           	callstack 0
   801                           
   802                           ; 8 bytes @ 0x54
   803  0000D4                     	ds	8
   804  0000DC                     vfpfcnvrt@done:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x5C
   808  0000DC                     	ds	2
   809  0000DE                     _vfpfcnvrt$960:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x5E
   813  0000DE                     	ds	2
   814  0000E0                     ?_vfprintf:
   815                           	callstack 0
   816  0000E0                     vfprintf@fp:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x60
   820  0000E0                     	ds	2
   821  0000E2                     vfprintf@fmt:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x62
   825  0000E2                     	ds	2
   826  0000E4                     vfprintf@ap:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x64
   830  0000E4                     	ds	2
   831  0000E6                     vfprintf@cfmt:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x66
   835  0000E6                     	ds	2
   836  0000E8                     ??_main:
   837                           
   838                           ; 1 bytes @ 0x68
   839  0000E8                     	ds	2
   840                           
   841                           	psect	cstackCOMRAM
   842  000001                     __pcstackCOMRAM:
   843                           	callstack 0
   844  000001                     ??i2_I2C_Master_Wait:
   845  000001                     ?___awdiv:
   846                           	callstack 0
   847  000001                     ?___awmod:
   848                           	callstack 0
   849  000001                     ?___lwmod:
   850                           	callstack 0
   851  000001                     ?i2___wmul:
   852                           	callstack 0
   853  000001                     ?i2_isdigit:
   854                           	callstack 0
   855  000001                     ?i2_isspace:
   856                           	callstack 0
   857  000001                     ?i2_strlen:
   858                           	callstack 0
   859  000001                     ?i2___aodiv:
   860                           	callstack 0
   861  000001                     ?i2___aomod:
   862                           	callstack 0
   863  000001                     i2putch@byte:
   864                           	callstack 0
   865  000001                     i2lcd1602_cmd@cmd:
   866                           	callstack 0
   867  000001                     i2lcd1602_displaychar@value:
   868                           	callstack 0
   869  000001                     ___awdiv@dividend:
   870                           	callstack 0
   871  000001                     ___awmod@dividend:
   872                           	callstack 0
   873  000001                     ___lwmod@dividend:
   874                           	callstack 0
   875  000001                     i2___wmul@multiplier:
   876                           	callstack 0
   877  000001                     i2isdigit@c:
   878                           	callstack 0
   879  000001                     i2isspace@c:
   880                           	callstack 0
   881  000001                     i2strlen@s:
   882                           	callstack 0
   883  000001                     i2___aodiv@dividend:
   884                           	callstack 0
   885  000001                     i2___aomod@dividend:
   886                           	callstack 0
   887                           
   888                           ; 8 bytes @ 0x0
   889  000001                     	ds	1
   890  000002                     i2I2C_Master_Write@d:
   891                           	callstack 0
   892  000002                     i2lcd1602_setCursor@col:
   893                           	callstack 0
   894  000002                     i2lcd1602_print@str:
   895                           	callstack 0
   896  000002                     i2fputc@c:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x1
   900  000002                     	ds	1
   901  000003                     ??i2_isdigit:
   902  000003                     ??i2_isspace:
   903  000003                     ___awdiv@divisor:
   904                           	callstack 0
   905  000003                     ___awmod@divisor:
   906                           	callstack 0
   907  000003                     ___lwmod@divisor:
   908                           	callstack 0
   909  000003                     i2___wmul@multiplicand:
   910                           	callstack 0
   911  000003                     i2strlen@a:
   912                           	callstack 0
   913  000003                     i2lcd1602_setCursor@row_offsets:
   914                           	callstack 0
   915                           
   916                           ; 8 bytes @ 0x2
   917  000003                     	ds	1
   918  000004                     i2lcd1602_print@length:
   919                           	callstack 0
   920  000004                     i2fputc@fp:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x3
   924  000004                     	ds	1
   925  000005                     ___awdiv@counter:
   926                           	callstack 0
   927  000005                     ___awmod@counter:
   928                           	callstack 0
   929  000005                     ___lwmod@counter:
   930                           	callstack 0
   931  000005                     i2___wmul@product:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x4
   935  000005                     	ds	1
   936  000006                     ??i2_lcd1602_print:
   937  000006                     ??i2_fputc:
   938  000006                     ?___lwdiv:
   939                           	callstack 0
   940  000006                     ___awdiv@sign:
   941                           	callstack 0
   942  000006                     ___awmod@sign:
   943                           	callstack 0
   944  000006                     ___lwdiv@dividend:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x5
   948  000006                     	ds	1
   949  000007                     i2_isspace$998:
   950                           	callstack 0
   951  000007                     ___awdiv@quotient:
   952                           	callstack 0
   953  000007                     i2lcd1602_print@i:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x6
   957  000007                     	ds	1
   958  000008                     ?i2_atoi:
   959                           	callstack 0
   960  000008                     ___lwdiv@divisor:
   961                           	callstack 0
   962  000008                     i2atoi@s:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x7
   966  000008                     	ds	1
   967  000009                     i2setI2C@data:
   968                           	callstack 0
   969  000009                     i2___aodiv@divisor:
   970                           	callstack 0
   971  000009                     i2___aomod@divisor:
   972                           	callstack 0
   973                           
   974                           ; 8 bytes @ 0x8
   975  000009                     	ds	1
   976  00000A                     ??i2_atoi:
   977  00000A                     i2setI2C@reg:
   978                           	callstack 0
   979  00000A                     ___lwdiv@quotient:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x9
   983  00000A                     	ds	1
   984  00000B                     PCF8563_setTime@min:
   985                           	callstack 0
   986  00000B                     i2lcd1602_setCursor@row:
   987                           	callstack 0
   988  00000B                     i2fputs@s:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0xA
   992  00000B                     	ds	1
   993  00000C                     PCF8563_setTime@sec:
   994                           	callstack 0
   995  00000C                     ___lwdiv@counter:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0xB
   999  00000C                     	ds	1
  1000  00000D                     ??_PCF8563_setTime:
  1001  00000D                     PCF8563_setDate@year:
  1002                           	callstack 0
  1003  00000D                     i2fputs@fp:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0xC
  1007  00000D                     	ds	1
  1008  00000E                     i2atoi@neg:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0xD
  1012  00000E                     	ds	1
  1013  00000F                     PCF8563_setDate@mon:
  1014                           	callstack 0
  1015  00000F                     PCF8563_setTime@hour:
  1016                           	callstack 0
  1017  00000F                     i2fputs@c:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0xE
  1021  00000F                     	ds	1
  1022  000010                     PCF8563_setDate@day:
  1023                           	callstack 0
  1024  000010                     i2_atoi$980:
  1025                           	callstack 0
  1026  000010                     i2fputs@i:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0xF
  1030  000010                     	ds	1
  1031  000011                     ??_PCF8563_setDate:
  1032  000011                     i2___aodiv@counter:
  1033                           	callstack 0
  1034  000011                     i2___aomod@counter:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x10
  1038  000011                     	ds	1
  1039  000012                     ?i2_pad:
  1040                           	callstack 0
  1041  000012                     i2___aodiv@sign:
  1042                           	callstack 0
  1043  000012                     i2___aomod@sign:
  1044                           	callstack 0
  1045  000012                     i2pad@fp:
  1046                           	callstack 0
  1047  000012                     i2_atoi$982:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x11
  1051  000012                     	ds	1
  1052  000013                     ?i2_abs:
  1053                           	callstack 0
  1054  000013                     _PCF8563_setDate$1290:
  1055                           	callstack 0
  1056  000013                     i2abs@a:
  1057                           	callstack 0
  1058  000013                     i2___aodiv@quotient:
  1059                           	callstack 0
  1060                           
  1061                           ; 8 bytes @ 0x12
  1062  000013                     	ds	1
  1063  000014                     i2_atoi$981:
  1064                           	callstack 0
  1065  000014                     i2pad@buf:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x13
  1069  000014                     	ds	1
  1070  000015                     ??i2_abs:
  1071  000015                     _PCF8563_setDate$87:
  1072                           	callstack 0
  1073  000015                     i2atoi@n:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x14
  1077  000015                     	ds	1
  1078  000016                     i2pad@p:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x15
  1082  000016                     	ds	2
  1083  000018                     ??i2_pad:
  1084                           
  1085                           ; 1 bytes @ 0x17
  1086  000018                     	ds	1
  1087  000019                     i2pad@i:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x18
  1091  000019                     	ds	2
  1092  00001B                     i2pad@w:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x1A
  1096  00001B                     	ds	2
  1097  00001D                     ?i2_dtoa:
  1098                           	callstack 0
  1099  00001D                     i2dtoa@fp:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x1C
  1103  00001D                     	ds	2
  1104  00001F                     i2dtoa@d:
  1105                           	callstack 0
  1106                           
  1107                           ; 8 bytes @ 0x1E
  1108  00001F                     	ds	8
  1109  000027                     ??i2_dtoa:
  1110                           
  1111                           ; 1 bytes @ 0x26
  1112  000027                     	ds	8
  1113  00002F                     i2_dtoa$945:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x2E
  1117  00002F                     	ds	2
  1118  000031                     i2dtoa@p:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x30
  1122  000031                     	ds	2
  1123  000033                     i2dtoa@w:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x32
  1127  000033                     	ds	2
  1128  000035                     i2dtoa@s:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x34
  1132  000035                     	ds	2
  1133  000037                     i2dtoa@n:
  1134                           	callstack 0
  1135                           
  1136                           ; 8 bytes @ 0x36
  1137  000037                     	ds	8
  1138  00003F                     i2dtoa@i:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x3E
  1142  00003F                     	ds	2
  1143  000041                     ?i2_vfpfcnvrt:
  1144                           	callstack 0
  1145  000041                     i2vfpfcnvrt@fp:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x40
  1149  000041                     	ds	2
  1150  000043                     i2vfpfcnvrt@fmt:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x42
  1154  000043                     	ds	2
  1155  000045                     i2vfpfcnvrt@ap:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x44
  1159  000045                     	ds	2
  1160  000047                     ??i2_vfpfcnvrt:
  1161                           
  1162                           ; 1 bytes @ 0x46
  1163  000047                     	ds	4
  1164  00004B                     i2vfpfcnvrt@ll:
  1165                           	callstack 0
  1166                           
  1167                           ; 8 bytes @ 0x4A
  1168  00004B                     	ds	8
  1169  000053                     i2vfpfcnvrt@done:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x52
  1173  000053                     	ds	2
  1174  000055                     i2_vfpfcnvrt$960:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x54
  1178  000055                     	ds	2
  1179  000057                     ?i2_vfprintf:
  1180                           	callstack 0
  1181  000057                     i2vfprintf@fp:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x56
  1185  000057                     	ds	2
  1186  000059                     i2vfprintf@fmt:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x58
  1190  000059                     	ds	2
  1191  00005B                     i2vfprintf@ap:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x5A
  1195  00005B                     	ds	2
  1196  00005D                     i2vfprintf@cfmt:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x5C
  1200  00005D                     	ds	2
  1201  00005F                     ?i2_sprintf:
  1202                           	callstack 0
  1203  00005F                     i2sprintf@s:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x5E
  1207  00005F                     	ds	2
  1208  000061                     i2sprintf@fmt:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x60
  1212  000061                     	ds	8
  1213  000069                     i2sprintf@ap:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x68
  1217  000069                     	ds	2
  1218  00006B                     i2sprintf@f:
  1219                           	callstack 0
  1220                           
  1221                           ; 6 bytes @ 0x6A
  1222  00006B                     	ds	6
  1223  000071                     ??_printDate:
  1224  000071                     ??_printTime:
  1225                           
  1226                           ; 1 bytes @ 0x70
  1227  000071                     	ds	2
  1228  000073                     ??_myISR:
  1229                           
  1230                           ; 1 bytes @ 0x72
  1231  000073                     	ds	4
  1232                           
  1233 ;;
  1234 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1235 ;;
  1236 ;; *************** function _main *****************
  1237 ;; Defined at:
  1238 ;;		line 141 in file "src/main.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1252 ;;      Params:         0       0       0       0       0       0       0
  1253 ;;      Locals:         0       0       0       0       0       0       0
  1254 ;;      Temps:          0       2       0       0       0       0       0
  1255 ;;      Totals:         0       2       0       0       0       0       0
  1256 ;;Total ram usage:        2 bytes
  1257 ;; Hardware stack levels required when called: 19
  1258 ;; This function calls:
  1259 ;;		_PCF8563_getDate
  1260 ;;		_PCF8563_getTime
  1261 ;;		_init_i2c
  1262 ;;		_init_pcf8563
  1263 ;;		_lcd1602_clear
  1264 ;;		_lcd1602_cursorNextLine
  1265 ;;		_lcd1602_home
  1266 ;;		_lcd1602_initial
  1267 ;;		_lcd1602_print
  1268 ;;		_sprintf
  1269 ;; This function is called by:
  1270 ;;		Startup code after reset
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text0
  1275  001CEE                     __ptext0:
  1276                           	callstack 0
  1277  001CEE                     _main:
  1278                           	callstack 12
  1279  001CEE                     
  1280                           ;src/main.c: 142:     OSCCONbits.IRCF = 0b110;
  1281  001CEE  50D3               	movf	211,w,c	;volatile
  1282  001CF0  0B8F               	andlw	-113
  1283  001CF2  0960               	iorlw	96
  1284  001CF4  6ED3               	movwf	211,c	;volatile
  1285                           
  1286                           ;src/main.c: 143:     ADCON1 = 0x0F;
  1287  001CF6  0E0F               	movlw	15
  1288  001CF8  6EC1               	movwf	193,c	;volatile
  1289                           
  1290                           ;src/main.c: 144:     LATB = 0;
  1291  001CFA  0E00               	movlw	0
  1292  001CFC  6E8A               	movwf	138,c	;volatile
  1293  001CFE                     
  1294                           ;src/main.c: 145:     TRISB = 0xFF;
  1295  001CFE  6893               	setf	147,c	;volatile
  1296  001D00                     
  1297                           ;src/main.c: 147:     INTCONbits.INT0F = 0;
  1298  001D00  92F2               	bcf	242,1,c	;volatile
  1299  001D02                     
  1300                           ;src/main.c: 148:     INTCONbits.INT0IE = 1;
  1301  001D02  88F2               	bsf	242,4,c	;volatile
  1302  001D04                     
  1303                           ;src/main.c: 149:     INTCONbits.GIE = 1;
  1304  001D04  8EF2               	bsf	242,7,c	;volatile
  1305  001D06                     
  1306                           ;src/main.c: 151:     init_i2c(1000000, 100000);
  1307  001D06  0E40               	movlw	64
  1308  001D08  0100               	movlb	0	; () banked
  1309  001D0A  6FA3               	movwf	init_i2c@freq& (0+255),b
  1310  001D0C  0E42               	movlw	66
  1311  001D0E  6FA4               	movwf	(init_i2c@freq+1)& (0+255),b
  1312  001D10  0E0F               	movlw	15
  1313  001D12  6FA5               	movwf	(init_i2c@freq+2)& (0+255),b
  1314  001D14  0E00               	movlw	0
  1315  001D16  6FA6               	movwf	(init_i2c@freq+3)& (0+255),b
  1316  001D18  0EA0               	movlw	160
  1317  001D1A  6FA7               	movwf	init_i2c@clock& (0+255),b
  1318  001D1C  0E86               	movlw	134
  1319  001D1E  6FA8               	movwf	(init_i2c@clock+1)& (0+255),b
  1320  001D20  0E01               	movlw	1
  1321  001D22  6FA9               	movwf	(init_i2c@clock+2)& (0+255),b
  1322  001D24  0E00               	movlw	0
  1323  001D26  6FAA               	movwf	(init_i2c@clock+3)& (0+255),b
  1324  001D28  ECB7  F019         	call	_init_i2c	;wreg free
  1325  001D2C                     
  1326                           ;src/main.c: 152:     init_pcf8563();
  1327  001D2C  EC73  F019         	call	_init_pcf8563	;wreg free
  1328  001D30                     
  1329                           ;src/main.c: 154:     lcd1602_initial();
  1330  001D30  EC9A  F017         	call	_lcd1602_initial	;wreg free
  1331  001D34                     
  1332                           ;src/main.c: 155:     lcd1602_clear();
  1333  001D34  ECA3  F01A         	call	_lcd1602_clear	;wreg free
  1334  001D38                     
  1335                           ;src/main.c: 156:     PCF8563_getDate(&year, &month, &day);
  1336  001D38  0E7B               	movlw	low _year
  1337  001D3A  0100               	movlb	0	; () banked
  1338  001D3C  6F8F               	movwf	PCF8563_getDate@year& (0+255),b
  1339  001D3E  0E00               	movlw	high _year
  1340  001D40  6F90               	movwf	(PCF8563_getDate@year+1)& (0+255),b
  1341  001D42  0E79               	movlw	low _month
  1342  001D44  6F91               	movwf	PCF8563_getDate@mon& (0+255),b
  1343  001D46  0E00               	movlw	high _month
  1344  001D48  6F92               	movwf	(PCF8563_getDate@mon+1)& (0+255),b
  1345  001D4A  0E77               	movlw	low _day
  1346  001D4C  6F93               	movwf	PCF8563_getDate@day& (0+255),b
  1347  001D4E  0E00               	movlw	high _day
  1348  001D50  6F94               	movwf	(PCF8563_getDate@day+1)& (0+255),b
  1349  001D52  EC96  F010         	call	_PCF8563_getDate	;wreg free
  1350  001D56                     
  1351                           ;src/main.c: 157:     PCF8563_getTime(&hour, &minute, &second);
  1352  001D56  0EF4               	movlw	low _hour
  1353  001D58  0100               	movlb	0	; () banked
  1354  001D5A  6F8F               	movwf	PCF8563_getTime@hour& (0+255),b
  1355  001D5C  0E00               	movlw	high _hour
  1356  001D5E  6F90               	movwf	(PCF8563_getTime@hour+1)& (0+255),b
  1357  001D60  0EF2               	movlw	low _minute
  1358  001D62  6F91               	movwf	PCF8563_getTime@min& (0+255),b
  1359  001D64  0E00               	movlw	high _minute
  1360  001D66  6F92               	movwf	(PCF8563_getTime@min+1)& (0+255),b
  1361  001D68  0EF0               	movlw	low _second
  1362  001D6A  6F93               	movwf	PCF8563_getTime@sec& (0+255),b
  1363  001D6C  0E00               	movlw	high _second
  1364  001D6E  6F94               	movwf	(PCF8563_getTime@sec+1)& (0+255),b
  1365  001D70  ECCD  F011         	call	_PCF8563_getTime	;wreg free
  1366  001D74                     l4185:
  1367                           
  1368                           ;src/main.c: 159:         lcd1602_home();
  1369  001D74  EC9F  F01A         	call	_lcd1602_home	;wreg free
  1370  001D78                     
  1371                           ;src/main.c: 160:         PCF8563_getDate(&year, &month, &day);
  1372  001D78  0E7B               	movlw	low _year
  1373  001D7A  0100               	movlb	0	; () banked
  1374  001D7C  6F8F               	movwf	PCF8563_getDate@year& (0+255),b
  1375  001D7E  0E00               	movlw	high _year
  1376  001D80  6F90               	movwf	(PCF8563_getDate@year+1)& (0+255),b
  1377  001D82  0E79               	movlw	low _month
  1378  001D84  6F91               	movwf	PCF8563_getDate@mon& (0+255),b
  1379  001D86  0E00               	movlw	high _month
  1380  001D88  6F92               	movwf	(PCF8563_getDate@mon+1)& (0+255),b
  1381  001D8A  0E77               	movlw	low _day
  1382  001D8C  6F93               	movwf	PCF8563_getDate@day& (0+255),b
  1383  001D8E  0E00               	movlw	high _day
  1384  001D90  6F94               	movwf	(PCF8563_getDate@day+1)& (0+255),b
  1385  001D92  EC96  F010         	call	_PCF8563_getDate	;wreg free
  1386  001D96                     
  1387                           ;src/main.c: 161:         sprintf(temp, "%04d-%02d-%02d", year, month, day);
  1388  001D96  0E25               	movlw	low _temp
  1389  001D98  0101               	movlb	1	; () banked
  1390  001D9A  6F35               	movwf	sprintf@s& (0+255),b
  1391  001D9C  0E01               	movlw	high _temp
  1392  001D9E  6F36               	movwf	(sprintf@s+1)& (0+255),b
  1393  001DA0  0E2B               	movlw	low STR_3
  1394  001DA2  6F37               	movwf	sprintf@fmt& (0+255),b
  1395  001DA4  0E06               	movlw	high STR_3
  1396  001DA6  6F38               	movwf	(sprintf@fmt+1)& (0+255),b
  1397  001DA8  C07B  F139         	movff	_year,?_sprintf+4
  1398  001DAC  C07C  F13A         	movff	_year+1,?_sprintf+5
  1399  001DB0  C079  F13B         	movff	_month,?_sprintf+6
  1400  001DB4  C07A  F13C         	movff	_month+1,?_sprintf+7
  1401  001DB8  C077  F13D         	movff	_day,?_sprintf+8
  1402  001DBC  C078  F13E         	movff	_day+1,?_sprintf+9
  1403  001DC0  EC1D  F017         	call	_sprintf	;wreg free
  1404  001DC4                     
  1405                           ;src/main.c: 162:         lcd1602_print(temp, 10);
  1406  001DC4  0E25               	movlw	low _temp
  1407  001DC6  0100               	movlb	0	; () banked
  1408  001DC8  6F8B               	movwf	lcd1602_print@str& (0+255),b
  1409  001DCA  0E01               	movlw	high _temp
  1410  001DCC  6F8C               	movwf	(lcd1602_print@str+1)& (0+255),b
  1411  001DCE  0E00               	movlw	0
  1412  001DD0  6F8E               	movwf	(lcd1602_print@length+1)& (0+255),b
  1413  001DD2  0E0A               	movlw	10
  1414  001DD4  6F8D               	movwf	lcd1602_print@length& (0+255),b
  1415  001DD6  EC0D  F018         	call	_lcd1602_print	;wreg free
  1416  001DDA                     
  1417                           ;src/main.c: 163:         lcd1602_cursorNextLine();
  1418  001DDA  EC6F  F01A         	call	_lcd1602_cursorNextLine	;wreg free
  1419  001DDE                     
  1420                           ;src/main.c: 164:         PCF8563_getTime(&hour, &minute, &second);
  1421  001DDE  0EF4               	movlw	low _hour
  1422  001DE0  0100               	movlb	0	; () banked
  1423  001DE2  6F8F               	movwf	PCF8563_getTime@hour& (0+255),b
  1424  001DE4  0E00               	movlw	high _hour
  1425  001DE6  6F90               	movwf	(PCF8563_getTime@hour+1)& (0+255),b
  1426  001DE8  0EF2               	movlw	low _minute
  1427  001DEA  6F91               	movwf	PCF8563_getTime@min& (0+255),b
  1428  001DEC  0E00               	movlw	high _minute
  1429  001DEE  6F92               	movwf	(PCF8563_getTime@min+1)& (0+255),b
  1430  001DF0  0EF0               	movlw	low _second
  1431  001DF2  6F93               	movwf	PCF8563_getTime@sec& (0+255),b
  1432  001DF4  0E00               	movlw	high _second
  1433  001DF6  6F94               	movwf	(PCF8563_getTime@sec+1)& (0+255),b
  1434  001DF8  ECCD  F011         	call	_PCF8563_getTime	;wreg free
  1435  001DFC                     
  1436                           ;src/main.c: 165:         sprintf(temp, "%02d:%02d:%02d", hour, minute, second);
  1437  001DFC  0E25               	movlw	low _temp
  1438  001DFE  0101               	movlb	1	; () banked
  1439  001E00  6F35               	movwf	sprintf@s& (0+255),b
  1440  001E02  0E01               	movlw	high _temp
  1441  001E04  6F36               	movwf	(sprintf@s+1)& (0+255),b
  1442  001E06  0E3A               	movlw	low STR_2
  1443  001E08  6F37               	movwf	sprintf@fmt& (0+255),b
  1444  001E0A  0E06               	movlw	high STR_2
  1445  001E0C  6F38               	movwf	(sprintf@fmt+1)& (0+255),b
  1446  001E0E  C0F4  F139         	movff	_hour,?_sprintf+4
  1447  001E12  C0F5  F13A         	movff	_hour+1,?_sprintf+5
  1448  001E16  C0F2  F13B         	movff	_minute,?_sprintf+6
  1449  001E1A  C0F3  F13C         	movff	_minute+1,?_sprintf+7
  1450  001E1E  C0F0  F13D         	movff	_second,?_sprintf+8
  1451  001E22  C0F1  F13E         	movff	_second+1,?_sprintf+9
  1452  001E26  EC1D  F017         	call	_sprintf	;wreg free
  1453  001E2A                     
  1454                           ;src/main.c: 166:         lcd1602_print(temp, 8);
  1455  001E2A  0E25               	movlw	low _temp
  1456  001E2C  0100               	movlb	0	; () banked
  1457  001E2E  6F8B               	movwf	lcd1602_print@str& (0+255),b
  1458  001E30  0E01               	movlw	high _temp
  1459  001E32  6F8C               	movwf	(lcd1602_print@str+1)& (0+255),b
  1460  001E34  0E00               	movlw	0
  1461  001E36  6F8E               	movwf	(lcd1602_print@length+1)& (0+255),b
  1462  001E38  0E08               	movlw	8
  1463  001E3A  6F8D               	movwf	lcd1602_print@length& (0+255),b
  1464  001E3C  EC0D  F018         	call	_lcd1602_print	;wreg free
  1465  001E40                     
  1466                           ;src/main.c: 167:         _delay((unsigned long)((1000)*(1000000/4000.0)));
  1467  001E40  0E02               	movlw	2
  1468  001E42  0100               	movlb	0	; () banked
  1469  001E44  6FE9               	movwf	(??_main+1)& (0+255),b
  1470  001E46  0E45               	movlw	69
  1471  001E48  6FE8               	movwf	??_main& (0+255),b
  1472  001E4A  0EA9               	movlw	169
  1473  001E4C                     u3857:
  1474  001E4C  2EE8               	decfsz	wreg,f,c
  1475  001E4E  D7FE               	bra	u3857
  1476  001E50  2FE8               	decfsz	??_main& (0+255),f,b
  1477  001E52  D7FC               	bra	u3857
  1478  001E54  2FE9               	decfsz	(??_main+1)& (0+255),f,b
  1479  001E56  D7FA               	bra	u3857
  1480  001E58  D000               	nop2	
  1481  001E5A  EFBA  F00E         	goto	l4185
  1482  001E5E  EF07  F000         	goto	start
  1483  001E62                     __end_of_main:
  1484                           	callstack 0
  1485                           
  1486 ;; *************** function _sprintf *****************
  1487 ;; Defined at:
  1488 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  s               2    0[BANK1 ] PTR unsigned char 
  1491 ;;		 -> temp(16), 
  1492 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  1493 ;;		 -> STR_4(15), STR_3(15), STR_2(15), STR_1(16), 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  f               6   12[BANK1 ] struct _IO_FILE
  1496 ;;  ap              2   10[BANK1 ] PTR void [1]
  1497 ;;		 -> ?_sprintf(2), 
  1498 ;;  ret             2    0        int 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  2    0[BANK1 ] int 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1508 ;;      Params:         0       0      10       0       0       0       0
  1509 ;;      Locals:         0       0       8       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0       0       0
  1511 ;;      Totals:         0       0      18       0       0       0       0
  1512 ;;Total ram usage:       18 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 18
  1515 ;; This function calls:
  1516 ;;		_vfprintf
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text1
  1523  002E3A                     __ptext1:
  1524                           	callstack 0
  1525  002E3A                     _sprintf:
  1526                           	callstack 12
  1527  002E3A  0E39               	movlw	low (?_sprintf+4)
  1528  002E3C  0101               	movlb	1	; () banked
  1529  002E3E  6F3F               	movwf	sprintf@ap& (0+255),b
  1530  002E40  0E01               	movlw	high (?_sprintf+4)
  1531  002E42  6F40               	movwf	(sprintf@ap+1)& (0+255),b
  1532  002E44  C135  F141         	movff	sprintf@s,sprintf@f
  1533  002E48  C136  F142         	movff	sprintf@s+1,sprintf@f+1
  1534  002E4C                     
  1535                           ; BSR set to: 1
  1536  002E4C  0E00               	movlw	0
  1537  002E4E  6F44               	movwf	(sprintf@f+3)& (0+255),b
  1538  002E50  0E00               	movlw	0
  1539  002E52  6F43               	movwf	(sprintf@f+2)& (0+255),b
  1540  002E54                     
  1541                           ; BSR set to: 1
  1542  002E54  0E00               	movlw	0
  1543  002E56  6F46               	movwf	(sprintf@f+5)& (0+255),b
  1544  002E58  0E00               	movlw	0
  1545  002E5A  6F45               	movwf	(sprintf@f+4)& (0+255),b
  1546  002E5C                     
  1547                           ; BSR set to: 1
  1548  002E5C  0E41               	movlw	low sprintf@f
  1549  002E5E  0100               	movlb	0	; () banked
  1550  002E60  6FE0               	movwf	vfprintf@fp& (0+255),b
  1551  002E62  0E01               	movlw	high sprintf@f
  1552  002E64  6FE1               	movwf	(vfprintf@fp+1)& (0+255),b
  1553  002E66  C137  F0E2         	movff	sprintf@fmt,vfprintf@fmt
  1554  002E6A  C138  F0E3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1555  002E6E  0E3F               	movlw	low sprintf@ap
  1556  002E70  6FE4               	movwf	vfprintf@ap& (0+255),b
  1557  002E72  0E01               	movlw	high sprintf@ap
  1558  002E74  6FE5               	movwf	(vfprintf@ap+1)& (0+255),b
  1559  002E76  EC25  F016         	call	_vfprintf	;wreg free
  1560  002E7A  0101               	movlb	1	; () banked
  1561  002E7C  5143               	movf	(sprintf@f+2)& (0+255),w,b
  1562  002E7E  2535               	addwf	sprintf@s& (0+255),w,b
  1563  002E80  6ED9               	movwf	fsr2l,c
  1564  002E82  5144               	movf	(sprintf@f+3)& (0+255),w,b
  1565  002E84  2136               	addwfc	(sprintf@s+1)& (0+255),w,b
  1566  002E86  6EDA               	movwf	fsr2h,c
  1567  002E88  0E00               	movlw	0
  1568  002E8A  6EDF               	movwf	indf2,c
  1569  002E8C                     
  1570                           ; BSR set to: 1
  1571  002E8C  0012               	return		;funcret
  1572  002E8E                     __end_of_sprintf:
  1573                           	callstack 0
  1574                           
  1575 ;; *************** function _vfprintf *****************
  1576 ;; Defined at:
  1577 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  fp              2   96[BANK0 ] PTR struct _IO_FILE
  1580 ;;		 -> sprintf@f(6), 
  1581 ;;  fmt             2   98[BANK0 ] PTR const unsigned char 
  1582 ;;		 -> STR_4(15), STR_3(15), STR_2(15), STR_1(16), 
  1583 ;;  ap              2  100[BANK0 ] PTR PTR void 
  1584 ;;		 -> sprintf@ap(2), 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  cfmt            2  102[BANK0 ] PTR unsigned char 
  1587 ;;		 -> STR_4(15), STR_3(15), STR_2(15), STR_1(16), 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  2   96[BANK0 ] int 
  1590 ;; Registers used:
  1591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1597 ;;      Params:         0       6       0       0       0       0       0
  1598 ;;      Locals:         0       2       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0
  1600 ;;      Totals:         0       8       0       0       0       0       0
  1601 ;;Total ram usage:        8 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 17
  1604 ;; This function calls:
  1605 ;;		_vfpfcnvrt
  1606 ;; This function is called by:
  1607 ;;		_sprintf
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text2
  1612  002C4A                     __ptext2:
  1613                           	callstack 0
  1614  002C4A                     _vfprintf:
  1615                           	callstack 12
  1616  002C4A                     
  1617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1618  002C4A  C0E2  F0E6         	movff	vfprintf@fmt,vfprintf@cfmt
  1619  002C4E  C0E3  F0E7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1620  002C52                     
  1621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1622  002C52  0E00               	movlw	0
  1623  002C54  0101               	movlb	1	; () banked
  1624  002C56  6F01               	movwf	(_nout+1)& (0+255),b
  1625  002C58  0E00               	movlw	0
  1626  002C5A  6F00               	movwf	_nout& (0+255),b
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1629  002C5C  EF47  F016         	goto	l3757
  1630  002C60                     l3755:
  1631                           
  1632                           ; BSR set to: 1
  1633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1634  002C60  C0E0  F0CA         	movff	vfprintf@fp,vfpfcnvrt@fp
  1635  002C64  C0E1  F0CB         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1636  002C68  0EE6               	movlw	low vfprintf@cfmt
  1637  002C6A  0100               	movlb	0	; () banked
  1638  002C6C  6FCC               	movwf	vfpfcnvrt@fmt& (0+255),b
  1639  002C6E  0E00               	movlw	high vfprintf@cfmt
  1640  002C70  6FCD               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1641  002C72  C0E4  F0CE         	movff	vfprintf@ap,vfpfcnvrt@ap
  1642  002C76  C0E5  F0CF         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1643  002C7A  ECC0  F006         	call	_vfpfcnvrt	;wreg free
  1644  002C7E  0100               	movlb	0	; () banked
  1645  002C80  51CA               	movf	?_vfpfcnvrt& (0+255),w,b
  1646  002C82  0101               	movlb	1	; () banked
  1647  002C84  2700               	addwf	_nout& (0+255),f,b
  1648  002C86  0100               	movlb	0	; () banked
  1649  002C88  51CB               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1650  002C8A  0101               	movlb	1	; () banked
  1651  002C8C  2301               	addwfc	(_nout+1)& (0+255),f,b
  1652  002C8E                     l3757:
  1653                           
  1654                           ; BSR set to: 1
  1655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1656  002C8E  C0E6  FFF6         	movff	vfprintf@cfmt,tblptrl
  1657  002C92  C0E7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1658  002C96                     	if	0	;tblptru may be non-zero
  1659  002C96                     	endif
  1660  002C96                     	if	0	;tblptru may be non-zero
  1661  002C96                     	endif
  1662  002C96  0008               	tblrd		*
  1663  002C98  50F5               	movf	tablat,w,c
  1664  002C9A  0900               	iorlw	0
  1665  002C9C  A4D8               	btfss	status,2,c
  1666  002C9E  EF53  F016         	goto	u3501
  1667  002CA2  EF55  F016         	goto	u3500
  1668  002CA6                     u3501:
  1669  002CA6  EF30  F016         	goto	l3755
  1670  002CAA                     u3500:
  1671  002CAA                     
  1672                           ; BSR set to: 1
  1673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1674  002CAA  C100  F0E0         	movff	_nout,?_vfprintf
  1675  002CAE  C101  F0E1         	movff	_nout+1,?_vfprintf+1
  1676  002CB2                     
  1677                           ; BSR set to: 1
  1678  002CB2  0012               	return		;funcret
  1679  002CB4                     __end_of_vfprintf:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _vfpfcnvrt *****************
  1683 ;; Defined at:
  1684 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
  1687 ;;		 -> sprintf@f(6), 
  1688 ;;  fmt             2   76[BANK0 ] PTR PTR unsigned char 
  1689 ;;		 -> vfprintf@cfmt(2), 
  1690 ;;  ap              2   78[BANK0 ] PTR PTR void 
  1691 ;;		 -> sprintf@ap(2), 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  ll              8   84[BANK0 ] long long 
  1694 ;;  llu             8    0        unsigned long long 
  1695 ;;  f               4    0        unsigned long long 
  1696 ;;  vp              3    0        PTR void 
  1697 ;;  ct              3    0        unsigned char [3]
  1698 ;;  cp              3    0        PTR unsigned char 
  1699 ;;  done            2   92[BANK0 ] int 
  1700 ;;  i               2    0        int 
  1701 ;;  c               1    0        unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  2   74[BANK0 ] int 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1711 ;;      Params:         0       6       0       0       0       0       0
  1712 ;;      Locals:         0      12       0       0       0       0       0
  1713 ;;      Temps:          0       4       0       0       0       0       0
  1714 ;;      Totals:         0      22       0       0       0       0       0
  1715 ;;Total ram usage:       22 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 16
  1718 ;; This function calls:
  1719 ;;		_atoi
  1720 ;;		_dtoa
  1721 ;;		_fputc
  1722 ;;		_isdigit
  1723 ;; This function is called by:
  1724 ;;		_vfprintf
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text3
  1729  000D80                     __ptext3:
  1730                           	callstack 0
  1731  000D80                     _vfpfcnvrt:
  1732                           	callstack 12
  1733  000D80                     
  1734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1735  000D80  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1736  000D84  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1737  000D88  CFDE FFF6          	movff	postinc2,tblptrl
  1738  000D8C  CFDD FFF7          	movff	postdec2,tblptrh
  1739  000D90                     	if	0	;tblptru may be non-zero
  1740  000D90                     	endif
  1741  000D90                     	if	0	;tblptru may be non-zero
  1742  000D90                     	endif
  1743  000D90  0008               	tblrd		*
  1744  000D92  50F5               	movf	tablat,w,c
  1745  000D94  0A25               	xorlw	37
  1746  000D96  A4D8               	btfss	status,2,c
  1747  000D98  EFD0  F006         	goto	u3361
  1748  000D9C  EFD2  F006         	goto	u3360
  1749  000DA0                     u3361:
  1750  000DA0  EF5B  F008         	goto	l3647
  1751  000DA4                     u3360:
  1752  000DA4                     
  1753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1754  000DA4  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1755  000DA8  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1756  000DAC  2ADE               	incf	postinc2,f,c
  1757  000DAE  0E00               	movlw	0
  1758  000DB0  22DD               	addwfc	postdec2,f,c
  1759  000DB2                     
  1760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1761  000DB2  0E00               	movlw	0
  1762  000DB4  0100               	movlb	0	; () banked
  1763  000DB6  6FEB               	movwf	(_width+1)& (0+255),b
  1764  000DB8  0E00               	movlw	0
  1765  000DBA  6FEA               	movwf	_width& (0+255),b
  1766  000DBC  C0EA  F0EE         	movff	_width,_flags
  1767  000DC0  C0EB  F0EF         	movff	_width+1,_flags+1
  1768  000DC4                     
  1769                           ; BSR set to: 0
  1770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1771  000DC4  69EC               	setf	_prec& (0+255),b
  1772  000DC6  69ED               	setf	(_prec+1)& (0+255),b
  1773  000DC8                     
  1774                           ; BSR set to: 0
  1775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1776  000DC8  0E00               	movlw	0
  1777  000DCA  6FDD               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1778  000DCC  0E00               	movlw	0
  1779  000DCE  6FDC               	movwf	vfpfcnvrt@done& (0+255),b
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1782  000DD0  EF30  F007         	goto	l3599
  1783  000DD4                     l3573:
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1787  000DD4  81EE               	bsf	_flags& (0+255),0,b
  1788  000DD6                     l3575:
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1792  000DD6  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1793  000DDA  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1794  000DDE  2ADE               	incf	postinc2,f,c
  1795  000DE0  0E00               	movlw	0
  1796  000DE2  22DD               	addwfc	postdec2,f,c
  1797                           
  1798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1799  000DE4  EF30  F007         	goto	l3599
  1800  000DE8                     l3577:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1804  000DE8  83EE               	bsf	_flags& (0+255),1,b
  1805  000DEA  EFEB  F006         	goto	l3575
  1806  000DEE                     l3581:
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1810  000DEE  85EE               	bsf	_flags& (0+255),2,b
  1811  000DF0  EFEB  F006         	goto	l3575
  1812  000DF4                     l3585:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1816  000DF4  87EE               	bsf	_flags& (0+255),3,b
  1817  000DF6  EFEB  F006         	goto	l3575
  1818  000DFA                     l3589:
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1822  000DFA  89EE               	bsf	_flags& (0+255),4,b
  1823  000DFC  EFEB  F006         	goto	l3575
  1824  000E00                     l3593:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1828  000E00  0E00               	movlw	0
  1829  000E02  6FDD               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1830  000E04  0E01               	movlw	1
  1831  000E06  6FDC               	movwf	vfpfcnvrt@done& (0+255),b
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1834  000E08  EF30  F007         	goto	l3599
  1835  000E0C                     l3597:
  1836                           
  1837                           ; BSR set to: 0
  1838  000E0C  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1839  000E10  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1840  000E14  CFDE FFF6          	movff	postinc2,tblptrl
  1841  000E18  CFDD FFF7          	movff	postdec2,tblptrh
  1842  000E1C                     	if	0	;tblptru may be non-zero
  1843  000E1C                     	endif
  1844  000E1C                     	if	0	;tblptru may be non-zero
  1845  000E1C                     	endif
  1846  000E1C  0008               	tblrd		*
  1847  000E1E  50F5               	movf	tablat,w,c
  1848  000E20  6FD0               	movwf	??_vfpfcnvrt& (0+255),b
  1849  000E22  6BD1               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1850                           
  1851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1852                           ; Switch size 1, requested type "simple"
  1853                           ; Number of cases is 1, Range of values is 0 to 0
  1854                           ; switch strategies available:
  1855                           ; Name         Instructions Cycles
  1856                           ; simple_byte            4     3 (average)
  1857                           ;	Chosen strategy is simple_byte
  1858  000E24  51D1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1859  000E26  0A00               	xorlw	0	; case 0
  1860  000E28  B4D8               	btfsc	status,2,c
  1861  000E2A  EF19  F007         	goto	l4303
  1862  000E2E  EF00  F007         	goto	l3593
  1863  000E32                     l4303:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ; Switch size 1, requested type "simple"
  1867                           ; Number of cases is 5, Range of values is 32 to 48
  1868                           ; switch strategies available:
  1869                           ; Name         Instructions Cycles
  1870                           ; simple_byte           16     9 (average)
  1871                           ;	Chosen strategy is simple_byte
  1872  000E32  51D0               	movf	??_vfpfcnvrt& (0+255),w,b
  1873  000E34  0A20               	xorlw	32	; case 32
  1874  000E36  B4D8               	btfsc	status,2,c
  1875  000E38  EFFA  F006         	goto	l3585
  1876  000E3C  0A03               	xorlw	3	; case 35
  1877  000E3E  B4D8               	btfsc	status,2,c
  1878  000E40  EFFD  F006         	goto	l3589
  1879  000E44  0A08               	xorlw	8	; case 43
  1880  000E46  B4D8               	btfsc	status,2,c
  1881  000E48  EFF7  F006         	goto	l3581
  1882  000E4C  0A06               	xorlw	6	; case 45
  1883  000E4E  B4D8               	btfsc	status,2,c
  1884  000E50  EFEA  F006         	goto	l3573
  1885  000E54  0A1D               	xorlw	29	; case 48
  1886  000E56  B4D8               	btfsc	status,2,c
  1887  000E58  EFF4  F006         	goto	l3577
  1888  000E5C  EF00  F007         	goto	l3593
  1889  000E60                     l3599:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1893  000E60  51DC               	movf	vfpfcnvrt@done& (0+255),w,b
  1894  000E62  11DD               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1895  000E64  B4D8               	btfsc	status,2,c
  1896  000E66  EF37  F007         	goto	u3371
  1897  000E6A  EF39  F007         	goto	u3370
  1898  000E6E                     u3371:
  1899  000E6E  EF06  F007         	goto	l3597
  1900  000E72                     u3370:
  1901  000E72                     
  1902                           ; BSR set to: 0
  1903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1904  000E72  A1EE               	btfss	_flags& (0+255),0,b
  1905  000E74  EF3E  F007         	goto	u3381
  1906  000E78  EF40  F007         	goto	u3380
  1907  000E7C                     u3381:
  1908  000E7C  EF41  F007         	goto	l3603
  1909  000E80                     u3380:
  1910  000E80                     
  1911                           ; BSR set to: 0
  1912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1913  000E80  93EE               	bcf	_flags& (0+255),1,b
  1914  000E82                     l3603:
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1918  000E82  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1919  000E86  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1920  000E8A  CFDE FFF6          	movff	postinc2,tblptrl
  1921  000E8E  CFDD FFF7          	movff	postdec2,tblptrh
  1922  000E92                     	if	0	;tblptru may be non-zero
  1923  000E92                     	endif
  1924  000E92                     	if	0	;tblptru may be non-zero
  1925  000E92                     	endif
  1926  000E92  0008               	tblrd		*
  1927  000E94  50F5               	movf	tablat,w,c
  1928  000E96  0A2A               	xorlw	42
  1929  000E98  A4D8               	btfss	status,2,c
  1930  000E9A  EF51  F007         	goto	u3391
  1931  000E9E  EF53  F007         	goto	u3390
  1932  000EA2                     u3391:
  1933  000EA2  EF7C  F007         	goto	l3611
  1934  000EA6                     u3390:
  1935  000EA6                     
  1936                           ; BSR set to: 0
  1937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1938  000EA6  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1939  000EAA  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1940  000EAE  2ADE               	incf	postinc2,f,c
  1941  000EB0  0E00               	movlw	0
  1942  000EB2  22DD               	addwfc	postdec2,f,c
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1945  000EB4  C0CE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1946  000EB8  C0CF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1947  000EBC  CFDF F0D0          	movff	indf2,??_vfpfcnvrt
  1948  000EC0  0E02               	movlw	2
  1949  000EC2  26DE               	addwf	postinc2,f,c
  1950  000EC4  CFDF F0D1          	movff	indf2,??_vfpfcnvrt+1
  1951  000EC8  0E00               	movlw	0
  1952  000ECA  22DD               	addwfc	postdec2,f,c
  1953  000ECC  C0D0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1954  000ED0  C0D1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1955  000ED4  CFDE F0EA          	movff	postinc2,_width
  1956  000ED8  CFDD F0EB          	movff	postdec2,_width+1
  1957  000EDC                     
  1958                           ; BSR set to: 0
  1959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1960  000EDC  BFEB               	btfsc	(_width+1)& (0+255),7,b
  1961  000EDE  EF75  F007         	goto	u3400
  1962  000EE2  EF73  F007         	goto	u3401
  1963  000EE6                     u3401:
  1964  000EE6  EFC0  F007         	goto	l3621
  1965  000EEA                     u3400:
  1966  000EEA                     
  1967                           ; BSR set to: 0
  1968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1969  000EEA  81EE               	bsf	_flags& (0+255),0,b
  1970                           
  1971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1972  000EEC  6DEA               	negf	_width& (0+255),b
  1973  000EEE  1FEB               	comf	(_width+1)& (0+255),f,b
  1974  000EF0  B0D8               	btfsc	status,0,c
  1975  000EF2  2BEB               	incf	(_width+1)& (0+255),f,b
  1976  000EF4  EFC0  F007         	goto	l3621
  1977  000EF8                     l3611:
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1981  000EF8  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1982  000EFC  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1983  000F00  CFDE F091          	movff	postinc2,atoi@s
  1984  000F04  CFDD F092          	movff	postdec2,atoi@s+1
  1985  000F08  EC5C  F00B         	call	_atoi	;wreg free
  1986  000F0C  C091  F0EA         	movff	?_atoi,_width
  1987  000F10  C092  F0EB         	movff	?_atoi+1,_width+1
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1990  000F14  EF93  F007         	goto	l3615
  1991  000F18                     l3613:
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1995  000F18  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1996  000F1C  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1997  000F20  2ADE               	incf	postinc2,f,c
  1998  000F22  0E00               	movlw	0
  1999  000F24  22DD               	addwfc	postdec2,f,c
  2000  000F26                     l3615:
  2001  000F26  0ED0               	movlw	208
  2002  000F28  0100               	movlb	0	; () banked
  2003  000F2A  6FD0               	movwf	??_vfpfcnvrt& (0+255),b
  2004  000F2C  0EFF               	movlw	255
  2005  000F2E  6FD1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2006  000F30  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2007  000F34  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2008  000F38  CFDE FFF6          	movff	postinc2,tblptrl
  2009  000F3C  CFDD FFF7          	movff	postdec2,tblptrh
  2010  000F40                     	if	0	;tblptru may be non-zero
  2011  000F40                     	endif
  2012  000F40                     	if	0	;tblptru may be non-zero
  2013  000F40                     	endif
  2014  000F40  0008               	tblrd		*
  2015  000F42  50F5               	movf	tablat,w,c
  2016  000F44  6FD2               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2017  000F46  6BD3               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2018  000F48  51D0               	movf	??_vfpfcnvrt& (0+255),w,b
  2019  000F4A  27D2               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2020  000F4C  51D1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2021  000F4E  23D3               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2022  000F50  51D3               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2023  000F52  E10A               	bnz	u3410
  2024  000F54  0E0A               	movlw	10
  2025  000F56  5DD2               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2026  000F58  A0D8               	btfss	status,0,c
  2027  000F5A  EFB1  F007         	goto	u3411
  2028  000F5E  EFB4  F007         	goto	u3410
  2029  000F62                     u3411:
  2030  000F62  0E01               	movlw	1
  2031  000F64  EFB5  F007         	goto	u3420
  2032  000F68                     u3410:
  2033  000F68  0E00               	movlw	0
  2034  000F6A                     u3420:
  2035  000F6A  6FDE               	movwf	_vfpfcnvrt$960& (0+255),b
  2036  000F6C  6BDF               	clrf	(_vfpfcnvrt$960+1)& (0+255),b
  2037  000F6E                     
  2038                           ; BSR set to: 0
  2039  000F6E  51DE               	movf	_vfpfcnvrt$960& (0+255),w,b
  2040  000F70  11DF               	iorwf	(_vfpfcnvrt$960+1)& (0+255),w,b
  2041  000F72  A4D8               	btfss	status,2,c
  2042  000F74  EFBE  F007         	goto	u3431
  2043  000F78  EFC0  F007         	goto	u3430
  2044  000F7C                     u3431:
  2045  000F7C  EF8C  F007         	goto	l3613
  2046  000F80                     u3430:
  2047  000F80                     l3621:
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2051  000F80  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2052  000F84  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2053  000F88  CFDE FFF6          	movff	postinc2,tblptrl
  2054  000F8C  CFDD FFF7          	movff	postdec2,tblptrh
  2055  000F90                     	if	0	;tblptru may be non-zero
  2056  000F90                     	endif
  2057  000F90                     	if	0	;tblptru may be non-zero
  2058  000F90                     	endif
  2059  000F90  0008               	tblrd		*
  2060  000F92  50F5               	movf	tablat,w,c
  2061  000F94  0A64               	xorlw	100
  2062  000F96  B4D8               	btfsc	status,2,c
  2063  000F98  EFD0  F007         	goto	u3441
  2064  000F9C  EFD2  F007         	goto	u3440
  2065  000FA0                     u3441:
  2066  000FA0  EFE4  F007         	goto	l3625
  2067  000FA4                     u3440:
  2068  000FA4                     
  2069                           ; BSR set to: 0
  2070  000FA4  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2071  000FA8  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2072  000FAC  CFDE FFF6          	movff	postinc2,tblptrl
  2073  000FB0  CFDD FFF7          	movff	postdec2,tblptrh
  2074  000FB4                     	if	0	;tblptru may be non-zero
  2075  000FB4                     	endif
  2076  000FB4                     	if	0	;tblptru may be non-zero
  2077  000FB4                     	endif
  2078  000FB4  0008               	tblrd		*
  2079  000FB6  50F5               	movf	tablat,w,c
  2080  000FB8  0A69               	xorlw	105
  2081  000FBA  A4D8               	btfss	status,2,c
  2082  000FBC  EFE2  F007         	goto	u3451
  2083  000FC0  EFE4  F007         	goto	u3450
  2084  000FC4                     u3451:
  2085  000FC4  EF24  F008         	goto	l3631
  2086  000FC8                     u3450:
  2087  000FC8                     l3625:
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2091  000FC8  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2092  000FCC  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2093  000FD0  2ADE               	incf	postinc2,f,c
  2094  000FD2  0E00               	movlw	0
  2095  000FD4  22DD               	addwfc	postdec2,f,c
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2098  000FD6  C0CE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2099  000FDA  C0CF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2100  000FDE  CFDF F0D0          	movff	indf2,??_vfpfcnvrt
  2101  000FE2  0E02               	movlw	2
  2102  000FE4  26DE               	addwf	postinc2,f,c
  2103  000FE6  CFDF F0D1          	movff	indf2,??_vfpfcnvrt+1
  2104  000FEA  0E00               	movlw	0
  2105  000FEC  22DD               	addwfc	postdec2,f,c
  2106  000FEE  C0D0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2107  000FF2  C0D1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2108  000FF6  CFDE F0D4          	movff	postinc2,vfpfcnvrt@ll
  2109  000FFA  CFDD F0D5          	movff	postdec2,vfpfcnvrt@ll+1
  2110  000FFE  0E00               	movlw	0
  2111  001000  BFD5               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2112  001002  0EFF               	movlw	-1
  2113  001004  6FD6               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2114  001006  6FD7               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2115  001008  6FD8               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2116  00100A  6FD9               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2117  00100C  6FDA               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2118  00100E  6FDB               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2119  001010                     
  2120                           ; BSR set to: 0
  2121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2122  001010  C0CA  F0A6         	movff	vfpfcnvrt@fp,dtoa@fp
  2123  001014  C0CB  F0A7         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2124  001018  C0D4  F0A8         	movff	vfpfcnvrt@ll,dtoa@d
  2125  00101C  C0D5  F0A9         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2126  001020  C0D6  F0AA         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2127  001024  C0D7  F0AB         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2128  001028  C0D8  F0AC         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2129  00102C  C0D9  F0AD         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2130  001030  C0DA  F0AE         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2131  001034  C0DB  F0AF         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2132  001038  EC78  F008         	call	_dtoa	;wreg free
  2133  00103C  C0A6  F0CA         	movff	?_dtoa,?_vfpfcnvrt
  2134  001040  C0A7  F0CB         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2135  001044  EF77  F008         	goto	l1114
  2136  001048                     l3631:
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2140  001048  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2141  00104C  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2142  001050  CFDE FFF6          	movff	postinc2,tblptrl
  2143  001054  CFDD FFF7          	movff	postdec2,tblptrh
  2144  001058                     	if	0	;tblptru may be non-zero
  2145  001058                     	endif
  2146  001058                     	if	0	;tblptru may be non-zero
  2147  001058                     	endif
  2148  001058  0008               	tblrd		*
  2149  00105A  50F5               	movf	tablat,w,c
  2150  00105C  0A25               	xorlw	37
  2151  00105E  A4D8               	btfss	status,2,c
  2152  001060  EF34  F008         	goto	u3461
  2153  001064  EF36  F008         	goto	u3460
  2154  001068                     u3461:
  2155  001068  EF4E  F008         	goto	l3641
  2156  00106C                     u3460:
  2157  00106C                     
  2158                           ; BSR set to: 0
  2159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2160  00106C  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2161  001070  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2162  001074  2ADE               	incf	postinc2,f,c
  2163  001076  0E00               	movlw	0
  2164  001078  22DD               	addwfc	postdec2,f,c
  2165  00107A                     
  2166                           ; BSR set to: 0
  2167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2168  00107A  0E00               	movlw	0
  2169  00107C  6F8C               	movwf	(fputc@c+1)& (0+255),b
  2170  00107E  0E25               	movlw	37
  2171  001080  6F8B               	movwf	fputc@c& (0+255),b
  2172  001082  C0CA  F08D         	movff	vfpfcnvrt@fp,fputc@fp
  2173  001086  C0CB  F08E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2174  00108A  EC37  F012         	call	_fputc	;wreg free
  2175  00108E                     l3637:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2178  00108E  0E00               	movlw	0
  2179  001090  0100               	movlb	0	; () banked
  2180  001092  6FCB               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2181  001094  0E01               	movlw	1
  2182  001096  6FCA               	movwf	?_vfpfcnvrt& (0+255),b
  2183  001098  EF77  F008         	goto	l1114
  2184  00109C                     l3641:
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2188  00109C  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2189  0010A0  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2190  0010A4  2ADE               	incf	postinc2,f,c
  2191  0010A6  0E00               	movlw	0
  2192  0010A8  22DD               	addwfc	postdec2,f,c
  2193  0010AA                     
  2194                           ; BSR set to: 0
  2195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2196  0010AA  0E00               	movlw	0
  2197  0010AC  6FCB               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2198  0010AE  0E00               	movlw	0
  2199  0010B0  6FCA               	movwf	?_vfpfcnvrt& (0+255),b
  2200  0010B2  EF77  F008         	goto	l1114
  2201  0010B6                     l3647:
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2204  0010B6  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2205  0010BA  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2206  0010BE  CFDE FFF6          	movff	postinc2,tblptrl
  2207  0010C2  CFDD FFF7          	movff	postdec2,tblptrh
  2208  0010C6                     	if	0	;tblptru may be non-zero
  2209  0010C6                     	endif
  2210  0010C6                     	if	0	;tblptru may be non-zero
  2211  0010C6                     	endif
  2212  0010C6  0008               	tblrd		*
  2213  0010C8  50F5               	movf	tablat,w,c
  2214  0010CA  0100               	movlb	0	; () banked
  2215  0010CC  6F8B               	movwf	fputc@c& (0+255),b
  2216  0010CE  6B8C               	clrf	(fputc@c+1)& (0+255),b
  2217  0010D0  C0CA  F08D         	movff	vfpfcnvrt@fp,fputc@fp
  2218  0010D4  C0CB  F08E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2219  0010D8  EC37  F012         	call	_fputc	;wreg free
  2220  0010DC                     
  2221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2222  0010DC  C0CC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2223  0010E0  C0CD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2224  0010E4  2ADE               	incf	postinc2,f,c
  2225  0010E6  0E00               	movlw	0
  2226  0010E8  22DD               	addwfc	postdec2,f,c
  2227  0010EA  EF47  F008         	goto	l3637
  2228  0010EE                     l1114:
  2229  0010EE  0012               	return		;funcret
  2230  0010F0                     __end_of_vfpfcnvrt:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _dtoa *****************
  2234 ;; Defined at:
  2235 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  fp              2   38[BANK0 ] PTR struct _IO_FILE
  2238 ;;		 -> sprintf@f(6), 
  2239 ;;  d               8   40[BANK0 ] long long 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  n               8   64[BANK0 ] long long 
  2242 ;;  i               2   72[BANK0 ] int 
  2243 ;;  s               2   62[BANK0 ] int 
  2244 ;;  w               2   60[BANK0 ] int 
  2245 ;;  p               2   58[BANK0 ] int 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  2   38[BANK0 ] int 
  2248 ;; Registers used:
  2249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2255 ;;      Params:         0      10       0       0       0       0       0
  2256 ;;      Locals:         0      18       0       0       0       0       0
  2257 ;;      Temps:          0       8       0       0       0       0       0
  2258 ;;      Totals:         0      36       0       0       0       0       0
  2259 ;;Total ram usage:       36 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 15
  2262 ;; This function calls:
  2263 ;;		___aodiv
  2264 ;;		___aomod
  2265 ;;		_abs
  2266 ;;		_pad
  2267 ;; This function is called by:
  2268 ;;		_vfpfcnvrt
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text4
  2273  0010F0                     __ptext4:
  2274                           	callstack 0
  2275  0010F0                     _dtoa:
  2276                           	callstack 12
  2277  0010F0                     
  2278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2279  0010F0  C0A8  F0C0         	movff	dtoa@d,dtoa@n
  2280  0010F4  C0A9  F0C1         	movff	dtoa@d+1,dtoa@n+1
  2281  0010F8  C0AA  F0C2         	movff	dtoa@d+2,dtoa@n+2
  2282  0010FC  C0AB  F0C3         	movff	dtoa@d+3,dtoa@n+3
  2283  001100  C0AC  F0C4         	movff	dtoa@d+4,dtoa@n+4
  2284  001104  C0AD  F0C5         	movff	dtoa@d+5,dtoa@n+5
  2285  001108  C0AE  F0C6         	movff	dtoa@d+6,dtoa@n+6
  2286  00110C  C0AF  F0C7         	movff	dtoa@d+7,dtoa@n+7
  2287  001110                     
  2288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2289  001110  0100               	movlb	0	; () banked
  2290  001112  BFC7               	btfsc	(dtoa@n+7)& (0+255),7,b
  2291  001114  EF8E  F008         	goto	u3061
  2292  001118  EF91  F008         	goto	u3060
  2293  00111C                     u3061:
  2294  00111C  0E01               	movlw	1
  2295  00111E  EF92  F008         	goto	u3070
  2296  001122                     u3060:
  2297  001122  0E00               	movlw	0
  2298  001124                     u3070:
  2299  001124  6FBE               	movwf	dtoa@s& (0+255),b
  2300  001126  6BBF               	clrf	(dtoa@s+1)& (0+255),b
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2303  001128  51BE               	movf	dtoa@s& (0+255),w,b
  2304  00112A  11BF               	iorwf	(dtoa@s+1)& (0+255),w,b
  2305  00112C  B4D8               	btfsc	status,2,c
  2306  00112E  EF9B  F008         	goto	u3081
  2307  001132  EF9D  F008         	goto	u3080
  2308  001136                     u3081:
  2309  001136  EFAD  F008         	goto	l3359
  2310  00113A                     u3080:
  2311  00113A                     
  2312                           ; BSR set to: 0
  2313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2314  00113A  1FC7               	comf	(dtoa@n+7)& (0+255),f,b
  2315  00113C  1FC6               	comf	(dtoa@n+6)& (0+255),f,b
  2316  00113E  1FC5               	comf	(dtoa@n+5)& (0+255),f,b
  2317  001140  1FC4               	comf	(dtoa@n+4)& (0+255),f,b
  2318  001142  1FC3               	comf	(dtoa@n+3)& (0+255),f,b
  2319  001144  1FC2               	comf	(dtoa@n+2)& (0+255),f,b
  2320  001146  1FC1               	comf	(dtoa@n+1)& (0+255),f,b
  2321  001148  6DC0               	negf	dtoa@n& (0+255),b
  2322  00114A  0E00               	movlw	0
  2323  00114C  23C1               	addwfc	(dtoa@n+1)& (0+255),f,b
  2324  00114E  23C2               	addwfc	(dtoa@n+2)& (0+255),f,b
  2325  001150  23C3               	addwfc	(dtoa@n+3)& (0+255),f,b
  2326  001152  23C4               	addwfc	(dtoa@n+4)& (0+255),f,b
  2327  001154  23C5               	addwfc	(dtoa@n+5)& (0+255),f,b
  2328  001156  23C6               	addwfc	(dtoa@n+6)& (0+255),f,b
  2329  001158  23C7               	addwfc	(dtoa@n+7)& (0+255),f,b
  2330  00115A                     l3359:
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2334  00115A  BFED               	btfsc	(_prec+1)& (0+255),7,b
  2335  00115C  EFB2  F008         	goto	u3091
  2336  001160  EFB4  F008         	goto	u3090
  2337  001164                     u3091:
  2338  001164  EFB5  F008         	goto	l3363
  2339  001168                     u3090:
  2340  001168                     
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2343  001168  93EE               	bcf	_flags& (0+255),1,b
  2344  00116A                     l3363:
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2348  00116A  BFED               	btfsc	(_prec+1)& (0+255),7,b
  2349  00116C  EFC2  F008         	goto	u3100
  2350  001170  51ED               	movf	(_prec+1)& (0+255),w,b
  2351  001172  E106               	bnz	u3101
  2352  001174  05EC               	decf	_prec& (0+255),w,b
  2353  001176  B0D8               	btfsc	status,0,c
  2354  001178  EFC0  F008         	goto	u3101
  2355  00117C  EFC2  F008         	goto	u3100
  2356  001180                     u3101:
  2357  001180  EFC8  F008         	goto	l1065
  2358  001184                     u3100:
  2359  001184                     
  2360                           ; BSR set to: 0
  2361  001184  0E00               	movlw	0
  2362  001186  6FBB               	movwf	(dtoa@p+1)& (0+255),b
  2363  001188  0E01               	movlw	1
  2364  00118A  6FBA               	movwf	dtoa@p& (0+255),b
  2365  00118C  EFCC  F008         	goto	l1067
  2366  001190                     l1065:
  2367                           
  2368                           ; BSR set to: 0
  2369  001190  C0EC  F0BA         	movff	_prec,dtoa@p
  2370  001194  C0ED  F0BB         	movff	_prec+1,dtoa@p+1
  2371  001198                     l1067:
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2375  001198  C0EA  F0BC         	movff	_width,dtoa@w
  2376  00119C  C0EB  F0BD         	movff	_width+1,dtoa@w+1
  2377  0011A0                     
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2380  0011A0  51BE               	movf	dtoa@s& (0+255),w,b
  2381  0011A2  11BF               	iorwf	(dtoa@s+1)& (0+255),w,b
  2382  0011A4  A4D8               	btfss	status,2,c
  2383  0011A6  EFD7  F008         	goto	u3111
  2384  0011AA  EFD9  F008         	goto	u3110
  2385  0011AE                     u3111:
  2386  0011AE  EFE0  F008         	goto	l3371
  2387  0011B2                     u3110:
  2388  0011B2                     
  2389                           ; BSR set to: 0
  2390  0011B2  A5EE               	btfss	_flags& (0+255),2,b
  2391  0011B4  EFDE  F008         	goto	u3121
  2392  0011B8  EFE0  F008         	goto	u3120
  2393  0011BC                     u3121:
  2394  0011BC  EFE3  F008         	goto	l3373
  2395  0011C0                     u3120:
  2396  0011C0                     l3371:
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2400  0011C0  07BC               	decf	dtoa@w& (0+255),f,b
  2401  0011C2  A0D8               	btfss	status,0,c
  2402  0011C4  07BD               	decf	(dtoa@w+1)& (0+255),f,b
  2403  0011C6                     l3373:
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2407  0011C6  0E00               	movlw	0
  2408  0011C8  6FC9               	movwf	(dtoa@i+1)& (0+255),b
  2409  0011CA  0E1F               	movlw	31
  2410  0011CC  6FC8               	movwf	dtoa@i& (0+255),b
  2411  0011CE                     
  2412                           ; BSR set to: 0
  2413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2414  0011CE  0E00               	movlw	0
  2415  0011D0  0101               	movlb	1	; () banked
  2416  0011D2  6F24               	movwf	(_dbuf+31)& (0+255),b
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2419  0011D4  EF69  F009         	goto	l3387
  2420  0011D8                     l3377:
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2424  0011D8  07C8               	decf	dtoa@i& (0+255),f,b
  2425  0011DA  A0D8               	btfss	status,0,c
  2426  0011DC  07C9               	decf	(dtoa@i+1)& (0+255),f,b
  2427  0011DE                     
  2428                           ; BSR set to: 0
  2429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2430  0011DE  0E05               	movlw	low _dbuf
  2431  0011E0  25C8               	addwf	dtoa@i& (0+255),w,b
  2432  0011E2  6ED9               	movwf	fsr2l,c
  2433  0011E4  0E01               	movlw	high _dbuf
  2434  0011E6  21C9               	addwfc	(dtoa@i+1)& (0+255),w,b
  2435  0011E8  6EDA               	movwf	fsr2h,c
  2436  0011EA  C0C0  F08A         	movff	dtoa@n,___aomod@dividend
  2437  0011EE  C0C1  F08B         	movff	dtoa@n+1,___aomod@dividend+1
  2438  0011F2  C0C2  F08C         	movff	dtoa@n+2,___aomod@dividend+2
  2439  0011F6  C0C3  F08D         	movff	dtoa@n+3,___aomod@dividend+3
  2440  0011FA  C0C4  F08E         	movff	dtoa@n+4,___aomod@dividend+4
  2441  0011FE  C0C5  F08F         	movff	dtoa@n+5,___aomod@dividend+5
  2442  001202  C0C6  F090         	movff	dtoa@n+6,___aomod@dividend+6
  2443  001206  C0C7  F091         	movff	dtoa@n+7,___aomod@dividend+7
  2444  00120A  0E0A               	movlw	10
  2445  00120C  6F92               	movwf	___aomod@divisor& (0+255),b
  2446  00120E  0E00               	movlw	0
  2447  001210  6F93               	movwf	(___aomod@divisor+1)& (0+255),b
  2448  001212  0E00               	movlw	0
  2449  001214  6F94               	movwf	(___aomod@divisor+2)& (0+255),b
  2450  001216  0E00               	movlw	0
  2451  001218  6F95               	movwf	(___aomod@divisor+3)& (0+255),b
  2452  00121A  0E00               	movlw	0
  2453  00121C  6F96               	movwf	(___aomod@divisor+4)& (0+255),b
  2454  00121E  0E00               	movlw	0
  2455  001220  6F97               	movwf	(___aomod@divisor+5)& (0+255),b
  2456  001222  0E00               	movlw	0
  2457  001224  6F98               	movwf	(___aomod@divisor+6)& (0+255),b
  2458  001226  0E00               	movlw	0
  2459  001228  6F99               	movwf	(___aomod@divisor+7)& (0+255),b
  2460  00122A  EC31  F00F         	call	___aomod	;wreg free
  2461  00122E  C08A  F0B0         	movff	?___aomod,??_dtoa
  2462  001232  C08B  F0B1         	movff	?___aomod+1,??_dtoa+1
  2463  001236  C08C  F0B2         	movff	?___aomod+2,??_dtoa+2
  2464  00123A  C08D  F0B3         	movff	?___aomod+3,??_dtoa+3
  2465  00123E  C08E  F0B4         	movff	?___aomod+4,??_dtoa+4
  2466  001242  C08F  F0B5         	movff	?___aomod+5,??_dtoa+5
  2467  001246  C090  F0B6         	movff	?___aomod+6,??_dtoa+6
  2468  00124A  C091  F0B7         	movff	?___aomod+7,??_dtoa+7
  2469  00124E  C0B0  F09C         	movff	??_dtoa,abs@a
  2470  001252  C0B2  F09D         	movff	??_dtoa+2,abs@a+1
  2471  001256  EC52  F018         	call	_abs	;wreg free
  2472  00125A  0100               	movlb	0	; () banked
  2473  00125C  519C               	movf	?_abs& (0+255),w,b
  2474  00125E  0F30               	addlw	48
  2475  001260  6EDF               	movwf	indf2,c
  2476  001262                     
  2477                           ; BSR set to: 0
  2478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2479  001262  07BA               	decf	dtoa@p& (0+255),f,b
  2480  001264  A0D8               	btfss	status,0,c
  2481  001266  07BB               	decf	(dtoa@p+1)& (0+255),f,b
  2482  001268                     
  2483                           ; BSR set to: 0
  2484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2485  001268  07BC               	decf	dtoa@w& (0+255),f,b
  2486  00126A  A0D8               	btfss	status,0,c
  2487  00126C  07BD               	decf	(dtoa@w+1)& (0+255),f,b
  2488  00126E                     
  2489                           ; BSR set to: 0
  2490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2491  00126E  C0C0  F08A         	movff	dtoa@n,___aodiv@dividend
  2492  001272  C0C1  F08B         	movff	dtoa@n+1,___aodiv@dividend+1
  2493  001276  C0C2  F08C         	movff	dtoa@n+2,___aodiv@dividend+2
  2494  00127A  C0C3  F08D         	movff	dtoa@n+3,___aodiv@dividend+3
  2495  00127E  C0C4  F08E         	movff	dtoa@n+4,___aodiv@dividend+4
  2496  001282  C0C5  F08F         	movff	dtoa@n+5,___aodiv@dividend+5
  2497  001286  C0C6  F090         	movff	dtoa@n+6,___aodiv@dividend+6
  2498  00128A  C0C7  F091         	movff	dtoa@n+7,___aodiv@dividend+7
  2499  00128E  0E0A               	movlw	10
  2500  001290  6F92               	movwf	___aodiv@divisor& (0+255),b
  2501  001292  0E00               	movlw	0
  2502  001294  6F93               	movwf	(___aodiv@divisor+1)& (0+255),b
  2503  001296  0E00               	movlw	0
  2504  001298  6F94               	movwf	(___aodiv@divisor+2)& (0+255),b
  2505  00129A  0E00               	movlw	0
  2506  00129C  6F95               	movwf	(___aodiv@divisor+3)& (0+255),b
  2507  00129E  0E00               	movlw	0
  2508  0012A0  6F96               	movwf	(___aodiv@divisor+4)& (0+255),b
  2509  0012A2  0E00               	movlw	0
  2510  0012A4  6F97               	movwf	(___aodiv@divisor+5)& (0+255),b
  2511  0012A6  0E00               	movlw	0
  2512  0012A8  6F98               	movwf	(___aodiv@divisor+6)& (0+255),b
  2513  0012AA  0E00               	movlw	0
  2514  0012AC  6F99               	movwf	(___aodiv@divisor+7)& (0+255),b
  2515  0012AE  ECEE  F00C         	call	___aodiv	;wreg free
  2516  0012B2  C08A  F0C0         	movff	?___aodiv,dtoa@n
  2517  0012B6  C08B  F0C1         	movff	?___aodiv+1,dtoa@n+1
  2518  0012BA  C08C  F0C2         	movff	?___aodiv+2,dtoa@n+2
  2519  0012BE  C08D  F0C3         	movff	?___aodiv+3,dtoa@n+3
  2520  0012C2  C08E  F0C4         	movff	?___aodiv+4,dtoa@n+4
  2521  0012C6  C08F  F0C5         	movff	?___aodiv+5,dtoa@n+5
  2522  0012CA  C090  F0C6         	movff	?___aodiv+6,dtoa@n+6
  2523  0012CE  C091  F0C7         	movff	?___aodiv+7,dtoa@n+7
  2524  0012D2                     l3387:
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2527  0012D2  0100               	movlb	0	; () banked
  2528  0012D4  BFC9               	btfsc	(dtoa@i+1)& (0+255),7,b
  2529  0012D6  EF75  F009         	goto	u3131
  2530  0012DA  51C9               	movf	(dtoa@i+1)& (0+255),w,b
  2531  0012DC  E108               	bnz	u3130
  2532  0012DE  05C8               	decf	dtoa@i& (0+255),w,b
  2533  0012E0  A0D8               	btfss	status,0,c
  2534  0012E2  EF75  F009         	goto	u3131
  2535  0012E6  EF77  F009         	goto	u3130
  2536  0012EA                     u3131:
  2537  0012EA  EFA7  F009         	goto	l3397
  2538  0012EE                     u3130:
  2539  0012EE                     
  2540                           ; BSR set to: 0
  2541  0012EE  51C0               	movf	dtoa@n& (0+255),w,b
  2542  0012F0  11C1               	iorwf	(dtoa@n+1)& (0+255),w,b
  2543  0012F2  11C2               	iorwf	(dtoa@n+2)& (0+255),w,b
  2544  0012F4  11C3               	iorwf	(dtoa@n+3)& (0+255),w,b
  2545  0012F6  11C4               	iorwf	(dtoa@n+4)& (0+255),w,b
  2546  0012F8  11C5               	iorwf	(dtoa@n+5)& (0+255),w,b
  2547  0012FA  11C6               	iorwf	(dtoa@n+6)& (0+255),w,b
  2548  0012FC  11C7               	iorwf	(dtoa@n+7)& (0+255),w,b
  2549  0012FE  A4D8               	btfss	status,2,c
  2550  001300  EF84  F009         	goto	u3141
  2551  001304  EF86  F009         	goto	u3140
  2552  001308                     u3141:
  2553  001308  EFEC  F008         	goto	l3377
  2554  00130C                     u3140:
  2555  00130C                     
  2556                           ; BSR set to: 0
  2557  00130C  BFBB               	btfsc	(dtoa@p+1)& (0+255),7,b
  2558  00130E  EF93  F009         	goto	u3150
  2559  001312  51BB               	movf	(dtoa@p+1)& (0+255),w,b
  2560  001314  E106               	bnz	u3151
  2561  001316  05BA               	decf	dtoa@p& (0+255),w,b
  2562  001318  B0D8               	btfsc	status,0,c
  2563  00131A  EF91  F009         	goto	u3151
  2564  00131E  EF93  F009         	goto	u3150
  2565  001322                     u3151:
  2566  001322  EFEC  F008         	goto	l3377
  2567  001326                     u3150:
  2568  001326                     
  2569                           ; BSR set to: 0
  2570  001326  BFBD               	btfsc	(dtoa@w+1)& (0+255),7,b
  2571  001328  EF9E  F009         	goto	u3161
  2572  00132C  51BD               	movf	(dtoa@w+1)& (0+255),w,b
  2573  00132E  E108               	bnz	u3160
  2574  001330  05BC               	decf	dtoa@w& (0+255),w,b
  2575  001332  A0D8               	btfss	status,0,c
  2576  001334  EF9E  F009         	goto	u3161
  2577  001338  EFA0  F009         	goto	u3160
  2578  00133C                     u3161:
  2579  00133C  EFA7  F009         	goto	l3397
  2580  001340                     u3160:
  2581  001340                     
  2582                           ; BSR set to: 0
  2583  001340  B3EE               	btfsc	_flags& (0+255),1,b
  2584  001342  EFA5  F009         	goto	u3171
  2585  001346  EFA7  F009         	goto	u3170
  2586  00134A                     u3171:
  2587  00134A  EFEC  F008         	goto	l3377
  2588  00134E                     u3170:
  2589  00134E                     l3397:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2593  00134E  51BE               	movf	dtoa@s& (0+255),w,b
  2594  001350  11BF               	iorwf	(dtoa@s+1)& (0+255),w,b
  2595  001352  A4D8               	btfss	status,2,c
  2596  001354  EFAE  F009         	goto	u3181
  2597  001358  EFB0  F009         	goto	u3180
  2598  00135C                     u3181:
  2599  00135C  EFB7  F009         	goto	l3401
  2600  001360                     u3180:
  2601  001360                     
  2602                           ; BSR set to: 0
  2603  001360  A5EE               	btfss	_flags& (0+255),2,b
  2604  001362  EFB5  F009         	goto	u3191
  2605  001366  EFB7  F009         	goto	u3190
  2606  00136A                     u3191:
  2607  00136A  EFD5  F009         	goto	l3411
  2608  00136E                     u3190:
  2609  00136E                     l3401:
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2613  00136E  07C8               	decf	dtoa@i& (0+255),f,b
  2614  001370  A0D8               	btfss	status,0,c
  2615  001372  07C9               	decf	(dtoa@i+1)& (0+255),f,b
  2616  001374                     
  2617                           ; BSR set to: 0
  2618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2619  001374  51BE               	movf	dtoa@s& (0+255),w,b
  2620  001376  11BF               	iorwf	(dtoa@s+1)& (0+255),w,b
  2621  001378  A4D8               	btfss	status,2,c
  2622  00137A  EFC1  F009         	goto	u3201
  2623  00137E  EFC3  F009         	goto	u3200
  2624  001382                     u3201:
  2625  001382  EFC9  F009         	goto	l3407
  2626  001386                     u3200:
  2627  001386                     
  2628                           ; BSR set to: 0
  2629  001386  0E00               	movlw	0
  2630  001388  6FB9               	movwf	(_dtoa$945+1)& (0+255),b
  2631  00138A  0E2B               	movlw	43
  2632  00138C  6FB8               	movwf	_dtoa$945& (0+255),b
  2633  00138E  EFCD  F009         	goto	l3409
  2634  001392                     l3407:
  2635                           
  2636                           ; BSR set to: 0
  2637  001392  0E00               	movlw	0
  2638  001394  6FB9               	movwf	(_dtoa$945+1)& (0+255),b
  2639  001396  0E2D               	movlw	45
  2640  001398  6FB8               	movwf	_dtoa$945& (0+255),b
  2641  00139A                     l3409:
  2642                           
  2643                           ; BSR set to: 0
  2644  00139A  0E05               	movlw	low _dbuf
  2645  00139C  25C8               	addwf	dtoa@i& (0+255),w,b
  2646  00139E  6ED9               	movwf	fsr2l,c
  2647  0013A0  0E01               	movlw	high _dbuf
  2648  0013A2  21C9               	addwfc	(dtoa@i+1)& (0+255),w,b
  2649  0013A4  6EDA               	movwf	fsr2h,c
  2650  0013A6  C0B8  FFDF         	movff	_dtoa$945,indf2
  2651  0013AA                     l3411:
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2655  0013AA  C0A6  F09B         	movff	dtoa@fp,pad@fp
  2656  0013AE  C0A7  F09C         	movff	dtoa@fp+1,pad@fp+1
  2657  0013B2  0E05               	movlw	low _dbuf
  2658  0013B4  25C8               	addwf	dtoa@i& (0+255),w,b
  2659  0013B6  6F9D               	movwf	pad@buf& (0+255),b
  2660  0013B8  0E01               	movlw	high _dbuf
  2661  0013BA  21C9               	addwfc	(dtoa@i+1)& (0+255),w,b
  2662  0013BC  6F9E               	movwf	(pad@buf+1)& (0+255),b
  2663  0013BE  C0BC  F09F         	movff	dtoa@w,pad@p
  2664  0013C2  C0BD  F0A0         	movff	dtoa@w+1,pad@p+1
  2665  0013C6  EC9D  F012         	call	_pad	;wreg free
  2666  0013CA  C09B  F0A6         	movff	?_pad,?_dtoa
  2667  0013CE  C09C  F0A7         	movff	?_pad+1,?_dtoa+1
  2668  0013D2  0012               	return		;funcret
  2669  0013D4                     __end_of_dtoa:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _pad *****************
  2673 ;; Defined at:
  2674 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  2677 ;;		 -> sprintf@f(6), 
  2678 ;;  buf             2   29[BANK0 ] PTR unsigned char 
  2679 ;;		 -> dbuf(32), 
  2680 ;;  p               2   31[BANK0 ] int 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  w               2   36[BANK0 ] int 
  2683 ;;  i               2   34[BANK0 ] int 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  2   27[BANK0 ] int 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2693 ;;      Params:         0       6       0       0       0       0       0
  2694 ;;      Locals:         0       4       0       0       0       0       0
  2695 ;;      Temps:          0       1       0       0       0       0       0
  2696 ;;      Totals:         0      11       0       0       0       0       0
  2697 ;;Total ram usage:       11 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 14
  2700 ;; This function calls:
  2701 ;;		_fputc
  2702 ;;		_fputs
  2703 ;;		_strlen
  2704 ;; This function is called by:
  2705 ;;		_dtoa
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text5
  2710  00253A                     __ptext5:
  2711                           	callstack 0
  2712  00253A                     _pad:
  2713                           	callstack 12
  2714  00253A                     
  2715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2716  00253A  0100               	movlb	0	; () banked
  2717  00253C  A1EE               	btfss	_flags& (0+255),0,b
  2718  00253E  EFA3  F012         	goto	u2661
  2719  002542  EFA5  F012         	goto	u2660
  2720  002546                     u2661:
  2721  002546  EFAF  F012         	goto	l3075
  2722  00254A                     u2660:
  2723  00254A                     
  2724                           ; BSR set to: 0
  2725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2726  00254A  C09D  F094         	movff	pad@buf,fputs@s
  2727  00254E  C09E  F095         	movff	pad@buf+1,fputs@s+1
  2728  002552  C09B  F096         	movff	pad@fp,fputs@fp
  2729  002556  C09C  F097         	movff	pad@fp+1,fputs@fp+1
  2730  00255A  ECE9  F017         	call	_fputs	;wreg free
  2731  00255E                     l3075:
  2732                           
  2733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2734  00255E  0100               	movlb	0	; () banked
  2735  002560  BFA0               	btfsc	(pad@p+1)& (0+255),7,b
  2736  002562  EFB5  F012         	goto	u2671
  2737  002566  EFB7  F012         	goto	u2670
  2738  00256A                     u2671:
  2739  00256A  EFBD  F012         	goto	l3079
  2740  00256E                     u2670:
  2741  00256E                     
  2742                           ; BSR set to: 0
  2743  00256E  C09F  F0A4         	movff	pad@p,pad@w
  2744  002572  C0A0  F0A5         	movff	pad@p+1,pad@w+1
  2745  002576  EFC1  F012         	goto	l1054
  2746  00257A                     l3079:
  2747                           
  2748                           ; BSR set to: 0
  2749  00257A  0E00               	movlw	0
  2750  00257C  6FA5               	movwf	(pad@w+1)& (0+255),b
  2751  00257E  0E00               	movlw	0
  2752  002580  6FA4               	movwf	pad@w& (0+255),b
  2753  002582                     l1054:
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2757  002582  0E00               	movlw	0
  2758  002584  6FA3               	movwf	(pad@i+1)& (0+255),b
  2759  002586  0E00               	movlw	0
  2760  002588  6FA2               	movwf	pad@i& (0+255),b
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2763  00258A  EFD4  F012         	goto	l3085
  2764  00258E                     l3081:
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2768  00258E  0E00               	movlw	0
  2769  002590  6F8C               	movwf	(fputc@c+1)& (0+255),b
  2770  002592  0E20               	movlw	32
  2771  002594  6F8B               	movwf	fputc@c& (0+255),b
  2772  002596  C09B  F08D         	movff	pad@fp,fputc@fp
  2773  00259A  C09C  F08E         	movff	pad@fp+1,fputc@fp+1
  2774  00259E  EC37  F012         	call	_fputc	;wreg free
  2775  0025A2                     
  2776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2777  0025A2  0100               	movlb	0	; () banked
  2778  0025A4  4BA2               	infsnz	pad@i& (0+255),f,b
  2779  0025A6  2BA3               	incf	(pad@i+1)& (0+255),f,b
  2780  0025A8                     l3085:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2784  0025A8  51A4               	movf	pad@w& (0+255),w,b
  2785  0025AA  5DA2               	subwf	pad@i& (0+255),w,b
  2786  0025AC  51A3               	movf	(pad@i+1)& (0+255),w,b
  2787  0025AE  0A80               	xorlw	128
  2788  0025B0  6FA1               	movwf	??_pad& (0+255),b
  2789  0025B2  51A5               	movf	(pad@w+1)& (0+255),w,b
  2790  0025B4  0A80               	xorlw	128
  2791  0025B6  59A1               	subwfb	??_pad& (0+255),w,b
  2792  0025B8  A0D8               	btfss	status,0,c
  2793  0025BA  EFE1  F012         	goto	u2681
  2794  0025BE  EFE3  F012         	goto	u2680
  2795  0025C2                     u2681:
  2796  0025C2  EFC7  F012         	goto	l3081
  2797  0025C6                     u2680:
  2798  0025C6                     
  2799                           ; BSR set to: 0
  2800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2801  0025C6  B1EE               	btfsc	_flags& (0+255),0,b
  2802  0025C8  EFE8  F012         	goto	u2691
  2803  0025CC  EFEA  F012         	goto	u2690
  2804  0025D0                     u2691:
  2805  0025D0  EFF4  F012         	goto	l3089
  2806  0025D4                     u2690:
  2807  0025D4                     
  2808                           ; BSR set to: 0
  2809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2810  0025D4  C09D  F094         	movff	pad@buf,fputs@s
  2811  0025D8  C09E  F095         	movff	pad@buf+1,fputs@s+1
  2812  0025DC  C09B  F096         	movff	pad@fp,fputs@fp
  2813  0025E0  C09C  F097         	movff	pad@fp+1,fputs@fp+1
  2814  0025E4  ECE9  F017         	call	_fputs	;wreg free
  2815  0025E8                     l3089:
  2816                           
  2817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2818  0025E8  C09D  F08A         	movff	pad@buf,strlen@s
  2819  0025EC  C09E  F08B         	movff	pad@buf+1,strlen@s+1
  2820  0025F0  ECB4  F018         	call	_strlen	;wreg free
  2821  0025F4  0100               	movlb	0	; () banked
  2822  0025F6  51A4               	movf	pad@w& (0+255),w,b
  2823  0025F8  258A               	addwf	?_strlen& (0+255),w,b
  2824  0025FA  6F9B               	movwf	?_pad& (0+255),b
  2825  0025FC  51A5               	movf	(pad@w+1)& (0+255),w,b
  2826  0025FE  218B               	addwfc	(?_strlen+1)& (0+255),w,b
  2827  002600  6F9C               	movwf	(?_pad+1)& (0+255),b
  2828  002602                     
  2829                           ; BSR set to: 0
  2830  002602  0012               	return		;funcret
  2831  002604                     __end_of_pad:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _strlen *****************
  2835 ;; Defined at:
  2836 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  s               2   10[BANK0 ] PTR const unsigned char 
  2839 ;;		 -> dbuf(32), 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  a               2   12[BANK0 ] PTR const unsigned char 
  2842 ;;		 -> dbuf(32), 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  2   10[BANK0 ] unsigned int 
  2845 ;; Registers used:
  2846 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2852 ;;      Params:         0       2       0       0       0       0       0
  2853 ;;      Locals:         0       2       0       0       0       0       0
  2854 ;;      Temps:          0       0       0       0       0       0       0
  2855 ;;      Totals:         0       4       0       0       0       0       0
  2856 ;;Total ram usage:        4 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; Hardware stack levels required when called: 11
  2859 ;; This function calls:
  2860 ;;		Nothing
  2861 ;; This function is called by:
  2862 ;;		_pad
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text6
  2867  003168                     __ptext6:
  2868                           	callstack 0
  2869  003168                     _strlen:
  2870                           	callstack 14
  2871  003168  C08A  F08C         	movff	strlen@s,strlen@a
  2872  00316C  C08B  F08D         	movff	strlen@s+1,strlen@a+1
  2873  003170  EFBD  F018         	goto	l2871
  2874  003174                     l2869:
  2875  003174  0100               	movlb	0	; () banked
  2876  003176  4B8A               	infsnz	strlen@s& (0+255),f,b
  2877  003178  2B8B               	incf	(strlen@s+1)& (0+255),f,b
  2878  00317A                     l2871:
  2879  00317A  C08A  FFD9         	movff	strlen@s,fsr2l
  2880  00317E  C08B  FFDA         	movff	strlen@s+1,fsr2h
  2881  003182  50DF               	movf	indf2,w,c
  2882  003184  A4D8               	btfss	status,2,c
  2883  003186  EFC7  F018         	goto	u2281
  2884  00318A  EFC9  F018         	goto	u2280
  2885  00318E                     u2281:
  2886  00318E  EFBA  F018         	goto	l2869
  2887  003192                     u2280:
  2888  003192  0100               	movlb	0	; () banked
  2889  003194  518C               	movf	strlen@a& (0+255),w,b
  2890  003196  5D8A               	subwf	strlen@s& (0+255),w,b
  2891  003198  6F8A               	movwf	?_strlen& (0+255),b
  2892  00319A  518D               	movf	(strlen@a+1)& (0+255),w,b
  2893  00319C  598B               	subwfb	(strlen@s+1)& (0+255),w,b
  2894  00319E  6F8B               	movwf	(?_strlen+1)& (0+255),b
  2895  0031A0                     
  2896                           ; BSR set to: 0
  2897  0031A0  0012               	return		;funcret
  2898  0031A2                     __end_of_strlen:
  2899                           	callstack 0
  2900                           
  2901 ;; *************** function _fputs *****************
  2902 ;; Defined at:
  2903 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  s               2   20[BANK0 ] PTR const unsigned char 
  2906 ;;		 -> dbuf(32), 
  2907 ;;  fp              2   22[BANK0 ] PTR struct _IO_FILE
  2908 ;;		 -> sprintf@f(6), 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  i               2   25[BANK0 ] int 
  2911 ;;  c               1   24[BANK0 ] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2   20[BANK0 ] int 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2921 ;;      Params:         0       4       0       0       0       0       0
  2922 ;;      Locals:         0       3       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0
  2924 ;;      Totals:         0       7       0       0       0       0       0
  2925 ;;Total ram usage:        7 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 13
  2928 ;; This function calls:
  2929 ;;		_fputc
  2930 ;; This function is called by:
  2931 ;;		_pad
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text7
  2936  002FD2                     __ptext7:
  2937                           	callstack 0
  2938  002FD2                     _fputs:
  2939                           	callstack 12
  2940  002FD2  0E00               	movlw	0
  2941  002FD4  0100               	movlb	0	; () banked
  2942  002FD6  6F9A               	movwf	(fputs@i+1)& (0+255),b
  2943  002FD8  0E00               	movlw	0
  2944  002FDA  6F99               	movwf	fputs@i& (0+255),b
  2945  002FDC  EFFC  F017         	goto	l2865
  2946  002FE0                     l2861:
  2947                           
  2948                           ; BSR set to: 0
  2949  002FE0  C098  F08B         	movff	fputs@c,fputc@c
  2950  002FE4  6B8C               	clrf	(fputc@c+1)& (0+255),b
  2951  002FE6  C096  F08D         	movff	fputs@fp,fputc@fp
  2952  002FEA  C097  F08E         	movff	fputs@fp+1,fputc@fp+1
  2953  002FEE  EC37  F012         	call	_fputc	;wreg free
  2954  002FF2  0100               	movlb	0	; () banked
  2955  002FF4  4B99               	infsnz	fputs@i& (0+255),f,b
  2956  002FF6  2B9A               	incf	(fputs@i+1)& (0+255),f,b
  2957  002FF8                     l2865:
  2958                           
  2959                           ; BSR set to: 0
  2960  002FF8  5199               	movf	fputs@i& (0+255),w,b
  2961  002FFA  2594               	addwf	fputs@s& (0+255),w,b
  2962  002FFC  6ED9               	movwf	fsr2l,c
  2963  002FFE  519A               	movf	(fputs@i+1)& (0+255),w,b
  2964  003000  2195               	addwfc	(fputs@s+1)& (0+255),w,b
  2965  003002  6EDA               	movwf	fsr2h,c
  2966  003004  50DF               	movf	indf2,w,c
  2967  003006  6F98               	movwf	fputs@c& (0+255),b
  2968  003008  5198               	movf	fputs@c& (0+255),w,b
  2969  00300A  A4D8               	btfss	status,2,c
  2970  00300C  EF0A  F018         	goto	u2271
  2971  003010  EF0C  F018         	goto	u2270
  2972  003014                     u2271:
  2973  003014  EFF0  F017         	goto	l2861
  2974  003018                     u2270:
  2975  003018                     
  2976                           ; BSR set to: 0
  2977  003018  0012               	return		;funcret
  2978  00301A                     __end_of_fputs:
  2979                           	callstack 0
  2980                           
  2981 ;; *************** function _fputc *****************
  2982 ;; Defined at:
  2983 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  c               2   11[BANK0 ] int 
  2986 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  2987 ;;		 -> sprintf@f(6), 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  2   11[BANK0 ] int 
  2992 ;; Registers used:
  2993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2999 ;;      Params:         0       4       0       0       0       0       0
  3000 ;;      Locals:         0       0       0       0       0       0       0
  3001 ;;      Temps:          0       5       0       0       0       0       0
  3002 ;;      Totals:         0       9       0       0       0       0       0
  3003 ;;Total ram usage:        9 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 12
  3006 ;; This function calls:
  3007 ;;		_putch
  3008 ;; This function is called by:
  3009 ;;		_pad
  3010 ;;		_vfpfcnvrt
  3011 ;;		_fputs
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           	psect	text8
  3016  00246E                     __ptext8:
  3017                           	callstack 0
  3018  00246E                     _fputc:
  3019                           	callstack 15
  3020  00246E  0100               	movlb	0	; () banked
  3021  002470  518D               	movf	fputc@fp& (0+255),w,b
  3022  002472  118E               	iorwf	(fputc@fp+1)& (0+255),w,b
  3023  002474  B4D8               	btfsc	status,2,c
  3024  002476  EF3F  F012         	goto	u2011
  3025  00247A  EF41  F012         	goto	u2010
  3026  00247E                     u2011:
  3027  00247E  EF4A  F012         	goto	l2721
  3028  002482                     u2010:
  3029  002482                     
  3030                           ; BSR set to: 0
  3031  002482  518D               	movf	fputc@fp& (0+255),w,b
  3032  002484  118E               	iorwf	(fputc@fp+1)& (0+255),w,b
  3033  002486  A4D8               	btfss	status,2,c
  3034  002488  EF48  F012         	goto	u2021
  3035  00248C  EF4A  F012         	goto	u2020
  3036  002490                     u2021:
  3037  002490  EF4F  F012         	goto	l2723
  3038  002494                     u2020:
  3039  002494                     l2721:
  3040                           
  3041                           ; BSR set to: 0
  3042  002494  518B               	movf	fputc@c& (0+255),w,b
  3043  002496  EC40  F01A         	call	_putch
  3044  00249A  EF9C  F012         	goto	l1185
  3045  00249E                     l2723:
  3046                           
  3047                           ; BSR set to: 0
  3048  00249E  EE20 F004          	lfsr	2,4
  3049  0024A2  518D               	movf	fputc@fp& (0+255),w,b
  3050  0024A4  26D9               	addwf	fsr2l,f,c
  3051  0024A6  518E               	movf	(fputc@fp+1)& (0+255),w,b
  3052  0024A8  22DA               	addwfc	fsr2h,f,c
  3053  0024AA  50DE               	movf	postinc2,w,c
  3054  0024AC  10DE               	iorwf	postinc2,w,c
  3055  0024AE  B4D8               	btfsc	status,2,c
  3056  0024B0  EF5C  F012         	goto	u2031
  3057  0024B4  EF5E  F012         	goto	u2030
  3058  0024B8                     u2031:
  3059  0024B8  EF79  F012         	goto	l2727
  3060  0024BC                     u2030:
  3061  0024BC                     
  3062                           ; BSR set to: 0
  3063  0024BC  EE20 F004          	lfsr	2,4
  3064  0024C0  518D               	movf	fputc@fp& (0+255),w,b
  3065  0024C2  26D9               	addwf	fsr2l,f,c
  3066  0024C4  518E               	movf	(fputc@fp+1)& (0+255),w,b
  3067  0024C6  22DA               	addwfc	fsr2h,f,c
  3068  0024C8  EE10 F002          	lfsr	1,2
  3069  0024CC  518D               	movf	fputc@fp& (0+255),w,b
  3070  0024CE  26E1               	addwf	fsr1l,f,c
  3071  0024D0  518E               	movf	(fputc@fp+1)& (0+255),w,b
  3072  0024D2  22E2               	addwfc	fsr1h,f,c
  3073  0024D4  50DE               	movf	postinc2,w,c
  3074  0024D6  5CE6               	subwf	postinc1,w,c
  3075  0024D8  50E6               	movf	postinc1,w,c
  3076  0024DA  0A80               	xorlw	128
  3077  0024DC  6F93               	movwf	(??_fputc+4)& (0+255),b
  3078  0024DE  50DE               	movf	postinc2,w,c
  3079  0024E0  0A80               	xorlw	128
  3080  0024E2  5993               	subwfb	(??_fputc+4)& (0+255),w,b
  3081  0024E4  B0D8               	btfsc	status,0,c
  3082  0024E6  EF77  F012         	goto	u2041
  3083  0024EA  EF79  F012         	goto	u2040
  3084  0024EE                     u2041:
  3085  0024EE  EF9C  F012         	goto	l1185
  3086  0024F2                     u2040:
  3087  0024F2                     l2727:
  3088                           
  3089                           ; BSR set to: 0
  3090  0024F2  EE20 F002          	lfsr	2,2
  3091  0024F6  518D               	movf	fputc@fp& (0+255),w,b
  3092  0024F8  26D9               	addwf	fsr2l,f,c
  3093  0024FA  518E               	movf	(fputc@fp+1)& (0+255),w,b
  3094  0024FC  22DA               	addwfc	fsr2h,f,c
  3095  0024FE  CFDE F08F          	movff	postinc2,??_fputc
  3096  002502  CFDD F090          	movff	postdec2,??_fputc+1
  3097  002506  C08D  FFD9         	movff	fputc@fp,fsr2l
  3098  00250A  C08E  FFDA         	movff	fputc@fp+1,fsr2h
  3099  00250E  CFDE F091          	movff	postinc2,??_fputc+2
  3100  002512  CFDD F092          	movff	postdec2,??_fputc+3
  3101  002516  518F               	movf	??_fputc& (0+255),w,b
  3102  002518  2591               	addwf	(??_fputc+2)& (0+255),w,b
  3103  00251A  6ED9               	movwf	fsr2l,c
  3104  00251C  5190               	movf	(??_fputc+1)& (0+255),w,b
  3105  00251E  2192               	addwfc	(??_fputc+3)& (0+255),w,b
  3106  002520  6EDA               	movwf	fsr2h,c
  3107  002522  C08B  FFDF         	movff	fputc@c,indf2
  3108  002526  EE20 F002          	lfsr	2,2
  3109  00252A  518D               	movf	fputc@fp& (0+255),w,b
  3110  00252C  26D9               	addwf	fsr2l,f,c
  3111  00252E  518E               	movf	(fputc@fp+1)& (0+255),w,b
  3112  002530  22DA               	addwfc	fsr2h,f,c
  3113  002532  2ADE               	incf	postinc2,f,c
  3114  002534  0E00               	movlw	0
  3115  002536  22DD               	addwfc	postdec2,f,c
  3116  002538                     l1185:
  3117  002538  0012               	return		;funcret
  3118  00253A                     __end_of_fputc:
  3119                           	callstack 0
  3120                           
  3121 ;; *************** function _putch *****************
  3122 ;; Defined at:
  3123 ;;		line 31 in file "src/myprintf.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  byte            1    wreg     unsigned char 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  byte            1   10[BANK0 ] unsigned char 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3137 ;;      Params:         0       0       0       0       0       0       0
  3138 ;;      Locals:         0       1       0       0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0
  3140 ;;      Totals:         0       1       0       0       0       0       0
  3141 ;;Total ram usage:        1 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; Hardware stack levels required when called: 11
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_fputc
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text9
  3152  003480                     __ptext9:
  3153                           	callstack 0
  3154  003480                     _putch:
  3155                           	callstack 15
  3156                           
  3157                           ;incstack = 0
  3158                           ;putch@byte stored from wreg
  3159  003480  0100               	movlb	0	; () banked
  3160  003482  6F8A               	movwf	putch@byte& (0+255),b
  3161  003484                     l71:
  3162  003484  A89E               	btfss	3998,4,c	;volatile
  3163  003486  EF47  F01A         	goto	u1981
  3164  00348A  EF49  F01A         	goto	u1980
  3165  00348E                     u1981:
  3166  00348E  EF42  F01A         	goto	l71
  3167  003492                     u1980:
  3168  003492                     
  3169                           ;src/myprintf.c: 34:     TXREG = byte;
  3170  003492  C08A  FFAD         	movff	putch@byte,4013	;volatile
  3171  003496  0012               	return		;funcret
  3172  003498                     __end_of_putch:
  3173                           	callstack 0
  3174                           
  3175 ;; *************** function _abs *****************
  3176 ;; Defined at:
  3177 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  a               2   28[BANK0 ] int 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  2   28[BANK0 ] int 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3191 ;;      Params:         0       2       0       0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0
  3193 ;;      Temps:          0       2       0       0       0       0       0
  3194 ;;      Totals:         0       4       0       0       0       0       0
  3195 ;;Total ram usage:        4 bytes
  3196 ;; Hardware stack levels used: 1
  3197 ;; Hardware stack levels required when called: 11
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_dtoa
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text10
  3206  0030A4                     __ptext10:
  3207                           	callstack 0
  3208  0030A4                     _abs:
  3209                           	callstack 15
  3210  0030A4  0100               	movlb	0	; () banked
  3211  0030A6  BF9D               	btfsc	(abs@a+1)& (0+255),7,b
  3212  0030A8  EF60  F018         	goto	u2700
  3213  0030AC  519D               	movf	(abs@a+1)& (0+255),w,b
  3214  0030AE  E106               	bnz	u2701
  3215  0030B0  059C               	decf	abs@a& (0+255),w,b
  3216  0030B2  B0D8               	btfsc	status,0,c
  3217  0030B4  EF5E  F018         	goto	u2701
  3218  0030B8  EF60  F018         	goto	u2700
  3219  0030BC                     u2701:
  3220  0030BC  EF6E  F018         	goto	l1125
  3221  0030C0                     u2700:
  3222  0030C0                     
  3223                           ; BSR set to: 0
  3224  0030C0  C09C  F09E         	movff	abs@a,??_abs
  3225  0030C4  C09D  F09F         	movff	abs@a+1,??_abs+1
  3226  0030C8  1F9E               	comf	??_abs& (0+255),f,b
  3227  0030CA  1F9F               	comf	(??_abs+1)& (0+255),f,b
  3228  0030CC  4B9E               	infsnz	??_abs& (0+255),f,b
  3229  0030CE  2B9F               	incf	(??_abs+1)& (0+255),f,b
  3230  0030D0  C09E  F09C         	movff	??_abs,?_abs
  3231  0030D4  C09F  F09D         	movff	??_abs+1,?_abs+1
  3232  0030D8  EF72  F018         	goto	l1128
  3233  0030DC                     l1125:
  3234                           
  3235                           ; BSR set to: 0
  3236  0030DC  C09C  F09C         	movff	abs@a,?_abs
  3237  0030E0  C09D  F09D         	movff	abs@a+1,?_abs+1
  3238  0030E4                     l1128:
  3239                           
  3240                           ; BSR set to: 0
  3241  0030E4  0012               	return		;funcret
  3242  0030E6                     __end_of_abs:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function ___aomod *****************
  3246 ;; Defined at:
  3247 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  dividend        8   10[BANK0 ] long long 
  3250 ;;  divisor         8   18[BANK0 ] long long 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  sign            1   27[BANK0 ] unsigned char 
  3253 ;;  counter         1   26[BANK0 ] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  8   10[BANK0 ] long long 
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3263 ;;      Params:         0      16       0       0       0       0       0
  3264 ;;      Locals:         0       2       0       0       0       0       0
  3265 ;;      Temps:          0       0       0       0       0       0       0
  3266 ;;      Totals:         0      18       0       0       0       0       0
  3267 ;;Total ram usage:       18 bytes
  3268 ;; Hardware stack levels used: 1
  3269 ;; Hardware stack levels required when called: 11
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_dtoa
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text11
  3278  001E62                     __ptext11:
  3279                           	callstack 0
  3280  001E62                     ___aomod:
  3281                           	callstack 15
  3282  001E62  0E00               	movlw	0
  3283  001E64  0100               	movlb	0	; () banked
  3284  001E66  6F9B               	movwf	___aomod@sign& (0+255),b
  3285  001E68                     
  3286                           ; BSR set to: 0
  3287  001E68  BF91               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  3288  001E6A  EF3B  F00F         	goto	u2600
  3289  001E6E  EF39  F00F         	goto	u2601
  3290  001E72                     u2601:
  3291  001E72  EF4D  F00F         	goto	l3043
  3292  001E76                     u2600:
  3293  001E76                     
  3294                           ; BSR set to: 0
  3295  001E76  1F91               	comf	(___aomod@dividend+7)& (0+255),f,b
  3296  001E78  1F90               	comf	(___aomod@dividend+6)& (0+255),f,b
  3297  001E7A  1F8F               	comf	(___aomod@dividend+5)& (0+255),f,b
  3298  001E7C  1F8E               	comf	(___aomod@dividend+4)& (0+255),f,b
  3299  001E7E  1F8D               	comf	(___aomod@dividend+3)& (0+255),f,b
  3300  001E80  1F8C               	comf	(___aomod@dividend+2)& (0+255),f,b
  3301  001E82  1F8B               	comf	(___aomod@dividend+1)& (0+255),f,b
  3302  001E84  6D8A               	negf	___aomod@dividend& (0+255),b
  3303  001E86  0E00               	movlw	0
  3304  001E88  238B               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3305  001E8A  238C               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3306  001E8C  238D               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3307  001E8E  238E               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3308  001E90  238F               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3309  001E92  2390               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3310  001E94  2391               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3311  001E96                     
  3312                           ; BSR set to: 0
  3313  001E96  0E01               	movlw	1
  3314  001E98  6F9B               	movwf	___aomod@sign& (0+255),b
  3315  001E9A                     l3043:
  3316                           
  3317                           ; BSR set to: 0
  3318  001E9A  BF99               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  3319  001E9C  EF54  F00F         	goto	u2610
  3320  001EA0  EF52  F00F         	goto	u2611
  3321  001EA4                     u2611:
  3322  001EA4  EF64  F00F         	goto	l3047
  3323  001EA8                     u2610:
  3324  001EA8                     
  3325                           ; BSR set to: 0
  3326  001EA8  1F99               	comf	(___aomod@divisor+7)& (0+255),f,b
  3327  001EAA  1F98               	comf	(___aomod@divisor+6)& (0+255),f,b
  3328  001EAC  1F97               	comf	(___aomod@divisor+5)& (0+255),f,b
  3329  001EAE  1F96               	comf	(___aomod@divisor+4)& (0+255),f,b
  3330  001EB0  1F95               	comf	(___aomod@divisor+3)& (0+255),f,b
  3331  001EB2  1F94               	comf	(___aomod@divisor+2)& (0+255),f,b
  3332  001EB4  1F93               	comf	(___aomod@divisor+1)& (0+255),f,b
  3333  001EB6  6D92               	negf	___aomod@divisor& (0+255),b
  3334  001EB8  0E00               	movlw	0
  3335  001EBA  2393               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3336  001EBC  2394               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3337  001EBE  2395               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3338  001EC0  2396               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3339  001EC2  2397               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3340  001EC4  2398               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3341  001EC6  2399               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3342  001EC8                     l3047:
  3343                           
  3344                           ; BSR set to: 0
  3345  001EC8  5192               	movf	___aomod@divisor& (0+255),w,b
  3346  001ECA  1193               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3347  001ECC  1194               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3348  001ECE  1195               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3349  001ED0  1196               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3350  001ED2  1197               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3351  001ED4  1198               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3352  001ED6  1199               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3353  001ED8  B4D8               	btfsc	status,2,c
  3354  001EDA  EF71  F00F         	goto	u2621
  3355  001EDE  EF73  F00F         	goto	u2620
  3356  001EE2                     u2621:
  3357  001EE2  EFBB  F00F         	goto	l3063
  3358  001EE6                     u2620:
  3359  001EE6                     
  3360                           ; BSR set to: 0
  3361  001EE6  0E01               	movlw	1
  3362  001EE8  6F9A               	movwf	___aomod@counter& (0+255),b
  3363  001EEA  EF81  F00F         	goto	l3053
  3364  001EEE                     l3051:
  3365                           
  3366                           ; BSR set to: 0
  3367  001EEE  90D8               	bcf	status,0,c
  3368  001EF0  3792               	rlcf	___aomod@divisor& (0+255),f,b
  3369  001EF2  3793               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3370  001EF4  3794               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3371  001EF6  3795               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3372  001EF8  3796               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3373  001EFA  3797               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3374  001EFC  3798               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3375  001EFE  3799               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3376  001F00  2B9A               	incf	___aomod@counter& (0+255),f,b
  3377  001F02                     l3053:
  3378                           
  3379                           ; BSR set to: 0
  3380  001F02  AF99               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3381  001F04  EF86  F00F         	goto	u2631
  3382  001F08  EF88  F00F         	goto	u2630
  3383  001F0C                     u2631:
  3384  001F0C  EF77  F00F         	goto	l3051
  3385  001F10                     u2630:
  3386  001F10                     l3055:
  3387                           
  3388                           ; BSR set to: 0
  3389  001F10  5192               	movf	___aomod@divisor& (0+255),w,b
  3390  001F12  5D8A               	subwf	___aomod@dividend& (0+255),w,b
  3391  001F14  5193               	movf	(___aomod@divisor+1)& (0+255),w,b
  3392  001F16  598B               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3393  001F18  5194               	movf	(___aomod@divisor+2)& (0+255),w,b
  3394  001F1A  598C               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3395  001F1C  5195               	movf	(___aomod@divisor+3)& (0+255),w,b
  3396  001F1E  598D               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3397  001F20  5196               	movf	(___aomod@divisor+4)& (0+255),w,b
  3398  001F22  598E               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3399  001F24  5197               	movf	(___aomod@divisor+5)& (0+255),w,b
  3400  001F26  598F               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3401  001F28  5198               	movf	(___aomod@divisor+6)& (0+255),w,b
  3402  001F2A  5990               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3403  001F2C  5199               	movf	(___aomod@divisor+7)& (0+255),w,b
  3404  001F2E  5991               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3405  001F30  A0D8               	btfss	status,0,c
  3406  001F32  EF9D  F00F         	goto	u2641
  3407  001F36  EF9F  F00F         	goto	u2640
  3408  001F3A                     u2641:
  3409  001F3A  EFAF  F00F         	goto	l3059
  3410  001F3E                     u2640:
  3411  001F3E                     
  3412                           ; BSR set to: 0
  3413  001F3E  5192               	movf	___aomod@divisor& (0+255),w,b
  3414  001F40  5F8A               	subwf	___aomod@dividend& (0+255),f,b
  3415  001F42  5193               	movf	(___aomod@divisor+1)& (0+255),w,b
  3416  001F44  5B8B               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3417  001F46  5194               	movf	(___aomod@divisor+2)& (0+255),w,b
  3418  001F48  5B8C               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3419  001F4A  5195               	movf	(___aomod@divisor+3)& (0+255),w,b
  3420  001F4C  5B8D               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3421  001F4E  5196               	movf	(___aomod@divisor+4)& (0+255),w,b
  3422  001F50  5B8E               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3423  001F52  5197               	movf	(___aomod@divisor+5)& (0+255),w,b
  3424  001F54  5B8F               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3425  001F56  5198               	movf	(___aomod@divisor+6)& (0+255),w,b
  3426  001F58  5B90               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3427  001F5A  5199               	movf	(___aomod@divisor+7)& (0+255),w,b
  3428  001F5C  5B91               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3429  001F5E                     l3059:
  3430                           
  3431                           ; BSR set to: 0
  3432  001F5E  90D8               	bcf	status,0,c
  3433  001F60  3399               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3434  001F62  3398               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3435  001F64  3397               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3436  001F66  3396               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3437  001F68  3395               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3438  001F6A  3394               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3439  001F6C  3393               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3440  001F6E  3392               	rrcf	___aomod@divisor& (0+255),f,b
  3441  001F70                     
  3442                           ; BSR set to: 0
  3443  001F70  2F9A               	decfsz	___aomod@counter& (0+255),f,b
  3444  001F72  EF88  F00F         	goto	l3055
  3445  001F76                     l3063:
  3446                           
  3447                           ; BSR set to: 0
  3448  001F76  519B               	movf	___aomod@sign& (0+255),w,b
  3449  001F78  B4D8               	btfsc	status,2,c
  3450  001F7A  EFC1  F00F         	goto	u2651
  3451  001F7E  EFC3  F00F         	goto	u2650
  3452  001F82                     u2651:
  3453  001F82  EFD3  F00F         	goto	l3067
  3454  001F86                     u2650:
  3455  001F86                     
  3456                           ; BSR set to: 0
  3457  001F86  1F91               	comf	(___aomod@dividend+7)& (0+255),f,b
  3458  001F88  1F90               	comf	(___aomod@dividend+6)& (0+255),f,b
  3459  001F8A  1F8F               	comf	(___aomod@dividend+5)& (0+255),f,b
  3460  001F8C  1F8E               	comf	(___aomod@dividend+4)& (0+255),f,b
  3461  001F8E  1F8D               	comf	(___aomod@dividend+3)& (0+255),f,b
  3462  001F90  1F8C               	comf	(___aomod@dividend+2)& (0+255),f,b
  3463  001F92  1F8B               	comf	(___aomod@dividend+1)& (0+255),f,b
  3464  001F94  6D8A               	negf	___aomod@dividend& (0+255),b
  3465  001F96  0E00               	movlw	0
  3466  001F98  238B               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3467  001F9A  238C               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3468  001F9C  238D               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3469  001F9E  238E               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3470  001FA0  238F               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3471  001FA2  2390               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3472  001FA4  2391               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3473  001FA6                     l3067:
  3474                           
  3475                           ; BSR set to: 0
  3476  001FA6  C08A  F08A         	movff	___aomod@dividend,?___aomod
  3477  001FAA  C08B  F08B         	movff	___aomod@dividend+1,?___aomod+1
  3478  001FAE  C08C  F08C         	movff	___aomod@dividend+2,?___aomod+2
  3479  001FB2  C08D  F08D         	movff	___aomod@dividend+3,?___aomod+3
  3480  001FB6  C08E  F08E         	movff	___aomod@dividend+4,?___aomod+4
  3481  001FBA  C08F  F08F         	movff	___aomod@dividend+5,?___aomod+5
  3482  001FBE  C090  F090         	movff	___aomod@dividend+6,?___aomod+6
  3483  001FC2  C091  F091         	movff	___aomod@dividend+7,?___aomod+7
  3484  001FC6                     
  3485                           ; BSR set to: 0
  3486  001FC6  0012               	return		;funcret
  3487  001FC8                     __end_of___aomod:
  3488                           	callstack 0
  3489                           
  3490 ;; *************** function ___aodiv *****************
  3491 ;; Defined at:
  3492 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  dividend        8   10[BANK0 ] long long 
  3495 ;;  divisor         8   18[BANK0 ] long long 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  quotient        8   28[BANK0 ] long long 
  3498 ;;  sign            1   27[BANK0 ] unsigned char 
  3499 ;;  counter         1   26[BANK0 ] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  8   10[BANK0 ] long long 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3509 ;;      Params:         0      16       0       0       0       0       0
  3510 ;;      Locals:         0      10       0       0       0       0       0
  3511 ;;      Temps:          0       0       0       0       0       0       0
  3512 ;;      Totals:         0      26       0       0       0       0       0
  3513 ;;Total ram usage:       26 bytes
  3514 ;; Hardware stack levels used: 1
  3515 ;; Hardware stack levels required when called: 11
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_dtoa
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text12
  3524  0019DC                     __ptext12:
  3525                           	callstack 0
  3526  0019DC                     ___aodiv:
  3527                           	callstack 15
  3528  0019DC  0E00               	movlw	0
  3529  0019DE  0100               	movlb	0	; () banked
  3530  0019E0  6F9B               	movwf	___aodiv@sign& (0+255),b
  3531  0019E2                     
  3532                           ; BSR set to: 0
  3533  0019E2  BF99               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  3534  0019E4  EFF8  F00C         	goto	u2530
  3535  0019E8  EFF6  F00C         	goto	u2531
  3536  0019EC                     u2531:
  3537  0019EC  EF0A  F00D         	goto	l2999
  3538  0019F0                     u2530:
  3539  0019F0                     
  3540                           ; BSR set to: 0
  3541  0019F0  1F99               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3542  0019F2  1F98               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3543  0019F4  1F97               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3544  0019F6  1F96               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3545  0019F8  1F95               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3546  0019FA  1F94               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3547  0019FC  1F93               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3548  0019FE  6D92               	negf	___aodiv@divisor& (0+255),b
  3549  001A00  0E00               	movlw	0
  3550  001A02  2393               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3551  001A04  2394               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3552  001A06  2395               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3553  001A08  2396               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3554  001A0A  2397               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3555  001A0C  2398               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3556  001A0E  2399               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3557  001A10                     
  3558                           ; BSR set to: 0
  3559  001A10  0E01               	movlw	1
  3560  001A12  6F9B               	movwf	___aodiv@sign& (0+255),b
  3561  001A14                     l2999:
  3562                           
  3563                           ; BSR set to: 0
  3564  001A14  BF91               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  3565  001A16  EF11  F00D         	goto	u2540
  3566  001A1A  EF0F  F00D         	goto	u2541
  3567  001A1E                     u2541:
  3568  001A1E  EF23  F00D         	goto	l3005
  3569  001A22                     u2540:
  3570  001A22                     
  3571                           ; BSR set to: 0
  3572  001A22  1F91               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3573  001A24  1F90               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3574  001A26  1F8F               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3575  001A28  1F8E               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3576  001A2A  1F8D               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3577  001A2C  1F8C               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3578  001A2E  1F8B               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3579  001A30  6D8A               	negf	___aodiv@dividend& (0+255),b
  3580  001A32  0E00               	movlw	0
  3581  001A34  238B               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3582  001A36  238C               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3583  001A38  238D               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3584  001A3A  238E               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3585  001A3C  238F               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3586  001A3E  2390               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3587  001A40  2391               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3588  001A42                     
  3589                           ; BSR set to: 0
  3590  001A42  0E01               	movlw	1
  3591  001A44  1B9B               	xorwf	___aodiv@sign& (0+255),f,b
  3592  001A46                     l3005:
  3593                           
  3594                           ; BSR set to: 0
  3595  001A46  EE20  F09C         	lfsr	2,___aodiv@quotient
  3596  001A4A  0E07               	movlw	7
  3597  001A4C                     u2551:
  3598  001A4C  6ADE               	clrf	postinc2,c
  3599  001A4E  06E8               	decf	wreg,f,c
  3600  001A50  E2FD               	bc	u2551
  3601  001A52                     
  3602                           ; BSR set to: 0
  3603  001A52  5192               	movf	___aodiv@divisor& (0+255),w,b
  3604  001A54  1193               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3605  001A56  1194               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3606  001A58  1195               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3607  001A5A  1196               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3608  001A5C  1197               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3609  001A5E  1198               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3610  001A60  1199               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3611  001A62  B4D8               	btfsc	status,2,c
  3612  001A64  EF36  F00D         	goto	u2561
  3613  001A68  EF38  F00D         	goto	u2560
  3614  001A6C                     u2561:
  3615  001A6C  EF8A  F00D         	goto	l3027
  3616  001A70                     u2560:
  3617  001A70                     
  3618                           ; BSR set to: 0
  3619  001A70  0E01               	movlw	1
  3620  001A72  6F9A               	movwf	___aodiv@counter& (0+255),b
  3621  001A74  EF46  F00D         	goto	l3013
  3622  001A78                     l3011:
  3623                           
  3624                           ; BSR set to: 0
  3625  001A78  90D8               	bcf	status,0,c
  3626  001A7A  3792               	rlcf	___aodiv@divisor& (0+255),f,b
  3627  001A7C  3793               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3628  001A7E  3794               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3629  001A80  3795               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3630  001A82  3796               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3631  001A84  3797               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3632  001A86  3798               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3633  001A88  3799               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3634  001A8A  2B9A               	incf	___aodiv@counter& (0+255),f,b
  3635  001A8C                     l3013:
  3636                           
  3637                           ; BSR set to: 0
  3638  001A8C  AF99               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3639  001A8E  EF4B  F00D         	goto	u2571
  3640  001A92  EF4D  F00D         	goto	u2570
  3641  001A96                     u2571:
  3642  001A96  EF3C  F00D         	goto	l3011
  3643  001A9A                     u2570:
  3644  001A9A                     l3015:
  3645                           
  3646                           ; BSR set to: 0
  3647  001A9A  90D8               	bcf	status,0,c
  3648  001A9C  379C               	rlcf	___aodiv@quotient& (0+255),f,b
  3649  001A9E  379D               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3650  001AA0  379E               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3651  001AA2  379F               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3652  001AA4  37A0               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3653  001AA6  37A1               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3654  001AA8  37A2               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3655  001AAA  37A3               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3656  001AAC                     
  3657                           ; BSR set to: 0
  3658  001AAC  5192               	movf	___aodiv@divisor& (0+255),w,b
  3659  001AAE  5D8A               	subwf	___aodiv@dividend& (0+255),w,b
  3660  001AB0  5193               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3661  001AB2  598B               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3662  001AB4  5194               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3663  001AB6  598C               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3664  001AB8  5195               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3665  001ABA  598D               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3666  001ABC  5196               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3667  001ABE  598E               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3668  001AC0  5197               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3669  001AC2  598F               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3670  001AC4  5198               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3671  001AC6  5990               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3672  001AC8  5199               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3673  001ACA  5991               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3674  001ACC  A0D8               	btfss	status,0,c
  3675  001ACE  EF6B  F00D         	goto	u2581
  3676  001AD2  EF6D  F00D         	goto	u2580
  3677  001AD6                     u2581:
  3678  001AD6  EF7E  F00D         	goto	l3023
  3679  001ADA                     u2580:
  3680  001ADA                     
  3681                           ; BSR set to: 0
  3682  001ADA  5192               	movf	___aodiv@divisor& (0+255),w,b
  3683  001ADC  5F8A               	subwf	___aodiv@dividend& (0+255),f,b
  3684  001ADE  5193               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3685  001AE0  5B8B               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3686  001AE2  5194               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3687  001AE4  5B8C               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3688  001AE6  5195               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3689  001AE8  5B8D               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3690  001AEA  5196               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3691  001AEC  5B8E               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3692  001AEE  5197               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3693  001AF0  5B8F               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3694  001AF2  5198               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3695  001AF4  5B90               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3696  001AF6  5199               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3697  001AF8  5B91               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3698  001AFA                     
  3699                           ; BSR set to: 0
  3700  001AFA  819C               	bsf	___aodiv@quotient& (0+255),0,b
  3701  001AFC                     l3023:
  3702                           
  3703                           ; BSR set to: 0
  3704  001AFC  90D8               	bcf	status,0,c
  3705  001AFE  3399               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3706  001B00  3398               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3707  001B02  3397               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3708  001B04  3396               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3709  001B06  3395               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3710  001B08  3394               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3711  001B0A  3393               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3712  001B0C  3392               	rrcf	___aodiv@divisor& (0+255),f,b
  3713  001B0E                     
  3714                           ; BSR set to: 0
  3715  001B0E  2F9A               	decfsz	___aodiv@counter& (0+255),f,b
  3716  001B10  EF4D  F00D         	goto	l3015
  3717  001B14                     l3027:
  3718                           
  3719                           ; BSR set to: 0
  3720  001B14  519B               	movf	___aodiv@sign& (0+255),w,b
  3721  001B16  B4D8               	btfsc	status,2,c
  3722  001B18  EF90  F00D         	goto	u2591
  3723  001B1C  EF92  F00D         	goto	u2590
  3724  001B20                     u2591:
  3725  001B20  EFA2  F00D         	goto	l3031
  3726  001B24                     u2590:
  3727  001B24                     
  3728                           ; BSR set to: 0
  3729  001B24  1FA3               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3730  001B26  1FA2               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3731  001B28  1FA1               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3732  001B2A  1FA0               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3733  001B2C  1F9F               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3734  001B2E  1F9E               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3735  001B30  1F9D               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3736  001B32  6D9C               	negf	___aodiv@quotient& (0+255),b
  3737  001B34  0E00               	movlw	0
  3738  001B36  239D               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3739  001B38  239E               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3740  001B3A  239F               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3741  001B3C  23A0               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3742  001B3E  23A1               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3743  001B40  23A2               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3744  001B42  23A3               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3745  001B44                     l3031:
  3746                           
  3747                           ; BSR set to: 0
  3748  001B44  C09C  F08A         	movff	___aodiv@quotient,?___aodiv
  3749  001B48  C09D  F08B         	movff	___aodiv@quotient+1,?___aodiv+1
  3750  001B4C  C09E  F08C         	movff	___aodiv@quotient+2,?___aodiv+2
  3751  001B50  C09F  F08D         	movff	___aodiv@quotient+3,?___aodiv+3
  3752  001B54  C0A0  F08E         	movff	___aodiv@quotient+4,?___aodiv+4
  3753  001B58  C0A1  F08F         	movff	___aodiv@quotient+5,?___aodiv+5
  3754  001B5C  C0A2  F090         	movff	___aodiv@quotient+6,?___aodiv+6
  3755  001B60  C0A3  F091         	movff	___aodiv@quotient+7,?___aodiv+7
  3756  001B64                     
  3757                           ; BSR set to: 0
  3758  001B64  0012               	return		;funcret
  3759  001B66                     __end_of___aodiv:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _atoi *****************
  3763 ;; Defined at:
  3764 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  s               2   17[BANK0 ] PTR const unsigned char 
  3767 ;;		 -> STR_4(15), STR_3(15), STR_2(15), STR_1(16), 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  n               2   30[BANK0 ] int 
  3770 ;;  neg             2   23[BANK0 ] int 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  2   17[BANK0 ] int 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3780 ;;      Params:         0       2       0       0       0       0       0
  3781 ;;      Locals:         0       9       0       0       0       0       0
  3782 ;;      Temps:          0       4       0       0       0       0       0
  3783 ;;      Totals:         0      15       0       0       0       0       0
  3784 ;;Total ram usage:       15 bytes
  3785 ;; Hardware stack levels used: 1
  3786 ;; Hardware stack levels required when called: 12
  3787 ;; This function calls:
  3788 ;;		___wmul
  3789 ;;		_isdigit
  3790 ;;		_isspace
  3791 ;; This function is called by:
  3792 ;;		_vfpfcnvrt
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text13
  3797  0016B8                     __ptext13:
  3798                           	callstack 0
  3799  0016B8                     _atoi:
  3800                           	callstack 15
  3801  0016B8  0E00               	movlw	0
  3802  0016BA  0100               	movlb	0	; () banked
  3803  0016BC  6F9F               	movwf	(atoi@n+1)& (0+255),b
  3804  0016BE  0E00               	movlw	0
  3805  0016C0  6F9E               	movwf	atoi@n& (0+255),b
  3806  0016C2  0E00               	movlw	0
  3807  0016C4  6F98               	movwf	(atoi@neg+1)& (0+255),b
  3808  0016C6  0E00               	movlw	0
  3809  0016C8  6F97               	movwf	atoi@neg& (0+255),b
  3810  0016CA  EF69  F00B         	goto	l3419
  3811  0016CE                     l3417:
  3812                           
  3813                           ; BSR set to: 0
  3814  0016CE  4B91               	infsnz	atoi@s& (0+255),f,b
  3815  0016D0  2B92               	incf	(atoi@s+1)& (0+255),f,b
  3816  0016D2                     l3419:
  3817                           
  3818                           ; BSR set to: 0
  3819  0016D2  0E01               	movlw	1
  3820  0016D4  6F9D               	movwf	_atoi$981& (0+255),b
  3821  0016D6                     
  3822                           ; BSR set to: 0
  3823  0016D6  C091  FFF6         	movff	atoi@s,tblptrl
  3824  0016DA  C092  FFF7         	movff	atoi@s+1,tblptrh
  3825  0016DE                     	if	0	;tblptru may be non-zero
  3826  0016DE                     	endif
  3827  0016DE                     	if	0	;tblptru may be non-zero
  3828  0016DE                     	endif
  3829  0016DE  0008               	tblrd		*
  3830  0016E0  50F5               	movf	tablat,w,c
  3831  0016E2  0A20               	xorlw	32
  3832  0016E4  B4D8               	btfsc	status,2,c
  3833  0016E6  EF77  F00B         	goto	u3211
  3834  0016EA  EF79  F00B         	goto	u3210
  3835  0016EE                     u3211:
  3836  0016EE  EF96  F00B         	goto	l3427
  3837  0016F2                     u3210:
  3838  0016F2                     
  3839                           ; BSR set to: 0
  3840  0016F2  0EF7               	movlw	247
  3841  0016F4  6F93               	movwf	??_atoi& (0+255),b
  3842  0016F6  0EFF               	movlw	255
  3843  0016F8  6F94               	movwf	(??_atoi+1)& (0+255),b
  3844  0016FA  C091  FFF6         	movff	atoi@s,tblptrl
  3845  0016FE  C092  FFF7         	movff	atoi@s+1,tblptrh
  3846  001702                     	if	0	;tblptru may be non-zero
  3847  001702                     	endif
  3848  001702                     	if	0	;tblptru may be non-zero
  3849  001702                     	endif
  3850  001702  0008               	tblrd		*
  3851  001704  50F5               	movf	tablat,w,c
  3852  001706  6F95               	movwf	(??_atoi+2)& (0+255),b
  3853  001708  6B96               	clrf	(??_atoi+3)& (0+255),b
  3854  00170A  5193               	movf	??_atoi& (0+255),w,b
  3855  00170C  2795               	addwf	(??_atoi+2)& (0+255),f,b
  3856  00170E  5194               	movf	(??_atoi+1)& (0+255),w,b
  3857  001710  2396               	addwfc	(??_atoi+3)& (0+255),f,b
  3858  001712  5196               	movf	(??_atoi+3)& (0+255),w,b
  3859  001714  E109               	bnz	u3220
  3860  001716  0E05               	movlw	5
  3861  001718  5D95               	subwf	(??_atoi+2)& (0+255),w,b
  3862  00171A  A0D8               	btfss	status,0,c
  3863  00171C  EF92  F00B         	goto	u3221
  3864  001720  EF94  F00B         	goto	u3220
  3865  001724                     u3221:
  3866  001724  EF96  F00B         	goto	l3427
  3867  001728                     u3220:
  3868  001728                     
  3869                           ; BSR set to: 0
  3870  001728  0E00               	movlw	0
  3871  00172A  6F9D               	movwf	_atoi$981& (0+255),b
  3872  00172C                     l3427:
  3873                           
  3874                           ; BSR set to: 0
  3875  00172C  C09D  F099         	movff	_atoi$981,_atoi$980
  3876  001730  6B9A               	clrf	(_atoi$980+1)& (0+255),b
  3877  001732                     
  3878                           ; BSR set to: 0
  3879  001732  5199               	movf	_atoi$980& (0+255),w,b
  3880  001734  119A               	iorwf	(_atoi$980+1)& (0+255),w,b
  3881  001736  A4D8               	btfss	status,2,c
  3882  001738  EFA0  F00B         	goto	u3231
  3883  00173C  EFA2  F00B         	goto	u3230
  3884  001740                     u3231:
  3885  001740  EF67  F00B         	goto	l3417
  3886  001744                     u3230:
  3887  001744  EFAC  F00B         	goto	l3437
  3888  001748                     l3433:
  3889                           
  3890                           ; BSR set to: 0
  3891  001748  0E00               	movlw	0
  3892  00174A  6F98               	movwf	(atoi@neg+1)& (0+255),b
  3893  00174C  0E01               	movlw	1
  3894  00174E  6F97               	movwf	atoi@neg& (0+255),b
  3895  001750                     l3435:
  3896                           
  3897                           ; BSR set to: 0
  3898  001750  4B91               	infsnz	atoi@s& (0+255),f,b
  3899  001752  2B92               	incf	(atoi@s+1)& (0+255),f,b
  3900  001754  EFE2  F00B         	goto	l3443
  3901  001758                     l3437:
  3902                           
  3903                           ; BSR set to: 0
  3904  001758  C091  FFF6         	movff	atoi@s,tblptrl
  3905  00175C  C092  FFF7         	movff	atoi@s+1,tblptrh
  3906  001760                     	if	0	;tblptru may be non-zero
  3907  001760                     	endif
  3908  001760                     	if	0	;tblptru may be non-zero
  3909  001760                     	endif
  3910  001760  0008               	tblrd		*
  3911  001762  50F5               	movf	tablat,w,c
  3912  001764  6F93               	movwf	??_atoi& (0+255),b
  3913  001766  6B94               	clrf	(??_atoi+1)& (0+255),b
  3914                           
  3915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3916                           ; Switch size 1, requested type "simple"
  3917                           ; Number of cases is 1, Range of values is 0 to 0
  3918                           ; switch strategies available:
  3919                           ; Name         Instructions Cycles
  3920                           ; simple_byte            4     3 (average)
  3921                           ;	Chosen strategy is simple_byte
  3922  001768  5194               	movf	(??_atoi+1)& (0+255),w,b
  3923  00176A  0A00               	xorlw	0	; case 0
  3924  00176C  B4D8               	btfsc	status,2,c
  3925  00176E  EFBB  F00B         	goto	l4305
  3926  001772  EFE2  F00B         	goto	l3443
  3927  001776                     l4305:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ; Switch size 1, requested type "simple"
  3931                           ; Number of cases is 2, Range of values is 43 to 45
  3932                           ; switch strategies available:
  3933                           ; Name         Instructions Cycles
  3934                           ; simple_byte            7     4 (average)
  3935                           ;	Chosen strategy is simple_byte
  3936  001776  5193               	movf	??_atoi& (0+255),w,b
  3937  001778  0A2B               	xorlw	43	; case 43
  3938  00177A  B4D8               	btfsc	status,2,c
  3939  00177C  EFA8  F00B         	goto	l3435
  3940  001780  0A06               	xorlw	6	; case 45
  3941  001782  B4D8               	btfsc	status,2,c
  3942  001784  EFA4  F00B         	goto	l3433
  3943  001788  EFE2  F00B         	goto	l3443
  3944  00178C                     l3439:
  3945                           
  3946                           ; BSR set to: 0
  3947  00178C  C09E  F08A         	movff	atoi@n,___wmul@multiplier
  3948  001790  C09F  F08B         	movff	atoi@n+1,___wmul@multiplier+1
  3949  001794  0E00               	movlw	0
  3950  001796  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3951  001798  0E0A               	movlw	10
  3952  00179A  6F8C               	movwf	___wmul@multiplicand& (0+255),b
  3953  00179C  ECA3  F019         	call	___wmul	;wreg free
  3954  0017A0  C091  FFF6         	movff	atoi@s,tblptrl
  3955  0017A4  C092  FFF7         	movff	atoi@s+1,tblptrh
  3956  0017A8                     	if	0	;tblptru may be non-zero
  3957  0017A8                     	endif
  3958  0017A8                     	if	0	;tblptru may be non-zero
  3959  0017A8                     	endif
  3960  0017A8  0008               	tblrd		*
  3961  0017AA  50F5               	movf	tablat,w,c
  3962  0017AC  0100               	movlb	0	; () banked
  3963  0017AE  5F8A               	subwf	?___wmul& (0+255),f,b
  3964  0017B0  0E00               	movlw	0
  3965  0017B2  5B8B               	subwfb	(?___wmul+1)& (0+255),f,b
  3966  0017B4  0E30               	movlw	48
  3967  0017B6  258A               	addwf	?___wmul& (0+255),w,b
  3968  0017B8  6F9E               	movwf	atoi@n& (0+255),b
  3969  0017BA  0E00               	movlw	0
  3970  0017BC  218B               	addwfc	(?___wmul+1)& (0+255),w,b
  3971  0017BE  6F9F               	movwf	(atoi@n+1)& (0+255),b
  3972  0017C0  EFA8  F00B         	goto	l3435
  3973  0017C4                     l3443:
  3974                           
  3975                           ; BSR set to: 0
  3976  0017C4  0ED0               	movlw	208
  3977  0017C6  6F93               	movwf	??_atoi& (0+255),b
  3978  0017C8  0EFF               	movlw	255
  3979  0017CA  6F94               	movwf	(??_atoi+1)& (0+255),b
  3980  0017CC  C091  FFF6         	movff	atoi@s,tblptrl
  3981  0017D0  C092  FFF7         	movff	atoi@s+1,tblptrh
  3982  0017D4                     	if	0	;tblptru may be non-zero
  3983  0017D4                     	endif
  3984  0017D4                     	if	0	;tblptru may be non-zero
  3985  0017D4                     	endif
  3986  0017D4  0008               	tblrd		*
  3987  0017D6  50F5               	movf	tablat,w,c
  3988  0017D8  6F95               	movwf	(??_atoi+2)& (0+255),b
  3989  0017DA  6B96               	clrf	(??_atoi+3)& (0+255),b
  3990  0017DC  5193               	movf	??_atoi& (0+255),w,b
  3991  0017DE  2795               	addwf	(??_atoi+2)& (0+255),f,b
  3992  0017E0  5194               	movf	(??_atoi+1)& (0+255),w,b
  3993  0017E2  2396               	addwfc	(??_atoi+3)& (0+255),f,b
  3994  0017E4  5196               	movf	(??_atoi+3)& (0+255),w,b
  3995  0017E6  E10A               	bnz	u3240
  3996  0017E8  0E0A               	movlw	10
  3997  0017EA  5D95               	subwf	(??_atoi+2)& (0+255),w,b
  3998  0017EC  A0D8               	btfss	status,0,c
  3999  0017EE  EFFB  F00B         	goto	u3241
  4000  0017F2  EFFE  F00B         	goto	u3240
  4001  0017F6                     u3241:
  4002  0017F6  0E01               	movlw	1
  4003  0017F8  EFFF  F00B         	goto	u3250
  4004  0017FC                     u3240:
  4005  0017FC  0E00               	movlw	0
  4006  0017FE                     u3250:
  4007  0017FE  6F9B               	movwf	_atoi$982& (0+255),b
  4008  001800  6B9C               	clrf	(_atoi$982+1)& (0+255),b
  4009  001802                     
  4010                           ; BSR set to: 0
  4011  001802  519B               	movf	_atoi$982& (0+255),w,b
  4012  001804  119C               	iorwf	(_atoi$982+1)& (0+255),w,b
  4013  001806  A4D8               	btfss	status,2,c
  4014  001808  EF08  F00C         	goto	u3261
  4015  00180C  EF0A  F00C         	goto	u3260
  4016  001810                     u3261:
  4017  001810  EFC6  F00B         	goto	l3439
  4018  001814                     u3260:
  4019  001814                     
  4020                           ; BSR set to: 0
  4021  001814  5197               	movf	atoi@neg& (0+255),w,b
  4022  001816  1198               	iorwf	(atoi@neg+1)& (0+255),w,b
  4023  001818  A4D8               	btfss	status,2,c
  4024  00181A  EF11  F00C         	goto	u3271
  4025  00181E  EF13  F00C         	goto	u3270
  4026  001822                     u3271:
  4027  001822  EF21  F00C         	goto	l1156
  4028  001826                     u3270:
  4029  001826                     
  4030                           ; BSR set to: 0
  4031  001826  C09E  F093         	movff	atoi@n,??_atoi
  4032  00182A  C09F  F094         	movff	atoi@n+1,??_atoi+1
  4033  00182E  1F93               	comf	??_atoi& (0+255),f,b
  4034  001830  1F94               	comf	(??_atoi+1)& (0+255),f,b
  4035  001832  4B93               	infsnz	??_atoi& (0+255),f,b
  4036  001834  2B94               	incf	(??_atoi+1)& (0+255),f,b
  4037  001836  C093  F091         	movff	??_atoi,?_atoi
  4038  00183A  C094  F092         	movff	??_atoi+1,?_atoi+1
  4039  00183E  EF25  F00C         	goto	l1159
  4040  001842                     l1156:
  4041                           
  4042                           ; BSR set to: 0
  4043  001842  C09E  F091         	movff	atoi@n,?_atoi
  4044  001846  C09F  F092         	movff	atoi@n+1,?_atoi+1
  4045  00184A                     l1159:
  4046                           
  4047                           ; BSR set to: 0
  4048  00184A  0012               	return		;funcret
  4049  00184C                     __end_of_atoi:
  4050                           	callstack 0
  4051                           
  4052 ;; *************** function _isspace *****************
  4053 ;; Defined at:
  4054 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  c               2   10[BANK0 ] int 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;		None
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  2   10[BANK0 ] int 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4068 ;;      Params:         0       2       0       0       0       0       0
  4069 ;;      Locals:         0       1       0       0       0       0       0
  4070 ;;      Temps:          0       4       0       0       0       0       0
  4071 ;;      Totals:         0       7       0       0       0       0       0
  4072 ;;Total ram usage:        7 bytes
  4073 ;; Hardware stack levels used: 1
  4074 ;; Hardware stack levels required when called: 11
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_atoi
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text14
  4083  002E8E                     __ptext14:
  4084                           	callstack 0
  4085  002E8E                     _isspace:
  4086                           	callstack 15
  4087  002E8E  0E01               	movlw	1
  4088  002E90  0100               	movlb	0	; () banked
  4089  002E92  6F90               	movwf	_isspace$998& (0+255),b
  4090  002E94                     
  4091                           ; BSR set to: 0
  4092  002E94  0E20               	movlw	32
  4093  002E96  198A               	xorwf	isspace@c& (0+255),w,b
  4094  002E98  118B               	iorwf	(isspace@c+1)& (0+255),w,b
  4095  002E9A  B4D8               	btfsc	status,2,c
  4096  002E9C  EF52  F017         	goto	u2731
  4097  002EA0  EF54  F017         	goto	u2730
  4098  002EA4                     u2731:
  4099  002EA4  EF6D  F017         	goto	l3109
  4100  002EA8                     u2730:
  4101  002EA8                     
  4102                           ; BSR set to: 0
  4103  002EA8  0EF7               	movlw	247
  4104  002EAA  6F8C               	movwf	??_isspace& (0+255),b
  4105  002EAC  0EFF               	movlw	255
  4106  002EAE  6F8D               	movwf	(??_isspace+1)& (0+255),b
  4107  002EB0  C08A  F08E         	movff	isspace@c,??_isspace+2
  4108  002EB4  C08B  F08F         	movff	isspace@c+1,??_isspace+3
  4109  002EB8  518C               	movf	??_isspace& (0+255),w,b
  4110  002EBA  278E               	addwf	(??_isspace+2)& (0+255),f,b
  4111  002EBC  518D               	movf	(??_isspace+1)& (0+255),w,b
  4112  002EBE  238F               	addwfc	(??_isspace+3)& (0+255),f,b
  4113  002EC0  518F               	movf	(??_isspace+3)& (0+255),w,b
  4114  002EC2  E109               	bnz	u2740
  4115  002EC4  0E05               	movlw	5
  4116  002EC6  5D8E               	subwf	(??_isspace+2)& (0+255),w,b
  4117  002EC8  A0D8               	btfss	status,0,c
  4118  002ECA  EF69  F017         	goto	u2741
  4119  002ECE  EF6B  F017         	goto	u2740
  4120  002ED2                     u2741:
  4121  002ED2  EF6D  F017         	goto	l3109
  4122  002ED6                     u2740:
  4123  002ED6                     
  4124                           ; BSR set to: 0
  4125  002ED6  0E00               	movlw	0
  4126  002ED8  6F90               	movwf	_isspace$998& (0+255),b
  4127  002EDA                     l3109:
  4128                           
  4129                           ; BSR set to: 0
  4130  002EDA  C090  F08A         	movff	_isspace$998,?_isspace
  4131  002EDE  6B8B               	clrf	(?_isspace+1)& (0+255),b
  4132  002EE0                     
  4133                           ; BSR set to: 0
  4134  002EE0  0012               	return		;funcret
  4135  002EE2                     __end_of_isspace:
  4136                           	callstack 0
  4137                           
  4138 ;; *************** function _isdigit *****************
  4139 ;; Defined at:
  4140 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  c               2   10[BANK0 ] int 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  2   10[BANK0 ] int 
  4147 ;; Registers used:
  4148 ;;		wreg, status,2, status,0
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4154 ;;      Params:         0       2       0       0       0       0       0
  4155 ;;      Locals:         0       0       0       0       0       0       0
  4156 ;;      Temps:          0       4       0       0       0       0       0
  4157 ;;      Totals:         0       6       0       0       0       0       0
  4158 ;;Total ram usage:        6 bytes
  4159 ;; Hardware stack levels used: 1
  4160 ;; Hardware stack levels required when called: 11
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		_vfpfcnvrt
  4165 ;;		_atoi
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text15
  4170  0031A2                     __ptext15:
  4171                           	callstack 0
  4172  0031A2                     _isdigit:
  4173                           	callstack 16
  4174  0031A2  0ED0               	movlw	208
  4175  0031A4  0100               	movlb	0	; () banked
  4176  0031A6  6F8C               	movwf	??_isdigit& (0+255),b
  4177  0031A8  0EFF               	movlw	255
  4178  0031AA  6F8D               	movwf	(??_isdigit+1)& (0+255),b
  4179  0031AC  C08A  F08E         	movff	isdigit@c,??_isdigit+2
  4180  0031B0  C08B  F08F         	movff	isdigit@c+1,??_isdigit+3
  4181  0031B4  518C               	movf	??_isdigit& (0+255),w,b
  4182  0031B6  278E               	addwf	(??_isdigit+2)& (0+255),f,b
  4183  0031B8  518D               	movf	(??_isdigit+1)& (0+255),w,b
  4184  0031BA  238F               	addwfc	(??_isdigit+3)& (0+255),f,b
  4185  0031BC  518F               	movf	(??_isdigit+3)& (0+255),w,b
  4186  0031BE  E10A               	bnz	u2710
  4187  0031C0  0E0A               	movlw	10
  4188  0031C2  5D8E               	subwf	(??_isdigit+2)& (0+255),w,b
  4189  0031C4  A0D8               	btfss	status,0,c
  4190  0031C6  EFE7  F018         	goto	u2711
  4191  0031CA  EFEA  F018         	goto	u2710
  4192  0031CE                     u2711:
  4193  0031CE  0E01               	movlw	1
  4194  0031D0  EFEB  F018         	goto	u2720
  4195  0031D4                     u2710:
  4196  0031D4  0E00               	movlw	0
  4197  0031D6                     u2720:
  4198  0031D6  6F8A               	movwf	?_isdigit& (0+255),b
  4199  0031D8  6B8B               	clrf	(?_isdigit+1)& (0+255),b
  4200  0031DA                     
  4201                           ; BSR set to: 0
  4202  0031DA  0012               	return		;funcret
  4203  0031DC                     __end_of_isdigit:
  4204                           	callstack 0
  4205                           
  4206 ;; *************** function ___wmul *****************
  4207 ;; Defined at:
  4208 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  multiplier      2   10[BANK0 ] unsigned int 
  4211 ;;  multiplicand    2   12[BANK0 ] unsigned int 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  product         2   14[BANK0 ] unsigned int 
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  2   10[BANK0 ] unsigned int 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, status,0, prodl, prodh
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4223 ;;      Params:         0       4       0       0       0       0       0
  4224 ;;      Locals:         0       2       0       0       0       0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0
  4226 ;;      Totals:         0       6       0       0       0       0       0
  4227 ;;Total ram usage:        6 bytes
  4228 ;; Hardware stack levels used: 1
  4229 ;; Hardware stack levels required when called: 11
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_atoi
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text16
  4238  003346                     __ptext16:
  4239                           	callstack 0
  4240  003346                     ___wmul:
  4241                           	callstack 15
  4242  003346  0100               	movlb	0	; () banked
  4243  003348  518A               	movf	___wmul@multiplier& (0+255),w,b
  4244  00334A  038C               	mulwf	___wmul@multiplicand& (0+255),b
  4245  00334C  CFF3 F08E          	movff	prodl,___wmul@product
  4246  003350  CFF4 F08F          	movff	prodh,___wmul@product+1
  4247  003354  518A               	movf	___wmul@multiplier& (0+255),w,b
  4248  003356  038D               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4249  003358  50F3               	movf	243,w,c
  4250  00335A  278F               	addwf	(___wmul@product+1)& (0+255),f,b
  4251  00335C  518B               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4252  00335E  038C               	mulwf	___wmul@multiplicand& (0+255),b
  4253  003360  50F3               	movf	243,w,c
  4254  003362  278F               	addwf	(___wmul@product+1)& (0+255),f,b
  4255  003364                     
  4256                           ; BSR set to: 0
  4257  003364  C08E  F08A         	movff	___wmul@product,?___wmul
  4258  003368  C08F  F08B         	movff	___wmul@product+1,?___wmul+1
  4259  00336C                     
  4260                           ; BSR set to: 0
  4261  00336C  0012               	return		;funcret
  4262  00336E                     __end_of___wmul:
  4263                           	callstack 0
  4264                           
  4265 ;; *************** function _lcd1602_print *****************
  4266 ;; Defined at:
  4267 ;;		line 112 in file "src/lcd1602.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  str             2   11[BANK0 ] PTR unsigned char 
  4270 ;;		 -> temp(16), 
  4271 ;;  length          2   13[BANK0 ] int 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  i               2   16[BANK0 ] int 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4283 ;;      Params:         0       4       0       0       0       0       0
  4284 ;;      Locals:         0       2       0       0       0       0       0
  4285 ;;      Temps:          0       1       0       0       0       0       0
  4286 ;;      Totals:         0       7       0       0       0       0       0
  4287 ;;Total ram usage:        7 bytes
  4288 ;; Hardware stack levels used: 1
  4289 ;; Hardware stack levels required when called: 12
  4290 ;; This function calls:
  4291 ;;		_lcd1602_displaychar
  4292 ;; This function is called by:
  4293 ;;		_main
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text17
  4298  00301A                     __ptext17:
  4299                           	callstack 0
  4300  00301A                     _lcd1602_print:
  4301                           	callstack 18
  4302  00301A                     
  4303                           ;src/lcd1602.c: 113:     for(int i = 0; i < length; i++){
  4304  00301A  0E00               	movlw	0
  4305  00301C  0100               	movlb	0	; () banked
  4306  00301E  6F91               	movwf	(lcd1602_print@i+1)& (0+255),b
  4307  003020  0E00               	movlw	0
  4308  003022  6F90               	movwf	lcd1602_print@i& (0+255),b
  4309  003024  EF20  F018         	goto	l3819
  4310  003028                     l3815:
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;src/lcd1602.c: 114:         lcd1602_displaychar(str[i]);
  4314  003028  5190               	movf	lcd1602_print@i& (0+255),w,b
  4315  00302A  258B               	addwf	lcd1602_print@str& (0+255),w,b
  4316  00302C  6ED9               	movwf	fsr2l,c
  4317  00302E  5191               	movf	(lcd1602_print@i+1)& (0+255),w,b
  4318  003030  218C               	addwfc	(lcd1602_print@str+1)& (0+255),w,b
  4319  003032  6EDA               	movwf	fsr2h,c
  4320  003034  50DF               	movf	indf2,w,c
  4321  003036  EC26  F01A         	call	_lcd1602_displaychar
  4322  00303A                     
  4323                           ;src/lcd1602.c: 115:     }
  4324  00303A  0100               	movlb	0	; () banked
  4325  00303C  4B90               	infsnz	lcd1602_print@i& (0+255),f,b
  4326  00303E  2B91               	incf	(lcd1602_print@i+1)& (0+255),f,b
  4327  003040                     l3819:
  4328                           
  4329                           ; BSR set to: 0
  4330  003040  518D               	movf	lcd1602_print@length& (0+255),w,b
  4331  003042  5D90               	subwf	lcd1602_print@i& (0+255),w,b
  4332  003044  5191               	movf	(lcd1602_print@i+1)& (0+255),w,b
  4333  003046  0A80               	xorlw	128
  4334  003048  6F8F               	movwf	??_lcd1602_print& (0+255),b
  4335  00304A  518E               	movf	(lcd1602_print@length+1)& (0+255),w,b
  4336  00304C  0A80               	xorlw	128
  4337  00304E  598F               	subwfb	??_lcd1602_print& (0+255),w,b
  4338  003050  A0D8               	btfss	status,0,c
  4339  003052  EF2D  F018         	goto	u3541
  4340  003056  EF2F  F018         	goto	u3540
  4341  00305A                     u3541:
  4342  00305A  EF14  F018         	goto	l3815
  4343  00305E                     u3540:
  4344  00305E                     
  4345                           ; BSR set to: 0
  4346  00305E  0012               	return		;funcret
  4347  003060                     __end_of_lcd1602_print:
  4348                           	callstack 0
  4349                           
  4350 ;; *************** function _lcd1602_displaychar *****************
  4351 ;; Defined at:
  4352 ;;		line 129 in file "src/lcd1602.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  value           1    wreg     unsigned char 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  value           1   10[BANK0 ] unsigned char 
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, status,2, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4366 ;;      Params:         0       0       0       0       0       0       0
  4367 ;;      Locals:         0       1       0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0
  4369 ;;      Totals:         0       1       0       0       0       0       0
  4370 ;;Total ram usage:        1 bytes
  4371 ;; Hardware stack levels used: 1
  4372 ;; Hardware stack levels required when called: 11
  4373 ;; This function calls:
  4374 ;;		Nothing
  4375 ;; This function is called by:
  4376 ;;		_lcd1602_print
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text18
  4381  00344C                     __ptext18:
  4382                           	callstack 0
  4383  00344C                     _lcd1602_displaychar:
  4384                           	callstack 18
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;incstack = 0
  4388                           ;lcd1602_displaychar@value stored from wreg
  4389  00344C  0100               	movlb	0	; () banked
  4390  00344E  6F8A               	movwf	lcd1602_displaychar@value& (0+255),b
  4391  003450                     
  4392                           ;src/lcd1602.c: 130:     LATD = value;
  4393  003450  C08A  FF8C         	movff	lcd1602_displaychar@value,3980	;volatile
  4394  003454                     
  4395                           ;src/lcd1602.c: 134:     PORTA = 0x05;
  4396  003454  0E05               	movlw	5
  4397  003456  6E80               	movwf	128,c	;volatile
  4398  003458                     
  4399                           ;src/lcd1602.c: 135:     _delay((unsigned long)((4)*(1000000/4000.0)));
  4400  003458  0EC8               	movlw	200
  4401  00345A                     u3867:
  4402  00345A  D000               	nop2	
  4403  00345C  2EE8               	decfsz	wreg,f,c
  4404  00345E  D7FD               	bra	u3867
  4405  003460                     
  4406                           ;src/lcd1602.c: 137:     PORTA = 0x01;
  4407  003460  0E01               	movlw	1
  4408  003462  6E80               	movwf	128,c	;volatile
  4409  003464  0012               	return		;funcret
  4410  003466                     __end_of_lcd1602_displaychar:
  4411                           	callstack 0
  4412                           
  4413 ;; *************** function _lcd1602_initial *****************
  4414 ;; Defined at:
  4415 ;;		line 7 in file "src/lcd1602.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;		None
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0, cstack
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4429 ;;      Params:         0       0       0       0       0       0       0
  4430 ;;      Locals:         0       0       0       0       0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0
  4432 ;;      Totals:         0       0       0       0       0       0       0
  4433 ;;Total ram usage:        0 bytes
  4434 ;; Hardware stack levels used: 1
  4435 ;; Hardware stack levels required when called: 13
  4436 ;; This function calls:
  4437 ;;		_lcd1602_clear
  4438 ;;		_lcd1602_cmd
  4439 ;;		_lcd1602_display
  4440 ;;		_lcd1602_home
  4441 ;; This function is called by:
  4442 ;;		_main
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text19
  4447  002F34                     __ptext19:
  4448                           	callstack 0
  4449  002F34                     _lcd1602_initial:
  4450                           	callstack 17
  4451  002F34                     
  4452                           ;src/lcd1602.c: 9:     ADCON1 = 0x0F;
  4453  002F34  0E0F               	movlw	15
  4454  002F36  6EC1               	movwf	193,c	;volatile
  4455                           
  4456                           ;src/lcd1602.c: 10:     LATD = 0x00;
  4457  002F38  0E00               	movlw	0
  4458  002F3A  6E8C               	movwf	140,c	;volatile
  4459                           
  4460                           ;src/lcd1602.c: 11:     LATA = 0x00;
  4461  002F3C  0E00               	movlw	0
  4462  002F3E  6E89               	movwf	137,c	;volatile
  4463                           
  4464                           ;src/lcd1602.c: 12:     TRISD = 0x00;
  4465  002F40  0E00               	movlw	0
  4466  002F42  6E95               	movwf	149,c	;volatile
  4467                           
  4468                           ;src/lcd1602.c: 13:     TRISA = 0x00;
  4469  002F44  0E00               	movlw	0
  4470  002F46  6E92               	movwf	146,c	;volatile
  4471                           
  4472                           ;src/lcd1602.c: 15:     _rows = 0;
  4473  002F48  0E00               	movlw	0
  4474  002F4A  0101               	movlb	1	; () banked
  4475  002F4C  6F02               	movwf	__rows& (0+255),b
  4476                           
  4477                           ;src/lcd1602.c: 16:     _cols = 0;
  4478  002F4E  0E00               	movlw	0
  4479  002F50  6F03               	movwf	__cols& (0+255),b
  4480  002F52                     
  4481                           ; BSR set to: 1
  4482                           ;src/lcd1602.c: 18:     _delay((unsigned long)((4)*(1000000/4000.0)));
  4483  002F52  0EC8               	movlw	200
  4484  002F54                     u3877:
  4485  002F54  D000               	nop2	
  4486  002F56  2EE8               	decfsz	wreg,f,c
  4487  002F58  D7FD               	bra	u3877
  4488  002F5A                     
  4489                           ;src/lcd1602.c: 19:     _displayfunction = 0x10 | 0x08 | 0x04;
  4490  002F5A  0E1C               	movlw	28
  4491  002F5C  0101               	movlb	1	; () banked
  4492  002F5E  6F04               	movwf	__displayfunction& (0+255),b
  4493  002F60                     
  4494                           ; BSR set to: 1
  4495                           ;src/lcd1602.c: 20:     lcd1602_cmd(0x20 | _displayfunction);
  4496  002F60  0E3C               	movlw	60
  4497  002F62  EC33  F01A         	call	_lcd1602_cmd
  4498  002F66                     
  4499                           ;src/lcd1602.c: 22:     _displaycontrol = 0x04 | 0x00 | 0x00;
  4500  002F66  0E04               	movlw	4
  4501  002F68  6E7E               	movwf	__displaycontrol^0,c
  4502  002F6A                     
  4503                           ;src/lcd1602.c: 23:     lcd1602_display();
  4504  002F6A  EC7D  F01A         	call	_lcd1602_display	;wreg free
  4505  002F6E                     
  4506                           ;src/lcd1602.c: 25:     lcd1602_clear();
  4507  002F6E  ECA3  F01A         	call	_lcd1602_clear	;wreg free
  4508  002F72                     
  4509                           ;src/lcd1602.c: 27:     _displaymode = 0x02 | 0x01;
  4510  002F72  0E03               	movlw	3
  4511  002F74  6E7D               	movwf	__displaymode^0,c
  4512  002F76                     
  4513                           ;src/lcd1602.c: 28:     lcd1602_cmd(0x04 | _displaymode);
  4514  002F76  507D               	movf	__displaymode^0,w,c
  4515  002F78  0904               	iorlw	4
  4516  002F7A  EC33  F01A         	call	_lcd1602_cmd
  4517  002F7E                     
  4518                           ;src/lcd1602.c: 30:     lcd1602_home();
  4519  002F7E  EC9F  F01A         	call	_lcd1602_home	;wreg free
  4520  002F82  0012               	return		;funcret
  4521  002F84                     __end_of_lcd1602_initial:
  4522                           	callstack 0
  4523                           
  4524 ;; *************** function _lcd1602_home *****************
  4525 ;; Defined at:
  4526 ;;		line 38 in file "src/lcd1602.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4540 ;;      Params:         0       0       0       0       0       0       0
  4541 ;;      Locals:         0       0       0       0       0       0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0
  4543 ;;      Totals:         0       0       0       0       0       0       0
  4544 ;;Total ram usage:        0 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 12
  4547 ;; This function calls:
  4548 ;;		_lcd1602_cmd
  4549 ;; This function is called by:
  4550 ;;		_lcd1602_initial
  4551 ;;		_main
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text20
  4556  00353E                     __ptext20:
  4557                           	callstack 0
  4558  00353E                     _lcd1602_home:
  4559                           	callstack 17
  4560  00353E                     
  4561                           ;src/lcd1602.c: 39:     lcd1602_cmd(0x02);
  4562  00353E  0E02               	movlw	2
  4563  003540  EC33  F01A         	call	_lcd1602_cmd
  4564  003544  0012               	return		;funcret
  4565  003546                     __end_of_lcd1602_home:
  4566                           	callstack 0
  4567                           
  4568 ;; *************** function _lcd1602_display *****************
  4569 ;; Defined at:
  4570 ;;		line 47 in file "src/lcd1602.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;		None
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  1    wreg      void 
  4577 ;; Registers used:
  4578 ;;		wreg, status,2, status,0, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4584 ;;      Params:         0       0       0       0       0       0       0
  4585 ;;      Locals:         0       0       0       0       0       0       0
  4586 ;;      Temps:          0       0       0       0       0       0       0
  4587 ;;      Totals:         0       0       0       0       0       0       0
  4588 ;;Total ram usage:        0 bytes
  4589 ;; Hardware stack levels used: 1
  4590 ;; Hardware stack levels required when called: 12
  4591 ;; This function calls:
  4592 ;;		_lcd1602_cmd
  4593 ;; This function is called by:
  4594 ;;		_lcd1602_initial
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text21
  4599  0034FA                     __ptext21:
  4600                           	callstack 0
  4601  0034FA                     _lcd1602_display:
  4602                           	callstack 17
  4603  0034FA                     
  4604                           ;src/lcd1602.c: 48:     _displaycontrol |= 0x04;
  4605  0034FA  847E               	bsf	__displaycontrol^0,2,c
  4606  0034FC                     
  4607                           ;src/lcd1602.c: 49:     lcd1602_cmd(0x08 | _displaycontrol);
  4608  0034FC  507E               	movf	__displaycontrol^0,w,c
  4609  0034FE  0908               	iorlw	8
  4610  003500  EC33  F01A         	call	_lcd1602_cmd
  4611  003504  0012               	return		;funcret
  4612  003506                     __end_of_lcd1602_display:
  4613                           	callstack 0
  4614                           
  4615 ;; *************** function _lcd1602_clear *****************
  4616 ;; Defined at:
  4617 ;;		line 34 in file "src/lcd1602.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;		None
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      void 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4631 ;;      Params:         0       0       0       0       0       0       0
  4632 ;;      Locals:         0       0       0       0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0
  4634 ;;      Totals:         0       0       0       0       0       0       0
  4635 ;;Total ram usage:        0 bytes
  4636 ;; Hardware stack levels used: 1
  4637 ;; Hardware stack levels required when called: 12
  4638 ;; This function calls:
  4639 ;;		_lcd1602_cmd
  4640 ;; This function is called by:
  4641 ;;		_lcd1602_initial
  4642 ;;		_main
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text22
  4647  003546                     __ptext22:
  4648                           	callstack 0
  4649  003546                     _lcd1602_clear:
  4650                           	callstack 17
  4651  003546                     
  4652                           ;src/lcd1602.c: 35:     lcd1602_cmd(0x01);
  4653  003546  0E01               	movlw	1
  4654  003548  EC33  F01A         	call	_lcd1602_cmd
  4655  00354C  0012               	return		;funcret
  4656  00354E                     __end_of_lcd1602_clear:
  4657                           	callstack 0
  4658                           
  4659 ;; *************** function _lcd1602_cursorNextLine *****************
  4660 ;; Defined at:
  4661 ;;		line 60 in file "src/lcd1602.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;		None
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;		None
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4675 ;;      Params:         0       0       0       0       0       0       0
  4676 ;;      Locals:         0       0       0       0       0       0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0
  4678 ;;      Totals:         0       0       0       0       0       0       0
  4679 ;;Total ram usage:        0 bytes
  4680 ;; Hardware stack levels used: 1
  4681 ;; Hardware stack levels required when called: 13
  4682 ;; This function calls:
  4683 ;;		_lcd1602_setCursor
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text23
  4690  0034DE                     __ptext23:
  4691                           	callstack 0
  4692  0034DE                     _lcd1602_cursorNextLine:
  4693                           	callstack 17
  4694  0034DE                     
  4695                           ;src/lcd1602.c: 61:     lcd1602_setCursor(1, 0);
  4696  0034DE  0E00               	movlw	0
  4697  0034E0  0100               	movlb	0	; () banked
  4698  0034E2  6F8B               	movwf	lcd1602_setCursor@col& (0+255),b
  4699  0034E4  0E01               	movlw	1
  4700  0034E6  EC25  F019         	call	_lcd1602_setCursor
  4701  0034EA  0012               	return		;funcret
  4702  0034EC                     __end_of_lcd1602_cursorNextLine:
  4703                           	callstack 0
  4704                           
  4705 ;; *************** function _lcd1602_setCursor *****************
  4706 ;; Defined at:
  4707 ;;		line 52 in file "src/lcd1602.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  row             1    wreg     unsigned char 
  4710 ;;  col             1   11[BANK0 ] unsigned char 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  row             1   20[BANK0 ] unsigned char 
  4713 ;;  row_offsets     8   12[BANK0 ] int [4]
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  1    wreg      void 
  4716 ;; Registers used:
  4717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4723 ;;      Params:         0       1       0       0       0       0       0
  4724 ;;      Locals:         0       9       0       0       0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0       0
  4726 ;;      Totals:         0      10       0       0       0       0       0
  4727 ;;Total ram usage:       10 bytes
  4728 ;; Hardware stack levels used: 1
  4729 ;; Hardware stack levels required when called: 12
  4730 ;; This function calls:
  4731 ;;		_lcd1602_cmd
  4732 ;; This function is called by:
  4733 ;;		_lcd1602_cursorNextLine
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text24
  4738  00324A                     __ptext24:
  4739                           	callstack 0
  4740  00324A                     _lcd1602_setCursor:
  4741                           	callstack 17
  4742                           
  4743                           ;incstack = 0
  4744                           ;lcd1602_setCursor@row stored from wreg
  4745  00324A  0100               	movlb	0	; () banked
  4746  00324C  6F94               	movwf	lcd1602_setCursor@row& (0+255),b
  4747  00324E                     
  4748                           ;src/lcd1602.c: 53:     int row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  4749  00324E  EE21  F047         	lfsr	2,lcd1602_setCursor@F2597
  4750  003252  EE10  F08C         	lfsr	1,lcd1602_setCursor@row_offsets
  4751  003256  0E07               	movlw	7
  4752  003258                     u3491:
  4753  003258  CFDB FFE3          	movff	plusw2,plusw1
  4754  00325C  06E8               	decf	wreg,f,c
  4755  00325E  E2FC               	bc	u3491
  4756  003260                     
  4757                           ;src/lcd1602.c: 57:     lcd1602_cmd(0x80 | (col + row_offsets[row]));
  4758  003260  0100               	movlb	0	; () banked
  4759  003262  5194               	movf	lcd1602_setCursor@row& (0+255),w,b
  4760  003264  0D02               	mullw	2
  4761  003266  0E8C               	movlw	low lcd1602_setCursor@row_offsets
  4762  003268  24F3               	addwf	243,w,c
  4763  00326A  6ED9               	movwf	fsr2l,c
  4764  00326C  0E00               	movlw	high lcd1602_setCursor@row_offsets
  4765  00326E  20F4               	addwfc	prodh,w,c
  4766  003270  6EDA               	movwf	fsr2h,c
  4767  003272  50DF               	movf	indf2,w,c
  4768  003274  258B               	addwf	lcd1602_setCursor@col& (0+255),w,b
  4769  003276  0980               	iorlw	128
  4770  003278  EC33  F01A         	call	_lcd1602_cmd
  4771  00327C  0012               	return		;funcret
  4772  00327E                     __end_of_lcd1602_setCursor:
  4773                           	callstack 0
  4774                           
  4775 ;; *************** function _lcd1602_cmd *****************
  4776 ;; Defined at:
  4777 ;;		line 118 in file "src/lcd1602.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;  cmd             1    wreg     unsigned char 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  cmd             1   10[BANK0 ] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4791 ;;      Params:         0       0       0       0       0       0       0
  4792 ;;      Locals:         0       1       0       0       0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0
  4794 ;;      Totals:         0       1       0       0       0       0       0
  4795 ;;Total ram usage:        1 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; Hardware stack levels required when called: 11
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_lcd1602_initial
  4802 ;;		_lcd1602_clear
  4803 ;;		_lcd1602_home
  4804 ;;		_lcd1602_display
  4805 ;;		_lcd1602_setCursor
  4806 ;;		_lcd1602_noDisplay
  4807 ;;		_lcd1602_noCursor
  4808 ;;		_lcd1602_cursor
  4809 ;;		_lcd1602_scrollDisplayLeft
  4810 ;;		_lcd1602_scrollDisplayRight
  4811 ;;		_lcd1602_leftToRight
  4812 ;;		_lcd1602_rightToLeft
  4813 ;;		_lcd1602_autoscroll
  4814 ;;		_lcd1602_noAutoscroll
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text25
  4819  003466                     __ptext25:
  4820                           	callstack 0
  4821  003466                     _lcd1602_cmd:
  4822                           	callstack 17
  4823                           
  4824                           ;incstack = 0
  4825                           ;lcd1602_cmd@cmd stored from wreg
  4826  003466  0100               	movlb	0	; () banked
  4827  003468  6F8A               	movwf	lcd1602_cmd@cmd& (0+255),b
  4828  00346A                     
  4829                           ;src/lcd1602.c: 119:     LATD = cmd;
  4830  00346A  C08A  FF8C         	movff	lcd1602_cmd@cmd,3980	;volatile
  4831  00346E                     
  4832                           ;src/lcd1602.c: 123:     PORTA = 0x04;
  4833  00346E  0E04               	movlw	4
  4834  003470  6E80               	movwf	128,c	;volatile
  4835  003472                     
  4836                           ;src/lcd1602.c: 124:     _delay((unsigned long)((4)*(1000000/4000.0)));
  4837  003472  0EC8               	movlw	200
  4838  003474                     u3887:
  4839  003474  D000               	nop2	
  4840  003476  2EE8               	decfsz	wreg,f,c
  4841  003478  D7FD               	bra	u3887
  4842  00347A                     
  4843                           ;src/lcd1602.c: 126:     PORTA = 0x00;
  4844  00347A  0E00               	movlw	0
  4845  00347C  6E80               	movwf	128,c	;volatile
  4846  00347E  0012               	return		;funcret
  4847  003480                     __end_of_lcd1602_cmd:
  4848                           	callstack 0
  4849                           
  4850 ;; *************** function _init_pcf8563 *****************
  4851 ;; Defined at:
  4852 ;;		line 91 in file "src/pcf8563.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg, status,2, status,0, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4866 ;;      Params:         0       0       0       0       0       0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0
  4869 ;;      Totals:         0       0       0       0       0       0       0
  4870 ;;Total ram usage:        0 bytes
  4871 ;; Hardware stack levels used: 1
  4872 ;; Hardware stack levels required when called: 14
  4873 ;; This function calls:
  4874 ;;		_getI2C
  4875 ;;		_setI2C
  4876 ;; This function is called by:
  4877 ;;		_main
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text26
  4882  0032E6                     __ptext26:
  4883                           	callstack 0
  4884  0032E6                     _init_pcf8563:
  4885                           	callstack 16
  4886  0032E6                     
  4887                           ;src/pcf8563.c: 92:     if((getI2C(0x0a)) != 0x08){
  4888  0032E6  0E0A               	movlw	10
  4889  0032E8  EC3F  F019         	call	_getI2C
  4890  0032EC  0A08               	xorlw	8
  4891  0032EE  B4D8               	btfsc	status,2,c
  4892  0032F0  EF7C  F019         	goto	u3531
  4893  0032F4  EF7E  F019         	goto	u3530
  4894  0032F8                     u3531:
  4895  0032F8  EF8A  F019         	goto	l115
  4896  0032FC                     u3530:
  4897  0032FC                     
  4898                           ;src/pcf8563.c: 93:         setI2C(0x00, 0x00);
  4899  0032FC  0E00               	movlw	0
  4900  0032FE  0100               	movlb	0	; () banked
  4901  003300  6F8C               	movwf	setI2C@data& (0+255),b
  4902  003302  0E00               	movlw	0
  4903  003304  EC05  F01A         	call	_setI2C
  4904                           
  4905                           ;src/pcf8563.c: 94:         setI2C(0x01, 0x00);
  4906  003308  0E00               	movlw	0
  4907  00330A  0100               	movlb	0	; () banked
  4908  00330C  6F8C               	movwf	setI2C@data& (0+255),b
  4909  00330E  0E01               	movlw	1
  4910  003310  EC05  F01A         	call	_setI2C
  4911  003314                     l115:
  4912  003314  0012               	return		;funcret
  4913  003316                     __end_of_init_pcf8563:
  4914                           	callstack 0
  4915                           
  4916 ;; *************** function _setI2C *****************
  4917 ;; Defined at:
  4918 ;;		line 10 in file "src/pcf8563.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  reg             1    wreg     unsigned char 
  4921 ;;  data            1   12[BANK0 ] unsigned char 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  reg             1   13[BANK0 ] unsigned char 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      void 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4933 ;;      Params:         0       1       0       0       0       0       0
  4934 ;;      Locals:         0       1       0       0       0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0       0
  4936 ;;      Totals:         0       2       0       0       0       0       0
  4937 ;;Total ram usage:        2 bytes
  4938 ;; Hardware stack levels used: 1
  4939 ;; Hardware stack levels required when called: 13
  4940 ;; This function calls:
  4941 ;;		_I2C_Master_Start
  4942 ;;		_I2C_Master_Stop
  4943 ;;		_I2C_Master_Write
  4944 ;; This function is called by:
  4945 ;;		_init_pcf8563
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text27
  4950  00340A                     __ptext27:
  4951                           	callstack 0
  4952  00340A                     _setI2C:
  4953                           	callstack 16
  4954                           
  4955                           ;incstack = 0
  4956                           ;setI2C@reg stored from wreg
  4957  00340A  0100               	movlb	0	; () banked
  4958  00340C  6F8D               	movwf	setI2C@reg& (0+255),b
  4959  00340E                     
  4960                           ;src/pcf8563.c: 11:     I2C_Master_Start();
  4961  00340E  ECAB  F01A         	call	_I2C_Master_Start	;wreg free
  4962                           
  4963                           ;src/pcf8563.c: 13:     I2C_Master_Write((0x51 << 1));
  4964  003412  0EA2               	movlw	162
  4965  003414  EC76  F01A         	call	_I2C_Master_Write
  4966                           
  4967                           ;src/pcf8563.c: 14:     I2C_Master_Write(reg);
  4968  003418  0100               	movlb	0	; () banked
  4969  00341A  518D               	movf	setI2C@reg& (0+255),w,b
  4970  00341C  EC76  F01A         	call	_I2C_Master_Write
  4971                           
  4972                           ;src/pcf8563.c: 15:     I2C_Master_Write(data);
  4973  003420  0100               	movlb	0	; () banked
  4974  003422  518C               	movf	setI2C@data& (0+255),w,b
  4975  003424  EC76  F01A         	call	_I2C_Master_Write
  4976                           
  4977                           ;src/pcf8563.c: 17:     I2C_Master_Stop();
  4978  003428  ECA7  F01A         	call	_I2C_Master_Stop	;wreg free
  4979  00342C  0012               	return		;funcret
  4980  00342E                     __end_of_setI2C:
  4981                           	callstack 0
  4982                           
  4983 ;; *************** function _init_i2c *****************
  4984 ;; Defined at:
  4985 ;;		line 6 in file "src/i2c.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;  freq            4   35[BANK0 ] unsigned long 
  4988 ;;  clock           4   39[BANK0 ] unsigned long 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5000 ;;      Params:         0       8       0       0       0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0
  5003 ;;      Totals:         0       8       0       0       0       0       0
  5004 ;;Total ram usage:        8 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 13
  5007 ;; This function calls:
  5008 ;;		_I2C_Master_Init
  5009 ;; This function is called by:
  5010 ;;		_main
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text28
  5015  00336E                     __ptext28:
  5016                           	callstack 0
  5017  00336E                     _init_i2c:
  5018                           	callstack 17
  5019  00336E                     
  5020                           ;src/i2c.c: 7:     I2C_Master_Init(freq, 100000);
  5021  00336E  C0A3  F097         	movff	init_i2c@freq,I2C_Master_Init@freq
  5022  003372  C0A4  F098         	movff	init_i2c@freq+1,I2C_Master_Init@freq+1
  5023  003376  C0A5  F099         	movff	init_i2c@freq+2,I2C_Master_Init@freq+2
  5024  00337A  C0A6  F09A         	movff	init_i2c@freq+3,I2C_Master_Init@freq+3
  5025  00337E  0EA0               	movlw	160
  5026  003380  0100               	movlb	0	; () banked
  5027  003382  6F9B               	movwf	I2C_Master_Init@clock& (0+255),b
  5028  003384  0E86               	movlw	134
  5029  003386  6F9C               	movwf	(I2C_Master_Init@clock+1)& (0+255),b
  5030  003388  0E01               	movlw	1
  5031  00338A  6F9D               	movwf	(I2C_Master_Init@clock+2)& (0+255),b
  5032  00338C  0E00               	movlw	0
  5033  00338E  6F9E               	movwf	(I2C_Master_Init@clock+3)& (0+255),b
  5034  003390  ECBD  F016         	call	_I2C_Master_Init	;wreg free
  5035  003394  0012               	return		;funcret
  5036  003396                     __end_of_init_i2c:
  5037                           	callstack 0
  5038                           
  5039 ;; *************** function _I2C_Master_Init *****************
  5040 ;; Defined at:
  5041 ;;		line 10 in file "src/i2c.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;  freq            4   23[BANK0 ] const unsigned long 
  5044 ;;  clock           4   27[BANK0 ] const unsigned long 
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2, status,0, cstack
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5056 ;;      Params:         0       8       0       0       0       0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0
  5058 ;;      Temps:          0       4       0       0       0       0       0
  5059 ;;      Totals:         0      12       0       0       0       0       0
  5060 ;;Total ram usage:       12 bytes
  5061 ;; Hardware stack levels used: 1
  5062 ;; Hardware stack levels required when called: 12
  5063 ;; This function calls:
  5064 ;;		___lldiv
  5065 ;; This function is called by:
  5066 ;;		_init_i2c
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text29
  5071  002D7A                     __ptext29:
  5072                           	callstack 0
  5073  002D7A                     _I2C_Master_Init:
  5074                           	callstack 17
  5075  002D7A                     
  5076                           ;src/i2c.c: 11:     SSPCON1 = 0x38;
  5077  002D7A  0E38               	movlw	56
  5078  002D7C  6EC6               	movwf	198,c	;volatile
  5079                           
  5080                           ;src/i2c.c: 20:     SSPCON2 = 0;
  5081  002D7E  0E00               	movlw	0
  5082  002D80  6EC5               	movwf	197,c	;volatile
  5083  002D82                     
  5084                           ;src/i2c.c: 21:     SSPADD = (freq / (4 * clock)) - 1;
  5085  002D82  C097  F08A         	movff	I2C_Master_Init@freq,___lldiv@dividend
  5086  002D86  C098  F08B         	movff	I2C_Master_Init@freq+1,___lldiv@dividend+1
  5087  002D8A  C099  F08C         	movff	I2C_Master_Init@freq+2,___lldiv@dividend+2
  5088  002D8E  C09A  F08D         	movff	I2C_Master_Init@freq+3,___lldiv@dividend+3
  5089  002D92  C09B  F09F         	movff	I2C_Master_Init@clock,??_I2C_Master_Init
  5090  002D96  C09C  F0A0         	movff	I2C_Master_Init@clock+1,??_I2C_Master_Init+1
  5091  002D9A  C09D  F0A1         	movff	I2C_Master_Init@clock+2,??_I2C_Master_Init+2
  5092  002D9E  C09E  F0A2         	movff	I2C_Master_Init@clock+3,??_I2C_Master_Init+3
  5093  002DA2  0E02               	movlw	2
  5094  002DA4                     u3485:
  5095  002DA4  90D8               	bcf	status,0,c
  5096  002DA6  0100               	movlb	0	; () banked
  5097  002DA8  379F               	rlcf	??_I2C_Master_Init& (0+255),f,b
  5098  002DAA  37A0               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
  5099  002DAC  37A1               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
  5100  002DAE  37A2               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
  5101  002DB0  2EE8               	decfsz	wreg,f,c
  5102  002DB2  EFD2  F016         	goto	u3485
  5103  002DB6  C09F  F08E         	movff	??_I2C_Master_Init,___lldiv@divisor
  5104  002DBA  C0A0  F08F         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  5105  002DBE  C0A1  F090         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  5106  002DC2  C0A2  F091         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  5107  002DC6  ECE0  F014         	call	___lldiv	;wreg free
  5108  002DCA  0100               	movlb	0	; () banked
  5109  002DCC  058A               	decf	?___lldiv& (0+255),w,b
  5110  002DCE  6EC8               	movwf	200,c	;volatile
  5111  002DD0                     
  5112                           ; BSR set to: 0
  5113                           ;src/i2c.c: 22:     SSPSTAT = 0xC0;
  5114  002DD0  0EC0               	movlw	192
  5115  002DD2  6EC7               	movwf	199,c	;volatile
  5116  002DD4                     
  5117                           ; BSR set to: 0
  5118                           ;src/i2c.c: 33:     TRISC3 = 1;
  5119  002DD4  8694               	bsf	3988,3,c	;volatile
  5120  002DD6                     
  5121                           ; BSR set to: 0
  5122                           ;src/i2c.c: 34:     TRISC4 = 1;
  5123  002DD6  8894               	bsf	3988,4,c	;volatile
  5124  002DD8                     
  5125                           ; BSR set to: 0
  5126  002DD8  0012               	return		;funcret
  5127  002DDA                     __end_of_I2C_Master_Init:
  5128                           	callstack 0
  5129                           
  5130 ;; *************** function ___lldiv *****************
  5131 ;; Defined at:
  5132 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  dividend        4   10[BANK0 ] unsigned long 
  5135 ;;  divisor         4   14[BANK0 ] unsigned long 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  quotient        4   18[BANK0 ] unsigned long 
  5138 ;;  counter         1   22[BANK0 ] unsigned char 
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  4   10[BANK0 ] unsigned long 
  5141 ;; Registers used:
  5142 ;;		wreg, status,2, status,0
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5148 ;;      Params:         0       8       0       0       0       0       0
  5149 ;;      Locals:         0       5       0       0       0       0       0
  5150 ;;      Temps:          0       0       0       0       0       0       0
  5151 ;;      Totals:         0      13       0       0       0       0       0
  5152 ;;Total ram usage:       13 bytes
  5153 ;; Hardware stack levels used: 1
  5154 ;; Hardware stack levels required when called: 11
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_I2C_Master_Init
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text30
  5163  0029C0                     __ptext30:
  5164                           	callstack 0
  5165  0029C0                     ___lldiv:
  5166                           	callstack 17
  5167  0029C0  0E00               	movlw	0
  5168  0029C2  0100               	movlb	0	; () banked
  5169  0029C4  6F92               	movwf	___lldiv@quotient& (0+255),b
  5170  0029C6  0E00               	movlw	0
  5171  0029C8  6F93               	movwf	(___lldiv@quotient+1)& (0+255),b
  5172  0029CA  0E00               	movlw	0
  5173  0029CC  6F94               	movwf	(___lldiv@quotient+2)& (0+255),b
  5174  0029CE  0E00               	movlw	0
  5175  0029D0  6F95               	movwf	(___lldiv@quotient+3)& (0+255),b
  5176  0029D2                     
  5177                           ; BSR set to: 0
  5178  0029D2  518E               	movf	___lldiv@divisor& (0+255),w,b
  5179  0029D4  118F               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  5180  0029D6  1190               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  5181  0029D8  1191               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  5182  0029DA  B4D8               	btfsc	status,2,c
  5183  0029DC  EFF2  F014         	goto	u3331
  5184  0029E0  EFF4  F014         	goto	u3330
  5185  0029E4                     u3331:
  5186  0029E4  EF2A  F015         	goto	l372
  5187  0029E8                     u3330:
  5188  0029E8                     
  5189                           ; BSR set to: 0
  5190  0029E8  0E01               	movlw	1
  5191  0029EA  6F96               	movwf	___lldiv@counter& (0+255),b
  5192  0029EC  EFFE  F014         	goto	l3549
  5193  0029F0                     l3547:
  5194                           
  5195                           ; BSR set to: 0
  5196  0029F0  90D8               	bcf	status,0,c
  5197  0029F2  378E               	rlcf	___lldiv@divisor& (0+255),f,b
  5198  0029F4  378F               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  5199  0029F6  3790               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  5200  0029F8  3791               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  5201  0029FA  2B96               	incf	___lldiv@counter& (0+255),f,b
  5202  0029FC                     l3549:
  5203                           
  5204                           ; BSR set to: 0
  5205  0029FC  AF91               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  5206  0029FE  EF03  F015         	goto	u3341
  5207  002A02  EF05  F015         	goto	u3340
  5208  002A06                     u3341:
  5209  002A06  EFF8  F014         	goto	l3547
  5210  002A0A                     u3340:
  5211  002A0A                     l3551:
  5212                           
  5213                           ; BSR set to: 0
  5214  002A0A  90D8               	bcf	status,0,c
  5215  002A0C  3792               	rlcf	___lldiv@quotient& (0+255),f,b
  5216  002A0E  3793               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  5217  002A10  3794               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  5218  002A12  3795               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  5219  002A14                     
  5220                           ; BSR set to: 0
  5221  002A14  518E               	movf	___lldiv@divisor& (0+255),w,b
  5222  002A16  5D8A               	subwf	___lldiv@dividend& (0+255),w,b
  5223  002A18  518F               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5224  002A1A  598B               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  5225  002A1C  5190               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5226  002A1E  598C               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  5227  002A20  5191               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5228  002A22  598D               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  5229  002A24  A0D8               	btfss	status,0,c
  5230  002A26  EF17  F015         	goto	u3351
  5231  002A2A  EF19  F015         	goto	u3350
  5232  002A2E                     u3351:
  5233  002A2E  EF22  F015         	goto	l3559
  5234  002A32                     u3350:
  5235  002A32                     
  5236                           ; BSR set to: 0
  5237  002A32  518E               	movf	___lldiv@divisor& (0+255),w,b
  5238  002A34  5F8A               	subwf	___lldiv@dividend& (0+255),f,b
  5239  002A36  518F               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5240  002A38  5B8B               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  5241  002A3A  5190               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5242  002A3C  5B8C               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  5243  002A3E  5191               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5244  002A40  5B8D               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  5245  002A42                     
  5246                           ; BSR set to: 0
  5247  002A42  8192               	bsf	___lldiv@quotient& (0+255),0,b
  5248  002A44                     l3559:
  5249                           
  5250                           ; BSR set to: 0
  5251  002A44  90D8               	bcf	status,0,c
  5252  002A46  3391               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  5253  002A48  3390               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  5254  002A4A  338F               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  5255  002A4C  338E               	rrcf	___lldiv@divisor& (0+255),f,b
  5256  002A4E                     
  5257                           ; BSR set to: 0
  5258  002A4E  2F96               	decfsz	___lldiv@counter& (0+255),f,b
  5259  002A50  EF05  F015         	goto	l3551
  5260  002A54                     l372:
  5261                           
  5262                           ; BSR set to: 0
  5263  002A54  C092  F08A         	movff	___lldiv@quotient,?___lldiv
  5264  002A58  C093  F08B         	movff	___lldiv@quotient+1,?___lldiv+1
  5265  002A5C  C094  F08C         	movff	___lldiv@quotient+2,?___lldiv+2
  5266  002A60  C095  F08D         	movff	___lldiv@quotient+3,?___lldiv+3
  5267  002A64                     
  5268                           ; BSR set to: 0
  5269  002A64  0012               	return		;funcret
  5270  002A66                     __end_of___lldiv:
  5271                           	callstack 0
  5272                           
  5273 ;; *************** function _PCF8563_getTime *****************
  5274 ;; Defined at:
  5275 ;;		line 81 in file "src/pcf8563.c"
  5276 ;; Parameters:    Size  Location     Type
  5277 ;;  hour            2   15[BANK0 ] PTR unsigned int 
  5278 ;;		 -> hour(2), 
  5279 ;;  min             2   17[BANK0 ] PTR unsigned int 
  5280 ;;		 -> minute(2), 
  5281 ;;  sec             2   19[BANK0 ] PTR unsigned int 
  5282 ;;		 -> second(2), 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;		None
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  1    wreg      void 
  5287 ;; Registers used:
  5288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5294 ;;      Params:         0       6       0       0       0       0       0
  5295 ;;      Locals:         0       0       0       0       0       0       0
  5296 ;;      Temps:          0       4       0       0       0       0       0
  5297 ;;      Totals:         0      10       0       0       0       0       0
  5298 ;;Total ram usage:       10 bytes
  5299 ;; Hardware stack levels used: 1
  5300 ;; Hardware stack levels required when called: 14
  5301 ;; This function calls:
  5302 ;;		_getI2C
  5303 ;; This function is called by:
  5304 ;;		_main
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           	psect	text31
  5309  00239A                     __ptext31:
  5310                           	callstack 0
  5311  00239A                     _PCF8563_getTime:
  5312                           	callstack 16
  5313  00239A                     
  5314                           ;src/pcf8563.c: 84:     *hour = ( ( ((getI2C(0x04) & 0x3f)>>4) *10) + ((getI2C(0x04) & 0
      +                          x3f%16)) );
  5315  00239A  0E04               	movlw	4
  5316  00239C  EC3F  F019         	call	_getI2C
  5317  0023A0  0100               	movlb	0	; () banked
  5318  0023A2  6F95               	movwf	??_PCF8563_getTime& (0+255),b
  5319  0023A4  3B95               	swapf	??_PCF8563_getTime& (0+255),f,b
  5320  0023A6  0E0F               	movlw	15
  5321  0023A8  1795               	andwf	??_PCF8563_getTime& (0+255),f,b
  5322  0023AA  0E03               	movlw	3
  5323  0023AC  1795               	andwf	??_PCF8563_getTime& (0+255),f,b
  5324  0023AE  5195               	movf	??_PCF8563_getTime& (0+255),w,b
  5325  0023B0  0D0A               	mullw	10
  5326  0023B2  CFF3 F096          	movff	prodl,??_PCF8563_getTime+1
  5327  0023B6  CFF4 F097          	movff	prodh,??_PCF8563_getTime+2
  5328  0023BA  0E04               	movlw	4
  5329  0023BC  EC3F  F019         	call	_getI2C
  5330  0023C0  0100               	movlb	0	; () banked
  5331  0023C2  6F98               	movwf	(??_PCF8563_getTime+3)& (0+255),b
  5332  0023C4  0E0F               	movlw	15
  5333  0023C6  1798               	andwf	(??_PCF8563_getTime+3)& (0+255),f,b
  5334  0023C8  5198               	movf	(??_PCF8563_getTime+3)& (0+255),w,b
  5335  0023CA  2796               	addwf	(??_PCF8563_getTime+1)& (0+255),f,b
  5336  0023CC  0E00               	movlw	0
  5337  0023CE  2397               	addwfc	(??_PCF8563_getTime+2)& (0+255),f,b
  5338  0023D0  C08F  FFD9         	movff	PCF8563_getTime@hour,fsr2l
  5339  0023D4  C090  FFDA         	movff	PCF8563_getTime@hour+1,fsr2h
  5340  0023D8  C096  FFDE         	movff	??_PCF8563_getTime+1,postinc2
  5341  0023DC  C097  FFDD         	movff	??_PCF8563_getTime+2,postdec2
  5342                           
  5343                           ;src/pcf8563.c: 85:     *min = ( ( ((getI2C(0x03) & 0x7f)>>4) *10) + ((getI2C(0x03) & 0x
      +                          7f%16)) );
  5344  0023E0  0E03               	movlw	3
  5345  0023E2  EC3F  F019         	call	_getI2C
  5346  0023E6  0100               	movlb	0	; () banked
  5347  0023E8  6F95               	movwf	??_PCF8563_getTime& (0+255),b
  5348  0023EA  3B95               	swapf	??_PCF8563_getTime& (0+255),f,b
  5349  0023EC  0E0F               	movlw	15
  5350  0023EE  1795               	andwf	??_PCF8563_getTime& (0+255),f,b
  5351  0023F0  0E07               	movlw	7
  5352  0023F2  1795               	andwf	??_PCF8563_getTime& (0+255),f,b
  5353  0023F4  5195               	movf	??_PCF8563_getTime& (0+255),w,b
  5354  0023F6  0D0A               	mullw	10
  5355  0023F8  CFF3 F096          	movff	prodl,??_PCF8563_getTime+1
  5356  0023FC  CFF4 F097          	movff	prodh,??_PCF8563_getTime+2
  5357  002400  0E03               	movlw	3
  5358  002402  EC3F  F019         	call	_getI2C
  5359  002406  0100               	movlb	0	; () banked
  5360  002408  6F98               	movwf	(??_PCF8563_getTime+3)& (0+255),b
  5361  00240A  0E0F               	movlw	15
  5362  00240C  1798               	andwf	(??_PCF8563_getTime+3)& (0+255),f,b
  5363  00240E  5198               	movf	(??_PCF8563_getTime+3)& (0+255),w,b
  5364  002410  2796               	addwf	(??_PCF8563_getTime+1)& (0+255),f,b
  5365  002412  0E00               	movlw	0
  5366  002414  2397               	addwfc	(??_PCF8563_getTime+2)& (0+255),f,b
  5367  002416  C091  FFD9         	movff	PCF8563_getTime@min,fsr2l
  5368  00241A  C092  FFDA         	movff	PCF8563_getTime@min+1,fsr2h
  5369  00241E  C096  FFDE         	movff	??_PCF8563_getTime+1,postinc2
  5370  002422  C097  FFDD         	movff	??_PCF8563_getTime+2,postdec2
  5371                           
  5372                           ;src/pcf8563.c: 86:     *sec = ( ( ((getI2C(0x02) & 0x7f)>>4) *10) + ((getI2C(0x02) & 0x
      +                          7f%16)) );
  5373  002426  0E02               	movlw	2
  5374  002428  EC3F  F019         	call	_getI2C
  5375  00242C  0100               	movlb	0	; () banked
  5376  00242E  6F95               	movwf	??_PCF8563_getTime& (0+255),b
  5377  002430  3B95               	swapf	??_PCF8563_getTime& (0+255),f,b
  5378  002432  0E0F               	movlw	15
  5379  002434  1795               	andwf	??_PCF8563_getTime& (0+255),f,b
  5380  002436  0E07               	movlw	7
  5381  002438  1795               	andwf	??_PCF8563_getTime& (0+255),f,b
  5382  00243A  5195               	movf	??_PCF8563_getTime& (0+255),w,b
  5383  00243C  0D0A               	mullw	10
  5384  00243E  CFF3 F096          	movff	prodl,??_PCF8563_getTime+1
  5385  002442  CFF4 F097          	movff	prodh,??_PCF8563_getTime+2
  5386  002446  0E02               	movlw	2
  5387  002448  EC3F  F019         	call	_getI2C
  5388  00244C  0100               	movlb	0	; () banked
  5389  00244E  6F98               	movwf	(??_PCF8563_getTime+3)& (0+255),b
  5390  002450  0E0F               	movlw	15
  5391  002452  1798               	andwf	(??_PCF8563_getTime+3)& (0+255),f,b
  5392  002454  5198               	movf	(??_PCF8563_getTime+3)& (0+255),w,b
  5393  002456  2796               	addwf	(??_PCF8563_getTime+1)& (0+255),f,b
  5394  002458  0E00               	movlw	0
  5395  00245A  2397               	addwfc	(??_PCF8563_getTime+2)& (0+255),f,b
  5396  00245C  C093  FFD9         	movff	PCF8563_getTime@sec,fsr2l
  5397  002460  C094  FFDA         	movff	PCF8563_getTime@sec+1,fsr2h
  5398  002464  C096  FFDE         	movff	??_PCF8563_getTime+1,postinc2
  5399  002468  C097  FFDD         	movff	??_PCF8563_getTime+2,postdec2
  5400  00246C                     
  5401                           ; BSR set to: 0
  5402  00246C  0012               	return		;funcret
  5403  00246E                     __end_of_PCF8563_getTime:
  5404                           	callstack 0
  5405                           
  5406 ;; *************** function _PCF8563_getDate *****************
  5407 ;; Defined at:
  5408 ;;		line 48 in file "src/pcf8563.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  year            2   15[BANK0 ] PTR unsigned int 
  5411 ;;		 -> year(2), 
  5412 ;;  mon             2   17[BANK0 ] PTR unsigned int 
  5413 ;;		 -> month(2), 
  5414 ;;  day             2   19[BANK0 ] PTR unsigned int 
  5415 ;;		 -> day(2), 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  buf             3   28[BANK0 ] unsigned char [3]
  5418 ;;  century         1   27[BANK0 ] unsigned char 
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      void 
  5421 ;; Registers used:
  5422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5428 ;;      Params:         0       6       0       0       0       0       0
  5429 ;;      Locals:         0       6       0       0       0       0       0
  5430 ;;      Temps:          0       4       0       0       0       0       0
  5431 ;;      Totals:         0      16       0       0       0       0       0
  5432 ;;Total ram usage:       16 bytes
  5433 ;; Hardware stack levels used: 1
  5434 ;; Hardware stack levels required when called: 14
  5435 ;; This function calls:
  5436 ;;		_getI2C
  5437 ;; This function is called by:
  5438 ;;		_main
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text32
  5443  00212C                     __ptext32:
  5444                           	callstack 0
  5445  00212C                     _PCF8563_getDate:
  5446                           	callstack 16
  5447  00212C                     
  5448                           ;src/pcf8563.c: 49:     unsigned char buf[3];;src/pcf8563.c: 50:     unsigned char centu
      +                          ry = 0;
  5449  00212C  0E00               	movlw	0
  5450  00212E  0100               	movlb	0	; () banked
  5451  002130  6F9B               	movwf	PCF8563_getDate@century& (0+255),b
  5452  002132                     
  5453                           ; BSR set to: 0
  5454                           ;src/pcf8563.c: 54:     buf[0] = getI2C(0x08);
  5455  002132  0E08               	movlw	8
  5456  002134  EC3F  F019         	call	_getI2C
  5457  002138  0100               	movlb	0	; () banked
  5458  00213A  6F9C               	movwf	PCF8563_getDate@buf& (0+255),b
  5459  00213C                     
  5460                           ; BSR set to: 0
  5461                           ;src/pcf8563.c: 55:     buf[1] = getI2C(0x07);
  5462  00213C  0E07               	movlw	7
  5463  00213E  EC3F  F019         	call	_getI2C
  5464  002142  0100               	movlb	0	; () banked
  5465  002144  6F9D               	movwf	(PCF8563_getDate@buf+1)& (0+255),b
  5466  002146                     
  5467                           ; BSR set to: 0
  5468                           ;src/pcf8563.c: 56:     buf[2] = getI2C(0x05);
  5469  002146  0E05               	movlw	5
  5470  002148  EC3F  F019         	call	_getI2C
  5471  00214C  0100               	movlb	0	; () banked
  5472  00214E  6F9E               	movwf	(PCF8563_getDate@buf+2)& (0+255),b
  5473  002150                     
  5474                           ; BSR set to: 0
  5475                           ;src/pcf8563.c: 59:     if(buf[1] & 0x80){
  5476  002150  AF9D               	btfss	(PCF8563_getDate@buf+1)& (0+255),7,b
  5477  002152  EFAD  F010         	goto	u3511
  5478  002156  EFAF  F010         	goto	u3510
  5479  00215A                     u3511:
  5480  00215A  EFB1  F010         	goto	l3773
  5481  00215E                     u3510:
  5482  00215E                     
  5483                           ; BSR set to: 0
  5484                           ;src/pcf8563.c: 60:         century = 1;
  5485  00215E  0E01               	movlw	1
  5486  002160  6F9B               	movwf	PCF8563_getDate@century& (0+255),b
  5487  002162                     l3773:
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;src/pcf8563.c: 65:     buf[1] = buf[1] & 0x1f;
  5491  002162  519D               	movf	(PCF8563_getDate@buf+1)& (0+255),w,b
  5492  002164  0B1F               	andlw	31
  5493  002166  6F9D               	movwf	(PCF8563_getDate@buf+1)& (0+255),b
  5494  002168                     
  5495                           ; BSR set to: 0
  5496                           ;src/pcf8563.c: 66:     buf[2] = buf[2] & 0x3f;
  5497  002168  519E               	movf	(PCF8563_getDate@buf+2)& (0+255),w,b
  5498  00216A  0B3F               	andlw	63
  5499  00216C  6F9E               	movwf	(PCF8563_getDate@buf+2)& (0+255),b
  5500  00216E                     
  5501                           ; BSR set to: 0
  5502                           ;src/pcf8563.c: 68:     *year = (century == 1) ? (1900 + ( ( ((buf[0])>>4) *10) + ((buf[
      +                          0]%16)) )) : (2000 + ( ( ((buf[0])>>4) *10) + ((buf[0]%16)) ));
  5503  00216E  059B               	decf	PCF8563_getDate@century& (0+255),w,b
  5504  002170  B4D8               	btfsc	status,2,c
  5505  002172  EFBD  F010         	goto	u3521
  5506  002176  EFBF  F010         	goto	u3520
  5507  00217A                     u3521:
  5508  00217A  EFDA  F010         	goto	l3781
  5509  00217E                     u3520:
  5510  00217E                     
  5511                           ; BSR set to: 0
  5512  00217E  C09C  F095         	movff	PCF8563_getDate@buf,??_PCF8563_getDate
  5513  002182  3B95               	swapf	??_PCF8563_getDate& (0+255),f,b
  5514  002184  0E0F               	movlw	15
  5515  002186  1795               	andwf	??_PCF8563_getDate& (0+255),f,b
  5516  002188  5195               	movf	??_PCF8563_getDate& (0+255),w,b
  5517  00218A  0D0A               	mullw	10
  5518  00218C  CFF3 F096          	movff	prodl,??_PCF8563_getDate+1
  5519  002190  CFF4 F097          	movff	prodh,??_PCF8563_getDate+2
  5520  002194  C09C  F098         	movff	PCF8563_getDate@buf,??_PCF8563_getDate+3
  5521  002198  0E0F               	movlw	15
  5522  00219A  1798               	andwf	(??_PCF8563_getDate+3)& (0+255),f,b
  5523  00219C  5198               	movf	(??_PCF8563_getDate+3)& (0+255),w,b
  5524  00219E  2796               	addwf	(??_PCF8563_getDate+1)& (0+255),f,b
  5525  0021A0  0E00               	movlw	0
  5526  0021A2  2397               	addwfc	(??_PCF8563_getDate+2)& (0+255),f,b
  5527  0021A4  0ED0               	movlw	208
  5528  0021A6  2596               	addwf	(??_PCF8563_getDate+1)& (0+255),w,b
  5529  0021A8  6F99               	movwf	_PCF8563_getDate$96& (0+255),b
  5530  0021AA  0E07               	movlw	7
  5531  0021AC  2197               	addwfc	(??_PCF8563_getDate+2)& (0+255),w,b
  5532  0021AE  6F9A               	movwf	(_PCF8563_getDate$96+1)& (0+255),b
  5533  0021B0  EFF3  F010         	goto	l3783
  5534  0021B4                     l3781:
  5535                           
  5536                           ; BSR set to: 0
  5537  0021B4  C09C  F095         	movff	PCF8563_getDate@buf,??_PCF8563_getDate
  5538  0021B8  3B95               	swapf	??_PCF8563_getDate& (0+255),f,b
  5539  0021BA  0E0F               	movlw	15
  5540  0021BC  1795               	andwf	??_PCF8563_getDate& (0+255),f,b
  5541  0021BE  5195               	movf	??_PCF8563_getDate& (0+255),w,b
  5542  0021C0  0D0A               	mullw	10
  5543  0021C2  CFF3 F096          	movff	prodl,??_PCF8563_getDate+1
  5544  0021C6  CFF4 F097          	movff	prodh,??_PCF8563_getDate+2
  5545  0021CA  C09C  F098         	movff	PCF8563_getDate@buf,??_PCF8563_getDate+3
  5546  0021CE  0E0F               	movlw	15
  5547  0021D0  1798               	andwf	(??_PCF8563_getDate+3)& (0+255),f,b
  5548  0021D2  5198               	movf	(??_PCF8563_getDate+3)& (0+255),w,b
  5549  0021D4  2796               	addwf	(??_PCF8563_getDate+1)& (0+255),f,b
  5550  0021D6  0E00               	movlw	0
  5551  0021D8  2397               	addwfc	(??_PCF8563_getDate+2)& (0+255),f,b
  5552  0021DA  0E6C               	movlw	108
  5553  0021DC  2596               	addwf	(??_PCF8563_getDate+1)& (0+255),w,b
  5554  0021DE  6F99               	movwf	_PCF8563_getDate$96& (0+255),b
  5555  0021E0  0E07               	movlw	7
  5556  0021E2  2197               	addwfc	(??_PCF8563_getDate+2)& (0+255),w,b
  5557  0021E4  6F9A               	movwf	(_PCF8563_getDate$96+1)& (0+255),b
  5558  0021E6                     l3783:
  5559                           
  5560                           ; BSR set to: 0
  5561  0021E6  C08F  FFD9         	movff	PCF8563_getDate@year,fsr2l
  5562  0021EA  C090  FFDA         	movff	PCF8563_getDate@year+1,fsr2h
  5563  0021EE  C099  FFDE         	movff	_PCF8563_getDate$96,postinc2
  5564  0021F2  C09A  FFDD         	movff	_PCF8563_getDate$96+1,postdec2
  5565                           
  5566                           ;src/pcf8563.c: 69:     *mon = ( ( ((buf[1])>>4) *10) + ((buf[1]%16)) );
  5567  0021F6  C09D  F095         	movff	PCF8563_getDate@buf+1,??_PCF8563_getDate
  5568  0021FA  3B95               	swapf	??_PCF8563_getDate& (0+255),f,b
  5569  0021FC  0E0F               	movlw	15
  5570  0021FE  1795               	andwf	??_PCF8563_getDate& (0+255),f,b
  5571  002200  5195               	movf	??_PCF8563_getDate& (0+255),w,b
  5572  002202  0D0A               	mullw	10
  5573  002204  CFF3 F096          	movff	prodl,??_PCF8563_getDate+1
  5574  002208  CFF4 F097          	movff	prodh,??_PCF8563_getDate+2
  5575  00220C  C09D  F098         	movff	PCF8563_getDate@buf+1,??_PCF8563_getDate+3
  5576  002210  0E0F               	movlw	15
  5577  002212  1798               	andwf	(??_PCF8563_getDate+3)& (0+255),f,b
  5578  002214  5198               	movf	(??_PCF8563_getDate+3)& (0+255),w,b
  5579  002216  2796               	addwf	(??_PCF8563_getDate+1)& (0+255),f,b
  5580  002218  0E00               	movlw	0
  5581  00221A  2397               	addwfc	(??_PCF8563_getDate+2)& (0+255),f,b
  5582  00221C  C091  FFD9         	movff	PCF8563_getDate@mon,fsr2l
  5583  002220  C092  FFDA         	movff	PCF8563_getDate@mon+1,fsr2h
  5584  002224  C096  FFDE         	movff	??_PCF8563_getDate+1,postinc2
  5585  002228  C097  FFDD         	movff	??_PCF8563_getDate+2,postdec2
  5586                           
  5587                           ;src/pcf8563.c: 70:     *day = ( ( ((buf[2])>>4) *10) + ((buf[2]%16)) );
  5588  00222C  C09E  F095         	movff	PCF8563_getDate@buf+2,??_PCF8563_getDate
  5589  002230  3B95               	swapf	??_PCF8563_getDate& (0+255),f,b
  5590  002232  0E0F               	movlw	15
  5591  002234  1795               	andwf	??_PCF8563_getDate& (0+255),f,b
  5592  002236  5195               	movf	??_PCF8563_getDate& (0+255),w,b
  5593  002238  0D0A               	mullw	10
  5594  00223A  CFF3 F096          	movff	prodl,??_PCF8563_getDate+1
  5595  00223E  CFF4 F097          	movff	prodh,??_PCF8563_getDate+2
  5596  002242  C09E  F098         	movff	PCF8563_getDate@buf+2,??_PCF8563_getDate+3
  5597  002246  0E0F               	movlw	15
  5598  002248  1798               	andwf	(??_PCF8563_getDate+3)& (0+255),f,b
  5599  00224A  5198               	movf	(??_PCF8563_getDate+3)& (0+255),w,b
  5600  00224C  2796               	addwf	(??_PCF8563_getDate+1)& (0+255),f,b
  5601  00224E  0E00               	movlw	0
  5602  002250  2397               	addwfc	(??_PCF8563_getDate+2)& (0+255),f,b
  5603  002252  C093  FFD9         	movff	PCF8563_getDate@day,fsr2l
  5604  002256  C094  FFDA         	movff	PCF8563_getDate@day+1,fsr2h
  5605  00225A  C096  FFDE         	movff	??_PCF8563_getDate+1,postinc2
  5606  00225E  C097  FFDD         	movff	??_PCF8563_getDate+2,postdec2
  5607  002262                     
  5608                           ; BSR set to: 0
  5609  002262  0012               	return		;funcret
  5610  002264                     __end_of_PCF8563_getDate:
  5611                           	callstack 0
  5612                           
  5613 ;; *************** function _getI2C *****************
  5614 ;; Defined at:
  5615 ;;		line 20 in file "src/pcf8563.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  reg             1    wreg     unsigned char 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;  reg             1   13[BANK0 ] unsigned char 
  5620 ;;  data            1   14[BANK0 ] unsigned char 
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  1    wreg      unsigned char 
  5623 ;; Registers used:
  5624 ;;		wreg, status,2, status,0, cstack
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5630 ;;      Params:         0       0       0       0       0       0       0
  5631 ;;      Locals:         0       2       0       0       0       0       0
  5632 ;;      Temps:          0       0       0       0       0       0       0
  5633 ;;      Totals:         0       2       0       0       0       0       0
  5634 ;;Total ram usage:        2 bytes
  5635 ;; Hardware stack levels used: 1
  5636 ;; Hardware stack levels required when called: 13
  5637 ;; This function calls:
  5638 ;;		_I2C_Master_Read
  5639 ;;		_I2C_Master_RepeatedStart
  5640 ;;		_I2C_Master_Start
  5641 ;;		_I2C_Master_Stop
  5642 ;;		_I2C_Master_Write
  5643 ;; This function is called by:
  5644 ;;		_PCF8563_getDate
  5645 ;;		_PCF8563_getTime
  5646 ;;		_init_pcf8563
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text33
  5651  00327E                     __ptext33:
  5652                           	callstack 0
  5653  00327E                     _getI2C:
  5654                           	callstack 16
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;incstack = 0
  5658                           ;getI2C@reg stored from wreg
  5659  00327E  0100               	movlb	0	; () banked
  5660  003280  6F8D               	movwf	getI2C@reg& (0+255),b
  5661  003282                     
  5662                           ;src/pcf8563.c: 21:     unsigned char data;;src/pcf8563.c: 23:     I2C_Master_Start();
  5663  003282  ECAB  F01A         	call	_I2C_Master_Start	;wreg free
  5664                           
  5665                           ;src/pcf8563.c: 25:     I2C_Master_Write((0x51 << 1));
  5666  003286  0EA2               	movlw	162
  5667  003288  EC76  F01A         	call	_I2C_Master_Write
  5668                           
  5669                           ;src/pcf8563.c: 26:     I2C_Master_Write(reg);
  5670  00328C  0100               	movlb	0	; () banked
  5671  00328E  518D               	movf	getI2C@reg& (0+255),w,b
  5672  003290  EC76  F01A         	call	_I2C_Master_Write
  5673                           
  5674                           ;src/pcf8563.c: 28:     I2C_Master_RepeatedStart();
  5675  003294  ECAF  F01A         	call	_I2C_Master_RepeatedStart	;wreg free
  5676                           
  5677                           ;src/pcf8563.c: 30:     I2C_Master_Write((0x51 << 1) + 1);
  5678  003298  0EA3               	movlw	163
  5679  00329A  EC76  F01A         	call	_I2C_Master_Write
  5680                           
  5681                           ;src/pcf8563.c: 31:     data = I2C_Master_Read(0);
  5682  00329E  0E00               	movlw	0
  5683  0032A0  EC59  F019         	call	_I2C_Master_Read
  5684  0032A4  0100               	movlb	0	; () banked
  5685  0032A6  6F8E               	movwf	getI2C@data& (0+255),b
  5686                           
  5687                           ;src/pcf8563.c: 33:     I2C_Master_Stop();
  5688  0032A8  ECA7  F01A         	call	_I2C_Master_Stop	;wreg free
  5689  0032AC                     
  5690                           ;src/pcf8563.c: 35:     return data;
  5691  0032AC  0100               	movlb	0	; () banked
  5692  0032AE  518E               	movf	getI2C@data& (0+255),w,b
  5693  0032B0                     
  5694                           ; BSR set to: 0
  5695  0032B0  0012               	return		;funcret
  5696  0032B2                     __end_of_getI2C:
  5697                           	callstack 0
  5698                           
  5699 ;; *************** function _I2C_Master_Write *****************
  5700 ;; Defined at:
  5701 ;;		line 56 in file "src/i2c.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  d               1    wreg     unsigned char 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  d               1   11[BANK0 ] unsigned char 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      void 
  5708 ;; Registers used:
  5709 ;;		wreg, status,2, status,0, cstack
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5715 ;;      Params:         0       0       0       0       0       0       0
  5716 ;;      Locals:         0       1       0       0       0       0       0
  5717 ;;      Temps:          0       0       0       0       0       0       0
  5718 ;;      Totals:         0       1       0       0       0       0       0
  5719 ;;Total ram usage:        1 bytes
  5720 ;; Hardware stack levels used: 1
  5721 ;; Hardware stack levels required when called: 12
  5722 ;; This function calls:
  5723 ;;		_I2C_Master_Wait
  5724 ;; This function is called by:
  5725 ;;		_setI2C
  5726 ;;		_getI2C
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           	psect	text34
  5731  0034EC                     __ptext34:
  5732                           	callstack 0
  5733  0034EC                     _I2C_Master_Write:
  5734                           	callstack 16
  5735                           
  5736                           ; BSR set to: 0
  5737                           ;incstack = 0
  5738                           ;I2C_Master_Write@d stored from wreg
  5739  0034EC  0100               	movlb	0	; () banked
  5740  0034EE  6F8B               	movwf	I2C_Master_Write@d& (0+255),b
  5741  0034F0                     
  5742                           ;src/i2c.c: 57:     I2C_Master_Wait();
  5743  0034F0  ECCB  F019         	call	_I2C_Master_Wait	;wreg free
  5744  0034F4                     
  5745                           ;src/i2c.c: 58:     SSPBUF = d;
  5746  0034F4  C08B  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  5747  0034F8  0012               	return		;funcret
  5748  0034FA                     __end_of_I2C_Master_Write:
  5749                           	callstack 0
  5750                           
  5751 ;; *************** function _I2C_Master_Stop *****************
  5752 ;; Defined at:
  5753 ;;		line 51 in file "src/i2c.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;		None
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;		None
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  1    wreg      void 
  5760 ;; Registers used:
  5761 ;;		wreg, status,2, status,0, cstack
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5767 ;;      Params:         0       0       0       0       0       0       0
  5768 ;;      Locals:         0       0       0       0       0       0       0
  5769 ;;      Temps:          0       0       0       0       0       0       0
  5770 ;;      Totals:         0       0       0       0       0       0       0
  5771 ;;Total ram usage:        0 bytes
  5772 ;; Hardware stack levels used: 1
  5773 ;; Hardware stack levels required when called: 12
  5774 ;; This function calls:
  5775 ;;		_I2C_Master_Wait
  5776 ;; This function is called by:
  5777 ;;		_setI2C
  5778 ;;		_getI2C
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text35
  5783  00354E                     __ptext35:
  5784                           	callstack 0
  5785  00354E                     _I2C_Master_Stop:
  5786                           	callstack 16
  5787  00354E                     
  5788                           ;src/i2c.c: 52:     I2C_Master_Wait();
  5789  00354E  ECCB  F019         	call	_I2C_Master_Wait	;wreg free
  5790  003552                     
  5791                           ;src/i2c.c: 53:     PEN = 1;
  5792  003552  84C5               	bsf	4037,2,c	;volatile
  5793  003554  0012               	return		;funcret
  5794  003556                     __end_of_I2C_Master_Stop:
  5795                           	callstack 0
  5796                           
  5797 ;; *************** function _I2C_Master_Start *****************
  5798 ;; Defined at:
  5799 ;;		line 41 in file "src/i2c.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;		None
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;		None
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  1    wreg      void 
  5806 ;; Registers used:
  5807 ;;		wreg, status,2, status,0, cstack
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5813 ;;      Params:         0       0       0       0       0       0       0
  5814 ;;      Locals:         0       0       0       0       0       0       0
  5815 ;;      Temps:          0       0       0       0       0       0       0
  5816 ;;      Totals:         0       0       0       0       0       0       0
  5817 ;;Total ram usage:        0 bytes
  5818 ;; Hardware stack levels used: 1
  5819 ;; Hardware stack levels required when called: 12
  5820 ;; This function calls:
  5821 ;;		_I2C_Master_Wait
  5822 ;; This function is called by:
  5823 ;;		_setI2C
  5824 ;;		_getI2C
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text36
  5829  003556                     __ptext36:
  5830                           	callstack 0
  5831  003556                     _I2C_Master_Start:
  5832                           	callstack 16
  5833  003556                     
  5834                           ;src/i2c.c: 42:     I2C_Master_Wait();
  5835  003556  ECCB  F019         	call	_I2C_Master_Wait	;wreg free
  5836  00355A                     
  5837                           ;src/i2c.c: 43:     SEN = 1;
  5838  00355A  80C5               	bsf	4037,0,c	;volatile
  5839  00355C  0012               	return		;funcret
  5840  00355E                     __end_of_I2C_Master_Start:
  5841                           	callstack 0
  5842                           
  5843 ;; *************** function _I2C_Master_RepeatedStart *****************
  5844 ;; Defined at:
  5845 ;;		line 46 in file "src/i2c.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;		None
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;		None
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      void 
  5852 ;; Registers used:
  5853 ;;		wreg, status,2, status,0, cstack
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5859 ;;      Params:         0       0       0       0       0       0       0
  5860 ;;      Locals:         0       0       0       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0
  5862 ;;      Totals:         0       0       0       0       0       0       0
  5863 ;;Total ram usage:        0 bytes
  5864 ;; Hardware stack levels used: 1
  5865 ;; Hardware stack levels required when called: 12
  5866 ;; This function calls:
  5867 ;;		_I2C_Master_Wait
  5868 ;; This function is called by:
  5869 ;;		_getI2C
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text37
  5874  00355E                     __ptext37:
  5875                           	callstack 0
  5876  00355E                     _I2C_Master_RepeatedStart:
  5877                           	callstack 16
  5878  00355E                     
  5879                           ;src/i2c.c: 47:     I2C_Master_Wait();
  5880  00355E  ECCB  F019         	call	_I2C_Master_Wait	;wreg free
  5881  003562                     
  5882                           ;src/i2c.c: 48:     RSEN = 1;
  5883  003562  82C5               	bsf	4037,1,c	;volatile
  5884  003564  0012               	return		;funcret
  5885  003566                     __end_of_I2C_Master_RepeatedStart:
  5886                           	callstack 0
  5887                           
  5888 ;; *************** function _I2C_Master_Read *****************
  5889 ;; Defined at:
  5890 ;;		line 61 in file "src/i2c.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;  a               1    wreg     unsigned char 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  a               1   11[BANK0 ] unsigned char 
  5895 ;;  temp            1   12[BANK0 ] unsigned char 
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  1    wreg      unsigned char 
  5898 ;; Registers used:
  5899 ;;		wreg, status,2, status,0, cstack
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5905 ;;      Params:         0       0       0       0       0       0       0
  5906 ;;      Locals:         0       2       0       0       0       0       0
  5907 ;;      Temps:          0       0       0       0       0       0       0
  5908 ;;      Totals:         0       2       0       0       0       0       0
  5909 ;;Total ram usage:        2 bytes
  5910 ;; Hardware stack levels used: 1
  5911 ;; Hardware stack levels required when called: 12
  5912 ;; This function calls:
  5913 ;;		_I2C_Master_Wait
  5914 ;; This function is called by:
  5915 ;;		_getI2C
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           	psect	text38
  5920  0032B2                     __ptext38:
  5921                           	callstack 0
  5922  0032B2                     _I2C_Master_Read:
  5923                           	callstack 16
  5924                           
  5925                           ;incstack = 0
  5926                           ;I2C_Master_Read@a stored from wreg
  5927  0032B2  0100               	movlb	0	; () banked
  5928  0032B4  6F8B               	movwf	I2C_Master_Read@a& (0+255),b
  5929  0032B6                     
  5930                           ;src/i2c.c: 62:     unsigned char temp;;src/i2c.c: 64:     I2C_Master_Wait();
  5931  0032B6  ECCB  F019         	call	_I2C_Master_Wait	;wreg free
  5932  0032BA                     
  5933                           ;src/i2c.c: 65:     RCEN = 1;
  5934  0032BA  86C5               	bsf	4037,3,c	;volatile
  5935                           
  5936                           ;src/i2c.c: 66:     I2C_Master_Wait();
  5937  0032BC  ECCB  F019         	call	_I2C_Master_Wait	;wreg free
  5938  0032C0                     
  5939                           ;src/i2c.c: 67:     temp = SSPBUF;
  5940  0032C0  CFC9 F08C          	movff	4041,I2C_Master_Read@temp	;volatile
  5941                           
  5942                           ;src/i2c.c: 68:     I2C_Master_Wait();
  5943  0032C4  ECCB  F019         	call	_I2C_Master_Wait	;wreg free
  5944  0032C8                     
  5945                           ;src/i2c.c: 69:     ACKDT = a ? 0 : 1;
  5946  0032C8  0100               	movlb	0	; () banked
  5947  0032CA  518B               	movf	I2C_Master_Read@a& (0+255),w,b
  5948  0032CC  B4D8               	btfsc	status,2,c
  5949  0032CE  EF6B  F019         	goto	u3301
  5950  0032D2  EF6E  F019         	goto	u3300
  5951  0032D6                     u3301:
  5952  0032D6  8AC5               	bsf	4037,5,c	;volatile
  5953  0032D8  EF6F  F019         	goto	u3315
  5954  0032DC                     u3300:
  5955  0032DC  9AC5               	bcf	4037,5,c	;volatile
  5956  0032DE                     u3315:
  5957  0032DE                     
  5958                           ;src/i2c.c: 72:     ACKEN = 1;
  5959  0032DE  88C5               	bsf	4037,4,c	;volatile
  5960  0032E0                     
  5961                           ;src/i2c.c: 74:     return temp;
  5962  0032E0  0100               	movlb	0	; () banked
  5963  0032E2  518C               	movf	I2C_Master_Read@temp& (0+255),w,b
  5964  0032E4                     
  5965                           ; BSR set to: 0
  5966  0032E4  0012               	return		;funcret
  5967  0032E6                     __end_of_I2C_Master_Read:
  5968                           	callstack 0
  5969                           
  5970 ;; *************** function _I2C_Master_Wait *****************
  5971 ;; Defined at:
  5972 ;;		line 37 in file "src/i2c.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;		None
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      void 
  5979 ;; Registers used:
  5980 ;;		wreg, status,2, status,0
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5986 ;;      Params:         0       0       0       0       0       0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0
  5988 ;;      Temps:          0       1       0       0       0       0       0
  5989 ;;      Totals:         0       1       0       0       0       0       0
  5990 ;;Total ram usage:        1 bytes
  5991 ;; Hardware stack levels used: 1
  5992 ;; Hardware stack levels required when called: 11
  5993 ;; This function calls:
  5994 ;;		Nothing
  5995 ;; This function is called by:
  5996 ;;		_I2C_Master_Start
  5997 ;;		_I2C_Master_RepeatedStart
  5998 ;;		_I2C_Master_Stop
  5999 ;;		_I2C_Master_Write
  6000 ;;		_I2C_Master_Read
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text39
  6005  003396                     __ptext39:
  6006                           	callstack 0
  6007  003396                     _I2C_Master_Wait:
  6008                           	callstack 16
  6009  003396                     l37:
  6010  003396  B4C7               	btfsc	199,2,c	;volatile
  6011  003398  EFD0  F019         	goto	u2861
  6012  00339C  EFD2  F019         	goto	u2860
  6013  0033A0                     u2861:
  6014  0033A0  EFCB  F019         	goto	l37
  6015  0033A4                     u2860:
  6016  0033A4  CFC5 F08A          	movff	4037,??_I2C_Master_Wait	;volatile
  6017  0033A8  0E1F               	movlw	31
  6018  0033AA  0100               	movlb	0	; () banked
  6019  0033AC  178A               	andwf	??_I2C_Master_Wait& (0+255),f,b
  6020  0033AE  A4D8               	btfss	status,2,c
  6021  0033B0  EFDC  F019         	goto	u2871
  6022  0033B4  EFDE  F019         	goto	u2870
  6023  0033B8                     u2871:
  6024  0033B8  EFCB  F019         	goto	l37
  6025  0033BC                     u2870:
  6026  0033BC                     
  6027                           ; BSR set to: 0
  6028  0033BC  0012               	return		;funcret
  6029  0033BE                     __end_of_I2C_Master_Wait:
  6030                           	callstack 0
  6031                           
  6032 ;; *************** function _Hi_ISR *****************
  6033 ;; Defined at:
  6034 ;;		line 133 in file "src/main.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;		None
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;		None
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1    wreg      void 
  6041 ;; Registers used:
  6042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6048 ;;      Params:         0       0       0       0       0       0       0
  6049 ;;      Locals:         0       0       0       0       0       0       0
  6050 ;;      Temps:          0      10       0       0       0       0       0
  6051 ;;      Totals:         0      10       0       0       0       0       0
  6052 ;;Total ram usage:       10 bytes
  6053 ;; Hardware stack levels used: 1
  6054 ;; Hardware stack levels required when called: 10
  6055 ;; This function calls:
  6056 ;;		_myISR
  6057 ;; This function is called by:
  6058 ;;		Interrupt level 2
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	intcode
  6063  000008                     __pintcode:
  6064                           	callstack 0
  6065  000008                     _Hi_ISR:
  6066                           	callstack 12
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;incstack = 0
  6070  000008  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6071  00000A  EDED  F016         	call	int_func,f	;refresh shadow registers
  6072                           
  6073                           	psect	intcode_body
  6074  002DDA                     __pintcode_body:
  6075                           	callstack 12
  6076  002DDA                     int_func:
  6077                           	callstack 12
  6078  002DDA  0006               	pop		; remove dummy address from shadow register refresh
  6079  002DDC  CFE1 F080          	movff	fsr1l,??_Hi_ISR
  6080  002DE0  CFE2 F081          	movff	fsr1h,??_Hi_ISR+1
  6081  002DE4  CFD9 F082          	movff	fsr2l,??_Hi_ISR+2
  6082  002DE8  CFDA F083          	movff	fsr2h,??_Hi_ISR+3
  6083  002DEC  CFF3 F084          	movff	prodl,??_Hi_ISR+4
  6084  002DF0  CFF4 F085          	movff	prodh,??_Hi_ISR+5
  6085  002DF4  CFF6 F086          	movff	tblptrl,??_Hi_ISR+6
  6086  002DF8  CFF7 F087          	movff	tblptrh,??_Hi_ISR+7
  6087  002DFC  CFF8 F088          	movff	tblptru,??_Hi_ISR+8
  6088  002E00  CFF5 F089          	movff	tablat,??_Hi_ISR+9
  6089  002E04                     
  6090                           ;src/main.c: 135:     INTCONbits.INT0IE = 0;
  6091  002E04  98F2               	bcf	242,4,c	;volatile
  6092  002E06                     
  6093                           ;src/main.c: 136:     myISR();
  6094  002E06  EC25  F003         	call	_myISR	;wreg free
  6095  002E0A                     
  6096                           ;src/main.c: 137:     INTCONbits.INT0IF = 0;
  6097  002E0A  92F2               	bcf	242,1,c	;volatile
  6098  002E0C                     
  6099                           ;src/main.c: 138:     INTCONbits.INT0IE = 1;
  6100  002E0C  88F2               	bsf	242,4,c	;volatile
  6101  002E0E  C089  FFF5         	movff	??_Hi_ISR+9,tablat
  6102  002E12  C088  FFF8         	movff	??_Hi_ISR+8,tblptru
  6103  002E16  C087  FFF7         	movff	??_Hi_ISR+7,tblptrh
  6104  002E1A  C086  FFF6         	movff	??_Hi_ISR+6,tblptrl
  6105  002E1E  C085  FFF4         	movff	??_Hi_ISR+5,prodh
  6106  002E22  C084  FFF3         	movff	??_Hi_ISR+4,prodl
  6107  002E26  C083  FFDA         	movff	??_Hi_ISR+3,fsr2h
  6108  002E2A  C082  FFD9         	movff	??_Hi_ISR+2,fsr2l
  6109  002E2E  C081  FFE2         	movff	??_Hi_ISR+1,fsr1h
  6110  002E32  C080  FFE1         	movff	??_Hi_ISR,fsr1l
  6111  002E36  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6112  002E38  0011               	retfie		f
  6113  002E3A                     __end_of_Hi_ISR:
  6114                           	callstack 0
  6115                           
  6116 ;; *************** function _myISR *****************
  6117 ;; Defined at:
  6118 ;;		line 44 in file "src/main.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6132 ;;      Params:         0       0       0       0       0       0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0
  6134 ;;      Temps:          4       0       0       0       0       0       0
  6135 ;;      Totals:         4       0       0       0       0       0       0
  6136 ;;Total ram usage:        4 bytes
  6137 ;; Hardware stack levels used: 1
  6138 ;; Hardware stack levels required when called: 9
  6139 ;; This function calls:
  6140 ;;		_lcd1602_blink
  6141 ;;		_lcd1602_noBlink
  6142 ;;		_printDate
  6143 ;;		_printTime
  6144 ;;		i2_lcd1602_home
  6145 ;;		i2_lcd1602_setCursor
  6146 ;; This function is called by:
  6147 ;;		_Hi_ISR
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text41
  6152  00064A                     __ptext41:
  6153                           	callstack 0
  6154  00064A                     _myISR:
  6155                           	callstack 12
  6156  00064A                     i2l3833:
  6157                           
  6158                           ;src/main.c: 46:     while(PORTBbits.RB0 == 1){
  6159  00064A  EF5F  F003         	goto	i2l3853
  6160  00064E                     i2l3835:
  6161                           
  6162                           ;src/main.c: 47:         lcd1602_setCursor(0, 3);
  6163  00064E  0E03               	movlw	3
  6164  000650  6E02               	movwf	i2lcd1602_setCursor@col^0,c
  6165  000652  0E00               	movlw	0
  6166  000654  EC8B  F019         	call	i2_lcd1602_setCursor
  6167  000658                     
  6168                           ;src/main.c: 48:         lcd1602_blink();
  6169  000658  EC95  F01A         	call	_lcd1602_blink	;wreg free
  6170  00065C                     
  6171                           ;src/main.c: 49:             if(PORTBbits.RB1 == 0 && year <= 2022){
  6172  00065C  B281               	btfsc	129,1,c	;volatile
  6173  00065E  EF33  F003         	goto	i2u355_41
  6174  000662  EF35  F003         	goto	i2u355_40
  6175  000666                     i2u355_41:
  6176  000666  EF46  F003         	goto	i2l295
  6177  00066A                     i2u355_40:
  6178  00066A  0EE7               	movlw	231
  6179  00066C  5C7B               	subwf	_year^0,w,c
  6180  00066E  0E07               	movlw	7
  6181  000670  587C               	subwfb	(_year+1)^0,w,c
  6182  000672  B0D8               	btfsc	status,0,c
  6183  000674  EF3E  F003         	goto	i2u356_41
  6184  000678  EF40  F003         	goto	i2u356_40
  6185  00067C                     i2u356_41:
  6186  00067C  EF46  F003         	goto	i2l295
  6187  000680                     i2u356_40:
  6188  000680                     
  6189                           ;src/main.c: 50:                 year++;
  6190  000680  4A7B               	infsnz	_year^0,f,c
  6191  000682  2A7C               	incf	(_year+1)^0,f,c
  6192  000684                     
  6193                           ;src/main.c: 51:                 printDate();
  6194  000684  EC79  F015         	call	_printDate	;wreg free
  6195                           
  6196                           ;src/main.c: 52:             }else if(PORTBbits.RB2 == 0 && year >= 2022){
  6197  000688  EF5F  F003         	goto	i2l3853
  6198  00068C                     i2l295:
  6199  00068C  B481               	btfsc	129,2,c	;volatile
  6200  00068E  EF4B  F003         	goto	i2u357_41
  6201  000692  EF4D  F003         	goto	i2u357_40
  6202  000696                     i2u357_41:
  6203  000696  EF5F  F003         	goto	i2l3853
  6204  00069A                     i2u357_40:
  6205  00069A  0EE6               	movlw	230
  6206  00069C  5C7B               	subwf	_year^0,w,c
  6207  00069E  0E07               	movlw	7
  6208  0006A0  587C               	subwfb	(_year+1)^0,w,c
  6209  0006A2  A0D8               	btfss	status,0,c
  6210  0006A4  EF56  F003         	goto	i2u358_41
  6211  0006A8  EF58  F003         	goto	i2u358_40
  6212  0006AC                     i2u358_41:
  6213  0006AC  EF5F  F003         	goto	i2l3853
  6214  0006B0                     i2u358_40:
  6215  0006B0                     
  6216                           ;src/main.c: 53:                 year--;
  6217  0006B0  067B               	decf	_year^0,f,c
  6218  0006B2  A0D8               	btfss	status,0,c
  6219  0006B4  067C               	decf	(_year+1)^0,f,c
  6220  0006B6                     
  6221                           ;src/main.c: 54:                 printDate();
  6222  0006B6  EC79  F015         	call	_printDate	;wreg free
  6223  0006BA  EF25  F003         	goto	i2l3833
  6224  0006BE                     i2l3853:
  6225                           
  6226                           ;src/main.c: 46:     while(PORTBbits.RB0 == 1){
  6227  0006BE  B081               	btfsc	129,0,c	;volatile
  6228  0006C0  EF64  F003         	goto	i2u359_41
  6229  0006C4  EF66  F003         	goto	i2u359_40
  6230  0006C8                     i2u359_41:
  6231  0006C8  EF27  F003         	goto	i2l3835
  6232  0006CC                     i2u359_40:
  6233  0006CC                     
  6234                           ;src/main.c: 57:     PORTBbits.RB0 = 1;
  6235  0006CC  8081               	bsf	129,0,c	;volatile
  6236  0006CE                     
  6237                           ;src/main.c: 58:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  6238  0006CE  0E02               	movlw	2
  6239  0006D0  6E74               	movwf	(??_myISR+1)^0,c
  6240  0006D2  0E45               	movlw	69
  6241  0006D4  6E73               	movwf	??_myISR^0,c
  6242  0006D6  0EAA               	movlw	170
  6243  0006D8                     i2u389_47:
  6244  0006D8  2EE8               	decfsz	wreg,f,c
  6245  0006DA  D7FE               	bra	i2u389_47
  6246  0006DC  2E73               	decfsz	??_myISR^0,f,c
  6247  0006DE  D7FC               	bra	i2u389_47
  6248  0006E0  2E74               	decfsz	(??_myISR+1)^0,f,c
  6249  0006E2  D7FA               	bra	i2u389_47
  6250                           
  6251                           ;src/main.c: 60:     while(PORTBbits.RB0 == 1){
  6252  0006E4  EFAA  F003         	goto	i2l3875
  6253  0006E8                     i2l3857:
  6254                           
  6255                           ;src/main.c: 61:         lcd1602_setCursor(0, 6);
  6256  0006E8  0E06               	movlw	6
  6257  0006EA  6E02               	movwf	i2lcd1602_setCursor@col^0,c
  6258  0006EC  0E00               	movlw	0
  6259  0006EE  EC8B  F019         	call	i2_lcd1602_setCursor
  6260  0006F2                     
  6261                           ;src/main.c: 62:         lcd1602_blink();
  6262  0006F2  EC95  F01A         	call	_lcd1602_blink	;wreg free
  6263  0006F6                     
  6264                           ;src/main.c: 63:             if(PORTBbits.RB1 == 0 && month <= 11){
  6265  0006F6  B281               	btfsc	129,1,c	;volatile
  6266  0006F8  EF80  F003         	goto	i2u360_41
  6267  0006FC  EF82  F003         	goto	i2u360_40
  6268  000700                     i2u360_41:
  6269  000700  EF93  F003         	goto	i2l301
  6270  000704                     i2u360_40:
  6271  000704  507A               	movf	(_month+1)^0,w,c
  6272  000706  E107               	bnz	i2u361_41
  6273  000708  0E0C               	movlw	12
  6274  00070A  5C79               	subwf	_month^0,w,c
  6275  00070C  B0D8               	btfsc	status,0,c
  6276  00070E  EF8B  F003         	goto	i2u361_41
  6277  000712  EF8D  F003         	goto	i2u361_40
  6278  000716                     i2u361_41:
  6279  000716  EF93  F003         	goto	i2l301
  6280  00071A                     i2u361_40:
  6281  00071A                     
  6282                           ;src/main.c: 64:                 month++;
  6283  00071A  4A79               	infsnz	_month^0,f,c
  6284  00071C  2A7A               	incf	(_month+1)^0,f,c
  6285  00071E                     i2l3867:
  6286                           
  6287                           ;src/main.c: 65:                 printDate();
  6288  00071E  EC79  F015         	call	_printDate	;wreg free
  6289                           
  6290                           ;src/main.c: 66:             }else if(PORTBbits.RB2 == 0 && month >= 2){
  6291  000722  EFAA  F003         	goto	i2l3875
  6292  000726                     i2l301:
  6293  000726  B481               	btfsc	129,2,c	;volatile
  6294  000728  EF98  F003         	goto	i2u362_41
  6295  00072C  EF9A  F003         	goto	i2u362_40
  6296  000730                     i2u362_41:
  6297  000730  EFAA  F003         	goto	i2l3875
  6298  000734                     i2u362_40:
  6299  000734  507A               	movf	(_month+1)^0,w,c
  6300  000736  E109               	bnz	i2u363_40
  6301  000738  0E02               	movlw	2
  6302  00073A  5C79               	subwf	_month^0,w,c
  6303  00073C  A0D8               	btfss	status,0,c
  6304  00073E  EFA3  F003         	goto	i2u363_41
  6305  000742  EFA5  F003         	goto	i2u363_40
  6306  000746                     i2u363_41:
  6307  000746  EFAA  F003         	goto	i2l3875
  6308  00074A                     i2u363_40:
  6309  00074A                     
  6310                           ;src/main.c: 67:                 month--;
  6311  00074A  0679               	decf	_month^0,f,c
  6312  00074C  A0D8               	btfss	status,0,c
  6313  00074E  067A               	decf	(_month+1)^0,f,c
  6314  000750  EF8F  F003         	goto	i2l3867
  6315  000754                     i2l3875:
  6316                           
  6317                           ;src/main.c: 60:     while(PORTBbits.RB0 == 1){
  6318  000754  B081               	btfsc	129,0,c	;volatile
  6319  000756  EFAF  F003         	goto	i2u364_41
  6320  00075A  EFB1  F003         	goto	i2u364_40
  6321  00075E                     i2u364_41:
  6322  00075E  EF74  F003         	goto	i2l3857
  6323  000762                     i2u364_40:
  6324  000762                     
  6325                           ;src/main.c: 71:     PORTBbits.RB0 = 1;
  6326  000762  8081               	bsf	129,0,c	;volatile
  6327  000764                     
  6328                           ;src/main.c: 72:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  6329  000764  0E02               	movlw	2
  6330  000766  6E74               	movwf	(??_myISR+1)^0,c
  6331  000768  0E45               	movlw	69
  6332  00076A  6E73               	movwf	??_myISR^0,c
  6333  00076C  0EAA               	movlw	170
  6334  00076E                     i2u390_47:
  6335  00076E  2EE8               	decfsz	wreg,f,c
  6336  000770  D7FE               	bra	i2u390_47
  6337  000772  2E73               	decfsz	??_myISR^0,f,c
  6338  000774  D7FC               	bra	i2u390_47
  6339  000776  2E74               	decfsz	(??_myISR+1)^0,f,c
  6340  000778  D7FA               	bra	i2u390_47
  6341                           
  6342                           ;src/main.c: 74:     while(PORTBbits.RB0 == 1){
  6343  00077A  EF0C  F004         	goto	i2l3897
  6344  00077E                     i2l3879:
  6345                           
  6346                           ;src/main.c: 75:         lcd1602_setCursor(0, 9);
  6347  00077E  0E09               	movlw	9
  6348  000780  6E02               	movwf	i2lcd1602_setCursor@col^0,c
  6349  000782  0E00               	movlw	0
  6350  000784  EC8B  F019         	call	i2_lcd1602_setCursor
  6351  000788                     
  6352                           ;src/main.c: 76:         lcd1602_blink();
  6353  000788  EC95  F01A         	call	_lcd1602_blink	;wreg free
  6354  00078C                     
  6355                           ;src/main.c: 77:             if(PORTBbits.RB1 == 0 && day <= month_day[month] - 1){
  6356  00078C  B281               	btfsc	129,1,c	;volatile
  6357  00078E  EFCB  F003         	goto	i2u365_41
  6358  000792  EFCD  F003         	goto	i2u365_40
  6359  000796                     i2u365_41:
  6360  000796  EFF5  F003         	goto	i2l307
  6361  00079A                     i2u365_40:
  6362  00079A  0EFF               	movlw	255
  6363  00079C  6E73               	movwf	??_myISR^0,c
  6364  00079E  0EFF               	movlw	255
  6365  0007A0  6E74               	movwf	(??_myISR+1)^0,c
  6366  0007A2  90D8               	bcf	status,0,c
  6367  0007A4  3479               	rlcf	_month^0,w,c
  6368  0007A6  6EF6               	movwf	tblptrl,c
  6369  0007A8  347A               	rlcf	(_month+1)^0,w,c
  6370  0007AA  6EF7               	movwf	tblptrh,c
  6371  0007AC  0E01               	movlw	low _month_day
  6372  0007AE  26F6               	addwf	tblptrl,f,c
  6373  0007B0  0E06               	movlw	high _month_day
  6374  0007B2  22F7               	addwfc	tblptrh,f,c
  6375  0007B4                     	if	0	;There are less than 3 active tblptr bytes
  6376  0007B4                     	endif
  6377  0007B4  0009               	tblrd		*+
  6378  0007B6  CFF5 F075          	movff	tablat,??_myISR+2
  6379  0007BA  0009               	tblrd		*+
  6380  0007BC  CFF5 F076          	movff	tablat,??_myISR+3
  6381  0007C0  5073               	movf	??_myISR^0,w,c
  6382  0007C2  2675               	addwf	(??_myISR+2)^0,f,c
  6383  0007C4  5074               	movf	(??_myISR+1)^0,w,c
  6384  0007C6  2276               	addwfc	(??_myISR+3)^0,f,c
  6385  0007C8  5077               	movf	_day^0,w,c
  6386  0007CA  5C75               	subwf	(??_myISR+2)^0,w,c
  6387  0007CC  5078               	movf	(_day+1)^0,w,c
  6388  0007CE  5876               	subwfb	(??_myISR+3)^0,w,c
  6389  0007D0  A0D8               	btfss	status,0,c
  6390  0007D2  EFED  F003         	goto	i2u366_41
  6391  0007D6  EFEF  F003         	goto	i2u366_40
  6392  0007DA                     i2u366_41:
  6393  0007DA  EFF5  F003         	goto	i2l307
  6394  0007DE                     i2u366_40:
  6395  0007DE                     
  6396                           ;src/main.c: 78:                 day++;
  6397  0007DE  4A77               	infsnz	_day^0,f,c
  6398  0007E0  2A78               	incf	(_day+1)^0,f,c
  6399  0007E2                     i2l3889:
  6400                           
  6401                           ;src/main.c: 79:                 printDate();
  6402  0007E2  EC79  F015         	call	_printDate	;wreg free
  6403                           
  6404                           ;src/main.c: 80:             }else if(PORTBbits.RB2 == 0 && day >= 2){
  6405  0007E6  EF0C  F004         	goto	i2l3897
  6406  0007EA                     i2l307:
  6407  0007EA  B481               	btfsc	129,2,c	;volatile
  6408  0007EC  EFFA  F003         	goto	i2u367_41
  6409  0007F0  EFFC  F003         	goto	i2u367_40
  6410  0007F4                     i2u367_41:
  6411  0007F4  EF0C  F004         	goto	i2l3897
  6412  0007F8                     i2u367_40:
  6413  0007F8  5078               	movf	(_day+1)^0,w,c
  6414  0007FA  E109               	bnz	i2u368_40
  6415  0007FC  0E02               	movlw	2
  6416  0007FE  5C77               	subwf	_day^0,w,c
  6417  000800  A0D8               	btfss	status,0,c
  6418  000802  EF05  F004         	goto	i2u368_41
  6419  000806  EF07  F004         	goto	i2u368_40
  6420  00080A                     i2u368_41:
  6421  00080A  EF0C  F004         	goto	i2l3897
  6422  00080E                     i2u368_40:
  6423  00080E                     
  6424                           ;src/main.c: 81:                 day--;
  6425  00080E  0677               	decf	_day^0,f,c
  6426  000810  A0D8               	btfss	status,0,c
  6427  000812  0678               	decf	(_day+1)^0,f,c
  6428  000814  EFF1  F003         	goto	i2l3889
  6429  000818                     i2l3897:
  6430                           
  6431                           ;src/main.c: 74:     while(PORTBbits.RB0 == 1){
  6432  000818  B081               	btfsc	129,0,c	;volatile
  6433  00081A  EF11  F004         	goto	i2u369_41
  6434  00081E  EF13  F004         	goto	i2u369_40
  6435  000822                     i2u369_41:
  6436  000822  EFBF  F003         	goto	i2l3879
  6437  000826                     i2u369_40:
  6438  000826                     
  6439                           ;src/main.c: 85:     PORTBbits.RB0 = 1;
  6440  000826  8081               	bsf	129,0,c	;volatile
  6441  000828                     
  6442                           ;src/main.c: 86:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  6443  000828  0E02               	movlw	2
  6444  00082A  6E74               	movwf	(??_myISR+1)^0,c
  6445  00082C  0E45               	movlw	69
  6446  00082E  6E73               	movwf	??_myISR^0,c
  6447  000830  0EAA               	movlw	170
  6448  000832                     i2u391_47:
  6449  000832  2EE8               	decfsz	wreg,f,c
  6450  000834  D7FE               	bra	i2u391_47
  6451  000836  2E73               	decfsz	??_myISR^0,f,c
  6452  000838  D7FC               	bra	i2u391_47
  6453  00083A  2E74               	decfsz	(??_myISR+1)^0,f,c
  6454  00083C  D7FA               	bra	i2u391_47
  6455                           
  6456                           ;src/main.c: 88:     while(PORTBbits.RB0 == 1){
  6457  00083E  EF57  F004         	goto	i2l3919
  6458  000842                     i2l3901:
  6459                           
  6460                           ;src/main.c: 89:         lcd1602_setCursor(1, 1);
  6461  000842  0E01               	movlw	1
  6462  000844  6E02               	movwf	i2lcd1602_setCursor@col^0,c
  6463  000846  0E01               	movlw	1
  6464  000848  EC8B  F019         	call	i2_lcd1602_setCursor
  6465  00084C                     
  6466                           ;src/main.c: 90:         lcd1602_blink();
  6467  00084C  EC95  F01A         	call	_lcd1602_blink	;wreg free
  6468  000850                     
  6469                           ;src/main.c: 91:             if(PORTBbits.RB1 == 0 && hour <= 22){
  6470  000850  B281               	btfsc	129,1,c	;volatile
  6471  000852  EF2D  F004         	goto	i2u370_41
  6472  000856  EF2F  F004         	goto	i2u370_40
  6473  00085A                     i2u370_41:
  6474  00085A  EF41  F004         	goto	i2l313
  6475  00085E                     i2u370_40:
  6476  00085E  0100               	movlb	0	; () banked
  6477  000860  51F5               	movf	(_hour+1)& (0+255),w,b
  6478  000862  E107               	bnz	i2u371_41
  6479  000864  0E17               	movlw	23
  6480  000866  5DF4               	subwf	_hour& (0+255),w,b
  6481  000868  B0D8               	btfsc	status,0,c
  6482  00086A  EF39  F004         	goto	i2u371_41
  6483  00086E  EF3B  F004         	goto	i2u371_40
  6484  000872                     i2u371_41:
  6485  000872  EF41  F004         	goto	i2l313
  6486  000876                     i2u371_40:
  6487  000876                     
  6488                           ; BSR set to: 0
  6489                           ;src/main.c: 92:                 hour++;
  6490  000876  4BF4               	infsnz	_hour& (0+255),f,b
  6491  000878  2BF5               	incf	(_hour+1)& (0+255),f,b
  6492  00087A                     i2l3911:
  6493                           
  6494                           ; BSR set to: 0
  6495                           ;src/main.c: 93:                 printTime();
  6496  00087A  ECED  F015         	call	_printTime	;wreg free
  6497                           
  6498                           ;src/main.c: 94:             }else if(PORTBbits.RB2 == 0 && hour >= 1){
  6499  00087E  EF57  F004         	goto	i2l3919
  6500  000882                     i2l313:
  6501  000882  B481               	btfsc	129,2,c	;volatile
  6502  000884  EF46  F004         	goto	i2u372_41
  6503  000888  EF48  F004         	goto	i2u372_40
  6504  00088C                     i2u372_41:
  6505  00088C  EF57  F004         	goto	i2l3919
  6506  000890                     i2u372_40:
  6507  000890  0100               	movlb	0	; () banked
  6508  000892  51F4               	movf	_hour& (0+255),w,b
  6509  000894  11F5               	iorwf	(_hour+1)& (0+255),w,b
  6510  000896  B4D8               	btfsc	status,2,c
  6511  000898  EF50  F004         	goto	i2u373_41
  6512  00089C  EF52  F004         	goto	i2u373_40
  6513  0008A0                     i2u373_41:
  6514  0008A0  EF57  F004         	goto	i2l3919
  6515  0008A4                     i2u373_40:
  6516  0008A4                     
  6517                           ; BSR set to: 0
  6518                           ;src/main.c: 95:                 hour--;
  6519  0008A4  07F4               	decf	_hour& (0+255),f,b
  6520  0008A6  A0D8               	btfss	status,0,c
  6521  0008A8  07F5               	decf	(_hour+1)& (0+255),f,b
  6522  0008AA  EF3D  F004         	goto	i2l3911
  6523  0008AE                     i2l3919:
  6524                           
  6525                           ;src/main.c: 88:     while(PORTBbits.RB0 == 1){
  6526  0008AE  B081               	btfsc	129,0,c	;volatile
  6527  0008B0  EF5C  F004         	goto	i2u374_41
  6528  0008B4  EF5E  F004         	goto	i2u374_40
  6529  0008B8                     i2u374_41:
  6530  0008B8  EF21  F004         	goto	i2l3901
  6531  0008BC                     i2u374_40:
  6532  0008BC                     
  6533                           ;src/main.c: 99:     PORTBbits.RB0 = 1;
  6534  0008BC  8081               	bsf	129,0,c	;volatile
  6535  0008BE                     
  6536                           ;src/main.c: 100:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  6537  0008BE  0E02               	movlw	2
  6538  0008C0  6E74               	movwf	(??_myISR+1)^0,c
  6539  0008C2  0E45               	movlw	69
  6540  0008C4  6E73               	movwf	??_myISR^0,c
  6541  0008C6  0EAA               	movlw	170
  6542  0008C8                     i2u392_47:
  6543  0008C8  2EE8               	decfsz	wreg,f,c
  6544  0008CA  D7FE               	bra	i2u392_47
  6545  0008CC  2E73               	decfsz	??_myISR^0,f,c
  6546  0008CE  D7FC               	bra	i2u392_47
  6547  0008D0  2E74               	decfsz	(??_myISR+1)^0,f,c
  6548  0008D2  D7FA               	bra	i2u392_47
  6549                           
  6550                           ;src/main.c: 102:     while(PORTBbits.RB0 == 1){
  6551  0008D4  EFA2  F004         	goto	i2l3941
  6552  0008D8                     i2l3923:
  6553                           
  6554                           ;src/main.c: 103:         lcd1602_setCursor(1, 4);
  6555  0008D8  0E04               	movlw	4
  6556  0008DA  6E02               	movwf	i2lcd1602_setCursor@col^0,c
  6557  0008DC  0E01               	movlw	1
  6558  0008DE  EC8B  F019         	call	i2_lcd1602_setCursor
  6559  0008E2                     
  6560                           ;src/main.c: 104:         lcd1602_blink();
  6561  0008E2  EC95  F01A         	call	_lcd1602_blink	;wreg free
  6562  0008E6                     
  6563                           ;src/main.c: 105:             if(PORTBbits.RB1 == 0 && minute <= 59){
  6564  0008E6  B281               	btfsc	129,1,c	;volatile
  6565  0008E8  EF78  F004         	goto	i2u375_41
  6566  0008EC  EF7A  F004         	goto	i2u375_40
  6567  0008F0                     i2u375_41:
  6568  0008F0  EF8C  F004         	goto	i2l319
  6569  0008F4                     i2u375_40:
  6570  0008F4  0100               	movlb	0	; () banked
  6571  0008F6  51F3               	movf	(_minute+1)& (0+255),w,b
  6572  0008F8  E107               	bnz	i2u376_41
  6573  0008FA  0E3C               	movlw	60
  6574  0008FC  5DF2               	subwf	_minute& (0+255),w,b
  6575  0008FE  B0D8               	btfsc	status,0,c
  6576  000900  EF84  F004         	goto	i2u376_41
  6577  000904  EF86  F004         	goto	i2u376_40
  6578  000908                     i2u376_41:
  6579  000908  EF8C  F004         	goto	i2l319
  6580  00090C                     i2u376_40:
  6581  00090C                     
  6582                           ; BSR set to: 0
  6583                           ;src/main.c: 106:                 minute++;
  6584  00090C  4BF2               	infsnz	_minute& (0+255),f,b
  6585  00090E  2BF3               	incf	(_minute+1)& (0+255),f,b
  6586  000910                     i2l3933:
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;src/main.c: 107:                 printTime();
  6590  000910  ECED  F015         	call	_printTime	;wreg free
  6591                           
  6592                           ;src/main.c: 108:             }else if(PORTBbits.RB2 == 0 && minute >= 1){
  6593  000914  EFA2  F004         	goto	i2l3941
  6594  000918                     i2l319:
  6595  000918  B481               	btfsc	129,2,c	;volatile
  6596  00091A  EF91  F004         	goto	i2u377_41
  6597  00091E  EF93  F004         	goto	i2u377_40
  6598  000922                     i2u377_41:
  6599  000922  EFA2  F004         	goto	i2l3941
  6600  000926                     i2u377_40:
  6601  000926  0100               	movlb	0	; () banked
  6602  000928  51F2               	movf	_minute& (0+255),w,b
  6603  00092A  11F3               	iorwf	(_minute+1)& (0+255),w,b
  6604  00092C  B4D8               	btfsc	status,2,c
  6605  00092E  EF9B  F004         	goto	i2u378_41
  6606  000932  EF9D  F004         	goto	i2u378_40
  6607  000936                     i2u378_41:
  6608  000936  EFA2  F004         	goto	i2l3941
  6609  00093A                     i2u378_40:
  6610  00093A                     
  6611                           ; BSR set to: 0
  6612                           ;src/main.c: 109:                 minute--;
  6613  00093A  07F2               	decf	_minute& (0+255),f,b
  6614  00093C  A0D8               	btfss	status,0,c
  6615  00093E  07F3               	decf	(_minute+1)& (0+255),f,b
  6616  000940  EF88  F004         	goto	i2l3933
  6617  000944                     i2l3941:
  6618                           
  6619                           ;src/main.c: 102:     while(PORTBbits.RB0 == 1){
  6620  000944  B081               	btfsc	129,0,c	;volatile
  6621  000946  EFA7  F004         	goto	i2u379_41
  6622  00094A  EFA9  F004         	goto	i2u379_40
  6623  00094E                     i2u379_41:
  6624  00094E  EF6C  F004         	goto	i2l3923
  6625  000952                     i2u379_40:
  6626  000952                     
  6627                           ;src/main.c: 113:     PORTBbits.RB0 = 1;
  6628  000952  8081               	bsf	129,0,c	;volatile
  6629  000954                     
  6630                           ;src/main.c: 114:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  6631  000954  0E02               	movlw	2
  6632  000956  6E74               	movwf	(??_myISR+1)^0,c
  6633  000958  0E45               	movlw	69
  6634  00095A  6E73               	movwf	??_myISR^0,c
  6635  00095C  0EAA               	movlw	170
  6636  00095E                     i2u393_47:
  6637  00095E  2EE8               	decfsz	wreg,f,c
  6638  000960  D7FE               	bra	i2u393_47
  6639  000962  2E73               	decfsz	??_myISR^0,f,c
  6640  000964  D7FC               	bra	i2u393_47
  6641  000966  2E74               	decfsz	(??_myISR+1)^0,f,c
  6642  000968  D7FA               	bra	i2u393_47
  6643                           
  6644                           ;src/main.c: 116:     while(PORTBbits.RB0 == 1){
  6645  00096A  EFED  F004         	goto	i2l3963
  6646  00096E                     i2l3945:
  6647                           
  6648                           ;src/main.c: 117:         lcd1602_setCursor(1, 7);
  6649  00096E  0E07               	movlw	7
  6650  000970  6E02               	movwf	i2lcd1602_setCursor@col^0,c
  6651  000972  0E01               	movlw	1
  6652  000974  EC8B  F019         	call	i2_lcd1602_setCursor
  6653  000978                     
  6654                           ;src/main.c: 118:         lcd1602_blink();
  6655  000978  EC95  F01A         	call	_lcd1602_blink	;wreg free
  6656  00097C                     
  6657                           ;src/main.c: 119:             if(PORTBbits.RB1 == 0 && second <= 59){
  6658  00097C  B281               	btfsc	129,1,c	;volatile
  6659  00097E  EFC3  F004         	goto	i2u380_41
  6660  000982  EFC5  F004         	goto	i2u380_40
  6661  000986                     i2u380_41:
  6662  000986  EFD7  F004         	goto	i2l325
  6663  00098A                     i2u380_40:
  6664  00098A  0100               	movlb	0	; () banked
  6665  00098C  51F1               	movf	(_second+1)& (0+255),w,b
  6666  00098E  E107               	bnz	i2u381_41
  6667  000990  0E3C               	movlw	60
  6668  000992  5DF0               	subwf	_second& (0+255),w,b
  6669  000994  B0D8               	btfsc	status,0,c
  6670  000996  EFCF  F004         	goto	i2u381_41
  6671  00099A  EFD1  F004         	goto	i2u381_40
  6672  00099E                     i2u381_41:
  6673  00099E  EFD7  F004         	goto	i2l325
  6674  0009A2                     i2u381_40:
  6675  0009A2                     
  6676                           ; BSR set to: 0
  6677                           ;src/main.c: 120:                 second++;
  6678  0009A2  4BF0               	infsnz	_second& (0+255),f,b
  6679  0009A4  2BF1               	incf	(_second+1)& (0+255),f,b
  6680  0009A6                     i2l3955:
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;src/main.c: 121:                 printTime();
  6684  0009A6  ECED  F015         	call	_printTime	;wreg free
  6685                           
  6686                           ;src/main.c: 122:             }else if(PORTBbits.RB2 == 0 && second >= 1){
  6687  0009AA  EFED  F004         	goto	i2l3963
  6688  0009AE                     i2l325:
  6689  0009AE  B481               	btfsc	129,2,c	;volatile
  6690  0009B0  EFDC  F004         	goto	i2u382_41
  6691  0009B4  EFDE  F004         	goto	i2u382_40
  6692  0009B8                     i2u382_41:
  6693  0009B8  EFED  F004         	goto	i2l3963
  6694  0009BC                     i2u382_40:
  6695  0009BC  0100               	movlb	0	; () banked
  6696  0009BE  51F0               	movf	_second& (0+255),w,b
  6697  0009C0  11F1               	iorwf	(_second+1)& (0+255),w,b
  6698  0009C2  B4D8               	btfsc	status,2,c
  6699  0009C4  EFE6  F004         	goto	i2u383_41
  6700  0009C8  EFE8  F004         	goto	i2u383_40
  6701  0009CC                     i2u383_41:
  6702  0009CC  EFED  F004         	goto	i2l3963
  6703  0009D0                     i2u383_40:
  6704  0009D0                     
  6705                           ; BSR set to: 0
  6706                           ;src/main.c: 123:                 second--;
  6707  0009D0  07F0               	decf	_second& (0+255),f,b
  6708  0009D2  A0D8               	btfss	status,0,c
  6709  0009D4  07F1               	decf	(_second+1)& (0+255),f,b
  6710  0009D6  EFD3  F004         	goto	i2l3955
  6711  0009DA                     i2l3963:
  6712                           
  6713                           ;src/main.c: 116:     while(PORTBbits.RB0 == 1){
  6714  0009DA  B081               	btfsc	129,0,c	;volatile
  6715  0009DC  EFF2  F004         	goto	i2u384_41
  6716  0009E0  EFF4  F004         	goto	i2u384_40
  6717  0009E4                     i2u384_41:
  6718  0009E4  EFB7  F004         	goto	i2l3945
  6719  0009E8                     i2u384_40:
  6720  0009E8                     
  6721                           ;src/main.c: 127:     PORTBbits.RB0 = 1;
  6722  0009E8  8081               	bsf	129,0,c	;volatile
  6723  0009EA                     
  6724                           ;src/main.c: 128:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  6725  0009EA  0E02               	movlw	2
  6726  0009EC  6E74               	movwf	(??_myISR+1)^0,c
  6727  0009EE  0E45               	movlw	69
  6728  0009F0  6E73               	movwf	??_myISR^0,c
  6729  0009F2  0EAA               	movlw	170
  6730  0009F4                     i2u394_47:
  6731  0009F4  2EE8               	decfsz	wreg,f,c
  6732  0009F6  D7FE               	bra	i2u394_47
  6733  0009F8  2E73               	decfsz	??_myISR^0,f,c
  6734  0009FA  D7FC               	bra	i2u394_47
  6735  0009FC  2E74               	decfsz	(??_myISR+1)^0,f,c
  6736  0009FE  D7FA               	bra	i2u394_47
  6737  000A00                     
  6738                           ;src/main.c: 129:     lcd1602_home();
  6739  000A00  ECB3  F01A         	call	i2_lcd1602_home	;wreg free
  6740  000A04                     
  6741                           ;src/main.c: 130:     lcd1602_noBlink();
  6742  000A04  EC89  F01A         	call	_lcd1602_noBlink	;wreg free
  6743  000A08  0012               	return		;funcret
  6744  000A0A                     __end_of_myISR:
  6745                           	callstack 0
  6746                           
  6747 ;; *************** function _printTime *****************
  6748 ;; Defined at:
  6749 ;;		line 35 in file "src/main.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;		None
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;		None
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  1    wreg      void 
  6756 ;; Registers used:
  6757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6763 ;;      Params:         0       0       0       0       0       0       0
  6764 ;;      Locals:         0       0       0       0       0       0       0
  6765 ;;      Temps:          2       0       0       0       0       0       0
  6766 ;;      Totals:         2       0       0       0       0       0       0
  6767 ;;Total ram usage:        2 bytes
  6768 ;; Hardware stack levels used: 1
  6769 ;; Hardware stack levels required when called: 8
  6770 ;; This function calls:
  6771 ;;		_PCF8563_setTime
  6772 ;;		_lcd1602_noBlink
  6773 ;;		i2_lcd1602_cursorNextLine
  6774 ;;		i2_lcd1602_print
  6775 ;;		i2_sprintf
  6776 ;; This function is called by:
  6777 ;;		_myISR
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text42
  6782  002BDA                     __ptext42:
  6783                           	callstack 0
  6784  002BDA                     _printTime:
  6785                           	callstack 12
  6786  002BDA                     
  6787                           ;src/main.c: 36:     PCF8563_setTime(hour, minute, second);
  6788  002BDA  C0F2  F00B         	movff	_minute,PCF8563_setTime@min
  6789  002BDE  C0F0  F00C         	movff	_second,PCF8563_setTime@sec
  6790  002BE2  0100               	movlb	0	; () banked
  6791  002BE4  51F4               	movf	_hour& (0+255),w,b
  6792  002BE6  EC2C  F014         	call	_PCF8563_setTime
  6793  002BEA                     
  6794                           ;src/main.c: 37:     sprintf(temp, "%02d:%02d:%02d", hour, minute, second);
  6795  002BEA  0E25               	movlw	low _temp
  6796  002BEC  6E5F               	movwf	i2sprintf@s^0,c
  6797  002BEE  0E01               	movlw	high _temp
  6798  002BF0  6E60               	movwf	(i2sprintf@s+1)^0,c
  6799  002BF2  0E3A               	movlw	low STR_2
  6800  002BF4  6E61               	movwf	i2sprintf@fmt^0,c
  6801  002BF6  0E06               	movlw	high STR_2
  6802  002BF8  6E62               	movwf	(i2sprintf@fmt+1)^0,c
  6803  002BFA  C0F4  F063         	movff	_hour,?i2_sprintf+4
  6804  002BFE  C0F5  F064         	movff	_hour+1,?i2_sprintf+5
  6805  002C02  C0F2  F065         	movff	_minute,?i2_sprintf+6
  6806  002C06  C0F3  F066         	movff	_minute+1,?i2_sprintf+7
  6807  002C0A  C0F0  F067         	movff	_second,?i2_sprintf+8
  6808  002C0E  C0F1  F068         	movff	_second+1,?i2_sprintf+9
  6809  002C12  ECC2  F017         	call	i2_sprintf	;wreg free
  6810  002C16                     
  6811                           ;src/main.c: 38:     lcd1602_noBlink();
  6812  002C16  EC89  F01A         	call	_lcd1602_noBlink	;wreg free
  6813  002C1A                     
  6814                           ;src/main.c: 39:     lcd1602_cursorNextLine();
  6815  002C1A  EC83  F01A         	call	i2_lcd1602_cursorNextLine	;wreg free
  6816  002C1E                     
  6817                           ;src/main.c: 40:     lcd1602_print(temp, 8);
  6818  002C1E  0E25               	movlw	low _temp
  6819  002C20  6E02               	movwf	i2lcd1602_print@str^0,c
  6820  002C22  0E01               	movlw	high _temp
  6821  002C24  6E03               	movwf	(i2lcd1602_print@str+1)^0,c
  6822  002C26  0E00               	movlw	0
  6823  002C28  6E05               	movwf	(i2lcd1602_print@length+1)^0,c
  6824  002C2A  0E08               	movlw	8
  6825  002C2C  6E04               	movwf	i2lcd1602_print@length^0,c
  6826  002C2E  EC73  F018         	call	i2_lcd1602_print	;wreg free
  6827  002C32                     
  6828                           ;src/main.c: 41:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  6829  002C32  0E02               	movlw	2
  6830  002C34  6E72               	movwf	(??_printTime+1)^0,c
  6831  002C36  0E45               	movlw	69
  6832  002C38  6E71               	movwf	??_printTime^0,c
  6833  002C3A  0EAA               	movlw	170
  6834  002C3C                     i2u395_47:
  6835  002C3C  2EE8               	decfsz	wreg,f,c
  6836  002C3E  D7FE               	bra	i2u395_47
  6837  002C40  2E71               	decfsz	??_printTime^0,f,c
  6838  002C42  D7FC               	bra	i2u395_47
  6839  002C44  2E72               	decfsz	(??_printTime+1)^0,f,c
  6840  002C46  D7FA               	bra	i2u395_47
  6841  002C48  0012               	return		;funcret
  6842  002C4A                     __end_of_printTime:
  6843                           	callstack 0
  6844                           
  6845 ;; *************** function i2_lcd1602_cursorNextLine *****************
  6846 ;; Defined at:
  6847 ;;		line 60 in file "src/lcd1602.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;		None
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;		None
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  1    wreg      void 
  6854 ;; Registers used:
  6855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6861 ;;      Params:         0       0       0       0       0       0       0
  6862 ;;      Locals:         0       0       0       0       0       0       0
  6863 ;;      Temps:          0       0       0       0       0       0       0
  6864 ;;      Totals:         0       0       0       0       0       0       0
  6865 ;;Total ram usage:        0 bytes
  6866 ;; Hardware stack levels used: 1
  6867 ;; Hardware stack levels required when called: 2
  6868 ;; This function calls:
  6869 ;;		i2_lcd1602_setCursor
  6870 ;; This function is called by:
  6871 ;;		_printTime
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text43
  6876  003506                     __ptext43:
  6877                           	callstack 0
  6878  003506                     i2_lcd1602_cursorNextLine:
  6879                           	callstack 17
  6880  003506                     
  6881                           ;src/lcd1602.c: 61:     lcd1602_setCursor(1, 0);
  6882  003506  0E00               	movlw	0
  6883  003508  6E02               	movwf	i2lcd1602_setCursor@col^0,c
  6884  00350A  0E01               	movlw	1
  6885  00350C  EC8B  F019         	call	i2_lcd1602_setCursor
  6886  003510  0012               	return		;funcret
  6887  003512                     __end_ofi2_lcd1602_cursorNextLine:
  6888                           	callstack 0
  6889                           
  6890 ;; *************** function i2_lcd1602_setCursor *****************
  6891 ;; Defined at:
  6892 ;;		line 52 in file "src/lcd1602.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  row             1    wreg     unsigned char 
  6895 ;;  col             1    1[COMRAM] unsigned char 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  row             1   10[COMRAM] unsigned char 
  6898 ;;  row_offsets     8    2[COMRAM] int [4]
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  1    wreg      void 
  6901 ;; Registers used:
  6902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6908 ;;      Params:         1       0       0       0       0       0       0
  6909 ;;      Locals:         9       0       0       0       0       0       0
  6910 ;;      Temps:          0       0       0       0       0       0       0
  6911 ;;      Totals:        10       0       0       0       0       0       0
  6912 ;;Total ram usage:       10 bytes
  6913 ;; Hardware stack levels used: 1
  6914 ;; Hardware stack levels required when called: 1
  6915 ;; This function calls:
  6916 ;;		i2_lcd1602_cmd
  6917 ;; This function is called by:
  6918 ;;		_myISR
  6919 ;;		i2_lcd1602_cursorNextLine
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           	psect	text44
  6924  003316                     __ptext44:
  6925                           	callstack 0
  6926  003316                     i2_lcd1602_setCursor:
  6927                           	callstack 19
  6928                           
  6929                           ;incstack = 0
  6930                           ;i2lcd1602_setCursor@row stored from wreg
  6931  003316  6E0B               	movwf	i2lcd1602_setCursor@row^0,c
  6932  003318                     
  6933                           ;src/lcd1602.c: 53:     int row_offsets[] = {0x00, 0x40, 0x14, 0x54};
  6934  003318  EE21  F047         	lfsr	2,lcd1602_setCursor@F2597
  6935  00331C  EE10  F003         	lfsr	1,i2lcd1602_setCursor@row_offsets
  6936  003320  0E07               	movlw	7
  6937  003322                     i2u328_41:
  6938  003322  CFDB FFE3          	movff	plusw2,plusw1
  6939  003326  06E8               	decf	wreg,f,c
  6940  003328  E2FC               	bc	i2u328_41
  6941  00332A                     
  6942                           ;src/lcd1602.c: 57:     lcd1602_cmd(0x80 | (col + row_offsets[row]));
  6943  00332A  500B               	movf	i2lcd1602_setCursor@row^0,w,c
  6944  00332C  0D02               	mullw	2
  6945  00332E  0E03               	movlw	low i2lcd1602_setCursor@row_offsets
  6946  003330  24F3               	addwf	243,w,c
  6947  003332  6ED9               	movwf	fsr2l,c
  6948  003334  0E00               	movlw	high i2lcd1602_setCursor@row_offsets
  6949  003336  20F4               	addwfc	prodh,w,c
  6950  003338  6EDA               	movwf	fsr2h,c
  6951  00333A  50DF               	movf	indf2,w,c
  6952  00333C  2402               	addwf	i2lcd1602_setCursor@col^0,w,c
  6953  00333E  0980               	iorlw	128
  6954  003340  EC58  F01A         	call	i2_lcd1602_cmd
  6955  003344  0012               	return		;funcret
  6956  003346                     __end_ofi2_lcd1602_setCursor:
  6957                           	callstack 0
  6958                           
  6959 ;; *************** function _PCF8563_setTime *****************
  6960 ;; Defined at:
  6961 ;;		line 75 in file "src/pcf8563.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  hour            1    wreg     unsigned char 
  6964 ;;  min             1   10[COMRAM] unsigned char 
  6965 ;;  sec             1   11[COMRAM] unsigned char 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;  hour            1   14[COMRAM] unsigned char 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  1    wreg      void 
  6970 ;; Registers used:
  6971 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6977 ;;      Params:         2       0       0       0       0       0       0
  6978 ;;      Locals:         1       0       0       0       0       0       0
  6979 ;;      Temps:          2       0       0       0       0       0       0
  6980 ;;      Totals:         5       0       0       0       0       0       0
  6981 ;;Total ram usage:        5 bytes
  6982 ;; Hardware stack levels used: 1
  6983 ;; Hardware stack levels required when called: 3
  6984 ;; This function calls:
  6985 ;;		___awdiv
  6986 ;;		___awmod
  6987 ;;		i2_setI2C
  6988 ;; This function is called by:
  6989 ;;		_printTime
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text45
  6994  002858                     __ptext45:
  6995                           	callstack 0
  6996  002858                     _PCF8563_setTime:
  6997                           	callstack 16
  6998                           
  6999                           ;incstack = 0
  7000                           ;PCF8563_setTime@hour stored from wreg
  7001  002858  6E0F               	movwf	PCF8563_setTime@hour^0,c
  7002  00285A                     
  7003                           ;src/pcf8563.c: 76:     setI2C(0x04, ( ( ((hour)/10) << 4) + ((hour)%10) ));
  7004  00285A  C00F  F001         	movff	PCF8563_setTime@hour,___awmod@dividend
  7005  00285E  6A02               	clrf	(___awmod@dividend+1)^0,c
  7006  002860  0E00               	movlw	0
  7007  002862  6E04               	movwf	(___awmod@divisor+1)^0,c
  7008  002864  0E0A               	movlw	10
  7009  002866  6E03               	movwf	___awmod@divisor^0,c
  7010  002868  EC88  F014         	call	___awmod	;wreg free
  7011  00286C  C001  F00D         	movff	?___awmod,??_PCF8563_setTime
  7012  002870  C002  F00E         	movff	?___awmod+1,??_PCF8563_setTime+1
  7013  002874  C00F  F001         	movff	PCF8563_setTime@hour,___awdiv@dividend
  7014  002878  6A02               	clrf	(___awdiv@dividend+1)^0,c
  7015  00287A  0E00               	movlw	0
  7016  00287C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7017  00287E  0E0A               	movlw	10
  7018  002880  6E03               	movwf	___awdiv@divisor^0,c
  7019  002882  ECCA  F013         	call	___awdiv	;wreg free
  7020  002886  5001               	movf	?___awdiv^0,w,c
  7021  002888  0D10               	mullw	16
  7022  00288A  50F3               	movf	243,w,c
  7023  00288C  240D               	addwf	??_PCF8563_setTime^0,w,c
  7024  00288E  6E09               	movwf	i2setI2C@data^0,c
  7025  002890  0E04               	movlw	4
  7026  002892  EC17  F01A         	call	i2_setI2C
  7027                           
  7028                           ;src/pcf8563.c: 77:     setI2C(0x03, ( ( ((min)/10) << 4) + ((min)%10) ));
  7029  002896  C00B  F001         	movff	PCF8563_setTime@min,___awmod@dividend
  7030  00289A  6A02               	clrf	(___awmod@dividend+1)^0,c
  7031  00289C  0E00               	movlw	0
  7032  00289E  6E04               	movwf	(___awmod@divisor+1)^0,c
  7033  0028A0  0E0A               	movlw	10
  7034  0028A2  6E03               	movwf	___awmod@divisor^0,c
  7035  0028A4  EC88  F014         	call	___awmod	;wreg free
  7036  0028A8  C001  F00D         	movff	?___awmod,??_PCF8563_setTime
  7037  0028AC  C002  F00E         	movff	?___awmod+1,??_PCF8563_setTime+1
  7038  0028B0  C00B  F001         	movff	PCF8563_setTime@min,___awdiv@dividend
  7039  0028B4  6A02               	clrf	(___awdiv@dividend+1)^0,c
  7040  0028B6  0E00               	movlw	0
  7041  0028B8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7042  0028BA  0E0A               	movlw	10
  7043  0028BC  6E03               	movwf	___awdiv@divisor^0,c
  7044  0028BE  ECCA  F013         	call	___awdiv	;wreg free
  7045  0028C2  5001               	movf	?___awdiv^0,w,c
  7046  0028C4  0D10               	mullw	16
  7047  0028C6  50F3               	movf	243,w,c
  7048  0028C8  240D               	addwf	??_PCF8563_setTime^0,w,c
  7049  0028CA  6E09               	movwf	i2setI2C@data^0,c
  7050  0028CC  0E03               	movlw	3
  7051  0028CE  EC17  F01A         	call	i2_setI2C
  7052                           
  7053                           ;src/pcf8563.c: 78:     setI2C(0x02, ( ( ((sec)/10) << 4) + ((sec)%10) ));
  7054  0028D2  C00C  F001         	movff	PCF8563_setTime@sec,___awmod@dividend
  7055  0028D6  6A02               	clrf	(___awmod@dividend+1)^0,c
  7056  0028D8  0E00               	movlw	0
  7057  0028DA  6E04               	movwf	(___awmod@divisor+1)^0,c
  7058  0028DC  0E0A               	movlw	10
  7059  0028DE  6E03               	movwf	___awmod@divisor^0,c
  7060  0028E0  EC88  F014         	call	___awmod	;wreg free
  7061  0028E4  C001  F00D         	movff	?___awmod,??_PCF8563_setTime
  7062  0028E8  C002  F00E         	movff	?___awmod+1,??_PCF8563_setTime+1
  7063  0028EC  C00C  F001         	movff	PCF8563_setTime@sec,___awdiv@dividend
  7064  0028F0  6A02               	clrf	(___awdiv@dividend+1)^0,c
  7065  0028F2  0E00               	movlw	0
  7066  0028F4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7067  0028F6  0E0A               	movlw	10
  7068  0028F8  6E03               	movwf	___awdiv@divisor^0,c
  7069  0028FA  ECCA  F013         	call	___awdiv	;wreg free
  7070  0028FE  5001               	movf	?___awdiv^0,w,c
  7071  002900  0D10               	mullw	16
  7072  002902  50F3               	movf	243,w,c
  7073  002904  240D               	addwf	??_PCF8563_setTime^0,w,c
  7074  002906  6E09               	movwf	i2setI2C@data^0,c
  7075  002908  0E02               	movlw	2
  7076  00290A  EC17  F01A         	call	i2_setI2C
  7077  00290E  0012               	return		;funcret
  7078  002910                     __end_of_PCF8563_setTime:
  7079                           	callstack 0
  7080                           
  7081 ;; *************** function _printDate *****************
  7082 ;; Defined at:
  7083 ;;		line 26 in file "src/main.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;		None
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;		None
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  1    wreg      void 
  7090 ;; Registers used:
  7091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7097 ;;      Params:         0       0       0       0       0       0       0
  7098 ;;      Locals:         0       0       0       0       0       0       0
  7099 ;;      Temps:          2       0       0       0       0       0       0
  7100 ;;      Totals:         2       0       0       0       0       0       0
  7101 ;;Total ram usage:        2 bytes
  7102 ;; Hardware stack levels used: 1
  7103 ;; Hardware stack levels required when called: 8
  7104 ;; This function calls:
  7105 ;;		_PCF8563_setDate
  7106 ;;		_lcd1602_noBlink
  7107 ;;		i2_lcd1602_home
  7108 ;;		i2_lcd1602_print
  7109 ;;		i2_sprintf
  7110 ;; This function is called by:
  7111 ;;		_myISR
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text46
  7116  002AF2                     __ptext46:
  7117                           	callstack 0
  7118  002AF2                     _printDate:
  7119                           	callstack 12
  7120  002AF2                     
  7121                           ;src/main.c: 27:     PCF8563_setDate(year, month, day);
  7122  002AF2  C07B  F00D         	movff	_year,PCF8563_setDate@year
  7123  002AF6  C07C  F00E         	movff	_year+1,PCF8563_setDate@year+1
  7124  002AFA  C079  F00F         	movff	_month,PCF8563_setDate@mon
  7125  002AFE  C077  F010         	movff	_day,PCF8563_setDate@day
  7126  002B02  EC32  F011         	call	_PCF8563_setDate	;wreg free
  7127  002B06                     
  7128                           ;src/main.c: 28:     sprintf(temp, "%04d-%02d-%02d ", year, month, day);
  7129  002B06  0E25               	movlw	low _temp
  7130  002B08  6E5F               	movwf	i2sprintf@s^0,c
  7131  002B0A  0E01               	movlw	high _temp
  7132  002B0C  6E60               	movwf	(i2sprintf@s+1)^0,c
  7133  002B0E  0E1B               	movlw	low STR_1
  7134  002B10  6E61               	movwf	i2sprintf@fmt^0,c
  7135  002B12  0E06               	movlw	high STR_1
  7136  002B14  6E62               	movwf	(i2sprintf@fmt+1)^0,c
  7137  002B16  C07B  F063         	movff	_year,?i2_sprintf+4
  7138  002B1A  C07C  F064         	movff	_year+1,?i2_sprintf+5
  7139  002B1E  C079  F065         	movff	_month,?i2_sprintf+6
  7140  002B22  C07A  F066         	movff	_month+1,?i2_sprintf+7
  7141  002B26  C077  F067         	movff	_day,?i2_sprintf+8
  7142  002B2A  C078  F068         	movff	_day+1,?i2_sprintf+9
  7143  002B2E  ECC2  F017         	call	i2_sprintf	;wreg free
  7144  002B32                     
  7145                           ;src/main.c: 29:     lcd1602_noBlink();
  7146  002B32  EC89  F01A         	call	_lcd1602_noBlink	;wreg free
  7147  002B36                     
  7148                           ;src/main.c: 30:     lcd1602_home();
  7149  002B36  ECB3  F01A         	call	i2_lcd1602_home	;wreg free
  7150  002B3A                     
  7151                           ;src/main.c: 31:     lcd1602_print(temp, 10);
  7152  002B3A  0E25               	movlw	low _temp
  7153  002B3C  6E02               	movwf	i2lcd1602_print@str^0,c
  7154  002B3E  0E01               	movlw	high _temp
  7155  002B40  6E03               	movwf	(i2lcd1602_print@str+1)^0,c
  7156  002B42  0E00               	movlw	0
  7157  002B44  6E05               	movwf	(i2lcd1602_print@length+1)^0,c
  7158  002B46  0E0A               	movlw	10
  7159  002B48  6E04               	movwf	i2lcd1602_print@length^0,c
  7160  002B4A  EC73  F018         	call	i2_lcd1602_print	;wreg free
  7161  002B4E                     
  7162                           ;src/main.c: 32:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  7163  002B4E  0E02               	movlw	2
  7164  002B50  6E72               	movwf	(??_printDate+1)^0,c
  7165  002B52  0E45               	movlw	69
  7166  002B54  6E71               	movwf	??_printDate^0,c
  7167  002B56  0EAA               	movlw	170
  7168  002B58                     i2u396_47:
  7169  002B58  2EE8               	decfsz	wreg,f,c
  7170  002B5A  D7FE               	bra	i2u396_47
  7171  002B5C  2E71               	decfsz	??_printDate^0,f,c
  7172  002B5E  D7FC               	bra	i2u396_47
  7173  002B60  2E72               	decfsz	(??_printDate+1)^0,f,c
  7174  002B62  D7FA               	bra	i2u396_47
  7175  002B64  0012               	return		;funcret
  7176  002B66                     __end_of_printDate:
  7177                           	callstack 0
  7178                           
  7179 ;; *************** function i2_sprintf *****************
  7180 ;; Defined at:
  7181 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  s               2   94[COMRAM] PTR unsigned char 
  7184 ;;		 -> temp(16), 
  7185 ;;  fmt             2   96[COMRAM] PTR const unsigned char 
  7186 ;;		 -> STR_4(15), STR_3(15), STR_2(15), STR_1(16), 
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;  f               6  106[COMRAM] struct _IO_FILE
  7189 ;;  ap              2  104[COMRAM] PTR void [1]
  7190 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  7191 ;;  ret             2    0        int 
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  2   94[COMRAM] int 
  7194 ;; Registers used:
  7195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7201 ;;      Params:        10       0       0       0       0       0       0
  7202 ;;      Locals:         8       0       0       0       0       0       0
  7203 ;;      Temps:          0       0       0       0       0       0       0
  7204 ;;      Totals:        18       0       0       0       0       0       0
  7205 ;;Total ram usage:       18 bytes
  7206 ;; Hardware stack levels used: 1
  7207 ;; Hardware stack levels required when called: 7
  7208 ;; This function calls:
  7209 ;;		i2_vfprintf
  7210 ;; This function is called by:
  7211 ;;		_printDate
  7212 ;;		_printTime
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text47
  7217  002F84                     __ptext47:
  7218                           	callstack 0
  7219  002F84                     i2_sprintf:
  7220                           	callstack 12
  7221  002F84  0E63               	movlw	low (?i2_sprintf+4)
  7222  002F86  6E69               	movwf	i2sprintf@ap^0,c
  7223  002F88  0E00               	movlw	high (?i2_sprintf+4)
  7224  002F8A  6E6A               	movwf	(i2sprintf@ap+1)^0,c
  7225  002F8C  C05F  F06B         	movff	i2sprintf@s,i2sprintf@f
  7226  002F90  C060  F06C         	movff	i2sprintf@s+1,i2sprintf@f+1
  7227  002F94  0E00               	movlw	0
  7228  002F96  6E6E               	movwf	(i2sprintf@f+3)^0,c
  7229  002F98  0E00               	movlw	0
  7230  002F9A  6E6D               	movwf	(i2sprintf@f+2)^0,c
  7231  002F9C  0E00               	movlw	0
  7232  002F9E  6E70               	movwf	(i2sprintf@f+5)^0,c
  7233  002FA0  0E00               	movlw	0
  7234  002FA2  6E6F               	movwf	(i2sprintf@f+4)^0,c
  7235  002FA4  0E6B               	movlw	low i2sprintf@f
  7236  002FA6  6E57               	movwf	i2vfprintf@fp^0,c
  7237  002FA8  0E00               	movlw	high i2sprintf@f
  7238  002FAA  6E58               	movwf	(i2vfprintf@fp+1)^0,c
  7239  002FAC  C061  F059         	movff	i2sprintf@fmt,i2vfprintf@fmt
  7240  002FB0  C062  F05A         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  7241  002FB4  0E69               	movlw	low i2sprintf@ap
  7242  002FB6  6E5B               	movwf	i2vfprintf@ap^0,c
  7243  002FB8  0E00               	movlw	high i2sprintf@ap
  7244  002FBA  6E5C               	movwf	(i2vfprintf@ap+1)^0,c
  7245  002FBC  EC8C  F016         	call	i2_vfprintf	;wreg free
  7246  002FC0  506D               	movf	(i2sprintf@f+2)^0,w,c
  7247  002FC2  245F               	addwf	i2sprintf@s^0,w,c
  7248  002FC4  6ED9               	movwf	fsr2l,c
  7249  002FC6  506E               	movf	(i2sprintf@f+3)^0,w,c
  7250  002FC8  2060               	addwfc	(i2sprintf@s+1)^0,w,c
  7251  002FCA  6EDA               	movwf	fsr2h,c
  7252  002FCC  0E00               	movlw	0
  7253  002FCE  6EDF               	movwf	indf2,c
  7254  002FD0  0012               	return		;funcret
  7255  002FD2                     __end_ofi2_sprintf:
  7256                           	callstack 0
  7257                           
  7258 ;; *************** function i2_vfprintf *****************
  7259 ;; Defined at:
  7260 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  fp              2   86[COMRAM] PTR struct _IO_FILE
  7263 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7264 ;;  fmt             2   88[COMRAM] PTR const unsigned char 
  7265 ;;		 -> STR_4(15), STR_3(15), STR_2(15), STR_1(16), 
  7266 ;;  ap              2   90[COMRAM] PTR PTR void 
  7267 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  7270 ;;		 -> STR_4(15), STR_3(15), STR_2(15), STR_1(16), 
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  2   86[COMRAM] int 
  7273 ;; Registers used:
  7274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7280 ;;      Params:         6       0       0       0       0       0       0
  7281 ;;      Locals:         2       0       0       0       0       0       0
  7282 ;;      Temps:          0       0       0       0       0       0       0
  7283 ;;      Totals:         8       0       0       0       0       0       0
  7284 ;;Total ram usage:        8 bytes
  7285 ;; Hardware stack levels used: 1
  7286 ;; Hardware stack levels required when called: 6
  7287 ;; This function calls:
  7288 ;;		i2_vfpfcnvrt
  7289 ;; This function is called by:
  7290 ;;		i2_sprintf
  7291 ;; This function uses a non-reentrant model
  7292 ;;
  7293                           
  7294                           	psect	text48
  7295  002D18                     __ptext48:
  7296                           	callstack 0
  7297  002D18                     i2_vfprintf:
  7298                           	callstack 12
  7299  002D18                     
  7300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7301  002D18  C059  F05D         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  7302  002D1C  C05A  F05E         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  7303  002D20                     
  7304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7305  002D20  0E00               	movlw	0
  7306  002D22  0101               	movlb	1	; () banked
  7307  002D24  6F01               	movwf	(_nout+1)& (0+255),b
  7308  002D26  0E00               	movlw	0
  7309  002D28  6F00               	movwf	_nout& (0+255),b
  7310                           
  7311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7312  002D2A  EFAA  F016         	goto	i2l3477
  7313  002D2E                     i2l3475:
  7314                           
  7315                           ; BSR set to: 1
  7316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7317  002D2E  C057  F041         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  7318  002D32  C058  F042         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  7319  002D36  0E5D               	movlw	low i2vfprintf@cfmt
  7320  002D38  6E43               	movwf	i2vfpfcnvrt@fmt^0,c
  7321  002D3A  0E00               	movlw	high i2vfprintf@cfmt
  7322  002D3C  6E44               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  7323  002D3E  C05B  F045         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  7324  002D42  C05C  F046         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  7325  002D46  EC05  F005         	call	i2_vfpfcnvrt	;wreg free
  7326  002D4A  5041               	movf	?i2_vfpfcnvrt^0,w,c
  7327  002D4C  0101               	movlb	1	; () banked
  7328  002D4E  2700               	addwf	_nout& (0+255),f,b
  7329  002D50  5042               	movf	(?i2_vfpfcnvrt+1)^0,w,c
  7330  002D52  2301               	addwfc	(_nout+1)& (0+255),f,b
  7331  002D54                     i2l3477:
  7332                           
  7333                           ; BSR set to: 1
  7334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7335  002D54  C05D  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  7336  002D58  C05E  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  7337  002D5C                     	if	0	;tblptru may be non-zero
  7338  002D5C                     	endif
  7339  002D5C                     	if	0	;tblptru may be non-zero
  7340  002D5C                     	endif
  7341  002D5C  0008               	tblrd		*
  7342  002D5E  50F5               	movf	tablat,w,c
  7343  002D60  0900               	iorlw	0
  7344  002D62  A4D8               	btfss	status,2,c
  7345  002D64  EFB6  F016         	goto	i2u329_41
  7346  002D68  EFB8  F016         	goto	i2u329_40
  7347  002D6C                     i2u329_41:
  7348  002D6C  EF97  F016         	goto	i2l3475
  7349  002D70                     i2u329_40:
  7350  002D70                     
  7351                           ; BSR set to: 1
  7352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7353  002D70  C100  F057         	movff	_nout,?i2_vfprintf
  7354  002D74  C101  F058         	movff	_nout+1,?i2_vfprintf+1
  7355  002D78                     
  7356                           ; BSR set to: 1
  7357  002D78  0012               	return		;funcret
  7358  002D7A                     __end_ofi2_vfprintf:
  7359                           	callstack 0
  7360                           
  7361 ;; *************** function i2_vfpfcnvrt *****************
  7362 ;; Defined at:
  7363 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  7366 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7367 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  7368 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  7369 ;;  ap              2   68[COMRAM] PTR PTR void 
  7370 ;;		 -> i2sprintf@ap(2), sprintf@ap(2), 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;  ll              8   74[COMRAM] long long 
  7373 ;;  llu             8    0        unsigned long long 
  7374 ;;  f               4    0        unsigned long long 
  7375 ;;  vp              3    0        PTR void 
  7376 ;;  ct              3    0        unsigned char [3]
  7377 ;;  cp              3    0        PTR unsigned char 
  7378 ;;  done            2   82[COMRAM] int 
  7379 ;;  i               2    0        int 
  7380 ;;  c               1    0        unsigned char 
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  2   64[COMRAM] int 
  7383 ;; Registers used:
  7384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7390 ;;      Params:         6       0       0       0       0       0       0
  7391 ;;      Locals:        12       0       0       0       0       0       0
  7392 ;;      Temps:          4       0       0       0       0       0       0
  7393 ;;      Totals:        22       0       0       0       0       0       0
  7394 ;;Total ram usage:       22 bytes
  7395 ;; Hardware stack levels used: 1
  7396 ;; Hardware stack levels required when called: 5
  7397 ;; This function calls:
  7398 ;;		i2_atoi
  7399 ;;		i2_dtoa
  7400 ;;		i2_fputc
  7401 ;;		i2_isdigit
  7402 ;; This function is called by:
  7403 ;;		i2_vfprintf
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           	psect	text49
  7408  000A0A                     __ptext49:
  7409                           	callstack 0
  7410  000A0A                     i2_vfpfcnvrt:
  7411                           	callstack 12
  7412  000A0A                     
  7413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7414  000A0A  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7415  000A0E  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7416  000A12  CFDE FFF6          	movff	postinc2,tblptrl
  7417  000A16  CFDD FFF7          	movff	postdec2,tblptrh
  7418  000A1A                     	if	0	;tblptru may be non-zero
  7419  000A1A                     	endif
  7420  000A1A                     	if	0	;tblptru may be non-zero
  7421  000A1A                     	endif
  7422  000A1A  0008               	tblrd		*
  7423  000A1C  50F5               	movf	tablat,w,c
  7424  000A1E  0A25               	xorlw	37
  7425  000A20  A4D8               	btfss	status,2,c
  7426  000A22  EF15  F005         	goto	i2u275_41
  7427  000A26  EF17  F005         	goto	i2u275_40
  7428  000A2A                     i2u275_41:
  7429  000A2A  EFA4  F006         	goto	i2l3217
  7430  000A2E                     i2u275_40:
  7431  000A2E                     
  7432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7433  000A2E  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7434  000A32  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7435  000A36  2ADE               	incf	postinc2,f,c
  7436  000A38  0E00               	movlw	0
  7437  000A3A  22DD               	addwfc	postdec2,f,c
  7438  000A3C                     
  7439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7440  000A3C  0E00               	movlw	0
  7441  000A3E  0100               	movlb	0	; () banked
  7442  000A40  6FEB               	movwf	(_width+1)& (0+255),b
  7443  000A42  0E00               	movlw	0
  7444  000A44  6FEA               	movwf	_width& (0+255),b
  7445  000A46  C0EA  F0EE         	movff	_width,_flags
  7446  000A4A  C0EB  F0EF         	movff	_width+1,_flags+1
  7447  000A4E                     
  7448                           ; BSR set to: 0
  7449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7450  000A4E  69EC               	setf	_prec& (0+255),b
  7451  000A50  69ED               	setf	(_prec+1)& (0+255),b
  7452  000A52                     
  7453                           ; BSR set to: 0
  7454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  7455  000A52  0E00               	movlw	0
  7456  000A54  6E54               	movwf	(i2vfpfcnvrt@done+1)^0,c
  7457  000A56  0E00               	movlw	0
  7458  000A58  6E53               	movwf	i2vfpfcnvrt@done^0,c
  7459                           
  7460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7461  000A5A  EF7A  F005         	goto	i2l3169
  7462  000A5E                     i2l3143:
  7463                           
  7464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  7465  000A5E  0100               	movlb	0	; () banked
  7466  000A60  81EE               	bsf	_flags& (0+255),0,b
  7467  000A62                     i2l3145:
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  7471  000A62  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7472  000A66  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7473  000A6A  2ADE               	incf	postinc2,f,c
  7474  000A6C  0E00               	movlw	0
  7475  000A6E  22DD               	addwfc	postdec2,f,c
  7476                           
  7477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  7478  000A70  EF7A  F005         	goto	i2l3169
  7479  000A74                     i2l3147:
  7480                           
  7481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  7482  000A74  0100               	movlb	0	; () banked
  7483  000A76  83EE               	bsf	_flags& (0+255),1,b
  7484  000A78  EF31  F005         	goto	i2l3145
  7485  000A7C                     i2l3151:
  7486                           
  7487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  7488  000A7C  0100               	movlb	0	; () banked
  7489  000A7E  85EE               	bsf	_flags& (0+255),2,b
  7490  000A80  EF31  F005         	goto	i2l3145
  7491  000A84                     i2l3155:
  7492                           
  7493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  7494  000A84  0100               	movlb	0	; () banked
  7495  000A86  87EE               	bsf	_flags& (0+255),3,b
  7496  000A88  EF31  F005         	goto	i2l3145
  7497  000A8C                     i2l3159:
  7498                           
  7499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  7500  000A8C  0100               	movlb	0	; () banked
  7501  000A8E  89EE               	bsf	_flags& (0+255),4,b
  7502  000A90  EF31  F005         	goto	i2l3145
  7503  000A94                     i2l3163:
  7504                           
  7505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  7506  000A94  0E00               	movlw	0
  7507  000A96  6E54               	movwf	(i2vfpfcnvrt@done+1)^0,c
  7508  000A98  0E01               	movlw	1
  7509  000A9A  6E53               	movwf	i2vfpfcnvrt@done^0,c
  7510                           
  7511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  7512  000A9C  EF7A  F005         	goto	i2l3169
  7513  000AA0                     i2l3167:
  7514  000AA0  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7515  000AA4  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7516  000AA8  CFDE FFF6          	movff	postinc2,tblptrl
  7517  000AAC  CFDD FFF7          	movff	postdec2,tblptrh
  7518  000AB0                     	if	0	;tblptru may be non-zero
  7519  000AB0                     	endif
  7520  000AB0                     	if	0	;tblptru may be non-zero
  7521  000AB0                     	endif
  7522  000AB0  0008               	tblrd		*
  7523  000AB2  50F5               	movf	tablat,w,c
  7524  000AB4  6E47               	movwf	??i2_vfpfcnvrt^0,c
  7525  000AB6  6A48               	clrf	(??i2_vfpfcnvrt+1)^0,c
  7526                           
  7527                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7528                           ; Switch size 1, requested type "simple"
  7529                           ; Number of cases is 1, Range of values is 0 to 0
  7530                           ; switch strategies available:
  7531                           ; Name         Instructions Cycles
  7532                           ; simple_byte            4     3 (average)
  7533                           ;	Chosen strategy is simple_byte
  7534  000AB8  5048               	movf	(??i2_vfpfcnvrt+1)^0,w,c
  7535  000ABA  0A00               	xorlw	0	; case 0
  7536  000ABC  B4D8               	btfsc	status,2,c
  7537  000ABE  EF63  F005         	goto	i2l4307
  7538  000AC2  EF4A  F005         	goto	i2l3163
  7539  000AC6                     i2l4307:
  7540                           
  7541                           ; Switch size 1, requested type "simple"
  7542                           ; Number of cases is 5, Range of values is 32 to 48
  7543                           ; switch strategies available:
  7544                           ; Name         Instructions Cycles
  7545                           ; simple_byte           16     9 (average)
  7546                           ;	Chosen strategy is simple_byte
  7547  000AC6  5047               	movf	??i2_vfpfcnvrt^0,w,c
  7548  000AC8  0A20               	xorlw	32	; case 32
  7549  000ACA  B4D8               	btfsc	status,2,c
  7550  000ACC  EF42  F005         	goto	i2l3155
  7551  000AD0  0A03               	xorlw	3	; case 35
  7552  000AD2  B4D8               	btfsc	status,2,c
  7553  000AD4  EF46  F005         	goto	i2l3159
  7554  000AD8  0A08               	xorlw	8	; case 43
  7555  000ADA  B4D8               	btfsc	status,2,c
  7556  000ADC  EF3E  F005         	goto	i2l3151
  7557  000AE0  0A06               	xorlw	6	; case 45
  7558  000AE2  B4D8               	btfsc	status,2,c
  7559  000AE4  EF2F  F005         	goto	i2l3143
  7560  000AE8  0A1D               	xorlw	29	; case 48
  7561  000AEA  B4D8               	btfsc	status,2,c
  7562  000AEC  EF3A  F005         	goto	i2l3147
  7563  000AF0  EF4A  F005         	goto	i2l3163
  7564  000AF4                     i2l3169:
  7565                           
  7566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7567  000AF4  5053               	movf	i2vfpfcnvrt@done^0,w,c
  7568  000AF6  1054               	iorwf	(i2vfpfcnvrt@done+1)^0,w,c
  7569  000AF8  B4D8               	btfsc	status,2,c
  7570  000AFA  EF81  F005         	goto	i2u276_41
  7571  000AFE  EF83  F005         	goto	i2u276_40
  7572  000B02                     i2u276_41:
  7573  000B02  EF50  F005         	goto	i2l3167
  7574  000B06                     i2u276_40:
  7575  000B06                     
  7576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  7577  000B06  0100               	movlb	0	; () banked
  7578  000B08  A1EE               	btfss	_flags& (0+255),0,b
  7579  000B0A  EF89  F005         	goto	i2u277_41
  7580  000B0E  EF8B  F005         	goto	i2u277_40
  7581  000B12                     i2u277_41:
  7582  000B12  EF8C  F005         	goto	i2l3173
  7583  000B16                     i2u277_40:
  7584  000B16                     
  7585                           ; BSR set to: 0
  7586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  7587  000B16  93EE               	bcf	_flags& (0+255),1,b
  7588  000B18                     i2l3173:
  7589                           
  7590                           ; BSR set to: 0
  7591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  7592  000B18  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7593  000B1C  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7594  000B20  CFDE FFF6          	movff	postinc2,tblptrl
  7595  000B24  CFDD FFF7          	movff	postdec2,tblptrh
  7596  000B28                     	if	0	;tblptru may be non-zero
  7597  000B28                     	endif
  7598  000B28                     	if	0	;tblptru may be non-zero
  7599  000B28                     	endif
  7600  000B28  0008               	tblrd		*
  7601  000B2A  50F5               	movf	tablat,w,c
  7602  000B2C  0A2A               	xorlw	42
  7603  000B2E  A4D8               	btfss	status,2,c
  7604  000B30  EF9C  F005         	goto	i2u278_41
  7605  000B34  EF9E  F005         	goto	i2u278_40
  7606  000B38                     i2u278_41:
  7607  000B38  EFC7  F005         	goto	i2l3181
  7608  000B3C                     i2u278_40:
  7609  000B3C                     
  7610                           ; BSR set to: 0
  7611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  7612  000B3C  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7613  000B40  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7614  000B44  2ADE               	incf	postinc2,f,c
  7615  000B46  0E00               	movlw	0
  7616  000B48  22DD               	addwfc	postdec2,f,c
  7617                           
  7618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7619  000B4A  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  7620  000B4E  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  7621  000B52  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
  7622  000B56  0E02               	movlw	2
  7623  000B58  26DE               	addwf	postinc2,f,c
  7624  000B5A  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
  7625  000B5E  0E00               	movlw	0
  7626  000B60  22DD               	addwfc	postdec2,f,c
  7627  000B62  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  7628  000B66  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  7629  000B6A  CFDE F0EA          	movff	postinc2,_width
  7630  000B6E  CFDD F0EB          	movff	postdec2,_width+1
  7631  000B72                     
  7632                           ; BSR set to: 0
  7633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  7634  000B72  BFEB               	btfsc	(_width+1)& (0+255),7,b
  7635  000B74  EFC0  F005         	goto	i2u279_40
  7636  000B78  EFBE  F005         	goto	i2u279_41
  7637  000B7C                     i2u279_41:
  7638  000B7C  EF0A  F006         	goto	i2l3191
  7639  000B80                     i2u279_40:
  7640  000B80                     
  7641                           ; BSR set to: 0
  7642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  7643  000B80  81EE               	bsf	_flags& (0+255),0,b
  7644                           
  7645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  7646  000B82  6DEA               	negf	_width& (0+255),b
  7647  000B84  1FEB               	comf	(_width+1)& (0+255),f,b
  7648  000B86  B0D8               	btfsc	status,0,c
  7649  000B88  2BEB               	incf	(_width+1)& (0+255),f,b
  7650  000B8A  EF0A  F006         	goto	i2l3191
  7651  000B8E                     i2l3181:
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  7655  000B8E  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7656  000B92  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7657  000B96  CFDE F008          	movff	postinc2,i2atoi@s
  7658  000B9A  CFDD F009          	movff	postdec2,i2atoi@s+1
  7659  000B9E  EC26  F00C         	call	i2_atoi	;wreg free
  7660  000BA2  C008  F0EA         	movff	?i2_atoi,_width
  7661  000BA6  C009  F0EB         	movff	?i2_atoi+1,_width+1
  7662                           
  7663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7664  000BAA  EFDE  F005         	goto	i2l3185
  7665  000BAE                     i2l3183:
  7666                           
  7667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  7668  000BAE  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7669  000BB2  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7670  000BB6  2ADE               	incf	postinc2,f,c
  7671  000BB8  0E00               	movlw	0
  7672  000BBA  22DD               	addwfc	postdec2,f,c
  7673  000BBC                     i2l3185:
  7674  000BBC  0ED0               	movlw	208
  7675  000BBE  6E47               	movwf	??i2_vfpfcnvrt^0,c
  7676  000BC0  0EFF               	movlw	255
  7677  000BC2  6E48               	movwf	(??i2_vfpfcnvrt+1)^0,c
  7678  000BC4  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7679  000BC8  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7680  000BCC  CFDE FFF6          	movff	postinc2,tblptrl
  7681  000BD0  CFDD FFF7          	movff	postdec2,tblptrh
  7682  000BD4                     	if	0	;tblptru may be non-zero
  7683  000BD4                     	endif
  7684  000BD4                     	if	0	;tblptru may be non-zero
  7685  000BD4                     	endif
  7686  000BD4  0008               	tblrd		*
  7687  000BD6  50F5               	movf	tablat,w,c
  7688  000BD8  6E49               	movwf	(??i2_vfpfcnvrt+2)^0,c
  7689  000BDA  6A4A               	clrf	(??i2_vfpfcnvrt+3)^0,c
  7690  000BDC  5047               	movf	??i2_vfpfcnvrt^0,w,c
  7691  000BDE  2649               	addwf	(??i2_vfpfcnvrt+2)^0,f,c
  7692  000BE0  5048               	movf	(??i2_vfpfcnvrt+1)^0,w,c
  7693  000BE2  224A               	addwfc	(??i2_vfpfcnvrt+3)^0,f,c
  7694  000BE4  504A               	movf	(??i2_vfpfcnvrt+3)^0,w,c
  7695  000BE6  E10A               	bnz	i2u280_40
  7696  000BE8  0E0A               	movlw	10
  7697  000BEA  5C49               	subwf	(??i2_vfpfcnvrt+2)^0,w,c
  7698  000BEC  A0D8               	btfss	status,0,c
  7699  000BEE  EFFB  F005         	goto	i2u280_41
  7700  000BF2  EFFE  F005         	goto	i2u280_40
  7701  000BF6                     i2u280_41:
  7702  000BF6  0E01               	movlw	1
  7703  000BF8  EFFF  F005         	goto	i2u281_40
  7704  000BFC                     i2u280_40:
  7705  000BFC  0E00               	movlw	0
  7706  000BFE                     i2u281_40:
  7707  000BFE  6E55               	movwf	i2_vfpfcnvrt$960^0,c
  7708  000C00  6A56               	clrf	(i2_vfpfcnvrt$960+1)^0,c
  7709  000C02  5055               	movf	i2_vfpfcnvrt$960^0,w,c
  7710  000C04  1056               	iorwf	(i2_vfpfcnvrt$960+1)^0,w,c
  7711  000C06  A4D8               	btfss	status,2,c
  7712  000C08  EF08  F006         	goto	i2u282_41
  7713  000C0C  EF0A  F006         	goto	i2u282_40
  7714  000C10                     i2u282_41:
  7715  000C10  EFD7  F005         	goto	i2l3183
  7716  000C14                     i2u282_40:
  7717  000C14                     i2l3191:
  7718                           
  7719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7720  000C14  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7721  000C18  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7722  000C1C  CFDE FFF6          	movff	postinc2,tblptrl
  7723  000C20  CFDD FFF7          	movff	postdec2,tblptrh
  7724  000C24                     	if	0	;tblptru may be non-zero
  7725  000C24                     	endif
  7726  000C24                     	if	0	;tblptru may be non-zero
  7727  000C24                     	endif
  7728  000C24  0008               	tblrd		*
  7729  000C26  50F5               	movf	tablat,w,c
  7730  000C28  0A64               	xorlw	100
  7731  000C2A  B4D8               	btfsc	status,2,c
  7732  000C2C  EF1A  F006         	goto	i2u283_41
  7733  000C30  EF1C  F006         	goto	i2u283_40
  7734  000C34                     i2u283_41:
  7735  000C34  EF2E  F006         	goto	i2l3195
  7736  000C38                     i2u283_40:
  7737  000C38  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7738  000C3C  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7739  000C40  CFDE FFF6          	movff	postinc2,tblptrl
  7740  000C44  CFDD FFF7          	movff	postdec2,tblptrh
  7741  000C48                     	if	0	;tblptru may be non-zero
  7742  000C48                     	endif
  7743  000C48                     	if	0	;tblptru may be non-zero
  7744  000C48                     	endif
  7745  000C48  0008               	tblrd		*
  7746  000C4A  50F5               	movf	tablat,w,c
  7747  000C4C  0A69               	xorlw	105
  7748  000C4E  A4D8               	btfss	status,2,c
  7749  000C50  EF2C  F006         	goto	i2u284_41
  7750  000C54  EF2E  F006         	goto	i2u284_40
  7751  000C58                     i2u284_41:
  7752  000C58  EF6E  F006         	goto	i2l3201
  7753  000C5C                     i2u284_40:
  7754  000C5C                     i2l3195:
  7755                           
  7756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7757  000C5C  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7758  000C60  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7759  000C64  2ADE               	incf	postinc2,f,c
  7760  000C66  0E00               	movlw	0
  7761  000C68  22DD               	addwfc	postdec2,f,c
  7762                           
  7763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7764  000C6A  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  7765  000C6E  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  7766  000C72  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
  7767  000C76  0E02               	movlw	2
  7768  000C78  26DE               	addwf	postinc2,f,c
  7769  000C7A  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
  7770  000C7E  0E00               	movlw	0
  7771  000C80  22DD               	addwfc	postdec2,f,c
  7772  000C82  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  7773  000C86  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  7774  000C8A  CFDE F04B          	movff	postinc2,i2vfpfcnvrt@ll
  7775  000C8E  CFDD F04C          	movff	postdec2,i2vfpfcnvrt@ll+1
  7776  000C92  0E00               	movlw	0
  7777  000C94  BE4C               	btfsc	(i2vfpfcnvrt@ll+1)^0,7,c
  7778  000C96  0EFF               	movlw	-1
  7779  000C98  6E4D               	movwf	(i2vfpfcnvrt@ll+2)^0,c
  7780  000C9A  6E4E               	movwf	(i2vfpfcnvrt@ll+3)^0,c
  7781  000C9C  6E4F               	movwf	(i2vfpfcnvrt@ll+4)^0,c
  7782  000C9E  6E50               	movwf	(i2vfpfcnvrt@ll+5)^0,c
  7783  000CA0  6E51               	movwf	(i2vfpfcnvrt@ll+6)^0,c
  7784  000CA2  6E52               	movwf	(i2vfpfcnvrt@ll+7)^0,c
  7785  000CA4                     
  7786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7787  000CA4  C041  F01D         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  7788  000CA8  C042  F01E         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  7789  000CAC  C04B  F01F         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  7790  000CB0  C04C  F020         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  7791  000CB4  C04D  F021         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  7792  000CB8  C04E  F022         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  7793  000CBC  C04F  F023         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  7794  000CC0  C050  F024         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  7795  000CC4  C051  F025         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  7796  000CC8  C052  F026         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  7797  000CCC  ECEA  F009         	call	i2_dtoa	;wreg free
  7798  000CD0  C01D  F041         	movff	?i2_dtoa,?i2_vfpfcnvrt
  7799  000CD4  C01E  F042         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  7800  000CD8  EFBF  F006         	goto	i2l1114
  7801  000CDC                     i2l3201:
  7802                           
  7803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7804  000CDC  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7805  000CE0  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7806  000CE4  CFDE FFF6          	movff	postinc2,tblptrl
  7807  000CE8  CFDD FFF7          	movff	postdec2,tblptrh
  7808  000CEC                     	if	0	;tblptru may be non-zero
  7809  000CEC                     	endif
  7810  000CEC                     	if	0	;tblptru may be non-zero
  7811  000CEC                     	endif
  7812  000CEC  0008               	tblrd		*
  7813  000CEE  50F5               	movf	tablat,w,c
  7814  000CF0  0A25               	xorlw	37
  7815  000CF2  A4D8               	btfss	status,2,c
  7816  000CF4  EF7E  F006         	goto	i2u285_41
  7817  000CF8  EF80  F006         	goto	i2u285_40
  7818  000CFC                     i2u285_41:
  7819  000CFC  EF97  F006         	goto	i2l3211
  7820  000D00                     i2u285_40:
  7821  000D00                     
  7822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7823  000D00  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7824  000D04  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7825  000D08  2ADE               	incf	postinc2,f,c
  7826  000D0A  0E00               	movlw	0
  7827  000D0C  22DD               	addwfc	postdec2,f,c
  7828  000D0E                     
  7829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7830  000D0E  0E00               	movlw	0
  7831  000D10  6E03               	movwf	(i2fputc@c+1)^0,c
  7832  000D12  0E25               	movlw	37
  7833  000D14  6E02               	movwf	i2fputc@c^0,c
  7834  000D16  C041  F004         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  7835  000D1A  C042  F005         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  7836  000D1E  EC02  F013         	call	i2_fputc	;wreg free
  7837  000D22                     i2l3207:
  7838                           
  7839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7840  000D22  0E00               	movlw	0
  7841  000D24  6E42               	movwf	(?i2_vfpfcnvrt+1)^0,c
  7842  000D26  0E01               	movlw	1
  7843  000D28  6E41               	movwf	?i2_vfpfcnvrt^0,c
  7844  000D2A  EFBF  F006         	goto	i2l1114
  7845  000D2E                     i2l3211:
  7846                           
  7847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7848  000D2E  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7849  000D32  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7850  000D36  2ADE               	incf	postinc2,f,c
  7851  000D38  0E00               	movlw	0
  7852  000D3A  22DD               	addwfc	postdec2,f,c
  7853  000D3C                     
  7854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7855  000D3C  0E00               	movlw	0
  7856  000D3E  6E42               	movwf	(?i2_vfpfcnvrt+1)^0,c
  7857  000D40  0E00               	movlw	0
  7858  000D42  6E41               	movwf	?i2_vfpfcnvrt^0,c
  7859  000D44  EFBF  F006         	goto	i2l1114
  7860  000D48                     i2l3217:
  7861                           
  7862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7863  000D48  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7864  000D4C  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7865  000D50  CFDE FFF6          	movff	postinc2,tblptrl
  7866  000D54  CFDD FFF7          	movff	postdec2,tblptrh
  7867  000D58                     	if	0	;tblptru may be non-zero
  7868  000D58                     	endif
  7869  000D58                     	if	0	;tblptru may be non-zero
  7870  000D58                     	endif
  7871  000D58  0008               	tblrd		*
  7872  000D5A  50F5               	movf	tablat,w,c
  7873  000D5C  6E02               	movwf	i2fputc@c^0,c
  7874  000D5E  6A03               	clrf	(i2fputc@c+1)^0,c
  7875  000D60  C041  F004         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  7876  000D64  C042  F005         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  7877  000D68  EC02  F013         	call	i2_fputc	;wreg free
  7878  000D6C                     
  7879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7880  000D6C  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  7881  000D70  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  7882  000D74  2ADE               	incf	postinc2,f,c
  7883  000D76  0E00               	movlw	0
  7884  000D78  22DD               	addwfc	postdec2,f,c
  7885  000D7A  EF91  F006         	goto	i2l3207
  7886  000D7E                     i2l1114:
  7887  000D7E  0012               	return		;funcret
  7888  000D80                     __end_ofi2_vfpfcnvrt:
  7889                           	callstack 0
  7890                           
  7891 ;; *************** function i2_dtoa *****************
  7892 ;; Defined at:
  7893 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  7896 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  7897 ;;  d               8   30[COMRAM] long long 
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;  n               8   54[COMRAM] long long 
  7900 ;;  i               2   62[COMRAM] int 
  7901 ;;  s               2   52[COMRAM] int 
  7902 ;;  w               2   50[COMRAM] int 
  7903 ;;  p               2   48[COMRAM] int 
  7904 ;; Return value:  Size  Location     Type
  7905 ;;                  2   28[COMRAM] int 
  7906 ;; Registers used:
  7907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7908 ;; Tracked objects:
  7909 ;;		On entry : 0/0
  7910 ;;		On exit  : 0/0
  7911 ;;		Unchanged: 0/0
  7912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7913 ;;      Params:        10       0       0       0       0       0       0
  7914 ;;      Locals:        18       0       0       0       0       0       0
  7915 ;;      Temps:          8       0       0       0       0       0       0
  7916 ;;      Totals:        36       0       0       0       0       0       0
  7917 ;;Total ram usage:       36 bytes
  7918 ;; Hardware stack levels used: 1
  7919 ;; Hardware stack levels required when called: 4
  7920 ;; This function calls:
  7921 ;;		i2___aodiv
  7922 ;;		i2___aomod
  7923 ;;		i2_abs
  7924 ;;		i2_pad
  7925 ;; This function is called by:
  7926 ;;		i2_vfpfcnvrt
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           	psect	text50
  7931  0013D4                     __ptext50:
  7932                           	callstack 0
  7933  0013D4                     i2_dtoa:
  7934                           	callstack 12
  7935  0013D4                     
  7936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7937  0013D4  C01F  F037         	movff	i2dtoa@d,i2dtoa@n
  7938  0013D8  C020  F038         	movff	i2dtoa@d+1,i2dtoa@n+1
  7939  0013DC  C021  F039         	movff	i2dtoa@d+2,i2dtoa@n+2
  7940  0013E0  C022  F03A         	movff	i2dtoa@d+3,i2dtoa@n+3
  7941  0013E4  C023  F03B         	movff	i2dtoa@d+4,i2dtoa@n+4
  7942  0013E8  C024  F03C         	movff	i2dtoa@d+5,i2dtoa@n+5
  7943  0013EC  C025  F03D         	movff	i2dtoa@d+6,i2dtoa@n+6
  7944  0013F0  C026  F03E         	movff	i2dtoa@d+7,i2dtoa@n+7
  7945  0013F4                     
  7946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7947  0013F4  BE3E               	btfsc	(i2dtoa@n+7)^0,7,c
  7948  0013F6  EFFF  F009         	goto	i2u231_41
  7949  0013FA  EF02  F00A         	goto	i2u231_40
  7950  0013FE                     i2u231_41:
  7951  0013FE  0E01               	movlw	1
  7952  001400  EF03  F00A         	goto	i2u232_40
  7953  001404                     i2u231_40:
  7954  001404  0E00               	movlw	0
  7955  001406                     i2u232_40:
  7956  001406  6E35               	movwf	i2dtoa@s^0,c
  7957  001408  6A36               	clrf	(i2dtoa@s+1)^0,c
  7958                           
  7959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7960  00140A  5035               	movf	i2dtoa@s^0,w,c
  7961  00140C  1036               	iorwf	(i2dtoa@s+1)^0,w,c
  7962  00140E  B4D8               	btfsc	status,2,c
  7963  001410  EF0C  F00A         	goto	i2u233_41
  7964  001414  EF0E  F00A         	goto	i2u233_40
  7965  001418                     i2u233_41:
  7966  001418  EF1E  F00A         	goto	i2l2887
  7967  00141C                     i2u233_40:
  7968  00141C                     
  7969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7970  00141C  1E3E               	comf	(i2dtoa@n+7)^0,f,c
  7971  00141E  1E3D               	comf	(i2dtoa@n+6)^0,f,c
  7972  001420  1E3C               	comf	(i2dtoa@n+5)^0,f,c
  7973  001422  1E3B               	comf	(i2dtoa@n+4)^0,f,c
  7974  001424  1E3A               	comf	(i2dtoa@n+3)^0,f,c
  7975  001426  1E39               	comf	(i2dtoa@n+2)^0,f,c
  7976  001428  1E38               	comf	(i2dtoa@n+1)^0,f,c
  7977  00142A  6C37               	negf	i2dtoa@n^0,c
  7978  00142C  0E00               	movlw	0
  7979  00142E  2238               	addwfc	(i2dtoa@n+1)^0,f,c
  7980  001430  2239               	addwfc	(i2dtoa@n+2)^0,f,c
  7981  001432  223A               	addwfc	(i2dtoa@n+3)^0,f,c
  7982  001434  223B               	addwfc	(i2dtoa@n+4)^0,f,c
  7983  001436  223C               	addwfc	(i2dtoa@n+5)^0,f,c
  7984  001438  223D               	addwfc	(i2dtoa@n+6)^0,f,c
  7985  00143A  223E               	addwfc	(i2dtoa@n+7)^0,f,c
  7986  00143C                     i2l2887:
  7987                           
  7988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7989  00143C  0100               	movlb	0	; () banked
  7990  00143E  BFED               	btfsc	(_prec+1)& (0+255),7,b
  7991  001440  EF24  F00A         	goto	i2u234_41
  7992  001444  EF26  F00A         	goto	i2u234_40
  7993  001448                     i2u234_41:
  7994  001448  EF27  F00A         	goto	i2l2891
  7995  00144C                     i2u234_40:
  7996  00144C                     
  7997                           ; BSR set to: 0
  7998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7999  00144C  93EE               	bcf	_flags& (0+255),1,b
  8000  00144E                     i2l2891:
  8001                           
  8002                           ; BSR set to: 0
  8003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8004  00144E  BFED               	btfsc	(_prec+1)& (0+255),7,b
  8005  001450  EF34  F00A         	goto	i2u235_40
  8006  001454  51ED               	movf	(_prec+1)& (0+255),w,b
  8007  001456  E106               	bnz	i2u235_41
  8008  001458  05EC               	decf	_prec& (0+255),w,b
  8009  00145A  B0D8               	btfsc	status,0,c
  8010  00145C  EF32  F00A         	goto	i2u235_41
  8011  001460  EF34  F00A         	goto	i2u235_40
  8012  001464                     i2u235_41:
  8013  001464  EF3A  F00A         	goto	i2l1065
  8014  001468                     i2u235_40:
  8015  001468                     
  8016                           ; BSR set to: 0
  8017  001468  0E00               	movlw	0
  8018  00146A  6E32               	movwf	(i2dtoa@p+1)^0,c
  8019  00146C  0E01               	movlw	1
  8020  00146E  6E31               	movwf	i2dtoa@p^0,c
  8021  001470  EF3E  F00A         	goto	i2l1067
  8022  001474                     i2l1065:
  8023                           
  8024                           ; BSR set to: 0
  8025  001474  C0EC  F031         	movff	_prec,i2dtoa@p
  8026  001478  C0ED  F032         	movff	_prec+1,i2dtoa@p+1
  8027  00147C                     i2l1067:
  8028                           
  8029                           ; BSR set to: 0
  8030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8031  00147C  C0EA  F033         	movff	_width,i2dtoa@w
  8032  001480  C0EB  F034         	movff	_width+1,i2dtoa@w+1
  8033  001484                     
  8034                           ; BSR set to: 0
  8035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8036  001484  5035               	movf	i2dtoa@s^0,w,c
  8037  001486  1036               	iorwf	(i2dtoa@s+1)^0,w,c
  8038  001488  A4D8               	btfss	status,2,c
  8039  00148A  EF49  F00A         	goto	i2u236_41
  8040  00148E  EF4B  F00A         	goto	i2u236_40
  8041  001492                     i2u236_41:
  8042  001492  EF52  F00A         	goto	i2l2899
  8043  001496                     i2u236_40:
  8044  001496                     
  8045                           ; BSR set to: 0
  8046  001496  A5EE               	btfss	_flags& (0+255),2,b
  8047  001498  EF50  F00A         	goto	i2u237_41
  8048  00149C  EF52  F00A         	goto	i2u237_40
  8049  0014A0                     i2u237_41:
  8050  0014A0  EF55  F00A         	goto	i2l2901
  8051  0014A4                     i2u237_40:
  8052  0014A4                     i2l2899:
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  8056  0014A4  0633               	decf	i2dtoa@w^0,f,c
  8057  0014A6  A0D8               	btfss	status,0,c
  8058  0014A8  0634               	decf	(i2dtoa@w+1)^0,f,c
  8059  0014AA                     i2l2901:
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8063  0014AA  0E00               	movlw	0
  8064  0014AC  6E40               	movwf	(i2dtoa@i+1)^0,c
  8065  0014AE  0E1F               	movlw	31
  8066  0014B0  6E3F               	movwf	i2dtoa@i^0,c
  8067  0014B2                     
  8068                           ; BSR set to: 0
  8069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8070  0014B2  0E00               	movlw	0
  8071  0014B4  0101               	movlb	1	; () banked
  8072  0014B6  6F24               	movwf	(_dbuf+31)& (0+255),b
  8073                           
  8074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8075  0014B8  EFDA  F00A         	goto	i2l2915
  8076  0014BC                     i2l2905:
  8077                           
  8078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  8079  0014BC  063F               	decf	i2dtoa@i^0,f,c
  8080  0014BE  A0D8               	btfss	status,0,c
  8081  0014C0  0640               	decf	(i2dtoa@i+1)^0,f,c
  8082  0014C2                     
  8083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8084  0014C2  0E05               	movlw	low _dbuf
  8085  0014C4  243F               	addwf	i2dtoa@i^0,w,c
  8086  0014C6  6ED9               	movwf	fsr2l,c
  8087  0014C8  0E01               	movlw	high _dbuf
  8088  0014CA  2040               	addwfc	(i2dtoa@i+1)^0,w,c
  8089  0014CC  6EDA               	movwf	fsr2h,c
  8090  0014CE  C037  F001         	movff	i2dtoa@n,i2___aomod@dividend
  8091  0014D2  C038  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  8092  0014D6  C039  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  8093  0014DA  C03A  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  8094  0014DE  C03B  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  8095  0014E2  C03C  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  8096  0014E6  C03D  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  8097  0014EA  C03E  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  8098  0014EE  0E0A               	movlw	10
  8099  0014F0  6E09               	movwf	i2___aomod@divisor^0,c
  8100  0014F2  0E00               	movlw	0
  8101  0014F4  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
  8102  0014F6  0E00               	movlw	0
  8103  0014F8  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
  8104  0014FA  0E00               	movlw	0
  8105  0014FC  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
  8106  0014FE  0E00               	movlw	0
  8107  001500  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
  8108  001502  0E00               	movlw	0
  8109  001504  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
  8110  001506  0E00               	movlw	0
  8111  001508  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
  8112  00150A  0E00               	movlw	0
  8113  00150C  6E10               	movwf	(i2___aomod@divisor+7)^0,c
  8114  00150E  ECE4  F00F         	call	i2___aomod	;wreg free
  8115  001512  C001  F027         	movff	?i2___aomod,??i2_dtoa
  8116  001516  C002  F028         	movff	?i2___aomod+1,??i2_dtoa+1
  8117  00151A  C003  F029         	movff	?i2___aomod+2,??i2_dtoa+2
  8118  00151E  C004  F02A         	movff	?i2___aomod+3,??i2_dtoa+3
  8119  001522  C005  F02B         	movff	?i2___aomod+4,??i2_dtoa+4
  8120  001526  C006  F02C         	movff	?i2___aomod+5,??i2_dtoa+5
  8121  00152A  C007  F02D         	movff	?i2___aomod+6,??i2_dtoa+6
  8122  00152E  C008  F02E         	movff	?i2___aomod+7,??i2_dtoa+7
  8123  001532  C027  F013         	movff	??i2_dtoa,i2abs@a
  8124  001536  C029  F014         	movff	??i2_dtoa+2,i2abs@a+1
  8125  00153A  EC94  F018         	call	i2_abs	;wreg free
  8126  00153E  5013               	movf	?i2_abs^0,w,c
  8127  001540  0F30               	addlw	48
  8128  001542  6EDF               	movwf	indf2,c
  8129  001544                     
  8130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  8131  001544  0631               	decf	i2dtoa@p^0,f,c
  8132  001546  A0D8               	btfss	status,0,c
  8133  001548  0632               	decf	(i2dtoa@p+1)^0,f,c
  8134  00154A                     
  8135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  8136  00154A  0633               	decf	i2dtoa@w^0,f,c
  8137  00154C  A0D8               	btfss	status,0,c
  8138  00154E  0634               	decf	(i2dtoa@w+1)^0,f,c
  8139  001550                     
  8140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8141  001550  C037  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  8142  001554  C038  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  8143  001558  C039  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  8144  00155C  C03A  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  8145  001560  C03B  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  8146  001564  C03C  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  8147  001568  C03D  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  8148  00156C  C03E  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  8149  001570  0E0A               	movlw	10
  8150  001572  6E09               	movwf	i2___aodiv@divisor^0,c
  8151  001574  0E00               	movlw	0
  8152  001576  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
  8153  001578  0E00               	movlw	0
  8154  00157A  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
  8155  00157C  0E00               	movlw	0
  8156  00157E  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
  8157  001580  0E00               	movlw	0
  8158  001582  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
  8159  001584  0E00               	movlw	0
  8160  001586  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
  8161  001588  0E00               	movlw	0
  8162  00158A  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
  8163  00158C  0E00               	movlw	0
  8164  00158E  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
  8165  001590  ECB3  F00D         	call	i2___aodiv	;wreg free
  8166  001594  C001  F037         	movff	?i2___aodiv,i2dtoa@n
  8167  001598  C002  F038         	movff	?i2___aodiv+1,i2dtoa@n+1
  8168  00159C  C003  F039         	movff	?i2___aodiv+2,i2dtoa@n+2
  8169  0015A0  C004  F03A         	movff	?i2___aodiv+3,i2dtoa@n+3
  8170  0015A4  C005  F03B         	movff	?i2___aodiv+4,i2dtoa@n+4
  8171  0015A8  C006  F03C         	movff	?i2___aodiv+5,i2dtoa@n+5
  8172  0015AC  C007  F03D         	movff	?i2___aodiv+6,i2dtoa@n+6
  8173  0015B0  C008  F03E         	movff	?i2___aodiv+7,i2dtoa@n+7
  8174  0015B4                     i2l2915:
  8175                           
  8176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8177  0015B4  BE40               	btfsc	(i2dtoa@i+1)^0,7,c
  8178  0015B6  EFE5  F00A         	goto	i2u238_41
  8179  0015BA  5040               	movf	(i2dtoa@i+1)^0,w,c
  8180  0015BC  E108               	bnz	i2u238_40
  8181  0015BE  043F               	decf	i2dtoa@i^0,w,c
  8182  0015C0  A0D8               	btfss	status,0,c
  8183  0015C2  EFE5  F00A         	goto	i2u238_41
  8184  0015C6  EFE7  F00A         	goto	i2u238_40
  8185  0015CA                     i2u238_41:
  8186  0015CA  EF18  F00B         	goto	i2l2925
  8187  0015CE                     i2u238_40:
  8188  0015CE  5037               	movf	i2dtoa@n^0,w,c
  8189  0015D0  1038               	iorwf	(i2dtoa@n+1)^0,w,c
  8190  0015D2  1039               	iorwf	(i2dtoa@n+2)^0,w,c
  8191  0015D4  103A               	iorwf	(i2dtoa@n+3)^0,w,c
  8192  0015D6  103B               	iorwf	(i2dtoa@n+4)^0,w,c
  8193  0015D8  103C               	iorwf	(i2dtoa@n+5)^0,w,c
  8194  0015DA  103D               	iorwf	(i2dtoa@n+6)^0,w,c
  8195  0015DC  103E               	iorwf	(i2dtoa@n+7)^0,w,c
  8196  0015DE  A4D8               	btfss	status,2,c
  8197  0015E0  EFF4  F00A         	goto	i2u239_41
  8198  0015E4  EFF6  F00A         	goto	i2u239_40
  8199  0015E8                     i2u239_41:
  8200  0015E8  EF5E  F00A         	goto	i2l2905
  8201  0015EC                     i2u239_40:
  8202  0015EC  BE32               	btfsc	(i2dtoa@p+1)^0,7,c
  8203  0015EE  EF03  F00B         	goto	i2u240_40
  8204  0015F2  5032               	movf	(i2dtoa@p+1)^0,w,c
  8205  0015F4  E106               	bnz	i2u240_41
  8206  0015F6  0431               	decf	i2dtoa@p^0,w,c
  8207  0015F8  B0D8               	btfsc	status,0,c
  8208  0015FA  EF01  F00B         	goto	i2u240_41
  8209  0015FE  EF03  F00B         	goto	i2u240_40
  8210  001602                     i2u240_41:
  8211  001602  EF5E  F00A         	goto	i2l2905
  8212  001606                     i2u240_40:
  8213  001606  BE34               	btfsc	(i2dtoa@w+1)^0,7,c
  8214  001608  EF0E  F00B         	goto	i2u241_41
  8215  00160C  5034               	movf	(i2dtoa@w+1)^0,w,c
  8216  00160E  E108               	bnz	i2u241_40
  8217  001610  0433               	decf	i2dtoa@w^0,w,c
  8218  001612  A0D8               	btfss	status,0,c
  8219  001614  EF0E  F00B         	goto	i2u241_41
  8220  001618  EF10  F00B         	goto	i2u241_40
  8221  00161C                     i2u241_41:
  8222  00161C  EF18  F00B         	goto	i2l2925
  8223  001620                     i2u241_40:
  8224  001620  0100               	movlb	0	; () banked
  8225  001622  B3EE               	btfsc	_flags& (0+255),1,b
  8226  001624  EF16  F00B         	goto	i2u242_41
  8227  001628  EF18  F00B         	goto	i2u242_40
  8228  00162C                     i2u242_41:
  8229  00162C  EF5E  F00A         	goto	i2l2905
  8230  001630                     i2u242_40:
  8231  001630                     i2l2925:
  8232                           
  8233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8234  001630  5035               	movf	i2dtoa@s^0,w,c
  8235  001632  1036               	iorwf	(i2dtoa@s+1)^0,w,c
  8236  001634  A4D8               	btfss	status,2,c
  8237  001636  EF1F  F00B         	goto	i2u243_41
  8238  00163A  EF21  F00B         	goto	i2u243_40
  8239  00163E                     i2u243_41:
  8240  00163E  EF29  F00B         	goto	i2l2929
  8241  001642                     i2u243_40:
  8242  001642  0100               	movlb	0	; () banked
  8243  001644  A5EE               	btfss	_flags& (0+255),2,b
  8244  001646  EF27  F00B         	goto	i2u244_41
  8245  00164A  EF29  F00B         	goto	i2u244_40
  8246  00164E                     i2u244_41:
  8247  00164E  EF47  F00B         	goto	i2l2939
  8248  001652                     i2u244_40:
  8249  001652                     i2l2929:
  8250                           
  8251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  8252  001652  063F               	decf	i2dtoa@i^0,f,c
  8253  001654  A0D8               	btfss	status,0,c
  8254  001656  0640               	decf	(i2dtoa@i+1)^0,f,c
  8255  001658                     
  8256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8257  001658  5035               	movf	i2dtoa@s^0,w,c
  8258  00165A  1036               	iorwf	(i2dtoa@s+1)^0,w,c
  8259  00165C  A4D8               	btfss	status,2,c
  8260  00165E  EF33  F00B         	goto	i2u245_41
  8261  001662  EF35  F00B         	goto	i2u245_40
  8262  001666                     i2u245_41:
  8263  001666  EF3B  F00B         	goto	i2l2935
  8264  00166A                     i2u245_40:
  8265  00166A  0E00               	movlw	0
  8266  00166C  6E30               	movwf	(i2_dtoa$945+1)^0,c
  8267  00166E  0E2B               	movlw	43
  8268  001670  6E2F               	movwf	i2_dtoa$945^0,c
  8269  001672  EF3F  F00B         	goto	i2l2937
  8270  001676                     i2l2935:
  8271  001676  0E00               	movlw	0
  8272  001678  6E30               	movwf	(i2_dtoa$945+1)^0,c
  8273  00167A  0E2D               	movlw	45
  8274  00167C  6E2F               	movwf	i2_dtoa$945^0,c
  8275  00167E                     i2l2937:
  8276  00167E  0E05               	movlw	low _dbuf
  8277  001680  243F               	addwf	i2dtoa@i^0,w,c
  8278  001682  6ED9               	movwf	fsr2l,c
  8279  001684  0E01               	movlw	high _dbuf
  8280  001686  2040               	addwfc	(i2dtoa@i+1)^0,w,c
  8281  001688  6EDA               	movwf	fsr2h,c
  8282  00168A  C02F  FFDF         	movff	i2_dtoa$945,indf2
  8283  00168E                     i2l2939:
  8284                           
  8285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8286  00168E  C01D  F012         	movff	i2dtoa@fp,i2pad@fp
  8287  001692  C01E  F013         	movff	i2dtoa@fp+1,i2pad@fp+1
  8288  001696  0E05               	movlw	low _dbuf
  8289  001698  243F               	addwf	i2dtoa@i^0,w,c
  8290  00169A  6E14               	movwf	i2pad@buf^0,c
  8291  00169C  0E01               	movlw	high _dbuf
  8292  00169E  2040               	addwfc	(i2dtoa@i+1)^0,w,c
  8293  0016A0  6E15               	movwf	(i2pad@buf+1)^0,c
  8294  0016A2  C033  F016         	movff	i2dtoa@w,i2pad@p
  8295  0016A6  C034  F017         	movff	i2dtoa@w+1,i2pad@p+1
  8296  0016AA  EC67  F013         	call	i2_pad	;wreg free
  8297  0016AE  C012  F01D         	movff	?i2_pad,?i2_dtoa
  8298  0016B2  C013  F01E         	movff	?i2_pad+1,?i2_dtoa+1
  8299  0016B6  0012               	return		;funcret
  8300  0016B8                     __end_ofi2_dtoa:
  8301                           	callstack 0
  8302                           
  8303 ;; *************** function i2_pad *****************
  8304 ;; Defined at:
  8305 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  8308 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  8309 ;;  buf             2   19[COMRAM] PTR unsigned char 
  8310 ;;		 -> dbuf(32), 
  8311 ;;  p               2   21[COMRAM] int 
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;  w               2   26[COMRAM] int 
  8314 ;;  i               2   24[COMRAM] int 
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  2   17[COMRAM] int 
  8317 ;; Registers used:
  8318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8324 ;;      Params:         6       0       0       0       0       0       0
  8325 ;;      Locals:         4       0       0       0       0       0       0
  8326 ;;      Temps:          1       0       0       0       0       0       0
  8327 ;;      Totals:        11       0       0       0       0       0       0
  8328 ;;Total ram usage:       11 bytes
  8329 ;; Hardware stack levels used: 1
  8330 ;; Hardware stack levels required when called: 3
  8331 ;; This function calls:
  8332 ;;		i2_fputc
  8333 ;;		i2_fputs
  8334 ;;		i2_strlen
  8335 ;; This function is called by:
  8336 ;;		i2_dtoa
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           	psect	text51
  8341  0026CE                     __ptext51:
  8342                           	callstack 0
  8343  0026CE                     i2_pad:
  8344                           	callstack 12
  8345  0026CE                     
  8346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8347  0026CE  0100               	movlb	0	; () banked
  8348  0026D0  A1EE               	btfss	_flags& (0+255),0,b
  8349  0026D2  EF6D  F013         	goto	i2u218_41
  8350  0026D6  EF6F  F013         	goto	i2u218_40
  8351  0026DA                     i2u218_41:
  8352  0026DA  EF79  F013         	goto	i2l2821
  8353  0026DE                     i2u218_40:
  8354  0026DE                     
  8355                           ; BSR set to: 0
  8356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8357  0026DE  C014  F00B         	movff	i2pad@buf,i2fputs@s
  8358  0026E2  C015  F00C         	movff	i2pad@buf+1,i2fputs@s+1
  8359  0026E6  C012  F00D         	movff	i2pad@fp,i2fputs@fp
  8360  0026EA  C013  F00E         	movff	i2pad@fp+1,i2fputs@fp+1
  8361  0026EE  EC30  F018         	call	i2_fputs	;wreg free
  8362  0026F2                     i2l2821:
  8363                           
  8364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8365  0026F2  BE17               	btfsc	(i2pad@p+1)^0,7,c
  8366  0026F4  EF7E  F013         	goto	i2u219_41
  8367  0026F8  EF80  F013         	goto	i2u219_40
  8368  0026FC                     i2u219_41:
  8369  0026FC  EF86  F013         	goto	i2l2825
  8370  002700                     i2u219_40:
  8371  002700  C016  F01B         	movff	i2pad@p,i2pad@w
  8372  002704  C017  F01C         	movff	i2pad@p+1,i2pad@w+1
  8373  002708  EF8A  F013         	goto	i2l1054
  8374  00270C                     i2l2825:
  8375  00270C  0E00               	movlw	0
  8376  00270E  6E1C               	movwf	(i2pad@w+1)^0,c
  8377  002710  0E00               	movlw	0
  8378  002712  6E1B               	movwf	i2pad@w^0,c
  8379  002714                     i2l1054:
  8380                           
  8381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8382  002714  0E00               	movlw	0
  8383  002716  6E1A               	movwf	(i2pad@i+1)^0,c
  8384  002718  0E00               	movlw	0
  8385  00271A  6E19               	movwf	i2pad@i^0,c
  8386                           
  8387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8388  00271C  EF9C  F013         	goto	i2l2831
  8389  002720                     i2l2827:
  8390                           
  8391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8392  002720  0E00               	movlw	0
  8393  002722  6E03               	movwf	(i2fputc@c+1)^0,c
  8394  002724  0E20               	movlw	32
  8395  002726  6E02               	movwf	i2fputc@c^0,c
  8396  002728  C012  F004         	movff	i2pad@fp,i2fputc@fp
  8397  00272C  C013  F005         	movff	i2pad@fp+1,i2fputc@fp+1
  8398  002730  EC02  F013         	call	i2_fputc	;wreg free
  8399  002734                     
  8400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8401  002734  4A19               	infsnz	i2pad@i^0,f,c
  8402  002736  2A1A               	incf	(i2pad@i+1)^0,f,c
  8403  002738                     i2l2831:
  8404                           
  8405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8406  002738  501B               	movf	i2pad@w^0,w,c
  8407  00273A  5C19               	subwf	i2pad@i^0,w,c
  8408  00273C  501A               	movf	(i2pad@i+1)^0,w,c
  8409  00273E  0A80               	xorlw	128
  8410  002740  6E18               	movwf	??i2_pad^0,c
  8411  002742  501C               	movf	(i2pad@w+1)^0,w,c
  8412  002744  0A80               	xorlw	128
  8413  002746  5818               	subwfb	??i2_pad^0,w,c
  8414  002748  A0D8               	btfss	status,0,c
  8415  00274A  EFA9  F013         	goto	i2u220_41
  8416  00274E  EFAB  F013         	goto	i2u220_40
  8417  002752                     i2u220_41:
  8418  002752  EF90  F013         	goto	i2l2827
  8419  002756                     i2u220_40:
  8420  002756                     
  8421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8422  002756  0100               	movlb	0	; () banked
  8423  002758  B1EE               	btfsc	_flags& (0+255),0,b
  8424  00275A  EFB1  F013         	goto	i2u221_41
  8425  00275E  EFB3  F013         	goto	i2u221_40
  8426  002762                     i2u221_41:
  8427  002762  EFBD  F013         	goto	i2l2835
  8428  002766                     i2u221_40:
  8429  002766                     
  8430                           ; BSR set to: 0
  8431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8432  002766  C014  F00B         	movff	i2pad@buf,i2fputs@s
  8433  00276A  C015  F00C         	movff	i2pad@buf+1,i2fputs@s+1
  8434  00276E  C012  F00D         	movff	i2pad@fp,i2fputs@fp
  8435  002772  C013  F00E         	movff	i2pad@fp+1,i2fputs@fp+1
  8436  002776  EC30  F018         	call	i2_fputs	;wreg free
  8437  00277A                     i2l2835:
  8438                           
  8439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8440  00277A  C014  F001         	movff	i2pad@buf,i2strlen@s
  8441  00277E  C015  F002         	movff	i2pad@buf+1,i2strlen@s+1
  8442  002782  EC0A  F019         	call	i2_strlen	;wreg free
  8443  002786  501B               	movf	i2pad@w^0,w,c
  8444  002788  2401               	addwf	?i2_strlen^0,w,c
  8445  00278A  6E12               	movwf	?i2_pad^0,c
  8446  00278C  501C               	movf	(i2pad@w+1)^0,w,c
  8447  00278E  2002               	addwfc	(?i2_strlen+1)^0,w,c
  8448  002790  6E13               	movwf	(?i2_pad+1)^0,c
  8449  002792  0012               	return		;funcret
  8450  002794                     __end_ofi2_pad:
  8451                           	callstack 0
  8452                           
  8453 ;; *************** function i2_strlen *****************
  8454 ;; Defined at:
  8455 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8458 ;;		 -> dbuf(32), 
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8461 ;;		 -> dbuf(32), 
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  2    0[COMRAM] unsigned int 
  8464 ;; Registers used:
  8465 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8471 ;;      Params:         2       0       0       0       0       0       0
  8472 ;;      Locals:         2       0       0       0       0       0       0
  8473 ;;      Temps:          0       0       0       0       0       0       0
  8474 ;;      Totals:         4       0       0       0       0       0       0
  8475 ;;Total ram usage:        4 bytes
  8476 ;; Hardware stack levels used: 1
  8477 ;; This function calls:
  8478 ;;		Nothing
  8479 ;; This function is called by:
  8480 ;;		i2_pad
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text52
  8485  003214                     __ptext52:
  8486                           	callstack 0
  8487  003214                     i2_strlen:
  8488                           	callstack 14
  8489  003214  C001  F003         	movff	i2strlen@s,i2strlen@a
  8490  003218  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  8491  00321C  EF12  F019         	goto	i2l2711
  8492  003220                     i2l2709:
  8493  003220  4A01               	infsnz	i2strlen@s^0,f,c
  8494  003222  2A02               	incf	(i2strlen@s+1)^0,f,c
  8495  003224                     i2l2711:
  8496  003224  C001  FFD9         	movff	i2strlen@s,fsr2l
  8497  003228  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  8498  00322C  50DF               	movf	indf2,w,c
  8499  00322E  A4D8               	btfss	status,2,c
  8500  003230  EF1C  F019         	goto	i2u200_41
  8501  003234  EF1E  F019         	goto	i2u200_40
  8502  003238                     i2u200_41:
  8503  003238  EF10  F019         	goto	i2l2709
  8504  00323C                     i2u200_40:
  8505  00323C  5003               	movf	i2strlen@a^0,w,c
  8506  00323E  5C01               	subwf	i2strlen@s^0,w,c
  8507  003240  6E01               	movwf	?i2_strlen^0,c
  8508  003242  5004               	movf	(i2strlen@a+1)^0,w,c
  8509  003244  5802               	subwfb	(i2strlen@s+1)^0,w,c
  8510  003246  6E02               	movwf	(?i2_strlen+1)^0,c
  8511  003248  0012               	return		;funcret
  8512  00324A                     __end_ofi2_strlen:
  8513                           	callstack 0
  8514                           
  8515 ;; *************** function i2_fputs *****************
  8516 ;; Defined at:
  8517 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;  s               2   10[COMRAM] PTR const unsigned char 
  8520 ;;		 -> dbuf(32), 
  8521 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  8522 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  i               2   15[COMRAM] int 
  8525 ;;  c               1   14[COMRAM] unsigned char 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  2   10[COMRAM] int 
  8528 ;; Registers used:
  8529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8535 ;;      Params:         4       0       0       0       0       0       0
  8536 ;;      Locals:         3       0       0       0       0       0       0
  8537 ;;      Temps:          0       0       0       0       0       0       0
  8538 ;;      Totals:         7       0       0       0       0       0       0
  8539 ;;Total ram usage:        7 bytes
  8540 ;; Hardware stack levels used: 1
  8541 ;; Hardware stack levels required when called: 2
  8542 ;; This function calls:
  8543 ;;		i2_fputc
  8544 ;; This function is called by:
  8545 ;;		i2_pad
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           	psect	text53
  8550  003060                     __ptext53:
  8551                           	callstack 0
  8552  003060                     i2_fputs:
  8553                           	callstack 12
  8554  003060  0E00               	movlw	0
  8555  003062  6E11               	movwf	(i2fputs@i+1)^0,c
  8556  003064  0E00               	movlw	0
  8557  003066  6E10               	movwf	i2fputs@i^0,c
  8558  003068  EF41  F018         	goto	i2l2705
  8559  00306C                     i2l2701:
  8560  00306C  C00F  F002         	movff	i2fputs@c,i2fputc@c
  8561  003070  6A03               	clrf	(i2fputc@c+1)^0,c
  8562  003072  C00D  F004         	movff	i2fputs@fp,i2fputc@fp
  8563  003076  C00E  F005         	movff	i2fputs@fp+1,i2fputc@fp+1
  8564  00307A  EC02  F013         	call	i2_fputc	;wreg free
  8565  00307E  4A10               	infsnz	i2fputs@i^0,f,c
  8566  003080  2A11               	incf	(i2fputs@i+1)^0,f,c
  8567  003082                     i2l2705:
  8568  003082  5010               	movf	i2fputs@i^0,w,c
  8569  003084  240B               	addwf	i2fputs@s^0,w,c
  8570  003086  6ED9               	movwf	fsr2l,c
  8571  003088  5011               	movf	(i2fputs@i+1)^0,w,c
  8572  00308A  200C               	addwfc	(i2fputs@s+1)^0,w,c
  8573  00308C  6EDA               	movwf	fsr2h,c
  8574  00308E  50DF               	movf	indf2,w,c
  8575  003090  6E0F               	movwf	i2fputs@c^0,c
  8576  003092  500F               	movf	i2fputs@c^0,w,c
  8577  003094  A4D8               	btfss	status,2,c
  8578  003096  EF4F  F018         	goto	i2u199_41
  8579  00309A  EF51  F018         	goto	i2u199_40
  8580  00309E                     i2u199_41:
  8581  00309E  EF36  F018         	goto	i2l2701
  8582  0030A2                     i2u199_40:
  8583  0030A2  0012               	return		;funcret
  8584  0030A4                     __end_ofi2_fputs:
  8585                           	callstack 0
  8586                           
  8587 ;; *************** function i2_fputc *****************
  8588 ;; Defined at:
  8589 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;  c               2    1[COMRAM] int 
  8592 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  8593 ;;		 -> i2sprintf@f(6), sprintf@f(6), 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;		None
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  2    1[COMRAM] int 
  8598 ;; Registers used:
  8599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8605 ;;      Params:         4       0       0       0       0       0       0
  8606 ;;      Locals:         0       0       0       0       0       0       0
  8607 ;;      Temps:          5       0       0       0       0       0       0
  8608 ;;      Totals:         9       0       0       0       0       0       0
  8609 ;;Total ram usage:        9 bytes
  8610 ;; Hardware stack levels used: 1
  8611 ;; Hardware stack levels required when called: 1
  8612 ;; This function calls:
  8613 ;;		i2_putch
  8614 ;; This function is called by:
  8615 ;;		i2_pad
  8616 ;;		i2_vfpfcnvrt
  8617 ;;		i2_fputs
  8618 ;; This function uses a non-reentrant model
  8619 ;;
  8620                           
  8621                           	psect	text54
  8622  002604                     __ptext54:
  8623                           	callstack 0
  8624  002604                     i2_fputc:
  8625                           	callstack 15
  8626  002604  5004               	movf	i2fputc@fp^0,w,c
  8627  002606  1005               	iorwf	(i2fputc@fp+1)^0,w,c
  8628  002608  B4D8               	btfsc	status,2,c
  8629  00260A  EF09  F013         	goto	i2u194_41
  8630  00260E  EF0B  F013         	goto	i2u194_40
  8631  002612                     i2u194_41:
  8632  002612  EF14  F013         	goto	i2l2685
  8633  002616                     i2u194_40:
  8634  002616  5004               	movf	i2fputc@fp^0,w,c
  8635  002618  1005               	iorwf	(i2fputc@fp+1)^0,w,c
  8636  00261A  A4D8               	btfss	status,2,c
  8637  00261C  EF12  F013         	goto	i2u195_41
  8638  002620  EF14  F013         	goto	i2u195_40
  8639  002624                     i2u195_41:
  8640  002624  EF19  F013         	goto	i2l2687
  8641  002628                     i2u195_40:
  8642  002628                     i2l2685:
  8643  002628  5002               	movf	i2fputc@c^0,w,c
  8644  00262A  EC64  F01A         	call	i2_putch
  8645  00262E  EF66  F013         	goto	i2l1185
  8646  002632                     i2l2687:
  8647  002632  EE20 F004          	lfsr	2,4
  8648  002636  5004               	movf	i2fputc@fp^0,w,c
  8649  002638  26D9               	addwf	fsr2l,f,c
  8650  00263A  5005               	movf	(i2fputc@fp+1)^0,w,c
  8651  00263C  22DA               	addwfc	fsr2h,f,c
  8652  00263E  50DE               	movf	postinc2,w,c
  8653  002640  10DE               	iorwf	postinc2,w,c
  8654  002642  B4D8               	btfsc	status,2,c
  8655  002644  EF26  F013         	goto	i2u196_41
  8656  002648  EF28  F013         	goto	i2u196_40
  8657  00264C                     i2u196_41:
  8658  00264C  EF43  F013         	goto	i2l2691
  8659  002650                     i2u196_40:
  8660  002650  EE20 F004          	lfsr	2,4
  8661  002654  5004               	movf	i2fputc@fp^0,w,c
  8662  002656  26D9               	addwf	fsr2l,f,c
  8663  002658  5005               	movf	(i2fputc@fp+1)^0,w,c
  8664  00265A  22DA               	addwfc	fsr2h,f,c
  8665  00265C  EE10 F002          	lfsr	1,2
  8666  002660  5004               	movf	i2fputc@fp^0,w,c
  8667  002662  26E1               	addwf	fsr1l,f,c
  8668  002664  5005               	movf	(i2fputc@fp+1)^0,w,c
  8669  002666  22E2               	addwfc	fsr1h,f,c
  8670  002668  50DE               	movf	postinc2,w,c
  8671  00266A  5CE6               	subwf	postinc1,w,c
  8672  00266C  50E6               	movf	postinc1,w,c
  8673  00266E  0A80               	xorlw	128
  8674  002670  6E0A               	movwf	(??i2_fputc+4)^0,c
  8675  002672  50DE               	movf	postinc2,w,c
  8676  002674  0A80               	xorlw	128
  8677  002676  580A               	subwfb	(??i2_fputc+4)^0,w,c
  8678  002678  B0D8               	btfsc	status,0,c
  8679  00267A  EF41  F013         	goto	i2u197_41
  8680  00267E  EF43  F013         	goto	i2u197_40
  8681  002682                     i2u197_41:
  8682  002682  EF66  F013         	goto	i2l1185
  8683  002686                     i2u197_40:
  8684  002686                     i2l2691:
  8685  002686  EE20 F002          	lfsr	2,2
  8686  00268A  5004               	movf	i2fputc@fp^0,w,c
  8687  00268C  26D9               	addwf	fsr2l,f,c
  8688  00268E  5005               	movf	(i2fputc@fp+1)^0,w,c
  8689  002690  22DA               	addwfc	fsr2h,f,c
  8690  002692  CFDE F006          	movff	postinc2,??i2_fputc
  8691  002696  CFDD F007          	movff	postdec2,??i2_fputc+1
  8692  00269A  C004  FFD9         	movff	i2fputc@fp,fsr2l
  8693  00269E  C005  FFDA         	movff	i2fputc@fp+1,fsr2h
  8694  0026A2  CFDE F008          	movff	postinc2,??i2_fputc+2
  8695  0026A6  CFDD F009          	movff	postdec2,??i2_fputc+3
  8696  0026AA  5006               	movf	??i2_fputc^0,w,c
  8697  0026AC  2408               	addwf	(??i2_fputc+2)^0,w,c
  8698  0026AE  6ED9               	movwf	fsr2l,c
  8699  0026B0  5007               	movf	(??i2_fputc+1)^0,w,c
  8700  0026B2  2009               	addwfc	(??i2_fputc+3)^0,w,c
  8701  0026B4  6EDA               	movwf	fsr2h,c
  8702  0026B6  C002  FFDF         	movff	i2fputc@c,indf2
  8703  0026BA  EE20 F002          	lfsr	2,2
  8704  0026BE  5004               	movf	i2fputc@fp^0,w,c
  8705  0026C0  26D9               	addwf	fsr2l,f,c
  8706  0026C2  5005               	movf	(i2fputc@fp+1)^0,w,c
  8707  0026C4  22DA               	addwfc	fsr2h,f,c
  8708  0026C6  2ADE               	incf	postinc2,f,c
  8709  0026C8  0E00               	movlw	0
  8710  0026CA  22DD               	addwfc	postdec2,f,c
  8711  0026CC                     i2l1185:
  8712  0026CC  0012               	return		;funcret
  8713  0026CE                     __end_ofi2_fputc:
  8714                           	callstack 0
  8715                           
  8716 ;; *************** function i2_putch *****************
  8717 ;; Defined at:
  8718 ;;		line 31 in file "src/myprintf.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  byte            1    wreg     unsigned char 
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  byte            1    0[COMRAM] unsigned char 
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      void 
  8725 ;; Registers used:
  8726 ;;		wreg
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8732 ;;      Params:         0       0       0       0       0       0       0
  8733 ;;      Locals:         1       0       0       0       0       0       0
  8734 ;;      Temps:          0       0       0       0       0       0       0
  8735 ;;      Totals:         1       0       0       0       0       0       0
  8736 ;;Total ram usage:        1 bytes
  8737 ;; Hardware stack levels used: 1
  8738 ;; This function calls:
  8739 ;;		Nothing
  8740 ;; This function is called by:
  8741 ;;		i2_fputc
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           	psect	text55
  8746  0034C8                     __ptext55:
  8747                           	callstack 0
  8748  0034C8                     i2_putch:
  8749                           	callstack 15
  8750                           
  8751                           ;incstack = 0
  8752                           ;i2putch@byte stored from wreg
  8753  0034C8  6E01               	movwf	i2putch@byte^0,c
  8754  0034CA                     i2l71:
  8755  0034CA  A89E               	btfss	3998,4,c	;volatile
  8756  0034CC  EF6A  F01A         	goto	i2u193_41
  8757  0034D0  EF6C  F01A         	goto	i2u193_40
  8758  0034D4                     i2u193_41:
  8759  0034D4  EF65  F01A         	goto	i2l71
  8760  0034D8                     i2u193_40:
  8761  0034D8                     
  8762                           ;src/myprintf.c: 34:     TXREG = byte;
  8763  0034D8  C001  FFAD         	movff	i2putch@byte,4013	;volatile
  8764  0034DC  0012               	return		;funcret
  8765  0034DE                     __end_ofi2_putch:
  8766                           	callstack 0
  8767                           
  8768 ;; *************** function i2_abs *****************
  8769 ;; Defined at:
  8770 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8771 ;; Parameters:    Size  Location     Type
  8772 ;;  a               2   18[COMRAM] int 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;		None
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  2   18[COMRAM] int 
  8777 ;; Registers used:
  8778 ;;		wreg, status,2, status,0
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8784 ;;      Params:         2       0       0       0       0       0       0
  8785 ;;      Locals:         0       0       0       0       0       0       0
  8786 ;;      Temps:          2       0       0       0       0       0       0
  8787 ;;      Totals:         4       0       0       0       0       0       0
  8788 ;;Total ram usage:        4 bytes
  8789 ;; Hardware stack levels used: 1
  8790 ;; This function calls:
  8791 ;;		Nothing
  8792 ;; This function is called by:
  8793 ;;		i2_dtoa
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           	psect	text56
  8798  003128                     __ptext56:
  8799                           	callstack 0
  8800  003128                     i2_abs:
  8801                           	callstack 15
  8802  003128  BE14               	btfsc	(i2abs@a+1)^0,7,c
  8803  00312A  EFA1  F018         	goto	i2u222_40
  8804  00312E  5014               	movf	(i2abs@a+1)^0,w,c
  8805  003130  E106               	bnz	i2u222_41
  8806  003132  0413               	decf	i2abs@a^0,w,c
  8807  003134  B0D8               	btfsc	status,0,c
  8808  003136  EF9F  F018         	goto	i2u222_41
  8809  00313A  EFA1  F018         	goto	i2u222_40
  8810  00313E                     i2u222_41:
  8811  00313E  EFAF  F018         	goto	i2l1125
  8812  003142                     i2u222_40:
  8813  003142  C013  F015         	movff	i2abs@a,??i2_abs
  8814  003146  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  8815  00314A  1E15               	comf	??i2_abs^0,f,c
  8816  00314C  1E16               	comf	(??i2_abs+1)^0,f,c
  8817  00314E  4A15               	infsnz	??i2_abs^0,f,c
  8818  003150  2A16               	incf	(??i2_abs+1)^0,f,c
  8819  003152  C015  F013         	movff	??i2_abs,?i2_abs
  8820  003156  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  8821  00315A  EFB3  F018         	goto	i2l1128
  8822  00315E                     i2l1125:
  8823  00315E  C013  F013         	movff	i2abs@a,?i2_abs
  8824  003162  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  8825  003166                     i2l1128:
  8826  003166  0012               	return		;funcret
  8827  003168                     __end_ofi2_abs:
  8828                           	callstack 0
  8829                           
  8830 ;; *************** function i2___aomod *****************
  8831 ;; Defined at:
  8832 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  dividend        8    0[COMRAM] long long 
  8835 ;;  divisor         8    8[COMRAM] long long 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  sign            1   17[COMRAM] unsigned char 
  8838 ;;  counter         1   16[COMRAM] unsigned char 
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  8    0[COMRAM] long long 
  8841 ;; Registers used:
  8842 ;;		wreg, status,2, status,0
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8848 ;;      Params:        16       0       0       0       0       0       0
  8849 ;;      Locals:         2       0       0       0       0       0       0
  8850 ;;      Temps:          0       0       0       0       0       0       0
  8851 ;;      Totals:        18       0       0       0       0       0       0
  8852 ;;Total ram usage:       18 bytes
  8853 ;; Hardware stack levels used: 1
  8854 ;; This function calls:
  8855 ;;		Nothing
  8856 ;; This function is called by:
  8857 ;;		i2_dtoa
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           	psect	text57
  8862  001FC8                     __ptext57:
  8863                           	callstack 0
  8864  001FC8                     i2___aomod:
  8865                           	callstack 15
  8866  001FC8  0E00               	movlw	0
  8867  001FCA  6E12               	movwf	i2___aomod@sign^0,c
  8868  001FCC  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
  8869  001FCE  EFED  F00F         	goto	i2u212_40
  8870  001FD2  EFEB  F00F         	goto	i2u212_41
  8871  001FD6                     i2u212_41:
  8872  001FD6  EFFF  F00F         	goto	i2l2789
  8873  001FDA                     i2u212_40:
  8874  001FDA  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  8875  001FDC  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  8876  001FDE  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  8877  001FE0  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  8878  001FE2  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  8879  001FE4  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  8880  001FE6  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  8881  001FE8  6C01               	negf	i2___aomod@dividend^0,c
  8882  001FEA  0E00               	movlw	0
  8883  001FEC  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  8884  001FEE  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  8885  001FF0  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  8886  001FF2  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  8887  001FF4  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  8888  001FF6  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  8889  001FF8  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  8890  001FFA  0E01               	movlw	1
  8891  001FFC  6E12               	movwf	i2___aomod@sign^0,c
  8892  001FFE                     i2l2789:
  8893  001FFE  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
  8894  002000  EF06  F010         	goto	i2u213_40
  8895  002004  EF04  F010         	goto	i2u213_41
  8896  002008                     i2u213_41:
  8897  002008  EF16  F010         	goto	i2l2793
  8898  00200C                     i2u213_40:
  8899  00200C  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
  8900  00200E  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
  8901  002010  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
  8902  002012  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
  8903  002014  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
  8904  002016  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
  8905  002018  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
  8906  00201A  6C09               	negf	i2___aomod@divisor^0,c
  8907  00201C  0E00               	movlw	0
  8908  00201E  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
  8909  002020  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
  8910  002022  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
  8911  002024  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
  8912  002026  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
  8913  002028  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
  8914  00202A  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
  8915  00202C                     i2l2793:
  8916  00202C  5009               	movf	i2___aomod@divisor^0,w,c
  8917  00202E  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
  8918  002030  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
  8919  002032  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
  8920  002034  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
  8921  002036  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
  8922  002038  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
  8923  00203A  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
  8924  00203C  B4D8               	btfsc	status,2,c
  8925  00203E  EF23  F010         	goto	i2u214_41
  8926  002042  EF25  F010         	goto	i2u214_40
  8927  002046                     i2u214_41:
  8928  002046  EF6D  F010         	goto	i2l2809
  8929  00204A                     i2u214_40:
  8930  00204A  0E01               	movlw	1
  8931  00204C  6E11               	movwf	i2___aomod@counter^0,c
  8932  00204E  EF33  F010         	goto	i2l2799
  8933  002052                     i2l2797:
  8934  002052  90D8               	bcf	status,0,c
  8935  002054  3609               	rlcf	i2___aomod@divisor^0,f,c
  8936  002056  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
  8937  002058  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
  8938  00205A  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
  8939  00205C  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
  8940  00205E  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
  8941  002060  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
  8942  002062  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
  8943  002064  2A11               	incf	i2___aomod@counter^0,f,c
  8944  002066                     i2l2799:
  8945  002066  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
  8946  002068  EF38  F010         	goto	i2u215_41
  8947  00206C  EF3A  F010         	goto	i2u215_40
  8948  002070                     i2u215_41:
  8949  002070  EF29  F010         	goto	i2l2797
  8950  002074                     i2u215_40:
  8951  002074                     i2l2801:
  8952  002074  5009               	movf	i2___aomod@divisor^0,w,c
  8953  002076  5C01               	subwf	i2___aomod@dividend^0,w,c
  8954  002078  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  8955  00207A  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
  8956  00207C  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  8957  00207E  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
  8958  002080  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  8959  002082  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
  8960  002084  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  8961  002086  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
  8962  002088  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  8963  00208A  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
  8964  00208C  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  8965  00208E  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
  8966  002090  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  8967  002092  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
  8968  002094  A0D8               	btfss	status,0,c
  8969  002096  EF4F  F010         	goto	i2u216_41
  8970  00209A  EF51  F010         	goto	i2u216_40
  8971  00209E                     i2u216_41:
  8972  00209E  EF61  F010         	goto	i2l2805
  8973  0020A2                     i2u216_40:
  8974  0020A2  5009               	movf	i2___aomod@divisor^0,w,c
  8975  0020A4  5E01               	subwf	i2___aomod@dividend^0,f,c
  8976  0020A6  500A               	movf	(i2___aomod@divisor+1)^0,w,c
  8977  0020A8  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
  8978  0020AA  500B               	movf	(i2___aomod@divisor+2)^0,w,c
  8979  0020AC  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
  8980  0020AE  500C               	movf	(i2___aomod@divisor+3)^0,w,c
  8981  0020B0  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
  8982  0020B2  500D               	movf	(i2___aomod@divisor+4)^0,w,c
  8983  0020B4  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
  8984  0020B6  500E               	movf	(i2___aomod@divisor+5)^0,w,c
  8985  0020B8  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
  8986  0020BA  500F               	movf	(i2___aomod@divisor+6)^0,w,c
  8987  0020BC  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
  8988  0020BE  5010               	movf	(i2___aomod@divisor+7)^0,w,c
  8989  0020C0  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
  8990  0020C2                     i2l2805:
  8991  0020C2  90D8               	bcf	status,0,c
  8992  0020C4  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
  8993  0020C6  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
  8994  0020C8  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
  8995  0020CA  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
  8996  0020CC  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
  8997  0020CE  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
  8998  0020D0  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
  8999  0020D2  3209               	rrcf	i2___aomod@divisor^0,f,c
  9000  0020D4  2E11               	decfsz	i2___aomod@counter^0,f,c
  9001  0020D6  EF3A  F010         	goto	i2l2801
  9002  0020DA                     i2l2809:
  9003  0020DA  5012               	movf	i2___aomod@sign^0,w,c
  9004  0020DC  B4D8               	btfsc	status,2,c
  9005  0020DE  EF73  F010         	goto	i2u217_41
  9006  0020E2  EF75  F010         	goto	i2u217_40
  9007  0020E6                     i2u217_41:
  9008  0020E6  EF85  F010         	goto	i2l2813
  9009  0020EA                     i2u217_40:
  9010  0020EA  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
  9011  0020EC  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
  9012  0020EE  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
  9013  0020F0  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
  9014  0020F2  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
  9015  0020F4  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
  9016  0020F6  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
  9017  0020F8  6C01               	negf	i2___aomod@dividend^0,c
  9018  0020FA  0E00               	movlw	0
  9019  0020FC  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
  9020  0020FE  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
  9021  002100  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
  9022  002102  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
  9023  002104  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
  9024  002106  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
  9025  002108  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
  9026  00210A                     i2l2813:
  9027  00210A  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  9028  00210E  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  9029  002112  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  9030  002116  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  9031  00211A  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  9032  00211E  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  9033  002122  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  9034  002126  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  9035  00212A  0012               	return		;funcret
  9036  00212C                     __end_ofi2___aomod:
  9037                           	callstack 0
  9038                           
  9039 ;; *************** function i2___aodiv *****************
  9040 ;; Defined at:
  9041 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  9042 ;; Parameters:    Size  Location     Type
  9043 ;;  dividend        8    0[COMRAM] long long 
  9044 ;;  divisor         8    8[COMRAM] long long 
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;  quotient        8   18[COMRAM] long long 
  9047 ;;  sign            1   17[COMRAM] unsigned char 
  9048 ;;  counter         1   16[COMRAM] unsigned char 
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  8    0[COMRAM] long long 
  9051 ;; Registers used:
  9052 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9053 ;; Tracked objects:
  9054 ;;		On entry : 0/0
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9058 ;;      Params:        16       0       0       0       0       0       0
  9059 ;;      Locals:        10       0       0       0       0       0       0
  9060 ;;      Temps:          0       0       0       0       0       0       0
  9061 ;;      Totals:        26       0       0       0       0       0       0
  9062 ;;Total ram usage:       26 bytes
  9063 ;; Hardware stack levels used: 1
  9064 ;; This function calls:
  9065 ;;		Nothing
  9066 ;; This function is called by:
  9067 ;;		i2_dtoa
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           	psect	text58
  9072  001B66                     __ptext58:
  9073                           	callstack 0
  9074  001B66                     i2___aodiv:
  9075                           	callstack 15
  9076  001B66  0E00               	movlw	0
  9077  001B68  6E12               	movwf	i2___aodiv@sign^0,c
  9078  001B6A  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
  9079  001B6C  EFBC  F00D         	goto	i2u205_40
  9080  001B70  EFBA  F00D         	goto	i2u205_41
  9081  001B74                     i2u205_41:
  9082  001B74  EFCE  F00D         	goto	i2l2745
  9083  001B78                     i2u205_40:
  9084  001B78  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
  9085  001B7A  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
  9086  001B7C  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
  9087  001B7E  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
  9088  001B80  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
  9089  001B82  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
  9090  001B84  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
  9091  001B86  6C09               	negf	i2___aodiv@divisor^0,c
  9092  001B88  0E00               	movlw	0
  9093  001B8A  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
  9094  001B8C  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
  9095  001B8E  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
  9096  001B90  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
  9097  001B92  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
  9098  001B94  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
  9099  001B96  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
  9100  001B98  0E01               	movlw	1
  9101  001B9A  6E12               	movwf	i2___aodiv@sign^0,c
  9102  001B9C                     i2l2745:
  9103  001B9C  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
  9104  001B9E  EFD5  F00D         	goto	i2u206_40
  9105  001BA2  EFD3  F00D         	goto	i2u206_41
  9106  001BA6                     i2u206_41:
  9107  001BA6  EFE7  F00D         	goto	i2l2751
  9108  001BAA                     i2u206_40:
  9109  001BAA  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
  9110  001BAC  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
  9111  001BAE  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
  9112  001BB0  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
  9113  001BB2  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
  9114  001BB4  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
  9115  001BB6  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
  9116  001BB8  6C01               	negf	i2___aodiv@dividend^0,c
  9117  001BBA  0E00               	movlw	0
  9118  001BBC  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
  9119  001BBE  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
  9120  001BC0  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
  9121  001BC2  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
  9122  001BC4  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
  9123  001BC6  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
  9124  001BC8  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
  9125  001BCA  0E01               	movlw	1
  9126  001BCC  1A12               	xorwf	i2___aodiv@sign^0,f,c
  9127  001BCE                     i2l2751:
  9128  001BCE  EE20  F013         	lfsr	2,i2___aodiv@quotient
  9129  001BD2  0E07               	movlw	7
  9130  001BD4                     i2u207_41:
  9131  001BD4  6ADE               	clrf	postinc2,c
  9132  001BD6  06E8               	decf	wreg,f,c
  9133  001BD8  E2FD               	bc	i2u207_41
  9134  001BDA  5009               	movf	i2___aodiv@divisor^0,w,c
  9135  001BDC  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
  9136  001BDE  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
  9137  001BE0  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
  9138  001BE2  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
  9139  001BE4  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
  9140  001BE6  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
  9141  001BE8  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
  9142  001BEA  B4D8               	btfsc	status,2,c
  9143  001BEC  EFFA  F00D         	goto	i2u208_41
  9144  001BF0  EFFC  F00D         	goto	i2u208_40
  9145  001BF4                     i2u208_41:
  9146  001BF4  EF4E  F00E         	goto	i2l2773
  9147  001BF8                     i2u208_40:
  9148  001BF8  0E01               	movlw	1
  9149  001BFA  6E11               	movwf	i2___aodiv@counter^0,c
  9150  001BFC  EF0A  F00E         	goto	i2l2759
  9151  001C00                     i2l2757:
  9152  001C00  90D8               	bcf	status,0,c
  9153  001C02  3609               	rlcf	i2___aodiv@divisor^0,f,c
  9154  001C04  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
  9155  001C06  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
  9156  001C08  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
  9157  001C0A  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
  9158  001C0C  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
  9159  001C0E  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
  9160  001C10  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
  9161  001C12  2A11               	incf	i2___aodiv@counter^0,f,c
  9162  001C14                     i2l2759:
  9163  001C14  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
  9164  001C16  EF0F  F00E         	goto	i2u209_41
  9165  001C1A  EF11  F00E         	goto	i2u209_40
  9166  001C1E                     i2u209_41:
  9167  001C1E  EF00  F00E         	goto	i2l2757
  9168  001C22                     i2u209_40:
  9169  001C22                     i2l2761:
  9170  001C22  90D8               	bcf	status,0,c
  9171  001C24  3613               	rlcf	i2___aodiv@quotient^0,f,c
  9172  001C26  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
  9173  001C28  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
  9174  001C2A  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
  9175  001C2C  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
  9176  001C2E  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
  9177  001C30  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
  9178  001C32  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
  9179  001C34  5009               	movf	i2___aodiv@divisor^0,w,c
  9180  001C36  5C01               	subwf	i2___aodiv@dividend^0,w,c
  9181  001C38  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  9182  001C3A  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
  9183  001C3C  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  9184  001C3E  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
  9185  001C40  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  9186  001C42  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
  9187  001C44  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  9188  001C46  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
  9189  001C48  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  9190  001C4A  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
  9191  001C4C  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  9192  001C4E  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
  9193  001C50  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  9194  001C52  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
  9195  001C54  A0D8               	btfss	status,0,c
  9196  001C56  EF2F  F00E         	goto	i2u210_41
  9197  001C5A  EF31  F00E         	goto	i2u210_40
  9198  001C5E                     i2u210_41:
  9199  001C5E  EF42  F00E         	goto	i2l2769
  9200  001C62                     i2u210_40:
  9201  001C62  5009               	movf	i2___aodiv@divisor^0,w,c
  9202  001C64  5E01               	subwf	i2___aodiv@dividend^0,f,c
  9203  001C66  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
  9204  001C68  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
  9205  001C6A  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
  9206  001C6C  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
  9207  001C6E  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
  9208  001C70  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
  9209  001C72  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
  9210  001C74  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
  9211  001C76  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
  9212  001C78  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
  9213  001C7A  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
  9214  001C7C  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
  9215  001C7E  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
  9216  001C80  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
  9217  001C82  8013               	bsf	i2___aodiv@quotient^0,0,c
  9218  001C84                     i2l2769:
  9219  001C84  90D8               	bcf	status,0,c
  9220  001C86  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
  9221  001C88  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
  9222  001C8A  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
  9223  001C8C  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
  9224  001C8E  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
  9225  001C90  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
  9226  001C92  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
  9227  001C94  3209               	rrcf	i2___aodiv@divisor^0,f,c
  9228  001C96  2E11               	decfsz	i2___aodiv@counter^0,f,c
  9229  001C98  EF11  F00E         	goto	i2l2761
  9230  001C9C                     i2l2773:
  9231  001C9C  5012               	movf	i2___aodiv@sign^0,w,c
  9232  001C9E  B4D8               	btfsc	status,2,c
  9233  001CA0  EF54  F00E         	goto	i2u211_41
  9234  001CA4  EF56  F00E         	goto	i2u211_40
  9235  001CA8                     i2u211_41:
  9236  001CA8  EF66  F00E         	goto	i2l2777
  9237  001CAC                     i2u211_40:
  9238  001CAC  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
  9239  001CAE  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
  9240  001CB0  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
  9241  001CB2  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
  9242  001CB4  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
  9243  001CB6  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
  9244  001CB8  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
  9245  001CBA  6C13               	negf	i2___aodiv@quotient^0,c
  9246  001CBC  0E00               	movlw	0
  9247  001CBE  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
  9248  001CC0  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
  9249  001CC2  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
  9250  001CC4  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
  9251  001CC6  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
  9252  001CC8  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
  9253  001CCA  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
  9254  001CCC                     i2l2777:
  9255  001CCC  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  9256  001CD0  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  9257  001CD4  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  9258  001CD8  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  9259  001CDC  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  9260  001CE0  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  9261  001CE4  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  9262  001CE8  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  9263  001CEC  0012               	return		;funcret
  9264  001CEE                     __end_ofi2___aodiv:
  9265                           	callstack 0
  9266                           
  9267 ;; *************** function i2_atoi *****************
  9268 ;; Defined at:
  9269 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9272 ;;		 -> STR_4(15), STR_3(15), STR_2(15), STR_1(16), 
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;  n               2   20[COMRAM] int 
  9275 ;;  neg             2   13[COMRAM] int 
  9276 ;; Return value:  Size  Location     Type
  9277 ;;                  2    7[COMRAM] int 
  9278 ;; Registers used:
  9279 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9285 ;;      Params:         2       0       0       0       0       0       0
  9286 ;;      Locals:         9       0       0       0       0       0       0
  9287 ;;      Temps:          4       0       0       0       0       0       0
  9288 ;;      Totals:        15       0       0       0       0       0       0
  9289 ;;Total ram usage:       15 bytes
  9290 ;; Hardware stack levels used: 1
  9291 ;; Hardware stack levels required when called: 1
  9292 ;; This function calls:
  9293 ;;		i2___wmul
  9294 ;;		i2_isdigit
  9295 ;;		i2_isspace
  9296 ;; This function is called by:
  9297 ;;		i2_vfpfcnvrt
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           	psect	text59
  9302  00184C                     __ptext59:
  9303                           	callstack 0
  9304  00184C                     i2_atoi:
  9305                           	callstack 15
  9306  00184C  0E00               	movlw	0
  9307  00184E  6E16               	movwf	(i2atoi@n+1)^0,c
  9308  001850  0E00               	movlw	0
  9309  001852  6E15               	movwf	i2atoi@n^0,c
  9310  001854  0E00               	movlw	0
  9311  001856  6E0F               	movwf	(i2atoi@neg+1)^0,c
  9312  001858  0E00               	movlw	0
  9313  00185A  6E0E               	movwf	i2atoi@neg^0,c
  9314  00185C  EF32  F00C         	goto	i2l2947
  9315  001860                     i2l2945:
  9316  001860  4A08               	infsnz	i2atoi@s^0,f,c
  9317  001862  2A09               	incf	(i2atoi@s+1)^0,f,c
  9318  001864                     i2l2947:
  9319  001864  0E01               	movlw	1
  9320  001866  6E14               	movwf	i2_atoi$981^0,c
  9321  001868  C008  FFF6         	movff	i2atoi@s,tblptrl
  9322  00186C  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  9323  001870                     	if	0	;tblptru may be non-zero
  9324  001870                     	endif
  9325  001870                     	if	0	;tblptru may be non-zero
  9326  001870                     	endif
  9327  001870  0008               	tblrd		*
  9328  001872  50F5               	movf	tablat,w,c
  9329  001874  0A20               	xorlw	32
  9330  001876  B4D8               	btfsc	status,2,c
  9331  001878  EF40  F00C         	goto	i2u246_41
  9332  00187C  EF42  F00C         	goto	i2u246_40
  9333  001880                     i2u246_41:
  9334  001880  EF5F  F00C         	goto	i2l2955
  9335  001884                     i2u246_40:
  9336  001884  0EF7               	movlw	247
  9337  001886  6E0A               	movwf	??i2_atoi^0,c
  9338  001888  0EFF               	movlw	255
  9339  00188A  6E0B               	movwf	(??i2_atoi+1)^0,c
  9340  00188C  C008  FFF6         	movff	i2atoi@s,tblptrl
  9341  001890  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  9342  001894                     	if	0	;tblptru may be non-zero
  9343  001894                     	endif
  9344  001894                     	if	0	;tblptru may be non-zero
  9345  001894                     	endif
  9346  001894  0008               	tblrd		*
  9347  001896  50F5               	movf	tablat,w,c
  9348  001898  6E0C               	movwf	(??i2_atoi+2)^0,c
  9349  00189A  6A0D               	clrf	(??i2_atoi+3)^0,c
  9350  00189C  500A               	movf	??i2_atoi^0,w,c
  9351  00189E  260C               	addwf	(??i2_atoi+2)^0,f,c
  9352  0018A0  500B               	movf	(??i2_atoi+1)^0,w,c
  9353  0018A2  220D               	addwfc	(??i2_atoi+3)^0,f,c
  9354  0018A4  500D               	movf	(??i2_atoi+3)^0,w,c
  9355  0018A6  E109               	bnz	i2u247_40
  9356  0018A8  0E05               	movlw	5
  9357  0018AA  5C0C               	subwf	(??i2_atoi+2)^0,w,c
  9358  0018AC  A0D8               	btfss	status,0,c
  9359  0018AE  EF5B  F00C         	goto	i2u247_41
  9360  0018B2  EF5D  F00C         	goto	i2u247_40
  9361  0018B6                     i2u247_41:
  9362  0018B6  EF5F  F00C         	goto	i2l2955
  9363  0018BA                     i2u247_40:
  9364  0018BA  0E00               	movlw	0
  9365  0018BC  6E14               	movwf	i2_atoi$981^0,c
  9366  0018BE                     i2l2955:
  9367  0018BE  C014  F010         	movff	i2_atoi$981,i2_atoi$980
  9368  0018C2  6A11               	clrf	(i2_atoi$980+1)^0,c
  9369  0018C4  5010               	movf	i2_atoi$980^0,w,c
  9370  0018C6  1011               	iorwf	(i2_atoi$980+1)^0,w,c
  9371  0018C8  A4D8               	btfss	status,2,c
  9372  0018CA  EF69  F00C         	goto	i2u248_41
  9373  0018CE  EF6B  F00C         	goto	i2u248_40
  9374  0018D2                     i2u248_41:
  9375  0018D2  EF30  F00C         	goto	i2l2945
  9376  0018D6                     i2u248_40:
  9377  0018D6  EF75  F00C         	goto	i2l2965
  9378  0018DA                     i2l2961:
  9379  0018DA  0E00               	movlw	0
  9380  0018DC  6E0F               	movwf	(i2atoi@neg+1)^0,c
  9381  0018DE  0E01               	movlw	1
  9382  0018E0  6E0E               	movwf	i2atoi@neg^0,c
  9383  0018E2                     i2l2963:
  9384  0018E2  4A08               	infsnz	i2atoi@s^0,f,c
  9385  0018E4  2A09               	incf	(i2atoi@s+1)^0,f,c
  9386  0018E6  EFAA  F00C         	goto	i2l2971
  9387  0018EA                     i2l2965:
  9388  0018EA  C008  FFF6         	movff	i2atoi@s,tblptrl
  9389  0018EE  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  9390  0018F2                     	if	0	;tblptru may be non-zero
  9391  0018F2                     	endif
  9392  0018F2                     	if	0	;tblptru may be non-zero
  9393  0018F2                     	endif
  9394  0018F2  0008               	tblrd		*
  9395  0018F4  50F5               	movf	tablat,w,c
  9396  0018F6  6E0A               	movwf	??i2_atoi^0,c
  9397  0018F8  6A0B               	clrf	(??i2_atoi+1)^0,c
  9398                           
  9399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9400                           ; Switch size 1, requested type "simple"
  9401                           ; Number of cases is 1, Range of values is 0 to 0
  9402                           ; switch strategies available:
  9403                           ; Name         Instructions Cycles
  9404                           ; simple_byte            4     3 (average)
  9405                           ;	Chosen strategy is simple_byte
  9406  0018FA  500B               	movf	(??i2_atoi+1)^0,w,c
  9407  0018FC  0A00               	xorlw	0	; case 0
  9408  0018FE  B4D8               	btfsc	status,2,c
  9409  001900  EF84  F00C         	goto	i2l4309
  9410  001904  EFAA  F00C         	goto	i2l2971
  9411  001908                     i2l4309:
  9412                           
  9413                           ; Switch size 1, requested type "simple"
  9414                           ; Number of cases is 2, Range of values is 43 to 45
  9415                           ; switch strategies available:
  9416                           ; Name         Instructions Cycles
  9417                           ; simple_byte            7     4 (average)
  9418                           ;	Chosen strategy is simple_byte
  9419  001908  500A               	movf	??i2_atoi^0,w,c
  9420  00190A  0A2B               	xorlw	43	; case 43
  9421  00190C  B4D8               	btfsc	status,2,c
  9422  00190E  EF71  F00C         	goto	i2l2963
  9423  001912  0A06               	xorlw	6	; case 45
  9424  001914  B4D8               	btfsc	status,2,c
  9425  001916  EF6D  F00C         	goto	i2l2961
  9426  00191A  EFAA  F00C         	goto	i2l2971
  9427  00191E                     i2l2967:
  9428  00191E  C015  F001         	movff	i2atoi@n,i2___wmul@multiplier
  9429  001922  C016  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
  9430  001926  0E00               	movlw	0
  9431  001928  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  9432  00192A  0E0A               	movlw	10
  9433  00192C  6E03               	movwf	i2___wmul@multiplicand^0,c
  9434  00192E  ECDF  F019         	call	i2___wmul	;wreg free
  9435  001932  C008  FFF6         	movff	i2atoi@s,tblptrl
  9436  001936  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  9437  00193A                     	if	0	;tblptru may be non-zero
  9438  00193A                     	endif
  9439  00193A                     	if	0	;tblptru may be non-zero
  9440  00193A                     	endif
  9441  00193A  0008               	tblrd		*
  9442  00193C  50F5               	movf	tablat,w,c
  9443  00193E  5E01               	subwf	?i2___wmul^0,f,c
  9444  001940  0E00               	movlw	0
  9445  001942  5A02               	subwfb	(?i2___wmul+1)^0,f,c
  9446  001944  0E30               	movlw	48
  9447  001946  2401               	addwf	?i2___wmul^0,w,c
  9448  001948  6E15               	movwf	i2atoi@n^0,c
  9449  00194A  0E00               	movlw	0
  9450  00194C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  9451  00194E  6E16               	movwf	(i2atoi@n+1)^0,c
  9452  001950  EF71  F00C         	goto	i2l2963
  9453  001954                     i2l2971:
  9454  001954  0ED0               	movlw	208
  9455  001956  6E0A               	movwf	??i2_atoi^0,c
  9456  001958  0EFF               	movlw	255
  9457  00195A  6E0B               	movwf	(??i2_atoi+1)^0,c
  9458  00195C  C008  FFF6         	movff	i2atoi@s,tblptrl
  9459  001960  C009  FFF7         	movff	i2atoi@s+1,tblptrh
  9460  001964                     	if	0	;tblptru may be non-zero
  9461  001964                     	endif
  9462  001964                     	if	0	;tblptru may be non-zero
  9463  001964                     	endif
  9464  001964  0008               	tblrd		*
  9465  001966  50F5               	movf	tablat,w,c
  9466  001968  6E0C               	movwf	(??i2_atoi+2)^0,c
  9467  00196A  6A0D               	clrf	(??i2_atoi+3)^0,c
  9468  00196C  500A               	movf	??i2_atoi^0,w,c
  9469  00196E  260C               	addwf	(??i2_atoi+2)^0,f,c
  9470  001970  500B               	movf	(??i2_atoi+1)^0,w,c
  9471  001972  220D               	addwfc	(??i2_atoi+3)^0,f,c
  9472  001974  500D               	movf	(??i2_atoi+3)^0,w,c
  9473  001976  E10A               	bnz	i2u249_40
  9474  001978  0E0A               	movlw	10
  9475  00197A  5C0C               	subwf	(??i2_atoi+2)^0,w,c
  9476  00197C  A0D8               	btfss	status,0,c
  9477  00197E  EFC3  F00C         	goto	i2u249_41
  9478  001982  EFC6  F00C         	goto	i2u249_40
  9479  001986                     i2u249_41:
  9480  001986  0E01               	movlw	1
  9481  001988  EFC7  F00C         	goto	i2u250_40
  9482  00198C                     i2u249_40:
  9483  00198C  0E00               	movlw	0
  9484  00198E                     i2u250_40:
  9485  00198E  6E12               	movwf	i2_atoi$982^0,c
  9486  001990  6A13               	clrf	(i2_atoi$982+1)^0,c
  9487  001992  5012               	movf	i2_atoi$982^0,w,c
  9488  001994  1013               	iorwf	(i2_atoi$982+1)^0,w,c
  9489  001996  A4D8               	btfss	status,2,c
  9490  001998  EFD0  F00C         	goto	i2u251_41
  9491  00199C  EFD2  F00C         	goto	i2u251_40
  9492  0019A0                     i2u251_41:
  9493  0019A0  EF8F  F00C         	goto	i2l2967
  9494  0019A4                     i2u251_40:
  9495  0019A4  500E               	movf	i2atoi@neg^0,w,c
  9496  0019A6  100F               	iorwf	(i2atoi@neg+1)^0,w,c
  9497  0019A8  A4D8               	btfss	status,2,c
  9498  0019AA  EFD9  F00C         	goto	i2u252_41
  9499  0019AE  EFDB  F00C         	goto	i2u252_40
  9500  0019B2                     i2u252_41:
  9501  0019B2  EFE9  F00C         	goto	i2l1156
  9502  0019B6                     i2u252_40:
  9503  0019B6  C015  F00A         	movff	i2atoi@n,??i2_atoi
  9504  0019BA  C016  F00B         	movff	i2atoi@n+1,??i2_atoi+1
  9505  0019BE  1E0A               	comf	??i2_atoi^0,f,c
  9506  0019C0  1E0B               	comf	(??i2_atoi+1)^0,f,c
  9507  0019C2  4A0A               	infsnz	??i2_atoi^0,f,c
  9508  0019C4  2A0B               	incf	(??i2_atoi+1)^0,f,c
  9509  0019C6  C00A  F008         	movff	??i2_atoi,?i2_atoi
  9510  0019CA  C00B  F009         	movff	??i2_atoi+1,?i2_atoi+1
  9511  0019CE  EFED  F00C         	goto	i2l1159
  9512  0019D2                     i2l1156:
  9513  0019D2  C015  F008         	movff	i2atoi@n,?i2_atoi
  9514  0019D6  C016  F009         	movff	i2atoi@n+1,?i2_atoi+1
  9515  0019DA                     i2l1159:
  9516  0019DA  0012               	return		;funcret
  9517  0019DC                     __end_ofi2_atoi:
  9518                           	callstack 0
  9519                           
  9520 ;; *************** function i2_isspace *****************
  9521 ;; Defined at:
  9522 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;  c               2    0[COMRAM] int 
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;		None
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  2    0[COMRAM] int 
  9529 ;; Registers used:
  9530 ;;		wreg, status,2, status,0
  9531 ;; Tracked objects:
  9532 ;;		On entry : 0/0
  9533 ;;		On exit  : 0/0
  9534 ;;		Unchanged: 0/0
  9535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9536 ;;      Params:         2       0       0       0       0       0       0
  9537 ;;      Locals:         1       0       0       0       0       0       0
  9538 ;;      Temps:          4       0       0       0       0       0       0
  9539 ;;      Totals:         7       0       0       0       0       0       0
  9540 ;;Total ram usage:        7 bytes
  9541 ;; Hardware stack levels used: 1
  9542 ;; This function calls:
  9543 ;;		Nothing
  9544 ;; This function is called by:
  9545 ;;		i2_atoi
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           	psect	text60
  9550  002EE2                     __ptext60:
  9551                           	callstack 0
  9552  002EE2                     i2_isspace:
  9553                           	callstack 15
  9554  002EE2  0E01               	movlw	1
  9555  002EE4  6E07               	movwf	i2_isspace$998^0,c
  9556  002EE6  0E20               	movlw	32
  9557  002EE8  1801               	xorwf	i2isspace@c^0,w,c
  9558  002EEA  1002               	iorwf	(i2isspace@c+1)^0,w,c
  9559  002EEC  B4D8               	btfsc	status,2,c
  9560  002EEE  EF7B  F017         	goto	i2u225_41
  9561  002EF2  EF7D  F017         	goto	i2u225_40
  9562  002EF6                     i2u225_41:
  9563  002EF6  EF96  F017         	goto	i2l2855
  9564  002EFA                     i2u225_40:
  9565  002EFA  0EF7               	movlw	247
  9566  002EFC  6E03               	movwf	??i2_isspace^0,c
  9567  002EFE  0EFF               	movlw	255
  9568  002F00  6E04               	movwf	(??i2_isspace+1)^0,c
  9569  002F02  C001  F005         	movff	i2isspace@c,??i2_isspace+2
  9570  002F06  C002  F006         	movff	i2isspace@c+1,??i2_isspace+3
  9571  002F0A  5003               	movf	??i2_isspace^0,w,c
  9572  002F0C  2605               	addwf	(??i2_isspace+2)^0,f,c
  9573  002F0E  5004               	movf	(??i2_isspace+1)^0,w,c
  9574  002F10  2206               	addwfc	(??i2_isspace+3)^0,f,c
  9575  002F12  5006               	movf	(??i2_isspace+3)^0,w,c
  9576  002F14  E109               	bnz	i2u226_40
  9577  002F16  0E05               	movlw	5
  9578  002F18  5C05               	subwf	(??i2_isspace+2)^0,w,c
  9579  002F1A  A0D8               	btfss	status,0,c
  9580  002F1C  EF92  F017         	goto	i2u226_41
  9581  002F20  EF94  F017         	goto	i2u226_40
  9582  002F24                     i2u226_41:
  9583  002F24  EF96  F017         	goto	i2l2855
  9584  002F28                     i2u226_40:
  9585  002F28  0E00               	movlw	0
  9586  002F2A  6E07               	movwf	i2_isspace$998^0,c
  9587  002F2C                     i2l2855:
  9588  002F2C  C007  F001         	movff	i2_isspace$998,?i2_isspace
  9589  002F30  6A02               	clrf	(?i2_isspace+1)^0,c
  9590  002F32  0012               	return		;funcret
  9591  002F34                     __end_ofi2_isspace:
  9592                           	callstack 0
  9593                           
  9594 ;; *************** function i2_isdigit *****************
  9595 ;; Defined at:
  9596 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;  c               2    0[COMRAM] int 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;		None
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  2    0[COMRAM] int 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9610 ;;      Params:         2       0       0       0       0       0       0
  9611 ;;      Locals:         0       0       0       0       0       0       0
  9612 ;;      Temps:          4       0       0       0       0       0       0
  9613 ;;      Totals:         6       0       0       0       0       0       0
  9614 ;;Total ram usage:        6 bytes
  9615 ;; Hardware stack levels used: 1
  9616 ;; This function calls:
  9617 ;;		Nothing
  9618 ;; This function is called by:
  9619 ;;		i2_vfpfcnvrt
  9620 ;;		i2_atoi
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text61
  9625  0031DC                     __ptext61:
  9626                           	callstack 0
  9627  0031DC                     i2_isdigit:
  9628                           	callstack 16
  9629  0031DC  0ED0               	movlw	208
  9630  0031DE  6E03               	movwf	??i2_isdigit^0,c
  9631  0031E0  0EFF               	movlw	255
  9632  0031E2  6E04               	movwf	(??i2_isdigit+1)^0,c
  9633  0031E4  C001  F005         	movff	i2isdigit@c,??i2_isdigit+2
  9634  0031E8  C002  F006         	movff	i2isdigit@c+1,??i2_isdigit+3
  9635  0031EC  5003               	movf	??i2_isdigit^0,w,c
  9636  0031EE  2605               	addwf	(??i2_isdigit+2)^0,f,c
  9637  0031F0  5004               	movf	(??i2_isdigit+1)^0,w,c
  9638  0031F2  2206               	addwfc	(??i2_isdigit+3)^0,f,c
  9639  0031F4  5006               	movf	(??i2_isdigit+3)^0,w,c
  9640  0031F6  E10A               	bnz	i2u223_40
  9641  0031F8  0E0A               	movlw	10
  9642  0031FA  5C05               	subwf	(??i2_isdigit+2)^0,w,c
  9643  0031FC  A0D8               	btfss	status,0,c
  9644  0031FE  EF03  F019         	goto	i2u223_41
  9645  003202  EF06  F019         	goto	i2u223_40
  9646  003206                     i2u223_41:
  9647  003206  0E01               	movlw	1
  9648  003208  EF07  F019         	goto	i2u224_40
  9649  00320C                     i2u223_40:
  9650  00320C  0E00               	movlw	0
  9651  00320E                     i2u224_40:
  9652  00320E  6E01               	movwf	?i2_isdigit^0,c
  9653  003210  6A02               	clrf	(?i2_isdigit+1)^0,c
  9654  003212  0012               	return		;funcret
  9655  003214                     __end_ofi2_isdigit:
  9656                           	callstack 0
  9657                           
  9658 ;; *************** function i2___wmul *****************
  9659 ;; Defined at:
  9660 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;  multiplier      2    0[COMRAM] unsigned int 
  9663 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;  product         2    4[COMRAM] unsigned int 
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  2    0[COMRAM] unsigned int 
  9668 ;; Registers used:
  9669 ;;		wreg, status,2, status,0, prodl, prodh
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9675 ;;      Params:         4       0       0       0       0       0       0
  9676 ;;      Locals:         2       0       0       0       0       0       0
  9677 ;;      Temps:          0       0       0       0       0       0       0
  9678 ;;      Totals:         6       0       0       0       0       0       0
  9679 ;;Total ram usage:        6 bytes
  9680 ;; Hardware stack levels used: 1
  9681 ;; This function calls:
  9682 ;;		Nothing
  9683 ;; This function is called by:
  9684 ;;		i2_atoi
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687                           
  9688                           	psect	text62
  9689  0033BE                     __ptext62:
  9690                           	callstack 0
  9691  0033BE                     i2___wmul:
  9692                           	callstack 15
  9693  0033BE  5001               	movf	i2___wmul@multiplier^0,w,c
  9694  0033C0  0203               	mulwf	i2___wmul@multiplicand^0,c
  9695  0033C2  CFF3 F005          	movff	prodl,i2___wmul@product
  9696  0033C6  CFF4 F006          	movff	prodh,i2___wmul@product+1
  9697  0033CA  5001               	movf	i2___wmul@multiplier^0,w,c
  9698  0033CC  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  9699  0033CE  50F3               	movf	243,w,c
  9700  0033D0  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9701  0033D2  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  9702  0033D4  0203               	mulwf	i2___wmul@multiplicand^0,c
  9703  0033D6  50F3               	movf	243,w,c
  9704  0033D8  2606               	addwf	(i2___wmul@product+1)^0,f,c
  9705  0033DA  C005  F001         	movff	i2___wmul@product,?i2___wmul
  9706  0033DE  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  9707  0033E2  0012               	return		;funcret
  9708  0033E4                     __end_ofi2___wmul:
  9709                           	callstack 0
  9710                           
  9711 ;; *************** function i2_lcd1602_print *****************
  9712 ;; Defined at:
  9713 ;;		line 112 in file "src/lcd1602.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;  str             2    1[COMRAM] PTR unsigned char 
  9716 ;;		 -> temp(16), 
  9717 ;;  length          2    3[COMRAM] int 
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;  i               2    6[COMRAM] int 
  9720 ;; Return value:  Size  Location     Type
  9721 ;;                  1    wreg      void 
  9722 ;; Registers used:
  9723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9724 ;; Tracked objects:
  9725 ;;		On entry : 0/0
  9726 ;;		On exit  : 0/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9729 ;;      Params:         4       0       0       0       0       0       0
  9730 ;;      Locals:         2       0       0       0       0       0       0
  9731 ;;      Temps:          1       0       0       0       0       0       0
  9732 ;;      Totals:         7       0       0       0       0       0       0
  9733 ;;Total ram usage:        7 bytes
  9734 ;; Hardware stack levels used: 1
  9735 ;; Hardware stack levels required when called: 1
  9736 ;; This function calls:
  9737 ;;		i2_lcd1602_displaychar
  9738 ;; This function is called by:
  9739 ;;		_printDate
  9740 ;;		_printTime
  9741 ;; This function uses a non-reentrant model
  9742 ;;
  9743                           
  9744                           	psect	text63
  9745  0030E6                     __ptext63:
  9746                           	callstack 0
  9747  0030E6                     i2_lcd1602_print:
  9748                           	callstack 18
  9749  0030E6                     
  9750                           ;src/lcd1602.c: 113:     for(int i = 0; i < length; i++){
  9751  0030E6  0E00               	movlw	0
  9752  0030E8  6E08               	movwf	(i2lcd1602_print@i+1)^0,c
  9753  0030EA  0E00               	movlw	0
  9754  0030EC  6E07               	movwf	i2lcd1602_print@i^0,c
  9755  0030EE  EF84  F018         	goto	i2l3671
  9756  0030F2                     i2l3667:
  9757                           
  9758                           ;src/lcd1602.c: 114:         lcd1602_displaychar(str[i]);
  9759  0030F2  5007               	movf	i2lcd1602_print@i^0,w,c
  9760  0030F4  2402               	addwf	i2lcd1602_print@str^0,w,c
  9761  0030F6  6ED9               	movwf	fsr2l,c
  9762  0030F8  5008               	movf	(i2lcd1602_print@i+1)^0,w,c
  9763  0030FA  2003               	addwfc	(i2lcd1602_print@str+1)^0,w,c
  9764  0030FC  6EDA               	movwf	fsr2h,c
  9765  0030FE  50DF               	movf	indf2,w,c
  9766  003100  EC4C  F01A         	call	i2_lcd1602_displaychar
  9767  003104                     
  9768                           ;src/lcd1602.c: 115:     }
  9769  003104  4A07               	infsnz	i2lcd1602_print@i^0,f,c
  9770  003106  2A08               	incf	(i2lcd1602_print@i+1)^0,f,c
  9771  003108                     i2l3671:
  9772  003108  5004               	movf	i2lcd1602_print@length^0,w,c
  9773  00310A  5C07               	subwf	i2lcd1602_print@i^0,w,c
  9774  00310C  5008               	movf	(i2lcd1602_print@i+1)^0,w,c
  9775  00310E  0A80               	xorlw	128
  9776  003110  6E06               	movwf	??i2_lcd1602_print^0,c
  9777  003112  5005               	movf	(i2lcd1602_print@length+1)^0,w,c
  9778  003114  0A80               	xorlw	128
  9779  003116  5806               	subwfb	??i2_lcd1602_print^0,w,c
  9780  003118  A0D8               	btfss	status,0,c
  9781  00311A  EF91  F018         	goto	i2u347_41
  9782  00311E  EF93  F018         	goto	i2u347_40
  9783  003122                     i2u347_41:
  9784  003122  EF79  F018         	goto	i2l3667
  9785  003126                     i2u347_40:
  9786  003126  0012               	return		;funcret
  9787  003128                     __end_ofi2_lcd1602_print:
  9788                           	callstack 0
  9789                           
  9790 ;; *************** function i2_lcd1602_displaychar *****************
  9791 ;; Defined at:
  9792 ;;		line 129 in file "src/lcd1602.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;  value           1    wreg     unsigned char 
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;  value           1    0[COMRAM] unsigned char 
  9797 ;; Return value:  Size  Location     Type
  9798 ;;                  1    wreg      void 
  9799 ;; Registers used:
  9800 ;;		wreg, status,2, cstack
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9806 ;;      Params:         0       0       0       0       0       0       0
  9807 ;;      Locals:         1       0       0       0       0       0       0
  9808 ;;      Temps:          0       0       0       0       0       0       0
  9809 ;;      Totals:         1       0       0       0       0       0       0
  9810 ;;Total ram usage:        1 bytes
  9811 ;; Hardware stack levels used: 1
  9812 ;; This function calls:
  9813 ;;		Nothing
  9814 ;; This function is called by:
  9815 ;;		i2_lcd1602_print
  9816 ;; This function uses a non-reentrant model
  9817 ;;
  9818                           
  9819                           	psect	text64
  9820  003498                     __ptext64:
  9821                           	callstack 0
  9822  003498                     i2_lcd1602_displaychar:
  9823                           	callstack 18
  9824                           
  9825                           ;incstack = 0
  9826                           ;i2lcd1602_displaychar@value stored from wreg
  9827  003498  6E01               	movwf	i2lcd1602_displaychar@value^0,c
  9828  00349A                     
  9829                           ;src/lcd1602.c: 130:     LATD = value;
  9830  00349A  C001  FF8C         	movff	i2lcd1602_displaychar@value,3980	;volatile
  9831  00349E                     
  9832                           ;src/lcd1602.c: 134:     PORTA = 0x05;
  9833  00349E  0E05               	movlw	5
  9834  0034A0  6E80               	movwf	128,c	;volatile
  9835  0034A2                     
  9836                           ;src/lcd1602.c: 135:     _delay((unsigned long)((4)*(1000000/4000.0)));
  9837  0034A2  0EC8               	movlw	200
  9838  0034A4                     i2u397_47:
  9839  0034A4  D000               	nop2	
  9840  0034A6  2EE8               	decfsz	wreg,f,c
  9841  0034A8  D7FD               	bra	i2u397_47
  9842  0034AA                     
  9843                           ;src/lcd1602.c: 137:     PORTA = 0x01;
  9844  0034AA  0E01               	movlw	1
  9845  0034AC  6E80               	movwf	128,c	;volatile
  9846  0034AE  0012               	return		;funcret
  9847  0034B0                     __end_ofi2_lcd1602_displaychar:
  9848                           	callstack 0
  9849                           
  9850 ;; *************** function i2_lcd1602_home *****************
  9851 ;; Defined at:
  9852 ;;		line 38 in file "src/lcd1602.c"
  9853 ;; Parameters:    Size  Location     Type
  9854 ;;		None
  9855 ;; Auto vars:     Size  Location     Type
  9856 ;;		None
  9857 ;; Return value:  Size  Location     Type
  9858 ;;                  1    wreg      void 
  9859 ;; Registers used:
  9860 ;;		wreg, status,2, cstack
  9861 ;; Tracked objects:
  9862 ;;		On entry : 0/0
  9863 ;;		On exit  : 0/0
  9864 ;;		Unchanged: 0/0
  9865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9866 ;;      Params:         0       0       0       0       0       0       0
  9867 ;;      Locals:         0       0       0       0       0       0       0
  9868 ;;      Temps:          0       0       0       0       0       0       0
  9869 ;;      Totals:         0       0       0       0       0       0       0
  9870 ;;Total ram usage:        0 bytes
  9871 ;; Hardware stack levels used: 1
  9872 ;; Hardware stack levels required when called: 1
  9873 ;; This function calls:
  9874 ;;		i2_lcd1602_cmd
  9875 ;; This function is called by:
  9876 ;;		_printDate
  9877 ;;		_myISR
  9878 ;; This function uses a non-reentrant model
  9879 ;;
  9880                           
  9881                           	psect	text65
  9882  003566                     __ptext65:
  9883                           	callstack 0
  9884  003566                     i2_lcd1602_home:
  9885                           	callstack 19
  9886  003566                     
  9887                           ;src/lcd1602.c: 39:     lcd1602_cmd(0x02);
  9888  003566  0E02               	movlw	2
  9889  003568  EC58  F01A         	call	i2_lcd1602_cmd
  9890  00356C  0012               	return		;funcret
  9891  00356E                     __end_ofi2_lcd1602_home:
  9892                           	callstack 0
  9893                           
  9894 ;; *************** function _lcd1602_noBlink *****************
  9895 ;; Defined at:
  9896 ;;		line 74 in file "src/lcd1602.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;		None
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;		None
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  1    wreg      void 
  9903 ;; Registers used:
  9904 ;;		wreg, status,2, status,0, cstack
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9910 ;;      Params:         0       0       0       0       0       0       0
  9911 ;;      Locals:         0       0       0       0       0       0       0
  9912 ;;      Temps:          0       0       0       0       0       0       0
  9913 ;;      Totals:         0       0       0       0       0       0       0
  9914 ;;Total ram usage:        0 bytes
  9915 ;; Hardware stack levels used: 1
  9916 ;; Hardware stack levels required when called: 1
  9917 ;; This function calls:
  9918 ;;		i2_lcd1602_cmd
  9919 ;; This function is called by:
  9920 ;;		_printDate
  9921 ;;		_printTime
  9922 ;;		_myISR
  9923 ;; This function uses a non-reentrant model
  9924 ;;
  9925                           
  9926                           	psect	text66
  9927  003512                     __ptext66:
  9928                           	callstack 0
  9929  003512                     _lcd1602_noBlink:
  9930                           	callstack 18
  9931  003512                     
  9932                           ;src/lcd1602.c: 75:     _displaycontrol &= ~0x01;
  9933  003512  907E               	bcf	__displaycontrol^0,0,c
  9934  003514                     
  9935                           ;src/lcd1602.c: 76:     lcd1602_cmd(0x08 | _displaycontrol);
  9936  003514  507E               	movf	__displaycontrol^0,w,c
  9937  003516  0908               	iorlw	8
  9938  003518  EC58  F01A         	call	i2_lcd1602_cmd
  9939  00351C  0012               	return		;funcret
  9940  00351E                     __end_of_lcd1602_noBlink:
  9941                           	callstack 0
  9942                           
  9943 ;; *************** function _PCF8563_setDate *****************
  9944 ;; Defined at:
  9945 ;;		line 38 in file "src/pcf8563.c"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;  year            2   12[COMRAM] unsigned short 
  9948 ;;  mon             1   14[COMRAM] unsigned char 
  9949 ;;  day             1   15[COMRAM] unsigned char 
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;		None
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      void 
  9954 ;; Registers used:
  9955 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9961 ;;      Params:         4       0       0       0       0       0       0
  9962 ;;      Locals:         4       0       0       0       0       0       0
  9963 ;;      Temps:          2       0       0       0       0       0       0
  9964 ;;      Totals:        10       0       0       0       0       0       0
  9965 ;;Total ram usage:       10 bytes
  9966 ;; Hardware stack levels used: 1
  9967 ;; Hardware stack levels required when called: 3
  9968 ;; This function calls:
  9969 ;;		___awdiv
  9970 ;;		___awmod
  9971 ;;		___lwdiv
  9972 ;;		___lwmod
  9973 ;;		i2_setI2C
  9974 ;; This function is called by:
  9975 ;;		_printDate
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           	psect	text67
  9980  002264                     __ptext67:
  9981                           	callstack 0
  9982  002264                     _PCF8563_setDate:
  9983                           	callstack 16
  9984  002264                     
  9985                           ;src/pcf8563.c: 39:     year = ( ( ((year % 100)/10) << 4) + ((year % 100)%10) );
  9986  002264  0E00               	movlw	0
  9987  002266  6E04               	movwf	(___lwmod@divisor+1)^0,c
  9988  002268  0E64               	movlw	100
  9989  00226A  6E03               	movwf	___lwmod@divisor^0,c
  9990  00226C  C00D  F001         	movff	PCF8563_setDate@year,___lwmod@dividend
  9991  002270  C00E  F002         	movff	PCF8563_setDate@year+1,___lwmod@dividend+1
  9992  002274  EC5A  F016         	call	___lwmod	;wreg free
  9993  002278  C001  F013         	movff	?___lwmod,_PCF8563_setDate$1290
  9994  00227C  C002  F014         	movff	?___lwmod+1,_PCF8563_setDate$1290+1
  9995                           
  9996                           ;src/pcf8563.c: 39:     year = ( ( ((year % 100)/10) << 4) + ((year % 100)%10) );
  9997  002280  0E00               	movlw	0
  9998  002282  6E04               	movwf	(___lwmod@divisor+1)^0,c
  9999  002284  0E64               	movlw	100
 10000  002286  6E03               	movwf	___lwmod@divisor^0,c
 10001  002288  C00D  F001         	movff	PCF8563_setDate@year,___lwmod@dividend
 10002  00228C  C00E  F002         	movff	PCF8563_setDate@year+1,___lwmod@dividend+1
 10003  002290  EC5A  F016         	call	___lwmod	;wreg free
 10004  002294  C001  F006         	movff	?___lwmod,___lwdiv@dividend
 10005  002298  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
 10006  00229C  0E00               	movlw	0
 10007  00229E  6E09               	movwf	(___lwdiv@divisor+1)^0,c
 10008  0022A0  0E0A               	movlw	10
 10009  0022A2  6E08               	movwf	___lwdiv@divisor^0,c
 10010  0022A4  ECB3  F015         	call	___lwdiv	;wreg free
 10011  0022A8  C006  F011         	movff	?___lwdiv,??_PCF8563_setDate
 10012  0022AC  C007  F012         	movff	?___lwdiv+1,??_PCF8563_setDate+1
 10013  0022B0  3A11               	swapf	??_PCF8563_setDate^0,f,c
 10014  0022B2  3A12               	swapf	(??_PCF8563_setDate+1)^0,f,c
 10015  0022B4  0EF0               	movlw	240
 10016  0022B6  1612               	andwf	(??_PCF8563_setDate+1)^0,f,c
 10017  0022B8  5011               	movf	??_PCF8563_setDate^0,w,c
 10018  0022BA  0B0F               	andlw	15
 10019  0022BC  1212               	iorwf	(??_PCF8563_setDate+1)^0,f,c
 10020  0022BE  0EF0               	movlw	240
 10021  0022C0  1611               	andwf	??_PCF8563_setDate^0,f,c
 10022  0022C2  C013  F001         	movff	_PCF8563_setDate$1290,___lwmod@dividend
 10023  0022C6  C014  F002         	movff	_PCF8563_setDate$1290+1,___lwmod@dividend+1
 10024  0022CA  0E00               	movlw	0
 10025  0022CC  6E04               	movwf	(___lwmod@divisor+1)^0,c
 10026  0022CE  0E0A               	movlw	10
 10027  0022D0  6E03               	movwf	___lwmod@divisor^0,c
 10028  0022D2  EC5A  F016         	call	___lwmod	;wreg free
 10029  0022D6  5001               	movf	?___lwmod^0,w,c
 10030  0022D8  2411               	addwf	??_PCF8563_setDate^0,w,c
 10031  0022DA  6E0D               	movwf	PCF8563_setDate@year^0,c
 10032  0022DC  5002               	movf	(?___lwmod+1)^0,w,c
 10033  0022DE  2012               	addwfc	(??_PCF8563_setDate+1)^0,w,c
 10034  0022E0  6E0E               	movwf	(PCF8563_setDate@year+1)^0,c
 10035  0022E2                     
 10036                           ;src/pcf8563.c: 40:     mon = ( ( ((mon)/10) << 4) + ((mon)%10) ) | ((year > 1999) ? 0x8
      +                          0 : 0x00);
 10037  0022E2  0ED0               	movlw	208
 10038  0022E4  5C0D               	subwf	PCF8563_setDate@year^0,w,c
 10039  0022E6  0E07               	movlw	7
 10040  0022E8  580E               	subwfb	(PCF8563_setDate@year+1)^0,w,c
 10041  0022EA  B0D8               	btfsc	status,0,c
 10042  0022EC  EF7A  F011         	goto	i2u332_41
 10043  0022F0  EF7C  F011         	goto	i2u332_40
 10044  0022F4                     i2u332_41:
 10045  0022F4  EF82  F011         	goto	i2l3515
 10046  0022F8                     i2u332_40:
 10047  0022F8  0E00               	movlw	0
 10048  0022FA  6E16               	movwf	(_PCF8563_setDate$87+1)^0,c
 10049  0022FC  0E00               	movlw	0
 10050  0022FE  6E15               	movwf	_PCF8563_setDate$87^0,c
 10051  002300  EF86  F011         	goto	i2l3517
 10052  002304                     i2l3515:
 10053  002304  0E00               	movlw	0
 10054  002306  6E16               	movwf	(_PCF8563_setDate$87+1)^0,c
 10055  002308  0E80               	movlw	128
 10056  00230A  6E15               	movwf	_PCF8563_setDate$87^0,c
 10057  00230C                     i2l3517:
 10058  00230C  C00F  F001         	movff	PCF8563_setDate@mon,___awmod@dividend
 10059  002310  6A02               	clrf	(___awmod@dividend+1)^0,c
 10060  002312  0E00               	movlw	0
 10061  002314  6E04               	movwf	(___awmod@divisor+1)^0,c
 10062  002316  0E0A               	movlw	10
 10063  002318  6E03               	movwf	___awmod@divisor^0,c
 10064  00231A  EC88  F014         	call	___awmod	;wreg free
 10065  00231E  C001  F011         	movff	?___awmod,??_PCF8563_setDate
 10066  002322  C002  F012         	movff	?___awmod+1,??_PCF8563_setDate+1
 10067  002326  C00F  F001         	movff	PCF8563_setDate@mon,___awdiv@dividend
 10068  00232A  6A02               	clrf	(___awdiv@dividend+1)^0,c
 10069  00232C  0E00               	movlw	0
 10070  00232E  6E04               	movwf	(___awdiv@divisor+1)^0,c
 10071  002330  0E0A               	movlw	10
 10072  002332  6E03               	movwf	___awdiv@divisor^0,c
 10073  002334  ECCA  F013         	call	___awdiv	;wreg free
 10074  002338  5001               	movf	?___awdiv^0,w,c
 10075  00233A  0D10               	mullw	16
 10076  00233C  50F3               	movf	243,w,c
 10077  00233E  2411               	addwf	??_PCF8563_setDate^0,w,c
 10078  002340  1015               	iorwf	_PCF8563_setDate$87^0,w,c
 10079  002342  6E0F               	movwf	PCF8563_setDate@mon^0,c
 10080  002344                     
 10081                           ;src/pcf8563.c: 41:     day = ( ( ((day)/10) << 4) + ((day)%10) );
 10082  002344  C010  F001         	movff	PCF8563_setDate@day,___awmod@dividend
 10083  002348  6A02               	clrf	(___awmod@dividend+1)^0,c
 10084  00234A  0E00               	movlw	0
 10085  00234C  6E04               	movwf	(___awmod@divisor+1)^0,c
 10086  00234E  0E0A               	movlw	10
 10087  002350  6E03               	movwf	___awmod@divisor^0,c
 10088  002352  EC88  F014         	call	___awmod	;wreg free
 10089  002356  C001  F011         	movff	?___awmod,??_PCF8563_setDate
 10090  00235A  C002  F012         	movff	?___awmod+1,??_PCF8563_setDate+1
 10091  00235E  C010  F001         	movff	PCF8563_setDate@day,___awdiv@dividend
 10092  002362  6A02               	clrf	(___awdiv@dividend+1)^0,c
 10093  002364  0E00               	movlw	0
 10094  002366  6E04               	movwf	(___awdiv@divisor+1)^0,c
 10095  002368  0E0A               	movlw	10
 10096  00236A  6E03               	movwf	___awdiv@divisor^0,c
 10097  00236C  ECCA  F013         	call	___awdiv	;wreg free
 10098  002370  5001               	movf	?___awdiv^0,w,c
 10099  002372  0D10               	mullw	16
 10100  002374  50F3               	movf	243,w,c
 10101  002376  2411               	addwf	??_PCF8563_setDate^0,w,c
 10102  002378  6E10               	movwf	PCF8563_setDate@day^0,c
 10103  00237A                     
 10104                           ;src/pcf8563.c: 43:     setI2C(0x08, year);
 10105  00237A  C00D  F009         	movff	PCF8563_setDate@year,i2setI2C@data
 10106  00237E  0E08               	movlw	8
 10107  002380  EC17  F01A         	call	i2_setI2C
 10108  002384                     
 10109                           ;src/pcf8563.c: 44:     setI2C(0x07, mon);
 10110  002384  C00F  F009         	movff	PCF8563_setDate@mon,i2setI2C@data
 10111  002388  0E07               	movlw	7
 10112  00238A  EC17  F01A         	call	i2_setI2C
 10113  00238E                     
 10114                           ;src/pcf8563.c: 45:     setI2C(0x05, day);
 10115  00238E  C010  F009         	movff	PCF8563_setDate@day,i2setI2C@data
 10116  002392  0E05               	movlw	5
 10117  002394  EC17  F01A         	call	i2_setI2C
 10118  002398  0012               	return		;funcret
 10119  00239A                     __end_of_PCF8563_setDate:
 10120                           	callstack 0
 10121                           
 10122 ;; *************** function i2_setI2C *****************
 10123 ;; Defined at:
 10124 ;;		line 10 in file "src/pcf8563.c"
 10125 ;; Parameters:    Size  Location     Type
 10126 ;;  reg             1    wreg     unsigned char 
 10127 ;;  data            1    8[COMRAM] unsigned char 
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;  reg             1    9[COMRAM] unsigned char 
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  1    wreg      void 
 10132 ;; Registers used:
 10133 ;;		wreg, status,2, status,0, cstack
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10139 ;;      Params:         1       0       0       0       0       0       0
 10140 ;;      Locals:         1       0       0       0       0       0       0
 10141 ;;      Temps:          0       0       0       0       0       0       0
 10142 ;;      Totals:         2       0       0       0       0       0       0
 10143 ;;Total ram usage:        2 bytes
 10144 ;; Hardware stack levels used: 1
 10145 ;; Hardware stack levels required when called: 2
 10146 ;; This function calls:
 10147 ;;		i2_I2C_Master_Start
 10148 ;;		i2_I2C_Master_Stop
 10149 ;;		i2_I2C_Master_Write
 10150 ;; This function is called by:
 10151 ;;		_PCF8563_setDate
 10152 ;;		_PCF8563_setTime
 10153 ;; This function uses a non-reentrant model
 10154 ;;
 10155                           
 10156                           	psect	text68
 10157  00342E                     __ptext68:
 10158                           	callstack 0
 10159  00342E                     i2_setI2C:
 10160                           	callstack 16
 10161                           
 10162                           ;incstack = 0
 10163                           ;i2setI2C@reg stored from wreg
 10164  00342E  6E0A               	movwf	i2setI2C@reg^0,c
 10165  003430                     
 10166                           ;src/pcf8563.c: 11:     I2C_Master_Start();
 10167  003430  ECBB  F01A         	call	i2_I2C_Master_Start	;wreg free
 10168                           
 10169                           ;src/pcf8563.c: 13:     I2C_Master_Write((0x51 << 1));
 10170  003434  0EA2               	movlw	162
 10171  003436  EC8F  F01A         	call	i2_I2C_Master_Write
 10172                           
 10173                           ;src/pcf8563.c: 14:     I2C_Master_Write(reg);
 10174  00343A  500A               	movf	i2setI2C@reg^0,w,c
 10175  00343C  EC8F  F01A         	call	i2_I2C_Master_Write
 10176                           
 10177                           ;src/pcf8563.c: 15:     I2C_Master_Write(data);
 10178  003440  5009               	movf	i2setI2C@data^0,w,c
 10179  003442  EC8F  F01A         	call	i2_I2C_Master_Write
 10180                           
 10181                           ;src/pcf8563.c: 17:     I2C_Master_Stop();
 10182  003446  ECB7  F01A         	call	i2_I2C_Master_Stop	;wreg free
 10183  00344A  0012               	return		;funcret
 10184  00344C                     __end_ofi2_setI2C:
 10185                           	callstack 0
 10186                           
 10187 ;; *************** function i2_I2C_Master_Write *****************
 10188 ;; Defined at:
 10189 ;;		line 56 in file "src/i2c.c"
 10190 ;; Parameters:    Size  Location     Type
 10191 ;;  d               1    wreg     unsigned char 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;  d               1    1[COMRAM] unsigned char 
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  1    wreg      void 
 10196 ;; Registers used:
 10197 ;;		wreg, status,2, status,0, cstack
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10203 ;;      Params:         0       0       0       0       0       0       0
 10204 ;;      Locals:         1       0       0       0       0       0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0
 10206 ;;      Totals:         1       0       0       0       0       0       0
 10207 ;;Total ram usage:        1 bytes
 10208 ;; Hardware stack levels used: 1
 10209 ;; Hardware stack levels required when called: 1
 10210 ;; This function calls:
 10211 ;;		i2_I2C_Master_Wait
 10212 ;; This function is called by:
 10213 ;;		i2_setI2C
 10214 ;; This function uses a non-reentrant model
 10215 ;;
 10216                           
 10217                           	psect	text69
 10218  00351E                     __ptext69:
 10219                           	callstack 0
 10220  00351E                     i2_I2C_Master_Write:
 10221                           	callstack 16
 10222                           
 10223                           ;incstack = 0
 10224                           ;i2I2C_Master_Write@d stored from wreg
 10225  00351E  6E02               	movwf	i2I2C_Master_Write@d^0,c
 10226  003520                     
 10227                           ;src/i2c.c: 57:     I2C_Master_Wait();
 10228  003520  ECF2  F019         	call	i2_I2C_Master_Wait	;wreg free
 10229  003524                     
 10230                           ;src/i2c.c: 58:     SSPBUF = d;
 10231  003524  C002  FFC9         	movff	i2I2C_Master_Write@d,4041	;volatile
 10232  003528  0012               	return		;funcret
 10233  00352A                     __end_ofi2_I2C_Master_Write:
 10234                           	callstack 0
 10235                           
 10236 ;; *************** function i2_I2C_Master_Stop *****************
 10237 ;; Defined at:
 10238 ;;		line 51 in file "src/i2c.c"
 10239 ;; Parameters:    Size  Location     Type
 10240 ;;		None
 10241 ;; Auto vars:     Size  Location     Type
 10242 ;;		None
 10243 ;; Return value:  Size  Location     Type
 10244 ;;                  1    wreg      void 
 10245 ;; Registers used:
 10246 ;;		wreg, status,2, status,0, cstack
 10247 ;; Tracked objects:
 10248 ;;		On entry : 0/0
 10249 ;;		On exit  : 0/0
 10250 ;;		Unchanged: 0/0
 10251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10252 ;;      Params:         0       0       0       0       0       0       0
 10253 ;;      Locals:         0       0       0       0       0       0       0
 10254 ;;      Temps:          0       0       0       0       0       0       0
 10255 ;;      Totals:         0       0       0       0       0       0       0
 10256 ;;Total ram usage:        0 bytes
 10257 ;; Hardware stack levels used: 1
 10258 ;; Hardware stack levels required when called: 1
 10259 ;; This function calls:
 10260 ;;		i2_I2C_Master_Wait
 10261 ;; This function is called by:
 10262 ;;		i2_setI2C
 10263 ;; This function uses a non-reentrant model
 10264 ;;
 10265                           
 10266                           	psect	text70
 10267  00356E                     __ptext70:
 10268                           	callstack 0
 10269  00356E                     i2_I2C_Master_Stop:
 10270                           	callstack 16
 10271  00356E                     
 10272                           ;src/i2c.c: 52:     I2C_Master_Wait();
 10273  00356E  ECF2  F019         	call	i2_I2C_Master_Wait	;wreg free
 10274  003572                     
 10275                           ;src/i2c.c: 53:     PEN = 1;
 10276  003572  84C5               	bsf	4037,2,c	;volatile
 10277  003574  0012               	return		;funcret
 10278  003576                     __end_ofi2_I2C_Master_Stop:
 10279                           	callstack 0
 10280                           
 10281 ;; *************** function i2_I2C_Master_Start *****************
 10282 ;; Defined at:
 10283 ;;		line 41 in file "src/i2c.c"
 10284 ;; Parameters:    Size  Location     Type
 10285 ;;		None
 10286 ;; Auto vars:     Size  Location     Type
 10287 ;;		None
 10288 ;; Return value:  Size  Location     Type
 10289 ;;                  1    wreg      void 
 10290 ;; Registers used:
 10291 ;;		wreg, status,2, status,0, cstack
 10292 ;; Tracked objects:
 10293 ;;		On entry : 0/0
 10294 ;;		On exit  : 0/0
 10295 ;;		Unchanged: 0/0
 10296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10297 ;;      Params:         0       0       0       0       0       0       0
 10298 ;;      Locals:         0       0       0       0       0       0       0
 10299 ;;      Temps:          0       0       0       0       0       0       0
 10300 ;;      Totals:         0       0       0       0       0       0       0
 10301 ;;Total ram usage:        0 bytes
 10302 ;; Hardware stack levels used: 1
 10303 ;; Hardware stack levels required when called: 1
 10304 ;; This function calls:
 10305 ;;		i2_I2C_Master_Wait
 10306 ;; This function is called by:
 10307 ;;		i2_setI2C
 10308 ;; This function uses a non-reentrant model
 10309 ;;
 10310                           
 10311                           	psect	text71
 10312  003576                     __ptext71:
 10313                           	callstack 0
 10314  003576                     i2_I2C_Master_Start:
 10315                           	callstack 16
 10316  003576                     
 10317                           ;src/i2c.c: 42:     I2C_Master_Wait();
 10318  003576  ECF2  F019         	call	i2_I2C_Master_Wait	;wreg free
 10319  00357A                     
 10320                           ;src/i2c.c: 43:     SEN = 1;
 10321  00357A  80C5               	bsf	4037,0,c	;volatile
 10322  00357C  0012               	return		;funcret
 10323  00357E                     __end_ofi2_I2C_Master_Start:
 10324                           	callstack 0
 10325                           
 10326 ;; *************** function i2_I2C_Master_Wait *****************
 10327 ;; Defined at:
 10328 ;;		line 37 in file "src/i2c.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;		None
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;		None
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      void 
 10335 ;; Registers used:
 10336 ;;		wreg, status,2, status,0
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10342 ;;      Params:         0       0       0       0       0       0       0
 10343 ;;      Locals:         0       0       0       0       0       0       0
 10344 ;;      Temps:          1       0       0       0       0       0       0
 10345 ;;      Totals:         1       0       0       0       0       0       0
 10346 ;;Total ram usage:        1 bytes
 10347 ;; Hardware stack levels used: 1
 10348 ;; This function calls:
 10349 ;;		Nothing
 10350 ;; This function is called by:
 10351 ;;		i2_I2C_Master_Start
 10352 ;;		i2_I2C_Master_Stop
 10353 ;;		i2_I2C_Master_Write
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           	psect	text72
 10358  0033E4                     __ptext72:
 10359                           	callstack 0
 10360  0033E4                     i2_I2C_Master_Wait:
 10361                           	callstack 16
 10362  0033E4                     i2l37:
 10363  0033E4  B4C7               	btfsc	199,2,c	;volatile
 10364  0033E6  EFF7  F019         	goto	i2u229_41
 10365  0033EA  EFF9  F019         	goto	i2u229_40
 10366  0033EE                     i2u229_41:
 10367  0033EE  EFF2  F019         	goto	i2l37
 10368  0033F2                     i2u229_40:
 10369  0033F2  CFC5 F001          	movff	4037,??i2_I2C_Master_Wait	;volatile
 10370  0033F6  0E1F               	movlw	31
 10371  0033F8  1601               	andwf	??i2_I2C_Master_Wait^0,f,c
 10372  0033FA  A4D8               	btfss	status,2,c
 10373  0033FC  EF02  F01A         	goto	i2u230_41
 10374  003400  EF04  F01A         	goto	i2u230_40
 10375  003404                     i2u230_41:
 10376  003404  EFF2  F019         	goto	i2l37
 10377  003408                     i2u230_40:
 10378  003408  0012               	return		;funcret
 10379  00340A                     __end_ofi2_I2C_Master_Wait:
 10380                           	callstack 0
 10381                           
 10382 ;; *************** function ___lwmod *****************
 10383 ;; Defined at:
 10384 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;  dividend        2    0[COMRAM] unsigned int 
 10387 ;;  divisor         2    2[COMRAM] unsigned int 
 10388 ;; Auto vars:     Size  Location     Type
 10389 ;;  counter         1    4[COMRAM] unsigned char 
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  2    0[COMRAM] unsigned int 
 10392 ;; Registers used:
 10393 ;;		wreg, status,2, status,0
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10399 ;;      Params:         4       0       0       0       0       0       0
 10400 ;;      Locals:         1       0       0       0       0       0       0
 10401 ;;      Temps:          0       0       0       0       0       0       0
 10402 ;;      Totals:         5       0       0       0       0       0       0
 10403 ;;Total ram usage:        5 bytes
 10404 ;; Hardware stack levels used: 1
 10405 ;; This function calls:
 10406 ;;		Nothing
 10407 ;; This function is called by:
 10408 ;;		_PCF8563_setDate
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           	psect	text73
 10413  002CB4                     __ptext73:
 10414                           	callstack 0
 10415  002CB4                     ___lwmod:
 10416                           	callstack 18
 10417  002CB4  5003               	movf	___lwmod@divisor^0,w,c
 10418  002CB6  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
 10419  002CB8  B4D8               	btfsc	status,2,c
 10420  002CBA  EF61  F016         	goto	i2u303_41
 10421  002CBE  EF63  F016         	goto	i2u303_40
 10422  002CC2                     i2u303_41:
 10423  002CC2  EF87  F016         	goto	i2l846
 10424  002CC6                     i2u303_40:
 10425  002CC6  0E01               	movlw	1
 10426  002CC8  6E05               	movwf	___lwmod@counter^0,c
 10427  002CCA  EF6B  F016         	goto	i2l3343
 10428  002CCE                     i2l3341:
 10429  002CCE  90D8               	bcf	status,0,c
 10430  002CD0  3603               	rlcf	___lwmod@divisor^0,f,c
 10431  002CD2  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
 10432  002CD4  2A05               	incf	___lwmod@counter^0,f,c
 10433  002CD6                     i2l3343:
 10434  002CD6  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
 10435  002CD8  EF70  F016         	goto	i2u304_41
 10436  002CDC  EF72  F016         	goto	i2u304_40
 10437  002CE0                     i2u304_41:
 10438  002CE0  EF67  F016         	goto	i2l3341
 10439  002CE4                     i2u304_40:
 10440  002CE4                     i2l3345:
 10441  002CE4  5003               	movf	___lwmod@divisor^0,w,c
 10442  002CE6  5C01               	subwf	___lwmod@dividend^0,w,c
 10443  002CE8  5004               	movf	(___lwmod@divisor+1)^0,w,c
 10444  002CEA  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
 10445  002CEC  A0D8               	btfss	status,0,c
 10446  002CEE  EF7B  F016         	goto	i2u305_41
 10447  002CF2  EF7D  F016         	goto	i2u305_40
 10448  002CF6                     i2u305_41:
 10449  002CF6  EF81  F016         	goto	i2l3349
 10450  002CFA                     i2u305_40:
 10451  002CFA  5003               	movf	___lwmod@divisor^0,w,c
 10452  002CFC  5E01               	subwf	___lwmod@dividend^0,f,c
 10453  002CFE  5004               	movf	(___lwmod@divisor+1)^0,w,c
 10454  002D00  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
 10455  002D02                     i2l3349:
 10456  002D02  90D8               	bcf	status,0,c
 10457  002D04  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
 10458  002D06  3203               	rrcf	___lwmod@divisor^0,f,c
 10459  002D08  2E05               	decfsz	___lwmod@counter^0,f,c
 10460  002D0A  EF72  F016         	goto	i2l3345
 10461  002D0E                     i2l846:
 10462  002D0E  C001  F001         	movff	___lwmod@dividend,?___lwmod
 10463  002D12  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 10464  002D16  0012               	return		;funcret
 10465  002D18                     __end_of___lwmod:
 10466                           	callstack 0
 10467                           
 10468 ;; *************** function ___lwdiv *****************
 10469 ;; Defined at:
 10470 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;  dividend        2    5[COMRAM] unsigned int 
 10473 ;;  divisor         2    7[COMRAM] unsigned int 
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;  quotient        2    9[COMRAM] unsigned int 
 10476 ;;  counter         1   11[COMRAM] unsigned char 
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  2    5[COMRAM] unsigned int 
 10479 ;; Registers used:
 10480 ;;		wreg, status,2, status,0
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10486 ;;      Params:         4       0       0       0       0       0       0
 10487 ;;      Locals:         3       0       0       0       0       0       0
 10488 ;;      Temps:          0       0       0       0       0       0       0
 10489 ;;      Totals:         7       0       0       0       0       0       0
 10490 ;;Total ram usage:        7 bytes
 10491 ;; Hardware stack levels used: 1
 10492 ;; This function calls:
 10493 ;;		Nothing
 10494 ;; This function is called by:
 10495 ;;		_PCF8563_setDate
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499                           	psect	text74
 10500  002B66                     __ptext74:
 10501                           	callstack 0
 10502  002B66                     ___lwdiv:
 10503                           	callstack 18
 10504  002B66  0E00               	movlw	0
 10505  002B68  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
 10506  002B6A  0E00               	movlw	0
 10507  002B6C  6E0A               	movwf	___lwdiv@quotient^0,c
 10508  002B6E  5008               	movf	___lwdiv@divisor^0,w,c
 10509  002B70  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10510  002B72  B4D8               	btfsc	status,2,c
 10511  002B74  EFBE  F015         	goto	i2u300_41
 10512  002B78  EFC0  F015         	goto	i2u300_40
 10513  002B7C                     i2u300_41:
 10514  002B7C  EFE8  F015         	goto	i2l836
 10515  002B80                     i2u300_40:
 10516  002B80  0E01               	movlw	1
 10517  002B82  6E0C               	movwf	___lwdiv@counter^0,c
 10518  002B84  EFC8  F015         	goto	i2l3323
 10519  002B88                     i2l3321:
 10520  002B88  90D8               	bcf	status,0,c
 10521  002B8A  3608               	rlcf	___lwdiv@divisor^0,f,c
 10522  002B8C  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10523  002B8E  2A0C               	incf	___lwdiv@counter^0,f,c
 10524  002B90                     i2l3323:
 10525  002B90  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
 10526  002B92  EFCD  F015         	goto	i2u301_41
 10527  002B96  EFCF  F015         	goto	i2u301_40
 10528  002B9A                     i2u301_41:
 10529  002B9A  EFC4  F015         	goto	i2l3321
 10530  002B9E                     i2u301_40:
 10531  002B9E                     i2l3325:
 10532  002B9E  90D8               	bcf	status,0,c
 10533  002BA0  360A               	rlcf	___lwdiv@quotient^0,f,c
 10534  002BA2  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10535  002BA4  5008               	movf	___lwdiv@divisor^0,w,c
 10536  002BA6  5C06               	subwf	___lwdiv@dividend^0,w,c
 10537  002BA8  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 10538  002BAA  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10539  002BAC  A0D8               	btfss	status,0,c
 10540  002BAE  EFDB  F015         	goto	i2u302_41
 10541  002BB2  EFDD  F015         	goto	i2u302_40
 10542  002BB6                     i2u302_41:
 10543  002BB6  EFE2  F015         	goto	i2l3333
 10544  002BBA                     i2u302_40:
 10545  002BBA  5008               	movf	___lwdiv@divisor^0,w,c
 10546  002BBC  5E06               	subwf	___lwdiv@dividend^0,f,c
 10547  002BBE  5009               	movf	(___lwdiv@divisor+1)^0,w,c
 10548  002BC0  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10549  002BC2  800A               	bsf	___lwdiv@quotient^0,0,c
 10550  002BC4                     i2l3333:
 10551  002BC4  90D8               	bcf	status,0,c
 10552  002BC6  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10553  002BC8  3208               	rrcf	___lwdiv@divisor^0,f,c
 10554  002BCA  2E0C               	decfsz	___lwdiv@counter^0,f,c
 10555  002BCC  EFCF  F015         	goto	i2l3325
 10556  002BD0                     i2l836:
 10557  002BD0  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
 10558  002BD4  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10559  002BD8  0012               	return		;funcret
 10560  002BDA                     __end_of___lwdiv:
 10561                           	callstack 0
 10562                           
 10563 ;; *************** function ___awmod *****************
 10564 ;; Defined at:
 10565 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 10566 ;; Parameters:    Size  Location     Type
 10567 ;;  dividend        2    0[COMRAM] int 
 10568 ;;  divisor         2    2[COMRAM] int 
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  sign            1    5[COMRAM] unsigned char 
 10571 ;;  counter         1    4[COMRAM] unsigned char 
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  2    0[COMRAM] int 
 10574 ;; Registers used:
 10575 ;;		wreg, status,2, status,0
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10581 ;;      Params:         4       0       0       0       0       0       0
 10582 ;;      Locals:         2       0       0       0       0       0       0
 10583 ;;      Temps:          0       0       0       0       0       0       0
 10584 ;;      Totals:         6       0       0       0       0       0       0
 10585 ;;Total ram usage:        6 bytes
 10586 ;; Hardware stack levels used: 1
 10587 ;; This function calls:
 10588 ;;		Nothing
 10589 ;; This function is called by:
 10590 ;;		_PCF8563_setDate
 10591 ;;		_PCF8563_setTime
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           
 10595                           	psect	text75
 10596  002910                     __ptext75:
 10597                           	callstack 0
 10598  002910                     ___awmod:
 10599                           	callstack 18
 10600  002910  0E00               	movlw	0
 10601  002912  6E06               	movwf	___awmod@sign^0,c
 10602  002914  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 10603  002916  EF91  F014         	goto	i2u294_40
 10604  00291A  EF8F  F014         	goto	i2u294_41
 10605  00291E                     i2u294_41:
 10606  00291E  EF97  F014         	goto	i2l3287
 10607  002922                     i2u294_40:
 10608  002922  6C01               	negf	___awmod@dividend^0,c
 10609  002924  1E02               	comf	(___awmod@dividend+1)^0,f,c
 10610  002926  B0D8               	btfsc	status,0,c
 10611  002928  2A02               	incf	(___awmod@dividend+1)^0,f,c
 10612  00292A  0E01               	movlw	1
 10613  00292C  6E06               	movwf	___awmod@sign^0,c
 10614  00292E                     i2l3287:
 10615  00292E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 10616  002930  EF9E  F014         	goto	i2u295_40
 10617  002934  EF9C  F014         	goto	i2u295_41
 10618  002938                     i2u295_41:
 10619  002938  EFA2  F014         	goto	i2l3291
 10620  00293C                     i2u295_40:
 10621  00293C  6C03               	negf	___awmod@divisor^0,c
 10622  00293E  1E04               	comf	(___awmod@divisor+1)^0,f,c
 10623  002940  B0D8               	btfsc	status,0,c
 10624  002942  2A04               	incf	(___awmod@divisor+1)^0,f,c
 10625  002944                     i2l3291:
 10626  002944  5003               	movf	___awmod@divisor^0,w,c
 10627  002946  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 10628  002948  B4D8               	btfsc	status,2,c
 10629  00294A  EFA9  F014         	goto	i2u296_41
 10630  00294E  EFAB  F014         	goto	i2u296_40
 10631  002952                     i2u296_41:
 10632  002952  EFCF  F014         	goto	i2l3307
 10633  002956                     i2u296_40:
 10634  002956  0E01               	movlw	1
 10635  002958  6E05               	movwf	___awmod@counter^0,c
 10636  00295A  EFB3  F014         	goto	i2l3297
 10637  00295E                     i2l3295:
 10638  00295E  90D8               	bcf	status,0,c
 10639  002960  3603               	rlcf	___awmod@divisor^0,f,c
 10640  002962  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 10641  002964  2A05               	incf	___awmod@counter^0,f,c
 10642  002966                     i2l3297:
 10643  002966  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 10644  002968  EFB8  F014         	goto	i2u297_41
 10645  00296C  EFBA  F014         	goto	i2u297_40
 10646  002970                     i2u297_41:
 10647  002970  EFAF  F014         	goto	i2l3295
 10648  002974                     i2u297_40:
 10649  002974                     i2l3299:
 10650  002974  5003               	movf	___awmod@divisor^0,w,c
 10651  002976  5C01               	subwf	___awmod@dividend^0,w,c
 10652  002978  5004               	movf	(___awmod@divisor+1)^0,w,c
 10653  00297A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 10654  00297C  A0D8               	btfss	status,0,c
 10655  00297E  EFC3  F014         	goto	i2u298_41
 10656  002982  EFC5  F014         	goto	i2u298_40
 10657  002986                     i2u298_41:
 10658  002986  EFC9  F014         	goto	i2l3303
 10659  00298A                     i2u298_40:
 10660  00298A  5003               	movf	___awmod@divisor^0,w,c
 10661  00298C  5E01               	subwf	___awmod@dividend^0,f,c
 10662  00298E  5004               	movf	(___awmod@divisor+1)^0,w,c
 10663  002990  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 10664  002992                     i2l3303:
 10665  002992  90D8               	bcf	status,0,c
 10666  002994  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 10667  002996  3203               	rrcf	___awmod@divisor^0,f,c
 10668  002998  2E05               	decfsz	___awmod@counter^0,f,c
 10669  00299A  EFBA  F014         	goto	i2l3299
 10670  00299E                     i2l3307:
 10671  00299E  5006               	movf	___awmod@sign^0,w,c
 10672  0029A0  B4D8               	btfsc	status,2,c
 10673  0029A2  EFD5  F014         	goto	i2u299_41
 10674  0029A6  EFD7  F014         	goto	i2u299_40
 10675  0029AA                     i2u299_41:
 10676  0029AA  EFDB  F014         	goto	i2l3311
 10677  0029AE                     i2u299_40:
 10678  0029AE  6C01               	negf	___awmod@dividend^0,c
 10679  0029B0  1E02               	comf	(___awmod@dividend+1)^0,f,c
 10680  0029B2  B0D8               	btfsc	status,0,c
 10681  0029B4  2A02               	incf	(___awmod@dividend+1)^0,f,c
 10682  0029B6                     i2l3311:
 10683  0029B6  C001  F001         	movff	___awmod@dividend,?___awmod
 10684  0029BA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 10685  0029BE  0012               	return		;funcret
 10686  0029C0                     __end_of___awmod:
 10687                           	callstack 0
 10688                           
 10689 ;; *************** function ___awdiv *****************
 10690 ;; Defined at:
 10691 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 10692 ;; Parameters:    Size  Location     Type
 10693 ;;  dividend        2    0[COMRAM] int 
 10694 ;;  divisor         2    2[COMRAM] int 
 10695 ;; Auto vars:     Size  Location     Type
 10696 ;;  quotient        2    6[COMRAM] int 
 10697 ;;  sign            1    5[COMRAM] unsigned char 
 10698 ;;  counter         1    4[COMRAM] unsigned char 
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  2    0[COMRAM] int 
 10701 ;; Registers used:
 10702 ;;		wreg, status,2, status,0
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10708 ;;      Params:         4       0       0       0       0       0       0
 10709 ;;      Locals:         4       0       0       0       0       0       0
 10710 ;;      Temps:          0       0       0       0       0       0       0
 10711 ;;      Totals:         8       0       0       0       0       0       0
 10712 ;;Total ram usage:        8 bytes
 10713 ;; Hardware stack levels used: 1
 10714 ;; This function calls:
 10715 ;;		Nothing
 10716 ;; This function is called by:
 10717 ;;		_PCF8563_setDate
 10718 ;;		_PCF8563_setTime
 10719 ;; This function uses a non-reentrant model
 10720 ;;
 10721                           
 10722                           	psect	text76
 10723  002794                     __ptext76:
 10724                           	callstack 0
 10725  002794                     ___awdiv:
 10726                           	callstack 18
 10727  002794  0E00               	movlw	0
 10728  002796  6E06               	movwf	___awdiv@sign^0,c
 10729  002798  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 10730  00279A  EFD3  F013         	goto	i2u288_40
 10731  00279E  EFD1  F013         	goto	i2u288_41
 10732  0027A2                     i2u288_41:
 10733  0027A2  EFD9  F013         	goto	i2l3243
 10734  0027A6                     i2u288_40:
 10735  0027A6  6C03               	negf	___awdiv@divisor^0,c
 10736  0027A8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 10737  0027AA  B0D8               	btfsc	status,0,c
 10738  0027AC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 10739  0027AE  0E01               	movlw	1
 10740  0027B0  6E06               	movwf	___awdiv@sign^0,c
 10741  0027B2                     i2l3243:
 10742  0027B2  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 10743  0027B4  EFE0  F013         	goto	i2u289_40
 10744  0027B8  EFDE  F013         	goto	i2u289_41
 10745  0027BC                     i2u289_41:
 10746  0027BC  EFE6  F013         	goto	i2l3249
 10747  0027C0                     i2u289_40:
 10748  0027C0  6C01               	negf	___awdiv@dividend^0,c
 10749  0027C2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 10750  0027C4  B0D8               	btfsc	status,0,c
 10751  0027C6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 10752  0027C8  0E01               	movlw	1
 10753  0027CA  1A06               	xorwf	___awdiv@sign^0,f,c
 10754  0027CC                     i2l3249:
 10755  0027CC  0E00               	movlw	0
 10756  0027CE  6E08               	movwf	(___awdiv@quotient+1)^0,c
 10757  0027D0  0E00               	movlw	0
 10758  0027D2  6E07               	movwf	___awdiv@quotient^0,c
 10759  0027D4  5003               	movf	___awdiv@divisor^0,w,c
 10760  0027D6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 10761  0027D8  B4D8               	btfsc	status,2,c
 10762  0027DA  EFF1  F013         	goto	i2u290_41
 10763  0027DE  EFF3  F013         	goto	i2u290_40
 10764  0027E2                     i2u290_41:
 10765  0027E2  EF1B  F014         	goto	i2l3271
 10766  0027E6                     i2u290_40:
 10767  0027E6  0E01               	movlw	1
 10768  0027E8  6E05               	movwf	___awdiv@counter^0,c
 10769  0027EA  EFFB  F013         	goto	i2l3257
 10770  0027EE                     i2l3255:
 10771  0027EE  90D8               	bcf	status,0,c
 10772  0027F0  3603               	rlcf	___awdiv@divisor^0,f,c
 10773  0027F2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 10774  0027F4  2A05               	incf	___awdiv@counter^0,f,c
 10775  0027F6                     i2l3257:
 10776  0027F6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10777  0027F8  EF00  F014         	goto	i2u291_41
 10778  0027FC  EF02  F014         	goto	i2u291_40
 10779  002800                     i2u291_41:
 10780  002800  EFF7  F013         	goto	i2l3255
 10781  002804                     i2u291_40:
 10782  002804                     i2l3259:
 10783  002804  90D8               	bcf	status,0,c
 10784  002806  3607               	rlcf	___awdiv@quotient^0,f,c
 10785  002808  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 10786  00280A  5003               	movf	___awdiv@divisor^0,w,c
 10787  00280C  5C01               	subwf	___awdiv@dividend^0,w,c
 10788  00280E  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10789  002810  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 10790  002812  A0D8               	btfss	status,0,c
 10791  002814  EF0E  F014         	goto	i2u292_41
 10792  002818  EF10  F014         	goto	i2u292_40
 10793  00281C                     i2u292_41:
 10794  00281C  EF15  F014         	goto	i2l3267
 10795  002820                     i2u292_40:
 10796  002820  5003               	movf	___awdiv@divisor^0,w,c
 10797  002822  5E01               	subwf	___awdiv@dividend^0,f,c
 10798  002824  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10799  002826  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 10800  002828  8007               	bsf	___awdiv@quotient^0,0,c
 10801  00282A                     i2l3267:
 10802  00282A  90D8               	bcf	status,0,c
 10803  00282C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10804  00282E  3203               	rrcf	___awdiv@divisor^0,f,c
 10805  002830  2E05               	decfsz	___awdiv@counter^0,f,c
 10806  002832  EF02  F014         	goto	i2l3259
 10807  002836                     i2l3271:
 10808  002836  5006               	movf	___awdiv@sign^0,w,c
 10809  002838  B4D8               	btfsc	status,2,c
 10810  00283A  EF21  F014         	goto	i2u293_41
 10811  00283E  EF23  F014         	goto	i2u293_40
 10812  002842                     i2u293_41:
 10813  002842  EF27  F014         	goto	i2l3275
 10814  002846                     i2u293_40:
 10815  002846  6C07               	negf	___awdiv@quotient^0,c
 10816  002848  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10817  00284A  B0D8               	btfsc	status,0,c
 10818  00284C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10819  00284E                     i2l3275:
 10820  00284E  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10821  002852  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10822  002856  0012               	return		;funcret
 10823  002858                     __end_of___awdiv:
 10824                           	callstack 0
 10825                           
 10826 ;; *************** function _lcd1602_blink *****************
 10827 ;; Defined at:
 10828 ;;		line 79 in file "src/lcd1602.c"
 10829 ;; Parameters:    Size  Location     Type
 10830 ;;		None
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;		None
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      void 
 10835 ;; Registers used:
 10836 ;;		wreg, status,2, status,0, cstack
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10842 ;;      Params:         0       0       0       0       0       0       0
 10843 ;;      Locals:         0       0       0       0       0       0       0
 10844 ;;      Temps:          0       0       0       0       0       0       0
 10845 ;;      Totals:         0       0       0       0       0       0       0
 10846 ;;Total ram usage:        0 bytes
 10847 ;; Hardware stack levels used: 1
 10848 ;; Hardware stack levels required when called: 1
 10849 ;; This function calls:
 10850 ;;		i2_lcd1602_cmd
 10851 ;; This function is called by:
 10852 ;;		_myISR
 10853 ;; This function uses a non-reentrant model
 10854 ;;
 10855                           
 10856                           	psect	text77
 10857  00352A                     __ptext77:
 10858                           	callstack 0
 10859  00352A                     _lcd1602_blink:
 10860                           	callstack 19
 10861  00352A                     
 10862                           ;src/lcd1602.c: 80:     _displaycontrol |= 0x01;
 10863  00352A  807E               	bsf	__displaycontrol^0,0,c
 10864  00352C                     
 10865                           ;src/lcd1602.c: 81:     lcd1602_cmd(0x08 | _displaycontrol);
 10866  00352C  507E               	movf	__displaycontrol^0,w,c
 10867  00352E  0908               	iorlw	8
 10868  003530  EC58  F01A         	call	i2_lcd1602_cmd
 10869  003534  0012               	return		;funcret
 10870  003536                     __end_of_lcd1602_blink:
 10871                           	callstack 0
 10872                           
 10873 ;; *************** function i2_lcd1602_cmd *****************
 10874 ;; Defined at:
 10875 ;;		line 118 in file "src/lcd1602.c"
 10876 ;; Parameters:    Size  Location     Type
 10877 ;;  cmd             1    wreg     unsigned char 
 10878 ;; Auto vars:     Size  Location     Type
 10879 ;;  cmd             1    0[COMRAM] unsigned char 
 10880 ;; Return value:  Size  Location     Type
 10881 ;;                  1    wreg      void 
 10882 ;; Registers used:
 10883 ;;		wreg, status,2, cstack
 10884 ;; Tracked objects:
 10885 ;;		On entry : 0/0
 10886 ;;		On exit  : 0/0
 10887 ;;		Unchanged: 0/0
 10888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10889 ;;      Params:         0       0       0       0       0       0       0
 10890 ;;      Locals:         1       0       0       0       0       0       0
 10891 ;;      Temps:          0       0       0       0       0       0       0
 10892 ;;      Totals:         1       0       0       0       0       0       0
 10893 ;;Total ram usage:        1 bytes
 10894 ;; Hardware stack levels used: 1
 10895 ;; This function calls:
 10896 ;;		Nothing
 10897 ;; This function is called by:
 10898 ;;		_lcd1602_noBlink
 10899 ;;		_lcd1602_blink
 10900 ;;		i2_lcd1602_home
 10901 ;;		i2_lcd1602_setCursor
 10902 ;; This function uses a non-reentrant model
 10903 ;;
 10904                           
 10905                           	psect	text78
 10906  0034B0                     __ptext78:
 10907                           	callstack 0
 10908  0034B0                     i2_lcd1602_cmd:
 10909                           	callstack 19
 10910                           
 10911                           ;incstack = 0
 10912                           ;i2lcd1602_cmd@cmd stored from wreg
 10913  0034B0  6E01               	movwf	i2lcd1602_cmd@cmd^0,c
 10914  0034B2                     
 10915                           ;src/lcd1602.c: 119:     LATD = cmd;
 10916  0034B2  C001  FF8C         	movff	i2lcd1602_cmd@cmd,3980	;volatile
 10917  0034B6                     
 10918                           ;src/lcd1602.c: 123:     PORTA = 0x04;
 10919  0034B6  0E04               	movlw	4
 10920  0034B8  6E80               	movwf	128,c	;volatile
 10921  0034BA                     
 10922                           ;src/lcd1602.c: 124:     _delay((unsigned long)((4)*(1000000/4000.0)));
 10923  0034BA  0EC8               	movlw	200
 10924  0034BC                     i2u398_47:
 10925  0034BC  D000               	nop2	
 10926  0034BE  2EE8               	decfsz	wreg,f,c
 10927  0034C0  D7FD               	bra	i2u398_47
 10928  0034C2                     
 10929                           ;src/lcd1602.c: 126:     PORTA = 0x00;
 10930  0034C2  0E00               	movlw	0
 10931  0034C4  6E80               	movwf	128,c	;volatile
 10932  0034C6  0012               	return		;funcret
 10933  0034C8                     __end_ofi2_lcd1602_cmd:
 10934                           	callstack 0
 10935                           
 10936                           	psect	rparam
 10937  0000                     
 10938                           	psect	temp
 10939  00007F                     btemp:
 10940                           	callstack 0
 10941  00007F                     	ds	1
 10942  0000                     int$flags	set	btemp
 10943  0000                     wtemp8	set	btemp+1
 10944  0000                     ttemp5	set	btemp+1
 10945  0000                     ttemp6	set	btemp+4
 10946  0000                     ttemp7	set	btemp+8
 10947                           
 10948                           	psect	idloc
 10949                           
 10950                           ;Config register IDLOC0 @ 0x200000
 10951                           ;	unspecified, using default values
 10952  200000                     	org	2097152
 10953  200000  FF                 	db	255
 10954                           
 10955                           ;Config register IDLOC1 @ 0x200001
 10956                           ;	unspecified, using default values
 10957  200001                     	org	2097153
 10958  200001  FF                 	db	255
 10959                           
 10960                           ;Config register IDLOC2 @ 0x200002
 10961                           ;	unspecified, using default values
 10962  200002                     	org	2097154
 10963  200002  FF                 	db	255
 10964                           
 10965                           ;Config register IDLOC3 @ 0x200003
 10966                           ;	unspecified, using default values
 10967  200003                     	org	2097155
 10968  200003  FF                 	db	255
 10969                           
 10970                           ;Config register IDLOC4 @ 0x200004
 10971                           ;	unspecified, using default values
 10972  200004                     	org	2097156
 10973  200004  FF                 	db	255
 10974                           
 10975                           ;Config register IDLOC5 @ 0x200005
 10976                           ;	unspecified, using default values
 10977  200005                     	org	2097157
 10978  200005  FF                 	db	255
 10979                           
 10980                           ;Config register IDLOC6 @ 0x200006
 10981                           ;	unspecified, using default values
 10982  200006                     	org	2097158
 10983  200006  FF                 	db	255
 10984                           
 10985                           ;Config register IDLOC7 @ 0x200007
 10986                           ;	unspecified, using default values
 10987  200007                     	org	2097159
 10988  200007  FF                 	db	255
 10989                           
 10990                           	psect	config
 10991                           
 10992                           ; Padding undefined space
 10993  300000                     	org	3145728
 10994  300000  FF                 	db	255
 10995                           
 10996                           ;Config register CONFIG1H @ 0x300001
 10997                           ;	Oscillator Selection bits
 10998                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
 10999                           ;	Fail-Safe Clock Monitor Enable bit
 11000                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11001                           ;	Internal/External Oscillator Switchover bit
 11002                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11003  300001                     	org	3145729
 11004  300001  08                 	db	8
 11005                           
 11006                           ;Config register CONFIG2L @ 0x300002
 11007                           ;	Power-up Timer Enable bit
 11008                           ;	PWRT = OFF, PWRT disabled
 11009                           ;	Brown-out Reset Enable bits
 11010                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 11011                           ;	Brown Out Reset Voltage bits
 11012                           ;	BORV = 3, Minimum setting
 11013  300002                     	org	3145730
 11014  300002  19                 	db	25
 11015                           
 11016                           ;Config register CONFIG2H @ 0x300003
 11017                           ;	Watchdog Timer Enable bit
 11018                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11019                           ;	Watchdog Timer Postscale Select bits
 11020                           ;	WDTPS = 32768, 1:32768
 11021  300003                     	org	3145731
 11022  300003  1E                 	db	30
 11023                           
 11024                           ; Padding undefined space
 11025  300004                     	org	3145732
 11026  300004  FF                 	db	255
 11027                           
 11028                           ;Config register CONFIG3H @ 0x300005
 11029                           ;	CCP2 MUX bit
 11030                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 11031                           ;	PORTB A/D Enable bit
 11032                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 11033                           ;	Low-Power Timer1 Oscillator Enable bit
 11034                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11035                           ;	MCLR Pin Enable bit
 11036                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11037  300005                     	org	3145733
 11038  300005  81                 	db	129
 11039                           
 11040                           ;Config register CONFIG4L @ 0x300006
 11041                           ;	Stack Full/Underflow Reset Enable bit
 11042                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11043                           ;	Single-Supply ICSP Enable bit
 11044                           ;	LVP = OFF, Single-Supply ICSP disabled
 11045                           ;	Extended Instruction Set Enable bit
 11046                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11047                           ;	Background Debugger Enable bit
 11048                           ;	DEBUG = 0x1, unprogrammed default
 11049  300006                     	org	3145734
 11050  300006  81                 	db	129
 11051                           
 11052                           ; Padding undefined space
 11053  300007                     	org	3145735
 11054  300007  FF                 	db	255
 11055                           
 11056                           ;Config register CONFIG5L @ 0x300008
 11057                           ;	Code Protection bit
 11058                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 11059                           ;	Code Protection bit
 11060                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 11061                           ;	Code Protection bit
 11062                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 11063                           ;	Code Protection bit
 11064                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 11065  300008                     	org	3145736
 11066  300008  0F                 	db	15
 11067                           
 11068                           ;Config register CONFIG5H @ 0x300009
 11069                           ;	Boot Block Code Protection bit
 11070                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11071                           ;	Data EEPROM Code Protection bit
 11072                           ;	CPD = OFF, Data EEPROM not code-protected
 11073  300009                     	org	3145737
 11074  300009  C0                 	db	192
 11075                           
 11076                           ;Config register CONFIG6L @ 0x30000A
 11077                           ;	Write Protection bit
 11078                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 11079                           ;	Write Protection bit
 11080                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 11081                           ;	Write Protection bit
 11082                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 11083                           ;	Write Protection bit
 11084                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 11085  30000A                     	org	3145738
 11086  30000A  0F                 	db	15
 11087                           
 11088                           ;Config register CONFIG6H @ 0x30000B
 11089                           ;	Configuration Register Write Protection bit
 11090                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11091                           ;	Boot Block Write Protection bit
 11092                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
 11093                           ;	Data EEPROM Write Protection bit
 11094                           ;	WRTD = OFF, Data EEPROM not write-protected
 11095  30000B                     	org	3145739
 11096  30000B  E0                 	db	224
 11097                           
 11098                           ;Config register CONFIG7L @ 0x30000C
 11099                           ;	Table Read Protection bit
 11100                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 11101                           ;	Table Read Protection bit
 11102                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 11103                           ;	Table Read Protection bit
 11104                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 11105                           ;	Table Read Protection bit
 11106                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11107  30000C                     	org	3145740
 11108  30000C  0F                 	db	15
 11109                           
 11110                           ;Config register CONFIG7H @ 0x30000D
 11111                           ;	Boot Block Table Read Protection bit
 11112                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11113  30000D                     	org	3145741
 11114  30000D  40                 	db	64
 11115                           tosu	equ	0xFFF
 11116                           tosh	equ	0xFFE
 11117                           tosl	equ	0xFFD
 11118                           stkptr	equ	0xFFC
 11119                           pclatu	equ	0xFFB
 11120                           pclath	equ	0xFFA
 11121                           pcl	equ	0xFF9
 11122                           tblptru	equ	0xFF8
 11123                           tblptrh	equ	0xFF7
 11124                           tblptrl	equ	0xFF6
 11125                           tablat	equ	0xFF5
 11126                           prodh	equ	0xFF4
 11127                           prodl	equ	0xFF3
 11128                           indf0	equ	0xFEF
 11129                           postinc0	equ	0xFEE
 11130                           postdec0	equ	0xFED
 11131                           preinc0	equ	0xFEC
 11132                           plusw0	equ	0xFEB
 11133                           fsr0h	equ	0xFEA
 11134                           fsr0l	equ	0xFE9
 11135                           wreg	equ	0xFE8
 11136                           indf1	equ	0xFE7
 11137                           postinc1	equ	0xFE6
 11138                           postdec1	equ	0xFE5
 11139                           preinc1	equ	0xFE4
 11140                           plusw1	equ	0xFE3
 11141                           fsr1h	equ	0xFE2
 11142                           fsr1l	equ	0xFE1
 11143                           bsr	equ	0xFE0
 11144                           indf2	equ	0xFDF
 11145                           postinc2	equ	0xFDE
 11146                           postdec2	equ	0xFDD
 11147                           preinc2	equ	0xFDC
 11148                           plusw2	equ	0xFDB
 11149                           fsr2h	equ	0xFDA
 11150                           fsr2l	equ	0xFD9
 11151                           status	equ	0xFD8

Data Sizes:
    Strings     46
    Constant    26
    Data        20
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    118     126
    BANK0           128    106     118
    BANK1           256     18      79
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    i2sprintf@f.buffer	PTR unsigned char  size(2) Largest target is 0
		 -> temp(BANK1[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> temp(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[15]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[16]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[15]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[15]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[15]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> temp(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S862_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> temp(BANK1[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> temp(BANK1[16]), 

    lcd1602_print@str	PTR unsigned char  size(2) Largest target is 16
		 -> temp(BANK1[16]), 

    PCF8563_getTime@sec	PTR unsigned int  size(2) Largest target is 2
		 -> second(BANK0[2]), 

    PCF8563_getTime@min	PTR unsigned int  size(2) Largest target is 2
		 -> minute(BANK0[2]), 

    PCF8563_getTime@hour	PTR unsigned int  size(2) Largest target is 2
		 -> hour(BANK0[2]), 

    PCF8563_getDate@day	PTR unsigned int  size(2) Largest target is 2
		 -> day(COMRAM[2]), 

    PCF8563_getDate@mon	PTR unsigned int  size(2) Largest target is 2
		 -> month(COMRAM[2]), 

    PCF8563_getDate@year	PTR unsigned int  size(2) Largest target is 2
		 -> year(COMRAM[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->_myISR
    _myISR->_printDate
    _myISR->_printTime
    _printTime->i2_sprintf
    i2_lcd1602_cursorNextLine->i2_lcd1602_setCursor
    i2_lcd1602_setCursor->i2_lcd1602_cmd
    _PCF8563_setTime->i2_setI2C
    _printDate->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_abs->i2___aomod
    i2_atoi->i2_isspace
    i2_lcd1602_print->i2_lcd1602_displaychar
    i2_lcd1602_home->i2_lcd1602_cmd
    _lcd1602_noBlink->i2_lcd1602_cmd
    _PCF8563_setDate->___lwdiv
    i2_setI2C->___awdiv
    i2_I2C_Master_Write->i2_I2C_Master_Wait
    i2_I2C_Master_Stop->i2_I2C_Master_Wait
    i2_I2C_Master_Start->i2_I2C_Master_Wait
    ___lwdiv->___lwmod
    _lcd1602_blink->i2_lcd1602_cmd

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _atoi->_isspace
    _lcd1602_print->_lcd1602_displaychar
    _lcd1602_initial->_lcd1602_cmd
    _lcd1602_home->_lcd1602_cmd
    _lcd1602_display->_lcd1602_cmd
    _lcd1602_clear->_lcd1602_cmd
    _lcd1602_cursorNextLine->_lcd1602_setCursor
    _lcd1602_setCursor->_lcd1602_cmd
    _init_pcf8563->_getI2C
    _setI2C->_I2C_Master_Write
    _init_i2c->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _PCF8563_getTime->_getI2C
    _PCF8563_getDate->_getI2C
    _getI2C->_I2C_Master_Read
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13154
                                            104 BANK0      2     2      0
                    _PCF8563_getDate
                    _PCF8563_getTime
                           _init_i2c
                       _init_pcf8563
                      _lcd1602_clear
             _lcd1602_cursorNextLine
                       _lcd1602_home
                    _lcd1602_initial
                      _lcd1602_print
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10    8964
                                              0 BANK1     18     8     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8039
                                             96 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    7632
                                             74 BANK0     22    16      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4402
                                             38 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2753
                                             27 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1257
                                             20 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     856
                                             11 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             28 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                             10 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                             10 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1244
                                             17 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                             10 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                             10 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                             10 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd1602_print                                        7     3      4     616
                                             11 BANK0      7     3      4
                _lcd1602_displaychar
 ---------------------------------------------------------------------------------
 (2) _lcd1602_displaychar                                  1     1      0      22
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd1602_initial                                      0     0      0      88
                      _lcd1602_clear
                        _lcd1602_cmd
                    _lcd1602_display
                       _lcd1602_home
 ---------------------------------------------------------------------------------
 (2) _lcd1602_home                                         0     0      0      22
                        _lcd1602_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd1602_display                                      0     0      0      22
                        _lcd1602_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd1602_clear                                        0     0      0      22
                        _lcd1602_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd1602_cursorNextLine                               0     0      0     466
                  _lcd1602_setCursor
 ---------------------------------------------------------------------------------
 (2) _lcd1602_setCursor                                   10     9      1     466
                                             11 BANK0     10     9      1
                        _lcd1602_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd1602_cmd                                          1     1      0      22
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_pcf8563                                         0     0      0     630
                             _getI2C
                             _setI2C
 ---------------------------------------------------------------------------------
 (2) _setI2C                                               2     1      1     518
                                             12 BANK0      2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             8     0      8     684
                                             35 BANK0      8     0      8
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                     12     4      8     510
                                             23 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                             10 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _PCF8563_getTime                                     10     4      6     634
                                             15 BANK0     10     4      6
                             _getI2C
 ---------------------------------------------------------------------------------
 (1) _PCF8563_getDate                                     16    10      6    1028
                                             15 BANK0     16    10      6
                             _getI2C
 ---------------------------------------------------------------------------------
 (2) _getI2C                                               2     2      0     112
                                             13 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                             11 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      45
                                             11 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _Hi_ISR                                              10    10      0   18253
                                              0 BANK0     10    10      0
                              _myISR
 ---------------------------------------------------------------------------------
 (10) _myISR                                               4     4      0   18253
                                            114 COMRAM     4     4      0
                      _lcd1602_blink
                    _lcd1602_noBlink
                          _printDate
                          _printTime
                     i2_lcd1602_home
                i2_lcd1602_setCursor
 ---------------------------------------------------------------------------------
 (11) _printTime                                           2     2      0    8511
                                            112 COMRAM     2     2      0
                    _PCF8563_setTime
                    _lcd1602_noBlink
           i2_lcd1602_cursorNextLine
                    i2_lcd1602_print
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) i2_lcd1602_cursorNextLine                            0     0      0     272
                i2_lcd1602_setCursor
 ---------------------------------------------------------------------------------
 (11) i2_lcd1602_setCursor                                10     9      1     272
                                              1 COMRAM    10     9      1
                      i2_lcd1602_cmd
 ---------------------------------------------------------------------------------
 (12) _PCF8563_setTime                                     5     3      2    2622
                                             10 COMRAM     5     3      2
                            ___awdiv
                            ___awmod
                           i2_setI2C
 ---------------------------------------------------------------------------------
 (11) _printDate                                           2     2      0    9404
                                            112 COMRAM     2     2      0
                    _PCF8563_setDate
                    _lcd1602_noBlink
                     i2_lcd1602_home
                    i2_lcd1602_print
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) i2_sprintf                                          20    10     10    5379
                                             94 COMRAM    18     8     10
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (13) i2_vfprintf                                          8     2      6    5074
                                             86 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (14) i2_vfpfcnvrt                                        46    40      6    4851
                                             64 COMRAM    22    16      6
                             i2_atoi
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
 ---------------------------------------------------------------------------------
 (15) i2_dtoa                                             36    26     10    2852
                                             28 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (16) i2_pad                                              11     5      6    1553
                                             17 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (17) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (17) i2_fputs                                             7     3      4     657
                                             10 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (15) i2_fputc                                             9     5      4     456
                                              1 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (16) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (15) i2_atoi                                             15    13      2     726
                                              7 COMRAM    15    13      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (16) i2_isspace                                           7     5      2      94
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           6     4      2      74
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) i2_lcd1602_print                                     7     3      4     216
                                              1 COMRAM     7     3      4
              i2_lcd1602_displaychar
 ---------------------------------------------------------------------------------
 (13) i2_lcd1602_displaychar                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i2_lcd1602_home                                      0     0      0      22
                      i2_lcd1602_cmd
 ---------------------------------------------------------------------------------
 (12) _lcd1602_noBlink                                     0     0      0      22
                      i2_lcd1602_cmd
 ---------------------------------------------------------------------------------
 (12) _PCF8563_setDate                                    10     6      4    3765
                                             12 COMRAM    10     6      4
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                           i2_setI2C
 ---------------------------------------------------------------------------------
 (13) i2_setI2C                                            2     1      1     222
                                              8 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                 i2_I2C_Master_Start
                  i2_I2C_Master_Stop
                 i2_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_Master_Write                                  1     1      0      22
                                              1 COMRAM     1     1      0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (14) i2_I2C_Master_Stop                                   0     0      0       0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (14) i2_I2C_Master_Start                                  0     0      0       0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (15) i2_I2C_Master_Wait                                   1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (13) ___lwdiv                                             7     3      4     314
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4    1056
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (13) ___awdiv                                             8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (11) _lcd1602_blink                                       0     0      0      22
                      i2_lcd1602_cmd
 ---------------------------------------------------------------------------------
 (12) i2_lcd1602_cmd                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PCF8563_getDate
     _getI2C
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _PCF8563_getTime
     _getI2C
   _init_i2c
     _I2C_Master_Init
       ___lldiv
   _init_pcf8563
     _getI2C
     _setI2C
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
   _lcd1602_clear
     _lcd1602_cmd
   _lcd1602_cursorNextLine
     _lcd1602_setCursor
       _lcd1602_cmd
   _lcd1602_home
     _lcd1602_cmd
   _lcd1602_initial
     _lcd1602_clear
     _lcd1602_cmd
     _lcd1602_display
       _lcd1602_cmd
     _lcd1602_home
   _lcd1602_print
     _lcd1602_displaychar
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit

 _Hi_ISR (ROOT)
   _myISR
     _lcd1602_blink
       i2_lcd1602_cmd
     _lcd1602_noBlink
       i2_lcd1602_cmd
     _printDate
       _PCF8563_setDate
         ___awdiv
         ___awmod
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
         i2_setI2C
           ___awdiv (ARG)
           ___awmod (ARG)
           i2_I2C_Master_Start (ARG)
             i2_I2C_Master_Wait
           i2_I2C_Master_Stop (ARG)
             i2_I2C_Master_Wait
           i2_I2C_Master_Write (ARG)
             i2_I2C_Master_Wait
       _lcd1602_noBlink
       i2_lcd1602_home
         i2_lcd1602_cmd
       i2_lcd1602_print
         i2_lcd1602_displaychar
       i2_sprintf
         i2_vfprintf
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_dtoa
               i2___aodiv
               i2___aomod
               i2_abs
                 i2___aomod (ARG)
               i2_pad
                 i2_fputc
                   i2_putch
                 i2_fputs
                   i2_fputc
                 i2_strlen
             i2_fputc
             i2_isdigit
     _printTime
       _PCF8563_setTime
         ___awdiv
         ___awmod
         i2_setI2C
       _lcd1602_noBlink
       i2_lcd1602_cursorNextLine
         i2_lcd1602_setCursor
           i2_lcd1602_cmd
       i2_lcd1602_print
       i2_sprintf
     i2_lcd1602_home
     i2_lcd1602_setCursor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     12      4F       6       30.9%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     6A      76       4       92.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     76      7E       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     143      14        0.0%
DATA                 0      0     143      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jan 18 19:50:27 2022

               PCF8563_setDate@day 0010                 PCF8563_setDate@mon 000F  
             __size_of_lcd1602_cmd 001A                 i2_I2C_Master_Start 3576  
              PCF8563_setDate@year 000D                 i2_I2C_Master_Write 351E  
                               l31 3394                                 l40 33BC  
                               l34 2DD8                                 l43 355C  
                               l52 34F8                                 l37 3396  
                               l46 3564                                 l55 32E4  
                               l71 3484                                 l49 3554  
                               l90 32B0                                 l74 3496  
                               l87 342C                       ___awdiv@sign 0006  
              _lcd1602_displaychar 344C              __size_of_lcd1602_home 0008  
              ___wmul@multiplicand 008C                                l111 246C  
                              l105 2262                                l115 3314  
                              l211 347E                                l214 3464  
                              l152 2F82                                l208 305E  
                              l155 354C                                l172 34EA  
                              l164 3504                                l158 3544  
                              l169 327C                                l345 336C  
                              l372 2A54                                l472 1FC6  
                              l379 2A64                                l459 1B64  
                              _PEN 007E2A                                _SEN 007E28  
               i2___aodiv@quotient 0013                ?i2_I2C_Master_Start 0001  
           __size_of_lcd1602_clear 0008             __size_of_lcd1602_blink 000C  
                              _abs 30A4                ?i2_I2C_Master_Write 0001  
                              _day 0077                                _pad 253A  
                     ___awmod@sign 0006                                prod 000FF3  
                       i2_atoi$980 0010                         i2_atoi$981 0014  
                       i2_atoi$982 0012                                wreg 000FE8  
           __size_of_lcd1602_print 0046                __end_ofi2_vfpfcnvrt 0D80  
                   lcd1602_cmd@cmd 008A                         i2_dtoa$945 002F  
           __size_ofi2_lcd1602_cmd 0018                  _lcd1602_setCursor 324A  
                             l1023 2E8C                               l1120 2CAA  
                             l1121 2CB2                               l1114 10EE  
                             ?_abs 009C                               l1125 30DC  
                             l1054 2582                 PCF8563_setTime@min 000B  
                             l1128 30E4                               l3001 1A22  
                             l1057 25C6                               l1065 1190  
                             l1162 31DA                               l1170 2EE0  
                             l3011 1A78                               l3003 1A42  
                             l1059 2602                               l1067 1198  
               PCF8563_setTime@sec 000C                               l1156 1842  
                             l3101 2E8E                               l3021 1AFA  
                             l3013 1A8C                               l3005 1A46  
                             l1085 13D2                               l3103 2E94  
                             l1159 184A                               l3031 1B44  
                             l3023 1AFC                               l3015 1A9A  
                             l3007 1A52                               l3105 2EA8  
                             l3025 1B0E                               l3017 1AAC  
                             l3009 1A70                               l3041 1E96  
                             l1185 2538                               l1193 3018  
                             l3107 2ED6                               l3019 1ADA  
                             l3027 1B14                               l3051 1EEE  
                             l3043 1E9A                               l3035 1E62  
                             l1099 0E72                               l3109 2EDA  
                             l3029 1B24                               l3061 1F70  
                             l3053 1F02                               l3045 1EA8  
                             l3037 1E68                               l3231 3396  
                             l3055 1F10                               l3063 1F76  
                             l3047 1EC8                               l3039 1E76  
                             l1199 31A0                               l3071 253A  
                             l3233 33A4                               l3065 1F86  
                             l3057 1F3E                               l3049 1EE6  
                             l3081 258E                               l3073 254A  
                             l3401 136E                               l4201 1E40  
                             l3067 1FA6                               l3059 1F5E  
                             l3083 25A2                               l3075 255E  
                             l3403 1374                               l3411 13AA  
                             l3501 32C8                               l3421 16D6  
                             l3093 30A4                               l3085 25A8  
                             l3077 256E                               l3405 1386  
                             l3503 32DE                               l3431 1732  
                             l3423 16F2                               l3415 16B8  
                             l3095 30C0                               l3087 25D4  
                             l3079 257A                               l3407 1392  
                             l4303 0E32                               l4151 2E3A  
                             l3505 32E0                               l3097 31A2  
                             l4305 1776                               l3433 1748  
                             l3425 1728                               l3417 16CE  
                             l2721 2494                               l3089 25E8  
                             l3409 139A                               l3361 1168  
                             l3353 10F0                               l3601 0E80  
                             l4153 2E4C                               l3531 346E  
                             l3451 1826                               l3443 17C4  
                             l3435 1750                               l3427 172C  
                             l3419 16D2                               l2723 249E  
                             l3371 11C0                               l3363 116A  
                             l3355 1110                               l3611 0EF8  
                             l3603 0E82                               l4155 2E54  
                             l4171 1D04                               l4163 1CEE  
                             l3541 29C0                               l3533 3472  
                             l3437 1758                               l2725 24BC  
                             l2717 246E                               l3381 1262  
                             l3373 11C6                               l3365 1184  
                             l3357 113A                               l3613 0F18  
                             l3621 0F80                               l3605 0EA6  
                             l4157 2E5C                               l4181 1D38  
                             l4173 1D06                               l4165 1CFE  
                             l3551 2A0A                               l3543 29D2  
                             l3535 347A                               l3711 324E  
                             l3703 34FA                               l3447 1802  
                             l3439 178C                               l2727 24F2  
                             l2719 2482                               l3391 130C  
                             l3383 1268                               l3375 11CE  
                             l3367 11A0                               l3359 115A  
                             l3631 1048                               l3623 0FA4  
                             l3615 0F26                               l3607 0EDC  
                             l4159 2E7A                               l4191 1DC4  
                             l4183 1D56                               l4175 1D2C  
                             l4167 1D00                               l3481 355A  
                             l3561 2A4E                               l3553 2A14  
                             l3545 29E8                               l3529 346A  
                             l3713 3260                               l3705 34FC  
                             l3801 2F6A                               l3721 3454  
                             l3449 1814                               l3393 1326  
                             l3385 126E                               l3377 11D8  
                             l3369 11B2                               l3633 106C  
                             l3641 109C                               l3625 0FC8  
                             l3609 0EEA                               l4193 1DDA  
                             l4185 1D74                               l4177 1D30  
                             l4169 1D02                               l3483 355E  
                             l3491 34F0                               l3555 2A32  
                             l3547 29F0                               l3811 34DE  
                             l3707 3546                               l3803 2F6E  
                             l3723 3458                               l3395 1340  
                             l3379 11DE                               l3387 12D2  
                             l3643 10AA                               l3635 107A  
                             l3627 1010                               l3619 0F6E  
                             l3571 0DC8                               l3563 0D80  
                             l4195 1DDE                               l4187 1D78  
                             l4179 1D34                               l3485 3562  
                             l3493 34F4                               l3557 2A42  
                             l3549 29FC                               l3709 353E  
                             l3805 2F72                               l3725 3460  
                             l3813 301A                               l2861 2FE0  
                             l3389 12EE                               l3397 134E  
                             l3637 108E                               l3581 0DEE  
                             l3573 0DD4                               l3565 0DA4  
                             l4197 1DFC                               l4189 1D96  
                             ?_pad 009B                               l3495 32B6  
                             l3479 3556                               l3487 354E  
                             l3559 2A44                               l3807 2F76  
                             l3719 3450                               l3815 3028  
                             l2695 3484                               l2863 2FF2  
                             l2871 317A                               l3399 1360  
                             l3575 0DD6                               l3567 0DB2  
                             l3647 10B6                               l3751 2C4A  
                             l4199 1E2A                               l3497 32BA  
                             l3489 3552                               l3761 212C  
                             l3809 2F7E                               l3817 303A  
                             l2697 3492                               l2865 2FF8  
                             l2873 3192                               l3649 10DC  
                             l3593 0E00                               l3585 0DF4  
                             l3577 0DE8                               l3569 0DC4  
                             l3753 2C52                               l3499 32C0  
                             l3771 215E                               l3763 2132  
                             l3691 2DD4                               l3819 3040  
                             l2859 2FD2                               l2867 3168  
                             l3755 2C60                               l3781 21B4  
                             l3773 2162                               l3765 213C  
                             l3693 2DD6                               l3685 2D7A  
                             l2869 3174                               l3597 0E0C  
                             l3589 0DFA                               l3757 2C8E  
                             l3783 21E6                               l3775 2168  
                             l3767 2146                               l3687 2D82  
                             l3759 336E                               l3695 340E  
                             l3791 2F34                               l2991 19DC  
                             l3599 0E60                               l3697 3282  
                             l3777 216E                               l3769 2150  
                             l3785 239A                               l3689 2DD0  
                             l3793 2F52                               l2985 3346  
                             l2993 19E2                               l3699 32AC  
                             l3779 217E                               l3787 32E6  
                             l3795 2F5A                               l2987 3364  
                             l2995 19F0                               l3789 32FC  
                             l3797 2F60                               l2997 1A10  
                             l3799 2F66                               l2999 1A14  
                             STR_1 061B                               STR_2 063A  
                             STR_3 062B                               STR_4 063A  
                             u2010 2482                               u2011 247E  
                             u2020 2494                               u2021 2490  
                             u2030 24BC                               u2031 24B8  
                             u2040 24F2                               u2041 24EE  
                             u3100 1184                               u3101 1180  
                             _LATA 000F89                               u3110 11B2  
                             _LATB 000F8A                               u3111 11AE  
                             u3200 1386                               u3120 11C0  
             ?_lcd1602_displaychar 0001                               _LATD 000F8C  
                             u3201 1382                               u3121 11BC  
                             u3210 16F2                               u3130 12EE  
                             u3211 16EE                               u3131 12EA  
                             u3300 32DC                               u3220 1728  
                             u3140 130C                               u3060 1122  
                             u3301 32D6                               u3221 1724  
                             u3141 1308                               u3061 111C  
                             u3230 1744                               u2270 3018  
                             u3150 1326                               u3070 1124  
                             u3231 1740                               u2271 3014  
                             u3151 1322                               u3240 17FC  
                             u2600 1E76                               u2280 3192  
                             u3160 1340                               u3080 113A  
                             u3400 0EEA                               u3241 17F6  
                             u2601 1E72                               u2281 318E  
                             u3161 133C                               u3081 1136  
                             u3401 0EE6                               u3330 29E8  
                             u3250 17FE                               u2530 19F0  
                             u2610 1EA8                               u3170 134E  
                             u3090 1168                               u3410 0F68  
                             u3315 32DE                               u3331 29E4  
                             u2531 19EC                               u2611 1EA4  
                             u3171 134A                               u3091 1164  
                             u3411 0F62                               u3340 2A0A  
                             u3260 1814                               u2540 1A22  
                             u2620 1EE6                               u2700 30C0  
                             u3180 1360                               u3420 0F6A  
                             u3500 2CAA                               u3341 2A06  
                             u3261 1810                               u2541 1A1E  
                             u2621 1EE2                               u2701 30BC  
                             u3181 135C                               u3501 2CA6  
                             u3510 215E                               u3350 2A32  
                             u2710 31D4                               u3270 1826  
                             u2630 1F10                               u3190 136E  
                             u3430 0F80                               u3511 215A  
                             u3351 2A2E                               u2711 31CE  
                             u3271 1822                               u2551 1A4C  
                             u2631 1F0C                               u3191 136A  
                             u3431 0F7C                               u3520 217E  
                             u2720 31D6                               u2560 1A70  
                             u2640 1F3E                               u3440 0FA4  
                             u3360 0DA4                               u3521 217A  
                             u2561 1A6C                               u2641 1F3A  
                             u3441 0FA0                               u3361 0DA0  
                             u3530 32FC                               u2730 2EA8  
                             u2570 1A9A                               u2650 1F86  
                             u3450 0FC8                               u3370 0E72  
                             u3531 32F8                               u2731 2EA4  
                             u2571 1A96                               u2651 1F82  
                             u3451 0FC4                               u3371 0E6E  
                             u3540 305E                               u2740 2ED6  
                             u2580 1ADA                               u2660 254A  
                             u3460 106C                               u3380 0E80  
                             u3541 305A                               u2741 2ED2  
                             u2581 1AD6                               u2661 2546  
                             u3461 1068                               u3381 0E7C  
                             u2590 1B24                               u2670 256E  
                             u3390 0EA6                               u2591 1B20  
                             u2671 256A                               u3391 0EA2  
                             u2680 25C6                               u2681 25C2  
                             u2690 25D4                               u3491 3258  
                             u2691 25D0                               u2860 33A4  
                             u1980 3492                               u2861 33A0  
                             u3485 2DA4                               u1981 348E  
                             u2870 33BC                               u2871 33B8  
                             _RCEN 007E2B                               i2l40 3408  
                             u3857 1E4C                               i2l43 357C  
                             u3867 345A                               i2l52 3528  
                             i2l37 33E4                               u3877 2F54  
                             i2l71 34CA                               u3887 3474  
                             i2l49 3574                               i2l74 34DC  
                             i2l87 344A                               i2l97 2398  
                             _RSEN 007E29                               _TXIF 007CF4  
               ?_lcd1602_setCursor 008B                               abs@a 009C  
                             _dbuf 0105   __end_of_I2C_Master_RepeatedStart 3566  
                             _atoi 16B8                               _main 1CEE  
                             _dtoa 10F0                               _hour 00F4  
                             _prec 00EC                               _temp 0125  
                             _nout 0100                               _year 007B  
                             pad@i 00A2                               pad@p 009F  
                   lcd1602_print@i 0090                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf2 000FDF  
                             fsr1l 000FE1                               pad@w 00A4  
                             fsr2l 000FD9                               btemp 007F  
 __end_ofi2_lcd1602_cursorNextLine 3512               ??i2_I2C_Master_Start 0002  
             ??i2_I2C_Master_Write 0002                               prodh 000FF4  
                             prodl 000FF3                               start 000E  
                  __end_ofi2_fputc 26CE                    __end_ofi2_fputs 30A4  
                     _lcd1602_home 353E                ??_lcd1602_setCursor 008C  
                  __end_ofi2_putch 34DE                       ___param_bank 000000  
   i2lcd1602_setCursor@row_offsets 0003            ?_lcd1602_cursorNextLine 0001  
                 ?_PCF8563_getDate 008F            __size_ofi2_lcd1602_home 0008  
                            ??_abs 009E                              ??_pad 00A1  
                 ?_PCF8563_getTime 008F                         i2_vfprintf 2D18  
                 ?_I2C_Master_Init 0097                   ?_I2C_Master_Read 0001  
                 ?_I2C_Master_Wait 0001                   ?_I2C_Master_Stop 0001  
              PCF8563_setTime@hour 000F                    __end_of___aodiv 1B66  
                            ?_atoi 0091                              ?_main 0001  
                            ?_dtoa 00A6                    __end_of___aomod 1FC8  
                            _ACKEN 007E2C                              _ACKDT 007E2D  
                  __end_of___awdiv 2858                   ?_PCF8563_setDate 000D  
                  __end_of___awmod 29C0                    __end_of___lldiv 2A66  
                  ___awdiv@divisor 0003                   ?_PCF8563_setTime 000B  
                  __end_of___lwdiv 2BDA                    __end_of___lwmod 2D18  
                            i2l211 34C6                              i2l108 290E  
                            i2l301 0726                              i2l214 34AE  
                            i2l310 0826                              i2l208 3126  
                            i2l304 0762                              i2l313 0882  
                            i2l322 0952                              i2l307 07EA  
                            i2l172 3510                              i2l316 08BC  
                            i2l181 351C                              i2l325 09AE  
                            i2l158 356C                              i2l334 2E0E  
                            i2l319 0918                              i2l184 3534  
                            i2l328 09E8                              i2l345 33E2  
                            i2l169 3344                              i2l329 0A08  
                            i2l290 2C48                              i2l287 2B64  
                            i2l295 068C                              i2l472 212A  
                            i2l298 06CC                              i2l459 1CEC  
                            i2l576 2856                              i2l843 2BD8  
                            i2l836 2BD0                              i2l589 29BE  
                            i2l853 2D16                              i2l846 2D0E  
                  ___awdiv@counter 0005                              _RCSTA 000FAB  
                     vfpfcnvrt@fmt 00CC                              _SPBRG 000FAF  
                            _PORTA 000F80                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISD 000F95  
                            i2_abs 3128                              _TXREG 000FAD  
                            _TXSTA 000FAC                              i2_pad 26CE  
        __end_of_lcd1602_setCursor 327E                              __cols 0103  
                       i2isdigit@c 0001                              _flags 00EE  
                            __rows 0102                              _myISR 064A  
         __size_of_lcd1602_display 000C           __size_of_lcd1602_noBlink 000C  
                            _fputc 246E                              _fputs 2FD2  
                  __end_of_isdigit 31DC                              _month 0079  
            ??_lcd1602_displaychar 008A                              atoi@n 009E  
                            pad@fp 009B                              atoi@s 0091  
                            _width 00EA                              _putch 3480  
                            dtoa@d 00A8                              dtoa@i 00C8  
                            dtoa@n 00C0                              dtoa@p 00BA  
                            dtoa@s 00BE                              dtoa@w 00BC  
                  __end_of_isspace 2EE2           __size_of_lcd1602_initial 0050  
                            tablat 000FF5                   __end_ofi2___wmul 33E4  
                            plusw1 000FE3                              plusw2 000FDB  
                            ttemp5 0080                              ttemp6 0083  
                            ttemp7 0087                              status 000FD8  
                       i2isspace@c 0001                              wtemp8 0080  
                  __end_of_sprintf 2E8E                   __end_ofi2_setI2C 344C  
                    _lcd1602_clear 3546                      _lcd1602_blink 352A  
               __size_ofi2___aodiv 0188                 __size_ofi2___aomod 0164  
                    _lcd1602_print 301A                   __end_ofi2_strlen 324A  
   __end_of_lcd1602_cursorNextLine 34EC                    __initialization 2A66  
                    i2_lcd1602_cmd 34B0                       __end_of_atoi 184C  
                     __end_of_main 1E62                       __end_of_dtoa 13D4  
               __size_ofi2_isdigit 0038                        i2_vfpfcnvrt 0A0A  
               __size_ofi2_isspace 0052                      i2vfpfcnvrt@ap 0045  
                    i2vfpfcnvrt@fp 0041                      i2vfpfcnvrt@ll 004B  
                           ??_atoi 0093           __size_ofi2_lcd1602_print 0042  
                           ??_main 00E8                             ??_dtoa 00B0  
      __end_ofi2_lcd1602_setCursor 3346                      __activetblptr 000002  
                       i2sprintf@f 006B                         i2sprintf@s 005F  
               __size_ofi2_sprintf 004E                             ?i2_abs 0013  
                           ?i2_pad 0012                  ?_I2C_Master_Start 0001  
                ?_I2C_Master_Write 0001                 ??_I2C_Master_Start 008B  
                           _ADCON1 000FC1                 ??_I2C_Master_Write 008B  
                           ?_myISR 0001                             ?_fputc 008B  
                           ?_fputs 0094                      ?_init_pcf8563 0001  
                 ___awdiv@dividend 0001                             ?_putch 0001  
                     __displaymode 007D                             i2l1023 2FD0  
                           i2l1120 2D70                             i2l1121 2D78  
                           i2l1114 0D7E                             i2l1125 315E  
                           i2l1054 2714                             i2l1128 3166  
                           i2l1057 2756                             i2l1065 1474  
                           i2l1162 3212                             i2l1170 2F32  
                           i2l1059 2792                             i2l1067 147C  
                           i2l1156 19D2                             i2l1085 16B6  
                           i2l1159 19DA                             i2l3113 3576  
                           i2l3121 3520                             i2l1185 26CC  
                           i2l1193 30A2                             i2l3201 0CDC  
                           i2l3131 34C2                             i2l3115 357A  
                           i2l3123 3524                             i2l3203 0D00  
                           i2l3211 0D2E                             i2l1099 0B06  
                           i2l4003 2E04                             i2l3125 34B2  
                           i2l3301 298A                             i2l3117 356E  
                           i2l3213 0D3C                             i2l3205 0D0E  
                           i2l3141 0A52                             i2l3133 0A0A  
                           i2l4005 2E06                             i2l3127 34B6  
                           i2l3311 29B6                             i2l3303 2992  
                           i2l3119 3572                             i2l1199 3248  
                           i2l3207 0D22                             i2l3151 0A7C  
                           i2l3143 0A5E                             i2l3135 0A2E  
                           i2l4007 2E0A                             i2l3129 34BA  
                           i2l3241 27AE                             i2l3305 2998  
                           i2l3321 2B88                             i2l3145 0A62  
                           i2l3137 0A3C                             i2l3217 0D48  
                           i2l4009 2E0C                             i2l3251 27D4  
                           i2l3243 27B2                             i2l3235 2794  
                           i2l3307 299E                             i2l3331 2BC2  
                           i2l3323 2B90                             i2l3315 2B66  
                           i2l3219 0D6C                             i2l3171 0B16  
                           i2l3163 0A94                             i2l3155 0A84  
                           i2l3147 0A74                             i2l3139 0A4E  
                           i2l3261 280A                             i2l3253 27E6  
                           i2l3245 27C0                             i2l3237 2798  
                           i2l3309 29AE                             i2l3333 2BC4  
                           i2l3325 2B9E                             i2l3317 2B6E  
                           i2l3341 2CCE                             i2l2701 306C  
                           i2l3181 0B8E                             i2l3173 0B18  
                           i2l3263 2820                             i2l3255 27EE  
                           i2l3271 2836                             i2l3247 27C8  
                           i2l3239 27A6                             i2l3335 2BCA  
                           i2l3327 2BA4                             i2l3319 2B80  
                           i2l3351 2D08                             i2l3343 2CD6  
                           i2l3511 22E2                             i2l2703 307E  
                           i2l2711 3224                             i2l3183 0BAE  
                           i2l3191 0C14                             i2l3175 0B3C  
                           i2l3167 0AA0                             i2l3159 0A8C  
                           i2l3273 2846                             i2l3265 2828  
                           i2l3257 27F6                             i2l3249 27CC  
                           i2l3281 2914                             i2l3329 2BBA  
                           i2l3345 2CE4                             i2l3337 2CB4  
                           i2l3521 237A                             i2l3513 22F8  
                           i2l2801 2074                             i2l2705 3082  
                           i2l2713 323C                             i2l3193 0C38  
                           i2l3185 0BBC                             i2l3177 0B72  
                           i2l3169 0AF4                             i2l3275 284E  
                           i2l3267 282A                             i2l3259 2804  
                           i2l3291 2944                             i2l3283 2922  
                           i2l3347 2CFA                             i2l3339 2CC6  
                           i2l3523 2384                             i2l3515 2304  
                           i2l2731 33BE                             i2l2811 20EA  
                           i2l2803 20A2                             i2l2707 3214  
                           i2l3195 0C5C                             i2l3179 0B80  
                           i2l4307 0AC6                             i2l3269 2830  
                           i2l3293 2956                             i2l3285 292A  
                           i2l3349 2D02                             i2l3525 238E  
                           i2l3517 230C                             i2l3509 2264  
                           i2l2733 33DA                             i2l4309 1908  
                           i2l2741 1B78                             i2l2813 210A  
                           i2l2805 20C2                             i2l2709 3220  
                           i2l2821 26F2                             i2l2901 14AA  
                           i2l3197 0CA4                             i2l3189 0C02  
                           i2l3461 332A                             i2l3295 295E  
                           i2l3287 292E                             i2l3279 2910  
                           i2l3519 2344                             i2l3463 349A  
                           i2l2751 1BCE                             i2l2743 1B98  
                           i2l2807 20D4                             i2l2831 2738  
                           i2l2823 2700                             i2l2911 154A  
                           i2l2903 14B2                             i2l3471 2D18  
                           i2l3527 285A                             i2l3297 2966  
                           i2l3289 293C                             i2l3457 3430  
                           i2l3537 3512                             i2l3465 349E  
                           i2l2761 1C22                             i2l2753 1BDA  
                           i2l2745 1B9C                             i2l2737 1B66  
                           i2l2809 20DA                             i2l2841 3142  
                           i2l2681 2604                             i2l2833 2766  
                           i2l2825 270C                             i2l2817 26CE  
                           i2l2921 1606                             i2l2913 1550  
                           i2l2905 14BC                             i2l3473 2D20  
                           i2l3715 352A                             i2l3299 2974  
                           i2l3539 3514                             i2l3467 34A2  
                           i2l2843 31DC                             i2l2851 2EFA  
                           i2l2771 1C96                             i2l2763 1C34  
                           i2l2755 1BF8                             i2l2747 1BAA  
                           i2l2739 1B6A                             i2l2691 2686  
                           i2l2683 2616                             i2l2835 277A  
                           i2l2827 2720                             i2l2819 26DE  
                           i2l2931 1658                             i2l2923 1620  
                           i2l2907 14C2                             i2l2915 15B4  
                           i2l3475 2D2E                             i2l3731 2B32  
                           i2l3459 3318                             i2l3717 352C  
                           i2l3661 3566                             i2l3469 34AA  
                           i2l2853 2F28                             i2l2765 1C62  
                           i2l2757 1C00                             i2l2773 1C9C  
                           i2l2749 1BCA                             i2l2781 1FC8  
                           i2l2677 34CA                             i2l2685 2628  
                           i2l2829 2734                             i2l2933 166A  
                           i2l2917 15CE                             i2l2925 1630  
                           i2l2909 1544                             i2l3477 2D54  
                           i2l3733 2B36                             i2l3741 2BEA  
                           i2l3901 0842                             i2l3671 3108  
                           i2l2855 2F2C                             i2l2847 2EE2  
                           i2l2951 1884                             i2l2943 184C  
                           i2l2775 1CAC                             i2l2767 1C82  
                           i2l2759 1C14                             i2l2791 200C  
                           i2l2783 1FCC                             i2l2839 3128  
                           i2l2679 34D8                             i2l2687 2632  
                           i2l2935 1676                             i2l2927 1642  
                           i2l2919 15EC                             i2l3735 2B3A  
                           i2l3727 2AF2                             i2l3663 3506  
                           i2l3743 2C16                             i2l3911 087A  
                           i2l3903 084C                             i2l3665 30E6  
                           i2l2849 2EE6                             i2l2961 18DA  
                           i2l2953 18BA                             i2l2945 1860  
                           i2l2777 1CCC                             i2l2769 1C84  
                           i2l2793 202C                             i2l2785 1FDA  
                           i2l2689 2650                             i2l2937 167E  
                           i2l2929 1652                             i2l2881 13D4  
                           i2l3681 2FC0                             i2l3673 2F84  
                           i2l3737 2B4E                             i2l3729 2B06  
                           i2l3745 2C1A                             i2l3921 08BE  
                           i2l3913 0890                             i2l3905 0850  
                           i2l3841 066A                             i2l3833 064A  
                           i2l3667 30F2                             i2l2971 1954  
                           i2l2963 18E2                             i2l2955 18BE  
                           i2l2947 1864                             i2l2795 204A  
                           i2l2787 1FFA                             i2l2699 3060  
                           i2l2939 168E                             i2l2891 144E  
                           i2l2883 13F4                             i2l3675 2F94  
                           i2l3747 2C1E                             i2l3739 2BDA  
                           i2l3931 090C                             i2l3923 08D8  
                           i2l3915 08A4                             i2l3907 085E  
                           i2l3851 06B6                             i2l3843 0680  
                           i2l3835 064E                             i2l2877 33E4  
                           i2l3669 3104                             i2l2965 18EA  
                           i2l2949 1868                             i2l2797 2052  
                           i2l2789 1FFE                             i2l2893 1468  
                           i2l2885 141C                             i2l3677 2F9C  
                           i2l3749 2C32                             i2l3933 0910  
                           i2l3925 08E2                             i2l3941 0944  
                           i2l3909 0876                             i2l3861 06F6  
                           i2l3845 0684                             i2l3837 0658  
                           i2l3853 06BE                             i2l2879 33F2  
                           i2l2975 1992                             i2l2967 191E  
                           i2l2959 18C4                             i2l2799 2066  
                           i2l2895 1484                             i2l2887 143C  
                           i2l3679 2FA4                             i2l3951 098A  
                           i2l3943 0954                             i2l3935 0926  
                           i2l3927 08E6                             i2l3919 08AE  
                           i2l3871 074A                             i2l3863 0704  
                           i2l3855 06CE                             i2l3847 069A  
                           i2l3839 065C                             i2l2977 19A4  
                           i2l2897 1496                             i2l2889 144C  
                           i2l3953 09A2                             i2l3945 096E  
                           i2l3937 093A                             i2l3929 08F4  
                           i2l3881 0788                             i2l3865 071A  
                           i2l3857 06E8                             i2l3849 06B0  
                           i2l2979 19B6                             i2l2899 14A4  
                           i2l3955 09A6                             i2l3947 0978  
                           i2l3963 09DA                             i2l3891 07F8  
                           i2l3883 078C                             i2l3867 071E  
                           i2l3859 06F2                             i2l3875 0754  
                           i2l3965 09EA                             i2l3957 09BC  
                           i2l3949 097C                             i2l3893 080E  
                           i2l3885 079A                             i2l3877 0764  
                           i2l3869 0734                             i2l3967 0A00  
                           i2l3959 09D0                             i2l3887 07DE  
                           i2l3879 077E                             i2l3969 0A04  
                           i2l3889 07E2                             i2l3897 0818  
                           i2l3899 0828                          ??i2_fputc 0006  
                        ??i2_fputs 000F                      vfpfcnvrt@done 00DC  
                        ??i2_putch 0001                             _SSPADD 000FC8  
                           _TRISC3 007CA3                             _TRISC4 007CA4  
                           _SSPBUF 000FC9                     ?_lcd1602_clear 0001  
                   ?_lcd1602_blink 0001                     i2___aodiv@sign 0012  
                           i2abs@a 0013                             _Hi_ISR 0008  
                           i2_atoi 184C                             i2_dtoa 13D4  
                      i2setI2C@reg 000A                     ?_lcd1602_print 008B  
                           i2pad@i 0019                             i2pad@p 0016  
                           i2pad@w 001B            ??i2_lcd1602_displaychar 0001  
                   ?i2_lcd1602_cmd 0001           _I2C_Master_RepeatedStart 355E  
                     vfprintf@cfmt 00E6                     i2___aomod@sign 0012  
         i2_lcd1602_cursorNextLine 3506                          ??___aodiv 009A  
                    i2vfprintf@fmt 0059                          ??___aomod 009A  
                           ___wmul 3346                             _getI2C 327E  
                        ??___awdiv 0005                          ??___awmod 0005  
                        ??___lldiv 0092                          ??___lwdiv 000A  
                        ??___lwmod 0005                        ?i2_vfprintf 0057  
             lcd1602_setCursor@col 008B                   __end_of_init_i2c 3396  
             lcd1602_setCursor@row 0094                             _setI2C 340A  
                           clear_0 2ACC                   ___awdiv@quotient 0007  
                           _minute 00F2                             _second 00F0  
                  ___awmod@divisor 0003                             isa$std 000001  
                  ___awmod@counter 0005                             pad@buf 009D  
                 lcd1602_print@str 008B                             dtoa@fp 00A6  
                           _strlen 3168                             fputc@c 008B  
                           fputs@c 0098                             fputs@i 0099  
                     __pdataCOMRAM 0077                  __end_ofi2___aodiv 1CEE  
                           fputs@s 0094                          ??_isdigit 008C  
                __end_ofi2___aomod 212C                       __mediumconst 0000  
                        ??_isspace 008C         __size_of_lcd1602_setCursor 0034  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                 i2___aomod@dividend 0001  
                   ??_init_pcf8563 008F                   __end_of_vfprintf 2CB4  
                        ??_sprintf 00E8                  __end_ofi2_isdigit 3214  
                       __accesstop 0080            __end_of__initialization 2AE4  
                __end_ofi2_isspace 2F34                  ??_lcd1602_display 008B  
                ??_lcd1602_noBlink 0002                      ___rparam_used 000001  
                __end_ofi2_sprintf 2FD2                  ??_lcd1602_initial 008B  
                    __end_ofi2_abs 3168                      __end_ofi2_pad 2794  
                   __pcstackCOMRAM 0001                       __pidataBANK0 3584  
                     __pidataBANK1 3536                     i2_lcd1602_home 3566  
                    __end_of_myISR 0A0A                      __end_of_fputc 253A  
                    __end_of_fputs 301A                      __end_of_putch 3498  
                        ?i2___wmul 0001                            ??i2_abs 0015  
                      i2putch@byte 0001                            ??i2_pad 0018  
                        ?i2_setI2C 0009                     i2vfpfcnvrt@fmt 0043  
                ??i2_lcd1602_print 0006                          ?i2_strlen 0001  
                          ??_myISR 0073                            ??_fputc 008F  
                          ??_fputs 0098                            ??_putch 008A  
                       __pbssBANK0 00EA                         __pbssBANK1 0100  
                  ??_lcd1602_clear 008B                    ??_lcd1602_blink 0002  
                      i2sprintf@ap 0069                __size_ofi2_vfprintf 0062  
                  ??_lcd1602_print 008F                            ?_Hi_ISR 0001  
                          ?i2_atoi 0008                            ?i2_dtoa 001D  
                  ??i2_lcd1602_cmd 0001                      ??_lcd1602_cmd 008A  
           __end_ofi2_lcd1602_home 356E                            ?___wmul 008A  
                          ?_getI2C 0001                            ?_setI2C 008C  
                          ?_strlen 008A                         ??i2___wmul 0005  
               __size_of_printDate 0074                         ??i2_setI2C 000A  
               __size_of_printTime 0070                    i2_vfpfcnvrt$960 0055  
     lcd1602_setCursor@row_offsets 008C                 __size_of_vfpfcnvrt 0370  
                     init_i2c@freq 00A3                         ??i2_strlen 0003  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                          _SSPSTAT 000FC7                         getI2C@data 008E  
                     i2setI2C@data 0009                            i2_fputc 2604  
                          i2_fputs 3060                            i2atoi@n 0015  
                          i2pad@fp 0012                            i2atoi@s 0008  
                        ?_init_i2c 00A3                            i2_putch 34C8  
                          i2dtoa@d 001F                            i2dtoa@i 003F  
                          i2dtoa@n 0037                            i2dtoa@p 0031  
                          i2dtoa@s 0035                            i2dtoa@w 0033  
                  __size_of_Hi_ISR 2E32        __size_ofi2_I2C_Master_Start 0008  
                  __size_ofi2_atoi 0190                    __size_ofi2_dtoa 02E4  
      __size_ofi2_I2C_Master_Write 000C                            __Hparam 0000  
                          __Lparam 0000                    ?i2_lcd1602_home 0001  
                          ___aodiv 19DC                            ___aomod 1E62  
                          ___awdiv 2794                            ___awmod 2910  
             __end_of_init_pcf8563 3316                            ___lldiv 29C0  
                  __size_of___wmul 0028                    __size_of_getI2C 0034  
                          ___lwdiv 2B66                            ___lwmod 2CB4  
                        ?_vfprintf 00E0                     i2vfprintf@cfmt 005D  
                     __psmallconst 0600                __end_of_lcd1602_cmd 3480  
                     ?i2_vfpfcnvrt 0041                    __size_of_setI2C 0024  
                          __pcinit 2A66                            __ramtop 0600  
                          __ptext0 1CEE                            __ptext1 2E3A  
                          __ptext2 2C4A                            __ptext3 0D80  
                          __ptext4 10F0                            __ptext5 253A  
                          __ptext6 3168                            __ptext7 2FD2  
                          __ptext8 246E                            __ptext9 3480  
                  __size_of_strlen 003A                       __size_of_abs 0042  
                     __size_of_pad 00CA                            _isdigit 31A2  
      __end_of_lcd1602_displaychar 3466           __size_of_PCF8563_getDate 0138  
                 ___awmod@dividend 0001           __size_of_PCF8563_getTime 00D4  
                          _isspace 2E8E           __size_of_I2C_Master_Init 0060  
         __size_of_I2C_Master_Read 0034                    __displaycontrol 007E  
         __size_of_I2C_Master_Wait 0028           __size_of_I2C_Master_Stop 0008  
                          atoi@neg 0097                            _sprintf 2E3A  
         __size_of_PCF8563_setDate 0136                     __pintcode_body 2DDA  
         __size_of_PCF8563_setTime 00B8               end_of_initialization 2AE4  
       ??_I2C_Master_RepeatedStart 008B         ??i2_lcd1602_cursorNextLine 000C  
                       ??_init_i2c 00AB                            fputc@fp 008D  
                __end_of_month_day 061B                      __Lmediumconst 0000  
                          int_func 2DDA                            fputs@fp 0096  
              i2___wmul@multiplier 0001          __size_of_I2C_Master_Start 0008  
        __size_of_I2C_Master_Write 000E                    ___lldiv@divisor 008E  
                __end_of_printDate 2B66                    ___lldiv@counter 0096  
                __end_of_printTime 2C4A     __size_ofi2_lcd1602_displaychar 0018  
                __end_of_vfpfcnvrt 10F0      __end_ofi2_lcd1602_displaychar 34B0  
                 I2C_Master_Read@a 008B                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                     ??i2_vfprintf 005D                         ??_vfprintf 00E6  
                          strlen@a 008C                            strlen@s 008A  
                        _PORTBbits 000F81                      i2_isspace$998 0007  
                i2___aodiv@divisor 0009                  i2___aodiv@counter 0011  
                  _lcd1602_display 34FA                    _lcd1602_noBlink 3512  
                i2_I2C_Master_Wait 33E4                  i2_I2C_Master_Stop 356E  
                        i2___aodiv 1B66                    _lcd1602_initial 2F34  
     __size_ofi2_lcd1602_setCursor 0030                          i2___aomod 1FC8  
               ?i2_I2C_Master_Wait 0001                 ?i2_I2C_Master_Stop 0001  
               __end_ofi2_vfprintf 2D7A                          i2_isdigit 31DC  
              ??i2_I2C_Master_Wait 0001                ??i2_I2C_Master_Stop 0002  
                   __end_of_Hi_ISR 2E3A                     __end_ofi2_atoi 19DC  
                   __end_ofi2_dtoa 16B8                        _lcd1602_cmd 3466  
                        i2_isspace 2EE2                          i2atoi@neg 000E  
             I2C_Master_Init@clock 009B                          i2_sprintf 2F84  
                      vfpfcnvrt@ap 00CE                        vfpfcnvrt@fp 00CA  
                      vfpfcnvrt@ll 00D4                     __end_of___wmul 336E  
                   __end_of_getI2C 32B2                    i2_lcd1602_print 30E6  
                    __pidataCOMRAM 357E                          i2fputc@fp 0004  
            i2lcd1602_print@length 0004                     __end_of_setI2C 342E  
                        i2fputs@fp 000D                   i2___wmul@product 0005  
                   __end_of_strlen 31A2          __end_ofi2_I2C_Master_Wait 340A  
              start_initialization 2A66          __end_ofi2_I2C_Master_Stop 3576  
                __size_ofi2___wmul 0026                        __end_of_abs 30E6  
                      __end_of_pad 2604                 i2lcd1602_print@str 0002  
                __size_ofi2_setI2C 001E                         ?i2___aodiv 0001  
                       ?i2___aomod 0001                 _PCF8563_getDate$96 0099  
                ??_PCF8563_getDate 0095                         setI2C@data 008C  
                __size_ofi2_strlen 0036                  ??_PCF8563_getTime 0095  
                        i2strlen@a 0003                          i2strlen@s 0001  
         ??_lcd1602_cursorNextLine 0095                  ??_I2C_Master_Init 009F  
                ??_I2C_Master_Read 008B                  ??_I2C_Master_Wait 008A  
                ??_I2C_Master_Stop 008B                           ??_Hi_ISR 0080  
                         ??i2_atoi 000A                           ??i2_dtoa 0027  
                ??_PCF8563_setDate 0011              __size_of_init_pcf8563 0030  
                ??_PCF8563_setTime 000D                         ?i2_isdigit 0001  
                    ?_lcd1602_home 0001                         ?i2_isspace 0001  
                      vfprintf@fmt 00E2                PCF8563_getDate@year 008F  
                     i2vfprintf@ap 005B                    i2vfpfcnvrt@done 0053  
                     i2vfprintf@fp 0057                           ??___wmul 008E  
                         ??_getI2C 008D                         ?i2_sprintf 005F  
                      __pdataBANK0 00F0                        __pdataBANK1 0147  
                         ??_setI2C 008D            __end_of_lcd1602_display 3506  
          __end_of_lcd1602_noBlink 351E                  i2___aomod@divisor 0009  
                         ??_strlen 008C                  i2___aomod@counter 0011  
          __end_of_lcd1602_initial 2F84               __size_ofi2_vfpfcnvrt 0376  
                     i2sprintf@fmt 0061                        __pbssCOMRAM 007D  
                    __pcstackBANK0 0080                      __pcstackBANK1 0135  
                 ___aodiv@dividend 008A                       _init_pcf8563 32E6  
                         ?i2_fputc 0002                           ?i2_fputs 000B  
                 ??i2_lcd1602_home 0002                           ?i2_putch 0001  
            __end_of_lcd1602_clear 354E              __end_of_lcd1602_blink 3536  
                   ??_lcd1602_home 008B              __end_of_lcd1602_print 3060  
                 _I2C_Master_Start 3556                i2I2C_Master_Write@d 0002  
                 _I2C_Master_Write 34EC                  __size_of_init_i2c 0028  
                 ___lwdiv@dividend 0006            __end_ofi2_lcd1602_print 3128  
            __end_ofi2_lcd1602_cmd 34C8                          __pintcode 0008  
                         ?___aodiv 008A                           ?___aomod 008A  
                         ?___awdiv 0001                   ___aodiv@quotient 009C  
                         ?___awmod 0001                           ?___lldiv 008A  
               _PCF8563_setDate$87 0015                           ?___lwdiv 0006  
                         ?___lwmod 0001                PCF8563_getTime@hour 008F  
       i2lcd1602_displaychar@value 0001                  __size_of_vfprintf 006A  
                        getI2C@reg 008D                        __smallconst 0600  
                         ?_isdigit 008A         __size_ofi2_I2C_Master_Wait 0026  
                   __size_ofi2_abs 0040         __size_ofi2_I2C_Master_Stop 0008  
                   __size_ofi2_pad 00C6                           ?_isspace 008A  
             _PCF8563_setDate$1290 0013                   ___lwdiv@quotient 000A  
                      ??i2___aodiv 0011                        ??i2___aomod 0011  
                   __size_of_myISR 03C0                           ?_sprintf 0135  
                   __size_of_fputc 00CC                     __size_of_fputs 0048  
                   __size_of_putch 0018         __end_ofi2_I2C_Master_Start 357E  
       __end_ofi2_I2C_Master_Write 352A    __size_of_lcd1602_cursorNextLine 000E  
                   ___wmul@product 008E                        ??i2_isdigit 0003  
                         i2u200_40 323C                           i2u200_41 3238  
                         i2u210_40 1C62                           i2u210_41 1C5E  
                         i2u211_40 1CAC                           i2u211_41 1CA8  
                         i2u300_40 2B80                           i2u212_40 1FDA  
                         i2u220_40 2756                           i2u300_41 2B7C  
                         i2u212_41 1FD6                           i2u220_41 2752  
                         i2u301_40 2B9E                           i2u205_40 1B78  
                         i2u213_40 200C                           i2u221_40 2766  
                         i2u301_41 2B9A                           i2u205_41 1B74  
                         i2u213_41 2008                           i2u221_41 2762  
                         i2u302_40 2BBA                           i2u230_40 3408  
                         i2u206_40 1BAA                           i2u214_40 204A  
                         i2u222_40 3142                           i2u302_41 2BB6  
                         i2u230_41 3404                           i2u206_41 1BA6  
                         i2u214_41 2046                           i2u222_41 313E  
                      ??i2_isspace 0003                           i2u303_40 2CC6  
                         i2u223_40 320C                           i2u215_40 2074  
                         i2u231_40 1404                           i2u303_41 2CC2  
                         i2u223_41 3206                           i2u207_41 1BD4  
                         i2u215_41 2070                           i2u231_41 13FE  
                         i2u304_40 2CE4                           i2u224_40 320E  
                         i2u208_40 1BF8                           i2u216_40 20A2  
                         i2u240_40 1606                           i2u232_40 1406  
                         i2u304_41 2CE0                           i2u208_41 1BF4  
                         i2u216_41 209E                           i2u240_41 1602  
                         i2u305_40 2CFA                           i2u225_40 2EFA  
                         i2u209_40 1C22                           i2u217_40 20EA  
                         i2u241_40 1620                           i2u233_40 141C  
                         i2u305_41 2CF6                           i2u225_41 2EF6  
                         i2u209_41 1C1E                           i2u217_41 20E6  
                         i2u241_41 161C                           i2u233_41 1418  
                         i2u226_40 2F28                           i2u250_40 198E  
                         i2u218_40 26DE                           i2u242_40 1630  
                         i2u234_40 144C                           i2u226_41 2F24  
                         i2u218_41 26DA                           i2u242_41 162C  
                         i2u234_41 1448                           i2u251_40 19A4  
                         i2u219_40 2700                           i2u243_40 1642  
                         i2u235_40 1468                           i2u251_41 19A0  
                         i2u219_41 26FC                           i2u243_41 163E  
                         i2u235_41 1464                           i2u332_40 22F8  
                         i2u252_40 19B6                           i2u244_40 1652  
                         i2u236_40 1496                           i2u332_41 22F4  
                         i2u252_41 19B2                           i2u244_41 164E  
                         i2u236_41 1492                          _month_day 0601  
                         i2u229_40 33F2                           i2u245_40 166A  
                         i2u237_40 14A4                           i2u229_41 33EE  
                         i2u245_41 1666                           i2u237_41 14A0  
                         i2u246_40 1884                           i2u238_40 15CE  
                         i2u246_41 1880                           i2u238_41 15CA  
                         i2u247_40 18BA                           i2u239_40 15EC  
                         i2u247_41 18B6                           i2u239_41 15E8  
                         i2u248_40 18D6                           i2u280_40 0BFC  
                         i2u360_40 0704                           i2u248_41 18D2  
                         i2u280_41 0BF6                           i2u328_41 3322  
                         i2u360_41 0700                           i2u249_40 198C  
                         i2u193_40 34D8                           i2u281_40 0BFE  
                         i2u329_40 2D70                           i2u361_40 071A  
                         i2u249_41 1986                           i2u193_41 34D4  
                         i2u329_41 2D6C                           i2u361_41 0716  
                         i2u290_40 27E6                           i2u194_40 2616  
                         i2u282_40 0C14                           i2u370_40 085E  
                         i2u362_40 0734                           i2u290_41 27E2  
                         i2u194_41 2612                           i2u282_41 0C10  
                         i2u370_41 085A                           i2u362_41 0730  
                         i2u291_40 2804                           i2u347_40 3126  
                         i2u195_40 2628                           i2u283_40 0C38  
                         i2u275_40 0A2E                           i2u371_40 0876  
                         i2u363_40 074A                           i2u355_40 066A  
                         i2u291_41 2800                           i2u347_41 3122  
                         i2u195_41 2624                           i2u283_41 0C34  
                         i2u275_41 0A2A                           i2u371_41 0872  
                         i2u363_41 0746                           i2u355_41 0666  
                         i2u292_40 2820                           i2u196_40 2650  
                         i2u284_40 0C5C                           i2u276_40 0B06  
                         i2u380_40 098A                           i2u372_40 0890  
                         i2u364_40 0762                           i2u356_40 0680  
                         i2u292_41 281C                           i2u196_41 264C  
                         i2u284_41 0C58                           i2u276_41 0B02  
                         i2u380_41 0986                           i2u372_41 088C  
                         i2u364_41 075E                           i2u356_41 067C  
                         i2u293_40 2846                           i2u197_40 2686  
                         i2u285_40 0D00                           i2u277_40 0B16  
                         i2u381_40 09A2                           i2u373_40 08A4  
                         i2u365_40 079A                           i2u357_40 069A  
                         i2u293_41 2842                           i2u197_41 2682  
                         i2u285_41 0CFC                           i2u277_41 0B12  
                         i2u381_41 099E                           i2u373_41 08A0  
                         i2u365_41 0796                           i2u357_41 0696  
                         i2u294_40 2922                           i2u278_40 0B3C  
                         i2u382_40 09BC                           i2u374_40 08BC  
                         i2u366_40 07DE                           i2u358_40 06B0  
                         i2u294_41 291E                           i2u278_41 0B38  
                         i2u382_41 09B8                           i2u374_41 08B8  
                         i2u366_41 07DA                           i2u358_41 06AC  
                         i2u390_47 076E                           i2u295_40 293C  
                         i2u199_40 30A2                           i2u279_40 0B80  
                         i2u383_40 09D0                           i2u375_40 08F4  
                         i2u367_40 07F8                           i2u359_40 06CC  
                         i2u295_41 2938                           i2u199_41 309E  
                         i2u279_41 0B7C                           i2u383_41 09CC  
                         i2u375_41 08F0                           i2u367_41 07F4  
                         i2u359_41 06C8                      init_i2c@clock 00A7  
                         i2u391_47 0832                           i2u288_40 27A6  
                         i2u296_40 2956                           i2u384_40 09E8  
                         i2u376_40 090C                           i2u368_40 080E  
                         i2u288_41 27A2                           i2u296_41 2952  
                         i2u384_41 09E4                           i2u376_41 0908  
                         i2u368_41 080A                           i2u392_47 08C8  
                         i2u289_40 27C0                           i2u297_40 2974  
                         i2u377_40 0926                           i2u369_40 0826  
                         i2u289_41 27BC                           i2u297_41 2970  
                         i2u377_41 0922                           i2u369_41 0822  
                         i2u393_47 095E                           i2u298_40 298A  
                         i2u378_40 093A                           i2u298_41 2986  
                         i2u378_41 0936                           i2u394_47 09F4  
                         i2u299_40 29AE                           i2u379_40 0952  
                         i2u299_41 29AA                           i2u379_41 094E  
                         i2u395_47 2C3C                           i2u396_47 2B58  
                         i2u397_47 34A4                           i2u389_47 06D8  
                         i2u398_47 34BC                i2_lcd1602_setCursor 3316  
                      ??i2_sprintf 0069                          _printDate 2AF2  
                        _printTime 2BDA                          _vfpfcnvrt 0D80  
                 ?_lcd1602_display 0001                   ?_lcd1602_noBlink 0001  
              lcd1602_print@length 008D                  ___wmul@multiplier 008A  
                         i2___wmul 33BE                   ?_lcd1602_initial 0001  
                         i2_setI2C 342E                           i2pad@buf 0014  
              I2C_Master_Init@freq 0097                           i2dtoa@fp 001D  
                         i2_strlen 3214               ?i2_lcd1602_setCursor 0002  
              I2C_Master_Read@temp 008C                          copy_data0 2A7A  
                        copy_data1 2A9A                           i2fputc@c 0002  
                        copy_data2 2ABA                           i2fputs@c 000F  
                         i2fputs@i 0010                           i2fputs@s 000B  
     __size_of_lcd1602_displaychar 001A                   __size_ofi2_fputc 00CA  
                 __size_ofi2_fputs 0044                   __size_ofi2_putch 0016  
                        setI2C@reg 008D                           __Hrparam 0000  
                     ?_lcd1602_cmd 0001                   ?i2_lcd1602_print 0002  
               PCF8563_getDate@day 0093                 PCF8563_getDate@buf 009C  
                       vfprintf@ap 00E4                           __Lrparam 0000  
                       vfprintf@fp 00E0                 PCF8563_getDate@mon 0091  
           PCF8563_getDate@century 009B             i2lcd1602_setCursor@col 0002  
                       ?_printDate 0001             i2lcd1602_setCursor@row 000B  
                 __size_of___aodiv 018A                         ?_printTime 0001  
__size_of_I2C_Master_RepeatedStart 0008                   __size_of___aomod 0166  
                 __size_of___awdiv 00C4              i2_lcd1602_displaychar 3498  
                 __size_of___awmod 00B0          ?_I2C_Master_RepeatedStart 0001  
            i2___wmul@multiplicand 0003                   __size_of___lldiv 00A6  
                       ?_vfpfcnvrt 00CA                   __size_of___lwdiv 0074  
__size_ofi2_lcd1602_cursorNextLine 000C                   __size_of___lwmod 0064  
        ?i2_lcd1602_cursorNextLine 0001             _lcd1602_cursorNextLine 34DE  
                  ___aodiv@divisor 0092                    ___aodiv@counter 009A  
           lcd1602_setCursor@F2597 0147                    _PCF8563_getDate 212C  
                  _PCF8563_getTime 239A                         sprintf@fmt 0137  
             __end_of_lcd1602_home 3546                    _I2C_Master_Init 2D7A  
                  _I2C_Master_Read 32B2                    _I2C_Master_Wait 3396  
                         _atoi$980 0099                           _atoi$981 009D  
                         _atoi$982 009B                    _I2C_Master_Stop 354E  
                 __size_of_isdigit 003A                           _dtoa$945 00B8  
                  ___lwdiv@divisor 0008                    _PCF8563_setDate 2264  
            ??i2_lcd1602_setCursor 0003                   __size_of_isspace 0054  
                  ___lwdiv@counter 000C                           __ptext10 30A4  
                         __ptext11 1E62                           __ptext20 353E  
                         __ptext12 19DC                           __ptext21 34FA  
                         __ptext13 16B8                           __ptext30 29C0  
                         __ptext22 3546                           __ptext14 2E8E  
                         __ptext31 239A                           __ptext23 34DE  
                         __ptext15 31A2                           __ptext32 212C  
                         __ptext24 324A                           __ptext16 3346  
                         __ptext41 064A                           __ptext33 327E  
                         __ptext25 3466                           __ptext17 301A  
                         __ptext50 13D4                           __ptext42 2BDA  
                         __ptext34 34EC                           __ptext26 32E6  
                         __ptext18 344C                           __ptext51 26CE  
                         __ptext43 3506                           __ptext35 354E  
                         __ptext27 340A                           __ptext19 2F34  
                         __ptext60 2EE2                           __ptext52 3214  
                         __ptext44 3316                           __ptext36 3556  
                         __ptext28 336E                           __ptext61 31DC  
                         __ptext53 3060                           __ptext45 2858  
                         __ptext37 355E                           __ptext29 2D7A  
                         __ptext70 356E                           __ptext62 33BE  
                         __ptext54 2604                           __ptext46 2AF2  
                         __ptext38 32B2                           __ptext71 3576  
                         __ptext63 30E6                           __ptext55 34C8  
                         __ptext47 2F84                           __ptext39 3396  
                         __ptext72 33E4                           __ptext64 3498  
                         __ptext56 3128                           __ptext48 2D18  
                         __ptext73 2CB4                           __ptext65 3566  
                         __ptext57 1FC8                           __ptext49 0A0A  
                         __ptext74 2B66                           __ptext66 3512  
                         __ptext58 1B66                           __ptext75 2910  
                         __ptext67 2264                           __ptext59 184C  
                         __ptext76 2794                           __ptext68 342E  
                         __ptext77 352A                           __ptext69 351E  
                         __ptext78 34B0                    _PCF8563_setTime 2858  
               PCF8563_getTime@min 0091                 PCF8563_getTime@sec 0093  
                 __size_of_sprintf 0054                           _init_i2c 336E  
                    __size_of_atoi 0194                      __size_of_main 0174  
                    __size_of_dtoa 02E4                   i2lcd1602_cmd@cmd 0001  
                         isa$xinst 000000                           int$flags 007F  
                 __displayfunction 0104                           _vfprintf 2C4A  
                      _isspace$998 0090                   ___aomod@dividend 008A  
                 i2lcd1602_print@i 0007           __end_of_I2C_Master_Start 355E  
                        putch@byte 008A           __end_of_I2C_Master_Write 34FA  
                       _INTCONbits 000FF2                           isdigit@c 008A  
                         intlevel2 0000                          sprintf@ap 013F  
                 ___lwmod@dividend 0001                           isspace@c 008A  
                 ___lldiv@dividend 008A                         _OSCCONbits 000FD3  
           ?i2_lcd1602_displaychar 0001            __end_of_PCF8563_getDate 2264  
                      ??_printDate 0071            __end_of_PCF8563_getTime 246E  
                      ??_printTime 0071            __end_of_I2C_Master_Init 2DDA  
                  ___aomod@divisor 0092            __end_of_I2C_Master_Read 32E6  
          __end_of_I2C_Master_Wait 33BE                      ??i2_vfpfcnvrt 0047  
          __end_of_I2C_Master_Stop 3556                        ??_vfpfcnvrt 00D0  
                  ___aomod@counter 009A                      _vfpfcnvrt$960 00DE  
         lcd1602_displaychar@value 008A            __end_of_PCF8563_setDate 239A  
          __end_of_PCF8563_setTime 2910                           sprintf@f 0141  
                         sprintf@s 0135                   ___lldiv@quotient 0092  
                I2C_Master_Write@d 008B                    ___lwmod@divisor 0003  
                  ___lwmod@counter 0005                       ___aodiv@sign 009B  
               i2___aodiv@dividend 0001                       ___aomod@sign 009B  
