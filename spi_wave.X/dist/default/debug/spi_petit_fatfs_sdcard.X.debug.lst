

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jan 18 19:51:27 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94  0000                     
    95                           ; Version 2.32
    96                           ; Generated 02/02/2021 GMT
    97                           ; 
    98                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F4520 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131                           	psect	idataBANK1
   132  0059C2                     __pidataBANK1:
   133                           	callstack 0
   134                           
   135                           ;initializer for stoa@F1141
   136  0059C2  28                 	db	40
   137  0059C3  6E                 	db	110
   138  0059C4  75                 	db	117
   139  0059C5  6C                 	db	108
   140  0059C6  6C                 	db	108
   141  0059C7  29                 	db	41
   142  0059C8  00                 	db	0
   143                           
   144                           	psect	mediumconst
   145  007B8C                     __pmediumconst:
   146                           	callstack 0
   147  007B8C  00                 	db	0
   148  007B8D                     create_name@cvt:
   149                           	callstack 0
   150  007B8D  80                 	db	128
   151  007B8E  9A                 	db	154
   152  007B8F  90                 	db	144
   153  007B90  41                 	db	65
   154  007B91  8E                 	db	142
   155  007B92  41                 	db	65
   156  007B93  8F                 	db	143
   157  007B94  80                 	db	128
   158  007B95  45                 	db	69
   159  007B96  45                 	db	69
   160  007B97  45                 	db	69
   161  007B98  49                 	db	73
   162  007B99  49                 	db	73
   163  007B9A  49                 	db	73
   164  007B9B  8E                 	db	142
   165  007B9C  8F                 	db	143
   166  007B9D  90                 	db	144
   167  007B9E  92                 	db	146
   168  007B9F  92                 	db	146
   169  007BA0  4F                 	db	79
   170  007BA1  99                 	db	153
   171  007BA2  4F                 	db	79
   172  007BA3  55                 	db	85
   173  007BA4  55                 	db	85
   174  007BA5  59                 	db	89
   175  007BA6  99                 	db	153
   176  007BA7  9A                 	db	154
   177  007BA8  9B                 	db	155
   178  007BA9  9C                 	db	156
   179  007BAA  9D                 	db	157
   180  007BAB  9E                 	db	158
   181  007BAC  9F                 	db	159
   182  007BAD  41                 	db	65
   183  007BAE  49                 	db	73
   184  007BAF  4F                 	db	79
   185  007BB0  55                 	db	85
   186  007BB1  A5                 	db	165
   187  007BB2  A5                 	db	165
   188  007BB3  A6                 	db	166
   189  007BB4  A7                 	db	167
   190  007BB5  A8                 	db	168
   191  007BB6  A9                 	db	169
   192  007BB7  AA                 	db	170
   193  007BB8  AB                 	db	171
   194  007BB9  AC                 	db	172
   195  007BBA  21                 	db	33
   196  007BBB  AE                 	db	174
   197  007BBC  AF                 	db	175
   198  007BBD  B0                 	db	176
   199  007BBE  B1                 	db	177
   200  007BBF  B2                 	db	178
   201  007BC0  B3                 	db	179
   202  007BC1  B4                 	db	180
   203  007BC2  B5                 	db	181
   204  007BC3  B6                 	db	182
   205  007BC4  B7                 	db	183
   206  007BC5  B8                 	db	184
   207  007BC6  B9                 	db	185
   208  007BC7  BA                 	db	186
   209  007BC8  BB                 	db	187
   210  007BC9  BC                 	db	188
   211  007BCA  BD                 	db	189
   212  007BCB  BE                 	db	190
   213  007BCC  BF                 	db	191
   214  007BCD  C0                 	db	192
   215  007BCE  C1                 	db	193
   216  007BCF  C2                 	db	194
   217  007BD0  C3                 	db	195
   218  007BD1  C4                 	db	196
   219  007BD2  C5                 	db	197
   220  007BD3  C6                 	db	198
   221  007BD4  C7                 	db	199
   222  007BD5  C8                 	db	200
   223  007BD6  C9                 	db	201
   224  007BD7  CA                 	db	202
   225  007BD8  CB                 	db	203
   226  007BD9  CC                 	db	204
   227  007BDA  CD                 	db	205
   228  007BDB  CE                 	db	206
   229  007BDC  CF                 	db	207
   230  007BDD  D0                 	db	208
   231  007BDE  D1                 	db	209
   232  007BDF  D2                 	db	210
   233  007BE0  D3                 	db	211
   234  007BE1  D4                 	db	212
   235  007BE2  D5                 	db	213
   236  007BE3  D6                 	db	214
   237  007BE4  D7                 	db	215
   238  007BE5  D8                 	db	216
   239  007BE6  D9                 	db	217
   240  007BE7  DA                 	db	218
   241  007BE8  DB                 	db	219
   242  007BE9  DC                 	db	220
   243  007BEA  DD                 	db	221
   244  007BEB  DE                 	db	222
   245  007BEC  DF                 	db	223
   246  007BED  E0                 	db	224
   247  007BEE  E1                 	db	225
   248  007BEF  E2                 	db	226
   249  007BF0  E3                 	db	227
   250  007BF1  E4                 	db	228
   251  007BF2  E5                 	db	229
   252  007BF3  E6                 	db	230
   253  007BF4  E7                 	db	231
   254  007BF5  E8                 	db	232
   255  007BF6  E9                 	db	233
   256  007BF7  EA                 	db	234
   257  007BF8  EB                 	db	235
   258  007BF9  EC                 	db	236
   259  007BFA  ED                 	db	237
   260  007BFB  EE                 	db	238
   261  007BFC  EF                 	db	239
   262  007BFD  F0                 	db	240
   263  007BFE  F1                 	db	241
   264  007BFF  F2                 	db	242
   265  007C00  F3                 	db	243
   266  007C01  F4                 	db	244
   267  007C02  F5                 	db	245
   268  007C03  F6                 	db	246
   269  007C04  F7                 	db	247
   270  007C05  F8                 	db	248
   271  007C06  F9                 	db	249
   272  007C07  FA                 	db	250
   273  007C08  FB                 	db	251
   274  007C09  FC                 	db	252
   275  007C0A  FD                 	db	253
   276  007C0B  FE                 	db	254
   277  007C0C  FF                 	db	255
   278  007C0D                     __end_ofcreate_name@cvt:
   279                           	callstack 0
   280  007C0D                     put_rc@str:
   281                           	callstack 0
   282  007C0D  4F                 	db	79
   283  007C0E  4B                 	db	75
   284  007C0F  00                 	db	0
   285  007C10  44                 	db	68
   286  007C11  49                 	db	73
   287  007C12  53                 	db	83
   288  007C13  4B                 	db	75
   289  007C14  5F                 	db	95
   290  007C15  45                 	db	69
   291  007C16  52                 	db	82
   292  007C17  52                 	db	82
   293  007C18  00                 	db	0
   294  007C19  4E                 	db	78
   295  007C1A  4F                 	db	79
   296  007C1B  54                 	db	84
   297  007C1C  5F                 	db	95
   298  007C1D  52                 	db	82
   299  007C1E  45                 	db	69
   300  007C1F  41                 	db	65
   301  007C20  44                 	db	68
   302  007C21  59                 	db	89
   303  007C22  00                 	db	0
   304  007C23  4E                 	db	78
   305  007C24  4F                 	db	79
   306  007C25  5F                 	db	95
   307  007C26  46                 	db	70
   308  007C27  49                 	db	73
   309  007C28  4C                 	db	76
   310  007C29  45                 	db	69
   311  007C2A  00                 	db	0
   312  007C2B  4E                 	db	78
   313  007C2C  4F                 	db	79
   314  007C2D  54                 	db	84
   315  007C2E  5F                 	db	95
   316  007C2F  4F                 	db	79
   317  007C30  50                 	db	80
   318  007C31  45                 	db	69
   319  007C32  4E                 	db	78
   320  007C33  45                 	db	69
   321  007C34  44                 	db	68
   322  007C35  00                 	db	0
   323  007C36  4E                 	db	78
   324  007C37  4F                 	db	79
   325  007C38  54                 	db	84
   326  007C39  5F                 	db	95
   327  007C3A  45                 	db	69
   328  007C3B  4E                 	db	78
   329  007C3C  41                 	db	65
   330  007C3D  42                 	db	66
   331  007C3E  4C                 	db	76
   332  007C3F  45                 	db	69
   333  007C40  44                 	db	68
   334  007C41  00                 	db	0
   335  007C42  4E                 	db	78
   336  007C43  4F                 	db	79
   337  007C44  5F                 	db	95
   338  007C45  46                 	db	70
   339  007C46  49                 	db	73
   340  007C47  4C                 	db	76
   341  007C48  45                 	db	69
   342  007C49  5F                 	db	95
   343  007C4A  53                 	db	83
   344  007C4B  59                 	db	89
   345  007C4C  53                 	db	83
   346  007C4D  54                 	db	84
   347  007C4E  45                 	db	69
   348  007C4F  4D                 	db	77
   349  007C50  00                 	db	0
   350  007C51  00                 	db	0
   351  007C52                     __end_ofput_rc@str:
   352                           	callstack 0
   353  0000                     _PORTAbits	set	3968
   354  0000                     _PORTBbits	set	3969
   355  0000                     _LATBbits	set	3978
   356  0000                     _LATAbits	set	3977
   357  0000                     _TRISAbits	set	3986
   358  0000                     _TRISCbits	set	3988
   359  0000                     _LATC	set	3979
   360  0000                     _TRISC	set	3988
   361  0000                     _SSPBUF	set	4041
   362  0000                     _SSPSTAT	set	4039
   363  0000                     _SSPCON1	set	4038
   364  0000                     _SPBRG	set	4015
   365  0000                     _RCSTA	set	4011
   366  0000                     _TXSTA	set	4012
   367  0000                     _TXREG	set	4013
   368  0000                     _RCREG	set	4014
   369  0000                     _CCPR1L	set	4030
   370  0000                     _T2CON	set	4042
   371  0000                     _PR2	set	4043
   372  0000                     _CCP1CON	set	4029
   373  0000                     _SSPIF	set	31987
   374  0000                     _TXIP	set	31996
   375  0000                     _RCIP	set	31997
   376  0000                     _TXIE	set	31980
   377  0000                     _TXIF	set	31988
   378  0000                     _RCIF	set	31989
   379  0000                     _RCIE	set	31981
   380  0000                     _TMR2ON	set	32338
   381  0000                     _INTCONbits	set	4082
   382  0000                     _PEIE	set	32662
   383  0000                     _GIE	set	32663
   384  0000                     _INT0IF	set	32657
   385  007C52                     STR_9:
   386  007C52  09                 	db	9
   387  007C53  52                 	db	82	;'R'
   388  007C54  65                 	db	101	;'e'
   389  007C55  61                 	db	97	;'a'
   390  007C56  64                 	db	100	;'d'
   391  007C57  20                 	db	32
   392  007C58  61                 	db	97	;'a'
   393  007C59  6C                 	db	108	;'l'
   394  007C5A  6C                 	db	108	;'l'
   395  007C5B  20                 	db	32
   396  007C5C  66                 	db	102	;'f'
   397  007C5D  69                 	db	105	;'i'
   398  007C5E  6C                 	db	108	;'l'
   399  007C5F  65                 	db	101	;'e'
   400  007C60  20                 	db	32
   401  007C61  61                 	db	97	;'a'
   402  007C62  6E                 	db	110	;'n'
   403  007C63  64                 	db	100	;'d'
   404  007C64  20                 	db	32
   405  007C65  6F                 	db	111	;'o'
   406  007C66  75                 	db	117	;'u'
   407  007C67  74                 	db	116	;'t'
   408  007C68  70                 	db	112	;'p'
   409  007C69  75                 	db	117	;'u'
   410  007C6A  74                 	db	116	;'t'
   411  007C6B  20                 	db	32
   412  007C6C  73                 	db	115	;'s'
   413  007C6D  71                 	db	113	;'q'
   414  007C6E  75                 	db	117	;'u'
   415  007C6F  61                 	db	97	;'a'
   416  007C70  72                 	db	114	;'r'
   417  007C71  65                 	db	101	;'e'
   418  007C72  20                 	db	32
   419  007C73  77                 	db	119	;'w'
   420  007C74  61                 	db	97	;'a'
   421  007C75  76                 	db	118	;'v'
   422  007C76  65                 	db	101	;'e'
   423  007C77  0D                 	db	13
   424  007C78  0A                 	db	10
   425  007C79  00                 	db	0
   426  007C7A                     STR_11:
   427  007C7A  09                 	db	9
   428  007C7B  52                 	db	82	;'R'
   429  007C7C  65                 	db	101	;'e'
   430  007C7D  61                 	db	97	;'a'
   431  007C7E  64                 	db	100	;'d'
   432  007C7F  20                 	db	32
   433  007C80  74                 	db	116	;'t'
   434  007C81  68                 	db	104	;'h'
   435  007C82  65                 	db	101	;'e'
   436  007C83  20                 	db	32
   437  007C84  66                 	db	102	;'f'
   438  007C85  69                 	db	105	;'i'
   439  007C86  6C                 	db	108	;'l'
   440  007C87  65                 	db	101	;'e'
   441  007C88  20                 	db	32
   442  007C89  31                 	db	49	;'1'
   443  007C8A  32                 	db	50	;'2'
   444  007C8B  38                 	db	56	;'8'
   445  007C8C  20                 	db	32
   446  007C8D  62                 	db	98	;'b'
   447  007C8E  79                 	db	121	;'y'
   448  007C8F  74                 	db	116	;'t'
   449  007C90  65                 	db	101	;'e'
   450  007C91  73                 	db	115	;'s'
   451  007C92  20                 	db	32
   452  007C93  61                 	db	97	;'a'
   453  007C94  6E                 	db	110	;'n'
   454  007C95  64                 	db	100	;'d'
   455  007C96  20                 	db	32
   456  007C97  64                 	db	100	;'d'
   457  007C98  75                 	db	117	;'u'
   458  007C99  6D                 	db	109	;'m'
   459  007C9A  70                 	db	112	;'p'
   460  007C9B  20                 	db	32
   461  007C9C  69                 	db	105	;'i'
   462  007C9D  74                 	db	116	;'t'
   463  007C9E  0D                 	db	13
   464  007C9F  0A                 	db	10
   465  007CA0  00                 	db	0
   466  007CA1                     STR_3:
   467  007CA1  0D                 	db	13
   468  007CA2  0A                 	db	10
   469  007CA3  0D                 	db	13
   470  007CA4  0A                 	db	10
   471  007CA5  50                 	db	80	;'P'
   472  007CA6  65                 	db	101	;'e'
   473  007CA7  74                 	db	116	;'t'
   474  007CA8  69                 	db	105	;'i'
   475  007CA9  74                 	db	116	;'t'
   476  007CAA  20                 	db	32
   477  007CAB  46                 	db	70	;'F'
   478  007CAC  61                 	db	97	;'a'
   479  007CAD  74                 	db	116	;'t'
   480  007CAE  46                 	db	70	;'F'
   481  007CAF  73                 	db	115	;'s'
   482  007CB0  20                 	db	32
   483  007CB1  74                 	db	116	;'t'
   484  007CB2  65                 	db	101	;'e'
   485  007CB3  73                 	db	115	;'s'
   486  007CB4  74                 	db	116	;'t'
   487  007CB5  20                 	db	32
   488  007CB6  6D                 	db	109	;'m'
   489  007CB7  6F                 	db	111	;'o'
   490  007CB8  6E                 	db	110	;'n'
   491  007CB9  69                 	db	105	;'i'
   492  007CBA  74                 	db	116	;'t'
   493  007CBB  6F                 	db	111	;'o'
   494  007CBC  72                 	db	114	;'r'
   495  007CBD  0D                 	db	13
   496  007CBE  0A                 	db	10
   497  007CBF  00                 	db	0
   498  007CC0                     STR_6:
   499  007CC0  09                 	db	9
   500  007CC1  49                 	db	73	;'I'
   501  007CC2  6E                 	db	110	;'n'
   502  007CC3  69                 	db	105	;'i'
   503  007CC4  74                 	db	116	;'t'
   504  007CC5  69                 	db	105	;'i'
   505  007CC6  61                 	db	97	;'a'
   506  007CC7  6C                 	db	108	;'l'
   507  007CC8  69                 	db	105	;'i'
   508  007CC9  7A                 	db	122	;'z'
   509  007CCA  65                 	db	101	;'e'
   510  007CCB  20                 	db	32
   511  007CCC  70                 	db	112	;'p'
   512  007CCD  68                 	db	104	;'h'
   513  007CCE  79                 	db	121	;'y'
   514  007CCF  73                 	db	115	;'s'
   515  007CD0  69                 	db	105	;'i'
   516  007CD1  63                 	db	99	;'c'
   517  007CD2  61                 	db	97	;'a'
   518  007CD3  6C                 	db	108	;'l'
   519  007CD4  20                 	db	32
   520  007CD5  64                 	db	100	;'d'
   521  007CD6  72                 	db	114	;'r'
   522  007CD7  69                 	db	105	;'i'
   523  007CD8  76                 	db	118	;'v'
   524  007CD9  65                 	db	101	;'e'
   525  007CDA  0D                 	db	13
   526  007CDB  0A                 	db	10
   527  007CDC  09                 	db	9
   528  007CDD  00                 	db	0
   529  007CDE                     STR_14:
   530  007CDE  73                 	db	115	;'s'
   531  007CDF  65                 	db	101	;'e'
   532  007CE0  65                 	db	101	;'e'
   533  007CE1  6B                 	db	107	;'k'
   534  007CE2  20                 	db	32
   535  007CE3  70                 	db	112	;'p'
   536  007CE4  6F                 	db	111	;'o'
   537  007CE5  69                 	db	105	;'i'
   538  007CE6  6E                 	db	110	;'n'
   539  007CE7  74                 	db	116	;'t'
   540  007CE8  65                 	db	101	;'e'
   541  007CE9  72                 	db	114	;'r'
   542  007CEA  20                 	db	32
   543  007CEB  69                 	db	105	;'i'
   544  007CEC  73                 	db	115	;'s'
   545  007CED  20                 	db	32
   546  007CEE  69                 	db	105	;'i'
   547  007CEF  6E                 	db	110	;'n'
   548  007CF0  76                 	db	118	;'v'
   549  007CF1  61                 	db	97	;'a'
   550  007CF2  6C                 	db	108	;'l'
   551  007CF3  69                 	db	105	;'i'
   552  007CF4  64                 	db	100	;'d'
   553  007CF5  0D                 	db	13
   554  007CF6  0A                 	db	10
   555  007CF7  00                 	db	0
   556  007CF8                     STR_7:
   557  007CF8  09                 	db	9
   558  007CF9  4D                 	db	77	;'M'
   559  007CFA  6F                 	db	111	;'o'
   560  007CFB  75                 	db	117	;'u'
   561  007CFC  6E                 	db	110	;'n'
   562  007CFD  74                 	db	116	;'t'
   563  007CFE  20                 	db	32
   564  007CFF  74                 	db	116	;'t'
   565  007D00  68                 	db	104	;'h'
   566  007D01  65                 	db	101	;'e'
   567  007D02  20                 	db	32
   568  007D03  76                 	db	118	;'v'
   569  007D04  6F                 	db	111	;'o'
   570  007D05  6C                 	db	108	;'l'
   571  007D06  75                 	db	117	;'u'
   572  007D07  6D                 	db	109	;'m'
   573  007D08  65                 	db	101	;'e'
   574  007D09  0D                 	db	13
   575  007D0A  0A                 	db	10
   576  007D0B  09                 	db	9
   577  007D0C  00                 	db	0
   578  007D0D                     STR_16:
   579  007D0D  09                 	db	9
   580  007D0E  66                 	db	102	;'f'
   581  007D0F  70                 	db	112	;'p'
   582  007D10  74                 	db	116	;'t'
   583  007D11  72                 	db	114	;'r'
   584  007D12  20                 	db	32
   585  007D13  3D                 	db	61	;'='
   586  007D14  20                 	db	32
   587  007D15  25                 	db	37
   588  007D16  6C                 	db	108	;'l'
   589  007D17  75                 	db	117	;'u'
   590  007D18  28                 	db	40
   591  007D19  30                 	db	48	;'0'
   592  007D1A  78                 	db	120	;'x'
   593  007D1B  25                 	db	37
   594  007D1C  6C                 	db	108	;'l'
   595  007D1D  58                 	db	88	;'X'
   596  007D1E  29                 	db	41
   597  007D1F  0D                 	db	13
   598  007D20  0A                 	db	10
   599  007D21  00                 	db	0
   600  007D22                     STR_17:
   601  007D22  09                 	db	9
   602  007D23  44                 	db	68	;'D'
   603  007D24  69                 	db	105	;'i'
   604  007D25  72                 	db	114	;'r'
   605  007D26  65                 	db	101	;'e'
   606  007D27  63                 	db	99	;'c'
   607  007D28  74                 	db	116	;'t'
   608  007D29  6F                 	db	111	;'o'
   609  007D2A  72                 	db	114	;'r'
   610  007D2B  79                 	db	121	;'y'
   611  007D2C  20                 	db	32
   612  007D2D  6C                 	db	108	;'l'
   613  007D2E  69                 	db	105	;'i'
   614  007D2F  73                 	db	115	;'s'
   615  007D30  74                 	db	116	;'t'
   616  007D31  69                 	db	105	;'i'
   617  007D32  6E                 	db	110	;'n'
   618  007D33  67                 	db	103	;'g'
   619  007D34  0D                 	db	13
   620  007D35  0A                 	db	10
   621  007D36  00                 	db	0
   622  007D37                     STR_18:
   623  007D37  09                 	db	9
   624  007D38  20                 	db	32
   625  007D39  20                 	db	32
   626  007D3A  20                 	db	32
   627  007D3B  3C                 	db	60	;'<'
   628  007D3C  44                 	db	68	;'D'
   629  007D3D  49                 	db	73	;'I'
   630  007D3E  52                 	db	82	;'R'
   631  007D3F  3E                 	db	62	;'>'
   632  007D40  20                 	db	32
   633  007D41  20                 	db	32
   634  007D42  20                 	db	32
   635  007D43  25                 	db	37
   636  007D44  73                 	db	115	;'s'
   637  007D45  0D                 	db	13
   638  007D46  0A                 	db	10
   639  007D47  00                 	db	0
   640  007D48                     STR_8:
   641  007D48  09                 	db	9
   642  007D49  4F                 	db	79	;'O'
   643  007D4A  70                 	db	112	;'p'
   644  007D4B  65                 	db	101	;'e'
   645  007D4C  6E                 	db	110	;'n'
   646  007D4D  20                 	db	32
   647  007D4E  61                 	db	97	;'a'
   648  007D4F  20                 	db	32
   649  007D50  66                 	db	102	;'f'
   650  007D51  69                 	db	105	;'i'
   651  007D52  6C                 	db	108	;'l'
   652  007D53  65                 	db	101	;'e'
   653  007D54  0D                 	db	13
   654  007D55  0A                 	db	10
   655  007D56  09                 	db	9
   656  007D57  00                 	db	0
   657  007D58                     STR_24:
   658  007D58  61                 	db	97	;'a'
   659  007D59  64                 	db	100	;'d'
   660  007D5A  64                 	db	100	;'d'
   661  007D5B  72                 	db	114	;'r'
   662  007D5C  3A                 	db	58	;':'
   663  007D5D  20                 	db	32
   664  007D5E  25                 	db	37
   665  007D5F  30                 	db	48	;'0'
   666  007D60  38                 	db	56	;'8'
   667  007D61  6C                 	db	108	;'l'
   668  007D62  58                 	db	88	;'X'
   669  007D63  20                 	db	32
   670  007D64  7C                 	db	124
   671  007D65  00                 	db	0
   672  007D66                     STR_20:
   673  007D66  09                 	db	9
   674  007D67  25                 	db	37
   675  007D68  75                 	db	117	;'u'
   676  007D69  20                 	db	32
   677  007D6A  69                 	db	105	;'i'
   678  007D6B  74                 	db	116	;'t'
   679  007D6C  65                 	db	101	;'e'
   680  007D6D  6D                 	db	109	;'m'
   681  007D6E  28                 	db	40
   682  007D6F  73                 	db	115	;'s'
   683  007D70  29                 	db	41
   684  007D71  0D                 	db	13
   685  007D72  0A                 	db	10
   686  007D73  00                 	db	0
   687  007D74                     STR_1:
   688  007D74  72                 	db	114	;'r'
   689  007D75  63                 	db	99	;'c'
   690  007D76  3D                 	db	61	;'='
   691  007D77  25                 	db	37
   692  007D78  75                 	db	117	;'u'
   693  007D79  20                 	db	32
   694  007D7A  46                 	db	70	;'F'
   695  007D7B  52                 	db	82	;'R'
   696  007D7C  5F                 	db	95	;'_'
   697  007D7D  25                 	db	37
   698  007D7E  73                 	db	115	;'s'
   699  007D7F  0D                 	db	13
   700  007D80  0A                 	db	10
   701  007D81  00                 	db	0
   702  007D82                     STR_19:
   703  007D82  09                 	db	9
   704  007D83  25                 	db	37
   705  007D84  39                 	db	57	;'9'
   706  007D85  6C                 	db	108	;'l'
   707  007D86  75                 	db	117	;'u'
   708  007D87  20                 	db	32
   709  007D88  20                 	db	32
   710  007D89  25                 	db	37
   711  007D8A  73                 	db	115	;'s'
   712  007D8B  0D                 	db	13
   713  007D8C  0A                 	db	10
   714  007D8D  00                 	db	0
   715  007D8E                     STR_2:
   716  007D8E  72                 	db	114	;'r'
   717  007D8F  63                 	db	99	;'c'
   718  007D90  3D                 	db	61	;'='
   719  007D91  25                 	db	37
   720  007D92  64                 	db	100	;'d'
   721  007D93  0D                 	db	13
   722  007D94  0A                 	db	10
   723  007D95  00                 	db	0
   724  007D96                     STR_29:
   725  007D96  20                 	db	32
   726  007D97  25                 	db	37
   727  007D98  30                 	db	48	;'0'
   728  007D99  38                 	db	56	;'8'
   729  007D9A  4C                 	db	76	;'L'
   730  007D9B  58                 	db	88	;'X'
   731  007D9C  00                 	db	0
   732  007D9D                     STR_25:
   733  007D9D  20                 	db	32
   734  007D9E  25                 	db	37
   735  007D9F  30                 	db	48	;'0'
   736  007DA0  32                 	db	50	;'2'
   737  007DA1  58                 	db	88	;'X'
   738  007DA2  00                 	db	0
   739  007DA3                     STR_28:
   740  007DA3  20                 	db	32
   741  007DA4  25                 	db	37
   742  007DA5  30                 	db	48	;'0'
   743  007DA6  34                 	db	52	;'4'
   744  007DA7  58                 	db	88	;'X'
   745  007DA8  00                 	db	0
   746  007DA9                     STR_50:
   747  007DA9  6C                 	db	108	;'l'
   748  007DAA  58                 	db	88	;'X'
   749  007DAB  00                 	db	0
   750  007DAC                     STR_32:
   751  007DAC  6C                 	db	108	;'l'
   752  007DAD  64                 	db	100	;'d'
   753  007DAE  00                 	db	0
   754  007DAF                     STR_36:
   755  007DAF  6C                 	db	108	;'l'
   756  007DB0  69                 	db	105	;'i'
   757  007DB1  00                 	db	0
   758  007DB2                     STR_41:
   759  007DB2  6C                 	db	108	;'l'
   760  007DB3  75                 	db	117	;'u'
   761  007DB4  00                 	db	0
   762  007DB5                     STR_46:
   763  007DB5  6C                 	db	108	;'l'
   764  007DB6  78                 	db	120	;'x'
   765  007DB7  00                 	db	0
   766  007DB8                     STR_21:
   767  007DB8  25                 	db	37
   768  007DB9  63                 	db	99	;'c'
   769  007DBA  00                 	db	0
   770  007DBB                     STR_26:
   771  007DBB  20                 	db	32
   772  007DBC  00                 	db	0
   773  007DBD                     STR_4:
   774  007DBD  3E                 	db	62	;'>'
   775  007DBE  00                 	db	0
   776  007DBF  00                 	db	0	; dummy byte at the end
   777  0000                     
   778                           ; #config settings
   779                           
   780                           	psect	cinit
   781  005478                     __pcinit:
   782                           	callstack 0
   783  005478                     start_initialization:
   784                           	callstack 0
   785  005478                     __initialization:
   786                           	callstack 0
   787                           
   788                           ; Initialize objects allocated to BANK1 (7 bytes)
   789                           ; load TBLPTR registers with __pidataBANK1
   790  005478  0EC2               	movlw	low __pidataBANK1
   791  00547A  6EF6               	movwf	tblptrl,c
   792  00547C  0E59               	movlw	high __pidataBANK1
   793  00547E  6EF7               	movwf	tblptrh,c
   794  005480  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   795  005482  6EF8               	movwf	tblptru,c
   796  005484  EE01  F0E1         	lfsr	0,__pdataBANK1
   797  005488  EE10 F007          	lfsr	1,7
   798  00548C                     copy_data0:
   799  00548C  0009               	tblrd		*+
   800  00548E  CFF5 FFEE          	movff	tablat,postinc0
   801  005492  50E5               	movf	postdec1,w,c
   802  005494  50E1               	movf	fsr1l,w,c
   803  005496  E1FA               	bnz	copy_data0
   804                           
   805                           ; Clear objects allocated to BANK4 (134 bytes)
   806  005498  EE04  F000         	lfsr	0,__pbssBANK4
   807  00549C  0E86               	movlw	134
   808  00549E                     clear_0:
   809  00549E  6AEE               	clrf	postinc0,c
   810  0054A0  06E8               	decf	wreg,f,c
   811  0054A2  E1FD               	bnz	clear_0
   812                           
   813                           ; Clear objects allocated to BANK3 (128 bytes)
   814  0054A4  EE03  F000         	lfsr	0,__pbssBANK3
   815  0054A8  0E80               	movlw	128
   816  0054AA                     clear_1:
   817  0054AA  6AEE               	clrf	postinc0,c
   818  0054AC  06E8               	decf	wreg,f,c
   819  0054AE  E1FD               	bnz	clear_1
   820                           
   821                           ; Clear objects allocated to BANK2 (134 bytes)
   822  0054B0  EE02  F000         	lfsr	0,__pbssBANK2
   823  0054B4  0E86               	movlw	134
   824  0054B6                     clear_2:
   825  0054B6  6AEE               	clrf	postinc0,c
   826  0054B8  06E8               	decf	wreg,f,c
   827  0054BA  E1FD               	bnz	clear_2
   828                           
   829                           ; Clear objects allocated to BANK1 (36 bytes)
   830  0054BC  EE01  F0BD         	lfsr	0,__pbssBANK1
   831  0054C0  0E24               	movlw	36
   832  0054C2                     clear_3:
   833  0054C2  6AEE               	clrf	postinc0,c
   834  0054C4  06E8               	decf	wreg,f,c
   835  0054C6  E1FD               	bnz	clear_3
   836                           
   837                           ; Clear objects allocated to BANK0 (8 bytes)
   838  0054C8  EE00  F0EB         	lfsr	0,__pbssBANK0
   839  0054CC  0E08               	movlw	8
   840  0054CE                     clear_4:
   841  0054CE  6AEE               	clrf	postinc0,c
   842  0054D0  06E8               	decf	wreg,f,c
   843  0054D2  E1FD               	bnz	clear_4
   844                           
   845                           ; Clear objects allocated to COMRAM (5 bytes)
   846  0054D4  6A79               	clrf	(__pbssCOMRAM+4)& (0+255),c
   847  0054D6  6A78               	clrf	(__pbssCOMRAM+3)& (0+255),c
   848  0054D8  6A77               	clrf	(__pbssCOMRAM+2)& (0+255),c
   849  0054DA  6A76               	clrf	(__pbssCOMRAM+1)& (0+255),c
   850  0054DC  6A75               	clrf	__pbssCOMRAM& (0+255),c
   851  0054DE                     end_of_initialization:
   852                           	callstack 0
   853  0054DE                     __end_of__initialization:
   854                           	callstack 0
   855  0054DE  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   856  0054E0  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   857  0054E2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   858  0054E4  6EF8               	movwf	tblptru,c
   859  0054E6  0100               	movlb	0
   860  0054E8  EF09  F000         	goto	_main	;jump to C main() function
   861                           
   862                           	psect	bssCOMRAM
   863  000075                     __pbssCOMRAM:
   864                           	callstack 0
   865  000075                     _prec:
   866                           	callstack 0
   867  000075                     	ds	2
   868  000077                     _flags:
   869                           	callstack 0
   870  000077                     	ds	2
   871  000079                     _CardType:
   872                           	callstack 0
   873  000079                     	ds	1
   874                           
   875                           	psect	bssBANK0
   876  0000EB                     __pbssBANK0:
   877                           	callstack 0
   878  0000EB                     _nout:
   879                           	callstack 0
   880  0000EB                     	ds	2
   881  0000ED                     _width:
   882                           	callstack 0
   883  0000ED                     	ds	2
   884  0000EF                     disk_writep@wc:
   885                           	callstack 0
   886  0000EF                     	ds	2
   887  0000F1                     _FatFs:
   888                           	callstack 0
   889  0000F1                     	ds	2
   890                           
   891                           	psect	bssBANK1
   892  0001BD                     __pbssBANK1:
   893                           	callstack 0
   894  0001BD                     _TxRun:
   895                           	callstack 0
   896  0001BD                     	ds	2
   897  0001BF                     _init_flag:
   898                           	callstack 0
   899  0001BF                     	ds	2
   900  0001C1                     _dbuf:
   901                           	callstack 0
   902  0001C1                     	ds	32
   903                           
   904                           	psect	dataBANK1
   905  0001E1                     __pdataBANK1:
   906                           	callstack 0
   907  0001E1                     stoa@F1141:
   908                           	callstack 0
   909  0001E1                     	ds	7
   910                           
   911                           	psect	bssBANK2
   912  000200                     __pbssBANK2:
   913                           	callstack 0
   914  000200                     _RxFifo:
   915                           	callstack 0
   916  000200                     	ds	134
   917                           
   918                           	psect	bssBANK3
   919  000300                     __pbssBANK3:
   920                           	callstack 0
   921  000300                     _Line:
   922                           	callstack 0
   923  000300                     	ds	128
   924                           
   925                           	psect	bssBANK4
   926  000400                     __pbssBANK4:
   927                           	callstack 0
   928  000400                     _TxFifo:
   929                           	callstack 0
   930  000400                     	ds	134
   931                           
   932                           	psect	cstackBANK1
   933  000100                     __pcstackBANK1:
   934                           	callstack 0
   935  000100                     ??_pf_open:
   936  000100                     pf_opendir@dir:
   937                           	callstack 0
   938  000100                     pf_readdir@dir:
   939                           	callstack 0
   940  000100                     pf_mount@buf:
   941                           	callstack 0
   942                           
   943                           ; 36 bytes @ 0x0
   944  000100                     	ds	22
   945  000116                     pf_open@sp:
   946                           	callstack 0
   947                           
   948                           ; 12 bytes @ 0x16
   949  000116                     	ds	10
   950  000120                     pf_opendir@sp:
   951                           	callstack 0
   952  000120                     pf_readdir@sp:
   953                           	callstack 0
   954                           
   955                           ; 12 bytes @ 0x20
   956  000120                     	ds	2
   957  000122                     pf_open@dir:
   958                           	callstack 0
   959                           
   960                           ; 32 bytes @ 0x22
   961  000122                     	ds	2
   962  000124                     pf_mount@tsect:
   963                           	callstack 0
   964                           
   965                           ; 4 bytes @ 0x24
   966  000124                     	ds	4
   967  000128                     pf_mount@mclst:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0x28
   971  000128                     	ds	4
   972  00012C                     pf_opendir@fs:
   973                           	callstack 0
   974  00012C                     pf_readdir@fs:
   975                           	callstack 0
   976  00012C                     pf_mount@bsect:
   977                           	callstack 0
   978                           
   979                           ; 4 bytes @ 0x2C
   980  00012C                     	ds	2
   981  00012E                     pf_opendir@res:
   982                           	callstack 0
   983  00012E                     pf_readdir@res:
   984                           	callstack 0
   985                           
   986                           ; 1 bytes @ 0x2E
   987  00012E                     	ds	2
   988  000130                     pf_mount@fsize:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x30
   992  000130                     	ds	4
   993  000134                     pf_mount@fmt:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x34
   997  000134                     	ds	14
   998  000142                     pf_open@res:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x42
  1002  000142                     	ds	1
  1003  000143                     pf_open@fs:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x43
  1007  000143                     	ds	2
  1008  000145                     pf_open@dj:
  1009                           	callstack 0
  1010                           
  1011                           ; 16 bytes @ 0x45
  1012  000145                     	ds	16
  1013  000155                     main@upmode:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x55
  1017  000155                     	ds	1
  1018  000156                     main@num_temp:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x56
  1022  000156                     	ds	2
  1023  000158                     main@ofs:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x58
  1027  000158                     	ds	2
  1028  00015A                     main@count:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x5A
  1032  00015A                     	ds	2
  1033  00015C                     main@p2:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x5C
  1037  00015C                     	ds	4
  1038  000160                     main@s3:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x60
  1042  000160                     	ds	2
  1043  000162                     main@p1:
  1044                           	callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x62
  1047  000162                     	ds	4
  1048  000166                     main@s2:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x66
  1052  000166                     	ds	2
  1053  000168                     main@fno:
  1054                           	callstack 0
  1055                           
  1056                           ; 22 bytes @ 0x68
  1057  000168                     	ds	22
  1058  00017E                     main@dir:
  1059                           	callstack 0
  1060                           
  1061                           ; 16 bytes @ 0x7E
  1062  00017E                     	ds	16
  1063  00018E                     main@s1:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x8E
  1067  00018E                     	ds	2
  1068  000190                     main@ptr:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x90
  1072  000190                     	ds	2
  1073  000192                     main@res:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0x92
  1077  000192                     	ds	1
  1078  000193                     main@fs:
  1079                           	callstack 0
  1080                           
  1081                           ; 42 bytes @ 0x93
  1082  000193                     	ds	42
  1083                           
  1084                           	psect	cstackBANK0
  1085  000080                     __pcstackBANK0:
  1086                           	callstack 0
  1087  000080                     ?_vfprintf:
  1088                           	callstack 0
  1089  000080                     vfprintf@fp:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x0
  1093  000080                     	ds	2
  1094  000082                     vfprintf@fmt:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x2
  1098  000082                     	ds	2
  1099  000084                     vfprintf@ap:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x4
  1103  000084                     	ds	2
  1104  000086                     ?_printf:
  1105                           	callstack 0
  1106  000086                     printf@fmt:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x6
  1110  000086                     	ds	10
  1111  000090                     printf@ap:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x10
  1115  000090                     	ds	2
  1116  000092                     put_rc@i:
  1117                           	callstack 0
  1118  000092                     uart_gets@buff:
  1119                           	callstack 0
  1120  000092                     put_dump@buff:
  1121                           	callstack 0
  1122  000092                     disk_readp@buff:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x12
  1126  000092                     	ds	1
  1127  000093                     put_rc@rc:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x13
  1131  000093                     	ds	1
  1132  000094                     put_rc@p:
  1133                           	callstack 0
  1134  000094                     uart_gets@len:
  1135                           	callstack 0
  1136  000094                     put_dump@addr:
  1137                           	callstack 0
  1138  000094                     disk_readp@sector:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x14
  1142  000094                     	ds	2
  1143  000096                     ??_uart_gets:
  1144                           
  1145                           ; 1 bytes @ 0x16
  1146  000096                     	ds	2
  1147  000098                     put_dump@len:
  1148                           	callstack 0
  1149  000098                     disk_readp@offset:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x18
  1153  000098                     	ds	2
  1154  00009A                     put_dump@width:
  1155                           	callstack 0
  1156  00009A                     disk_readp@count:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x1A
  1160  00009A                     	ds	1
  1161  00009B                     uart_gets@i:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x1B
  1165  00009B                     	ds	1
  1166  00009C                     ??_disk_readp:
  1167  00009C                     ??_put_dump:
  1168                           
  1169                           ; 1 bytes @ 0x1C
  1170  00009C                     	ds	1
  1171  00009D                     uart_gets@c:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x1D
  1175  00009D                     	ds	1
  1176  00009E                     disk_readp@res:
  1177                           	callstack 0
  1178  00009E                     put_dump@sp:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x1E
  1182  00009E                     	ds	1
  1183  00009F                     disk_readp@rc:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x1F
  1187  00009F                     	ds	1
  1188  0000A0                     put_dump@lp:
  1189                           	callstack 0
  1190  0000A0                     disk_readp@bc:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x20
  1194  0000A0                     	ds	2
  1195  0000A2                     ?_get_fat:
  1196                           	callstack 0
  1197  0000A2                     check_fs@buf:
  1198                           	callstack 0
  1199  0000A2                     _put_dump$1131:
  1200                           	callstack 0
  1201  0000A2                     get_fat@clst:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x22
  1205  0000A2                     	ds	2
  1206  0000A4                     put_dump@bp:
  1207                           	callstack 0
  1208  0000A4                     check_fs@sect:
  1209                           	callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x24
  1212  0000A4                     	ds	2
  1213  0000A6                     ??_get_fat:
  1214  0000A6                     put_dump@i:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x26
  1218  0000A6                     	ds	2
  1219  0000A8                     ??_check_fs:
  1220                           
  1221                           ; 1 bytes @ 0x28
  1222  0000A8                     	ds	4
  1223  0000AC                     pf_mount@fs:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x2C
  1227  0000AC                     	ds	2
  1228  0000AE                     ??_pf_mount:
  1229                           
  1230                           ; 1 bytes @ 0x2E
  1231  0000AE                     	ds	14
  1232  0000BC                     get_fat@buf:
  1233                           	callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x3C
  1236  0000BC                     	ds	4
  1237  0000C0                     get_fat@fs:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x40
  1241  0000C0                     	ds	2
  1242  0000C2                     dir_next@dj:
  1243                           	callstack 0
  1244  0000C2                     pf_read@buff:
  1245                           	callstack 0
  1246  0000C2                     pf_lseek@ofs:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x42
  1250  0000C2                     	ds	2
  1251  0000C4                     ??_dir_next:
  1252  0000C4                     pf_read@btr:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x44
  1256  0000C4                     	ds	2
  1257  0000C6                     ??_pf_lseek:
  1258  0000C6                     pf_read@br:
  1259                           	callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x46
  1262  0000C6                     	ds	2
  1263  0000C8                     ??_pf_read:
  1264                           
  1265                           ; 1 bytes @ 0x48
  1266  0000C8                     	ds	3
  1267  0000CB                     dir_next@fs:
  1268                           	callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x4B
  1271  0000CB                     	ds	2
  1272  0000CD                     dir_next@clst:
  1273                           	callstack 0
  1274                           
  1275                           ; 4 bytes @ 0x4D
  1276  0000CD                     	ds	3
  1277  0000D0                     pf_read@dr:
  1278                           	callstack 0
  1279                           
  1280                           ; 1 bytes @ 0x50
  1281  0000D0                     	ds	1
  1282  0000D1                     dir_next@i:
  1283                           	callstack 0
  1284  0000D1                     pf_read@rbuff:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x51
  1288  0000D1                     	ds	2
  1289  0000D3                     dir_find@dj:
  1290                           	callstack 0
  1291  0000D3                     dir_read@dj:
  1292                           	callstack 0
  1293  0000D3                     _pf_read$900:
  1294                           	callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x53
  1297  0000D3                     	ds	2
  1298  0000D5                     dir_find@dir:
  1299                           	callstack 0
  1300  0000D5                     dir_read@dir:
  1301                           	callstack 0
  1302  0000D5                     pf_read@sect:
  1303                           	callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x55
  1306  0000D5                     	ds	2
  1307  0000D7                     ??_dir_find:
  1308  0000D7                     ??_dir_read:
  1309  0000D7                     pf_lseek@sect:
  1310                           	callstack 0
  1311                           
  1312                           ; 4 bytes @ 0x57
  1313  0000D7                     	ds	2
  1314  0000D9                     dir_find@c:
  1315                           	callstack 0
  1316  0000D9                     pf_read@remain:
  1317                           	callstack 0
  1318                           
  1319                           ; 4 bytes @ 0x59
  1320  0000D9                     	ds	1
  1321  0000DA                     dir_find@res:
  1322                           	callstack 0
  1323                           
  1324                           ; 1 bytes @ 0x5A
  1325  0000DA                     	ds	1
  1326  0000DB                     dir_read@a:
  1327                           	callstack 0
  1328  0000DB                     follow_path@dj:
  1329                           	callstack 0
  1330  0000DB                     pf_lseek@ifptr:
  1331                           	callstack 0
  1332                           
  1333                           ; 4 bytes @ 0x5B
  1334  0000DB                     	ds	1
  1335  0000DC                     dir_read@c:
  1336                           	callstack 0
  1337                           
  1338                           ; 1 bytes @ 0x5C
  1339  0000DC                     	ds	1
  1340  0000DD                     dir_read@res:
  1341                           	callstack 0
  1342  0000DD                     follow_path@dir:
  1343                           	callstack 0
  1344  0000DD                     pf_read@clst:
  1345                           	callstack 0
  1346                           
  1347                           ; 4 bytes @ 0x5D
  1348  0000DD                     	ds	1
  1349  0000DE                     pf_readdir@dj:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x5E
  1353  0000DE                     	ds	1
  1354  0000DF                     follow_path@path:
  1355                           	callstack 0
  1356  0000DF                     pf_lseek@bcs:
  1357                           	callstack 0
  1358                           
  1359                           ; 4 bytes @ 0x5F
  1360  0000DF                     	ds	1
  1361  0000E0                     pf_readdir@fno:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x60
  1365  0000E0                     	ds	1
  1366  0000E1                     follow_path@res:
  1367                           	callstack 0
  1368  0000E1                     pf_read@cs:
  1369                           	callstack 0
  1370                           
  1371                           ; 1 bytes @ 0x61
  1372  0000E1                     	ds	1
  1373  0000E2                     pf_open@path:
  1374                           	callstack 0
  1375  0000E2                     pf_read@rcnt:
  1376                           	callstack 0
  1377  0000E2                     pf_opendir@dj:
  1378                           	callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x62
  1381  0000E2                     	ds	1
  1382  0000E3                     pf_lseek@clst:
  1383                           	callstack 0
  1384                           
  1385                           ; 4 bytes @ 0x63
  1386  0000E3                     	ds	1
  1387  0000E4                     pf_read@fs:
  1388                           	callstack 0
  1389  0000E4                     pf_opendir@path:
  1390                           	callstack 0
  1391                           
  1392                           ; 2 bytes @ 0x64
  1393  0000E4                     	ds	3
  1394  0000E7                     pf_lseek@fs:
  1395                           	callstack 0
  1396                           
  1397                           ; 2 bytes @ 0x67
  1398  0000E7                     	ds	2
  1399  0000E9                     ??_main:
  1400                           
  1401                           ; 1 bytes @ 0x69
  1402  0000E9                     	ds	2
  1403                           
  1404                           	psect	cstackCOMRAM
  1405  000001                     __pcstackCOMRAM:
  1406                           	callstack 0
  1407  000001                     ??_isr_high:
  1408  000001                     
  1409                           ; 2 bytes @ 0x0
  1410  000001                     	ds	2
  1411  000003                     isr_high@d:
  1412                           	callstack 0
  1413                           
  1414                           ; 1 bytes @ 0x2
  1415  000003                     	ds	1
  1416  000004                     isr_high@i:
  1417                           	callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x3
  1420  000004                     	ds	2
  1421  000006                     ?_strlen:
  1422                           	callstack 0
  1423  000006                     ?_isupper:
  1424                           	callstack 0
  1425  000006                     ?_isalpha:
  1426                           	callstack 0
  1427  000006                     ?_isdigit:
  1428                           	callstack 0
  1429  000006                     ?_strncmp:
  1430                           	callstack 0
  1431  000006                     ?_isspace:
  1432                           	callstack 0
  1433  000006                     ?_islower:
  1434                           	callstack 0
  1435  000006                     ?_mem_cmp:
  1436                           	callstack 0
  1437  000006                     ?___wmul:
  1438                           	callstack 0
  1439  000006                     ?_get_clust:
  1440                           	callstack 0
  1441  000006                     ?___lmul:
  1442                           	callstack 0
  1443  000006                     ?___lldiv:
  1444                           	callstack 0
  1445  000006                     ?___aodiv:
  1446                           	callstack 0
  1447  000006                     ?___aomod:
  1448                           	callstack 0
  1449  000006                     ?___lodiv:
  1450                           	callstack 0
  1451  000006                     ?___lomod:
  1452                           	callstack 0
  1453  000006                     pwm_Init@period:
  1454                           	callstack 0
  1455  000006                     putch@byte:
  1456                           	callstack 0
  1457  000006                     xmit_spi@d:
  1458                           	callstack 0
  1459  000006                     pwm_setDuty@dutycycle:
  1460                           	callstack 0
  1461  000006                     mem_set@dst:
  1462                           	callstack 0
  1463  000006                     mem_cmp@dst:
  1464                           	callstack 0
  1465  000006                     get_clust@dir:
  1466                           	callstack 0
  1467  000006                     get_fileinfo@dj:
  1468                           	callstack 0
  1469  000006                     ___wmul@multiplier:
  1470                           	callstack 0
  1471  000006                     memset@dest:
  1472                           	callstack 0
  1473  000006                     isalpha@c:
  1474                           	callstack 0
  1475  000006                     isdigit@c:
  1476                           	callstack 0
  1477  000006                     isspace@c:
  1478                           	callstack 0
  1479  000006                     isupper@c:
  1480                           	callstack 0
  1481  000006                     strlen@s:
  1482                           	callstack 0
  1483  000006                     strncmp@_l:
  1484                           	callstack 0
  1485  000006                     islower@c:
  1486                           	callstack 0
  1487  000006                     ___lmul@multiplier:
  1488                           	callstack 0
  1489  000006                     ___lldiv@dividend:
  1490                           	callstack 0
  1491  000006                     ___aodiv@dividend:
  1492                           	callstack 0
  1493  000006                     ___aomod@dividend:
  1494                           	callstack 0
  1495  000006                     ___lodiv@dividend:
  1496                           	callstack 0
  1497  000006                     ___lomod@dividend:
  1498                           	callstack 0
  1499                           
  1500                           ; 8 bytes @ 0x5
  1501  000006                     	ds	1
  1502  000007                     fputc@c:
  1503                           	callstack 0
  1504  000007                     send_cmd2@arg:
  1505                           	callstack 0
  1506                           
  1507                           ; 4 bytes @ 0x6
  1508  000007                     	ds	1
  1509  000008                     ??_isupper:
  1510  000008                     ??_isalpha:
  1511  000008                     ??_isdigit:
  1512  000008                     ??_isspace:
  1513  000008                     ??_islower:
  1514  000008                     ??_pwm_setDuty:
  1515  000008                     mem_set@val:
  1516                           	callstack 0
  1517  000008                     mem_cmp@src:
  1518                           	callstack 0
  1519  000008                     get_fileinfo@dir:
  1520                           	callstack 0
  1521  000008                     ___wmul@multiplicand:
  1522                           	callstack 0
  1523  000008                     memset@c:
  1524                           	callstack 0
  1525  000008                     strlen@a:
  1526                           	callstack 0
  1527  000008                     strncmp@_r:
  1528                           	callstack 0
  1529                           
  1530                           ; 2 bytes @ 0x7
  1531  000008                     	ds	1
  1532  000009                     fputc@fp:
  1533                           	callstack 0
  1534                           
  1535                           ; 2 bytes @ 0x8
  1536  000009                     	ds	1
  1537  00000A                     ??_get_clust:
  1538  00000A                     mem_set@cnt:
  1539                           	callstack 0
  1540  00000A                     mem_cmp@cnt:
  1541                           	callstack 0
  1542  00000A                     get_fileinfo@fno:
  1543                           	callstack 0
  1544  00000A                     ___wmul@product:
  1545                           	callstack 0
  1546  00000A                     memset@n:
  1547                           	callstack 0
  1548  00000A                     strncmp@n:
  1549                           	callstack 0
  1550  00000A                     ___lmul@multiplicand:
  1551                           	callstack 0
  1552  00000A                     ___lldiv@divisor:
  1553                           	callstack 0
  1554                           
  1555                           ; 4 bytes @ 0x9
  1556  00000A                     	ds	1
  1557  00000B                     ??_fputc:
  1558  00000B                     send_cmd2@res:
  1559                           	callstack 0
  1560                           
  1561                           ; 1 bytes @ 0xA
  1562  00000B                     	ds	1
  1563  00000C                     ??_memset:
  1564  00000C                     ??_strncmp:
  1565  00000C                     ??_mem_cmp:
  1566  00000C                     ??_get_fileinfo:
  1567  00000C                     ?_toupper:
  1568                           	callstack 0
  1569  00000C                     send_cmd2@cmd:
  1570                           	callstack 0
  1571  00000C                     _isspace$1995:
  1572                           	callstack 0
  1573  00000C                     mem_set@d:
  1574                           	callstack 0
  1575  00000C                     toupper@c:
  1576                           	callstack 0
  1577                           
  1578                           ; 2 bytes @ 0xB
  1579  00000C                     	ds	1
  1580  00000D                     ?_atoi:
  1581                           	callstack 0
  1582  00000D                     send_cmd2@n:
  1583                           	callstack 0
  1584  00000D                     atoi@s:
  1585                           	callstack 0
  1586  00000D                     strncmp@l:
  1587                           	callstack 0
  1588                           
  1589                           ; 2 bytes @ 0xC
  1590  00000D                     	ds	1
  1591  00000E                     ??_toupper:
  1592  00000E                     mem_cmp@d:
  1593                           	callstack 0
  1594  00000E                     create_name@dj:
  1595                           	callstack 0
  1596  00000E                     memset@k:
  1597                           	callstack 0
  1598  00000E                     send_cmd@arg:
  1599                           	callstack 0
  1600  00000E                     ___lmul@product:
  1601                           	callstack 0
  1602  00000E                     ___lldiv@quotient:
  1603                           	callstack 0
  1604  00000E                     ___aodiv@divisor:
  1605                           	callstack 0
  1606  00000E                     ___aomod@divisor:
  1607                           	callstack 0
  1608  00000E                     ___lodiv@divisor:
  1609                           	callstack 0
  1610  00000E                     ___lomod@divisor:
  1611                           	callstack 0
  1612                           
  1613                           ; 8 bytes @ 0xD
  1614  00000E                     	ds	1
  1615  00000F                     ??_atoi:
  1616  00000F                     strncmp@r:
  1617                           	callstack 0
  1618                           
  1619                           ; 2 bytes @ 0xE
  1620  00000F                     	ds	1
  1621  000010                     ?_stoa:
  1622                           	callstack 0
  1623  000010                     mem_cmp@s:
  1624                           	callstack 0
  1625  000010                     create_name@path:
  1626                           	callstack 0
  1627  000010                     memset@s:
  1628                           	callstack 0
  1629  000010                     stoa@fp:
  1630                           	callstack 0
  1631  000010                     fputs@s:
  1632                           	callstack 0
  1633                           
  1634                           ; 2 bytes @ 0xF
  1635  000010                     	ds	2
  1636  000012                     ??_create_name:
  1637  000012                     ?_xatoi:
  1638                           	callstack 0
  1639  000012                     ?_clust2sect:
  1640                           	callstack 0
  1641  000012                     send_cmd@n:
  1642                           	callstack 0
  1643  000012                     ___lldiv@counter:
  1644                           	callstack 0
  1645  000012                     mem_cmp@r:
  1646                           	callstack 0
  1647  000012                     xatoi@str:
  1648                           	callstack 0
  1649  000012                     stoa@s:
  1650                           	callstack 0
  1651  000012                     fputs@fp:
  1652                           	callstack 0
  1653  000012                     _toupper$2050:
  1654                           	callstack 0
  1655  000012                     clust2sect@clst:
  1656                           	callstack 0
  1657  000012                     get_clust@clst:
  1658                           	callstack 0
  1659                           
  1660                           ; 4 bytes @ 0x11
  1661  000012                     	ds	1
  1662  000013                     send_cmd@cmd:
  1663                           	callstack 0
  1664  000013                     atoi@neg:
  1665                           	callstack 0
  1666                           
  1667                           ; 2 bytes @ 0x12
  1668  000013                     	ds	1
  1669  000014                     ??_stoa:
  1670  000014                     send_cmd@res:
  1671                           	callstack 0
  1672  000014                     fputs@c:
  1673                           	callstack 0
  1674  000014                     xatoi@res:
  1675                           	callstack 0
  1676                           
  1677                           ; 2 bytes @ 0x13
  1678  000014                     	ds	1
  1679  000015                     disk_writep@buff:
  1680                           	callstack 0
  1681  000015                     _atoi$1968:
  1682                           	callstack 0
  1683  000015                     fputs@i:
  1684                           	callstack 0
  1685  000015                     stoa@nuls:
  1686                           	callstack 0
  1687                           
  1688                           ; 7 bytes @ 0x14
  1689  000015                     	ds	1
  1690  000016                     ??_xatoi:
  1691  000016                     ??_clust2sect:
  1692  000016                     ___aodiv@counter:
  1693                           	callstack 0
  1694  000016                     ___aomod@counter:
  1695                           	callstack 0
  1696  000016                     ___lomod@counter:
  1697                           	callstack 0
  1698  000016                     create_name@p:
  1699                           	callstack 0
  1700  000016                     ___lodiv@quotient:
  1701                           	callstack 0
  1702                           
  1703                           ; 8 bytes @ 0x15
  1704  000016                     	ds	1
  1705  000017                     ?_pad:
  1706                           	callstack 0
  1707  000017                     ___aodiv@sign:
  1708                           	callstack 0
  1709  000017                     ___aomod@sign:
  1710                           	callstack 0
  1711  000017                     pad@fp:
  1712                           	callstack 0
  1713  000017                     _atoi$1970:
  1714                           	callstack 0
  1715  000017                     disk_writep@sc:
  1716                           	callstack 0
  1717                           
  1718                           ; 4 bytes @ 0x16
  1719  000017                     	ds	1
  1720  000018                     ?_abs:
  1721                           	callstack 0
  1722  000018                     create_name@ni:
  1723                           	callstack 0
  1724  000018                     xatoi@s:
  1725                           	callstack 0
  1726  000018                     abs@a:
  1727                           	callstack 0
  1728  000018                     ___aodiv@quotient:
  1729                           	callstack 0
  1730                           
  1731                           ; 8 bytes @ 0x17
  1732  000018                     	ds	1
  1733  000019                     create_name@si:
  1734                           	callstack 0
  1735  000019                     xatoi@r:
  1736                           	callstack 0
  1737  000019                     _atoi$1969:
  1738                           	callstack 0
  1739  000019                     pad@buf:
  1740                           	callstack 0
  1741                           
  1742                           ; 2 bytes @ 0x18
  1743  000019                     	ds	1
  1744  00001A                     ??_abs:
  1745  00001A                     create_name@sfn:
  1746                           	callstack 0
  1747  00001A                     atoi@n:
  1748                           	callstack 0
  1749  00001A                     xatoi@val:
  1750                           	callstack 0
  1751                           
  1752                           ; 4 bytes @ 0x19
  1753  00001A                     	ds	1
  1754  00001B                     disk_writep@res:
  1755                           	callstack 0
  1756  00001B                     clust2sect@fs:
  1757                           	callstack 0
  1758  00001B                     pad@p:
  1759                           	callstack 0
  1760                           
  1761                           ; 2 bytes @ 0x1A
  1762  00001B                     	ds	1
  1763  00001C                     create_name@i:
  1764                           	callstack 0
  1765  00001C                     disk_writep@bc:
  1766                           	callstack 0
  1767  00001C                     stoa@i:
  1768                           	callstack 0
  1769                           
  1770                           ; 2 bytes @ 0x1B
  1771  00001C                     	ds	1
  1772  00001D                     ??_pad:
  1773  00001D                     create_name@c:
  1774                           	callstack 0
  1775  00001D                     dir_rewind@dj:
  1776                           	callstack 0
  1777                           
  1778                           ; 2 bytes @ 0x1C
  1779  00001D                     	ds	1
  1780  00001E                     ??_disk_initialize:
  1781  00001E                     xatoi@c:
  1782                           	callstack 0
  1783  00001E                     ___lodiv@counter:
  1784                           	callstack 0
  1785  00001E                     pad@i:
  1786                           	callstack 0
  1787  00001E                     stoa@w:
  1788                           	callstack 0
  1789                           
  1790                           ; 2 bytes @ 0x1D
  1791  00001E                     	ds	1
  1792  00001F                     disk_initialize@ocr:
  1793                           	callstack 0
  1794                           
  1795                           ; 4 bytes @ 0x1E
  1796  00001F                     	ds	1
  1797  000020                     pad@w:
  1798                           	callstack 0
  1799  000020                     stoa@cp:
  1800                           	callstack 0
  1801                           
  1802                           ; 2 bytes @ 0x1F
  1803  000020                     	ds	2
  1804  000022                     ?_dtoa:
  1805                           	callstack 0
  1806  000022                     ?_utoa:
  1807                           	callstack 0
  1808  000022                     ?_xtoa:
  1809                           	callstack 0
  1810  000022                     dtoa@fp:
  1811                           	callstack 0
  1812  000022                     stoa@p:
  1813                           	callstack 0
  1814  000022                     utoa@fp:
  1815                           	callstack 0
  1816  000022                     xtoa@fp:
  1817                           	callstack 0
  1818                           
  1819                           ; 2 bytes @ 0x21
  1820  000022                     	ds	1
  1821  000023                     _disk_initialize$1320:
  1822                           	callstack 0
  1823  000023                     _dir_rewind$709:
  1824                           	callstack 0
  1825                           
  1826                           ; 4 bytes @ 0x22
  1827  000023                     	ds	1
  1828  000024                     stoa@l:
  1829                           	callstack 0
  1830  000024                     dtoa@d:
  1831                           	callstack 0
  1832  000024                     utoa@d:
  1833                           	callstack 0
  1834  000024                     xtoa@d:
  1835                           	callstack 0
  1836                           
  1837                           ; 8 bytes @ 0x23
  1838  000024                     	ds	1
  1839  000025                     disk_initialize@cmd:
  1840                           	callstack 0
  1841                           
  1842                           ; 1 bytes @ 0x24
  1843  000025                     	ds	1
  1844  000026                     disk_initialize@ty:
  1845                           	callstack 0
  1846  000026                     get_fileinfo@p:
  1847                           	callstack 0
  1848                           
  1849                           ; 2 bytes @ 0x25
  1850  000026                     	ds	1
  1851  000027                     dir_rewind@fs:
  1852                           	callstack 0
  1853  000027                     disk_initialize@tmr:
  1854                           	callstack 0
  1855                           
  1856                           ; 2 bytes @ 0x26
  1857  000027                     	ds	1
  1858  000028                     get_fileinfo@c:
  1859                           	callstack 0
  1860                           
  1861                           ; 1 bytes @ 0x27
  1862  000028                     	ds	1
  1863  000029                     get_fileinfo@i:
  1864                           	callstack 0
  1865  000029                     disk_initialize@n:
  1866                           	callstack 0
  1867  000029                     dir_rewind@clst:
  1868                           	callstack 0
  1869                           
  1870                           ; 4 bytes @ 0x28
  1871  000029                     	ds	3
  1872  00002C                     ??_dtoa:
  1873  00002C                     ??_utoa:
  1874  00002C                     xtoa@x:
  1875                           	callstack 0
  1876                           
  1877                           ; 1 bytes @ 0x2B
  1878  00002C                     	ds	1
  1879  00002D                     ??_xtoa:
  1880                           
  1881                           ; 1 bytes @ 0x2C
  1882  00002D                     	ds	7
  1883  000034                     _dtoa$1879:
  1884                           	callstack 0
  1885  000034                     utoa@p:
  1886                           	callstack 0
  1887                           
  1888                           ; 2 bytes @ 0x33
  1889  000034                     	ds	1
  1890  000035                     _xtoa$1907:
  1891                           	callstack 0
  1892                           
  1893                           ; 2 bytes @ 0x34
  1894  000035                     	ds	1
  1895  000036                     dtoa@p:
  1896                           	callstack 0
  1897  000036                     utoa@w:
  1898                           	callstack 0
  1899                           
  1900                           ; 2 bytes @ 0x35
  1901  000036                     	ds	1
  1902  000037                     _xtoa$1908:
  1903                           	callstack 0
  1904                           
  1905                           ; 2 bytes @ 0x36
  1906  000037                     	ds	1
  1907  000038                     dtoa@w:
  1908                           	callstack 0
  1909  000038                     utoa@n:
  1910                           	callstack 0
  1911                           
  1912                           ; 8 bytes @ 0x37
  1913  000038                     	ds	1
  1914  000039                     xtoa@p:
  1915                           	callstack 0
  1916                           
  1917                           ; 2 bytes @ 0x38
  1918  000039                     	ds	1
  1919  00003A                     dtoa@s:
  1920                           	callstack 0
  1921                           
  1922                           ; 2 bytes @ 0x39
  1923  00003A                     	ds	1
  1924  00003B                     xtoa@w:
  1925                           	callstack 0
  1926                           
  1927                           ; 2 bytes @ 0x3A
  1928  00003B                     	ds	1
  1929  00003C                     dtoa@n:
  1930                           	callstack 0
  1931                           
  1932                           ; 8 bytes @ 0x3B
  1933  00003C                     	ds	1
  1934  00003D                     xtoa@n:
  1935                           	callstack 0
  1936                           
  1937                           ; 8 bytes @ 0x3C
  1938  00003D                     	ds	3
  1939  000040                     utoa@i:
  1940                           	callstack 0
  1941                           
  1942                           ; 2 bytes @ 0x3F
  1943  000040                     	ds	4
  1944  000044                     dtoa@i:
  1945                           	callstack 0
  1946                           
  1947                           ; 2 bytes @ 0x43
  1948  000044                     	ds	1
  1949  000045                     xtoa@i:
  1950                           	callstack 0
  1951                           
  1952                           ; 2 bytes @ 0x44
  1953  000045                     	ds	2
  1954  000047                     xtoa@c:
  1955                           	callstack 0
  1956                           
  1957                           ; 2 bytes @ 0x46
  1958  000047                     	ds	2
  1959  000049                     ?_vfpfcnvrt:
  1960                           	callstack 0
  1961  000049                     vfpfcnvrt@fp:
  1962                           	callstack 0
  1963                           
  1964                           ; 2 bytes @ 0x48
  1965  000049                     	ds	2
  1966  00004B                     vfpfcnvrt@fmt:
  1967                           	callstack 0
  1968                           
  1969                           ; 2 bytes @ 0x4A
  1970  00004B                     	ds	2
  1971  00004D                     vfpfcnvrt@ap:
  1972                           	callstack 0
  1973                           
  1974                           ; 2 bytes @ 0x4C
  1975  00004D                     	ds	2
  1976  00004F                     ??_vfpfcnvrt:
  1977                           
  1978                           ; 1 bytes @ 0x4E
  1979  00004F                     	ds	14
  1980  00005D                     vfpfcnvrt@cp:
  1981                           	callstack 0
  1982                           
  1983                           ; 2 bytes @ 0x5C
  1984  00005D                     	ds	2
  1985  00005F                     _vfpfcnvrt$1922:
  1986                           	callstack 0
  1987                           
  1988                           ; 2 bytes @ 0x5E
  1989  00005F                     	ds	2
  1990  000061                     vfpfcnvrt@ll:
  1991                           	callstack 0
  1992                           
  1993                           ; 8 bytes @ 0x60
  1994  000061                     	ds	8
  1995  000069                     vfpfcnvrt@c:
  1996                           	callstack 0
  1997                           
  1998                           ; 1 bytes @ 0x68
  1999  000069                     	ds	1
  2000  00006A                     vfpfcnvrt@llu:
  2001                           	callstack 0
  2002                           
  2003                           ; 8 bytes @ 0x69
  2004  00006A                     	ds	8
  2005  000072                     vfprintf@cfmt:
  2006                           	callstack 0
  2007                           
  2008                           ; 2 bytes @ 0x71
  2009  000072                     	ds	2
  2010  000074                     put_drc@res:
  2011                           	callstack 0
  2012                           
  2013                           ; 1 bytes @ 0x73
  2014  000074                     	ds	1
  2015  000075                     
  2016                           ; 1 bytes @ 0x74
  2017 ;;
  2018 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2019 ;;
  2020 ;; *************** function _main *****************
  2021 ;; Defined at:
  2022 ;;		line 69 in file "main.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  count           2   90[BANK1 ] int 
  2027 ;;  num_temp        2   86[BANK1 ] unsigned int 
  2028 ;;  fs             42  147[BANK1 ] struct .
  2029 ;;  fno            22  104[BANK1 ] struct .
  2030 ;;  dir            16  126[BANK1 ] struct .
  2031 ;;  p1              4   98[BANK1 ] long 
  2032 ;;  p2              4   92[BANK1 ] long 
  2033 ;;  ptr             2  144[BANK1 ] PTR unsigned char 
  2034 ;;		 -> Line(128), 
  2035 ;;  s1              2  142[BANK1 ] unsigned int 
  2036 ;;  s2              2  102[BANK1 ] unsigned int 
  2037 ;;  s3              2   96[BANK1 ] unsigned int 
  2038 ;;  ofs             2   88[BANK1 ] unsigned int 
  2039 ;;  duty            2    0        unsigned short 
  2040 ;;  w               2    0        unsigned int 
  2041 ;;  cnt             2    0        unsigned int 
  2042 ;;  res             1  146[BANK1 ] unsigned char 
  2043 ;;  upmode          1   85[BANK1 ] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  2   95[None  ] int 
  2046 ;; Registers used:
  2047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2053 ;;      Params:         0       0       0       0       0       0       0
  2054 ;;      Locals:         0       0     104       0       0       0       0
  2055 ;;      Temps:          0       2       0       0       0       0       0
  2056 ;;      Totals:         0       2     104       0       0       0       0
  2057 ;;Total ram usage:      106 bytes
  2058 ;; Hardware stack levels required when called: 15
  2059 ;; This function calls:
  2060 ;;		_disk_initialize
  2061 ;;		_disk_readp
  2062 ;;		_gpio_init
  2063 ;;		_pf_lseek
  2064 ;;		_pf_mount
  2065 ;;		_pf_open
  2066 ;;		_pf_opendir
  2067 ;;		_pf_read
  2068 ;;		_pf_readdir
  2069 ;;		_printf
  2070 ;;		_put_drc
  2071 ;;		_put_dump
  2072 ;;		_put_rc
  2073 ;;		_pwm_Init
  2074 ;;		_pwm_setDuty
  2075 ;;		_pwm_start
  2076 ;;		_pwm_stop
  2077 ;;		_uart_gets
  2078 ;;		_uart_init
  2079 ;;		_xatoi
  2080 ;; This function is called by:
  2081 ;;		Startup code after reset
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text0
  2086  000012                     __ptext0:
  2087                           	callstack 0
  2088  000012                     _main:
  2089                           	callstack 16
  2090  000012                     
  2091                           ;main.c: 80:     unsigned char upmode = 1;
  2092  000012  0E01               	movlw	1
  2093  000014  0101               	movlb	1	; () banked
  2094  000016  6F55               	movwf	main@upmode& (0+255),b
  2095  000018                     
  2096                           ; BSR set to: 1
  2097                           ;main.c: 84:     pwm_Init(63);
  2098  000018  0E3F               	movlw	63
  2099  00001A  ECA1  F02C         	call	_pwm_Init
  2100                           
  2101                           ;main.c: 85:  gpio_init();
  2102  00001E  ECCF  F02C         	call	_gpio_init	;wreg free
  2103  000022                     
  2104                           ;main.c: 88:  uart_init();
  2105  000022  ECDC  F02A         	call	_uart_init	;wreg free
  2106  000026                     
  2107                           ;main.c: 90:     printf("\r\n\r\nPetit FatFs test monitor\r\n");
  2108  000026  0EA1               	movlw	low STR_3
  2109  000028  0100               	movlb	0	; () banked
  2110  00002A  6F86               	movwf	printf@fmt& (0+255),b
  2111  00002C  0E7C               	movlw	high STR_3
  2112  00002E  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2113  000030  EC5A  F02C         	call	_printf	;wreg free
  2114  000034                     l8457:
  2115                           
  2116                           ;main.c: 105:         LATBbits.LB0 = PORTBbits.RB0 ^ 0x01;
  2117  000034  A081               	btfss	129,0,c	;volatile
  2118  000036  EF1F  F000         	goto	u11061
  2119  00003A  EF22  F000         	goto	u11060
  2120  00003E                     u11061:
  2121  00003E  808A               	bsf	138,0,c	;volatile
  2122  000040  EF23  F000         	goto	u11075
  2123  000044                     u11060:
  2124  000044  908A               	bcf	138,0,c	;volatile
  2125  000046                     u11075:
  2126  000046                     
  2127                           ;main.c: 107:         printf(">");
  2128  000046  0EBD               	movlw	low STR_4
  2129  000048  0100               	movlb	0	; () banked
  2130  00004A  6F86               	movwf	printf@fmt& (0+255),b
  2131  00004C  0E7D               	movlw	high STR_4
  2132  00004E  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2133  000050  EC5A  F02C         	call	_printf	;wreg free
  2134  000054                     
  2135                           ;main.c: 108:         uart_gets(Line, sizeof(Line));
  2136  000054  0E00               	movlw	low _Line
  2137  000056  0100               	movlb	0	; () banked
  2138  000058  6F92               	movwf	uart_gets@buff& (0+255),b
  2139  00005A  0E03               	movlw	high _Line
  2140  00005C  6F93               	movwf	(uart_gets@buff+1)& (0+255),b
  2141  00005E  0E00               	movlw	0
  2142  000060  6F95               	movwf	(uart_gets@len+1)& (0+255),b
  2143  000062  0E80               	movlw	128
  2144  000064  6F94               	movwf	uart_gets@len& (0+255),b
  2145  000066  EC34  F023         	call	_uart_gets	;wreg free
  2146  00006A                     
  2147                           ;main.c: 109:         printf("\r\n");
  2148  00006A  0E1F               	movlw	low (STR_16+18)
  2149  00006C  0100               	movlb	0	; () banked
  2150  00006E  6F86               	movwf	printf@fmt& (0+255),b
  2151  000070  0E7D               	movlw	high (STR_16+18)
  2152  000072  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2153  000074  EC5A  F02C         	call	_printf	;wreg free
  2154  000078                     
  2155                           ;main.c: 111:         ptr = Line;
  2156  000078  0E00               	movlw	low _Line
  2157  00007A  0101               	movlb	1	; () banked
  2158  00007C  6F90               	movwf	main@ptr& (0+255),b
  2159  00007E  0E03               	movlw	high _Line
  2160  000080  6F91               	movwf	(main@ptr+1)& (0+255),b
  2161                           
  2162                           ;main.c: 113:   switch (*ptr++)
  2163  000082  EFD2  F003         	goto	l8651
  2164  000086                     l8467:
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;main.c: 119:                 printf("\tInitialize physical drive\r\n\t");
  2168  000086  0EC0               	movlw	low STR_6
  2169  000088  6F86               	movwf	printf@fmt& (0+255),b
  2170  00008A  0E7C               	movlw	high STR_6
  2171  00008C  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2172  00008E  EC5A  F02C         	call	_printf	;wreg free
  2173  000092                     l8469:
  2174                           
  2175                           ;main.c: 121:                 {;main.c: 122:         res = disk_initialize();
  2176  000092  EC61  F012         	call	_disk_initialize	;wreg free
  2177  000096  0101               	movlb	1	; () banked
  2178  000098  6F92               	movwf	main@res& (0+255),b
  2179  00009A                     
  2180                           ; BSR set to: 1
  2181                           ;main.c: 123:                 }while(res != 0);
  2182  00009A  5192               	movf	main@res& (0+255),w,b
  2183  00009C  A4D8               	btfss	status,2,c
  2184  00009E  EF53  F000         	goto	u11081
  2185  0000A2  EF55  F000         	goto	u11080
  2186  0000A6                     u11081:
  2187  0000A6  EF49  F000         	goto	l8469
  2188  0000AA                     u11080:
  2189  0000AA                     
  2190                           ; BSR set to: 1
  2191                           ;main.c: 124:     put_drc(res);
  2192  0000AA  5192               	movf	main@res& (0+255),w,b
  2193  0000AC  ECAD  F02C         	call	_put_drc
  2194                           
  2195                           ;main.c: 125:     break;
  2196  0000B0  EF1A  F000         	goto	l8457
  2197  0000B4                     l8475:
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;main.c: 128:     if (!xatoi(&ptr, &p1) || !xatoi(&ptr, &p2))
  2201  0000B4  0E90               	movlw	low main@ptr
  2202  0000B6  6E12               	movwf	xatoi@str^0,c
  2203  0000B8  0E01               	movlw	high main@ptr
  2204  0000BA  6E13               	movwf	(xatoi@str+1)^0,c
  2205  0000BC  0E62               	movlw	low main@p1
  2206  0000BE  6E14               	movwf	xatoi@res^0,c
  2207  0000C0  0E01               	movlw	high main@p1
  2208  0000C2  6E15               	movwf	(xatoi@res+1)^0,c
  2209  0000C4  ECBE  F013         	call	_xatoi	;wreg free
  2210  0000C8  5012               	movf	?_xatoi^0,w,c
  2211  0000CA  1013               	iorwf	(?_xatoi+1)^0,w,c
  2212  0000CC  B4D8               	btfsc	status,2,c
  2213  0000CE  EF6B  F000         	goto	u11091
  2214  0000D2  EF6D  F000         	goto	u11090
  2215  0000D6                     u11091:
  2216  0000D6  EF1A  F000         	goto	l8457
  2217  0000DA                     u11090:
  2218  0000DA  0E90               	movlw	low main@ptr
  2219  0000DC  6E12               	movwf	xatoi@str^0,c
  2220  0000DE  0E01               	movlw	high main@ptr
  2221  0000E0  6E13               	movwf	(xatoi@str+1)^0,c
  2222  0000E2  0E5C               	movlw	low main@p2
  2223  0000E4  6E14               	movwf	xatoi@res^0,c
  2224  0000E6  0E01               	movlw	high main@p2
  2225  0000E8  6E15               	movwf	(xatoi@res+1)^0,c
  2226  0000EA  ECBE  F013         	call	_xatoi	;wreg free
  2227  0000EE  5012               	movf	?_xatoi^0,w,c
  2228  0000F0  1013               	iorwf	(?_xatoi+1)^0,w,c
  2229  0000F2  A4D8               	btfss	status,2,c
  2230  0000F4  EF7E  F000         	goto	u11101
  2231  0000F8  EF80  F000         	goto	u11100
  2232  0000FC                     u11101:
  2233  0000FC  EF82  F000         	goto	l105
  2234  000100                     u11100:
  2235  000100  EF1A  F000         	goto	l8457
  2236  000104                     l105:
  2237                           
  2238                           ;main.c: 130:     s2 = p2;
  2239  000104  C15C  F166         	movff	main@p2,main@s2
  2240  000108  C15D  F167         	movff	main@p2+1,main@s2+1
  2241  00010C                     
  2242                           ;main.c: 131:     res = disk_readp((BYTE*)Line, p1, s2, 128);
  2243  00010C  0E00               	movlw	low _Line
  2244  00010E  0100               	movlb	0	; () banked
  2245  000110  6F92               	movwf	disk_readp@buff& (0+255),b
  2246  000112  0E03               	movlw	high _Line
  2247  000114  6F93               	movwf	(disk_readp@buff+1)& (0+255),b
  2248  000116  C162  F094         	movff	main@p1,disk_readp@sector
  2249  00011A  C163  F095         	movff	main@p1+1,disk_readp@sector+1
  2250  00011E  C164  F096         	movff	main@p1+2,disk_readp@sector+2
  2251  000122  C165  F097         	movff	main@p1+3,disk_readp@sector+3
  2252  000126  C166  F098         	movff	main@s2,disk_readp@offset
  2253  00012A  C167  F099         	movff	main@s2+1,disk_readp@offset+1
  2254  00012E  0E00               	movlw	0
  2255  000130  6F9B               	movwf	(disk_readp@count+1)& (0+255),b
  2256  000132  0E80               	movlw	128
  2257  000134  6F9A               	movwf	disk_readp@count& (0+255),b
  2258  000136  ECDC  F01B         	call	_disk_readp	;wreg free
  2259  00013A  0101               	movlb	1	; () banked
  2260  00013C  6F92               	movwf	main@res& (0+255),b
  2261  00013E                     
  2262                           ; BSR set to: 1
  2263                           ;main.c: 132:     if (res) {
  2264  00013E  5192               	movf	main@res& (0+255),w,b
  2265  000140  B4D8               	btfsc	status,2,c
  2266  000142  EFA5  F000         	goto	u11111
  2267  000146  EFA7  F000         	goto	u11110
  2268  00014A                     u11111:
  2269  00014A  EFAC  F000         	goto	l8485
  2270  00014E                     u11110:
  2271  00014E                     
  2272                           ; BSR set to: 1
  2273                           ;main.c: 133:                     put_drc(res);
  2274  00014E  5192               	movf	main@res& (0+255),w,b
  2275  000150  ECAD  F02C         	call	_put_drc
  2276                           
  2277                           ;main.c: 134:                     break;
  2278  000154  EF1A  F000         	goto	l8457
  2279  000158                     l8485:
  2280                           
  2281                           ; BSR set to: 1
  2282                           ;main.c: 136:     s3 = s2 + 128;
  2283  000158  0E80               	movlw	128
  2284  00015A  2566               	addwf	main@s2& (0+255),w,b
  2285  00015C  6F60               	movwf	main@s3& (0+255),b
  2286  00015E  0E00               	movlw	0
  2287  000160  2167               	addwfc	(main@s2+1)& (0+255),w,b
  2288  000162  6F61               	movwf	(main@s3+1)& (0+255),b
  2289                           
  2290                           ;main.c: 137:     for (ptr = Line; s2 < s3; s2 += 16, ptr += 16, ofs += 16)
  2291  000164  0E00               	movlw	low _Line
  2292  000166  6F90               	movwf	main@ptr& (0+255),b
  2293  000168  0E03               	movlw	high _Line
  2294  00016A  6F91               	movwf	(main@ptr+1)& (0+255),b
  2295  00016C  EFFC  F000         	goto	l8501
  2296  000170                     l8487:
  2297                           
  2298                           ; BSR set to: 1
  2299                           ;main.c: 138:                 {;main.c: 139:      s1 = (s3 - s2 >= 16) ? 16 : s3 - s2;
  2300  000170  5166               	movf	main@s2& (0+255),w,b
  2301  000172  5D60               	subwf	main@s3& (0+255),w,b
  2302  000174  0100               	movlb	0	; () banked
  2303  000176  6FE9               	movwf	??_main& (0+255),b
  2304  000178  0101               	movlb	1	; () banked
  2305  00017A  5167               	movf	(main@s2+1)& (0+255),w,b
  2306  00017C  5961               	subwfb	(main@s3+1)& (0+255),w,b
  2307  00017E  0100               	movlb	0	; () banked
  2308  000180  6FEA               	movwf	(??_main+1)& (0+255),b
  2309  000182  51EA               	movf	(??_main+1)& (0+255),w,b
  2310  000184  E107               	bnz	u11121
  2311  000186  0E10               	movlw	16
  2312  000188  5DE9               	subwf	??_main& (0+255),w,b
  2313  00018A  B0D8               	btfsc	status,0,c
  2314  00018C  EFCA  F000         	goto	u11121
  2315  000190  EFCC  F000         	goto	u11120
  2316  000194                     u11121:
  2317  000194  EFD5  F000         	goto	l8491
  2318  000198                     u11120:
  2319  000198                     
  2320                           ; BSR set to: 0
  2321  000198  0101               	movlb	1	; () banked
  2322  00019A  5166               	movf	main@s2& (0+255),w,b
  2323  00019C  5D60               	subwf	main@s3& (0+255),w,b
  2324  00019E  6F8E               	movwf	main@s1& (0+255),b
  2325  0001A0  5167               	movf	(main@s2+1)& (0+255),w,b
  2326  0001A2  5961               	subwfb	(main@s3+1)& (0+255),w,b
  2327  0001A4  6F8F               	movwf	(main@s1+1)& (0+255),b
  2328  0001A6  EFDA  F000         	goto	l8493
  2329  0001AA                     l8491:
  2330                           
  2331                           ; BSR set to: 0
  2332  0001AA  0E00               	movlw	0
  2333  0001AC  0101               	movlb	1	; () banked
  2334  0001AE  6F8F               	movwf	(main@s1+1)& (0+255),b
  2335  0001B0  0E10               	movlw	16
  2336  0001B2  6F8E               	movwf	main@s1& (0+255),b
  2337  0001B4                     l8493:
  2338                           
  2339                           ; BSR set to: 1
  2340                           ;main.c: 140:      put_dump((BYTE*)ptr, s2, s1, 16);
  2341  0001B4  C190  F092         	movff	main@ptr,put_dump@buff
  2342  0001B8  C191  F093         	movff	main@ptr+1,put_dump@buff+1
  2343  0001BC  C166  F094         	movff	main@s2,put_dump@addr
  2344  0001C0  C167  F095         	movff	main@s2+1,put_dump@addr+1
  2345  0001C4  0100               	movlb	0	; () banked
  2346  0001C6  6B96               	clrf	(put_dump@addr+2)& (0+255),b
  2347  0001C8  6B97               	clrf	(put_dump@addr+3)& (0+255),b
  2348  0001CA  C18E  F098         	movff	main@s1,put_dump@len
  2349  0001CE  C18F  F099         	movff	main@s1+1,put_dump@len+1
  2350  0001D2  0E00               	movlw	0
  2351  0001D4  6F9B               	movwf	(put_dump@width+1)& (0+255),b
  2352  0001D6  0E10               	movlw	16
  2353  0001D8  6F9A               	movwf	put_dump@width& (0+255),b
  2354  0001DA  EC5D  F017         	call	_put_dump	;wreg free
  2355  0001DE                     
  2356                           ;main.c: 141:     }
  2357  0001DE  0E10               	movlw	16
  2358  0001E0  0101               	movlb	1	; () banked
  2359  0001E2  2766               	addwf	main@s2& (0+255),f,b
  2360  0001E4  0E00               	movlw	0
  2361  0001E6  2367               	addwfc	(main@s2+1)& (0+255),f,b
  2362  0001E8                     
  2363                           ; BSR set to: 1
  2364  0001E8  0E10               	movlw	16
  2365  0001EA  2790               	addwf	main@ptr& (0+255),f,b
  2366  0001EC  0E00               	movlw	0
  2367  0001EE  2391               	addwfc	(main@ptr+1)& (0+255),f,b
  2368  0001F0                     
  2369                           ; BSR set to: 1
  2370  0001F0  0E10               	movlw	16
  2371  0001F2  2758               	addwf	main@ofs& (0+255),f,b
  2372  0001F4  0E00               	movlw	0
  2373  0001F6  2359               	addwfc	(main@ofs+1)& (0+255),f,b
  2374  0001F8                     l8501:
  2375                           
  2376                           ; BSR set to: 1
  2377  0001F8  5160               	movf	main@s3& (0+255),w,b
  2378  0001FA  5D66               	subwf	main@s2& (0+255),w,b
  2379  0001FC  5161               	movf	(main@s3+1)& (0+255),w,b
  2380  0001FE  5967               	subwfb	(main@s2+1)& (0+255),w,b
  2381  000200  A0D8               	btfss	status,0,c
  2382  000202  EF05  F001         	goto	u11131
  2383  000206  EF07  F001         	goto	u11130
  2384  00020A                     u11131:
  2385  00020A  EFB8  F000         	goto	l8487
  2386  00020E                     u11130:
  2387  00020E  EF1A  F000         	goto	l8457
  2388  000212                     l8505:
  2389                           
  2390                           ; BSR set to: 0
  2391  000212  C190  FFD9         	movff	main@ptr,fsr2l
  2392  000216  C191  FFDA         	movff	main@ptr+1,fsr2h
  2393  00021A  0101               	movlb	1	; () banked
  2394  00021C  4B90               	infsnz	main@ptr& (0+255),f,b
  2395  00021E  2B91               	incf	(main@ptr+1)& (0+255),f,b
  2396  000220  50DF               	movf	indf2,w,c
  2397  000222  0100               	movlb	0	; () banked
  2398  000224  6FE9               	movwf	??_main& (0+255),b
  2399  000226  6BEA               	clrf	(??_main+1)& (0+255),b
  2400                           
  2401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2402                           ; Switch size 1, requested type "simple"
  2403                           ; Number of cases is 1, Range of values is 0 to 0
  2404                           ; switch strategies available:
  2405                           ; Name         Instructions Cycles
  2406                           ; simple_byte            4     3 (average)
  2407                           ;	Chosen strategy is simple_byte
  2408  000228  51EA               	movf	(??_main+1)& (0+255),w,b
  2409  00022A  0A00               	xorlw	0	; case 0
  2410  00022C  B4D8               	btfsc	status,2,c
  2411  00022E  EF1B  F001         	goto	l8947
  2412  000232  EF1A  F000         	goto	l8457
  2413  000236                     l8947:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ; Switch size 1, requested type "simple"
  2417                           ; Number of cases is 2, Range of values is 100 to 105
  2418                           ; switch strategies available:
  2419                           ; Name         Instructions Cycles
  2420                           ; simple_byte            7     4 (average)
  2421                           ;	Chosen strategy is simple_byte
  2422  000236  51E9               	movf	??_main& (0+255),w,b
  2423  000238  0A64               	xorlw	100	; case 100
  2424  00023A  B4D8               	btfsc	status,2,c
  2425  00023C  EF5A  F000         	goto	l8475
  2426  000240  0A0D               	xorlw	13	; case 105
  2427  000242  B4D8               	btfsc	status,2,c
  2428  000244  EF43  F000         	goto	l8467
  2429  000248  EF1A  F000         	goto	l8457
  2430  00024C                     l8507:
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;main.c: 150:                 printf("\tMount the volume\r\n\t");
  2434  00024C  0EF8               	movlw	low STR_7
  2435  00024E  6F86               	movwf	printf@fmt& (0+255),b
  2436  000250  0E7C               	movlw	high STR_7
  2437  000252  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2438  000254  EC5A  F02C         	call	_printf	;wreg free
  2439  000258                     l120:
  2440                           
  2441                           ;main.c: 152:                 {;main.c: 153:                     res = pf_mount(&fs);
  2442  000258  0E93               	movlw	low main@fs
  2443  00025A  0100               	movlb	0	; () banked
  2444  00025C  6FAC               	movwf	pf_mount@fs& (0+255),b
  2445  00025E  0E01               	movlw	high main@fs
  2446  000260  6FAD               	movwf	(pf_mount@fs+1)& (0+255),b
  2447  000262  ECD3  F007         	call	_pf_mount	;wreg free
  2448  000266  0101               	movlb	1	; () banked
  2449  000268  6F92               	movwf	main@res& (0+255),b
  2450  00026A                     
  2451                           ; BSR set to: 1
  2452                           ;main.c: 154:                 } while (res != FR_OK);
  2453  00026A  5192               	movf	main@res& (0+255),w,b
  2454  00026C  A4D8               	btfss	status,2,c
  2455  00026E  EF3B  F001         	goto	u11141
  2456  000272  EF3D  F001         	goto	u11140
  2457  000276                     u11141:
  2458  000276  EF2C  F001         	goto	l120
  2459  00027A                     u11140:
  2460  00027A                     
  2461                           ; BSR set to: 1
  2462                           ;main.c: 155:     put_rc(res);
  2463  00027A  5192               	movf	main@res& (0+255),w,b
  2464  00027C  ECBE  F029         	call	_put_rc
  2465                           
  2466                           ;main.c: 156:     break;
  2467  000280  EF1A  F000         	goto	l8457
  2468  000284                     l8513:
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;main.c: 159:                 printf("\tOpen a file\r\n\t");
  2472  000284  0E48               	movlw	low STR_8
  2473  000286  6F86               	movwf	printf@fmt& (0+255),b
  2474  000288  0E7D               	movlw	high STR_8
  2475  00028A  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2476  00028C  EC5A  F02C         	call	_printf	;wreg free
  2477                           
  2478                           ;main.c: 160:     while (*ptr == ' ')
  2479  000290  EF4D  F001         	goto	l8517
  2480  000294                     l8515:
  2481                           
  2482                           ;main.c: 161:                     ptr++;
  2483  000294  0101               	movlb	1	; () banked
  2484  000296  4B90               	infsnz	main@ptr& (0+255),f,b
  2485  000298  2B91               	incf	(main@ptr+1)& (0+255),f,b
  2486  00029A                     l8517:
  2487                           
  2488                           ;main.c: 160:     while (*ptr == ' ')
  2489  00029A  C190  FFD9         	movff	main@ptr,fsr2l
  2490  00029E  C191  FFDA         	movff	main@ptr+1,fsr2h
  2491  0002A2  0E20               	movlw	32
  2492  0002A4  18DE               	xorwf	postinc2,w,c
  2493  0002A6  B4D8               	btfsc	status,2,c
  2494  0002A8  EF58  F001         	goto	u11151
  2495  0002AC  EF5A  F001         	goto	u11150
  2496  0002B0                     u11151:
  2497  0002B0  EF4A  F001         	goto	l8515
  2498  0002B4                     u11150:
  2499  0002B4                     
  2500                           ;main.c: 162:     res = pf_open(ptr);
  2501  0002B4  C190  F0E2         	movff	main@ptr,pf_open@path
  2502  0002B8  C191  F0E3         	movff	main@ptr+1,pf_open@path+1
  2503  0002BC  ECB1  F01F         	call	_pf_open	;wreg free
  2504  0002C0  0101               	movlb	1	; () banked
  2505  0002C2  6F92               	movwf	main@res& (0+255),b
  2506                           
  2507                           ;main.c: 163:                 put_rc(res);
  2508  0002C4  5192               	movf	main@res& (0+255),w,b
  2509  0002C6  ECBE  F029         	call	_put_rc
  2510  0002CA                     
  2511                           ;main.c: 164:                 if(res == FR_OK)
  2512  0002CA  0101               	movlb	1	; () banked
  2513  0002CC  5192               	movf	main@res& (0+255),w,b
  2514  0002CE  A4D8               	btfss	status,2,c
  2515  0002D0  EF6C  F001         	goto	u11161
  2516  0002D4  EF6E  F001         	goto	u11160
  2517  0002D8                     u11161:
  2518  0002D8  EF1A  F000         	goto	l8457
  2519  0002DC                     u11160:
  2520  0002DC                     
  2521                           ; BSR set to: 1
  2522                           ;main.c: 165:                     init_flag = 0;
  2523  0002DC  0E00               	movlw	0
  2524  0002DE  6FC0               	movwf	(_init_flag+1)& (0+255),b
  2525  0002E0  0E00               	movlw	0
  2526  0002E2  6FBF               	movwf	_init_flag& (0+255),b
  2527  0002E4  EF1A  F000         	goto	l8457
  2528  0002E8                     l8525:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;main.c: 169:                 printf("\tRead all file and output square wave\r\n");
  2532  0002E8  0E52               	movlw	low STR_9
  2533  0002EA  6F86               	movwf	printf@fmt& (0+255),b
  2534  0002EC  0E7C               	movlw	high STR_9
  2535  0002EE  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2536  0002F0  EC5A  F02C         	call	_printf	;wreg free
  2537  0002F4                     
  2538                           ;main.c: 170:                 int count;;main.c: 171:                 unsigned int num_t
      +                          emp;;main.c: 172:                 pwm_setDuty(0);
  2539  0002F4  0E00               	movlw	0
  2540  0002F6  6E07               	movwf	(pwm_setDuty@dutycycle+1)^0,c
  2541  0002F8  0E00               	movlw	0
  2542  0002FA  6E06               	movwf	pwm_setDuty@dutycycle^0,c
  2543  0002FC  EC6E  F02C         	call	_pwm_setDuty	;wreg free
  2544  000300                     
  2545                           ;main.c: 173:                 pwm_start();
  2546  000300  ECE7  F02C         	call	_pwm_start	;wreg free
  2547  000304                     l8531:
  2548                           
  2549                           ;main.c: 175:                 {;main.c: 176:         ofs = fs.fptr;
  2550  000304  C1A9  F158         	movff	main@fs+22,main@ofs
  2551  000308  C1AA  F159         	movff	main@fs+23,main@ofs+1
  2552  00030C                     
  2553                           ;main.c: 177:         res = pf_read(Line, sizeof(Line), &s1);
  2554  00030C  0E00               	movlw	low _Line
  2555  00030E  0100               	movlb	0	; () banked
  2556  000310  6FC2               	movwf	pf_read@buff& (0+255),b
  2557  000312  0E03               	movlw	high _Line
  2558  000314  6FC3               	movwf	(pf_read@buff+1)& (0+255),b
  2559  000316  0E00               	movlw	0
  2560  000318  6FC5               	movwf	(pf_read@btr+1)& (0+255),b
  2561  00031A  0E80               	movlw	128
  2562  00031C  6FC4               	movwf	pf_read@btr& (0+255),b
  2563  00031E  0E8E               	movlw	low main@s1
  2564  000320  6FC6               	movwf	pf_read@br& (0+255),b
  2565  000322  0E01               	movlw	high main@s1
  2566  000324  6FC7               	movwf	(pf_read@br+1)& (0+255),b
  2567  000326  EC87  F00D         	call	_pf_read	;wreg free
  2568  00032A  0101               	movlb	1	; () banked
  2569  00032C  6F92               	movwf	main@res& (0+255),b
  2570  00032E                     
  2571                           ; BSR set to: 1
  2572                           ;main.c: 178:         if (res != FR_OK)
  2573  00032E  5192               	movf	main@res& (0+255),w,b
  2574  000330  B4D8               	btfsc	status,2,c
  2575  000332  EF9D  F001         	goto	u11171
  2576  000336  EF9F  F001         	goto	u11170
  2577  00033A                     u11171:
  2578  00033A  EFAC  F001         	goto	l8539
  2579  00033E                     u11170:
  2580  00033E                     
  2581                           ; BSR set to: 1
  2582                           ;main.c: 179:                     {;main.c: 180:                         printf("\t");
  2583  00033E  0E56               	movlw	low (STR_8+14)
  2584  000340  0100               	movlb	0	; () banked
  2585  000342  6F86               	movwf	printf@fmt& (0+255),b
  2586  000344  0E7D               	movlw	high (STR_8+14)
  2587  000346  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2588  000348  EC5A  F02C         	call	_printf	;wreg free
  2589                           
  2590                           ;main.c: 181:                         put_rc(res);
  2591  00034C  0101               	movlb	1	; () banked
  2592  00034E  5192               	movf	main@res& (0+255),w,b
  2593  000350  ECBE  F029         	call	_put_rc
  2594                           
  2595                           ;main.c: 182:                         break;
  2596  000354  EFFC  F001         	goto	l8561
  2597  000358                     l8539:
  2598                           
  2599                           ; BSR set to: 1
  2600                           ;main.c: 184:                     count = 0;
  2601  000358  0E00               	movlw	0
  2602  00035A  6F5B               	movwf	(main@count+1)& (0+255),b
  2603  00035C  0E00               	movlw	0
  2604  00035E  6F5A               	movwf	main@count& (0+255),b
  2605  000360                     
  2606                           ; BSR set to: 1
  2607                           ;main.c: 185:                     if(init_flag == 0)
  2608  000360  51BF               	movf	_init_flag& (0+255),w,b
  2609  000362  11C0               	iorwf	(_init_flag+1)& (0+255),w,b
  2610  000364  A4D8               	btfss	status,2,c
  2611  000366  EFB7  F001         	goto	u11181
  2612  00036A  EFB9  F001         	goto	u11180
  2613  00036E                     u11181:
  2614  00036E  EFDD  F001         	goto	l8555
  2615  000372                     u11180:
  2616  000372                     
  2617                           ; BSR set to: 1
  2618                           ;main.c: 186:                     {;main.c: 187:                         init_flag = 1;
  2619  000372  0E00               	movlw	0
  2620  000374  6FC0               	movwf	(_init_flag+1)& (0+255),b
  2621  000376  0E01               	movlw	1
  2622  000378  6FBF               	movwf	_init_flag& (0+255),b
  2623  00037A                     
  2624                           ; BSR set to: 1
  2625                           ;main.c: 188:                         count += 44;
  2626  00037A  0E2C               	movlw	44
  2627  00037C  275A               	addwf	main@count& (0+255),f,b
  2628  00037E  0E00               	movlw	0
  2629  000380  235B               	addwfc	(main@count+1)& (0+255),f,b
  2630  000382  EFDD  F001         	goto	l8555
  2631  000386                     l8547:
  2632                           
  2633                           ; BSR set to: 1
  2634                           ;main.c: 191:                     {;main.c: 192:                         num_temp = Line
      +                          [count];
  2635  000386  0E00               	movlw	low _Line
  2636  000388  255A               	addwf	main@count& (0+255),w,b
  2637  00038A  6ED9               	movwf	fsr2l,c
  2638  00038C  0E03               	movlw	high _Line
  2639  00038E  215B               	addwfc	(main@count+1)& (0+255),w,b
  2640  000390  6EDA               	movwf	fsr2h,c
  2641  000392  50DF               	movf	indf2,w,c
  2642  000394  0100               	movlb	0	; () banked
  2643  000396  6FE9               	movwf	??_main& (0+255),b
  2644  000398  51E9               	movf	??_main& (0+255),w,b
  2645  00039A  0101               	movlb	1	; () banked
  2646  00039C  6F56               	movwf	main@num_temp& (0+255),b
  2647  00039E  6B57               	clrf	(main@num_temp+1)& (0+255),b
  2648  0003A0                     
  2649                           ; BSR set to: 1
  2650                           ;main.c: 193:                         pwm_setDuty((int)num_temp);
  2651  0003A0  C156  F006         	movff	main@num_temp,pwm_setDuty@dutycycle
  2652  0003A4  C157  F007         	movff	main@num_temp+1,pwm_setDuty@dutycycle+1
  2653  0003A8  EC6E  F02C         	call	_pwm_setDuty	;wreg free
  2654  0003AC                     
  2655                           ;main.c: 194:                         count++;
  2656  0003AC  0101               	movlb	1	; () banked
  2657  0003AE  4B5A               	infsnz	main@count& (0+255),f,b
  2658  0003B0  2B5B               	incf	(main@count+1)& (0+255),f,b
  2659  0003B2                     
  2660                           ; BSR set to: 1
  2661                           ;main.c: 196:                         _delay((unsigned long)((40)*(40000000/4000000.0)))
      +                          ;
  2662  0003B2  0E85               	movlw	133
  2663  0003B4                     u11547:
  2664  0003B4  2EE8               	decfsz	wreg,f,c
  2665  0003B6  D7FE               	bra	u11547
  2666  0003B8  F000               	nop	
  2667  0003BA                     l8555:
  2668                           
  2669                           ;main.c: 190:                     while(count < s1)
  2670  0003BA  0101               	movlb	1	; () banked
  2671  0003BC  518E               	movf	main@s1& (0+255),w,b
  2672  0003BE  5D5A               	subwf	main@count& (0+255),w,b
  2673  0003C0  518F               	movf	(main@s1+1)& (0+255),w,b
  2674  0003C2  595B               	subwfb	(main@count+1)& (0+255),w,b
  2675  0003C4  A0D8               	btfss	status,0,c
  2676  0003C6  EFE7  F001         	goto	u11191
  2677  0003CA  EFE9  F001         	goto	u11190
  2678  0003CE                     u11191:
  2679  0003CE  EFC3  F001         	goto	l8547
  2680  0003D2                     u11190:
  2681  0003D2                     
  2682                           ; BSR set to: 1
  2683                           ;main.c: 198:                     if(INTCONbits.INT0IF)
  2684  0003D2  A2F2               	btfss	242,1,c	;volatile
  2685  0003D4  EFEE  F001         	goto	u11201
  2686  0003D8  EFF0  F001         	goto	u11200
  2687  0003DC                     u11201:
  2688  0003DC  EFF3  F001         	goto	l8559
  2689  0003E0                     u11200:
  2690  0003E0                     
  2691                           ; BSR set to: 1
  2692                           ;main.c: 199:                     {;main.c: 200:                         INT0IF = 0;
  2693  0003E0  92F2               	bcf	4082,1,c	;volatile
  2694                           
  2695                           ;main.c: 201:                         break;
  2696  0003E2  EFFC  F001         	goto	l8561
  2697  0003E6                     l8559:
  2698                           
  2699                           ; BSR set to: 1
  2700                           ;main.c: 203:     }while(s1 != 0);
  2701  0003E6  518E               	movf	main@s1& (0+255),w,b
  2702  0003E8  118F               	iorwf	(main@s1+1)& (0+255),w,b
  2703  0003EA  A4D8               	btfss	status,2,c
  2704  0003EC  EFFA  F001         	goto	u11211
  2705  0003F0  EFFC  F001         	goto	u11210
  2706  0003F4                     u11211:
  2707  0003F4  EF82  F001         	goto	l8531
  2708  0003F8                     u11210:
  2709  0003F8                     l8561:
  2710                           
  2711                           ;main.c: 204:                 pwm_stop();
  2712  0003F8  ECE5  F02C         	call	_pwm_stop	;wreg free
  2713                           
  2714                           ;main.c: 205:     break;
  2715  0003FC  EF1A  F000         	goto	l8457
  2716  000400                     l8563:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;main.c: 207:                 printf("\tRead the file 128 bytes and dump it\r\n");
  2720  000400  0E7A               	movlw	low STR_11
  2721  000402  6F86               	movwf	printf@fmt& (0+255),b
  2722  000404  0E7C               	movlw	high STR_11
  2723  000406  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2724  000408  EC5A  F02C         	call	_printf	;wreg free
  2725  00040C                     
  2726                           ;main.c: 208:                 ofs = fs.fptr;
  2727  00040C  C1A9  F158         	movff	main@fs+22,main@ofs
  2728  000410  C1AA  F159         	movff	main@fs+23,main@ofs+1
  2729                           
  2730                           ;main.c: 209:                 res = pf_read(Line, sizeof(Line), &s1);
  2731  000414  0E00               	movlw	low _Line
  2732  000416  0100               	movlb	0	; () banked
  2733  000418  6FC2               	movwf	pf_read@buff& (0+255),b
  2734  00041A  0E03               	movlw	high _Line
  2735  00041C  6FC3               	movwf	(pf_read@buff+1)& (0+255),b
  2736  00041E  0E00               	movlw	0
  2737  000420  6FC5               	movwf	(pf_read@btr+1)& (0+255),b
  2738  000422  0E80               	movlw	128
  2739  000424  6FC4               	movwf	pf_read@btr& (0+255),b
  2740  000426  0E8E               	movlw	low main@s1
  2741  000428  6FC6               	movwf	pf_read@br& (0+255),b
  2742  00042A  0E01               	movlw	high main@s1
  2743  00042C  6FC7               	movwf	(pf_read@br+1)& (0+255),b
  2744  00042E  EC87  F00D         	call	_pf_read	;wreg free
  2745  000432  0101               	movlb	1	; () banked
  2746  000434  6F92               	movwf	main@res& (0+255),b
  2747  000436                     
  2748                           ; BSR set to: 1
  2749                           ;main.c: 210:                 if (res != FR_OK)
  2750  000436  5192               	movf	main@res& (0+255),w,b
  2751  000438  B4D8               	btfsc	status,2,c
  2752  00043A  EF21  F002         	goto	u11221
  2753  00043E  EF23  F002         	goto	u11220
  2754  000442                     u11221:
  2755  000442  EF30  F002         	goto	l8571
  2756  000446                     u11220:
  2757  000446                     
  2758                           ; BSR set to: 1
  2759                           ;main.c: 211:                 {;main.c: 212:                     printf("\t");
  2760  000446  0E56               	movlw	low (STR_8+14)
  2761  000448  0100               	movlb	0	; () banked
  2762  00044A  6F86               	movwf	printf@fmt& (0+255),b
  2763  00044C  0E7D               	movlw	high (STR_8+14)
  2764  00044E  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2765  000450  EC5A  F02C         	call	_printf	;wreg free
  2766                           
  2767                           ;main.c: 213:                     put_rc(res);
  2768  000454  0101               	movlb	1	; () banked
  2769  000456  5192               	movf	main@res& (0+255),w,b
  2770  000458  ECBE  F029         	call	_put_rc
  2771                           
  2772                           ;main.c: 214:                     break;
  2773  00045C  EF1A  F000         	goto	l8457
  2774  000460                     l8571:
  2775                           
  2776                           ; BSR set to: 1
  2777                           ;main.c: 216:                 ptr = Line;
  2778  000460  0E00               	movlw	low _Line
  2779  000462  6F90               	movwf	main@ptr& (0+255),b
  2780  000464  0E03               	movlw	high _Line
  2781  000466  6F91               	movwf	(main@ptr+1)& (0+255),b
  2782                           
  2783                           ;main.c: 217:                 while (s1)
  2784  000468  EF74  F002         	goto	l8589
  2785  00046C                     l8573:
  2786                           
  2787                           ; BSR set to: 1
  2788                           ;main.c: 218:                 {;main.c: 219:      s2 = (s1 >= 16) ? 16 : s1;
  2789  00046C  518F               	movf	(main@s1+1)& (0+255),w,b
  2790  00046E  E107               	bnz	u11231
  2791  000470  0E10               	movlw	16
  2792  000472  5D8E               	subwf	main@s1& (0+255),w,b
  2793  000474  B0D8               	btfsc	status,0,c
  2794  000476  EF3F  F002         	goto	u11231
  2795  00047A  EF41  F002         	goto	u11230
  2796  00047E                     u11231:
  2797  00047E  EF47  F002         	goto	l8577
  2798  000482                     u11230:
  2799  000482                     
  2800                           ; BSR set to: 1
  2801  000482  C18E  F166         	movff	main@s1,main@s2
  2802  000486  C18F  F167         	movff	main@s1+1,main@s2+1
  2803  00048A  EF4B  F002         	goto	l8579
  2804  00048E                     l8577:
  2805                           
  2806                           ; BSR set to: 1
  2807  00048E  0E00               	movlw	0
  2808  000490  6F67               	movwf	(main@s2+1)& (0+255),b
  2809  000492  0E10               	movlw	16
  2810  000494  6F66               	movwf	main@s2& (0+255),b
  2811  000496                     l8579:
  2812                           
  2813                           ; BSR set to: 1
  2814                           ;main.c: 220:      s1 -= s2;
  2815  000496  5166               	movf	main@s2& (0+255),w,b
  2816  000498  5F8E               	subwf	main@s1& (0+255),f,b
  2817  00049A  5167               	movf	(main@s2+1)& (0+255),w,b
  2818  00049C  5B8F               	subwfb	(main@s1+1)& (0+255),f,b
  2819  00049E                     
  2820                           ; BSR set to: 1
  2821                           ;main.c: 221:                     printf("\t");
  2822  00049E  0E56               	movlw	low (STR_8+14)
  2823  0004A0  0100               	movlb	0	; () banked
  2824  0004A2  6F86               	movwf	printf@fmt& (0+255),b
  2825  0004A4  0E7D               	movlw	high (STR_8+14)
  2826  0004A6  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2827  0004A8  EC5A  F02C         	call	_printf	;wreg free
  2828  0004AC                     
  2829                           ;main.c: 222:         put_dump((BYTE*)ptr, ofs, s2, sizeof(char));
  2830  0004AC  C190  F092         	movff	main@ptr,put_dump@buff
  2831  0004B0  C191  F093         	movff	main@ptr+1,put_dump@buff+1
  2832  0004B4  C158  F094         	movff	main@ofs,put_dump@addr
  2833  0004B8  C159  F095         	movff	main@ofs+1,put_dump@addr+1
  2834  0004BC  0100               	movlb	0	; () banked
  2835  0004BE  6B96               	clrf	(put_dump@addr+2)& (0+255),b
  2836  0004C0  6B97               	clrf	(put_dump@addr+3)& (0+255),b
  2837  0004C2  C166  F098         	movff	main@s2,put_dump@len
  2838  0004C6  C167  F099         	movff	main@s2+1,put_dump@len+1
  2839  0004CA  0E00               	movlw	0
  2840  0004CC  6F9B               	movwf	(put_dump@width+1)& (0+255),b
  2841  0004CE  0E01               	movlw	1
  2842  0004D0  6F9A               	movwf	put_dump@width& (0+255),b
  2843  0004D2  EC5D  F017         	call	_put_dump	;wreg free
  2844  0004D6                     
  2845                           ;main.c: 223:                     ptr += 16;
  2846  0004D6  0E10               	movlw	16
  2847  0004D8  0101               	movlb	1	; () banked
  2848  0004DA  2790               	addwf	main@ptr& (0+255),f,b
  2849  0004DC  0E00               	movlw	0
  2850  0004DE  2391               	addwfc	(main@ptr+1)& (0+255),f,b
  2851  0004E0                     
  2852                           ; BSR set to: 1
  2853                           ;main.c: 224:                     ofs += 16;
  2854  0004E0  0E10               	movlw	16
  2855  0004E2  2758               	addwf	main@ofs& (0+255),f,b
  2856  0004E4  0E00               	movlw	0
  2857  0004E6  2359               	addwfc	(main@ofs+1)& (0+255),f,b
  2858  0004E8                     l8589:
  2859                           
  2860                           ; BSR set to: 1
  2861                           ;main.c: 217:                 while (s1)
  2862  0004E8  518E               	movf	main@s1& (0+255),w,b
  2863  0004EA  118F               	iorwf	(main@s1+1)& (0+255),w,b
  2864  0004EC  A4D8               	btfss	status,2,c
  2865  0004EE  EF7B  F002         	goto	u11241
  2866  0004F2  EF7D  F002         	goto	u11240
  2867  0004F6                     u11241:
  2868  0004F6  EF36  F002         	goto	l8573
  2869  0004FA                     u11240:
  2870  0004FA  EF1A  F000         	goto	l8457
  2871  0004FE                     l8591:
  2872                           
  2873                           ;main.c: 229:      res = pf_read(0, 32768, &s1);
  2874  0004FE  0E00               	movlw	0
  2875  000500  0100               	movlb	0	; () banked
  2876  000502  6FC2               	movwf	pf_read@buff& (0+255),b
  2877  000504  0E00               	movlw	0
  2878  000506  6FC3               	movwf	(pf_read@buff+1)& (0+255),b
  2879  000508  0E80               	movlw	128
  2880  00050A  6FC5               	movwf	(pf_read@btr+1)& (0+255),b
  2881  00050C  0E00               	movlw	0
  2882  00050E  6FC4               	movwf	pf_read@btr& (0+255),b
  2883  000510  0E8E               	movlw	low main@s1
  2884  000512  6FC6               	movwf	pf_read@br& (0+255),b
  2885  000514  0E01               	movlw	high main@s1
  2886  000516  6FC7               	movwf	(pf_read@br+1)& (0+255),b
  2887  000518  EC87  F00D         	call	_pf_read	;wreg free
  2888  00051C  0101               	movlb	1	; () banked
  2889  00051E  6F92               	movwf	main@res& (0+255),b
  2890  000520                     
  2891                           ; BSR set to: 1
  2892                           ;main.c: 230:      if (res != FR_OK)
  2893  000520  5192               	movf	main@res& (0+255),w,b
  2894  000522  B4D8               	btfsc	status,2,c
  2895  000524  EF96  F002         	goto	u11251
  2896  000528  EF98  F002         	goto	u11250
  2897  00052C                     u11251:
  2898  00052C  EF9D  F002         	goto	l8597
  2899  000530                     u11250:
  2900  000530                     
  2901                           ; BSR set to: 1
  2902                           ;main.c: 231:                     {;main.c: 232:                         put_rc(res);
  2903  000530  5192               	movf	main@res& (0+255),w,b
  2904  000532  ECBE  F029         	call	_put_rc
  2905                           
  2906                           ;main.c: 233:                         break;
  2907  000536  EF1A  F000         	goto	l8457
  2908  00053A                     l8597:
  2909                           
  2910                           ; BSR set to: 1
  2911                           ;main.c: 235:     } while (s1 == 32768);
  2912  00053A  0E80               	movlw	128
  2913  00053C  198F               	xorwf	(main@s1+1)& (0+255),w,b
  2914  00053E  118E               	iorwf	main@s1& (0+255),w,b
  2915  000540  B4D8               	btfsc	status,2,c
  2916  000542  EFA5  F002         	goto	u11261
  2917  000546  EFA7  F002         	goto	u11260
  2918  00054A                     u11261:
  2919  00054A  EF7F  F002         	goto	l8591
  2920  00054E                     u11260:
  2921  00054E  EF1A  F000         	goto	l8457
  2922  000552                     l8599:
  2923                           
  2924                           ;main.c: 317:                     ptr++;
  2925  000552  0101               	movlb	1	; () banked
  2926  000554  4B90               	infsnz	main@ptr& (0+255),f,b
  2927  000556  2B91               	incf	(main@ptr+1)& (0+255),f,b
  2928  000558                     l8601:
  2929                           
  2930                           ;main.c: 316:     while (*ptr == ' ')
  2931  000558  C190  FFD9         	movff	main@ptr,fsr2l
  2932  00055C  C191  FFDA         	movff	main@ptr+1,fsr2h
  2933  000560  0E20               	movlw	32
  2934  000562  18DE               	xorwf	postinc2,w,c
  2935  000564  B4D8               	btfsc	status,2,c
  2936  000566  EFB7  F002         	goto	u11271
  2937  00056A  EFB9  F002         	goto	u11270
  2938  00056E                     u11271:
  2939  00056E  EFA9  F002         	goto	l8599
  2940  000572                     u11270:
  2941  000572                     
  2942                           ;main.c: 319:     if (!xatoi(&ptr, &p1))
  2943  000572  0E90               	movlw	low main@ptr
  2944  000574  6E12               	movwf	xatoi@str^0,c
  2945  000576  0E01               	movlw	high main@ptr
  2946  000578  6E13               	movwf	(xatoi@str+1)^0,c
  2947  00057A  0E62               	movlw	low main@p1
  2948  00057C  6E14               	movwf	xatoi@res^0,c
  2949  00057E  0E01               	movlw	high main@p1
  2950  000580  6E15               	movwf	(xatoi@res+1)^0,c
  2951  000582  ECBE  F013         	call	_xatoi	;wreg free
  2952  000586  5012               	movf	?_xatoi^0,w,c
  2953  000588  1013               	iorwf	(?_xatoi+1)^0,w,c
  2954  00058A  A4D8               	btfss	status,2,c
  2955  00058C  EFCA  F002         	goto	u11281
  2956  000590  EFCC  F002         	goto	u11280
  2957  000594                     u11281:
  2958  000594  EFD5  F002         	goto	l8607
  2959  000598                     u11280:
  2960  000598                     
  2961                           ;main.c: 320:                 {;main.c: 321:                     printf("seek pointer is
      +                           invalid\r\n");
  2962  000598  0EDE               	movlw	low STR_14
  2963  00059A  0100               	movlb	0	; () banked
  2964  00059C  6F86               	movwf	printf@fmt& (0+255),b
  2965  00059E  0E7C               	movlw	high STR_14
  2966  0005A0  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2967  0005A2  EC5A  F02C         	call	_printf	;wreg free
  2968                           
  2969                           ;main.c: 322:                     break;
  2970  0005A6  EF1A  F000         	goto	l8457
  2971  0005AA                     l8607:
  2972                           
  2973                           ;main.c: 325:     res = pf_lseek(p1);
  2974  0005AA  C162  F0C2         	movff	main@p1,pf_lseek@ofs
  2975  0005AE  C163  F0C3         	movff	main@p1+1,pf_lseek@ofs+1
  2976  0005B2  C164  F0C4         	movff	main@p1+2,pf_lseek@ofs+2
  2977  0005B6  C165  F0C5         	movff	main@p1+3,pf_lseek@ofs+3
  2978  0005BA  EC3F  F00B         	call	_pf_lseek	;wreg free
  2979  0005BE  0101               	movlb	1	; () banked
  2980  0005C0  6F92               	movwf	main@res& (0+255),b
  2981                           
  2982                           ;main.c: 326:                 printf("\t");
  2983  0005C2  0E56               	movlw	low (STR_8+14)
  2984  0005C4  0100               	movlb	0	; () banked
  2985  0005C6  6F86               	movwf	printf@fmt& (0+255),b
  2986  0005C8  0E7D               	movlw	high (STR_8+14)
  2987  0005CA  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2988  0005CC  EC5A  F02C         	call	_printf	;wreg free
  2989                           
  2990                           ;main.c: 327:     put_rc(res);
  2991  0005D0  0101               	movlb	1	; () banked
  2992  0005D2  5192               	movf	main@res& (0+255),w,b
  2993  0005D4  ECBE  F029         	call	_put_rc
  2994  0005D8                     
  2995                           ;main.c: 328:     if (res == FR_OK)
  2996  0005D8  0101               	movlb	1	; () banked
  2997  0005DA  5192               	movf	main@res& (0+255),w,b
  2998  0005DC  A4D8               	btfss	status,2,c
  2999  0005DE  EFF3  F002         	goto	u11291
  3000  0005E2  EFF5  F002         	goto	u11290
  3001  0005E6                     u11291:
  3002  0005E6  EF1A  F000         	goto	l8457
  3003  0005EA                     u11290:
  3004  0005EA                     
  3005                           ; BSR set to: 1
  3006                           ;main.c: 329:      printf("\tfptr = %lu(0x%lX)\r\n", fs.fptr, fs.fptr);
  3007  0005EA  0E0D               	movlw	low STR_16
  3008  0005EC  0100               	movlb	0	; () banked
  3009  0005EE  6F86               	movwf	printf@fmt& (0+255),b
  3010  0005F0  0E7D               	movlw	high STR_16
  3011  0005F2  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3012  0005F4  C1A9  F088         	movff	main@fs+22,?_printf+2
  3013  0005F8  C1AA  F089         	movff	main@fs+23,?_printf+3
  3014  0005FC  C1AB  F08A         	movff	main@fs+24,?_printf+4
  3015  000600  C1AC  F08B         	movff	main@fs+25,?_printf+5
  3016  000604  C1A9  F08C         	movff	main@fs+22,?_printf+6
  3017  000608  C1AA  F08D         	movff	main@fs+23,?_printf+7
  3018  00060C  C1AB  F08E         	movff	main@fs+24,?_printf+8
  3019  000610  C1AC  F08F         	movff	main@fs+25,?_printf+9
  3020  000614  EC5A  F02C         	call	_printf	;wreg free
  3021  000618  EF1A  F000         	goto	l8457
  3022  00061C                     l8613:
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;main.c: 334:                 printf("\tDirectory listing\r\n");
  3026  00061C  0E22               	movlw	low STR_17
  3027  00061E  6F86               	movwf	printf@fmt& (0+255),b
  3028  000620  0E7D               	movlw	high STR_17
  3029  000622  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3030  000624  EC5A  F02C         	call	_printf	;wreg free
  3031                           
  3032                           ;main.c: 336:     while (*ptr == ' ')
  3033  000628  EF19  F003         	goto	l8617
  3034  00062C                     l8615:
  3035                           
  3036                           ;main.c: 337:                     ptr++;
  3037  00062C  0101               	movlb	1	; () banked
  3038  00062E  4B90               	infsnz	main@ptr& (0+255),f,b
  3039  000630  2B91               	incf	(main@ptr+1)& (0+255),f,b
  3040  000632                     l8617:
  3041                           
  3042                           ;main.c: 336:     while (*ptr == ' ')
  3043  000632  C190  FFD9         	movff	main@ptr,fsr2l
  3044  000636  C191  FFDA         	movff	main@ptr+1,fsr2h
  3045  00063A  0E20               	movlw	32
  3046  00063C  18DE               	xorwf	postinc2,w,c
  3047  00063E  B4D8               	btfsc	status,2,c
  3048  000640  EF24  F003         	goto	u11301
  3049  000644  EF26  F003         	goto	u11300
  3050  000648                     u11301:
  3051  000648  EF16  F003         	goto	l8615
  3052  00064C                     u11300:
  3053  00064C                     
  3054                           ;main.c: 338:     res = pf_opendir(&dir, ptr);
  3055  00064C  0E7E               	movlw	low main@dir
  3056  00064E  0100               	movlb	0	; () banked
  3057  000650  6FE2               	movwf	pf_opendir@dj& (0+255),b
  3058  000652  0E01               	movlw	high main@dir
  3059  000654  6FE3               	movwf	(pf_opendir@dj+1)& (0+255),b
  3060  000656  C190  F0E4         	movff	main@ptr,pf_opendir@path
  3061  00065A  C191  F0E5         	movff	main@ptr+1,pf_opendir@path+1
  3062  00065E  ECCB  F025         	call	_pf_opendir	;wreg free
  3063  000662  0101               	movlb	1	; () banked
  3064  000664  6F92               	movwf	main@res& (0+255),b
  3065  000666                     
  3066                           ; BSR set to: 1
  3067                           ;main.c: 339:     if (res)
  3068  000666  5192               	movf	main@res& (0+255),w,b
  3069  000668  B4D8               	btfsc	status,2,c
  3070  00066A  EF39  F003         	goto	u11311
  3071  00066E  EF3B  F003         	goto	u11310
  3072  000672                     u11311:
  3073  000672  EF40  F003         	goto	l8625
  3074  000676                     u11310:
  3075  000676                     
  3076                           ; BSR set to: 1
  3077                           ;main.c: 340:                 {;main.c: 341:                     put_rc(res);
  3078  000676  5192               	movf	main@res& (0+255),w,b
  3079  000678  ECBE  F029         	call	_put_rc
  3080                           
  3081                           ;main.c: 342:                     break;
  3082  00067C  EF1A  F000         	goto	l8457
  3083  000680                     l8625:
  3084                           
  3085                           ; BSR set to: 1
  3086                           ;main.c: 344:     s1 = 0;
  3087  000680  0E00               	movlw	0
  3088  000682  6F8F               	movwf	(main@s1+1)& (0+255),b
  3089  000684  0E00               	movlw	0
  3090  000686  6F8E               	movwf	main@s1& (0+255),b
  3091  000688                     l8627:
  3092                           
  3093                           ; BSR set to: 1
  3094                           ;main.c: 346:                 {;main.c: 347:      res = pf_readdir(&dir, &fno);
  3095  000688  0E7E               	movlw	low main@dir
  3096  00068A  0100               	movlb	0	; () banked
  3097  00068C  6FDE               	movwf	pf_readdir@dj& (0+255),b
  3098  00068E  0E01               	movlw	high main@dir
  3099  000690  6FDF               	movwf	(pf_readdir@dj+1)& (0+255),b
  3100  000692  0E68               	movlw	low main@fno
  3101  000694  6FE0               	movwf	pf_readdir@fno& (0+255),b
  3102  000696  0E01               	movlw	high main@fno
  3103  000698  6FE1               	movwf	(pf_readdir@fno+1)& (0+255),b
  3104  00069A  EC59  F025         	call	_pf_readdir	;wreg free
  3105  00069E  0101               	movlb	1	; () banked
  3106  0006A0  6F92               	movwf	main@res& (0+255),b
  3107  0006A2                     
  3108                           ; BSR set to: 1
  3109                           ;main.c: 348:      if (res != FR_OK)
  3110  0006A2  5192               	movf	main@res& (0+255),w,b
  3111  0006A4  B4D8               	btfsc	status,2,c
  3112  0006A6  EF57  F003         	goto	u11321
  3113  0006AA  EF59  F003         	goto	u11320
  3114  0006AE                     u11321:
  3115  0006AE  EF5E  F003         	goto	l8633
  3116  0006B2                     u11320:
  3117  0006B2                     
  3118                           ; BSR set to: 1
  3119                           ;main.c: 349:                     {;main.c: 350:                         put_rc(res);
  3120  0006B2  5192               	movf	main@res& (0+255),w,b
  3121  0006B4  ECBE  F029         	call	_put_rc
  3122                           
  3123                           ;main.c: 351:                         break;
  3124  0006B8  EF94  F003         	goto	l8643
  3125  0006BC                     l8633:
  3126                           
  3127                           ; BSR set to: 1
  3128                           ;main.c: 353:      if (!fno.fname[0])
  3129  0006BC  5171               	movf	(main@fno+9)& (0+255),w,b
  3130  0006BE  A4D8               	btfss	status,2,c
  3131  0006C0  EF64  F003         	goto	u11331
  3132  0006C4  EF66  F003         	goto	u11330
  3133  0006C8                     u11331:
  3134  0006C8  EF68  F003         	goto	l164
  3135  0006CC                     u11330:
  3136  0006CC  EF94  F003         	goto	l8643
  3137  0006D0                     l164:
  3138                           
  3139                           ; BSR set to: 1
  3140                           ;main.c: 355:      if (fno.fattrib & 0x10)
  3141  0006D0  A970               	btfss	(main@fno+8)& (0+255),4,b
  3142  0006D2  EF6D  F003         	goto	u11341
  3143  0006D6  EF6F  F003         	goto	u11340
  3144  0006DA                     u11341:
  3145  0006DA  EF7C  F003         	goto	l8639
  3146  0006DE                     u11340:
  3147  0006DE                     
  3148                           ; BSR set to: 1
  3149                           ;main.c: 356:       printf("\t   <DIR>   %s\r\n", fno.fname);
  3150  0006DE  0E37               	movlw	low STR_18
  3151  0006E0  0100               	movlb	0	; () banked
  3152  0006E2  6F86               	movwf	printf@fmt& (0+255),b
  3153  0006E4  0E7D               	movlw	high STR_18
  3154  0006E6  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3155  0006E8  0E71               	movlw	low (main@fno+9)
  3156  0006EA  6F88               	movwf	(?_printf+2)& (0+255),b
  3157  0006EC  0E01               	movlw	high (main@fno+9)
  3158  0006EE  6F89               	movwf	(?_printf+3)& (0+255),b
  3159  0006F0  EC5A  F02C         	call	_printf	;wreg free
  3160  0006F4  EF8F  F003         	goto	l8641
  3161  0006F8                     l8639:
  3162                           
  3163                           ; BSR set to: 1
  3164                           ;main.c: 358:       printf("\t%9lu  %s\r\n", fno.fsize, fno.fname);
  3165  0006F8  0E82               	movlw	low STR_19
  3166  0006FA  0100               	movlb	0	; () banked
  3167  0006FC  6F86               	movwf	printf@fmt& (0+255),b
  3168  0006FE  0E7D               	movlw	high STR_19
  3169  000700  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3170  000702  C168  F088         	movff	main@fno,?_printf+2
  3171  000706  C169  F089         	movff	main@fno+1,?_printf+3
  3172  00070A  C16A  F08A         	movff	main@fno+2,?_printf+4
  3173  00070E  C16B  F08B         	movff	main@fno+3,?_printf+5
  3174  000712  0E71               	movlw	low (main@fno+9)
  3175  000714  6F8C               	movwf	(?_printf+6)& (0+255),b
  3176  000716  0E01               	movlw	high (main@fno+9)
  3177  000718  6F8D               	movwf	(?_printf+7)& (0+255),b
  3178  00071A  EC5A  F02C         	call	_printf	;wreg free
  3179  00071E                     l8641:
  3180                           
  3181                           ;main.c: 359:      s1++;
  3182  00071E  0101               	movlb	1	; () banked
  3183  000720  4B8E               	infsnz	main@s1& (0+255),f,b
  3184  000722  2B8F               	incf	(main@s1+1)& (0+255),f,b
  3185                           
  3186                           ;main.c: 360:     }
  3187  000724  EF44  F003         	goto	l8627
  3188  000728                     l8643:
  3189                           
  3190                           ;main.c: 361:     printf("\t%u item(s)\r\n", s1);
  3191  000728  0E66               	movlw	low STR_20
  3192  00072A  0100               	movlb	0	; () banked
  3193  00072C  6F86               	movwf	printf@fmt& (0+255),b
  3194  00072E  0E7D               	movlw	high STR_20
  3195  000730  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3196  000732  C18E  F088         	movff	main@s1,?_printf+2
  3197  000736  C18F  F089         	movff	main@s1+1,?_printf+3
  3198  00073A  EC5A  F02C         	call	_printf	;wreg free
  3199                           
  3200                           ;main.c: 362:     break;
  3201  00073E  EF1A  F000         	goto	l8457
  3202  000742                     l8647:
  3203                           
  3204                           ; BSR set to: 0
  3205  000742  C190  FFD9         	movff	main@ptr,fsr2l
  3206  000746  C191  FFDA         	movff	main@ptr+1,fsr2h
  3207  00074A  0101               	movlb	1	; () banked
  3208  00074C  4B90               	infsnz	main@ptr& (0+255),f,b
  3209  00074E  2B91               	incf	(main@ptr+1)& (0+255),f,b
  3210  000750  50DF               	movf	indf2,w,c
  3211  000752  0100               	movlb	0	; () banked
  3212  000754  6FE9               	movwf	??_main& (0+255),b
  3213  000756  6BEA               	clrf	(??_main+1)& (0+255),b
  3214                           
  3215                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3216                           ; Switch size 1, requested type "simple"
  3217                           ; Number of cases is 1, Range of values is 0 to 0
  3218                           ; switch strategies available:
  3219                           ; Name         Instructions Cycles
  3220                           ; simple_byte            4     3 (average)
  3221                           ;	Chosen strategy is simple_byte
  3222  000758  51EA               	movf	(??_main+1)& (0+255),w,b
  3223  00075A  0A00               	xorlw	0	; case 0
  3224  00075C  B4D8               	btfsc	status,2,c
  3225  00075E  EFB3  F003         	goto	l8949
  3226  000762  EF1A  F000         	goto	l8457
  3227  000766                     l8949:
  3228                           
  3229                           ; BSR set to: 0
  3230                           ; Switch size 1, requested type "simple"
  3231                           ; Number of cases is 7, Range of values is 100 to 116
  3232                           ; switch strategies available:
  3233                           ; Name         Instructions Cycles
  3234                           ; simple_byte           22    12 (average)
  3235                           ;	Chosen strategy is simple_byte
  3236  000766  51E9               	movf	??_main& (0+255),w,b
  3237  000768  0A64               	xorlw	100	; case 100
  3238  00076A  B4D8               	btfsc	status,2,c
  3239  00076C  EF74  F001         	goto	l8525
  3240  000770  0A01               	xorlw	1	; case 101
  3241  000772  B4D8               	btfsc	status,2,c
  3242  000774  EFAC  F002         	goto	l8601
  3243  000778  0A0C               	xorlw	12	; case 105
  3244  00077A  B4D8               	btfsc	status,2,c
  3245  00077C  EF26  F001         	goto	l8507
  3246  000780  0A05               	xorlw	5	; case 108
  3247  000782  B4D8               	btfsc	status,2,c
  3248  000784  EF0E  F003         	goto	l8613
  3249  000788  0A03               	xorlw	3	; case 111
  3250  00078A  B4D8               	btfsc	status,2,c
  3251  00078C  EF42  F001         	goto	l8513
  3252  000790  0A1C               	xorlw	28	; case 115
  3253  000792  B4D8               	btfsc	status,2,c
  3254  000794  EF00  F002         	goto	l8563
  3255  000798  0A07               	xorlw	7	; case 116
  3256  00079A  B4D8               	btfsc	status,2,c
  3257  00079C  EF7F  F002         	goto	l8591
  3258  0007A0  EF1A  F000         	goto	l8457
  3259  0007A4                     l8651:
  3260                           
  3261                           ; BSR set to: 1
  3262  0007A4  C190  FFD9         	movff	main@ptr,fsr2l
  3263  0007A8  C191  FFDA         	movff	main@ptr+1,fsr2h
  3264  0007AC  4B90               	infsnz	main@ptr& (0+255),f,b
  3265  0007AE  2B91               	incf	(main@ptr+1)& (0+255),f,b
  3266  0007B0  50DF               	movf	indf2,w,c
  3267  0007B2  0100               	movlb	0	; () banked
  3268  0007B4  6FE9               	movwf	??_main& (0+255),b
  3269  0007B6  6BEA               	clrf	(??_main+1)& (0+255),b
  3270                           
  3271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3272                           ; Switch size 1, requested type "simple"
  3273                           ; Number of cases is 1, Range of values is 0 to 0
  3274                           ; switch strategies available:
  3275                           ; Name         Instructions Cycles
  3276                           ; simple_byte            4     3 (average)
  3277                           ;	Chosen strategy is simple_byte
  3278  0007B8  51EA               	movf	(??_main+1)& (0+255),w,b
  3279  0007BA  0A00               	xorlw	0	; case 0
  3280  0007BC  B4D8               	btfsc	status,2,c
  3281  0007BE  EFE3  F003         	goto	l8951
  3282  0007C2  EF1A  F000         	goto	l8457
  3283  0007C6                     l8951:
  3284                           
  3285                           ; BSR set to: 0
  3286                           ; Switch size 1, requested type "simple"
  3287                           ; Number of cases is 2, Range of values is 100 to 102
  3288                           ; switch strategies available:
  3289                           ; Name         Instructions Cycles
  3290                           ; simple_byte            7     4 (average)
  3291                           ;	Chosen strategy is simple_byte
  3292  0007C6  51E9               	movf	??_main& (0+255),w,b
  3293  0007C8  0A64               	xorlw	100	; case 100
  3294  0007CA  B4D8               	btfsc	status,2,c
  3295  0007CC  EF09  F001         	goto	l8505
  3296  0007D0  0A02               	xorlw	2	; case 102
  3297  0007D2  B4D8               	btfsc	status,2,c
  3298  0007D4  EFA1  F003         	goto	l8647
  3299  0007D8  EF1A  F000         	goto	l8457
  3300  0007DC  EF07  F000         	goto	start
  3301  0007E0                     __end_of_main:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _xatoi *****************
  3305 ;; Defined at:
  3306 ;;		line 251 in file "uart.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  str             2   17[COMRAM] PTR PTR unsigned char 
  3309 ;;		 -> main@ptr(2), 
  3310 ;;  res             2   19[COMRAM] PTR long 
  3311 ;;		 -> main@p2(4), main@p1(4), 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  val             4   25[COMRAM] unsigned long 
  3314 ;;  c               1   29[COMRAM] unsigned char 
  3315 ;;  r               1   24[COMRAM] unsigned char 
  3316 ;;  s               1   23[COMRAM] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  2   17[COMRAM] int 
  3319 ;; Registers used:
  3320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3326 ;;      Params:         4       0       0       0       0       0       0
  3327 ;;      Locals:         7       0       0       0       0       0       0
  3328 ;;      Temps:          2       0       0       0       0       0       0
  3329 ;;      Totals:        13       0       0       0       0       0       0
  3330 ;;Total ram usage:       13 bytes
  3331 ;; Hardware stack levels used: 1
  3332 ;; Hardware stack levels required when called: 2
  3333 ;; This function calls:
  3334 ;;		___lmul
  3335 ;; This function is called by:
  3336 ;;		_main
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text1
  3341  00277C                     __ptext1:
  3342                           	callstack 0
  3343  00277C                     _xatoi:
  3344                           	callstack 28
  3345  00277C                     
  3346                           ;uart.c: 252:  char **str,;uart.c: 253:  long *res;uart.c: 255: {;uart.c: 256:  unsigned
      +                           long val;;uart.c: 257:  unsigned char c, r, s = 0;
  3347  00277C  0E00               	movlw	0
  3348  00277E  6E18               	movwf	xatoi@s^0,c
  3349  002780                     
  3350                           ;uart.c: 259:  *res = 0;
  3351  002780  C014  FFD9         	movff	xatoi@res,fsr2l
  3352  002784  C015  FFDA         	movff	xatoi@res+1,fsr2h
  3353  002788  6ADE               	clrf	postinc2,c
  3354  00278A  6ADE               	clrf	postinc2,c
  3355  00278C  6ADE               	clrf	postinc2,c
  3356  00278E  6ADD               	clrf	postdec2,c
  3357                           
  3358                           ;uart.c: 261:  while ((c = **str) == ' ') (*str)++;
  3359  002790  EFD1  F013         	goto	l520
  3360  002794                     l7967:
  3361  002794  C012  FFD9         	movff	xatoi@str,fsr2l
  3362  002798  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3363  00279C  2ADE               	incf	postinc2,f,c
  3364  00279E  0E00               	movlw	0
  3365  0027A0  22DD               	addwfc	postdec2,f,c
  3366  0027A2                     l520:
  3367  0027A2  C012  FFD9         	movff	xatoi@str,fsr2l
  3368  0027A6  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3369  0027AA  CFDE F016          	movff	postinc2,??_xatoi
  3370  0027AE  CFDD F017          	movff	postdec2,??_xatoi+1
  3371  0027B2  C016  FFD9         	movff	??_xatoi,fsr2l
  3372  0027B6  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3373  0027BA  50DF               	movf	indf2,w,c
  3374  0027BC  6E1E               	movwf	xatoi@c^0,c
  3375  0027BE  0E20               	movlw	32
  3376  0027C0  181E               	xorwf	xatoi@c^0,w,c
  3377  0027C2  B4D8               	btfsc	status,2,c
  3378  0027C4  EFE6  F013         	goto	u10341
  3379  0027C8  EFE8  F013         	goto	u10340
  3380  0027CC                     u10341:
  3381  0027CC  EFCA  F013         	goto	l7967
  3382  0027D0                     u10340:
  3383  0027D0                     
  3384                           ;uart.c: 263:  if (c == '-') {
  3385  0027D0  0E2D               	movlw	45
  3386  0027D2  181E               	xorwf	xatoi@c^0,w,c
  3387  0027D4  A4D8               	btfss	status,2,c
  3388  0027D6  EFEF  F013         	goto	u10351
  3389  0027DA  EFF1  F013         	goto	u10350
  3390  0027DE                     u10351:
  3391  0027DE  EF04  F014         	goto	l7975
  3392  0027E2                     u10350:
  3393  0027E2                     
  3394                           ;uart.c: 264:   s = 1;
  3395  0027E2  0E01               	movlw	1
  3396  0027E4  6E18               	movwf	xatoi@s^0,c
  3397  0027E6                     
  3398                           ;uart.c: 265:   c = *(++(*str));
  3399  0027E6  C012  FFD9         	movff	xatoi@str,fsr2l
  3400  0027EA  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3401  0027EE  2ADE               	incf	postinc2,f,c
  3402  0027F0  0E00               	movlw	0
  3403  0027F2  22DD               	addwfc	postdec2,f,c
  3404  0027F4  CFDE F016          	movff	postinc2,??_xatoi
  3405  0027F8  CFDD F017          	movff	postdec2,??_xatoi+1
  3406  0027FC  C016  FFD9         	movff	??_xatoi,fsr2l
  3407  002800  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3408  002804  50DF               	movf	indf2,w,c
  3409  002806  6E1E               	movwf	xatoi@c^0,c
  3410  002808                     l7975:
  3411                           
  3412                           ;uart.c: 268:  if (c == '0') {
  3413  002808  0E30               	movlw	48
  3414  00280A  181E               	xorwf	xatoi@c^0,w,c
  3415  00280C  A4D8               	btfss	status,2,c
  3416  00280E  EF0B  F014         	goto	u10361
  3417  002812  EF0D  F014         	goto	u10360
  3418  002816                     u10361:
  3419  002816  EF76  F014         	goto	l8005
  3420  00281A                     u10360:
  3421  00281A                     
  3422                           ;uart.c: 269:   c = *(++(*str));
  3423  00281A  C012  FFD9         	movff	xatoi@str,fsr2l
  3424  00281E  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3425  002822  2ADE               	incf	postinc2,f,c
  3426  002824  0E00               	movlw	0
  3427  002826  22DD               	addwfc	postdec2,f,c
  3428  002828  CFDE F016          	movff	postinc2,??_xatoi
  3429  00282C  CFDD F017          	movff	postdec2,??_xatoi+1
  3430  002830  C016  FFD9         	movff	??_xatoi,fsr2l
  3431  002834  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3432  002838  50DF               	movf	indf2,w,c
  3433  00283A  6E1E               	movwf	xatoi@c^0,c
  3434                           
  3435                           ;uart.c: 270:   switch (c) {
  3436  00283C  EF61  F014         	goto	l8003
  3437  002840                     l7979:
  3438                           
  3439                           ;uart.c: 272:    r = 16; c = *(++(*str));
  3440  002840  0E10               	movlw	16
  3441  002842  6E19               	movwf	xatoi@r^0,c
  3442  002844                     l7981:
  3443  002844  C012  FFD9         	movff	xatoi@str,fsr2l
  3444  002848  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3445  00284C  2ADE               	incf	postinc2,f,c
  3446  00284E  0E00               	movlw	0
  3447  002850  22DD               	addwfc	postdec2,f,c
  3448  002852  CFDE F016          	movff	postinc2,??_xatoi
  3449  002856  CFDD F017          	movff	postdec2,??_xatoi+1
  3450  00285A  C016  FFD9         	movff	??_xatoi,fsr2l
  3451  00285E  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3452  002862  50DF               	movf	indf2,w,c
  3453  002864  6E1E               	movwf	xatoi@c^0,c
  3454                           
  3455                           ;uart.c: 273:    break;
  3456  002866  EF8A  F014         	goto	l535
  3457  00286A                     l7983:
  3458                           
  3459                           ;uart.c: 275:    r = 2; c = *(++(*str));
  3460  00286A  0E02               	movlw	2
  3461  00286C  6E19               	movwf	xatoi@r^0,c
  3462  00286E  EF22  F014         	goto	l7981
  3463  002872                     l7987:
  3464                           
  3465                           ;uart.c: 278:    if (c <= ' ') return 1;
  3466  002872  0E21               	movlw	33
  3467  002874  601E               	cpfslt	xatoi@c^0,c
  3468  002876  EF3F  F014         	goto	u10371
  3469  00287A  EF41  F014         	goto	u10370
  3470  00287E                     u10371:
  3471  00287E  EF47  F014         	goto	l7993
  3472  002882                     u10370:
  3473  002882                     l7989:
  3474  002882  0E00               	movlw	0
  3475  002884  6E13               	movwf	(?_xatoi+1)^0,c
  3476  002886  0E01               	movlw	1
  3477  002888  6E12               	movwf	?_xatoi^0,c
  3478  00288A  EF12  F015         	goto	l531
  3479  00288E                     l7993:
  3480                           
  3481                           ;uart.c: 279:    if (c < '0' || c > '9') return 0;
  3482  00288E  0E2F               	movlw	47
  3483  002890  641E               	cpfsgt	xatoi@c^0,c
  3484  002892  EF4D  F014         	goto	u10381
  3485  002896  EF4F  F014         	goto	u10380
  3486  00289A                     u10381:
  3487  00289A  EF57  F014         	goto	l7997
  3488  00289E                     u10380:
  3489  00289E  0E39               	movlw	57
  3490  0028A0  641E               	cpfsgt	xatoi@c^0,c
  3491  0028A2  EF55  F014         	goto	u10391
  3492  0028A6  EF57  F014         	goto	u10390
  3493  0028AA                     u10391:
  3494  0028AA  EF5D  F014         	goto	l8001
  3495  0028AE                     u10390:
  3496  0028AE                     l7997:
  3497  0028AE  0E00               	movlw	0
  3498  0028B0  6E13               	movwf	(?_xatoi+1)^0,c
  3499  0028B2  0E00               	movlw	0
  3500  0028B4  6E12               	movwf	?_xatoi^0,c
  3501  0028B6  EF12  F015         	goto	l531
  3502  0028BA                     l8001:
  3503                           
  3504                           ;uart.c: 280:    r = 8;
  3505  0028BA  0E08               	movlw	8
  3506  0028BC  6E19               	movwf	xatoi@r^0,c
  3507                           
  3508                           ;uart.c: 281:   }
  3509  0028BE  EF8A  F014         	goto	l535
  3510  0028C2                     l8003:
  3511  0028C2  501E               	movf	xatoi@c^0,w,c
  3512  0028C4  6E16               	movwf	??_xatoi^0,c
  3513  0028C6  6A17               	clrf	(??_xatoi+1)^0,c
  3514                           
  3515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3516                           ; Switch size 1, requested type "simple"
  3517                           ; Number of cases is 1, Range of values is 0 to 0
  3518                           ; switch strategies available:
  3519                           ; Name         Instructions Cycles
  3520                           ; simple_byte            4     3 (average)
  3521                           ;	Chosen strategy is simple_byte
  3522  0028C8  5017               	movf	(??_xatoi+1)^0,w,c
  3523  0028CA  0A00               	xorlw	0	; case 0
  3524  0028CC  B4D8               	btfsc	status,2,c
  3525  0028CE  EF6B  F014         	goto	l8953
  3526  0028D2  EF39  F014         	goto	l7987
  3527  0028D6                     l8953:
  3528                           
  3529                           ; Switch size 1, requested type "simple"
  3530                           ; Number of cases is 2, Range of values is 98 to 120
  3531                           ; switch strategies available:
  3532                           ; Name         Instructions Cycles
  3533                           ; simple_byte            7     4 (average)
  3534                           ;	Chosen strategy is simple_byte
  3535  0028D6  5016               	movf	??_xatoi^0,w,c
  3536  0028D8  0A62               	xorlw	98	; case 98
  3537  0028DA  B4D8               	btfsc	status,2,c
  3538  0028DC  EF35  F014         	goto	l7983
  3539  0028E0  0A1A               	xorlw	26	; case 120
  3540  0028E2  B4D8               	btfsc	status,2,c
  3541  0028E4  EF20  F014         	goto	l7979
  3542  0028E8  EF39  F014         	goto	l7987
  3543  0028EC                     l8005:
  3544                           
  3545                           ;uart.c: 283:   if (c < '0' || c > '9') return 0;
  3546  0028EC  0E2F               	movlw	47
  3547  0028EE  641E               	cpfsgt	xatoi@c^0,c
  3548  0028F0  EF7C  F014         	goto	u10401
  3549  0028F4  EF7E  F014         	goto	u10400
  3550  0028F8                     u10401:
  3551  0028F8  EF57  F014         	goto	l7997
  3552  0028FC                     u10400:
  3553  0028FC  0E39               	movlw	57
  3554  0028FE  641E               	cpfsgt	xatoi@c^0,c
  3555  002900  EF84  F014         	goto	u10411
  3556  002904  EF86  F014         	goto	u10410
  3557  002908                     u10411:
  3558  002908  EF88  F014         	goto	l8013
  3559  00290C                     u10410:
  3560  00290C  EF57  F014         	goto	l7997
  3561  002910                     l8013:
  3562                           
  3563                           ;uart.c: 284:   r = 10;
  3564  002910  0E0A               	movlw	10
  3565  002912  6E19               	movwf	xatoi@r^0,c
  3566  002914                     l535:
  3567                           
  3568                           ;uart.c: 287:  val = 0;
  3569  002914  0E00               	movlw	0
  3570  002916  6E1A               	movwf	xatoi@val^0,c
  3571  002918  0E00               	movlw	0
  3572  00291A  6E1B               	movwf	(xatoi@val+1)^0,c
  3573  00291C  0E00               	movlw	0
  3574  00291E  6E1C               	movwf	(xatoi@val+2)^0,c
  3575  002920  0E00               	movlw	0
  3576  002922  6E1D               	movwf	(xatoi@val+3)^0,c
  3577                           
  3578                           ;uart.c: 288:  while (c > ' ') {
  3579  002924  EFEB  F014         	goto	l8035
  3580  002928                     l8015:
  3581                           
  3582                           ;uart.c: 289:   if (c >= 'a')
  3583  002928  0E60               	movlw	96
  3584  00292A  641E               	cpfsgt	xatoi@c^0,c
  3585  00292C  EF9A  F014         	goto	u10421
  3586  002930  EF9C  F014         	goto	u10420
  3587  002934                     u10421:
  3588  002934  EF9E  F014         	goto	l541
  3589  002938                     u10420:
  3590  002938                     
  3591                           ;uart.c: 290:             c -= 0x20;
  3592  002938  0E20               	movlw	32
  3593  00293A  5E1E               	subwf	xatoi@c^0,f,c
  3594  00293C                     l541:
  3595                           
  3596                           ;uart.c: 291:   c -= '0';
  3597  00293C  0E30               	movlw	48
  3598  00293E  5E1E               	subwf	xatoi@c^0,f,c
  3599                           
  3600                           ;uart.c: 292:   if (c >= 17) {
  3601  002940  0E10               	movlw	16
  3602  002942  641E               	cpfsgt	xatoi@c^0,c
  3603  002944  EFA6  F014         	goto	u10431
  3604  002948  EFA8  F014         	goto	u10430
  3605  00294C                     u10431:
  3606  00294C  EFB4  F014         	goto	l8025
  3607  002950                     u10430:
  3608  002950                     
  3609                           ;uart.c: 293:    c -= 7;
  3610  002950  0E07               	movlw	7
  3611  002952  5E1E               	subwf	xatoi@c^0,f,c
  3612                           
  3613                           ;uart.c: 294:    if (c <= 9) return 0;
  3614  002954  0E0A               	movlw	10
  3615  002956  601E               	cpfslt	xatoi@c^0,c
  3616  002958  EFB0  F014         	goto	u10441
  3617  00295C  EFB2  F014         	goto	u10440
  3618  002960                     u10441:
  3619  002960  EFB4  F014         	goto	l8025
  3620  002964                     u10440:
  3621  002964  EF57  F014         	goto	l7997
  3622  002968                     l8025:
  3623                           
  3624                           ;uart.c: 296:   if (c >= r) return 0;
  3625  002968  5019               	movf	xatoi@r^0,w,c
  3626  00296A  5C1E               	subwf	xatoi@c^0,w,c
  3627  00296C  A0D8               	btfss	status,0,c
  3628  00296E  EFBB  F014         	goto	u10451
  3629  002972  EFBD  F014         	goto	u10450
  3630  002976                     u10451:
  3631  002976  EFBF  F014         	goto	l8031
  3632  00297A                     u10450:
  3633  00297A  EF57  F014         	goto	l7997
  3634  00297E                     l8031:
  3635                           
  3636                           ;uart.c: 297:   val = val * r + c;
  3637  00297E  5019               	movf	xatoi@r^0,w,c
  3638  002980  6E06               	movwf	___lmul@multiplier^0,c
  3639  002982  6A07               	clrf	(___lmul@multiplier+1)^0,c
  3640  002984  6A08               	clrf	(___lmul@multiplier+2)^0,c
  3641  002986  6A09               	clrf	(___lmul@multiplier+3)^0,c
  3642  002988  C01A  F00A         	movff	xatoi@val,___lmul@multiplicand
  3643  00298C  C01B  F00B         	movff	xatoi@val+1,___lmul@multiplicand+1
  3644  002990  C01C  F00C         	movff	xatoi@val+2,___lmul@multiplicand+2
  3645  002994  C01D  F00D         	movff	xatoi@val+3,___lmul@multiplicand+3
  3646  002998  EC76  F02A         	call	___lmul	;wreg free
  3647  00299C  501E               	movf	xatoi@c^0,w,c
  3648  00299E  2406               	addwf	?___lmul^0,w,c
  3649  0029A0  6E1A               	movwf	xatoi@val^0,c
  3650  0029A2  0E00               	movlw	0
  3651  0029A4  2007               	addwfc	(?___lmul+1)^0,w,c
  3652  0029A6  6E1B               	movwf	(xatoi@val+1)^0,c
  3653  0029A8  0E00               	movlw	0
  3654  0029AA  2008               	addwfc	(?___lmul+2)^0,w,c
  3655  0029AC  6E1C               	movwf	(xatoi@val+2)^0,c
  3656  0029AE  0E00               	movlw	0
  3657  0029B0  2009               	addwfc	(?___lmul+3)^0,w,c
  3658  0029B2  6E1D               	movwf	(xatoi@val+3)^0,c
  3659  0029B4                     
  3660                           ;uart.c: 298:   c = *(++(*str));
  3661  0029B4  C012  FFD9         	movff	xatoi@str,fsr2l
  3662  0029B8  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3663  0029BC  2ADE               	incf	postinc2,f,c
  3664  0029BE  0E00               	movlw	0
  3665  0029C0  22DD               	addwfc	postdec2,f,c
  3666  0029C2  CFDE F016          	movff	postinc2,??_xatoi
  3667  0029C6  CFDD F017          	movff	postdec2,??_xatoi+1
  3668  0029CA  C016  FFD9         	movff	??_xatoi,fsr2l
  3669  0029CE  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3670  0029D2  50DF               	movf	indf2,w,c
  3671  0029D4  6E1E               	movwf	xatoi@c^0,c
  3672  0029D6                     l8035:
  3673                           
  3674                           ;uart.c: 288:  while (c > ' ') {
  3675  0029D6  0E21               	movlw	33
  3676  0029D8  601E               	cpfslt	xatoi@c^0,c
  3677  0029DA  EFF1  F014         	goto	u10461
  3678  0029DE  EFF3  F014         	goto	u10460
  3679  0029E2                     u10461:
  3680  0029E2  EF94  F014         	goto	l8015
  3681  0029E6                     u10460:
  3682  0029E6                     
  3683                           ;uart.c: 301:  if (s) val = 0 - val;
  3684  0029E6  5018               	movf	xatoi@s^0,w,c
  3685  0029E8  B4D8               	btfsc	status,2,c
  3686  0029EA  EFF9  F014         	goto	u10471
  3687  0029EE  EFFB  F014         	goto	u10470
  3688  0029F2                     u10471:
  3689  0029F2  EF04  F015         	goto	l8041
  3690  0029F6                     u10470:
  3691  0029F6  6C1A               	negf	xatoi@val^0,c
  3692  0029F8  1E1B               	comf	(xatoi@val+1)^0,f,c
  3693  0029FA  B0D8               	btfsc	status,0,c
  3694  0029FC  2A1B               	incf	(xatoi@val+1)^0,f,c
  3695  0029FE  1E1C               	comf	(xatoi@val+2)^0,f,c
  3696  002A00  B0D8               	btfsc	status,0,c
  3697  002A02  2A1C               	incf	(xatoi@val+2)^0,f,c
  3698  002A04  0E00               	movlw	0
  3699  002A06  561D               	subfwb	(xatoi@val+3)^0,f,c
  3700  002A08                     l8041:
  3701                           
  3702                           ;uart.c: 303:  *res = val;
  3703  002A08  C014  FFD9         	movff	xatoi@res,fsr2l
  3704  002A0C  C015  FFDA         	movff	xatoi@res+1,fsr2h
  3705  002A10  C01A  FFDE         	movff	xatoi@val,postinc2
  3706  002A14  C01B  FFDE         	movff	xatoi@val+1,postinc2
  3707  002A18  C01C  FFDE         	movff	xatoi@val+2,postinc2
  3708  002A1C  C01D  FFDE         	movff	xatoi@val+3,postinc2
  3709  002A20  EF41  F014         	goto	l7989
  3710  002A24                     l531:
  3711  002A24  0012               	return		;funcret
  3712  002A26                     __end_of_xatoi:
  3713                           	callstack 0
  3714                           
  3715 ;; *************** function _uart_init *****************
  3716 ;; Defined at:
  3717 ;;		line 145 in file "uart.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;		None
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3731 ;;      Params:         0       0       0       0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0       0
  3734 ;;      Totals:         0       0       0       0       0       0       0
  3735 ;;Total ram usage:        0 bytes
  3736 ;; Hardware stack levels used: 1
  3737 ;; Hardware stack levels required when called: 1
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_main
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text2
  3746  0055B8                     __ptext2:
  3747                           	callstack 0
  3748  0055B8                     _uart_init:
  3749                           	callstack 29
  3750  0055B8                     
  3751                           ;uart.c: 148:  RCIE = 0;
  3752  0055B8  9A9D               	bcf	3997,5,c	;volatile
  3753                           
  3754                           ;uart.c: 149:  TXIE = 0;
  3755  0055BA  989D               	bcf	3997,4,c	;volatile
  3756  0055BC                     
  3757                           ;uart.c: 152:     TXSTA = 0x24;
  3758  0055BC  0E24               	movlw	36
  3759  0055BE  6EAC               	movwf	172,c	;volatile
  3760                           
  3761                           ;uart.c: 163:     RCSTA = 0x90;
  3762  0055C0  0E90               	movlw	144
  3763  0055C2  6EAB               	movwf	171,c	;volatile
  3764                           
  3765                           ;uart.c: 174:     SPBRG = 129;
  3766  0055C4  0E81               	movlw	129
  3767  0055C6  6EAF               	movwf	175,c	;volatile
  3768                           
  3769                           ;uart.c: 177:  TxFifo.ri = 0; TxFifo.wi = 0; TxFifo.ct = 0;
  3770  0055C8  0E00               	movlw	0
  3771  0055CA  0104               	movlb	4	; () banked
  3772  0055CC  6F01               	movwf	(_TxFifo+1)& (0+255),b	;volatile
  3773  0055CE  0E00               	movlw	0
  3774  0055D0  6F00               	movwf	_TxFifo& (0+255),b	;volatile
  3775  0055D2  0E00               	movlw	0
  3776  0055D4  6F03               	movwf	(_TxFifo+3)& (0+255),b	;volatile
  3777  0055D6  0E00               	movlw	0
  3778  0055D8  6F02               	movwf	(_TxFifo+2)& (0+255),b	;volatile
  3779  0055DA  0E00               	movlw	0
  3780  0055DC  6F05               	movwf	(_TxFifo+5)& (0+255),b	;volatile
  3781  0055DE  0E00               	movlw	0
  3782  0055E0  6F04               	movwf	(_TxFifo+4)& (0+255),b	;volatile
  3783                           
  3784                           ;uart.c: 178:  RxFifo.ri = 0; RxFifo.wi = 0; RxFifo.ct = 0;
  3785  0055E2  0E00               	movlw	0
  3786  0055E4  0102               	movlb	2	; () banked
  3787  0055E6  6F01               	movwf	(_RxFifo+1)& (0+255),b	;volatile
  3788  0055E8  0E00               	movlw	0
  3789  0055EA  6F00               	movwf	_RxFifo& (0+255),b	;volatile
  3790  0055EC  0E00               	movlw	0
  3791  0055EE  6F03               	movwf	(_RxFifo+3)& (0+255),b	;volatile
  3792  0055F0  0E00               	movlw	0
  3793  0055F2  6F02               	movwf	(_RxFifo+2)& (0+255),b	;volatile
  3794  0055F4  0E00               	movlw	0
  3795  0055F6  6F05               	movwf	(_RxFifo+5)& (0+255),b	;volatile
  3796  0055F8  0E00               	movlw	0
  3797  0055FA  6F04               	movwf	(_RxFifo+4)& (0+255),b	;volatile
  3798                           
  3799                           ;uart.c: 179:  TxRun = 0;
  3800  0055FC  0E00               	movlw	0
  3801  0055FE  0101               	movlb	1	; () banked
  3802  005600  6FBE               	movwf	(_TxRun+1)& (0+255),b	;volatile
  3803  005602  0E00               	movlw	0
  3804  005604  6FBD               	movwf	_TxRun& (0+255),b	;volatile
  3805  005606                     
  3806                           ; BSR set to: 1
  3807                           ;uart.c: 182:     RCIP = 1;
  3808  005606  8A9F               	bsf	3999,5,c	;volatile
  3809  005608                     
  3810                           ; BSR set to: 1
  3811                           ;uart.c: 183:     TXIP = 0;
  3812  005608  989F               	bcf	3999,4,c	;volatile
  3813  00560A                     
  3814                           ; BSR set to: 1
  3815                           ;uart.c: 185:     RCIF = 0;
  3816  00560A  9A9E               	bcf	3998,5,c	;volatile
  3817  00560C                     
  3818                           ; BSR set to: 1
  3819                           ;uart.c: 186:     TXIF = 0;
  3820  00560C  989E               	bcf	3998,4,c	;volatile
  3821  00560E                     
  3822                           ; BSR set to: 1
  3823                           ;uart.c: 188:  RCIE = 1;
  3824  00560E  8A9D               	bsf	3997,5,c	;volatile
  3825  005610                     
  3826                           ; BSR set to: 1
  3827                           ;uart.c: 191:     GIE = 0x01;
  3828  005610  8EF2               	bsf	4082,7,c	;volatile
  3829  005612                     
  3830                           ; BSR set to: 1
  3831                           ;uart.c: 192:     PEIE = 0x01;
  3832  005612  8CF2               	bsf	4082,6,c	;volatile
  3833  005614                     
  3834                           ; BSR set to: 1
  3835  005614  0012               	return		;funcret
  3836  005616                     __end_of_uart_init:
  3837                           	callstack 0
  3838                           
  3839 ;; *************** function _uart_gets *****************
  3840 ;; Defined at:
  3841 ;;		line 92 in file "uart.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  buff            2   18[BANK0 ] PTR unsigned char 
  3844 ;;		 -> Line(128), 
  3845 ;;  len             2   20[BANK0 ] int 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;  c               2   29[BANK0 ] int 
  3848 ;;  i               2   27[BANK0 ] int 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  2   18[BANK0 ] int 
  3851 ;; Registers used:
  3852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3858 ;;      Params:         0       4       0       0       0       0       0
  3859 ;;      Locals:         0       4       0       0       0       0       0
  3860 ;;      Temps:          0       5       0       0       0       0       0
  3861 ;;      Totals:         0      13       0       0       0       0       0
  3862 ;;Total ram usage:       13 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; Hardware stack levels required when called: 9
  3865 ;; This function calls:
  3866 ;;		_memset
  3867 ;;		_printf
  3868 ;; This function is called by:
  3869 ;;		_main
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text3
  3874  004668                     __ptext3:
  3875                           	callstack 0
  3876  004668                     _uart_gets:
  3877                           	callstack 21
  3878  004668                     
  3879                           ;uart.c: 93:  char* buff,;uart.c: 94:  int len;uart.c: 96: {;uart.c: 97:  int c, i;;uart
      +                          .c: 99:  i = 0;
  3880  004668  0E00               	movlw	0
  3881  00466A  0100               	movlb	0	; () banked
  3882  00466C  6F9C               	movwf	(uart_gets@i+1)& (0+255),b
  3883  00466E  0E00               	movlw	0
  3884  004670  6F9B               	movwf	uart_gets@i& (0+255),b
  3885  004672                     l7921:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;uart.c: 101:   c = RxFifo.buff[i];
  3889  004672  0E06               	movlw	low (_RxFifo+6)
  3890  004674  259B               	addwf	uart_gets@i& (0+255),w,b
  3891  004676  6ED9               	movwf	fsr2l,c
  3892  004678  0E02               	movlw	high (_RxFifo+6)
  3893  00467A  219C               	addwfc	(uart_gets@i+1)& (0+255),w,b
  3894  00467C  6EDA               	movwf	fsr2h,c
  3895  00467E  50DF               	movf	indf2,w,c
  3896  004680  6F96               	movwf	??_uart_gets& (0+255),b
  3897  004682  5196               	movf	??_uart_gets& (0+255),w,b
  3898  004684  6F9D               	movwf	uart_gets@c& (0+255),b
  3899  004686  6B9E               	clrf	(uart_gets@c+1)& (0+255),b
  3900  004688                     
  3901                           ; BSR set to: 0
  3902                           ;uart.c: 102:   if (!c) continue;
  3903  004688  519D               	movf	uart_gets@c& (0+255),w,b
  3904  00468A  119E               	iorwf	(uart_gets@c+1)& (0+255),w,b
  3905  00468C  A4D8               	btfss	status,2,c
  3906  00468E  EF4B  F023         	goto	u10281
  3907  004692  EF4D  F023         	goto	u10280
  3908  004696                     u10281:
  3909  004696  EF4F  F023         	goto	l7927
  3910  00469A                     u10280:
  3911  00469A  EF39  F023         	goto	l7921
  3912  00469E                     l7927:
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;uart.c: 103:   if (c == '\r') break;
  3916  00469E  0E0D               	movlw	13
  3917  0046A0  199D               	xorwf	uart_gets@c& (0+255),w,b
  3918  0046A2  119E               	iorwf	(uart_gets@c+1)& (0+255),w,b
  3919  0046A4  A4D8               	btfss	status,2,c
  3920  0046A6  EF57  F023         	goto	u10291
  3921  0046AA  EF59  F023         	goto	u10290
  3922  0046AE                     u10291:
  3923  0046AE  EF5B  F023         	goto	l7931
  3924  0046B2                     u10290:
  3925  0046B2  EFAD  F023         	goto	l7951
  3926  0046B6                     l7931:
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;uart.c: 104:   if (c == '\b' && i) {
  3930  0046B6  0E08               	movlw	8
  3931  0046B8  199D               	xorwf	uart_gets@c& (0+255),w,b
  3932  0046BA  119E               	iorwf	(uart_gets@c+1)& (0+255),w,b
  3933  0046BC  A4D8               	btfss	status,2,c
  3934  0046BE  EF63  F023         	goto	u10301
  3935  0046C2  EF65  F023         	goto	u10300
  3936  0046C6                     u10301:
  3937  0046C6  EF7B  F023         	goto	l7941
  3938  0046CA                     u10300:
  3939  0046CA                     
  3940                           ; BSR set to: 0
  3941  0046CA  519B               	movf	uart_gets@i& (0+255),w,b
  3942  0046CC  119C               	iorwf	(uart_gets@i+1)& (0+255),w,b
  3943  0046CE  B4D8               	btfsc	status,2,c
  3944  0046D0  EF6C  F023         	goto	u10311
  3945  0046D4  EF6E  F023         	goto	u10310
  3946  0046D8                     u10311:
  3947  0046D8  EF7B  F023         	goto	l7941
  3948  0046DC                     u10310:
  3949  0046DC                     
  3950                           ; BSR set to: 0
  3951                           ;uart.c: 105:             RxFifo.buff[i] = '0';
  3952  0046DC  0E06               	movlw	low (_RxFifo+6)
  3953  0046DE  259B               	addwf	uart_gets@i& (0+255),w,b
  3954  0046E0  6ED9               	movwf	fsr2l,c
  3955  0046E2  0E02               	movlw	high (_RxFifo+6)
  3956  0046E4  219C               	addwfc	(uart_gets@i+1)& (0+255),w,b
  3957  0046E6  6EDA               	movwf	fsr2h,c
  3958  0046E8  0E30               	movlw	48
  3959  0046EA  6EDF               	movwf	indf2,c
  3960  0046EC                     
  3961                           ; BSR set to: 0
  3962                           ;uart.c: 106:    i--;
  3963  0046EC  079B               	decf	uart_gets@i& (0+255),f,b
  3964  0046EE  A0D8               	btfss	status,0,c
  3965  0046F0  079C               	decf	(uart_gets@i+1)& (0+255),f,b
  3966                           
  3967                           ;uart.c: 107:    if (0)
  3968  0046F2  EF39  F023         	goto	l7921
  3969  0046F6                     l7941:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;uart.c: 111:   if (c >= ' ' && i < len - 1) {
  3973  0046F6  519E               	movf	(uart_gets@c+1)& (0+255),w,b
  3974  0046F8  E109               	bnz	u10320
  3975  0046FA  0E20               	movlw	32
  3976  0046FC  5D9D               	subwf	uart_gets@c& (0+255),w,b
  3977  0046FE  A0D8               	btfss	status,0,c
  3978  004700  EF84  F023         	goto	u10321
  3979  004704  EF86  F023         	goto	u10320
  3980  004708                     u10321:
  3981  004708  EF39  F023         	goto	l7921
  3982  00470C                     u10320:
  3983  00470C                     
  3984                           ; BSR set to: 0
  3985  00470C  0EFF               	movlw	255
  3986  00470E  6F96               	movwf	??_uart_gets& (0+255),b
  3987  004710  0EFF               	movlw	255
  3988  004712  6F97               	movwf	(??_uart_gets+1)& (0+255),b
  3989  004714  C094  F098         	movff	uart_gets@len,??_uart_gets+2
  3990  004718  C095  F099         	movff	uart_gets@len+1,??_uart_gets+3
  3991  00471C  5196               	movf	??_uart_gets& (0+255),w,b
  3992  00471E  2798               	addwf	(??_uart_gets+2)& (0+255),f,b
  3993  004720  5197               	movf	(??_uart_gets+1)& (0+255),w,b
  3994  004722  2399               	addwfc	(??_uart_gets+3)& (0+255),f,b
  3995  004724  5198               	movf	(??_uart_gets+2)& (0+255),w,b
  3996  004726  5D9B               	subwf	uart_gets@i& (0+255),w,b
  3997  004728  519C               	movf	(uart_gets@i+1)& (0+255),w,b
  3998  00472A  0A80               	xorlw	128
  3999  00472C  6F9A               	movwf	(??_uart_gets+4)& (0+255),b
  4000  00472E  5199               	movf	(??_uart_gets+3)& (0+255),w,b
  4001  004730  0A80               	xorlw	128
  4002  004732  599A               	subwfb	(??_uart_gets+4)& (0+255),w,b
  4003  004734  B0D8               	btfsc	status,0,c
  4004  004736  EF9F  F023         	goto	u10331
  4005  00473A  EFA1  F023         	goto	u10330
  4006  00473E                     u10331:
  4007  00473E  EF39  F023         	goto	l7921
  4008  004742                     u10330:
  4009  004742                     
  4010                           ; BSR set to: 0
  4011                           ;uart.c: 112:    buff[i++] = c;
  4012  004742  519B               	movf	uart_gets@i& (0+255),w,b
  4013  004744  2592               	addwf	uart_gets@buff& (0+255),w,b
  4014  004746  6ED9               	movwf	fsr2l,c
  4015  004748  519C               	movf	(uart_gets@i+1)& (0+255),w,b
  4016  00474A  2193               	addwfc	(uart_gets@buff+1)& (0+255),w,b
  4017  00474C  6EDA               	movwf	fsr2h,c
  4018  00474E  C09D  FFDF         	movff	uart_gets@c,indf2
  4019  004752                     
  4020                           ; BSR set to: 0
  4021  004752  4B9B               	infsnz	uart_gets@i& (0+255),f,b
  4022  004754  2B9C               	incf	(uart_gets@i+1)& (0+255),f,b
  4023                           
  4024                           ;uart.c: 113:    if (0)
  4025  004756  EF39  F023         	goto	l7921
  4026  00475A                     l7951:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;uart.c: 117:  buff[i] = 0;
  4030  00475A  519B               	movf	uart_gets@i& (0+255),w,b
  4031  00475C  2592               	addwf	uart_gets@buff& (0+255),w,b
  4032  00475E  6ED9               	movwf	fsr2l,c
  4033  004760  519C               	movf	(uart_gets@i+1)& (0+255),w,b
  4034  004762  2193               	addwfc	(uart_gets@buff+1)& (0+255),w,b
  4035  004764  6EDA               	movwf	fsr2h,c
  4036  004766  0E00               	movlw	0
  4037  004768  6EDF               	movwf	indf2,c
  4038  00476A                     
  4039                           ; BSR set to: 0
  4040                           ;uart.c: 121:     memset(RxFifo.buff, 0x00, sizeof(RxFifo.buff));
  4041  00476A  0E06               	movlw	low (_RxFifo+6)
  4042  00476C  6E06               	movwf	memset@dest^0,c
  4043  00476E  0E02               	movlw	high (_RxFifo+6)
  4044  004770  6E07               	movwf	(memset@dest+1)^0,c
  4045  004772  0E00               	movlw	0
  4046  004774  6E09               	movwf	(memset@c+1)^0,c
  4047  004776  0E00               	movlw	0
  4048  004778  6E08               	movwf	memset@c^0,c
  4049  00477A  0E00               	movlw	0
  4050  00477C  6E0B               	movwf	(memset@n+1)^0,c
  4051  00477E  0E80               	movlw	128
  4052  004780  6E0A               	movwf	memset@n^0,c
  4053  004782  ECF6  F01E         	call	_memset	;wreg free
  4054  004786                     
  4055                           ;uart.c: 122:     RxFifo.wi = 0;
  4056  004786  0E00               	movlw	0
  4057  004788  0102               	movlb	2	; () banked
  4058  00478A  6F03               	movwf	(_RxFifo+3)& (0+255),b	;volatile
  4059  00478C  0E00               	movlw	0
  4060  00478E  6F02               	movwf	(_RxFifo+2)& (0+255),b	;volatile
  4061  004790                     
  4062                           ; BSR set to: 2
  4063                           ;uart.c: 123:     RxFifo.ct = 0;
  4064  004790  0E00               	movlw	0
  4065  004792  6F05               	movwf	(_RxFifo+5)& (0+255),b	;volatile
  4066  004794  0E00               	movlw	0
  4067  004796  6F04               	movwf	(_RxFifo+4)& (0+255),b	;volatile
  4068  004798                     
  4069                           ; BSR set to: 2
  4070  004798  0012               	return		;funcret
  4071  00479A                     __end_of_uart_gets:
  4072                           	callstack 0
  4073                           
  4074 ;; *************** function _memset *****************
  4075 ;; Defined at:
  4076 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memset.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  dest            2    5[COMRAM] PTR void 
  4079 ;;		 -> RxFifo.buff(128), RxFifo(134), 
  4080 ;;  c               2    7[COMRAM] int 
  4081 ;;  n               2    9[COMRAM] unsigned int 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  s               2   15[COMRAM] PTR unsigned char 
  4084 ;;		 -> RxFifo.buff(128), RxFifo(134), 
  4085 ;;  k               2   13[COMRAM] unsigned int 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  2    5[COMRAM] PTR void 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4095 ;;      Params:         6       0       0       0       0       0       0
  4096 ;;      Locals:         4       0       0       0       0       0       0
  4097 ;;      Temps:          2       0       0       0       0       0       0
  4098 ;;      Totals:        12       0       0       0       0       0       0
  4099 ;;Total ram usage:       12 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 1
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_uart_gets
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text4
  4110  003DEC                     __ptext4:
  4111                           	callstack 0
  4112  003DEC                     _memset:
  4113                           	callstack 28
  4114  003DEC  C006  F010         	movff	memset@dest,memset@s
  4115  003DF0  C007  F011         	movff	memset@dest+1,memset@s+1
  4116  003DF4  500A               	movf	memset@n^0,w,c
  4117  003DF6  100B               	iorwf	(memset@n+1)^0,w,c
  4118  003DF8  A4D8               	btfss	status,2,c
  4119  003DFA  EF01  F01F         	goto	u6491
  4120  003DFE  EF03  F01F         	goto	u6490
  4121  003E02                     u6491:
  4122  003E02  EF05  F01F         	goto	l5533
  4123  003E06                     u6490:
  4124  003E06  EFB0  F01F         	goto	l1364
  4125  003E0A                     l5533:
  4126  003E0A  C010  FFD9         	movff	memset@s,fsr2l
  4127  003E0E  C011  FFDA         	movff	memset@s+1,fsr2h
  4128  003E12  C008  FFDF         	movff	memset@c,indf2
  4129  003E16  500A               	movf	memset@n^0,w,c
  4130  003E18  2410               	addwf	memset@s^0,w,c
  4131  003E1A  6E0C               	movwf	??_memset^0,c
  4132  003E1C  500B               	movf	(memset@n+1)^0,w,c
  4133  003E1E  2011               	addwfc	(memset@s+1)^0,w,c
  4134  003E20  6E0D               	movwf	(??_memset+1)^0,c
  4135  003E22  0EFF               	movlw	255
  4136  003E24  240C               	addwf	??_memset^0,w,c
  4137  003E26  6ED9               	movwf	fsr2l,c
  4138  003E28  0EFF               	movlw	255
  4139  003E2A  200D               	addwfc	(??_memset+1)^0,w,c
  4140  003E2C  6EDA               	movwf	fsr2h,c
  4141  003E2E  C008  FFDF         	movff	memset@c,indf2
  4142  003E32  500B               	movf	(memset@n+1)^0,w,c
  4143  003E34  E107               	bnz	u6501
  4144  003E36  0E03               	movlw	3
  4145  003E38  5C0A               	subwf	memset@n^0,w,c
  4146  003E3A  B0D8               	btfsc	status,0,c
  4147  003E3C  EF22  F01F         	goto	u6501
  4148  003E40  EF24  F01F         	goto	u6500
  4149  003E44                     u6501:
  4150  003E44  EF26  F01F         	goto	l5539
  4151  003E48                     u6500:
  4152  003E48  EFB0  F01F         	goto	l1364
  4153  003E4C                     l5539:
  4154  003E4C  EE20 F001          	lfsr	2,1
  4155  003E50  5010               	movf	memset@s^0,w,c
  4156  003E52  26D9               	addwf	fsr2l,f,c
  4157  003E54  5011               	movf	(memset@s+1)^0,w,c
  4158  003E56  22DA               	addwfc	fsr2h,f,c
  4159  003E58  C008  FFDF         	movff	memset@c,indf2
  4160  003E5C  EE20 F002          	lfsr	2,2
  4161  003E60  5010               	movf	memset@s^0,w,c
  4162  003E62  26D9               	addwf	fsr2l,f,c
  4163  003E64  5011               	movf	(memset@s+1)^0,w,c
  4164  003E66  22DA               	addwfc	fsr2h,f,c
  4165  003E68  C008  FFDF         	movff	memset@c,indf2
  4166  003E6C  500A               	movf	memset@n^0,w,c
  4167  003E6E  2410               	addwf	memset@s^0,w,c
  4168  003E70  6E0C               	movwf	??_memset^0,c
  4169  003E72  500B               	movf	(memset@n+1)^0,w,c
  4170  003E74  2011               	addwfc	(memset@s+1)^0,w,c
  4171  003E76  6E0D               	movwf	(??_memset+1)^0,c
  4172  003E78  0EFE               	movlw	254
  4173  003E7A  240C               	addwf	??_memset^0,w,c
  4174  003E7C  6ED9               	movwf	fsr2l,c
  4175  003E7E  0EFF               	movlw	255
  4176  003E80  200D               	addwfc	(??_memset+1)^0,w,c
  4177  003E82  6EDA               	movwf	fsr2h,c
  4178  003E84  C008  FFDF         	movff	memset@c,indf2
  4179  003E88  500A               	movf	memset@n^0,w,c
  4180  003E8A  2410               	addwf	memset@s^0,w,c
  4181  003E8C  6E0C               	movwf	??_memset^0,c
  4182  003E8E  500B               	movf	(memset@n+1)^0,w,c
  4183  003E90  2011               	addwfc	(memset@s+1)^0,w,c
  4184  003E92  6E0D               	movwf	(??_memset+1)^0,c
  4185  003E94  0EFD               	movlw	253
  4186  003E96  240C               	addwf	??_memset^0,w,c
  4187  003E98  6ED9               	movwf	fsr2l,c
  4188  003E9A  0EFF               	movlw	255
  4189  003E9C  200D               	addwfc	(??_memset+1)^0,w,c
  4190  003E9E  6EDA               	movwf	fsr2h,c
  4191  003EA0  C008  FFDF         	movff	memset@c,indf2
  4192  003EA4  500B               	movf	(memset@n+1)^0,w,c
  4193  003EA6  E107               	bnz	u6511
  4194  003EA8  0E07               	movlw	7
  4195  003EAA  5C0A               	subwf	memset@n^0,w,c
  4196  003EAC  B0D8               	btfsc	status,0,c
  4197  003EAE  EF5B  F01F         	goto	u6511
  4198  003EB2  EF5D  F01F         	goto	u6510
  4199  003EB6                     u6511:
  4200  003EB6  EF5F  F01F         	goto	l5545
  4201  003EBA                     u6510:
  4202  003EBA  EFB0  F01F         	goto	l1364
  4203  003EBE                     l5545:
  4204  003EBE  EE20 F003          	lfsr	2,3
  4205  003EC2  5010               	movf	memset@s^0,w,c
  4206  003EC4  26D9               	addwf	fsr2l,f,c
  4207  003EC6  5011               	movf	(memset@s+1)^0,w,c
  4208  003EC8  22DA               	addwfc	fsr2h,f,c
  4209  003ECA  C008  FFDF         	movff	memset@c,indf2
  4210  003ECE  500A               	movf	memset@n^0,w,c
  4211  003ED0  2410               	addwf	memset@s^0,w,c
  4212  003ED2  6E0C               	movwf	??_memset^0,c
  4213  003ED4  500B               	movf	(memset@n+1)^0,w,c
  4214  003ED6  2011               	addwfc	(memset@s+1)^0,w,c
  4215  003ED8  6E0D               	movwf	(??_memset+1)^0,c
  4216  003EDA  0EFC               	movlw	252
  4217  003EDC  240C               	addwf	??_memset^0,w,c
  4218  003EDE  6ED9               	movwf	fsr2l,c
  4219  003EE0  0EFF               	movlw	255
  4220  003EE2  200D               	addwfc	(??_memset+1)^0,w,c
  4221  003EE4  6EDA               	movwf	fsr2h,c
  4222  003EE6  C008  FFDF         	movff	memset@c,indf2
  4223  003EEA  500B               	movf	(memset@n+1)^0,w,c
  4224  003EEC  E107               	bnz	u6521
  4225  003EEE  0E09               	movlw	9
  4226  003EF0  5C0A               	subwf	memset@n^0,w,c
  4227  003EF2  B0D8               	btfsc	status,0,c
  4228  003EF4  EF7E  F01F         	goto	u6521
  4229  003EF8  EF80  F01F         	goto	u6520
  4230  003EFC                     u6521:
  4231  003EFC  EF82  F01F         	goto	l5551
  4232  003F00                     u6520:
  4233  003F00  EFB0  F01F         	goto	l1364
  4234  003F04                     l5551:
  4235  003F04  C010  F00C         	movff	memset@s,??_memset
  4236  003F08  C011  F00D         	movff	memset@s+1,??_memset+1
  4237  003F0C  1E0C               	comf	??_memset^0,f,c
  4238  003F0E  1E0D               	comf	(??_memset+1)^0,f,c
  4239  003F10  4A0C               	infsnz	??_memset^0,f,c
  4240  003F12  2A0D               	incf	(??_memset+1)^0,f,c
  4241  003F14  0E03               	movlw	3
  4242  003F16  140C               	andwf	??_memset^0,w,c
  4243  003F18  6E0E               	movwf	memset@k^0,c
  4244  003F1A  6A0F               	clrf	(memset@k+1)^0,c
  4245  003F1C  500E               	movf	memset@k^0,w,c
  4246  003F1E  2610               	addwf	memset@s^0,f,c
  4247  003F20  500F               	movf	(memset@k+1)^0,w,c
  4248  003F22  2211               	addwfc	(memset@s+1)^0,f,c
  4249  003F24  500E               	movf	memset@k^0,w,c
  4250  003F26  5E0A               	subwf	memset@n^0,f,c
  4251  003F28  500F               	movf	(memset@k+1)^0,w,c
  4252  003F2A  5A0B               	subwfb	(memset@n+1)^0,f,c
  4253  003F2C  0EFC               	movlw	252
  4254  003F2E  160A               	andwf	memset@n^0,f,c
  4255  003F30  0EFF               	movlw	255
  4256  003F32  160B               	andwf	(memset@n+1)^0,f,c
  4257  003F34  EFA7  F01F         	goto	l5559
  4258  003F38                     l5553:
  4259  003F38  C010  FFD9         	movff	memset@s,fsr2l
  4260  003F3C  C011  FFDA         	movff	memset@s+1,fsr2h
  4261  003F40  C008  FFDF         	movff	memset@c,indf2
  4262  003F44  060A               	decf	memset@n^0,f,c
  4263  003F46  A0D8               	btfss	status,0,c
  4264  003F48  060B               	decf	(memset@n+1)^0,f,c
  4265  003F4A  4A10               	infsnz	memset@s^0,f,c
  4266  003F4C  2A11               	incf	(memset@s+1)^0,f,c
  4267  003F4E                     l5559:
  4268  003F4E  500A               	movf	memset@n^0,w,c
  4269  003F50  100B               	iorwf	(memset@n+1)^0,w,c
  4270  003F52  A4D8               	btfss	status,2,c
  4271  003F54  EFAE  F01F         	goto	u6531
  4272  003F58  EFB0  F01F         	goto	u6530
  4273  003F5C                     u6531:
  4274  003F5C  EF9C  F01F         	goto	l5553
  4275  003F60                     u6530:
  4276  003F60                     l1364:
  4277  003F60  0012               	return		;funcret
  4278  003F62                     __end_of_memset:
  4279                           	callstack 0
  4280                           
  4281 ;; *************** function _pwm_stop *****************
  4282 ;; Defined at:
  4283 ;;		line 59 in file "./pwm.h"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;		None
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		None
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4297 ;;      Params:         0       0       0       0       0       0       0
  4298 ;;      Locals:         0       0       0       0       0       0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0
  4300 ;;      Totals:         0       0       0       0       0       0       0
  4301 ;;Total ram usage:        0 bytes
  4302 ;; Hardware stack levels used: 1
  4303 ;; Hardware stack levels required when called: 1
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_main
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text5
  4312  0059CA                     __ptext5:
  4313                           	callstack 0
  4314  0059CA                     _pwm_stop:
  4315                           	callstack 29
  4316  0059CA                     
  4317                           ;./pwm.h: 61:     TMR2ON = 0;
  4318  0059CA  94CA               	bcf	4042,2,c	;volatile
  4319  0059CC  0012               	return		;funcret
  4320  0059CE                     __end_of_pwm_stop:
  4321                           	callstack 0
  4322                           
  4323 ;; *************** function _pwm_start *****************
  4324 ;; Defined at:
  4325 ;;		line 54 in file "./pwm.h"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;		None
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		None
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4339 ;;      Params:         0       0       0       0       0       0       0
  4340 ;;      Locals:         0       0       0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0
  4342 ;;      Totals:         0       0       0       0       0       0       0
  4343 ;;Total ram usage:        0 bytes
  4344 ;; Hardware stack levels used: 1
  4345 ;; Hardware stack levels required when called: 1
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_main
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text6
  4354  0059CE                     __ptext6:
  4355                           	callstack 0
  4356  0059CE                     _pwm_start:
  4357                           	callstack 29
  4358  0059CE                     
  4359                           ;./pwm.h: 56:     TMR2ON = 1;
  4360  0059CE  84CA               	bsf	4042,2,c	;volatile
  4361  0059D0  0012               	return		;funcret
  4362  0059D2                     __end_of_pwm_start:
  4363                           	callstack 0
  4364                           
  4365 ;; *************** function _pwm_setDuty *****************
  4366 ;; Defined at:
  4367 ;;		line 47 in file "./pwm.h"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  dutycycle       2    5[COMRAM] unsigned int 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;		None
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4381 ;;      Params:         2       0       0       0       0       0       0
  4382 ;;      Locals:         0       0       0       0       0       0       0
  4383 ;;      Temps:          2       0       0       0       0       0       0
  4384 ;;      Totals:         4       0       0       0       0       0       0
  4385 ;;Total ram usage:        4 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 1
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_main
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text7
  4396  0058DC                     __ptext7:
  4397                           	callstack 0
  4398  0058DC                     _pwm_setDuty:
  4399                           	callstack 29
  4400  0058DC                     
  4401                           ;./pwm.h: 47: void pwm_setDuty(unsigned int dutycycle);./pwm.h: 48: {;./pwm.h: 49:     C
      +                          CPR1L = dutycycle>>2;
  4402  0058DC  C006  F008         	movff	pwm_setDuty@dutycycle,??_pwm_setDuty
  4403  0058E0  C007  F009         	movff	pwm_setDuty@dutycycle+1,??_pwm_setDuty+1
  4404  0058E4  90D8               	bcf	status,0,c
  4405  0058E6  3209               	rrcf	(??_pwm_setDuty+1)^0,f,c
  4406  0058E8  3208               	rrcf	??_pwm_setDuty^0,f,c
  4407  0058EA  90D8               	bcf	status,0,c
  4408  0058EC  3209               	rrcf	(??_pwm_setDuty+1)^0,f,c
  4409  0058EE  3208               	rrcf	??_pwm_setDuty^0,f,c
  4410  0058F0  5008               	movf	??_pwm_setDuty^0,w,c
  4411  0058F2  6EBE               	movwf	190,c	;volatile
  4412                           
  4413                           ;./pwm.h: 50:     CCP1CON &= 0xCF;
  4414  0058F4  0ECF               	movlw	207
  4415  0058F6  16BD               	andwf	189,f,c	;volatile
  4416                           
  4417                           ;./pwm.h: 51:     CCP1CON |= ((dutycycle<<4) & 0x30);
  4418  0058F8  3806               	swapf	pwm_setDuty@dutycycle^0,w,c	;volatile
  4419  0058FA  0BF0               	andlw	240
  4420  0058FC  0B30               	andlw	48
  4421  0058FE  12BD               	iorwf	189,f,c	;volatile
  4422  005900  0012               	return		;funcret
  4423  005902                     __end_of_pwm_setDuty:
  4424                           	callstack 0
  4425                           
  4426 ;; *************** function _pwm_Init *****************
  4427 ;; Defined at:
  4428 ;;		line 19 in file "./pwm.h"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  period          1    wreg     unsigned char 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  period          1    5[COMRAM] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, status,2
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4442 ;;      Params:         0       0       0       0       0       0       0
  4443 ;;      Locals:         1       0       0       0       0       0       0
  4444 ;;      Temps:          0       0       0       0       0       0       0
  4445 ;;      Totals:         1       0       0       0       0       0       0
  4446 ;;Total ram usage:        1 bytes
  4447 ;; Hardware stack levels used: 1
  4448 ;; Hardware stack levels required when called: 1
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_main
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text8
  4457  005942                     __ptext8:
  4458                           	callstack 0
  4459  005942                     _pwm_Init:
  4460                           	callstack 29
  4461                           
  4462                           ;incstack = 0
  4463                           ;pwm_Init@period stored from wreg
  4464  005942  6E06               	movwf	pwm_Init@period^0,c
  4465  005944                     
  4466                           ;./pwm.h: 21:     TRISC = 0;
  4467  005944  0E00               	movlw	0
  4468  005946  6E94               	movwf	148,c	;volatile
  4469                           
  4470                           ;./pwm.h: 22:     LATC = 0;
  4471  005948  0E00               	movlw	0
  4472  00594A  6E8B               	movwf	139,c	;volatile
  4473                           
  4474                           ;./pwm.h: 25:     CCP1CON = 0X3C;
  4475  00594C  0E3C               	movlw	60
  4476  00594E  6EBD               	movwf	189,c	;volatile
  4477  005950                     
  4478                           ;./pwm.h: 35:     PR2 = period;
  4479  005950  C006  FFCB         	movff	pwm_Init@period,4043	;volatile
  4480  005954                     
  4481                           ;./pwm.h: 37:     T2CON=0x04;
  4482  005954  0E04               	movlw	4
  4483  005956  6ECA               	movwf	202,c	;volatile
  4484  005958  0012               	return		;funcret
  4485  00595A                     __end_of_pwm_Init:
  4486                           	callstack 0
  4487                           
  4488 ;; *************** function _put_rc *****************
  4489 ;; Defined at:
  4490 ;;		line 27 in file "main.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  rc              1    wreg     enum E3114
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;  rc              1   19[BANK0 ] enum E3114
  4495 ;;  p               2   20[BANK0 ] PTR const unsigned char 
  4496 ;;		 -> put_rc@str(69), 
  4497 ;;  i               1   18[BANK0 ] enum E3114
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4507 ;;      Params:         0       0       0       0       0       0       0
  4508 ;;      Locals:         0       4       0       0       0       0       0
  4509 ;;      Temps:          0       0       0       0       0       0       0
  4510 ;;      Totals:         0       4       0       0       0       0       0
  4511 ;;Total ram usage:        4 bytes
  4512 ;; Hardware stack levels used: 1
  4513 ;; Hardware stack levels required when called: 9
  4514 ;; This function calls:
  4515 ;;		_printf
  4516 ;; This function is called by:
  4517 ;;		_main
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text9
  4522  00537C                     __ptext9:
  4523                           	callstack 0
  4524  00537C                     _put_rc:
  4525                           	callstack 21
  4526                           
  4527                           ;incstack = 0
  4528                           ;put_rc@rc stored from wreg
  4529  00537C  0100               	movlb	0	; () banked
  4530  00537E  6F93               	movwf	put_rc@rc& (0+255),b
  4531  005380                     
  4532                           ;main.c: 27: void put_rc (FRESULT rc);main.c: 28: {;main.c: 29:  const char *p;;main.c: 
      +                          30:  FRESULT i;;main.c: 31:  static const char str[] =;main.c: 34:  for (p = str, i = 0;
      +                           i != rc && *p; i++) {
  4533  005380  0E0D               	movlw	low put_rc@str
  4534  005382  0100               	movlb	0	; () banked
  4535  005384  6F94               	movwf	put_rc@p& (0+255),b
  4536  005386  0E7C               	movlw	high put_rc@str
  4537  005388  6F95               	movwf	(put_rc@p+1)& (0+255),b
  4538  00538A  0E00               	movlw	0
  4539  00538C  6F92               	movwf	put_rc@i& (0+255),b
  4540  00538E  EFDA  F029         	goto	l7911
  4541  005392                     l7907:
  4542                           
  4543                           ; BSR set to: 0
  4544  005392  C094  FFF6         	movff	put_rc@p,tblptrl
  4545  005396  C095  FFF7         	movff	put_rc@p+1,tblptrh
  4546  00539A  4B94               	infsnz	put_rc@p& (0+255),f,b
  4547  00539C  2B95               	incf	(put_rc@p+1)& (0+255),f,b
  4548  00539E                     	if	0	;tblptru may be non-zero
  4549  00539E                     	endif
  4550  00539E                     	if	0	;tblptru may be non-zero
  4551  00539E                     	endif
  4552  00539E  0008               	tblrd		*
  4553  0053A0  50F5               	movf	tablat,w,c
  4554  0053A2  0900               	iorlw	0
  4555  0053A4  A4D8               	btfss	status,2,c
  4556  0053A6  EFD7  F029         	goto	u10251
  4557  0053AA  EFD9  F029         	goto	u10250
  4558  0053AE                     u10251:
  4559  0053AE  EFC9  F029         	goto	l7907
  4560  0053B2                     u10250:
  4561  0053B2                     
  4562                           ; BSR set to: 0
  4563                           ;main.c: 36:  }
  4564  0053B2  2B92               	incf	put_rc@i& (0+255),f,b
  4565  0053B4                     l7911:
  4566                           
  4567                           ; BSR set to: 0
  4568  0053B4  5193               	movf	put_rc@rc& (0+255),w,b
  4569  0053B6  1992               	xorwf	put_rc@i& (0+255),w,b
  4570  0053B8  B4D8               	btfsc	status,2,c
  4571  0053BA  EFE1  F029         	goto	u10261
  4572  0053BE  EFE3  F029         	goto	u10260
  4573  0053C2                     u10261:
  4574  0053C2  EFF1  F029         	goto	l7915
  4575  0053C6                     u10260:
  4576  0053C6                     
  4577                           ; BSR set to: 0
  4578  0053C6  C094  FFF6         	movff	put_rc@p,tblptrl
  4579  0053CA  C095  FFF7         	movff	put_rc@p+1,tblptrh
  4580  0053CE                     	if	0	;tblptru may be non-zero
  4581  0053CE                     	endif
  4582  0053CE                     	if	0	;tblptru may be non-zero
  4583  0053CE                     	endif
  4584  0053CE  0008               	tblrd		*
  4585  0053D0  50F5               	movf	tablat,w,c
  4586  0053D2  0900               	iorlw	0
  4587  0053D4  A4D8               	btfss	status,2,c
  4588  0053D6  EFEF  F029         	goto	u10271
  4589  0053DA  EFF1  F029         	goto	u10270
  4590  0053DE                     u10271:
  4591  0053DE  EFC9  F029         	goto	l7907
  4592  0053E2                     u10270:
  4593  0053E2                     l7915:
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;main.c: 37:  printf("rc=%u FR_%s\r\n", rc, p);
  4597  0053E2  0E74               	movlw	low STR_1
  4598  0053E4  6F86               	movwf	printf@fmt& (0+255),b
  4599  0053E6  0E7D               	movlw	high STR_1
  4600  0053E8  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4601  0053EA  C093  F088         	movff	put_rc@rc,?_printf+2
  4602  0053EE  6B89               	clrf	(?_printf+3)& (0+255),b
  4603  0053F0  C094  F08A         	movff	put_rc@p,?_printf+4
  4604  0053F4  C095  F08B         	movff	put_rc@p+1,?_printf+5
  4605  0053F8  EC5A  F02C         	call	_printf	;wreg free
  4606  0053FC  0012               	return		;funcret
  4607  0053FE                     __end_of_put_rc:
  4608                           	callstack 0
  4609                           
  4610 ;; *************** function _put_dump *****************
  4611 ;; Defined at:
  4612 ;;		line 199 in file "uart.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  buff            2   18[BANK0 ] PTR const void 
  4615 ;;		 -> Line(128), 
  4616 ;;  addr            4   20[BANK0 ] unsigned long 
  4617 ;;  len             2   24[BANK0 ] int 
  4618 ;;  width           2   26[BANK0 ] int 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  i               2   38[BANK0 ] int 
  4621 ;;  bp              2   36[BANK0 ] PTR const unsigned char 
  4622 ;;		 -> Line(128), 
  4623 ;;  lp              2   32[BANK0 ] PTR const unsigned long 
  4624 ;;		 -> Line(128), 
  4625 ;;  sp              2   30[BANK0 ] PTR const unsigned short
  4626 ;;		 -> Line(128), 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      void 
  4629 ;; Registers used:
  4630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4636 ;;      Params:         0      10       0       0       0       0       0
  4637 ;;      Locals:         0      10       0       0       0       0       0
  4638 ;;      Temps:          0       2       0       0       0       0       0
  4639 ;;      Totals:         0      22       0       0       0       0       0
  4640 ;;Total ram usage:       22 bytes
  4641 ;; Hardware stack levels used: 1
  4642 ;; Hardware stack levels required when called: 9
  4643 ;; This function calls:
  4644 ;;		_printf
  4645 ;; This function is called by:
  4646 ;;		_main
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text10
  4651  002EBA                     __ptext10:
  4652                           	callstack 0
  4653  002EBA                     _put_dump:
  4654                           	callstack 21
  4655  002EBA                     
  4656                           ;uart.c: 200:  const void* buff,;uart.c: 201:  unsigned long addr,;uart.c: 202:  int len
      +                          ,;uart.c: 203:  int width;uart.c: 205: {;uart.c: 206:  int i;;uart.c: 207:  const unsign
      +                          ed char *bp;;uart.c: 208:  const unsigned short *sp;;uart.c: 209:  const unsigned long *
      +                          lp;;uart.c: 211:  printf("addr: %08lX |", addr);
  4657  002EBA  0E58               	movlw	low STR_24
  4658  002EBC  0100               	movlb	0	; () banked
  4659  002EBE  6F86               	movwf	printf@fmt& (0+255),b
  4660  002EC0  0E7D               	movlw	high STR_24
  4661  002EC2  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4662  002EC4  C094  F088         	movff	put_dump@addr,?_printf+2
  4663  002EC8  C095  F089         	movff	put_dump@addr+1,?_printf+3
  4664  002ECC  C096  F08A         	movff	put_dump@addr+2,?_printf+4
  4665  002ED0  C097  F08B         	movff	put_dump@addr+3,?_printf+5
  4666  002ED4  EC5A  F02C         	call	_printf	;wreg free
  4667                           
  4668                           ;uart.c: 213:  switch (width) {
  4669  002ED8  EF41  F018         	goto	l8099
  4670  002EDC                     l8053:
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;uart.c: 215:   bp = buff;
  4674  002EDC  C092  F0A4         	movff	put_dump@buff,put_dump@bp
  4675  002EE0  C093  F0A5         	movff	put_dump@buff+1,put_dump@bp+1
  4676  002EE4                     
  4677                           ; BSR set to: 0
  4678                           ;uart.c: 216:   for (i = 0; i < len; i++)
  4679  002EE4  0E00               	movlw	0
  4680  002EE6  6FA7               	movwf	(put_dump@i+1)& (0+255),b
  4681  002EE8  0E00               	movlw	0
  4682  002EEA  6FA6               	movwf	put_dump@i& (0+255),b
  4683  002EEC  EF8C  F017         	goto	l8061
  4684  002EF0                     l8057:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;uart.c: 217:    printf(" %02X", bp[i]);
  4688  002EF0  0E9D               	movlw	low STR_25
  4689  002EF2  6F86               	movwf	printf@fmt& (0+255),b
  4690  002EF4  0E7D               	movlw	high STR_25
  4691  002EF6  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4692  002EF8  51A6               	movf	put_dump@i& (0+255),w,b
  4693  002EFA  25A4               	addwf	put_dump@bp& (0+255),w,b
  4694  002EFC  6ED9               	movwf	fsr2l,c
  4695  002EFE  51A7               	movf	(put_dump@i+1)& (0+255),w,b
  4696  002F00  21A5               	addwfc	(put_dump@bp+1)& (0+255),w,b
  4697  002F02  6EDA               	movwf	fsr2h,c
  4698  002F04  50DF               	movf	indf2,w,c
  4699  002F06  6F9C               	movwf	??_put_dump& (0+255),b
  4700  002F08  519C               	movf	??_put_dump& (0+255),w,b
  4701  002F0A  6F88               	movwf	(?_printf+2)& (0+255),b
  4702  002F0C  6B89               	clrf	(?_printf+3)& (0+255),b
  4703  002F0E  EC5A  F02C         	call	_printf	;wreg free
  4704  002F12  0100               	movlb	0	; () banked
  4705  002F14  4BA6               	infsnz	put_dump@i& (0+255),f,b
  4706  002F16  2BA7               	incf	(put_dump@i+1)& (0+255),f,b
  4707  002F18                     l8061:
  4708                           
  4709                           ; BSR set to: 0
  4710  002F18  5198               	movf	put_dump@len& (0+255),w,b
  4711  002F1A  5DA6               	subwf	put_dump@i& (0+255),w,b
  4712  002F1C  51A7               	movf	(put_dump@i+1)& (0+255),w,b
  4713  002F1E  0A80               	xorlw	128
  4714  002F20  6F9C               	movwf	??_put_dump& (0+255),b
  4715  002F22  5199               	movf	(put_dump@len+1)& (0+255),w,b
  4716  002F24  0A80               	xorlw	128
  4717  002F26  599C               	subwfb	??_put_dump& (0+255),w,b
  4718  002F28  A0D8               	btfss	status,0,c
  4719  002F2A  EF99  F017         	goto	u10481
  4720  002F2E  EF9B  F017         	goto	u10480
  4721  002F32                     u10481:
  4722  002F32  EF78  F017         	goto	l8057
  4723  002F36                     u10480:
  4724  002F36                     
  4725                           ; BSR set to: 0
  4726                           ;uart.c: 218:   printf(" ");
  4727  002F36  0EBB               	movlw	low STR_26
  4728  002F38  6F86               	movwf	printf@fmt& (0+255),b
  4729  002F3A  0E7D               	movlw	high STR_26
  4730  002F3C  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4731  002F3E  EC5A  F02C         	call	_printf	;wreg free
  4732  002F42                     
  4733                           ;uart.c: 219:   for (i = 0; i < len; i++)
  4734  002F42  0E00               	movlw	0
  4735  002F44  0100               	movlb	0	; () banked
  4736  002F46  6FA7               	movwf	(put_dump@i+1)& (0+255),b
  4737  002F48  0E00               	movlw	0
  4738  002F4A  6FA6               	movwf	put_dump@i& (0+255),b
  4739  002F4C  EFE2  F017         	goto	l8079
  4740  002F50                     l8067:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;uart.c: 220:    printf("%c", (bp[i] >= ' ' && bp[i] <= '~') ? bp[i] : '.');
  4744  002F50  51A6               	movf	put_dump@i& (0+255),w,b
  4745  002F52  25A4               	addwf	put_dump@bp& (0+255),w,b
  4746  002F54  6ED9               	movwf	fsr2l,c
  4747  002F56  51A7               	movf	(put_dump@i+1)& (0+255),w,b
  4748  002F58  21A5               	addwfc	(put_dump@bp+1)& (0+255),w,b
  4749  002F5A  6EDA               	movwf	fsr2h,c
  4750  002F5C  0E1F               	movlw	31
  4751  002F5E  64DF               	cpfsgt	indf2,c
  4752  002F60  EFB4  F017         	goto	u10491
  4753  002F64  EFB6  F017         	goto	u10490
  4754  002F68                     u10491:
  4755  002F68  EFC4  F017         	goto	l8071
  4756  002F6C                     u10490:
  4757  002F6C                     
  4758                           ; BSR set to: 0
  4759  002F6C  51A6               	movf	put_dump@i& (0+255),w,b
  4760  002F6E  25A4               	addwf	put_dump@bp& (0+255),w,b
  4761  002F70  6ED9               	movwf	fsr2l,c
  4762  002F72  51A7               	movf	(put_dump@i+1)& (0+255),w,b
  4763  002F74  21A5               	addwfc	(put_dump@bp+1)& (0+255),w,b
  4764  002F76  6EDA               	movwf	fsr2h,c
  4765  002F78  0E7E               	movlw	126
  4766  002F7A  64DF               	cpfsgt	indf2,c
  4767  002F7C  EFC2  F017         	goto	u10501
  4768  002F80  EFC4  F017         	goto	u10500
  4769  002F84                     u10501:
  4770  002F84  EFCA  F017         	goto	l8073
  4771  002F88                     u10500:
  4772  002F88                     l8071:
  4773                           
  4774                           ; BSR set to: 0
  4775  002F88  0E00               	movlw	0
  4776  002F8A  6FA3               	movwf	(_put_dump$1131+1)& (0+255),b
  4777  002F8C  0E2E               	movlw	46
  4778  002F8E  6FA2               	movwf	_put_dump$1131& (0+255),b
  4779  002F90  EFD5  F017         	goto	l8075
  4780  002F94                     l8073:
  4781                           
  4782                           ; BSR set to: 0
  4783  002F94  51A6               	movf	put_dump@i& (0+255),w,b
  4784  002F96  25A4               	addwf	put_dump@bp& (0+255),w,b
  4785  002F98  6ED9               	movwf	fsr2l,c
  4786  002F9A  51A7               	movf	(put_dump@i+1)& (0+255),w,b
  4787  002F9C  21A5               	addwfc	(put_dump@bp+1)& (0+255),w,b
  4788  002F9E  6EDA               	movwf	fsr2h,c
  4789  002FA0  50DF               	movf	indf2,w,c
  4790  002FA2  6F9C               	movwf	??_put_dump& (0+255),b
  4791  002FA4  519C               	movf	??_put_dump& (0+255),w,b
  4792  002FA6  6FA2               	movwf	_put_dump$1131& (0+255),b
  4793  002FA8  6BA3               	clrf	(_put_dump$1131+1)& (0+255),b
  4794  002FAA                     l8075:
  4795                           
  4796                           ; BSR set to: 0
  4797  002FAA  0EB8               	movlw	low STR_21
  4798  002FAC  6F86               	movwf	printf@fmt& (0+255),b
  4799  002FAE  0E7D               	movlw	high STR_21
  4800  002FB0  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4801  002FB2  C0A2  F088         	movff	_put_dump$1131,?_printf+2
  4802  002FB6  C0A3  F089         	movff	_put_dump$1131+1,?_printf+3
  4803  002FBA  EC5A  F02C         	call	_printf	;wreg free
  4804  002FBE  0100               	movlb	0	; () banked
  4805  002FC0  4BA6               	infsnz	put_dump@i& (0+255),f,b
  4806  002FC2  2BA7               	incf	(put_dump@i+1)& (0+255),f,b
  4807  002FC4                     l8079:
  4808                           
  4809                           ; BSR set to: 0
  4810  002FC4  5198               	movf	put_dump@len& (0+255),w,b
  4811  002FC6  5DA6               	subwf	put_dump@i& (0+255),w,b
  4812  002FC8  51A7               	movf	(put_dump@i+1)& (0+255),w,b
  4813  002FCA  0A80               	xorlw	128
  4814  002FCC  6F9C               	movwf	??_put_dump& (0+255),b
  4815  002FCE  5199               	movf	(put_dump@len+1)& (0+255),w,b
  4816  002FD0  0A80               	xorlw	128
  4817  002FD2  599C               	subwfb	??_put_dump& (0+255),w,b
  4818  002FD4  A0D8               	btfss	status,0,c
  4819  002FD6  EFEF  F017         	goto	u10511
  4820  002FDA  EFF1  F017         	goto	u10510
  4821  002FDE                     u10511:
  4822  002FDE  EFA8  F017         	goto	l8067
  4823  002FE2                     u10510:
  4824  002FE2  EF5C  F018         	goto	l8101
  4825  002FE6                     l8081:
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;uart.c: 223:   sp = buff;
  4829  002FE6  C092  F09E         	movff	put_dump@buff,put_dump@sp
  4830  002FEA  C093  F09F         	movff	put_dump@buff+1,put_dump@sp+1
  4831  002FEE                     l8083:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;uart.c: 225:    printf(" %04X", *sp++);
  4835  002FEE  0EA3               	movlw	low STR_28
  4836  002FF0  6F86               	movwf	printf@fmt& (0+255),b
  4837  002FF2  0E7D               	movlw	high STR_28
  4838  002FF4  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4839  002FF6  C09E  FFD9         	movff	put_dump@sp,fsr2l
  4840  002FFA  C09F  FFDA         	movff	put_dump@sp+1,fsr2h
  4841  002FFE  CFDE F088          	movff	postinc2,?_printf+2
  4842  003002  CFDD F089          	movff	postdec2,?_printf+3
  4843  003006  EC5A  F02C         	call	_printf	;wreg free
  4844  00300A  0E02               	movlw	2
  4845  00300C  0100               	movlb	0	; () banked
  4846  00300E  279E               	addwf	put_dump@sp& (0+255),f,b
  4847  003010  0E00               	movlw	0
  4848  003012  239F               	addwfc	(put_dump@sp+1)& (0+255),f,b
  4849  003014                     
  4850                           ; BSR set to: 0
  4851  003014  0798               	decf	put_dump@len& (0+255),f,b
  4852  003016  A0D8               	btfss	status,0,c
  4853  003018  0799               	decf	(put_dump@len+1)& (0+255),f,b
  4854  00301A  5198               	movf	put_dump@len& (0+255),w,b
  4855  00301C  1199               	iorwf	(put_dump@len+1)& (0+255),w,b
  4856  00301E  A4D8               	btfss	status,2,c
  4857  003020  EF14  F018         	goto	u10521
  4858  003024  EF16  F018         	goto	u10520
  4859  003028                     u10521:
  4860  003028  EFF7  F017         	goto	l8083
  4861  00302C                     u10520:
  4862  00302C  EF5C  F018         	goto	l8101
  4863  003030                     l8089:
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;uart.c: 229:   lp = buff;
  4867  003030  C092  F0A0         	movff	put_dump@buff,put_dump@lp
  4868  003034  C093  F0A1         	movff	put_dump@buff+1,put_dump@lp+1
  4869  003038                     l8091:
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;uart.c: 231:    printf(" %08LX", *lp++);
  4873  003038  0E96               	movlw	low STR_29
  4874  00303A  6F86               	movwf	printf@fmt& (0+255),b
  4875  00303C  0E7D               	movlw	high STR_29
  4876  00303E  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4877  003040  C0A0  FFD9         	movff	put_dump@lp,fsr2l
  4878  003044  C0A1  FFDA         	movff	put_dump@lp+1,fsr2h
  4879  003048  CFDE F088          	movff	postinc2,?_printf+2
  4880  00304C  CFDE F089          	movff	postinc2,?_printf+3
  4881  003050  CFDE F08A          	movff	postinc2,?_printf+4
  4882  003054  CFDE F08B          	movff	postinc2,?_printf+5
  4883  003058  EC5A  F02C         	call	_printf	;wreg free
  4884  00305C  0E04               	movlw	4
  4885  00305E  0100               	movlb	0	; () banked
  4886  003060  27A0               	addwf	put_dump@lp& (0+255),f,b
  4887  003062  0E00               	movlw	0
  4888  003064  23A1               	addwfc	(put_dump@lp+1)& (0+255),f,b
  4889  003066                     
  4890                           ; BSR set to: 0
  4891  003066  0798               	decf	put_dump@len& (0+255),f,b
  4892  003068  A0D8               	btfss	status,0,c
  4893  00306A  0799               	decf	(put_dump@len+1)& (0+255),f,b
  4894  00306C  5198               	movf	put_dump@len& (0+255),w,b
  4895  00306E  1199               	iorwf	(put_dump@len+1)& (0+255),w,b
  4896  003070  A4D8               	btfss	status,2,c
  4897  003072  EF3D  F018         	goto	u10531
  4898  003076  EF3F  F018         	goto	u10530
  4899  00307A                     u10531:
  4900  00307A  EF1C  F018         	goto	l8091
  4901  00307E                     u10530:
  4902  00307E  EF5C  F018         	goto	l8101
  4903  003082                     l8099:
  4904  003082  C09A  F09C         	movff	put_dump@width,??_put_dump
  4905  003086  C09B  F09D         	movff	put_dump@width+1,??_put_dump+1
  4906                           
  4907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4908                           ; Switch size 1, requested type "simple"
  4909                           ; Number of cases is 1, Range of values is 0 to 0
  4910                           ; switch strategies available:
  4911                           ; Name         Instructions Cycles
  4912                           ; simple_byte            4     3 (average)
  4913                           ;	Chosen strategy is simple_byte
  4914  00308A  0100               	movlb	0	; () banked
  4915  00308C  519D               	movf	(??_put_dump+1)& (0+255),w,b
  4916  00308E  0A00               	xorlw	0	; case 0
  4917  003090  B4D8               	btfsc	status,2,c
  4918  003092  EF4D  F018         	goto	l8955
  4919  003096  EF5C  F018         	goto	l8101
  4920  00309A                     l8955:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ; Switch size 1, requested type "simple"
  4924                           ; Number of cases is 3, Range of values is 1 to 4
  4925                           ; switch strategies available:
  4926                           ; Name         Instructions Cycles
  4927                           ; simple_byte           10     6 (average)
  4928                           ;	Chosen strategy is simple_byte
  4929  00309A  519C               	movf	??_put_dump& (0+255),w,b
  4930  00309C  0A01               	xorlw	1	; case 1
  4931  00309E  B4D8               	btfsc	status,2,c
  4932  0030A0  EF6E  F017         	goto	l8053
  4933  0030A4  0A03               	xorlw	3	; case 2
  4934  0030A6  B4D8               	btfsc	status,2,c
  4935  0030A8  EFF3  F017         	goto	l8081
  4936  0030AC  0A06               	xorlw	6	; case 4
  4937  0030AE  B4D8               	btfsc	status,2,c
  4938  0030B0  EF18  F018         	goto	l8089
  4939  0030B4  EF5C  F018         	goto	l8101
  4940  0030B8                     l8101:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;uart.c: 236:  printf("\r\n");
  4944  0030B8  0E1F               	movlw	low (STR_16+18)
  4945  0030BA  6F86               	movwf	printf@fmt& (0+255),b
  4946  0030BC  0E7D               	movlw	high (STR_16+18)
  4947  0030BE  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4948  0030C0  EC5A  F02C         	call	_printf	;wreg free
  4949  0030C4  0012               	return		;funcret
  4950  0030C6                     __end_of_put_dump:
  4951                           	callstack 0
  4952                           
  4953 ;; *************** function _put_drc *****************
  4954 ;; Defined at:
  4955 ;;		line 40 in file "main.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  res             1    wreg     unsigned char 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  res             1  115[COMRAM] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4969 ;;      Params:         0       0       0       0       0       0       0
  4970 ;;      Locals:         1       0       0       0       0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0
  4972 ;;      Totals:         1       0       0       0       0       0       0
  4973 ;;Total ram usage:        1 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; Hardware stack levels required when called: 9
  4976 ;; This function calls:
  4977 ;;		_printf
  4978 ;; This function is called by:
  4979 ;;		_main
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text11
  4984  00595A                     __ptext11:
  4985                           	callstack 0
  4986  00595A                     _put_drc:
  4987                           	callstack 21
  4988                           
  4989                           ;incstack = 0
  4990                           ;put_drc@res stored from wreg
  4991  00595A  6E74               	movwf	put_drc@res^0,c
  4992  00595C                     
  4993                           ;main.c: 40: void put_drc (BYTE res);main.c: 41: {;main.c: 42:  printf("rc=%d\r\n", res)
      +                          ;
  4994  00595C  0E8E               	movlw	low STR_2
  4995  00595E  0100               	movlb	0	; () banked
  4996  005960  6F86               	movwf	printf@fmt& (0+255),b
  4997  005962  0E7D               	movlw	high STR_2
  4998  005964  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4999  005966  C074  F088         	movff	put_drc@res,?_printf+2
  5000  00596A  6B89               	clrf	(?_printf+3)& (0+255),b
  5001  00596C  EC5A  F02C         	call	_printf	;wreg free
  5002  005970  0012               	return		;funcret
  5003  005972                     __end_of_put_drc:
  5004                           	callstack 0
  5005                           
  5006 ;; *************** function _pf_readdir *****************
  5007 ;; Defined at:
  5008 ;;		line 1088 in file "pff.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  dj              2   94[BANK0 ] PTR struct .
  5011 ;;		 -> main@dir(16), 
  5012 ;;  fno             2   96[BANK0 ] PTR struct .
  5013 ;;		 -> main@fno(22), 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  dir            32    0[BANK1 ] unsigned char [32]
  5016 ;;  sp             12   32[BANK1 ] unsigned char [12]
  5017 ;;  fs              2   44[BANK1 ] PTR struct .
  5018 ;;		 -> NULL(0), main@fs(42), 
  5019 ;;  res             1   46[BANK1 ] enum E2600
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  1    wreg      enum E3114
  5022 ;; Registers used:
  5023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5029 ;;      Params:         0       4       0       0       0       0       0
  5030 ;;      Locals:         0       0      47       0       0       0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0
  5032 ;;      Totals:         0       4      47       0       0       0       0
  5033 ;;Total ram usage:       51 bytes
  5034 ;; Hardware stack levels used: 1
  5035 ;; Hardware stack levels required when called: 13
  5036 ;; This function calls:
  5037 ;;		_dir_next
  5038 ;;		_dir_read
  5039 ;;		_dir_rewind
  5040 ;;		_get_fileinfo
  5041 ;; This function is called by:
  5042 ;;		_main
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text12
  5047  004AB2                     __ptext12:
  5048                           	callstack 0
  5049  004AB2                     _pf_readdir:
  5050                           	callstack 17
  5051  004AB2                     
  5052                           ;pff.c: 1089:  DIR *dj,;pff.c: 1090:  FILINFO *fno;pff.c: 1092: {;pff.c: 1093:  FRESULT 
      +                          res;;pff.c: 1094:  BYTE sp[12], dir[32];;pff.c: 1095:  FATFS *fs = FatFs;
  5053  004AB2  C0F1  F12C         	movff	_FatFs,pf_readdir@fs
  5054  004AB6  C0F2  F12D         	movff	_FatFs+1,pf_readdir@fs+1
  5055                           
  5056                           ;pff.c: 1098:  if (!fs) {
  5057  004ABA  0101               	movlb	1	; () banked
  5058  004ABC  512C               	movf	pf_readdir@fs& (0+255),w,b
  5059  004ABE  112D               	iorwf	(pf_readdir@fs+1)& (0+255),w,b
  5060  004AC0  A4D8               	btfss	status,2,c
  5061  004AC2  EF65  F025         	goto	u11011
  5062  004AC6  EF67  F025         	goto	u11010
  5063  004ACA                     u11011:
  5064  004ACA  EF6B  F025         	goto	l8427
  5065  004ACE                     u11010:
  5066  004ACE                     
  5067                           ; BSR set to: 1
  5068                           ;pff.c: 1099:   res = FR_NOT_ENABLED;
  5069  004ACE  0E05               	movlw	5
  5070  004AD0  6F2E               	movwf	pf_readdir@res& (0+255),b
  5071                           
  5072                           ;pff.c: 1100:  } else {
  5073  004AD2  EFC9  F025         	goto	l415
  5074  004AD6                     l8427:
  5075                           
  5076                           ; BSR set to: 1
  5077                           ;pff.c: 1101:   dj->fn = sp;
  5078  004AD6  0100               	movlb	0	; () banked
  5079  004AD8  EE20 F002          	lfsr	2,2
  5080  004ADC  51DE               	movf	pf_readdir@dj& (0+255),w,b
  5081  004ADE  26D9               	addwf	fsr2l,f,c
  5082  004AE0  51DF               	movf	(pf_readdir@dj+1)& (0+255),w,b
  5083  004AE2  22DA               	addwfc	fsr2h,f,c
  5084  004AE4  0E20               	movlw	low pf_readdir@sp
  5085  004AE6  6EDE               	movwf	postinc2,c
  5086  004AE8  0E01               	movlw	high pf_readdir@sp
  5087  004AEA  6EDD               	movwf	postdec2,c
  5088  004AEC                     
  5089                           ; BSR set to: 0
  5090                           ;pff.c: 1102:   if (!fno) {
  5091  004AEC  51E0               	movf	pf_readdir@fno& (0+255),w,b
  5092  004AEE  11E1               	iorwf	(pf_readdir@fno+1)& (0+255),w,b
  5093  004AF0  A4D8               	btfss	status,2,c
  5094  004AF2  EF7D  F025         	goto	u11021
  5095  004AF6  EF7F  F025         	goto	u11020
  5096  004AFA                     u11021:
  5097  004AFA  EF89  F025         	goto	l8433
  5098  004AFE                     u11020:
  5099  004AFE                     
  5100                           ; BSR set to: 0
  5101                           ;pff.c: 1103:    res = dir_rewind(dj);
  5102  004AFE  C0DE  F01D         	movff	pf_readdir@dj,dir_rewind@dj
  5103  004B02  C0DF  F01E         	movff	pf_readdir@dj+1,dir_rewind@dj+1
  5104  004B06  EC5B  F024         	call	_dir_rewind	;wreg free
  5105  004B0A  0101               	movlb	1	; () banked
  5106  004B0C  6F2E               	movwf	pf_readdir@res& (0+255),b
  5107                           
  5108                           ;pff.c: 1104:   } else {
  5109  004B0E  EFC9  F025         	goto	l415
  5110  004B12                     l8433:
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;pff.c: 1105:    res = dir_read(dj, dir);
  5114  004B12  C0DE  F0D3         	movff	pf_readdir@dj,dir_read@dj
  5115  004B16  C0DF  F0D4         	movff	pf_readdir@dj+1,dir_read@dj+1
  5116  004B1A  0E00               	movlw	low pf_readdir@dir
  5117  004B1C  6FD5               	movwf	dir_read@dir& (0+255),b
  5118  004B1E  0E01               	movlw	high pf_readdir@dir
  5119  004B20  6FD6               	movwf	(dir_read@dir+1)& (0+255),b
  5120  004B22  EC6C  F020         	call	_dir_read	;wreg free
  5121  004B26  0101               	movlb	1	; () banked
  5122  004B28  6F2E               	movwf	pf_readdir@res& (0+255),b
  5123  004B2A                     
  5124                           ; BSR set to: 1
  5125                           ;pff.c: 1106:    if (res == FR_NO_FILE) res = FR_OK;
  5126  004B2A  0E03               	movlw	3
  5127  004B2C  192E               	xorwf	pf_readdir@res& (0+255),w,b
  5128  004B2E  A4D8               	btfss	status,2,c
  5129  004B30  EF9C  F025         	goto	u11031
  5130  004B34  EF9E  F025         	goto	u11030
  5131  004B38                     u11031:
  5132  004B38  EFA0  F025         	goto	l418
  5133  004B3C                     u11030:
  5134  004B3C                     
  5135                           ; BSR set to: 1
  5136  004B3C  0E00               	movlw	0
  5137  004B3E  6F2E               	movwf	pf_readdir@res& (0+255),b
  5138  004B40                     l418:
  5139                           
  5140                           ; BSR set to: 1
  5141                           ;pff.c: 1107:    if (res == FR_OK) {
  5142  004B40  512E               	movf	pf_readdir@res& (0+255),w,b
  5143  004B42  A4D8               	btfss	status,2,c
  5144  004B44  EFA6  F025         	goto	u11041
  5145  004B48  EFA8  F025         	goto	u11040
  5146  004B4C                     u11041:
  5147  004B4C  EFC9  F025         	goto	l415
  5148  004B50                     u11040:
  5149  004B50                     
  5150                           ; BSR set to: 1
  5151                           ;pff.c: 1108:     get_fileinfo(dj, dir, fno);
  5152  004B50  C0DE  F006         	movff	pf_readdir@dj,get_fileinfo@dj
  5153  004B54  C0DF  F007         	movff	pf_readdir@dj+1,get_fileinfo@dj+1
  5154  004B58  0E00               	movlw	low pf_readdir@dir
  5155  004B5A  6E08               	movwf	get_fileinfo@dir^0,c
  5156  004B5C  0E01               	movlw	high pf_readdir@dir
  5157  004B5E  6E09               	movwf	(get_fileinfo@dir+1)^0,c
  5158  004B60  C0E0  F00A         	movff	pf_readdir@fno,get_fileinfo@fno
  5159  004B64  C0E1  F00B         	movff	pf_readdir@fno+1,get_fileinfo@fno+1
  5160  004B68  EC13  F015         	call	_get_fileinfo	;wreg free
  5161  004B6C                     
  5162                           ;pff.c: 1109:     res = dir_next(dj);
  5163  004B6C  C0DE  F0C2         	movff	pf_readdir@dj,dir_next@dj
  5164  004B70  C0DF  F0C3         	movff	pf_readdir@dj+1,dir_next@dj+1
  5165  004B74  EC54  F016         	call	_dir_next	;wreg free
  5166  004B78  0101               	movlb	1	; () banked
  5167  004B7A  6F2E               	movwf	pf_readdir@res& (0+255),b
  5168  004B7C                     
  5169                           ; BSR set to: 1
  5170                           ;pff.c: 1110:     if (res == FR_NO_FILE) res = FR_OK;
  5171  004B7C  0E03               	movlw	3
  5172  004B7E  192E               	xorwf	pf_readdir@res& (0+255),w,b
  5173  004B80  A4D8               	btfss	status,2,c
  5174  004B82  EFC5  F025         	goto	u11051
  5175  004B86  EFC7  F025         	goto	u11050
  5176  004B8A                     u11051:
  5177  004B8A  EFC9  F025         	goto	l415
  5178  004B8E                     u11050:
  5179  004B8E                     
  5180                           ; BSR set to: 1
  5181  004B8E  0E00               	movlw	0
  5182  004B90  6F2E               	movwf	pf_readdir@res& (0+255),b
  5183  004B92                     l415:
  5184                           
  5185                           ; BSR set to: 1
  5186                           ;pff.c: 1115:  return res;
  5187  004B92  512E               	movf	pf_readdir@res& (0+255),w,b
  5188  004B94                     
  5189                           ; BSR set to: 1
  5190  004B94  0012               	return		;funcret
  5191  004B96                     __end_of_pf_readdir:
  5192                           	callstack 0
  5193                           
  5194 ;; *************** function _get_fileinfo *****************
  5195 ;; Defined at:
  5196 ;;		line 634 in file "pff.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  dj              2    5[COMRAM] PTR struct .
  5199 ;;		 -> main@dir(16), 
  5200 ;;  dir             2    7[COMRAM] PTR unsigned char 
  5201 ;;		 -> pf_readdir@dir(32), 
  5202 ;;  fno             2    9[COMRAM] PTR struct .
  5203 ;;		 -> main@fno(22), 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  p               2   37[COMRAM] PTR unsigned char 
  5206 ;;		 -> fno.fname(13), main@fno(22), 
  5207 ;;  i               1   40[COMRAM] unsigned char 
  5208 ;;  c               1   39[COMRAM] unsigned char 
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      void 
  5211 ;; Registers used:
  5212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5218 ;;      Params:         6       0       0       0       0       0       0
  5219 ;;      Locals:         4       0       0       0       0       0       0
  5220 ;;      Temps:         26       0       0       0       0       0       0
  5221 ;;      Totals:        36       0       0       0       0       0       0
  5222 ;;Total ram usage:       36 bytes
  5223 ;; Hardware stack levels used: 1
  5224 ;; Hardware stack levels required when called: 1
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_pf_readdir
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text13
  5233  002A26                     __ptext13:
  5234                           	callstack 0
  5235  002A26                     _get_fileinfo:
  5236                           	callstack 28
  5237  002A26                     
  5238                           ;pff.c: 635:  DIR *dj,;pff.c: 636:  BYTE *dir,;pff.c: 637:  FILINFO *fno;pff.c: 639: {;p
      +                          ff.c: 640:  BYTE i, c;;pff.c: 641:  char *p;;pff.c: 644:  p = fno->fname;
  5239  002A26  0E09               	movlw	9
  5240  002A28  240A               	addwf	get_fileinfo@fno^0,w,c
  5241  002A2A  6E26               	movwf	get_fileinfo@p^0,c
  5242  002A2C  0E00               	movlw	0
  5243  002A2E  200B               	addwfc	(get_fileinfo@fno+1)^0,w,c
  5244  002A30  6E27               	movwf	(get_fileinfo@p+1)^0,c
  5245  002A32                     
  5246                           ;pff.c: 645:  if (dj->sect) {
  5247  002A32  EE20 F00C          	lfsr	2,12
  5248  002A36  5006               	movf	get_fileinfo@dj^0,w,c
  5249  002A38  26D9               	addwf	fsr2l,f,c
  5250  002A3A  5007               	movf	(get_fileinfo@dj+1)^0,w,c
  5251  002A3C  22DA               	addwfc	fsr2h,f,c
  5252  002A3E  50DE               	movf	postinc2,w,c
  5253  002A40  10DE               	iorwf	postinc2,w,c
  5254  002A42  10DE               	iorwf	postinc2,w,c
  5255  002A44  10DE               	iorwf	postinc2,w,c
  5256  002A46  B4D8               	btfsc	status,2,c
  5257  002A48  EF28  F015         	goto	u6311
  5258  002A4C  EF2A  F015         	goto	u6310
  5259  002A50                     u6311:
  5260  002A50  EF4D  F016         	goto	l5451
  5261  002A54                     u6310:
  5262  002A54                     
  5263                           ;pff.c: 646:   for (i = 0; i < 8; i++) {
  5264  002A54  0E00               	movlw	0
  5265  002A56  6E29               	movwf	get_fileinfo@i^0,c
  5266  002A58                     l5399:
  5267                           
  5268                           ;pff.c: 647:    c = dir[i];
  5269  002A58  5029               	movf	get_fileinfo@i^0,w,c
  5270  002A5A  2408               	addwf	get_fileinfo@dir^0,w,c
  5271  002A5C  6ED9               	movwf	fsr2l,c
  5272  002A5E  0E00               	movlw	0
  5273  002A60  2009               	addwfc	(get_fileinfo@dir+1)^0,w,c
  5274  002A62  6EDA               	movwf	fsr2h,c
  5275  002A64  50DF               	movf	indf2,w,c
  5276  002A66  6E28               	movwf	get_fileinfo@c^0,c
  5277  002A68                     
  5278                           ;pff.c: 648:    if (c == ' ') break;
  5279  002A68  0E20               	movlw	32
  5280  002A6A  1828               	xorwf	get_fileinfo@c^0,w,c
  5281  002A6C  A4D8               	btfss	status,2,c
  5282  002A6E  EF3B  F015         	goto	u6321
  5283  002A72  EF3D  F015         	goto	u6320
  5284  002A76                     u6321:
  5285  002A76  EF3F  F015         	goto	l5405
  5286  002A7A                     u6320:
  5287  002A7A  EF5B  F015         	goto	l5417
  5288  002A7E                     l5405:
  5289                           
  5290                           ;pff.c: 649:    if (c == 0x05) c = 0xE5;
  5291  002A7E  0E05               	movlw	5
  5292  002A80  1828               	xorwf	get_fileinfo@c^0,w,c
  5293  002A82  A4D8               	btfss	status,2,c
  5294  002A84  EF46  F015         	goto	u6331
  5295  002A88  EF48  F015         	goto	u6330
  5296  002A8C                     u6331:
  5297  002A8C  EF4A  F015         	goto	l5409
  5298  002A90                     u6330:
  5299  002A90  0EE5               	movlw	229
  5300  002A92  6E28               	movwf	get_fileinfo@c^0,c
  5301  002A94                     l5409:
  5302                           
  5303                           ;pff.c: 650:    *p++ = c;
  5304  002A94  C026  FFD9         	movff	get_fileinfo@p,fsr2l
  5305  002A98  C027  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5306  002A9C  C028  FFDF         	movff	get_fileinfo@c,indf2
  5307  002AA0  4A26               	infsnz	get_fileinfo@p^0,f,c
  5308  002AA2  2A27               	incf	(get_fileinfo@p+1)^0,f,c
  5309  002AA4                     
  5310                           ;pff.c: 651:   }
  5311  002AA4  2A29               	incf	get_fileinfo@i^0,f,c
  5312  002AA6  0E07               	movlw	7
  5313  002AA8  6429               	cpfsgt	get_fileinfo@i^0,c
  5314  002AAA  EF59  F015         	goto	u6341
  5315  002AAE  EF5B  F015         	goto	u6340
  5316  002AB2                     u6341:
  5317  002AB2  EF2C  F015         	goto	l5399
  5318  002AB6                     u6340:
  5319  002AB6                     l5417:
  5320                           
  5321                           ;pff.c: 652:   if (dir[8] != ' ') {
  5322  002AB6  EE20 F008          	lfsr	2,8
  5323  002ABA  5008               	movf	get_fileinfo@dir^0,w,c
  5324  002ABC  26D9               	addwf	fsr2l,f,c
  5325  002ABE  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5326  002AC0  22DA               	addwfc	fsr2h,f,c
  5327  002AC2  0E20               	movlw	32
  5328  002AC4  18DE               	xorwf	postinc2,w,c
  5329  002AC6  B4D8               	btfsc	status,2,c
  5330  002AC8  EF68  F015         	goto	u6351
  5331  002ACC  EF6A  F015         	goto	u6350
  5332  002AD0                     u6351:
  5333  002AD0  EF98  F015         	goto	l5443
  5334  002AD4                     u6350:
  5335  002AD4                     
  5336                           ;pff.c: 653:    *p++ = '.';
  5337  002AD4  C026  FFD9         	movff	get_fileinfo@p,fsr2l
  5338  002AD8  C027  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5339  002ADC  0E2E               	movlw	46
  5340  002ADE  6EDF               	movwf	indf2,c
  5341  002AE0  4A26               	infsnz	get_fileinfo@p^0,f,c
  5342  002AE2  2A27               	incf	(get_fileinfo@p+1)^0,f,c
  5343  002AE4                     
  5344                           ;pff.c: 654:    for (i = 8; i < 11; i++) {
  5345  002AE4  0E08               	movlw	8
  5346  002AE6  6E29               	movwf	get_fileinfo@i^0,c
  5347  002AE8                     l5429:
  5348                           
  5349                           ;pff.c: 655:     c = dir[i];
  5350  002AE8  5029               	movf	get_fileinfo@i^0,w,c
  5351  002AEA  2408               	addwf	get_fileinfo@dir^0,w,c
  5352  002AEC  6ED9               	movwf	fsr2l,c
  5353  002AEE  0E00               	movlw	0
  5354  002AF0  2009               	addwfc	(get_fileinfo@dir+1)^0,w,c
  5355  002AF2  6EDA               	movwf	fsr2h,c
  5356  002AF4  50DF               	movf	indf2,w,c
  5357  002AF6  6E28               	movwf	get_fileinfo@c^0,c
  5358  002AF8                     
  5359                           ;pff.c: 656:     if (c == ' ') break;
  5360  002AF8  0E20               	movlw	32
  5361  002AFA  1828               	xorwf	get_fileinfo@c^0,w,c
  5362  002AFC  A4D8               	btfss	status,2,c
  5363  002AFE  EF83  F015         	goto	u6361
  5364  002B02  EF85  F015         	goto	u6360
  5365  002B06                     u6361:
  5366  002B06  EF87  F015         	goto	l5435
  5367  002B0A                     u6360:
  5368  002B0A  EF98  F015         	goto	l5443
  5369  002B0E                     l5435:
  5370                           
  5371                           ;pff.c: 657:     *p++ = c;
  5372  002B0E  C026  FFD9         	movff	get_fileinfo@p,fsr2l
  5373  002B12  C027  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5374  002B16  C028  FFDF         	movff	get_fileinfo@c,indf2
  5375  002B1A  4A26               	infsnz	get_fileinfo@p^0,f,c
  5376  002B1C  2A27               	incf	(get_fileinfo@p+1)^0,f,c
  5377  002B1E                     
  5378                           ;pff.c: 658:    }
  5379  002B1E  2A29               	incf	get_fileinfo@i^0,f,c
  5380  002B20  0E0A               	movlw	10
  5381  002B22  6429               	cpfsgt	get_fileinfo@i^0,c
  5382  002B24  EF96  F015         	goto	u6371
  5383  002B28  EF98  F015         	goto	u6370
  5384  002B2C                     u6371:
  5385  002B2C  EF74  F015         	goto	l5429
  5386  002B30                     u6370:
  5387  002B30                     l5443:
  5388                           
  5389                           ;pff.c: 660:   fno->fattrib = dir[11];
  5390  002B30  EE20 F00B          	lfsr	2,11
  5391  002B34  5008               	movf	get_fileinfo@dir^0,w,c
  5392  002B36  26D9               	addwf	fsr2l,f,c
  5393  002B38  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5394  002B3A  22DA               	addwfc	fsr2h,f,c
  5395  002B3C  EE10 F008          	lfsr	1,8
  5396  002B40  500A               	movf	get_fileinfo@fno^0,w,c
  5397  002B42  26E1               	addwf	fsr1l,f,c
  5398  002B44  500B               	movf	(get_fileinfo@fno+1)^0,w,c
  5399  002B46  22E2               	addwfc	fsr1h,f,c
  5400  002B48  CFDF FFE7          	movff	indf2,indf1
  5401  002B4C                     
  5402                           ;pff.c: 661:   fno->fsize = (DWORD)(((DWORD)*((BYTE*)(dir+28)+3)<<24)|((DWORD)*((BYTE*)(
      +                          dir+28)+2)<<16)|((WORD)*((BYTE*)(dir+28)+1)<<8)|*(BYTE*)(dir+28));
  5403  002B4C  EE20 F01D          	lfsr	2,29
  5404  002B50  5008               	movf	get_fileinfo@dir^0,w,c
  5405  002B52  26D9               	addwf	fsr2l,f,c
  5406  002B54  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5407  002B56  22DA               	addwfc	fsr2h,f,c
  5408  002B58  50DF               	movf	indf2,w,c
  5409  002B5A  6E0C               	movwf	??_get_fileinfo^0,c
  5410  002B5C  500C               	movf	??_get_fileinfo^0,w,c
  5411  002B5E  6E0E               	movwf	(??_get_fileinfo+2)^0,c
  5412  002B60  6A0D               	clrf	(??_get_fileinfo+1)^0,c
  5413  002B62  EE20 F01E          	lfsr	2,30
  5414  002B66  5008               	movf	get_fileinfo@dir^0,w,c
  5415  002B68  26D9               	addwf	fsr2l,f,c
  5416  002B6A  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5417  002B6C  22DA               	addwfc	fsr2h,f,c
  5418  002B6E  50DF               	movf	indf2,w,c
  5419  002B70  6E0F               	movwf	(??_get_fileinfo+3)^0,c
  5420  002B72  C00F  F010         	movff	??_get_fileinfo+3,??_get_fileinfo+4
  5421  002B76  6A11               	clrf	(??_get_fileinfo+5)^0,c
  5422  002B78  6A12               	clrf	(??_get_fileinfo+6)^0,c
  5423  002B7A  6A13               	clrf	(??_get_fileinfo+7)^0,c
  5424  002B7C  C011  F013         	movff	??_get_fileinfo+5,??_get_fileinfo+7
  5425  002B80  C010  F012         	movff	??_get_fileinfo+4,??_get_fileinfo+6
  5426  002B84  6A11               	clrf	(??_get_fileinfo+5)^0,c
  5427  002B86  6A10               	clrf	(??_get_fileinfo+4)^0,c
  5428  002B88  EE20 F01F          	lfsr	2,31
  5429  002B8C  5008               	movf	get_fileinfo@dir^0,w,c
  5430  002B8E  26D9               	addwf	fsr2l,f,c
  5431  002B90  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5432  002B92  22DA               	addwfc	fsr2h,f,c
  5433  002B94  50DF               	movf	indf2,w,c
  5434  002B96  6E14               	movwf	(??_get_fileinfo+8)^0,c
  5435  002B98  C014  F015         	movff	??_get_fileinfo+8,??_get_fileinfo+9
  5436  002B9C  6A16               	clrf	(??_get_fileinfo+10)^0,c
  5437  002B9E  6A17               	clrf	(??_get_fileinfo+11)^0,c
  5438  002BA0  6A18               	clrf	(??_get_fileinfo+12)^0,c
  5439  002BA2  C015  F018         	movff	??_get_fileinfo+9,??_get_fileinfo+12
  5440  002BA6  6A17               	clrf	(??_get_fileinfo+11)^0,c
  5441  002BA8  6A16               	clrf	(??_get_fileinfo+10)^0,c
  5442  002BAA  6A15               	clrf	(??_get_fileinfo+9)^0,c
  5443  002BAC  5010               	movf	(??_get_fileinfo+4)^0,w,c
  5444  002BAE  1015               	iorwf	(??_get_fileinfo+9)^0,w,c
  5445  002BB0  6E19               	movwf	(??_get_fileinfo+13)^0,c
  5446  002BB2  5011               	movf	(??_get_fileinfo+5)^0,w,c
  5447  002BB4  1016               	iorwf	(??_get_fileinfo+10)^0,w,c
  5448  002BB6  6E1A               	movwf	(??_get_fileinfo+14)^0,c
  5449  002BB8  5012               	movf	(??_get_fileinfo+6)^0,w,c
  5450  002BBA  1017               	iorwf	(??_get_fileinfo+11)^0,w,c
  5451  002BBC  6E1B               	movwf	(??_get_fileinfo+15)^0,c
  5452  002BBE  5013               	movf	(??_get_fileinfo+7)^0,w,c
  5453  002BC0  1018               	iorwf	(??_get_fileinfo+12)^0,w,c
  5454  002BC2  6E1C               	movwf	(??_get_fileinfo+16)^0,c
  5455  002BC4  500D               	movf	(??_get_fileinfo+1)^0,w,c
  5456  002BC6  1019               	iorwf	(??_get_fileinfo+13)^0,w,c
  5457  002BC8  6E1D               	movwf	(??_get_fileinfo+17)^0,c
  5458  002BCA  500E               	movf	(??_get_fileinfo+2)^0,w,c
  5459  002BCC  101A               	iorwf	(??_get_fileinfo+14)^0,w,c
  5460  002BCE  6E1E               	movwf	(??_get_fileinfo+18)^0,c
  5461  002BD0  0E00               	movlw	0
  5462  002BD2  101B               	iorwf	(??_get_fileinfo+15)^0,w,c
  5463  002BD4  6E1F               	movwf	(??_get_fileinfo+19)^0,c
  5464  002BD6  0E00               	movlw	0
  5465  002BD8  101C               	iorwf	(??_get_fileinfo+16)^0,w,c
  5466  002BDA  6E20               	movwf	(??_get_fileinfo+20)^0,c
  5467  002BDC  EE20 F01C          	lfsr	2,28
  5468  002BE0  5008               	movf	get_fileinfo@dir^0,w,c
  5469  002BE2  26D9               	addwf	fsr2l,f,c
  5470  002BE4  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5471  002BE6  22DA               	addwfc	fsr2h,f,c
  5472  002BE8  50DF               	movf	indf2,w,c
  5473  002BEA  6E21               	movwf	(??_get_fileinfo+21)^0,c
  5474  002BEC  5021               	movf	(??_get_fileinfo+21)^0,w,c
  5475  002BEE  101D               	iorwf	(??_get_fileinfo+17)^0,w,c
  5476  002BF0  6E22               	movwf	(??_get_fileinfo+22)^0,c
  5477  002BF2  501E               	movf	(??_get_fileinfo+18)^0,w,c
  5478  002BF4  6E23               	movwf	(??_get_fileinfo+23)^0,c
  5479  002BF6  501F               	movf	(??_get_fileinfo+19)^0,w,c
  5480  002BF8  6E24               	movwf	(??_get_fileinfo+24)^0,c
  5481  002BFA  5020               	movf	(??_get_fileinfo+20)^0,w,c
  5482  002BFC  6E25               	movwf	(??_get_fileinfo+25)^0,c
  5483  002BFE  C00A  FFD9         	movff	get_fileinfo@fno,fsr2l
  5484  002C02  C00B  FFDA         	movff	get_fileinfo@fno+1,fsr2h
  5485  002C06  C022  FFDE         	movff	??_get_fileinfo+22,postinc2
  5486  002C0A  C023  FFDE         	movff	??_get_fileinfo+23,postinc2
  5487  002C0E  C024  FFDE         	movff	??_get_fileinfo+24,postinc2
  5488  002C12  C025  FFDE         	movff	??_get_fileinfo+25,postinc2
  5489  002C16                     
  5490                           ;pff.c: 662:   fno->fdate = (WORD)(((WORD)*((BYTE*)(dir+24)+1)<<8)|(WORD)*(BYTE*)(dir+24
      +                          ));
  5491  002C16  EE20 F019          	lfsr	2,25
  5492  002C1A  5008               	movf	get_fileinfo@dir^0,w,c
  5493  002C1C  26D9               	addwf	fsr2l,f,c
  5494  002C1E  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5495  002C20  22DA               	addwfc	fsr2h,f,c
  5496  002C22  50DF               	movf	indf2,w,c
  5497  002C24  6E0C               	movwf	??_get_fileinfo^0,c
  5498  002C26  500C               	movf	??_get_fileinfo^0,w,c
  5499  002C28  6E0E               	movwf	(??_get_fileinfo+2)^0,c
  5500  002C2A  6A0D               	clrf	(??_get_fileinfo+1)^0,c
  5501  002C2C  EE20 F018          	lfsr	2,24
  5502  002C30  5008               	movf	get_fileinfo@dir^0,w,c
  5503  002C32  26D9               	addwf	fsr2l,f,c
  5504  002C34  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5505  002C36  22DA               	addwfc	fsr2h,f,c
  5506  002C38  50DF               	movf	indf2,w,c
  5507  002C3A  6E0F               	movwf	(??_get_fileinfo+3)^0,c
  5508  002C3C  500F               	movf	(??_get_fileinfo+3)^0,w,c
  5509  002C3E  120D               	iorwf	(??_get_fileinfo+1)^0,f,c
  5510  002C40  0E00               	movlw	0
  5511  002C42  120E               	iorwf	(??_get_fileinfo+2)^0,f,c
  5512  002C44  EE20 F004          	lfsr	2,4
  5513  002C48  500A               	movf	get_fileinfo@fno^0,w,c
  5514  002C4A  26D9               	addwf	fsr2l,f,c
  5515  002C4C  500B               	movf	(get_fileinfo@fno+1)^0,w,c
  5516  002C4E  22DA               	addwfc	fsr2h,f,c
  5517  002C50  C00D  FFDE         	movff	??_get_fileinfo+1,postinc2
  5518  002C54  C00E  FFDD         	movff	??_get_fileinfo+2,postdec2
  5519  002C58                     
  5520                           ;pff.c: 663:   fno->ftime = (WORD)(((WORD)*((BYTE*)(dir+22)+1)<<8)|(WORD)*(BYTE*)(dir+22
      +                          ));
  5521  002C58  EE20 F017          	lfsr	2,23
  5522  002C5C  5008               	movf	get_fileinfo@dir^0,w,c
  5523  002C5E  26D9               	addwf	fsr2l,f,c
  5524  002C60  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5525  002C62  22DA               	addwfc	fsr2h,f,c
  5526  002C64  50DF               	movf	indf2,w,c
  5527  002C66  6E0C               	movwf	??_get_fileinfo^0,c
  5528  002C68  500C               	movf	??_get_fileinfo^0,w,c
  5529  002C6A  6E0E               	movwf	(??_get_fileinfo+2)^0,c
  5530  002C6C  6A0D               	clrf	(??_get_fileinfo+1)^0,c
  5531  002C6E  EE20 F016          	lfsr	2,22
  5532  002C72  5008               	movf	get_fileinfo@dir^0,w,c
  5533  002C74  26D9               	addwf	fsr2l,f,c
  5534  002C76  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5535  002C78  22DA               	addwfc	fsr2h,f,c
  5536  002C7A  50DF               	movf	indf2,w,c
  5537  002C7C  6E0F               	movwf	(??_get_fileinfo+3)^0,c
  5538  002C7E  500F               	movf	(??_get_fileinfo+3)^0,w,c
  5539  002C80  120D               	iorwf	(??_get_fileinfo+1)^0,f,c
  5540  002C82  0E00               	movlw	0
  5541  002C84  120E               	iorwf	(??_get_fileinfo+2)^0,f,c
  5542  002C86  EE20 F006          	lfsr	2,6
  5543  002C8A  500A               	movf	get_fileinfo@fno^0,w,c
  5544  002C8C  26D9               	addwf	fsr2l,f,c
  5545  002C8E  500B               	movf	(get_fileinfo@fno+1)^0,w,c
  5546  002C90  22DA               	addwfc	fsr2h,f,c
  5547  002C92  C00D  FFDE         	movff	??_get_fileinfo+1,postinc2
  5548  002C96  C00E  FFDD         	movff	??_get_fileinfo+2,postdec2
  5549  002C9A                     l5451:
  5550                           
  5551                           ;pff.c: 665:  *p = 0;
  5552  002C9A  C026  FFD9         	movff	get_fileinfo@p,fsr2l
  5553  002C9E  C027  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5554  002CA2  0E00               	movlw	0
  5555  002CA4  6EDF               	movwf	indf2,c
  5556  002CA6  0012               	return		;funcret
  5557  002CA8                     __end_of_get_fileinfo:
  5558                           	callstack 0
  5559                           
  5560 ;; *************** function _dir_read *****************
  5561 ;; Defined at:
  5562 ;;		line 540 in file "pff.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  dj              2   83[BANK0 ] PTR struct .
  5565 ;;		 -> main@dir(16), 
  5566 ;;  dir             2   85[BANK0 ] PTR unsigned char 
  5567 ;;		 -> pf_readdir@dir(32), 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  res             1   93[BANK0 ] enum E2600
  5570 ;;  c               1   92[BANK0 ] unsigned char 
  5571 ;;  a               1   91[BANK0 ] unsigned char 
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1    wreg      enum E2600
  5574 ;; Registers used:
  5575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5581 ;;      Params:         0       4       0       0       0       0       0
  5582 ;;      Locals:         0       3       0       0       0       0       0
  5583 ;;      Temps:          0       4       0       0       0       0       0
  5584 ;;      Totals:         0      11       0       0       0       0       0
  5585 ;;Total ram usage:       11 bytes
  5586 ;; Hardware stack levels used: 1
  5587 ;; Hardware stack levels required when called: 12
  5588 ;; This function calls:
  5589 ;;		_dir_next
  5590 ;;		_disk_readp
  5591 ;; This function is called by:
  5592 ;;		_pf_readdir
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text14
  5597  0040D8                     __ptext14:
  5598                           	callstack 0
  5599  0040D8                     _dir_read:
  5600                           	callstack 17
  5601  0040D8                     
  5602                           ;pff.c: 541:  DIR *dj,;pff.c: 542:  BYTE *dir;pff.c: 544: {;pff.c: 545:  FRESULT res;;pf
      +                          f.c: 546:  BYTE a, c;;pff.c: 549:  res = FR_NO_FILE;
  5603  0040D8  0E03               	movlw	3
  5604  0040DA  0100               	movlb	0	; () banked
  5605  0040DC  6FDD               	movwf	dir_read@res& (0+255),b
  5606                           
  5607                           ;pff.c: 550:  while (dj->sect) {
  5608  0040DE  EFFE  F020         	goto	l7797
  5609  0040E2                     l7769:
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;pff.c: 551:   res = disk_readp(dir, dj->sect, (dj->index % 16) * 32, 32)
  5613  0040E2  C0D5  F092         	movff	dir_read@dir,disk_readp@buff
  5614  0040E6  C0D6  F093         	movff	dir_read@dir+1,disk_readp@buff+1
  5615  0040EA  EE20 F00C          	lfsr	2,12
  5616  0040EE  51D3               	movf	dir_read@dj& (0+255),w,b
  5617  0040F0  26D9               	addwf	fsr2l,f,c
  5618  0040F2  51D4               	movf	(dir_read@dj+1)& (0+255),w,b
  5619  0040F4  22DA               	addwfc	fsr2h,f,c
  5620  0040F6  CFDE F094          	movff	postinc2,disk_readp@sector
  5621  0040FA  CFDE F095          	movff	postinc2,disk_readp@sector+1
  5622  0040FE  CFDE F096          	movff	postinc2,disk_readp@sector+2
  5623  004102  CFDE F097          	movff	postinc2,disk_readp@sector+3
  5624  004106  C0D3  FFD9         	movff	dir_read@dj,fsr2l
  5625  00410A  C0D4  FFDA         	movff	dir_read@dj+1,fsr2h
  5626  00410E  CFDE F0D7          	movff	postinc2,??_dir_read
  5627  004112  CFDD F0D8          	movff	postdec2,??_dir_read+1
  5628  004116  0E0F               	movlw	15
  5629  004118  17D7               	andwf	??_dir_read& (0+255),f,b
  5630  00411A  0E00               	movlw	0
  5631  00411C  17D8               	andwf	(??_dir_read+1)& (0+255),f,b
  5632  00411E  0E05               	movlw	5
  5633  004120                     u10005:
  5634  004120  90D8               	bcf	status,0,c
  5635  004122  37D7               	rlcf	??_dir_read& (0+255),f,b
  5636  004124  37D8               	rlcf	(??_dir_read+1)& (0+255),f,b
  5637  004126  2EE8               	decfsz	wreg,f,c
  5638  004128  EF90  F020         	goto	u10005
  5639  00412C  C0D7  F098         	movff	??_dir_read,disk_readp@offset
  5640  004130  C0D8  F099         	movff	??_dir_read+1,disk_readp@offset+1
  5641  004134  0E00               	movlw	0
  5642  004136  6F9B               	movwf	(disk_readp@count+1)& (0+255),b
  5643  004138  0E20               	movlw	32
  5644  00413A  6F9A               	movwf	disk_readp@count& (0+255),b
  5645  00413C  ECDC  F01B         	call	_disk_readp	;wreg free
  5646  004140  0900               	iorlw	0
  5647  004142  A4D8               	btfss	status,2,c
  5648  004144  EFA6  F020         	goto	u10011
  5649  004148  EFA9  F020         	goto	u10010
  5650  00414C                     u10011:
  5651  00414C  0E01               	movlw	1
  5652  00414E  EFAA  F020         	goto	u10020
  5653  004152                     u10010:
  5654  004152  0E00               	movlw	0
  5655  004154                     u10020:
  5656  004154  0100               	movlb	0	; () banked
  5657  004156  6FDD               	movwf	dir_read@res& (0+255),b
  5658  004158                     
  5659                           ; BSR set to: 0
  5660                           ;pff.c: 553:   if (res != FR_OK) break;
  5661  004158  51DD               	movf	dir_read@res& (0+255),w,b
  5662  00415A  B4D8               	btfsc	status,2,c
  5663  00415C  EFB2  F020         	goto	u10031
  5664  004160  EFB4  F020         	goto	u10030
  5665  004164                     u10031:
  5666  004164  EFB6  F020         	goto	l7775
  5667  004168                     u10030:
  5668  004168  EF0F  F021         	goto	l7799
  5669  00416C                     l7775:
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;pff.c: 554:   c = dir[0];
  5673  00416C  C0D5  FFD9         	movff	dir_read@dir,fsr2l
  5674  004170  C0D6  FFDA         	movff	dir_read@dir+1,fsr2h
  5675  004174  50DF               	movf	indf2,w,c
  5676  004176  6FDC               	movwf	dir_read@c& (0+255),b
  5677  004178                     
  5678                           ; BSR set to: 0
  5679                           ;pff.c: 555:   if (c == 0) { res = FR_NO_FILE; break; }
  5680  004178  51DC               	movf	dir_read@c& (0+255),w,b
  5681  00417A  A4D8               	btfss	status,2,c
  5682  00417C  EFC2  F020         	goto	u10041
  5683  004180  EFC4  F020         	goto	u10040
  5684  004184                     u10041:
  5685  004184  EFC8  F020         	goto	l7781
  5686  004188                     u10040:
  5687  004188                     
  5688                           ; BSR set to: 0
  5689  004188  0E03               	movlw	3
  5690  00418A  6FDD               	movwf	dir_read@res& (0+255),b
  5691  00418C  EF0F  F021         	goto	l7799
  5692  004190                     l7781:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;pff.c: 556:   a = dir[11] & 0x3F;
  5696  004190  EE20 F00B          	lfsr	2,11
  5697  004194  51D5               	movf	dir_read@dir& (0+255),w,b
  5698  004196  26D9               	addwf	fsr2l,f,c
  5699  004198  51D6               	movf	(dir_read@dir+1)& (0+255),w,b
  5700  00419A  22DA               	addwfc	fsr2h,f,c
  5701  00419C  50DF               	movf	indf2,w,c
  5702  00419E  0B3F               	andlw	63
  5703  0041A0  6FDB               	movwf	dir_read@a& (0+255),b
  5704  0041A2                     
  5705                           ; BSR set to: 0
  5706                           ;pff.c: 557:   if (c != 0xE5 && c != '.' && !(a & 0x08))
  5707  0041A2  0EE5               	movlw	229
  5708  0041A4  19DC               	xorwf	dir_read@c& (0+255),w,b
  5709  0041A6  B4D8               	btfsc	status,2,c
  5710  0041A8  EFD8  F020         	goto	u10051
  5711  0041AC  EFDA  F020         	goto	u10050
  5712  0041B0                     u10051:
  5713  0041B0  EFEC  F020         	goto	l7791
  5714  0041B4                     u10050:
  5715  0041B4                     
  5716                           ; BSR set to: 0
  5717  0041B4  0E2E               	movlw	46
  5718  0041B6  19DC               	xorwf	dir_read@c& (0+255),w,b
  5719  0041B8  B4D8               	btfsc	status,2,c
  5720  0041BA  EFE1  F020         	goto	u10061
  5721  0041BE  EFE3  F020         	goto	u10060
  5722  0041C2                     u10061:
  5723  0041C2  EFEC  F020         	goto	l7791
  5724  0041C6                     u10060:
  5725  0041C6                     
  5726                           ; BSR set to: 0
  5727  0041C6  B7DB               	btfsc	dir_read@a& (0+255),3,b
  5728  0041C8  EFE8  F020         	goto	u10071
  5729  0041CC  EFEA  F020         	goto	u10070
  5730  0041D0                     u10071:
  5731  0041D0  EFEC  F020         	goto	l7791
  5732  0041D4                     u10070:
  5733  0041D4  EF0F  F021         	goto	l7799
  5734  0041D8                     l7791:
  5735                           
  5736                           ; BSR set to: 0
  5737                           ;pff.c: 559:   res = dir_next(dj);
  5738  0041D8  C0D3  F0C2         	movff	dir_read@dj,dir_next@dj
  5739  0041DC  C0D4  F0C3         	movff	dir_read@dj+1,dir_next@dj+1
  5740  0041E0  EC54  F016         	call	_dir_next	;wreg free
  5741  0041E4  0100               	movlb	0	; () banked
  5742  0041E6  6FDD               	movwf	dir_read@res& (0+255),b
  5743  0041E8                     
  5744                           ; BSR set to: 0
  5745                           ;pff.c: 560:   if (res != FR_OK) break;
  5746  0041E8  51DD               	movf	dir_read@res& (0+255),w,b
  5747  0041EA  B4D8               	btfsc	status,2,c
  5748  0041EC  EFFA  F020         	goto	u10081
  5749  0041F0  EFFC  F020         	goto	u10080
  5750  0041F4                     u10081:
  5751  0041F4  EFFE  F020         	goto	l7797
  5752  0041F8                     u10080:
  5753  0041F8  EF0F  F021         	goto	l7799
  5754  0041FC                     l7797:
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;pff.c: 550:  while (dj->sect) {
  5758  0041FC  EE20 F00C          	lfsr	2,12
  5759  004200  51D3               	movf	dir_read@dj& (0+255),w,b
  5760  004202  26D9               	addwf	fsr2l,f,c
  5761  004204  51D4               	movf	(dir_read@dj+1)& (0+255),w,b
  5762  004206  22DA               	addwfc	fsr2h,f,c
  5763  004208  50DE               	movf	postinc2,w,c
  5764  00420A  10DE               	iorwf	postinc2,w,c
  5765  00420C  10DE               	iorwf	postinc2,w,c
  5766  00420E  10DE               	iorwf	postinc2,w,c
  5767  004210  A4D8               	btfss	status,2,c
  5768  004212  EF0D  F021         	goto	u10091
  5769  004216  EF0F  F021         	goto	u10090
  5770  00421A                     u10091:
  5771  00421A  EF71  F020         	goto	l7769
  5772  00421E                     u10090:
  5773  00421E                     l7799:
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;pff.c: 563:  if (res != FR_OK) dj->sect = 0;
  5777  00421E  51DD               	movf	dir_read@res& (0+255),w,b
  5778  004220  B4D8               	btfsc	status,2,c
  5779  004222  EF15  F021         	goto	u10101
  5780  004226  EF17  F021         	goto	u10100
  5781  00422A                     u10101:
  5782  00422A  EF21  F021         	goto	l7803
  5783  00422E                     u10100:
  5784  00422E                     
  5785                           ; BSR set to: 0
  5786  00422E  EE20 F00C          	lfsr	2,12
  5787  004232  51D3               	movf	dir_read@dj& (0+255),w,b
  5788  004234  26D9               	addwf	fsr2l,f,c
  5789  004236  51D4               	movf	(dir_read@dj+1)& (0+255),w,b
  5790  004238  22DA               	addwfc	fsr2h,f,c
  5791  00423A  6ADE               	clrf	postinc2,c
  5792  00423C  6ADE               	clrf	postinc2,c
  5793  00423E  6ADE               	clrf	postinc2,c
  5794  004240  6ADD               	clrf	postdec2,c
  5795  004242                     l7803:
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;pff.c: 565:  return res;
  5799  004242  51DD               	movf	dir_read@res& (0+255),w,b
  5800  004244                     
  5801                           ; BSR set to: 0
  5802  004244  0012               	return		;funcret
  5803  004246                     __end_of_dir_read:
  5804                           	callstack 0
  5805                           
  5806 ;; *************** function _pf_read *****************
  5807 ;; Defined at:
  5808 ;;		line 863 in file "pff.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  buff            2   66[BANK0 ] PTR void 
  5811 ;;		 -> NULL(0), Line(128), 
  5812 ;;  btr             2   68[BANK0 ] unsigned int 
  5813 ;;  br              2   70[BANK0 ] PTR unsigned int 
  5814 ;;		 -> main@s1(2), 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  clst            4   93[BANK0 ] unsigned long 
  5817 ;;  remain          4   89[BANK0 ] unsigned long 
  5818 ;;  sect            4   85[BANK0 ] unsigned long 
  5819 ;;  fs              2  100[BANK0 ] PTR struct .
  5820 ;;		 -> NULL(0), main@fs(42), 
  5821 ;;  rcnt            2   98[BANK0 ] unsigned int 
  5822 ;;  rbuff           2   81[BANK0 ] PTR unsigned char 
  5823 ;;		 -> NULL(0), Line(128), 
  5824 ;;  cs              1   97[BANK0 ] unsigned char 
  5825 ;;  dr              1   80[BANK0 ] enum E2630
  5826 ;; Return value:  Size  Location     Type
  5827 ;;                  1    wreg      enum E3114
  5828 ;; Registers used:
  5829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5835 ;;      Params:         0       6       0       0       0       0       0
  5836 ;;      Locals:         0      22       0       0       0       0       0
  5837 ;;      Temps:          0       8       0       0       0       0       0
  5838 ;;      Totals:         0      36       0       0       0       0       0
  5839 ;;Total ram usage:       36 bytes
  5840 ;; Hardware stack levels used: 1
  5841 ;; Hardware stack levels required when called: 11
  5842 ;; This function calls:
  5843 ;;		_clust2sect
  5844 ;;		_disk_readp
  5845 ;;		_get_fat
  5846 ;; This function is called by:
  5847 ;;		_main
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text15
  5852  001B0E                     __ptext15:
  5853                           	callstack 0
  5854  001B0E                     _pf_read:
  5855                           	callstack 19
  5856  001B0E                     
  5857                           ;pff.c: 864:  void* buff,;pff.c: 865:  UINT btr,;pff.c: 866:  UINT* br;pff.c: 868: {;pff
      +                          .c: 869:  DRESULT dr;;pff.c: 870:  DWORD clst;;pff.c: 871:  DWORD sect, remain;;pff.c: 8
      +                          72:  UINT rcnt;;pff.c: 873:  BYTE cs, *rbuff = buff;
  5858  001B0E  C0C2  F0D1         	movff	pf_read@buff,pf_read@rbuff
  5859  001B12  C0C3  F0D2         	movff	pf_read@buff+1,pf_read@rbuff+1
  5860                           
  5861                           ;pff.c: 874:  FATFS *fs = FatFs;
  5862  001B16  C0F1  F0E4         	movff	_FatFs,pf_read@fs
  5863  001B1A  C0F2  F0E5         	movff	_FatFs+1,pf_read@fs+1
  5864  001B1E                     
  5865                           ;pff.c: 876:  *br = 0;
  5866  001B1E  C0C6  FFD9         	movff	pf_read@br,fsr2l
  5867  001B22  C0C7  FFDA         	movff	pf_read@br+1,fsr2h
  5868  001B26  0E00               	movlw	0
  5869  001B28  6EDE               	movwf	postinc2,c
  5870  001B2A  0E00               	movlw	0
  5871  001B2C  6EDD               	movwf	postdec2,c
  5872  001B2E                     
  5873                           ;pff.c: 877:  if (!fs) return FR_NOT_ENABLED;
  5874  001B2E  0100               	movlb	0	; () banked
  5875  001B30  51E4               	movf	pf_read@fs& (0+255),w,b
  5876  001B32  11E5               	iorwf	(pf_read@fs+1)& (0+255),w,b
  5877  001B34  A4D8               	btfss	status,2,c
  5878  001B36  EF9F  F00D         	goto	u10711
  5879  001B3A  EFA1  F00D         	goto	u10710
  5880  001B3E                     u10711:
  5881  001B3E  EFA4  F00D         	goto	l8255
  5882  001B42                     u10710:
  5883  001B42                     
  5884                           ; BSR set to: 0
  5885  001B42  0E05               	movlw	5
  5886  001B44  EF87  F00F         	goto	l344
  5887  001B48                     l8255:
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;pff.c: 878:  if (!(fs->flag & 0x01))
  5891  001B48  EE20 F001          	lfsr	2,1
  5892  001B4C  51E4               	movf	pf_read@fs& (0+255),w,b
  5893  001B4E  26D9               	addwf	fsr2l,f,c
  5894  001B50  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  5895  001B52  22DA               	addwfc	fsr2h,f,c
  5896  001B54  B0DF               	btfsc	indf2,0,c
  5897  001B56  EFAF  F00D         	goto	u10721
  5898  001B5A  EFB1  F00D         	goto	u10720
  5899  001B5E                     u10721:
  5900  001B5E  EFB4  F00D         	goto	l8261
  5901  001B62                     u10720:
  5902  001B62                     
  5903                           ; BSR set to: 0
  5904                           ;pff.c: 879:   return FR_NOT_OPENED;
  5905  001B62  0E04               	movlw	4
  5906  001B64  EF87  F00F         	goto	l344
  5907  001B68                     l8261:
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;pff.c: 881:  remain = fs->fsize - fs->fptr;
  5911  001B68  EE20 F016          	lfsr	2,22
  5912  001B6C  51E4               	movf	pf_read@fs& (0+255),w,b
  5913  001B6E  26D9               	addwf	fsr2l,f,c
  5914  001B70  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  5915  001B72  22DA               	addwfc	fsr2h,f,c
  5916  001B74  CFDE F0C8          	movff	postinc2,??_pf_read
  5917  001B78  CFDE F0C9          	movff	postinc2,??_pf_read+1
  5918  001B7C  CFDE F0CA          	movff	postinc2,??_pf_read+2
  5919  001B80  CFDE F0CB          	movff	postinc2,??_pf_read+3
  5920  001B84  EE20 F01A          	lfsr	2,26
  5921  001B88  51E4               	movf	pf_read@fs& (0+255),w,b
  5922  001B8A  26D9               	addwf	fsr2l,f,c
  5923  001B8C  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  5924  001B8E  22DA               	addwfc	fsr2h,f,c
  5925  001B90  CFDE F0CC          	movff	postinc2,??_pf_read+4
  5926  001B94  CFDE F0CD          	movff	postinc2,??_pf_read+5
  5927  001B98  CFDE F0CE          	movff	postinc2,??_pf_read+6
  5928  001B9C  CFDE F0CF          	movff	postinc2,??_pf_read+7
  5929  001BA0  51C8               	movf	??_pf_read& (0+255),w,b
  5930  001BA2  5DCC               	subwf	(??_pf_read+4)& (0+255),w,b
  5931  001BA4  6FD9               	movwf	pf_read@remain& (0+255),b
  5932  001BA6  51C9               	movf	(??_pf_read+1)& (0+255),w,b
  5933  001BA8  59CD               	subwfb	(??_pf_read+5)& (0+255),w,b
  5934  001BAA  6FDA               	movwf	(pf_read@remain+1)& (0+255),b
  5935  001BAC  51CA               	movf	(??_pf_read+2)& (0+255),w,b
  5936  001BAE  59CE               	subwfb	(??_pf_read+6)& (0+255),w,b
  5937  001BB0  6FDB               	movwf	(pf_read@remain+2)& (0+255),b
  5938  001BB2  51CB               	movf	(??_pf_read+3)& (0+255),w,b
  5939  001BB4  59CF               	subwfb	(??_pf_read+7)& (0+255),w,b
  5940  001BB6  6FDC               	movwf	(pf_read@remain+3)& (0+255),b
  5941  001BB8                     
  5942                           ; BSR set to: 0
  5943                           ;pff.c: 882:  if (btr > remain) btr = (UINT)remain;
  5944  001BB8  51C4               	movf	pf_read@btr& (0+255),w,b
  5945  001BBA  6FC8               	movwf	??_pf_read& (0+255),b
  5946  001BBC  51C5               	movf	(pf_read@btr+1)& (0+255),w,b
  5947  001BBE  6FC9               	movwf	(??_pf_read+1)& (0+255),b
  5948  001BC0  6BCA               	clrf	(??_pf_read+2)& (0+255),b
  5949  001BC2  6BCB               	clrf	(??_pf_read+3)& (0+255),b
  5950  001BC4  51C8               	movf	??_pf_read& (0+255),w,b
  5951  001BC6  5DD9               	subwf	pf_read@remain& (0+255),w,b
  5952  001BC8  51C9               	movf	(??_pf_read+1)& (0+255),w,b
  5953  001BCA  59DA               	subwfb	(pf_read@remain+1)& (0+255),w,b
  5954  001BCC  51CA               	movf	(??_pf_read+2)& (0+255),w,b
  5955  001BCE  59DB               	subwfb	(pf_read@remain+2)& (0+255),w,b
  5956  001BD0  51CB               	movf	(??_pf_read+3)& (0+255),w,b
  5957  001BD2  59DC               	subwfb	(pf_read@remain+3)& (0+255),w,b
  5958  001BD4  B0D8               	btfsc	status,0,c
  5959  001BD6  EFEF  F00D         	goto	u10731
  5960  001BDA  EFF1  F00D         	goto	u10730
  5961  001BDE                     u10731:
  5962  001BDE  EF7D  F00F         	goto	l8329
  5963  001BE2                     u10730:
  5964  001BE2                     
  5965                           ; BSR set to: 0
  5966  001BE2  C0D9  F0C4         	movff	pf_read@remain,pf_read@btr
  5967  001BE6  C0DA  F0C5         	movff	pf_read@remain+1,pf_read@btr+1
  5968  001BEA  EF7D  F00F         	goto	l8329
  5969  001BEE                     l8267:
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;pff.c: 885:   if ((fs->fptr % 512) == 0) {
  5973  001BEE  EE20 F016          	lfsr	2,22
  5974  001BF2  51E4               	movf	pf_read@fs& (0+255),w,b
  5975  001BF4  26D9               	addwf	fsr2l,f,c
  5976  001BF6  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  5977  001BF8  22DA               	addwfc	fsr2h,f,c
  5978  001BFA  0EFF               	movlw	255
  5979  001BFC  14DE               	andwf	postinc2,w,c
  5980  001BFE  6FC8               	movwf	??_pf_read& (0+255),b
  5981  001C00  0E01               	movlw	1
  5982  001C02  14DE               	andwf	postinc2,w,c
  5983  001C04  6FC9               	movwf	(??_pf_read+1)& (0+255),b
  5984  001C06  0E00               	movlw	0
  5985  001C08  14DE               	andwf	postinc2,w,c
  5986  001C0A  6FCA               	movwf	(??_pf_read+2)& (0+255),b
  5987  001C0C  0E00               	movlw	0
  5988  001C0E  14DE               	andwf	postinc2,w,c
  5989  001C10  6FCB               	movwf	(??_pf_read+3)& (0+255),b
  5990  001C12  51C8               	movf	??_pf_read& (0+255),w,b
  5991  001C14  11C9               	iorwf	(??_pf_read+1)& (0+255),w,b
  5992  001C16  11CA               	iorwf	(??_pf_read+2)& (0+255),w,b
  5993  001C18  11CB               	iorwf	(??_pf_read+3)& (0+255),w,b
  5994  001C1A  A4D8               	btfss	status,2,c
  5995  001C1C  EF12  F00E         	goto	u10741
  5996  001C20  EF14  F00E         	goto	u10740
  5997  001C24                     u10741:
  5998  001C24  EFE8  F00E         	goto	l349
  5999  001C28                     u10740:
  6000  001C28                     
  6001                           ; BSR set to: 0
  6002                           ;pff.c: 886:    cs = (BYTE)(fs->fptr / 512 & (fs->csize - 1));
  6003  001C28  EE20 F016          	lfsr	2,22
  6004  001C2C  51E4               	movf	pf_read@fs& (0+255),w,b
  6005  001C2E  26D9               	addwf	fsr2l,f,c
  6006  001C30  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6007  001C32  22DA               	addwfc	fsr2h,f,c
  6008  001C34  CFDE F0C8          	movff	postinc2,??_pf_read
  6009  001C38  CFDE F0C9          	movff	postinc2,??_pf_read+1
  6010  001C3C  CFDE F0CA          	movff	postinc2,??_pf_read+2
  6011  001C40  CFDE F0CB          	movff	postinc2,??_pf_read+3
  6012  001C44  0E0A               	movlw	10
  6013  001C46  EF2A  F00E         	goto	u10750
  6014  001C4A                     u10755:
  6015  001C4A  90D8               	bcf	status,0,c
  6016  001C4C  33CB               	rrcf	(??_pf_read+3)& (0+255),f,b
  6017  001C4E  33CA               	rrcf	(??_pf_read+2)& (0+255),f,b
  6018  001C50  33C9               	rrcf	(??_pf_read+1)& (0+255),f,b
  6019  001C52  33C8               	rrcf	??_pf_read& (0+255),f,b
  6020  001C54                     u10750:
  6021  001C54  2EE8               	decfsz	wreg,f,c
  6022  001C56  EF25  F00E         	goto	u10755
  6023  001C5A  EE20 F002          	lfsr	2,2
  6024  001C5E  51E4               	movf	pf_read@fs& (0+255),w,b
  6025  001C60  26D9               	addwf	fsr2l,f,c
  6026  001C62  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6027  001C64  22DA               	addwfc	fsr2h,f,c
  6028  001C66  50DF               	movf	indf2,w,c
  6029  001C68  6FCC               	movwf	(??_pf_read+4)& (0+255),b
  6030  001C6A  05CC               	decf	(??_pf_read+4)& (0+255),w,b
  6031  001C6C  15C8               	andwf	??_pf_read& (0+255),w,b
  6032  001C6E  6FE1               	movwf	pf_read@cs& (0+255),b
  6033  001C70                     
  6034                           ; BSR set to: 0
  6035                           ;pff.c: 887:    if (!cs) {
  6036  001C70  51E1               	movf	pf_read@cs& (0+255),w,b
  6037  001C72  A4D8               	btfss	status,2,c
  6038  001C74  EF3E  F00E         	goto	u10761
  6039  001C78  EF40  F00E         	goto	u10760
  6040  001C7C                     u10761:
  6041  001C7C  EFA0  F00E         	goto	l8289
  6042  001C80                     u10760:
  6043  001C80                     
  6044                           ; BSR set to: 0
  6045                           ;pff.c: 888:     if (fs->fptr == 0)
  6046  001C80  EE20 F016          	lfsr	2,22
  6047  001C84  51E4               	movf	pf_read@fs& (0+255),w,b
  6048  001C86  26D9               	addwf	fsr2l,f,c
  6049  001C88  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6050  001C8A  22DA               	addwfc	fsr2h,f,c
  6051  001C8C  50DE               	movf	postinc2,w,c
  6052  001C8E  10DE               	iorwf	postinc2,w,c
  6053  001C90  10DE               	iorwf	postinc2,w,c
  6054  001C92  10DE               	iorwf	postinc2,w,c
  6055  001C94  A4D8               	btfss	status,2,c
  6056  001C96  EF4F  F00E         	goto	u10771
  6057  001C9A  EF51  F00E         	goto	u10770
  6058  001C9E                     u10771:
  6059  001C9E  EF61  F00E         	goto	l8277
  6060  001CA2                     u10770:
  6061  001CA2                     
  6062                           ; BSR set to: 0
  6063                           ;pff.c: 889:      clst = fs->org_clust;
  6064  001CA2  EE20 F01E          	lfsr	2,30
  6065  001CA6  51E4               	movf	pf_read@fs& (0+255),w,b
  6066  001CA8  26D9               	addwf	fsr2l,f,c
  6067  001CAA  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6068  001CAC  22DA               	addwfc	fsr2h,f,c
  6069  001CAE  CFDE F0DD          	movff	postinc2,pf_read@clst
  6070  001CB2  CFDE F0DE          	movff	postinc2,pf_read@clst+1
  6071  001CB6  CFDE F0DF          	movff	postinc2,pf_read@clst+2
  6072  001CBA  CFDE F0E0          	movff	postinc2,pf_read@clst+3
  6073  001CBE  EF79  F00E         	goto	l8279
  6074  001CC2                     l8277:
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;pff.c: 891:      clst = get_fat(fs->curr_clust);
  6078  001CC2  EE20 F022          	lfsr	2,34
  6079  001CC6  51E4               	movf	pf_read@fs& (0+255),w,b
  6080  001CC8  26D9               	addwf	fsr2l,f,c
  6081  001CCA  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6082  001CCC  22DA               	addwfc	fsr2h,f,c
  6083  001CCE  CFDE F0A2          	movff	postinc2,get_fat@clst
  6084  001CD2  CFDE F0A3          	movff	postinc2,get_fat@clst+1
  6085  001CD6  CFDE F0A4          	movff	postinc2,get_fat@clst+2
  6086  001CDA  CFDE F0A5          	movff	postinc2,get_fat@clst+3
  6087  001CDE  EC63  F019         	call	_get_fat	;wreg free
  6088  001CE2  C0A2  F0DD         	movff	?_get_fat,pf_read@clst
  6089  001CE6  C0A3  F0DE         	movff	?_get_fat+1,pf_read@clst+1
  6090  001CEA  C0A4  F0DF         	movff	?_get_fat+2,pf_read@clst+2
  6091  001CEE  C0A5  F0E0         	movff	?_get_fat+3,pf_read@clst+3
  6092  001CF2                     l8279:
  6093                           
  6094                           ;pff.c: 892:     if (clst <= 1)
  6095  001CF2  0100               	movlb	0	; () banked
  6096  001CF4  51E0               	movf	(pf_read@clst+3)& (0+255),w,b
  6097  001CF6  11DF               	iorwf	(pf_read@clst+2)& (0+255),w,b
  6098  001CF8  11DE               	iorwf	(pf_read@clst+1)& (0+255),w,b
  6099  001CFA  E107               	bnz	u10781
  6100  001CFC  0E02               	movlw	2
  6101  001CFE  5DDD               	subwf	pf_read@clst& (0+255),w,b
  6102  001D00  B0D8               	btfsc	status,0,c
  6103  001D02  EF85  F00E         	goto	u10781
  6104  001D06  EF87  F00E         	goto	u10780
  6105  001D0A                     u10781:
  6106  001D0A  EF92  F00E         	goto	l8287
  6107  001D0E                     u10780:
  6108  001D0E                     
  6109                           ; BSR set to: 0
  6110                           ;pff.c: 893:                     {fs->flag = 0; return FR_DISK_ERR;};
  6111  001D0E  EE20 F001          	lfsr	2,1
  6112  001D12  51E4               	movf	pf_read@fs& (0+255),w,b
  6113  001D14  26D9               	addwf	fsr2l,f,c
  6114  001D16  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6115  001D18  22DA               	addwfc	fsr2h,f,c
  6116  001D1A  0E00               	movlw	0
  6117  001D1C  6EDF               	movwf	indf2,c
  6118  001D1E                     l8283:
  6119                           
  6120                           ; BSR set to: 0
  6121  001D1E  0E01               	movlw	1
  6122  001D20  EF87  F00F         	goto	l344
  6123  001D24                     l8287:
  6124                           
  6125                           ; BSR set to: 0
  6126                           ;pff.c: 894:     fs->curr_clust = clst;
  6127  001D24  EE20 F022          	lfsr	2,34
  6128  001D28  51E4               	movf	pf_read@fs& (0+255),w,b
  6129  001D2A  26D9               	addwf	fsr2l,f,c
  6130  001D2C  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6131  001D2E  22DA               	addwfc	fsr2h,f,c
  6132  001D30  C0DD  FFDE         	movff	pf_read@clst,postinc2
  6133  001D34  C0DE  FFDE         	movff	pf_read@clst+1,postinc2
  6134  001D38  C0DF  FFDE         	movff	pf_read@clst+2,postinc2
  6135  001D3C  C0E0  FFDE         	movff	pf_read@clst+3,postinc2
  6136  001D40                     l8289:
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;pff.c: 896:    sect = clust2sect(fs->curr_clust);
  6140  001D40  EE20 F022          	lfsr	2,34
  6141  001D44  51E4               	movf	pf_read@fs& (0+255),w,b
  6142  001D46  26D9               	addwf	fsr2l,f,c
  6143  001D48  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6144  001D4A  22DA               	addwfc	fsr2h,f,c
  6145  001D4C  CFDE F012          	movff	postinc2,clust2sect@clst
  6146  001D50  CFDE F013          	movff	postinc2,clust2sect@clst+1
  6147  001D54  CFDE F014          	movff	postinc2,clust2sect@clst+2
  6148  001D58  CFDE F015          	movff	postinc2,clust2sect@clst+3
  6149  001D5C  EC12  F027         	call	_clust2sect	;wreg free
  6150  001D60  C012  F0D5         	movff	?_clust2sect,pf_read@sect
  6151  001D64  C013  F0D6         	movff	?_clust2sect+1,pf_read@sect+1
  6152  001D68  C014  F0D7         	movff	?_clust2sect+2,pf_read@sect+2
  6153  001D6C  C015  F0D8         	movff	?_clust2sect+3,pf_read@sect+3
  6154  001D70                     
  6155                           ;pff.c: 897:    if (!sect) {fs->flag = 0; return FR_DISK_ERR;};
  6156  001D70  0100               	movlb	0	; () banked
  6157  001D72  51D5               	movf	pf_read@sect& (0+255),w,b
  6158  001D74  11D6               	iorwf	(pf_read@sect+1)& (0+255),w,b
  6159  001D76  11D7               	iorwf	(pf_read@sect+2)& (0+255),w,b
  6160  001D78  11D8               	iorwf	(pf_read@sect+3)& (0+255),w,b
  6161  001D7A  A4D8               	btfss	status,2,c
  6162  001D7C  EFC2  F00E         	goto	u10791
  6163  001D80  EFC4  F00E         	goto	u10790
  6164  001D84                     u10791:
  6165  001D84  EFCE  F00E         	goto	l8299
  6166  001D88                     u10790:
  6167  001D88                     
  6168                           ; BSR set to: 0
  6169  001D88  EE20 F001          	lfsr	2,1
  6170  001D8C  51E4               	movf	pf_read@fs& (0+255),w,b
  6171  001D8E  26D9               	addwf	fsr2l,f,c
  6172  001D90  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6173  001D92  22DA               	addwfc	fsr2h,f,c
  6174  001D94  0E00               	movlw	0
  6175  001D96  6EDF               	movwf	indf2,c
  6176  001D98  EF8F  F00E         	goto	l8283
  6177  001D9C                     l8299:
  6178                           
  6179                           ; BSR set to: 0
  6180                           ;pff.c: 898:    fs->dsect = sect + cs;
  6181  001D9C  51E1               	movf	pf_read@cs& (0+255),w,b
  6182  001D9E  25D5               	addwf	pf_read@sect& (0+255),w,b
  6183  001DA0  6FC8               	movwf	??_pf_read& (0+255),b
  6184  001DA2  0E00               	movlw	0
  6185  001DA4  21D6               	addwfc	(pf_read@sect+1)& (0+255),w,b
  6186  001DA6  6FC9               	movwf	(??_pf_read+1)& (0+255),b
  6187  001DA8  0E00               	movlw	0
  6188  001DAA  21D7               	addwfc	(pf_read@sect+2)& (0+255),w,b
  6189  001DAC  6FCA               	movwf	(??_pf_read+2)& (0+255),b
  6190  001DAE  0E00               	movlw	0
  6191  001DB0  21D8               	addwfc	(pf_read@sect+3)& (0+255),w,b
  6192  001DB2  6FCB               	movwf	(??_pf_read+3)& (0+255),b
  6193  001DB4  EE20 F026          	lfsr	2,38
  6194  001DB8  51E4               	movf	pf_read@fs& (0+255),w,b
  6195  001DBA  26D9               	addwf	fsr2l,f,c
  6196  001DBC  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6197  001DBE  22DA               	addwfc	fsr2h,f,c
  6198  001DC0  C0C8  FFDE         	movff	??_pf_read,postinc2
  6199  001DC4  C0C9  FFDE         	movff	??_pf_read+1,postinc2
  6200  001DC8  C0CA  FFDE         	movff	??_pf_read+2,postinc2
  6201  001DCC  C0CB  FFDE         	movff	??_pf_read+3,postinc2
  6202  001DD0                     l349:
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;pff.c: 900:   rcnt = 512 - (UINT)fs->fptr % 512;
  6206  001DD0  0EFF               	movlw	255
  6207  001DD2  6FC8               	movwf	??_pf_read& (0+255),b
  6208  001DD4  0E01               	movlw	1
  6209  001DD6  6FC9               	movwf	(??_pf_read+1)& (0+255),b
  6210  001DD8  EE20 F016          	lfsr	2,22
  6211  001DDC  51E4               	movf	pf_read@fs& (0+255),w,b
  6212  001DDE  26D9               	addwf	fsr2l,f,c
  6213  001DE0  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6214  001DE2  22DA               	addwfc	fsr2h,f,c
  6215  001DE4  CFDE F0CA          	movff	postinc2,??_pf_read+2
  6216  001DE8  CFDD F0CB          	movff	postdec2,??_pf_read+3
  6217  001DEC  51C8               	movf	??_pf_read& (0+255),w,b
  6218  001DEE  17CA               	andwf	(??_pf_read+2)& (0+255),f,b
  6219  001DF0  51C9               	movf	(??_pf_read+1)& (0+255),w,b
  6220  001DF2  17CB               	andwf	(??_pf_read+3)& (0+255),f,b
  6221  001DF4  51CA               	movf	(??_pf_read+2)& (0+255),w,b
  6222  001DF6  0800               	sublw	0
  6223  001DF8  6FE2               	movwf	pf_read@rcnt& (0+255),b
  6224  001DFA  51CB               	movf	(??_pf_read+3)& (0+255),w,b
  6225  001DFC  A0D8               	btfss	status,0,c
  6226  001DFE  2AE8               	incf	wreg,f,c
  6227  001E00  0802               	sublw	2
  6228  001E02  6FE3               	movwf	(pf_read@rcnt+1)& (0+255),b
  6229  001E04                     
  6230                           ; BSR set to: 0
  6231                           ;pff.c: 901:   if (rcnt > btr)
  6232  001E04  51E2               	movf	pf_read@rcnt& (0+255),w,b
  6233  001E06  5DC4               	subwf	pf_read@btr& (0+255),w,b
  6234  001E08  51E3               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6235  001E0A  59C5               	subwfb	(pf_read@btr+1)& (0+255),w,b
  6236  001E0C  B0D8               	btfsc	status,0,c
  6237  001E0E  EF0B  F00F         	goto	u10801
  6238  001E12  EF0D  F00F         	goto	u10800
  6239  001E16                     u10801:
  6240  001E16  EF11  F00F         	goto	l8305
  6241  001E1A                     u10800:
  6242  001E1A                     
  6243                           ; BSR set to: 0
  6244                           ;pff.c: 902:             rcnt = btr;
  6245  001E1A  C0C4  F0E2         	movff	pf_read@btr,pf_read@rcnt
  6246  001E1E  C0C5  F0E3         	movff	pf_read@btr+1,pf_read@rcnt+1
  6247  001E22                     l8305:
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;pff.c: 903:   dr = disk_readp(!buff ? 0 : rbuff, fs->dsect, (UINT)fs->fptr % 512, rcnt)
      +                          ;
  6251  001E22  51C2               	movf	pf_read@buff& (0+255),w,b
  6252  001E24  11C3               	iorwf	(pf_read@buff+1)& (0+255),w,b
  6253  001E26  B4D8               	btfsc	status,2,c
  6254  001E28  EF18  F00F         	goto	u10811
  6255  001E2C  EF1A  F00F         	goto	u10810
  6256  001E30                     u10811:
  6257  001E30  EF20  F00F         	goto	l8309
  6258  001E34                     u10810:
  6259  001E34                     
  6260                           ; BSR set to: 0
  6261  001E34  C0D1  F0D3         	movff	pf_read@rbuff,_pf_read$900
  6262  001E38  C0D2  F0D4         	movff	pf_read@rbuff+1,_pf_read$900+1
  6263  001E3C  EF24  F00F         	goto	l8311
  6264  001E40                     l8309:
  6265                           
  6266                           ; BSR set to: 0
  6267  001E40  0E00               	movlw	0
  6268  001E42  6FD3               	movwf	_pf_read$900& (0+255),b
  6269  001E44  0E00               	movlw	0
  6270  001E46  6FD4               	movwf	(_pf_read$900+1)& (0+255),b
  6271  001E48                     l8311:
  6272                           
  6273                           ; BSR set to: 0
  6274  001E48  C0D3  F092         	movff	_pf_read$900,disk_readp@buff
  6275  001E4C  C0D4  F093         	movff	_pf_read$900+1,disk_readp@buff+1
  6276  001E50  EE20 F026          	lfsr	2,38
  6277  001E54  51E4               	movf	pf_read@fs& (0+255),w,b
  6278  001E56  26D9               	addwf	fsr2l,f,c
  6279  001E58  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6280  001E5A  22DA               	addwfc	fsr2h,f,c
  6281  001E5C  CFDE F094          	movff	postinc2,disk_readp@sector
  6282  001E60  CFDE F095          	movff	postinc2,disk_readp@sector+1
  6283  001E64  CFDE F096          	movff	postinc2,disk_readp@sector+2
  6284  001E68  CFDE F097          	movff	postinc2,disk_readp@sector+3
  6285  001E6C  EE20 F016          	lfsr	2,22
  6286  001E70  51E4               	movf	pf_read@fs& (0+255),w,b
  6287  001E72  26D9               	addwf	fsr2l,f,c
  6288  001E74  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6289  001E76  22DA               	addwfc	fsr2h,f,c
  6290  001E78  CFDE F0C8          	movff	postinc2,??_pf_read
  6291  001E7C  CFDD F0C9          	movff	postdec2,??_pf_read+1
  6292  001E80  0EFF               	movlw	255
  6293  001E82  15C8               	andwf	??_pf_read& (0+255),w,b
  6294  001E84  6F98               	movwf	disk_readp@offset& (0+255),b
  6295  001E86  0E01               	movlw	1
  6296  001E88  15C9               	andwf	(??_pf_read+1)& (0+255),w,b
  6297  001E8A  6F99               	movwf	(disk_readp@offset+1)& (0+255),b
  6298  001E8C  C0E2  F09A         	movff	pf_read@rcnt,disk_readp@count
  6299  001E90  C0E3  F09B         	movff	pf_read@rcnt+1,disk_readp@count+1
  6300  001E94  ECDC  F01B         	call	_disk_readp	;wreg free
  6301  001E98  0100               	movlb	0	; () banked
  6302  001E9A  6FD0               	movwf	pf_read@dr& (0+255),b
  6303  001E9C                     
  6304                           ; BSR set to: 0
  6305                           ;pff.c: 904:   if (dr)
  6306  001E9C  51D0               	movf	pf_read@dr& (0+255),w,b
  6307  001E9E  B4D8               	btfsc	status,2,c
  6308  001EA0  EF54  F00F         	goto	u10821
  6309  001EA4  EF56  F00F         	goto	u10820
  6310  001EA8                     u10821:
  6311  001EA8  EF60  F00F         	goto	l8321
  6312  001EAC                     u10820:
  6313  001EAC                     
  6314                           ; BSR set to: 0
  6315                           ;pff.c: 905:             {fs->flag = 0; return FR_DISK_ERR;};
  6316  001EAC  EE20 F001          	lfsr	2,1
  6317  001EB0  51E4               	movf	pf_read@fs& (0+255),w,b
  6318  001EB2  26D9               	addwf	fsr2l,f,c
  6319  001EB4  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6320  001EB6  22DA               	addwfc	fsr2h,f,c
  6321  001EB8  0E00               	movlw	0
  6322  001EBA  6EDF               	movwf	indf2,c
  6323  001EBC  EF8F  F00E         	goto	l8283
  6324  001EC0                     l8321:
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;pff.c: 907:   fs->fptr += rcnt; rbuff += rcnt;
  6328  001EC0  EE20 F016          	lfsr	2,22
  6329  001EC4  51E4               	movf	pf_read@fs& (0+255),w,b
  6330  001EC6  26D9               	addwf	fsr2l,f,c
  6331  001EC8  51E5               	movf	(pf_read@fs+1)& (0+255),w,b
  6332  001ECA  22DA               	addwfc	fsr2h,f,c
  6333  001ECC  51E2               	movf	pf_read@rcnt& (0+255),w,b
  6334  001ECE  26DE               	addwf	postinc2,f,c
  6335  001ED0  51E3               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6336  001ED2  22DE               	addwfc	postinc2,f,c
  6337  001ED4  0E00               	movlw	0
  6338  001ED6  22DE               	addwfc	postinc2,f,c
  6339  001ED8  22DE               	addwfc	postinc2,f,c
  6340  001EDA                     
  6341                           ; BSR set to: 0
  6342  001EDA  51E2               	movf	pf_read@rcnt& (0+255),w,b
  6343  001EDC  27D1               	addwf	pf_read@rbuff& (0+255),f,b
  6344  001EDE  51E3               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6345  001EE0  23D2               	addwfc	(pf_read@rbuff+1)& (0+255),f,b
  6346  001EE2                     
  6347                           ; BSR set to: 0
  6348                           ;pff.c: 909:         btr -= rcnt;
  6349  001EE2  51E2               	movf	pf_read@rcnt& (0+255),w,b
  6350  001EE4  5FC4               	subwf	pf_read@btr& (0+255),f,b
  6351  001EE6  51E3               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6352  001EE8  5BC5               	subwfb	(pf_read@btr+1)& (0+255),f,b
  6353  001EEA                     
  6354                           ; BSR set to: 0
  6355                           ;pff.c: 910:         *br += rcnt;
  6356  001EEA  C0C6  FFD9         	movff	pf_read@br,fsr2l
  6357  001EEE  C0C7  FFDA         	movff	pf_read@br+1,fsr2h
  6358  001EF2  51E2               	movf	pf_read@rcnt& (0+255),w,b
  6359  001EF4  26DE               	addwf	postinc2,f,c
  6360  001EF6  51E3               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6361  001EF8  22DD               	addwfc	postdec2,f,c
  6362  001EFA                     l8329:
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;pff.c: 884:  while (btr) {
  6366  001EFA  51C4               	movf	pf_read@btr& (0+255),w,b
  6367  001EFC  11C5               	iorwf	(pf_read@btr+1)& (0+255),w,b
  6368  001EFE  A4D8               	btfss	status,2,c
  6369  001F00  EF84  F00F         	goto	u10831
  6370  001F04  EF86  F00F         	goto	u10830
  6371  001F08                     u10831:
  6372  001F08  EFF7  F00D         	goto	l8267
  6373  001F0C                     u10830:
  6374  001F0C                     
  6375                           ; BSR set to: 0
  6376                           ;pff.c: 913:  return FR_OK;
  6377  001F0C  0E00               	movlw	0
  6378  001F0E                     l344:
  6379                           
  6380                           ; BSR set to: 0
  6381  001F0E  0012               	return		;funcret
  6382  001F10                     __end_of_pf_read:
  6383                           	callstack 0
  6384                           
  6385 ;; *************** function _pf_opendir *****************
  6386 ;; Defined at:
  6387 ;;		line 1051 in file "pff.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;  dj              2   98[BANK0 ] PTR struct .
  6390 ;;		 -> main@dir(16), 
  6391 ;;  path            2  100[BANK0 ] PTR const unsigned char 
  6392 ;;		 -> Line(128), 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;  dir            32    0[BANK1 ] unsigned char [32]
  6395 ;;  sp             12   32[BANK1 ] unsigned char [12]
  6396 ;;  fs              2   44[BANK1 ] PTR struct .
  6397 ;;		 -> NULL(0), main@fs(42), 
  6398 ;;  res             1   46[BANK1 ] enum E2600
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      enum E3114
  6401 ;; Registers used:
  6402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6408 ;;      Params:         0       4       0       0       0       0       0
  6409 ;;      Locals:         0       0      47       0       0       0       0
  6410 ;;      Temps:          0       0       0       0       0       0       0
  6411 ;;      Totals:         0       4      47       0       0       0       0
  6412 ;;Total ram usage:       51 bytes
  6413 ;; Hardware stack levels used: 1
  6414 ;; Hardware stack levels required when called: 14
  6415 ;; This function calls:
  6416 ;;		_dir_rewind
  6417 ;;		_follow_path
  6418 ;;		_get_clust
  6419 ;; This function is called by:
  6420 ;;		_main
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text16
  6425  004B96                     __ptext16:
  6426                           	callstack 0
  6427  004B96                     _pf_opendir:
  6428                           	callstack 16
  6429  004B96                     
  6430                           ;pff.c: 1052:  DIR *dj,;pff.c: 1053:  const char *path;pff.c: 1055: {;pff.c: 1056:  FRES
      +                          ULT res;;pff.c: 1057:  BYTE sp[12], dir[32];;pff.c: 1058:  FATFS *fs = FatFs;
  6431  004B96  C0F1  F12C         	movff	_FatFs,pf_opendir@fs
  6432  004B9A  C0F2  F12D         	movff	_FatFs+1,pf_opendir@fs+1
  6433                           
  6434                           ;pff.c: 1061:  if (!fs) {
  6435  004B9E  0101               	movlb	1	; () banked
  6436  004BA0  512C               	movf	pf_opendir@fs& (0+255),w,b
  6437  004BA2  112D               	iorwf	(pf_opendir@fs+1)& (0+255),w,b
  6438  004BA4  A4D8               	btfss	status,2,c
  6439  004BA6  EFD7  F025         	goto	u10961
  6440  004BAA  EFD9  F025         	goto	u10960
  6441  004BAE                     u10961:
  6442  004BAE  EFDD  F025         	goto	l8403
  6443  004BB2                     u10960:
  6444  004BB2                     
  6445                           ; BSR set to: 1
  6446                           ;pff.c: 1062:   res = FR_NOT_ENABLED;
  6447  004BB2  0E05               	movlw	5
  6448  004BB4  6F2E               	movwf	pf_opendir@res& (0+255),b
  6449                           
  6450                           ;pff.c: 1063:  } else {
  6451  004BB6  EF39  F026         	goto	l8419
  6452  004BBA                     l8403:
  6453                           
  6454                           ; BSR set to: 1
  6455                           ;pff.c: 1064:   dj->fn = sp;
  6456  004BBA  0100               	movlb	0	; () banked
  6457  004BBC  EE20 F002          	lfsr	2,2
  6458  004BC0  51E2               	movf	pf_opendir@dj& (0+255),w,b
  6459  004BC2  26D9               	addwf	fsr2l,f,c
  6460  004BC4  51E3               	movf	(pf_opendir@dj+1)& (0+255),w,b
  6461  004BC6  22DA               	addwfc	fsr2h,f,c
  6462  004BC8  0E20               	movlw	low pf_opendir@sp
  6463  004BCA  6EDE               	movwf	postinc2,c
  6464  004BCC  0E01               	movlw	high pf_opendir@sp
  6465  004BCE  6EDD               	movwf	postdec2,c
  6466  004BD0                     
  6467                           ; BSR set to: 0
  6468                           ;pff.c: 1065:   res = follow_path(dj, dir, path);
  6469  004BD0  C0E2  F0DB         	movff	pf_opendir@dj,follow_path@dj
  6470  004BD4  C0E3  F0DC         	movff	pf_opendir@dj+1,follow_path@dj+1
  6471  004BD8  0E00               	movlw	low pf_opendir@dir
  6472  004BDA  6FDD               	movwf	follow_path@dir& (0+255),b
  6473  004BDC  0E01               	movlw	high pf_opendir@dir
  6474  004BDE  6FDE               	movwf	(follow_path@dir+1)& (0+255),b
  6475  004BE0  C0E4  F0DF         	movff	pf_opendir@path,follow_path@path
  6476  004BE4  C0E5  F0E0         	movff	pf_opendir@path+1,follow_path@path+1
  6477  004BE8  EC23  F021         	call	_follow_path	;wreg free
  6478  004BEC  0101               	movlb	1	; () banked
  6479  004BEE  6F2E               	movwf	pf_opendir@res& (0+255),b
  6480  004BF0                     
  6481                           ; BSR set to: 1
  6482                           ;pff.c: 1066:   if (res == FR_OK) {
  6483  004BF0  512E               	movf	pf_opendir@res& (0+255),w,b
  6484  004BF2  A4D8               	btfss	status,2,c
  6485  004BF4  EFFE  F025         	goto	u10971
  6486  004BF8  EF00  F026         	goto	u10970
  6487  004BFC                     u10971:
  6488  004BFC  EF39  F026         	goto	l8419
  6489  004C00                     u10970:
  6490  004C00                     
  6491                           ; BSR set to: 1
  6492                           ;pff.c: 1067:    if (dir[0]) {
  6493  004C00  5100               	movf	pf_opendir@dir& (0+255),w,b
  6494  004C02  B4D8               	btfsc	status,2,c
  6495  004C04  EF06  F026         	goto	u10981
  6496  004C08  EF08  F026         	goto	u10980
  6497  004C0C                     u10981:
  6498  004C0C  EF28  F026         	goto	l407
  6499  004C10                     u10980:
  6500  004C10                     
  6501                           ; BSR set to: 1
  6502                           ;pff.c: 1068:     if (dir[11] & 0x10)
  6503  004C10  A90B               	btfss	(pf_opendir@dir+11)& (0+255),4,b
  6504  004C12  EF0D  F026         	goto	u10991
  6505  004C16  EF0F  F026         	goto	u10990
  6506  004C1A                     u10991:
  6507  004C1A  EF26  F026         	goto	l8415
  6508  004C1E                     u10990:
  6509  004C1E                     
  6510                           ; BSR set to: 1
  6511                           ;pff.c: 1069:      dj->sclust = get_clust(dir);
  6512  004C1E  0E00               	movlw	low pf_opendir@dir
  6513  004C20  6E06               	movwf	get_clust@dir^0,c
  6514  004C22  0E01               	movlw	high pf_opendir@dir
  6515  004C24  6E07               	movwf	(get_clust@dir+1)^0,c
  6516  004C26  ECE0  F028         	call	_get_clust	;wreg free
  6517  004C2A  0100               	movlb	0	; () banked
  6518  004C2C  EE20 F004          	lfsr	2,4
  6519  004C30  51E2               	movf	pf_opendir@dj& (0+255),w,b
  6520  004C32  26D9               	addwf	fsr2l,f,c
  6521  004C34  51E3               	movf	(pf_opendir@dj+1)& (0+255),w,b
  6522  004C36  22DA               	addwfc	fsr2h,f,c
  6523  004C38  C006  FFDE         	movff	?_get_clust,postinc2
  6524  004C3C  C007  FFDE         	movff	?_get_clust+1,postinc2
  6525  004C40  C008  FFDE         	movff	?_get_clust+2,postinc2
  6526  004C44  C009  FFDE         	movff	?_get_clust+3,postinc2
  6527  004C48  EF28  F026         	goto	l407
  6528  004C4C                     l8415:
  6529                           
  6530                           ; BSR set to: 1
  6531                           ;pff.c: 1071:      res = FR_NO_FILE;
  6532  004C4C  0E03               	movlw	3
  6533  004C4E  6F2E               	movwf	pf_opendir@res& (0+255),b
  6534  004C50                     l407:
  6535                           
  6536                           ;pff.c: 1073:    if (res == FR_OK)
  6537  004C50  0101               	movlb	1	; () banked
  6538  004C52  512E               	movf	pf_opendir@res& (0+255),w,b
  6539  004C54  A4D8               	btfss	status,2,c
  6540  004C56  EF2F  F026         	goto	u11001
  6541  004C5A  EF31  F026         	goto	u11000
  6542  004C5E                     u11001:
  6543  004C5E  EF39  F026         	goto	l8419
  6544  004C62                     u11000:
  6545  004C62                     
  6546                           ; BSR set to: 1
  6547                           ;pff.c: 1074:     res = dir_rewind(dj);
  6548  004C62  C0E2  F01D         	movff	pf_opendir@dj,dir_rewind@dj
  6549  004C66  C0E3  F01E         	movff	pf_opendir@dj+1,dir_rewind@dj+1
  6550  004C6A  EC5B  F024         	call	_dir_rewind	;wreg free
  6551  004C6E  0101               	movlb	1	; () banked
  6552  004C70  6F2E               	movwf	pf_opendir@res& (0+255),b
  6553  004C72                     l8419:
  6554                           
  6555                           ; BSR set to: 1
  6556                           ;pff.c: 1078:  return res;
  6557  004C72  512E               	movf	pf_opendir@res& (0+255),w,b
  6558  004C74                     
  6559                           ; BSR set to: 1
  6560  004C74  0012               	return		;funcret
  6561  004C76                     __end_of_pf_opendir:
  6562                           	callstack 0
  6563                           
  6564 ;; *************** function _pf_open *****************
  6565 ;; Defined at:
  6566 ;;		line 826 in file "pff.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  path            2   98[BANK0 ] PTR const unsigned char 
  6569 ;;		 -> Line(128), 
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  dir            32   34[BANK1 ] unsigned char [32]
  6572 ;;  dj             16   69[BANK1 ] struct .
  6573 ;;  sp             12   22[BANK1 ] unsigned char [12]
  6574 ;;  fs              2   67[BANK1 ] PTR struct .
  6575 ;;		 -> NULL(0), main@fs(42), 
  6576 ;;  res             1   66[BANK1 ] enum E2600
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  1    wreg      enum E3114
  6579 ;; Registers used:
  6580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6586 ;;      Params:         0       2       0       0       0       0       0
  6587 ;;      Locals:         0       0      63       0       0       0       0
  6588 ;;      Temps:          0       0      22       0       0       0       0
  6589 ;;      Totals:         0       2      85       0       0       0       0
  6590 ;;Total ram usage:       87 bytes
  6591 ;; Hardware stack levels used: 1
  6592 ;; Hardware stack levels required when called: 14
  6593 ;; This function calls:
  6594 ;;		_follow_path
  6595 ;;		_get_clust
  6596 ;; This function is called by:
  6597 ;;		_main
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text17
  6602  003F62                     __ptext17:
  6603                           	callstack 0
  6604  003F62                     _pf_open:
  6605                           	callstack 16
  6606  003F62                     
  6607                           ;pff.c: 827:  const char *path;pff.c: 829: {;pff.c: 830:  FRESULT res;;pff.c: 831:  DIR 
      +                          dj;;pff.c: 832:  BYTE sp[12], dir[32];;pff.c: 833:  FATFS *fs = FatFs;
  6608  003F62  C0F1  F143         	movff	_FatFs,pf_open@fs
  6609  003F66  C0F2  F144         	movff	_FatFs+1,pf_open@fs+1
  6610                           
  6611                           ;pff.c: 836:  if (!fs)
  6612  003F6A  0101               	movlb	1	; () banked
  6613  003F6C  5143               	movf	pf_open@fs& (0+255),w,b
  6614  003F6E  1144               	iorwf	(pf_open@fs+1)& (0+255),w,b
  6615  003F70  A4D8               	btfss	status,2,c
  6616  003F72  EFBD  F01F         	goto	u10671
  6617  003F76  EFBF  F01F         	goto	u10670
  6618  003F7A                     u10671:
  6619  003F7A  EFC2  F01F         	goto	l8213
  6620  003F7E                     u10670:
  6621  003F7E                     
  6622                           ; BSR set to: 1
  6623                           ;pff.c: 837:         return FR_NOT_ENABLED;
  6624  003F7E  0E05               	movlw	5
  6625  003F80  EF6B  F020         	goto	l336
  6626  003F84                     l8213:
  6627                           
  6628                           ; BSR set to: 1
  6629                           ;pff.c: 839:  fs->flag = 0;
  6630  003F84  EE20 F001          	lfsr	2,1
  6631  003F88  5143               	movf	pf_open@fs& (0+255),w,b
  6632  003F8A  26D9               	addwf	fsr2l,f,c
  6633  003F8C  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6634  003F8E  22DA               	addwfc	fsr2h,f,c
  6635  003F90  0E00               	movlw	0
  6636  003F92  6EDF               	movwf	indf2,c
  6637  003F94                     
  6638                           ; BSR set to: 1
  6639                           ;pff.c: 840:  dj.fn = sp;
  6640  003F94  0E16               	movlw	low pf_open@sp
  6641  003F96  6F47               	movwf	(pf_open@dj+2)& (0+255),b
  6642  003F98  0E01               	movlw	high pf_open@sp
  6643  003F9A  6F48               	movwf	(pf_open@dj+3)& (0+255),b
  6644  003F9C                     
  6645                           ; BSR set to: 1
  6646                           ;pff.c: 841:  res = follow_path(&dj, dir, path);
  6647  003F9C  0E45               	movlw	low pf_open@dj
  6648  003F9E  0100               	movlb	0	; () banked
  6649  003FA0  6FDB               	movwf	follow_path@dj& (0+255),b
  6650  003FA2  0E01               	movlw	high pf_open@dj
  6651  003FA4  6FDC               	movwf	(follow_path@dj+1)& (0+255),b
  6652  003FA6  0E22               	movlw	low pf_open@dir
  6653  003FA8  6FDD               	movwf	follow_path@dir& (0+255),b
  6654  003FAA  0E01               	movlw	high pf_open@dir
  6655  003FAC  6FDE               	movwf	(follow_path@dir+1)& (0+255),b
  6656  003FAE  C0E2  F0DF         	movff	pf_open@path,follow_path@path
  6657  003FB2  C0E3  F0E0         	movff	pf_open@path+1,follow_path@path+1
  6658  003FB6  EC23  F021         	call	_follow_path	;wreg free
  6659  003FBA  0101               	movlb	1	; () banked
  6660  003FBC  6F42               	movwf	pf_open@res& (0+255),b
  6661  003FBE                     
  6662                           ; BSR set to: 1
  6663                           ;pff.c: 842:  if (res != FR_OK)
  6664  003FBE  5142               	movf	pf_open@res& (0+255),w,b
  6665  003FC0  B4D8               	btfsc	status,2,c
  6666  003FC2  EFE5  F01F         	goto	u10681
  6667  003FC6  EFE7  F01F         	goto	u10680
  6668  003FCA                     u10681:
  6669  003FCA  EFEA  F01F         	goto	l8225
  6670  003FCE                     u10680:
  6671  003FCE                     
  6672                           ; BSR set to: 1
  6673                           ;pff.c: 843:         return res;
  6674  003FCE  5142               	movf	pf_open@res& (0+255),w,b
  6675  003FD0  EF6B  F020         	goto	l336
  6676  003FD4                     l8225:
  6677                           
  6678                           ; BSR set to: 1
  6679                           ;pff.c: 844:  if (!dir[0] || (dir[11] & 0x10))
  6680  003FD4  5122               	movf	pf_open@dir& (0+255),w,b
  6681  003FD6  B4D8               	btfsc	status,2,c
  6682  003FD8  EFF0  F01F         	goto	u10691
  6683  003FDC  EFF2  F01F         	goto	u10690
  6684  003FE0                     u10691:
  6685  003FE0  EFF9  F01F         	goto	l8229
  6686  003FE4                     u10690:
  6687  003FE4                     
  6688                           ; BSR set to: 1
  6689  003FE4  A92D               	btfss	(pf_open@dir+11)& (0+255),4,b
  6690  003FE6  EFF7  F01F         	goto	u10701
  6691  003FEA  EFF9  F01F         	goto	u10700
  6692  003FEE                     u10701:
  6693  003FEE  EFFC  F01F         	goto	l8233
  6694  003FF2                     u10700:
  6695  003FF2                     l8229:
  6696                           
  6697                           ; BSR set to: 1
  6698                           ;pff.c: 845:   return FR_NO_FILE;
  6699  003FF2  0E03               	movlw	3
  6700  003FF4  EF6B  F020         	goto	l336
  6701  003FF8                     l8233:
  6702                           
  6703                           ; BSR set to: 1
  6704                           ;pff.c: 847:  fs->org_clust = get_clust(dir);
  6705  003FF8  0E22               	movlw	low pf_open@dir
  6706  003FFA  6E06               	movwf	get_clust@dir^0,c
  6707  003FFC  0E01               	movlw	high pf_open@dir
  6708  003FFE  6E07               	movwf	(get_clust@dir+1)^0,c
  6709  004000  ECE0  F028         	call	_get_clust	;wreg free
  6710  004004  0101               	movlb	1	; () banked
  6711  004006  EE20 F01E          	lfsr	2,30
  6712  00400A  5143               	movf	pf_open@fs& (0+255),w,b
  6713  00400C  26D9               	addwf	fsr2l,f,c
  6714  00400E  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6715  004010  22DA               	addwfc	fsr2h,f,c
  6716  004012  C006  FFDE         	movff	?_get_clust,postinc2
  6717  004016  C007  FFDE         	movff	?_get_clust+1,postinc2
  6718  00401A  C008  FFDE         	movff	?_get_clust+2,postinc2
  6719  00401E  C009  FFDE         	movff	?_get_clust+3,postinc2
  6720  004022                     
  6721                           ; BSR set to: 1
  6722                           ;pff.c: 848:  fs->fsize = (DWORD)(((DWORD)*((BYTE*)(dir+28)+3)<<24)|((DWORD)*((BYTE*)(di
      +                          r+28)+2)<<16)|((WORD)*((BYTE*)(dir+28)+1)<<8)|*(BYTE*)(dir+28));
  6723  004022  513F               	movf	(pf_open@dir+29)& (0+255),w,b
  6724  004024  6F01               	movwf	(??_pf_open+1)& (0+255),b
  6725  004026  6B00               	clrf	??_pf_open& (0+255),b
  6726  004028  C140  F102         	movff	pf_open@dir+30,??_pf_open+2
  6727  00402C  6B03               	clrf	(??_pf_open+3)& (0+255),b
  6728  00402E  6B04               	clrf	(??_pf_open+4)& (0+255),b
  6729  004030  6B05               	clrf	(??_pf_open+5)& (0+255),b
  6730  004032  C103  F105         	movff	??_pf_open+3,??_pf_open+5
  6731  004036  C102  F104         	movff	??_pf_open+2,??_pf_open+4
  6732  00403A  6B03               	clrf	(??_pf_open+3)& (0+255),b
  6733  00403C  6B02               	clrf	(??_pf_open+2)& (0+255),b
  6734  00403E  C141  F106         	movff	pf_open@dir+31,??_pf_open+6
  6735  004042  6B07               	clrf	(??_pf_open+7)& (0+255),b
  6736  004044  6B08               	clrf	(??_pf_open+8)& (0+255),b
  6737  004046  6B09               	clrf	(??_pf_open+9)& (0+255),b
  6738  004048  C106  F109         	movff	??_pf_open+6,??_pf_open+9
  6739  00404C  6B08               	clrf	(??_pf_open+8)& (0+255),b
  6740  00404E  6B07               	clrf	(??_pf_open+7)& (0+255),b
  6741  004050  6B06               	clrf	(??_pf_open+6)& (0+255),b
  6742  004052  5102               	movf	(??_pf_open+2)& (0+255),w,b
  6743  004054  1106               	iorwf	(??_pf_open+6)& (0+255),w,b
  6744  004056  6F0A               	movwf	(??_pf_open+10)& (0+255),b
  6745  004058  5103               	movf	(??_pf_open+3)& (0+255),w,b
  6746  00405A  1107               	iorwf	(??_pf_open+7)& (0+255),w,b
  6747  00405C  6F0B               	movwf	(??_pf_open+11)& (0+255),b
  6748  00405E  5104               	movf	(??_pf_open+4)& (0+255),w,b
  6749  004060  1108               	iorwf	(??_pf_open+8)& (0+255),w,b
  6750  004062  6F0C               	movwf	(??_pf_open+12)& (0+255),b
  6751  004064  5105               	movf	(??_pf_open+5)& (0+255),w,b
  6752  004066  1109               	iorwf	(??_pf_open+9)& (0+255),w,b
  6753  004068  6F0D               	movwf	(??_pf_open+13)& (0+255),b
  6754  00406A  5100               	movf	??_pf_open& (0+255),w,b
  6755  00406C  110A               	iorwf	(??_pf_open+10)& (0+255),w,b
  6756  00406E  6F0E               	movwf	(??_pf_open+14)& (0+255),b
  6757  004070  5101               	movf	(??_pf_open+1)& (0+255),w,b
  6758  004072  110B               	iorwf	(??_pf_open+11)& (0+255),w,b
  6759  004074  6F0F               	movwf	(??_pf_open+15)& (0+255),b
  6760  004076  0E00               	movlw	0
  6761  004078  110C               	iorwf	(??_pf_open+12)& (0+255),w,b
  6762  00407A  6F10               	movwf	(??_pf_open+16)& (0+255),b
  6763  00407C  0E00               	movlw	0
  6764  00407E  110D               	iorwf	(??_pf_open+13)& (0+255),w,b
  6765  004080  6F11               	movwf	(??_pf_open+17)& (0+255),b
  6766  004082  513E               	movf	(pf_open@dir+28)& (0+255),w,b
  6767  004084  110E               	iorwf	(??_pf_open+14)& (0+255),w,b
  6768  004086  6F12               	movwf	(??_pf_open+18)& (0+255),b
  6769  004088  510F               	movf	(??_pf_open+15)& (0+255),w,b
  6770  00408A  6F13               	movwf	(??_pf_open+19)& (0+255),b
  6771  00408C  5110               	movf	(??_pf_open+16)& (0+255),w,b
  6772  00408E  6F14               	movwf	(??_pf_open+20)& (0+255),b
  6773  004090  5111               	movf	(??_pf_open+17)& (0+255),w,b
  6774  004092  6F15               	movwf	(??_pf_open+21)& (0+255),b
  6775  004094  EE20 F01A          	lfsr	2,26
  6776  004098  5143               	movf	pf_open@fs& (0+255),w,b
  6777  00409A  26D9               	addwf	fsr2l,f,c
  6778  00409C  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6779  00409E  22DA               	addwfc	fsr2h,f,c
  6780  0040A0  C112  FFDE         	movff	??_pf_open+18,postinc2
  6781  0040A4  C113  FFDE         	movff	??_pf_open+19,postinc2
  6782  0040A8  C114  FFDE         	movff	??_pf_open+20,postinc2
  6783  0040AC  C115  FFDE         	movff	??_pf_open+21,postinc2
  6784  0040B0                     
  6785                           ; BSR set to: 1
  6786                           ;pff.c: 849:  fs->fptr = 0;
  6787  0040B0  EE20 F016          	lfsr	2,22
  6788  0040B4  5143               	movf	pf_open@fs& (0+255),w,b
  6789  0040B6  26D9               	addwf	fsr2l,f,c
  6790  0040B8  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6791  0040BA  22DA               	addwfc	fsr2h,f,c
  6792  0040BC  6ADE               	clrf	postinc2,c
  6793  0040BE  6ADE               	clrf	postinc2,c
  6794  0040C0  6ADE               	clrf	postinc2,c
  6795  0040C2  6ADD               	clrf	postdec2,c
  6796  0040C4                     
  6797                           ; BSR set to: 1
  6798                           ;pff.c: 850:  fs->flag = 0x01;
  6799  0040C4  EE20 F001          	lfsr	2,1
  6800  0040C8  5143               	movf	pf_open@fs& (0+255),w,b
  6801  0040CA  26D9               	addwf	fsr2l,f,c
  6802  0040CC  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6803  0040CE  22DA               	addwfc	fsr2h,f,c
  6804  0040D0  0E01               	movlw	1
  6805  0040D2  6EDF               	movwf	indf2,c
  6806  0040D4                     
  6807                           ; BSR set to: 1
  6808                           ;pff.c: 852:  return FR_OK;
  6809  0040D4  0E00               	movlw	0
  6810  0040D6                     l336:
  6811                           
  6812                           ; BSR set to: 1
  6813  0040D6  0012               	return		;funcret
  6814  0040D8                     __end_of_pf_open:
  6815                           	callstack 0
  6816                           
  6817 ;; *************** function _follow_path *****************
  6818 ;; Defined at:
  6819 ;;		line 676 in file "pff.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;  dj              2   91[BANK0 ] PTR struct .
  6822 ;;		 -> pf_open@dj(16), main@dir(16), 
  6823 ;;  dir             2   93[BANK0 ] PTR unsigned char 
  6824 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  6825 ;;  path            2   95[BANK0 ] PTR const unsigned char 
  6826 ;;		 -> Line(128), 
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;  res             1   97[BANK0 ] enum E2600
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  1    wreg      enum E2600
  6831 ;; Registers used:
  6832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 0/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6838 ;;      Params:         0       6       0       0       0       0       0
  6839 ;;      Locals:         0       1       0       0       0       0       0
  6840 ;;      Temps:          1       0       0       0       0       0       0
  6841 ;;      Totals:         1       7       0       0       0       0       0
  6842 ;;Total ram usage:        8 bytes
  6843 ;; Hardware stack levels used: 1
  6844 ;; Hardware stack levels required when called: 13
  6845 ;; This function calls:
  6846 ;;		_create_name
  6847 ;;		_dir_find
  6848 ;;		_dir_rewind
  6849 ;;		_get_clust
  6850 ;; This function is called by:
  6851 ;;		_pf_open
  6852 ;;		_pf_opendir
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           	psect	text18
  6857  004246                     __ptext18:
  6858                           	callstack 0
  6859  004246                     _follow_path:
  6860                           	callstack 16
  6861  004246                     
  6862                           ;pff.c: 677:  DIR *dj,;pff.c: 678:  BYTE *dir,;pff.c: 679:  const char *path;pff.c: 681:
      +                           {;pff.c: 682:  FRESULT res;;pff.c: 685:  while (*path == ' ') path++;
  6863  004246  EF28  F021         	goto	l7811
  6864  00424A                     l7809:
  6865  00424A  0100               	movlb	0	; () banked
  6866  00424C  4BDF               	infsnz	follow_path@path& (0+255),f,b
  6867  00424E  2BE0               	incf	(follow_path@path+1)& (0+255),f,b
  6868  004250                     l7811:
  6869  004250  C0DF  FFD9         	movff	follow_path@path,fsr2l
  6870  004254  C0E0  FFDA         	movff	follow_path@path+1,fsr2h
  6871  004258  0E20               	movlw	32
  6872  00425A  18DE               	xorwf	postinc2,w,c
  6873  00425C  B4D8               	btfsc	status,2,c
  6874  00425E  EF33  F021         	goto	u10111
  6875  004262  EF35  F021         	goto	u10110
  6876  004266                     u10111:
  6877  004266  EF25  F021         	goto	l7809
  6878  00426A                     u10110:
  6879  00426A                     
  6880                           ;pff.c: 686:  if (*path == '/') path++;
  6881  00426A  C0DF  FFD9         	movff	follow_path@path,fsr2l
  6882  00426E  C0E0  FFDA         	movff	follow_path@path+1,fsr2h
  6883  004272  0E2F               	movlw	47
  6884  004274  18DE               	xorwf	postinc2,w,c
  6885  004276  A4D8               	btfss	status,2,c
  6886  004278  EF40  F021         	goto	u10121
  6887  00427C  EF42  F021         	goto	u10120
  6888  004280                     u10121:
  6889  004280  EF45  F021         	goto	l7817
  6890  004284                     u10120:
  6891  004284  0100               	movlb	0	; () banked
  6892  004286  4BDF               	infsnz	follow_path@path& (0+255),f,b
  6893  004288  2BE0               	incf	(follow_path@path+1)& (0+255),f,b
  6894  00428A                     l7817:
  6895                           
  6896                           ;pff.c: 687:  dj->sclust = 0;
  6897  00428A  0100               	movlb	0	; () banked
  6898  00428C  EE20 F004          	lfsr	2,4
  6899  004290  51DB               	movf	follow_path@dj& (0+255),w,b
  6900  004292  26D9               	addwf	fsr2l,f,c
  6901  004294  51DC               	movf	(follow_path@dj+1)& (0+255),w,b
  6902  004296  22DA               	addwfc	fsr2h,f,c
  6903  004298  6ADE               	clrf	postinc2,c
  6904  00429A  6ADE               	clrf	postinc2,c
  6905  00429C  6ADE               	clrf	postinc2,c
  6906  00429E  6ADD               	clrf	postdec2,c
  6907  0042A0                     
  6908                           ; BSR set to: 0
  6909                           ;pff.c: 689:  if ((BYTE)*path < ' ') {
  6910  0042A0  C0DF  FFD9         	movff	follow_path@path,fsr2l
  6911  0042A4  C0E0  FFDA         	movff	follow_path@path+1,fsr2h
  6912  0042A8  0E20               	movlw	32
  6913  0042AA  60DF               	cpfslt	indf2,c
  6914  0042AC  EF5A  F021         	goto	u10131
  6915  0042B0  EF5C  F021         	goto	u10130
  6916  0042B4                     u10131:
  6917  0042B4  EF6C  F021         	goto	l7825
  6918  0042B8                     u10130:
  6919  0042B8                     
  6920                           ; BSR set to: 0
  6921                           ;pff.c: 690:   res = dir_rewind(dj);
  6922  0042B8  C0DB  F01D         	movff	follow_path@dj,dir_rewind@dj
  6923  0042BC  C0DC  F01E         	movff	follow_path@dj+1,dir_rewind@dj+1
  6924  0042C0  EC5B  F024         	call	_dir_rewind	;wreg free
  6925  0042C4  0100               	movlb	0	; () banked
  6926  0042C6  6FE1               	movwf	follow_path@res& (0+255),b
  6927  0042C8                     
  6928                           ; BSR set to: 0
  6929                           ;pff.c: 691:   dir[0] = 0;
  6930  0042C8  C0DD  FFD9         	movff	follow_path@dir,fsr2l
  6931  0042CC  C0DE  FFDA         	movff	follow_path@dir+1,fsr2h
  6932  0042D0  0E00               	movlw	0
  6933  0042D2  6EDF               	movwf	indf2,c
  6934                           
  6935                           ;pff.c: 693:  } else {
  6936  0042D4  EFD6  F021         	goto	l7847
  6937  0042D8                     l7825:
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;pff.c: 695:    res = create_name(dj, &path);
  6941  0042D8  C0DB  F00E         	movff	follow_path@dj,create_name@dj
  6942  0042DC  C0DC  F00F         	movff	follow_path@dj+1,create_name@dj+1
  6943  0042E0  0EDF               	movlw	low follow_path@path
  6944  0042E2  6E10               	movwf	create_name@path^0,c
  6945  0042E4  0E00               	movlw	high follow_path@path
  6946  0042E6  6E11               	movwf	(create_name@path+1)^0,c
  6947  0042E8  EC44  F01A         	call	_create_name	;wreg free
  6948  0042EC  0100               	movlb	0	; () banked
  6949  0042EE  6FE1               	movwf	follow_path@res& (0+255),b
  6950  0042F0                     
  6951                           ; BSR set to: 0
  6952                           ;pff.c: 696:    if (res != FR_OK) break;
  6953  0042F0  51E1               	movf	follow_path@res& (0+255),w,b
  6954  0042F2  B4D8               	btfsc	status,2,c
  6955  0042F4  EF7E  F021         	goto	u10141
  6956  0042F8  EF80  F021         	goto	u10140
  6957  0042FC                     u10141:
  6958  0042FC  EF82  F021         	goto	l7831
  6959  004300                     u10140:
  6960  004300  EFD6  F021         	goto	l7847
  6961  004304                     l7831:
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;pff.c: 697:    res = dir_find(dj, dir);
  6965  004304  C0DB  F0D3         	movff	follow_path@dj,dir_find@dj
  6966  004308  C0DC  F0D4         	movff	follow_path@dj+1,dir_find@dj+1
  6967  00430C  C0DD  F0D5         	movff	follow_path@dir,dir_find@dir
  6968  004310  C0DE  F0D6         	movff	follow_path@dir+1,dir_find@dir+1
  6969  004314  EC8A  F022         	call	_dir_find	;wreg free
  6970  004318  0100               	movlb	0	; () banked
  6971  00431A  6FE1               	movwf	follow_path@res& (0+255),b
  6972  00431C                     
  6973                           ; BSR set to: 0
  6974                           ;pff.c: 698:    if (res != FR_OK) break;
  6975  00431C  51E1               	movf	follow_path@res& (0+255),w,b
  6976  00431E  B4D8               	btfsc	status,2,c
  6977  004320  EF94  F021         	goto	u10151
  6978  004324  EF96  F021         	goto	u10150
  6979  004328                     u10151:
  6980  004328  EF98  F021         	goto	l7837
  6981  00432C                     u10150:
  6982  00432C  EFD6  F021         	goto	l7847
  6983  004330                     l7837:
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;pff.c: 699:    if (dj->fn[11]) break;
  6987  004330  EE20 F002          	lfsr	2,2
  6988  004334  51DB               	movf	follow_path@dj& (0+255),w,b
  6989  004336  26D9               	addwf	fsr2l,f,c
  6990  004338  51DC               	movf	(follow_path@dj+1)& (0+255),w,b
  6991  00433A  22DA               	addwfc	fsr2h,f,c
  6992  00433C  EE10 F00B          	lfsr	1,11
  6993  004340  50DE               	movf	postinc2,w,c
  6994  004342  26E1               	addwf	fsr1l,f,c
  6995  004344  50DD               	movf	postdec2,w,c
  6996  004346  22E2               	addwfc	fsr1h,f,c
  6997  004348  50E7               	movf	indf1,w,c
  6998  00434A  B4D8               	btfsc	status,2,c
  6999  00434C  EFAA  F021         	goto	u10161
  7000  004350  EFAC  F021         	goto	u10160
  7001  004354                     u10161:
  7002  004354  EFAE  F021         	goto	l7841
  7003  004358                     u10160:
  7004  004358  EFD6  F021         	goto	l7847
  7005  00435C                     l7841:
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;pff.c: 700:    if (!(dir[11] & 0x10)) {
  7009  00435C  EE20 F00B          	lfsr	2,11
  7010  004360  51DD               	movf	follow_path@dir& (0+255),w,b
  7011  004362  26D9               	addwf	fsr2l,f,c
  7012  004364  51DE               	movf	(follow_path@dir+1)& (0+255),w,b
  7013  004366  22DA               	addwfc	fsr2h,f,c
  7014  004368  B8DF               	btfsc	indf2,4,c
  7015  00436A  EFB9  F021         	goto	u10171
  7016  00436E  EFBB  F021         	goto	u10170
  7017  004372                     u10171:
  7018  004372  EFBF  F021         	goto	l7845
  7019  004376                     u10170:
  7020  004376                     
  7021                           ; BSR set to: 0
  7022                           ;pff.c: 701:     res = FR_NO_FILE; break;
  7023  004376  0E03               	movlw	3
  7024  004378  6FE1               	movwf	follow_path@res& (0+255),b
  7025  00437A  EFD6  F021         	goto	l7847
  7026  00437E                     l7845:
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;pff.c: 703:    dj->sclust = get_clust(dir);
  7030  00437E  C0DD  F006         	movff	follow_path@dir,get_clust@dir
  7031  004382  C0DE  F007         	movff	follow_path@dir+1,get_clust@dir+1
  7032  004386  ECE0  F028         	call	_get_clust	;wreg free
  7033  00438A  0100               	movlb	0	; () banked
  7034  00438C  EE20 F004          	lfsr	2,4
  7035  004390  51DB               	movf	follow_path@dj& (0+255),w,b
  7036  004392  26D9               	addwf	fsr2l,f,c
  7037  004394  51DC               	movf	(follow_path@dj+1)& (0+255),w,b
  7038  004396  22DA               	addwfc	fsr2h,f,c
  7039  004398  C006  FFDE         	movff	?_get_clust,postinc2
  7040  00439C  C007  FFDE         	movff	?_get_clust+1,postinc2
  7041  0043A0  C008  FFDE         	movff	?_get_clust+2,postinc2
  7042  0043A4  C009  FFDE         	movff	?_get_clust+3,postinc2
  7043                           
  7044                           ;pff.c: 704:   }
  7045  0043A8  EF6C  F021         	goto	l7825
  7046  0043AC                     l7847:
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;pff.c: 707:  return res;
  7050  0043AC  51E1               	movf	follow_path@res& (0+255),w,b
  7051  0043AE                     
  7052                           ; BSR set to: 0
  7053  0043AE  0012               	return		;funcret
  7054  0043B0                     __end_of_follow_path:
  7055                           	callstack 0
  7056                           
  7057 ;; *************** function _get_clust *****************
  7058 ;; Defined at:
  7059 ;;		line 410 in file "pff.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;  dir             2    5[COMRAM] PTR unsigned char 
  7062 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;  clst            4   17[COMRAM] unsigned long 
  7065 ;;  fs              2    0        PTR struct .
  7066 ;;		 -> NULL(0), main@fs(42), 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  4    5[COMRAM] unsigned long 
  7069 ;; Registers used:
  7070 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7076 ;;      Params:         4       0       0       0       0       0       0
  7077 ;;      Locals:         4       0       0       0       0       0       0
  7078 ;;      Temps:          8       0       0       0       0       0       0
  7079 ;;      Totals:        16       0       0       0       0       0       0
  7080 ;;Total ram usage:       16 bytes
  7081 ;; Hardware stack levels used: 1
  7082 ;; Hardware stack levels required when called: 1
  7083 ;; This function calls:
  7084 ;;		Nothing
  7085 ;; This function is called by:
  7086 ;;		_follow_path
  7087 ;;		_pf_open
  7088 ;;		_pf_opendir
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text19
  7093  0051C0                     __ptext19:
  7094                           	callstack 0
  7095  0051C0                     _get_clust:
  7096                           	callstack 28
  7097  0051C0                     
  7098                           ;pff.c: 419:   clst = (WORD)(((WORD)*((BYTE*)(dir+20)+1)<<8)|(WORD)*(BYTE*)(dir+20));
  7099  0051C0  EE20 F015          	lfsr	2,21
  7100  0051C4  5006               	movf	get_clust@dir^0,w,c
  7101  0051C6  26D9               	addwf	fsr2l,f,c
  7102  0051C8  5007               	movf	(get_clust@dir+1)^0,w,c
  7103  0051CA  22DA               	addwfc	fsr2h,f,c
  7104  0051CC  50DF               	movf	indf2,w,c
  7105  0051CE  6E0A               	movwf	??_get_clust^0,c
  7106  0051D0  500A               	movf	??_get_clust^0,w,c
  7107  0051D2  6E0C               	movwf	(??_get_clust+2)^0,c
  7108  0051D4  6A0B               	clrf	(??_get_clust+1)^0,c
  7109  0051D6  EE20 F014          	lfsr	2,20
  7110  0051DA  5006               	movf	get_clust@dir^0,w,c
  7111  0051DC  26D9               	addwf	fsr2l,f,c
  7112  0051DE  5007               	movf	(get_clust@dir+1)^0,w,c
  7113  0051E0  22DA               	addwfc	fsr2h,f,c
  7114  0051E2  50DF               	movf	indf2,w,c
  7115  0051E4  6E0D               	movwf	(??_get_clust+3)^0,c
  7116  0051E6  500D               	movf	(??_get_clust+3)^0,w,c
  7117  0051E8  120B               	iorwf	(??_get_clust+1)^0,f,c
  7118  0051EA  0E00               	movlw	0
  7119  0051EC  120C               	iorwf	(??_get_clust+2)^0,f,c
  7120  0051EE  C00B  F012         	movff	??_get_clust+1,get_clust@clst
  7121  0051F2  C00C  F013         	movff	??_get_clust+2,get_clust@clst+1
  7122  0051F6  6A14               	clrf	(get_clust@clst+2)^0,c
  7123  0051F8  6A15               	clrf	(get_clust@clst+3)^0,c
  7124  0051FA                     
  7125                           ;pff.c: 420:   clst <<= 16;
  7126  0051FA  0E10               	movlw	16
  7127  0051FC                     u5665:
  7128  0051FC  90D8               	bcf	status,0,c
  7129  0051FE  3612               	rlcf	get_clust@clst^0,f,c
  7130  005200  3613               	rlcf	(get_clust@clst+1)^0,f,c
  7131  005202  3614               	rlcf	(get_clust@clst+2)^0,f,c
  7132  005204  3615               	rlcf	(get_clust@clst+3)^0,f,c
  7133  005206  2EE8               	decfsz	wreg,f,c
  7134  005208  EFFE  F028         	goto	u5665
  7135  00520C                     
  7136                           ;pff.c: 422:  clst |= (WORD)(((WORD)*((BYTE*)(dir+26)+1)<<8)|(WORD)*(BYTE*)(dir+26));
  7137  00520C  EE20 F01B          	lfsr	2,27
  7138  005210  5006               	movf	get_clust@dir^0,w,c
  7139  005212  26D9               	addwf	fsr2l,f,c
  7140  005214  5007               	movf	(get_clust@dir+1)^0,w,c
  7141  005216  22DA               	addwfc	fsr2h,f,c
  7142  005218  50DF               	movf	indf2,w,c
  7143  00521A  6E0A               	movwf	??_get_clust^0,c
  7144  00521C  500A               	movf	??_get_clust^0,w,c
  7145  00521E  6E0C               	movwf	(??_get_clust+2)^0,c
  7146  005220  6A0B               	clrf	(??_get_clust+1)^0,c
  7147  005222  EE20 F01A          	lfsr	2,26
  7148  005226  5006               	movf	get_clust@dir^0,w,c
  7149  005228  26D9               	addwf	fsr2l,f,c
  7150  00522A  5007               	movf	(get_clust@dir+1)^0,w,c
  7151  00522C  22DA               	addwfc	fsr2h,f,c
  7152  00522E  50DF               	movf	indf2,w,c
  7153  005230  6E0D               	movwf	(??_get_clust+3)^0,c
  7154  005232  500D               	movf	(??_get_clust+3)^0,w,c
  7155  005234  100B               	iorwf	(??_get_clust+1)^0,w,c
  7156  005236  6E0E               	movwf	(??_get_clust+4)^0,c
  7157  005238  500C               	movf	(??_get_clust+2)^0,w,c
  7158  00523A  6E0F               	movwf	(??_get_clust+5)^0,c
  7159  00523C  6A10               	clrf	(??_get_clust+6)^0,c
  7160  00523E  6A11               	clrf	(??_get_clust+7)^0,c
  7161  005240  500E               	movf	(??_get_clust+4)^0,w,c
  7162  005242  1212               	iorwf	get_clust@clst^0,f,c
  7163  005244  500F               	movf	(??_get_clust+5)^0,w,c
  7164  005246  1213               	iorwf	(get_clust@clst+1)^0,f,c
  7165  005248  5010               	movf	(??_get_clust+6)^0,w,c
  7166  00524A  1214               	iorwf	(get_clust@clst+2)^0,f,c
  7167  00524C  5011               	movf	(??_get_clust+7)^0,w,c
  7168  00524E  1215               	iorwf	(get_clust@clst+3)^0,f,c
  7169  005250                     
  7170                           ;pff.c: 424:  return clst;
  7171  005250  C012  F006         	movff	get_clust@clst,?_get_clust
  7172  005254  C013  F007         	movff	get_clust@clst+1,?_get_clust+1
  7173  005258  C014  F008         	movff	get_clust@clst+2,?_get_clust+2
  7174  00525C  C015  F009         	movff	get_clust@clst+3,?_get_clust+3
  7175  005260  0012               	return		;funcret
  7176  005262                     __end_of_get_clust:
  7177                           	callstack 0
  7178                           
  7179 ;; *************** function _dir_find *****************
  7180 ;; Defined at:
  7181 ;;		line 506 in file "pff.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  dj              2   83[BANK0 ] PTR struct .
  7184 ;;		 -> pf_open@dj(16), main@dir(16), 
  7185 ;;  dir             2   85[BANK0 ] PTR unsigned char 
  7186 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;  res             1   90[BANK0 ] enum E2600
  7189 ;;  c               1   89[BANK0 ] unsigned char 
  7190 ;; Return value:  Size  Location     Type
  7191 ;;                  1    wreg      enum E2600
  7192 ;; Registers used:
  7193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7199 ;;      Params:         0       4       0       0       0       0       0
  7200 ;;      Locals:         0       2       0       0       0       0       0
  7201 ;;      Temps:          0       2       0       0       0       0       0
  7202 ;;      Totals:         0       8       0       0       0       0       0
  7203 ;;Total ram usage:        8 bytes
  7204 ;; Hardware stack levels used: 1
  7205 ;; Hardware stack levels required when called: 12
  7206 ;; This function calls:
  7207 ;;		_dir_next
  7208 ;;		_dir_rewind
  7209 ;;		_disk_readp
  7210 ;;		_mem_cmp
  7211 ;; This function is called by:
  7212 ;;		_follow_path
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text20
  7217  004514                     __ptext20:
  7218                           	callstack 0
  7219  004514                     _dir_find:
  7220                           	callstack 16
  7221  004514                     
  7222                           ;pff.c: 507:  DIR *dj,;pff.c: 508:  BYTE *dir;pff.c: 510: {;pff.c: 511:  FRESULT res;;pf
      +                          f.c: 512:  BYTE c;;pff.c: 515:  res = dir_rewind(dj);
  7223  004514  C0D3  F01D         	movff	dir_find@dj,dir_rewind@dj
  7224  004518  C0D4  F01E         	movff	dir_find@dj+1,dir_rewind@dj+1
  7225  00451C  EC5B  F024         	call	_dir_rewind	;wreg free
  7226  004520  0100               	movlb	0	; () banked
  7227  004522  6FDA               	movwf	dir_find@res& (0+255),b
  7228  004524                     
  7229                           ; BSR set to: 0
  7230                           ;pff.c: 516:  if (res != FR_OK) return res;
  7231  004524  51DA               	movf	dir_find@res& (0+255),w,b
  7232  004526  B4D8               	btfsc	status,2,c
  7233  004528  EF98  F022         	goto	u9581
  7234  00452C  EF9A  F022         	goto	u9580
  7235  004530                     u9581:
  7236  004530  EF9E  F022         	goto	l7573
  7237  004534                     u9580:
  7238  004534                     l7569:
  7239  004534  0100               	movlb	0	; () banked
  7240  004536  51DA               	movf	dir_find@res& (0+255),w,b
  7241  004538  EF33  F023         	goto	l240
  7242  00453C                     l7573:
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;pff.c: 519:   res = disk_readp(dir, dj->sect, (dj->index % 16) * 32, 32)
  7246  00453C  C0D5  F092         	movff	dir_find@dir,disk_readp@buff
  7247  004540  C0D6  F093         	movff	dir_find@dir+1,disk_readp@buff+1
  7248  004544  EE20 F00C          	lfsr	2,12
  7249  004548  51D3               	movf	dir_find@dj& (0+255),w,b
  7250  00454A  26D9               	addwf	fsr2l,f,c
  7251  00454C  51D4               	movf	(dir_find@dj+1)& (0+255),w,b
  7252  00454E  22DA               	addwfc	fsr2h,f,c
  7253  004550  CFDE F094          	movff	postinc2,disk_readp@sector
  7254  004554  CFDE F095          	movff	postinc2,disk_readp@sector+1
  7255  004558  CFDE F096          	movff	postinc2,disk_readp@sector+2
  7256  00455C  CFDE F097          	movff	postinc2,disk_readp@sector+3
  7257  004560  C0D3  FFD9         	movff	dir_find@dj,fsr2l
  7258  004564  C0D4  FFDA         	movff	dir_find@dj+1,fsr2h
  7259  004568  CFDE F0D7          	movff	postinc2,??_dir_find
  7260  00456C  CFDD F0D8          	movff	postdec2,??_dir_find+1
  7261  004570  0E0F               	movlw	15
  7262  004572  17D7               	andwf	??_dir_find& (0+255),f,b
  7263  004574  0E00               	movlw	0
  7264  004576  17D8               	andwf	(??_dir_find+1)& (0+255),f,b
  7265  004578  0E05               	movlw	5
  7266  00457A                     u9595:
  7267  00457A  90D8               	bcf	status,0,c
  7268  00457C  37D7               	rlcf	??_dir_find& (0+255),f,b
  7269  00457E  37D8               	rlcf	(??_dir_find+1)& (0+255),f,b
  7270  004580  2EE8               	decfsz	wreg,f,c
  7271  004582  EFBD  F022         	goto	u9595
  7272  004586  C0D7  F098         	movff	??_dir_find,disk_readp@offset
  7273  00458A  C0D8  F099         	movff	??_dir_find+1,disk_readp@offset+1
  7274  00458E  0E00               	movlw	0
  7275  004590  6F9B               	movwf	(disk_readp@count+1)& (0+255),b
  7276  004592  0E20               	movlw	32
  7277  004594  6F9A               	movwf	disk_readp@count& (0+255),b
  7278  004596  ECDC  F01B         	call	_disk_readp	;wreg free
  7279  00459A  0900               	iorlw	0
  7280  00459C  A4D8               	btfss	status,2,c
  7281  00459E  EFD3  F022         	goto	u9601
  7282  0045A2  EFD6  F022         	goto	u9600
  7283  0045A6                     u9601:
  7284  0045A6  0E01               	movlw	1
  7285  0045A8  EFD7  F022         	goto	u9610
  7286  0045AC                     u9600:
  7287  0045AC  0E00               	movlw	0
  7288  0045AE                     u9610:
  7289  0045AE  0100               	movlb	0	; () banked
  7290  0045B0  6FDA               	movwf	dir_find@res& (0+255),b
  7291  0045B2                     
  7292                           ; BSR set to: 0
  7293                           ;pff.c: 521:   if (res != FR_OK) break;
  7294  0045B2  51DA               	movf	dir_find@res& (0+255),w,b
  7295  0045B4  B4D8               	btfsc	status,2,c
  7296  0045B6  EFDF  F022         	goto	u9621
  7297  0045BA  EFE1  F022         	goto	u9620
  7298  0045BE                     u9621:
  7299  0045BE  EFE3  F022         	goto	l7579
  7300  0045C2                     u9620:
  7301  0045C2  EF9A  F022         	goto	l7569
  7302  0045C6                     l7579:
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;pff.c: 522:   c = dir[0];
  7306  0045C6  C0D5  FFD9         	movff	dir_find@dir,fsr2l
  7307  0045CA  C0D6  FFDA         	movff	dir_find@dir+1,fsr2h
  7308  0045CE  50DF               	movf	indf2,w,c
  7309  0045D0  6FD9               	movwf	dir_find@c& (0+255),b
  7310  0045D2                     
  7311                           ; BSR set to: 0
  7312                           ;pff.c: 523:   if (c == 0) { res = FR_NO_FILE; break; }
  7313  0045D2  51D9               	movf	dir_find@c& (0+255),w,b
  7314  0045D4  A4D8               	btfss	status,2,c
  7315  0045D6  EFEF  F022         	goto	u9631
  7316  0045DA  EFF1  F022         	goto	u9630
  7317  0045DE                     u9631:
  7318  0045DE  EFF5  F022         	goto	l7585
  7319  0045E2                     u9630:
  7320  0045E2                     
  7321                           ; BSR set to: 0
  7322  0045E2  0E03               	movlw	3
  7323  0045E4  6FDA               	movwf	dir_find@res& (0+255),b
  7324  0045E6  EF9A  F022         	goto	l7569
  7325  0045EA                     l7585:
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;pff.c: 524:   if (!(dir[11] & 0x08) && !mem_cmp(dir, dj->fn, 11))
  7329  0045EA  EE20 F00B          	lfsr	2,11
  7330  0045EE  51D5               	movf	dir_find@dir& (0+255),w,b
  7331  0045F0  26D9               	addwf	fsr2l,f,c
  7332  0045F2  51D6               	movf	(dir_find@dir+1)& (0+255),w,b
  7333  0045F4  22DA               	addwfc	fsr2h,f,c
  7334  0045F6  B6DF               	btfsc	indf2,3,c
  7335  0045F8  EF00  F023         	goto	u9641
  7336  0045FC  EF02  F023         	goto	u9640
  7337  004600                     u9641:
  7338  004600  EF21  F023         	goto	l7591
  7339  004604                     u9640:
  7340  004604                     
  7341                           ; BSR set to: 0
  7342  004604  C0D5  F006         	movff	dir_find@dir,mem_cmp@dst
  7343  004608  C0D6  F007         	movff	dir_find@dir+1,mem_cmp@dst+1
  7344  00460C  EE20 F002          	lfsr	2,2
  7345  004610  51D3               	movf	dir_find@dj& (0+255),w,b
  7346  004612  26D9               	addwf	fsr2l,f,c
  7347  004614  51D4               	movf	(dir_find@dj+1)& (0+255),w,b
  7348  004616  22DA               	addwfc	fsr2h,f,c
  7349  004618  CFDE F008          	movff	postinc2,mem_cmp@src
  7350  00461C  CFDD F009          	movff	postdec2,mem_cmp@src+1
  7351  004620  0E00               	movlw	0
  7352  004622  6E0B               	movwf	(mem_cmp@cnt+1)^0,c
  7353  004624  0E0B               	movlw	11
  7354  004626  6E0A               	movwf	mem_cmp@cnt^0,c
  7355  004628  ECFF  F029         	call	_mem_cmp	;wreg free
  7356  00462C  5006               	movf	?_mem_cmp^0,w,c
  7357  00462E  1007               	iorwf	(?_mem_cmp+1)^0,w,c
  7358  004630  A4D8               	btfss	status,2,c
  7359  004632  EF1D  F023         	goto	u9651
  7360  004636  EF1F  F023         	goto	u9650
  7361  00463A                     u9651:
  7362  00463A  EF21  F023         	goto	l7591
  7363  00463E                     u9650:
  7364  00463E  EF9A  F022         	goto	l7569
  7365  004642                     l7591:
  7366                           
  7367                           ;pff.c: 526:   res = dir_next(dj);
  7368  004642  C0D3  F0C2         	movff	dir_find@dj,dir_next@dj
  7369  004646  C0D4  F0C3         	movff	dir_find@dj+1,dir_next@dj+1
  7370  00464A  EC54  F016         	call	_dir_next	;wreg free
  7371  00464E  0100               	movlb	0	; () banked
  7372  004650  6FDA               	movwf	dir_find@res& (0+255),b
  7373  004652                     
  7374                           ; BSR set to: 0
  7375                           ;pff.c: 527:  } while (res == FR_OK);
  7376  004652  51DA               	movf	dir_find@res& (0+255),w,b
  7377  004654  B4D8               	btfsc	status,2,c
  7378  004656  EF2F  F023         	goto	u9661
  7379  00465A  EF31  F023         	goto	u9660
  7380  00465E                     u9661:
  7381  00465E  EF9E  F022         	goto	l7573
  7382  004662                     u9660:
  7383  004662  EF9A  F022         	goto	l7569
  7384  004666                     l240:
  7385                           
  7386                           ; BSR set to: 0
  7387  004666  0012               	return		;funcret
  7388  004668                     __end_of_dir_find:
  7389                           	callstack 0
  7390                           
  7391 ;; *************** function _mem_cmp *****************
  7392 ;; Defined at:
  7393 ;;		line 332 in file "pff.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  dst             2    5[COMRAM] PTR const void 
  7396 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  7397 ;;  src             2    7[COMRAM] PTR const void 
  7398 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  7399 ;;  cnt             2    9[COMRAM] int 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;  r               2   17[COMRAM] int 
  7402 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7403 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  7404 ;;  d               2   13[COMRAM] PTR const unsigned char 
  7405 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  2    5[COMRAM] int 
  7408 ;; Registers used:
  7409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7415 ;;      Params:         6       0       0       0       0       0       0
  7416 ;;      Locals:         6       0       0       0       0       0       0
  7417 ;;      Temps:          2       0       0       0       0       0       0
  7418 ;;      Totals:        14       0       0       0       0       0       0
  7419 ;;Total ram usage:       14 bytes
  7420 ;; Hardware stack levels used: 1
  7421 ;; Hardware stack levels required when called: 1
  7422 ;; This function calls:
  7423 ;;		Nothing
  7424 ;; This function is called by:
  7425 ;;		_dir_find
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429                           	psect	text21
  7430  0053FE                     __ptext21:
  7431                           	callstack 0
  7432  0053FE                     _mem_cmp:
  7433                           	callstack 26
  7434  0053FE                     
  7435                           ;pff.c: 333:  const char *d = (const char *)dst, *s = (const char *)src;
  7436  0053FE  C006  F00E         	movff	mem_cmp@dst,mem_cmp@d
  7437  005402  C007  F00F         	movff	mem_cmp@dst+1,mem_cmp@d+1
  7438  005406  C008  F010         	movff	mem_cmp@src,mem_cmp@s
  7439  00540A  C009  F011         	movff	mem_cmp@src+1,mem_cmp@s+1
  7440  00540E                     
  7441                           ;pff.c: 334:  int r = 0;
  7442  00540E  0E00               	movlw	0
  7443  005410  6E13               	movwf	(mem_cmp@r+1)^0,c
  7444  005412  0E00               	movlw	0
  7445  005414  6E12               	movwf	mem_cmp@r^0,c
  7446  005416                     l4983:
  7447  005416  060A               	decf	mem_cmp@cnt^0,f,c
  7448  005418  A0D8               	btfss	status,0,c
  7449  00541A  060B               	decf	(mem_cmp@cnt+1)^0,f,c
  7450  00541C  280A               	incf	mem_cmp@cnt^0,w,c
  7451  00541E  E108               	bnz	u5520
  7452  005420  280B               	incf	(mem_cmp@cnt+1)^0,w,c
  7453  005422  B4D8               	btfsc	status,2,c
  7454  005424  EF16  F02A         	goto	u5521
  7455  005428  EF18  F02A         	goto	u5520
  7456  00542C                     u5521:
  7457  00542C  EF37  F02A         	goto	l189
  7458  005430                     u5520:
  7459  005430  C00E  FFD9         	movff	mem_cmp@d,fsr2l
  7460  005434  C00F  FFDA         	movff	mem_cmp@d+1,fsr2h
  7461  005438  4A0E               	infsnz	mem_cmp@d^0,f,c
  7462  00543A  2A0F               	incf	(mem_cmp@d+1)^0,f,c
  7463  00543C  50DF               	movf	indf2,w,c
  7464  00543E  6E0C               	movwf	??_mem_cmp^0,c
  7465  005440  C010  FFD9         	movff	mem_cmp@s,fsr2l
  7466  005444  C011  FFDA         	movff	mem_cmp@s+1,fsr2h
  7467  005448  4A10               	infsnz	mem_cmp@s^0,f,c
  7468  00544A  2A11               	incf	(mem_cmp@s+1)^0,f,c
  7469  00544C  50DF               	movf	indf2,w,c
  7470  00544E  6E0D               	movwf	(??_mem_cmp+1)^0,c
  7471  005450  500D               	movf	(??_mem_cmp+1)^0,w,c
  7472  005452  5C0C               	subwf	??_mem_cmp^0,w,c
  7473  005454  6E12               	movwf	mem_cmp@r^0,c
  7474  005456  6A13               	clrf	(mem_cmp@r+1)^0,c
  7475  005458  A0D8               	btfss	status,0,c
  7476  00545A  0613               	decf	(mem_cmp@r+1)^0,f,c
  7477  00545C  5012               	movf	mem_cmp@r^0,w,c
  7478  00545E  1013               	iorwf	(mem_cmp@r+1)^0,w,c
  7479  005460  B4D8               	btfsc	status,2,c
  7480  005462  EF35  F02A         	goto	u5531
  7481  005466  EF37  F02A         	goto	u5530
  7482  00546A                     u5531:
  7483  00546A  EF0B  F02A         	goto	l4983
  7484  00546E                     u5530:
  7485  00546E                     l189:
  7486                           
  7487                           ;pff.c: 336:  return r;
  7488  00546E  C012  F006         	movff	mem_cmp@r,?_mem_cmp
  7489  005472  C013  F007         	movff	mem_cmp@r+1,?_mem_cmp+1
  7490  005476  0012               	return		;funcret
  7491  005478                     __end_of_mem_cmp:
  7492                           	callstack 0
  7493                           
  7494 ;; *************** function _dir_rewind *****************
  7495 ;; Defined at:
  7496 ;;		line 433 in file "pff.c"
  7497 ;; Parameters:    Size  Location     Type
  7498 ;;  dj              2   28[COMRAM] PTR struct .
  7499 ;;		 -> pf_open@dj(16), main@dir(16), 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  clst            4   40[COMRAM] unsigned long 
  7502 ;;  fs              2   38[COMRAM] PTR struct .
  7503 ;;		 -> NULL(0), main@fs(42), 
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  1    wreg      enum E2600
  7506 ;; Registers used:
  7507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7513 ;;      Params:         2       0       0       0       0       0       0
  7514 ;;      Locals:        10       0       0       0       0       0       0
  7515 ;;      Temps:          4       0       0       0       0       0       0
  7516 ;;      Totals:        16       0       0       0       0       0       0
  7517 ;;Total ram usage:       16 bytes
  7518 ;; Hardware stack levels used: 1
  7519 ;; Hardware stack levels required when called: 3
  7520 ;; This function calls:
  7521 ;;		_clust2sect
  7522 ;; This function is called by:
  7523 ;;		_dir_find
  7524 ;;		_follow_path
  7525 ;;		_pf_opendir
  7526 ;;		_pf_readdir
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text22
  7531  0048B6                     __ptext22:
  7532                           	callstack 0
  7533  0048B6                     _dir_rewind:
  7534                           	callstack 26
  7535  0048B6                     
  7536                           ;pff.c: 434:  DIR *dj;pff.c: 436: {;pff.c: 437:  DWORD clst;;pff.c: 438:  FATFS *fs = Fa
      +                          tFs;
  7537  0048B6  C0F1  F027         	movff	_FatFs,dir_rewind@fs
  7538  0048BA  C0F2  F028         	movff	_FatFs+1,dir_rewind@fs+1
  7539  0048BE                     
  7540                           ;pff.c: 441:  dj->index = 0;
  7541  0048BE  C01D  FFD9         	movff	dir_rewind@dj,fsr2l
  7542  0048C2  C01E  FFDA         	movff	dir_rewind@dj+1,fsr2h
  7543  0048C6  0E00               	movlw	0
  7544  0048C8  6EDE               	movwf	postinc2,c
  7545  0048CA  0E00               	movlw	0
  7546  0048CC  6EDD               	movwf	postdec2,c
  7547  0048CE                     
  7548                           ;pff.c: 442:  clst = dj->sclust;
  7549  0048CE  EE20 F004          	lfsr	2,4
  7550  0048D2  501D               	movf	dir_rewind@dj^0,w,c
  7551  0048D4  26D9               	addwf	fsr2l,f,c
  7552  0048D6  501E               	movf	(dir_rewind@dj+1)^0,w,c
  7553  0048D8  22DA               	addwfc	fsr2h,f,c
  7554  0048DA  CFDE F029          	movff	postinc2,dir_rewind@clst
  7555  0048DE  CFDE F02A          	movff	postinc2,dir_rewind@clst+1
  7556  0048E2  CFDE F02B          	movff	postinc2,dir_rewind@clst+2
  7557  0048E6  CFDE F02C          	movff	postinc2,dir_rewind@clst+3
  7558  0048EA                     
  7559                           ;pff.c: 443:  if (clst == 1 || clst >= fs->n_fatent)
  7560  0048EA  0429               	decf	dir_rewind@clst^0,w,c
  7561  0048EC  102A               	iorwf	(dir_rewind@clst+1)^0,w,c
  7562  0048EE  102B               	iorwf	(dir_rewind@clst+2)^0,w,c
  7563  0048F0  102C               	iorwf	(dir_rewind@clst+3)^0,w,c
  7564  0048F2  B4D8               	btfsc	status,2,c
  7565  0048F4  EF7E  F024         	goto	u9461
  7566  0048F8  EF80  F024         	goto	u9460
  7567  0048FC                     u9461:
  7568  0048FC  EF95  F024         	goto	l7491
  7569  004900                     u9460:
  7570  004900  EE20 F006          	lfsr	2,6
  7571  004904  5027               	movf	dir_rewind@fs^0,w,c
  7572  004906  26D9               	addwf	fsr2l,f,c
  7573  004908  5028               	movf	(dir_rewind@fs+1)^0,w,c
  7574  00490A  22DA               	addwfc	fsr2h,f,c
  7575  00490C  50DE               	movf	postinc2,w,c
  7576  00490E  5C29               	subwf	dir_rewind@clst^0,w,c
  7577  004910  50DE               	movf	postinc2,w,c
  7578  004912  582A               	subwfb	(dir_rewind@clst+1)^0,w,c
  7579  004914  50DE               	movf	postinc2,w,c
  7580  004916  582B               	subwfb	(dir_rewind@clst+2)^0,w,c
  7581  004918  50DE               	movf	postinc2,w,c
  7582  00491A  582C               	subwfb	(dir_rewind@clst+3)^0,w,c
  7583  00491C  A0D8               	btfss	status,0,c
  7584  00491E  EF93  F024         	goto	u9471
  7585  004922  EF95  F024         	goto	u9470
  7586  004926                     u9471:
  7587  004926  EF98  F024         	goto	l7495
  7588  00492A                     u9470:
  7589  00492A                     l7491:
  7590                           
  7591                           ;pff.c: 444:   return FR_DISK_ERR;
  7592  00492A  0E01               	movlw	1
  7593  00492C  EFE0  F024         	goto	l216
  7594  004930                     l7495:
  7595  004930  5029               	movf	dir_rewind@clst^0,w,c
  7596  004932  102A               	iorwf	(dir_rewind@clst+1)^0,w,c
  7597  004934  102B               	iorwf	(dir_rewind@clst+2)^0,w,c
  7598  004936  102C               	iorwf	(dir_rewind@clst+3)^0,w,c
  7599  004938  A4D8               	btfss	status,2,c
  7600  00493A  EFA1  F024         	goto	u9481
  7601  00493E  EFA3  F024         	goto	u9480
  7602  004942                     u9481:
  7603  004942  EFB1  F024         	goto	l217
  7604  004946                     u9480:
  7605  004946                     
  7606                           ;pff.c: 446:   clst = (DWORD)fs->dirbase;
  7607  004946  EE20 F00E          	lfsr	2,14
  7608  00494A  5027               	movf	dir_rewind@fs^0,w,c
  7609  00494C  26D9               	addwf	fsr2l,f,c
  7610  00494E  5028               	movf	(dir_rewind@fs+1)^0,w,c
  7611  004950  22DA               	addwfc	fsr2h,f,c
  7612  004952  CFDE F029          	movff	postinc2,dir_rewind@clst
  7613  004956  CFDE F02A          	movff	postinc2,dir_rewind@clst+1
  7614  00495A  CFDE F02B          	movff	postinc2,dir_rewind@clst+2
  7615  00495E  CFDE F02C          	movff	postinc2,dir_rewind@clst+3
  7616  004962                     l217:
  7617                           
  7618                           ;pff.c: 447:  dj->clust = clst;
  7619  004962  EE20 F008          	lfsr	2,8
  7620  004966  501D               	movf	dir_rewind@dj^0,w,c
  7621  004968  26D9               	addwf	fsr2l,f,c
  7622  00496A  501E               	movf	(dir_rewind@dj+1)^0,w,c
  7623  00496C  22DA               	addwfc	fsr2h,f,c
  7624  00496E  C029  FFDE         	movff	dir_rewind@clst,postinc2
  7625  004972  C02A  FFDE         	movff	dir_rewind@clst+1,postinc2
  7626  004976  C02B  FFDE         	movff	dir_rewind@clst+2,postinc2
  7627  00497A  C02C  FFDE         	movff	dir_rewind@clst+3,postinc2
  7628  00497E  C029  F012         	movff	dir_rewind@clst,clust2sect@clst
  7629  004982  C02A  F013         	movff	dir_rewind@clst+1,clust2sect@clst+1
  7630  004986  C02B  F014         	movff	dir_rewind@clst+2,clust2sect@clst+2
  7631  00498A  C02C  F015         	movff	dir_rewind@clst+3,clust2sect@clst+3
  7632  00498E  EC12  F027         	call	_clust2sect	;wreg free
  7633  004992  C012  F023         	movff	?_clust2sect,_dir_rewind$709
  7634  004996  C013  F024         	movff	?_clust2sect+1,_dir_rewind$709+1
  7635  00499A  C014  F025         	movff	?_clust2sect+2,_dir_rewind$709+2
  7636  00499E  C015  F026         	movff	?_clust2sect+3,_dir_rewind$709+3
  7637  0049A2  EE20 F00C          	lfsr	2,12
  7638  0049A6  501D               	movf	dir_rewind@dj^0,w,c
  7639  0049A8  26D9               	addwf	fsr2l,f,c
  7640  0049AA  501E               	movf	(dir_rewind@dj+1)^0,w,c
  7641  0049AC  22DA               	addwfc	fsr2h,f,c
  7642  0049AE  C023  FFDE         	movff	_dir_rewind$709,postinc2
  7643  0049B2  C024  FFDE         	movff	_dir_rewind$709+1,postinc2
  7644  0049B6  C025  FFDE         	movff	_dir_rewind$709+2,postinc2
  7645  0049BA  C026  FFDE         	movff	_dir_rewind$709+3,postinc2
  7646  0049BE                     
  7647                           ;pff.c: 450:  return FR_OK;
  7648  0049BE  0E00               	movlw	0
  7649  0049C0                     l216:
  7650  0049C0  0012               	return		;funcret
  7651  0049C2                     __end_of_dir_rewind:
  7652                           	callstack 0
  7653                           
  7654 ;; *************** function _dir_next *****************
  7655 ;; Defined at:
  7656 ;;		line 461 in file "pff.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  dj              2   66[BANK0 ] PTR struct .
  7659 ;;		 -> pf_open@dj(16), main@dir(16), 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  clst            4   77[BANK0 ] unsigned long 
  7662 ;;  i               2   81[BANK0 ] unsigned short 
  7663 ;;  fs              2   75[BANK0 ] PTR struct .
  7664 ;;		 -> NULL(0), main@fs(42), 
  7665 ;; Return value:  Size  Location     Type
  7666 ;;                  1    wreg      enum E2600
  7667 ;; Registers used:
  7668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7669 ;; Tracked objects:
  7670 ;;		On entry : 0/0
  7671 ;;		On exit  : 0/0
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7674 ;;      Params:         0       2       0       0       0       0       0
  7675 ;;      Locals:         0       8       0       0       0       0       0
  7676 ;;      Temps:          0       7       0       0       0       0       0
  7677 ;;      Totals:         0      17       0       0       0       0       0
  7678 ;;Total ram usage:       17 bytes
  7679 ;; Hardware stack levels used: 1
  7680 ;; Hardware stack levels required when called: 11
  7681 ;; This function calls:
  7682 ;;		_clust2sect
  7683 ;;		_get_fat
  7684 ;; This function is called by:
  7685 ;;		_dir_find
  7686 ;;		_dir_read
  7687 ;;		_pf_readdir
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           	psect	text23
  7692  002CA8                     __ptext23:
  7693                           	callstack 0
  7694  002CA8                     _dir_next:
  7695                           	callstack 17
  7696  002CA8                     
  7697                           ;pff.c: 462:  DIR *dj;pff.c: 464: {;pff.c: 465:  DWORD clst;;pff.c: 466:  WORD i;;pff.c:
      +                           467:  FATFS *fs = FatFs;
  7698  002CA8  C0F1  F0CB         	movff	_FatFs,dir_next@fs
  7699  002CAC  C0F2  F0CC         	movff	_FatFs+1,dir_next@fs+1
  7700  002CB0                     
  7701                           ;pff.c: 470:  i = dj->index + 1;
  7702  002CB0  C0C2  FFD9         	movff	dir_next@dj,fsr2l
  7703  002CB4  C0C3  FFDA         	movff	dir_next@dj+1,fsr2h
  7704  002CB8  CFDE F0C4          	movff	postinc2,??_dir_next
  7705  002CBC  CFDD F0C5          	movff	postdec2,??_dir_next+1
  7706  002CC0  0E01               	movlw	1
  7707  002CC2  0100               	movlb	0	; () banked
  7708  002CC4  25C4               	addwf	??_dir_next& (0+255),w,b
  7709  002CC6  6FD1               	movwf	dir_next@i& (0+255),b
  7710  002CC8  0E00               	movlw	0
  7711  002CCA  21C5               	addwfc	(??_dir_next+1)& (0+255),w,b
  7712  002CCC  6FD2               	movwf	(dir_next@i+1)& (0+255),b
  7713  002CCE                     
  7714                           ; BSR set to: 0
  7715                           ;pff.c: 471:  if (!i || !dj->sect)
  7716  002CCE  51D1               	movf	dir_next@i& (0+255),w,b
  7717  002CD0  11D2               	iorwf	(dir_next@i+1)& (0+255),w,b
  7718  002CD2  B4D8               	btfsc	status,2,c
  7719  002CD4  EF6E  F016         	goto	u9491
  7720  002CD8  EF70  F016         	goto	u9490
  7721  002CDC                     u9491:
  7722  002CDC  EF81  F016         	goto	l7523
  7723  002CE0                     u9490:
  7724  002CE0                     
  7725                           ; BSR set to: 0
  7726  002CE0  EE20 F00C          	lfsr	2,12
  7727  002CE4  51C2               	movf	dir_next@dj& (0+255),w,b
  7728  002CE6  26D9               	addwf	fsr2l,f,c
  7729  002CE8  51C3               	movf	(dir_next@dj+1)& (0+255),w,b
  7730  002CEA  22DA               	addwfc	fsr2h,f,c
  7731  002CEC  50DE               	movf	postinc2,w,c
  7732  002CEE  10DE               	iorwf	postinc2,w,c
  7733  002CF0  10DE               	iorwf	postinc2,w,c
  7734  002CF2  10DE               	iorwf	postinc2,w,c
  7735  002CF4  A4D8               	btfss	status,2,c
  7736  002CF6  EF7F  F016         	goto	u9501
  7737  002CFA  EF81  F016         	goto	u9500
  7738  002CFE                     u9501:
  7739  002CFE  EF84  F016         	goto	l7527
  7740  002D02                     u9500:
  7741  002D02                     l7523:
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;pff.c: 472:   return FR_NO_FILE;
  7745  002D02  0E03               	movlw	3
  7746  002D04  EF5C  F017         	goto	l229
  7747  002D08                     l7527:
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;pff.c: 474:  if (!(i % 16)) {
  7751  002D08  0E0F               	movlw	15
  7752  002D0A  15D1               	andwf	dir_next@i& (0+255),w,b
  7753  002D0C  6FC4               	movwf	??_dir_next& (0+255),b
  7754  002D0E  0E00               	movlw	0
  7755  002D10  15D2               	andwf	(dir_next@i+1)& (0+255),w,b
  7756  002D12  6FC5               	movwf	(??_dir_next+1)& (0+255),b
  7757  002D14  51C4               	movf	??_dir_next& (0+255),w,b
  7758  002D16  11C5               	iorwf	(??_dir_next+1)& (0+255),w,b
  7759  002D18  A4D8               	btfss	status,2,c
  7760  002D1A  EF91  F016         	goto	u9511
  7761  002D1E  EF93  F016         	goto	u9510
  7762  002D22                     u9511:
  7763  002D22  EF53  F017         	goto	l7557
  7764  002D26                     u9510:
  7765  002D26                     
  7766                           ; BSR set to: 0
  7767                           ;pff.c: 475:   dj->sect++;
  7768  002D26  EE20 F00C          	lfsr	2,12
  7769  002D2A  51C2               	movf	dir_next@dj& (0+255),w,b
  7770  002D2C  26D9               	addwf	fsr2l,f,c
  7771  002D2E  51C3               	movf	(dir_next@dj+1)& (0+255),w,b
  7772  002D30  22DA               	addwfc	fsr2h,f,c
  7773  002D32  2ADE               	incf	postinc2,f,c
  7774  002D34  0E00               	movlw	0
  7775  002D36  22DE               	addwfc	postinc2,f,c
  7776  002D38  22DE               	addwfc	postinc2,f,c
  7777  002D3A  22DE               	addwfc	postinc2,f,c
  7778                           
  7779                           ;pff.c: 477:   if (dj->clust == 0) {
  7780  002D3C  EE20 F008          	lfsr	2,8
  7781  002D40  51C2               	movf	dir_next@dj& (0+255),w,b
  7782  002D42  26D9               	addwf	fsr2l,f,c
  7783  002D44  51C3               	movf	(dir_next@dj+1)& (0+255),w,b
  7784  002D46  22DA               	addwfc	fsr2h,f,c
  7785  002D48  50DE               	movf	postinc2,w,c
  7786  002D4A  10DE               	iorwf	postinc2,w,c
  7787  002D4C  10DE               	iorwf	postinc2,w,c
  7788  002D4E  10DE               	iorwf	postinc2,w,c
  7789  002D50  A4D8               	btfss	status,2,c
  7790  002D52  EFAD  F016         	goto	u9521
  7791  002D56  EFAF  F016         	goto	u9520
  7792  002D5A                     u9521:
  7793  002D5A  EFC2  F016         	goto	l7537
  7794  002D5E                     u9520:
  7795  002D5E                     
  7796                           ; BSR set to: 0
  7797                           ;pff.c: 478:    if (i >= fs->n_rootdir)
  7798  002D5E  EE20 F004          	lfsr	2,4
  7799  002D62  51CB               	movf	dir_next@fs& (0+255),w,b
  7800  002D64  26D9               	addwf	fsr2l,f,c
  7801  002D66  51CC               	movf	(dir_next@fs+1)& (0+255),w,b
  7802  002D68  22DA               	addwfc	fsr2h,f,c
  7803  002D6A  50DE               	movf	postinc2,w,c
  7804  002D6C  5DD1               	subwf	dir_next@i& (0+255),w,b
  7805  002D6E  50DE               	movf	postinc2,w,c
  7806  002D70  59D2               	subwfb	(dir_next@i+1)& (0+255),w,b
  7807  002D72  A0D8               	btfss	status,0,c
  7808  002D74  EFBE  F016         	goto	u9531
  7809  002D78  EFC0  F016         	goto	u9530
  7810  002D7C                     u9531:
  7811  002D7C  EF53  F017         	goto	l7557
  7812  002D80                     u9530:
  7813  002D80  EF81  F016         	goto	l7523
  7814  002D84                     l7537:
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;pff.c: 482:    if (((i / 16) & (fs->csize - 1)) == 0) {
  7818  002D84  C0D1  F0C4         	movff	dir_next@i,??_dir_next
  7819  002D88  C0D2  F0C5         	movff	dir_next@i+1,??_dir_next+1
  7820  002D8C  0E04               	movlw	4
  7821  002D8E  6FC6               	movwf	(??_dir_next+2)& (0+255),b
  7822  002D90                     u9545:
  7823  002D90  90D8               	bcf	status,0,c
  7824  002D92  33C5               	rrcf	(??_dir_next+1)& (0+255),f,b
  7825  002D94  33C4               	rrcf	??_dir_next& (0+255),f,b
  7826  002D96  2FC6               	decfsz	(??_dir_next+2)& (0+255),f,b
  7827  002D98  EFC8  F016         	goto	u9545
  7828  002D9C  0EFF               	movlw	255
  7829  002D9E  6FC7               	movwf	(??_dir_next+3)& (0+255),b
  7830  002DA0  0EFF               	movlw	255
  7831  002DA2  6FC8               	movwf	(??_dir_next+4)& (0+255),b
  7832  002DA4  EE20 F002          	lfsr	2,2
  7833  002DA8  51CB               	movf	dir_next@fs& (0+255),w,b
  7834  002DAA  26D9               	addwf	fsr2l,f,c
  7835  002DAC  51CC               	movf	(dir_next@fs+1)& (0+255),w,b
  7836  002DAE  22DA               	addwfc	fsr2h,f,c
  7837  002DB0  50DF               	movf	indf2,w,c
  7838  002DB2  6FC9               	movwf	(??_dir_next+5)& (0+255),b
  7839  002DB4  6BCA               	clrf	(??_dir_next+6)& (0+255),b
  7840  002DB6  51C7               	movf	(??_dir_next+3)& (0+255),w,b
  7841  002DB8  27C9               	addwf	(??_dir_next+5)& (0+255),f,b
  7842  002DBA  51C8               	movf	(??_dir_next+4)& (0+255),w,b
  7843  002DBC  23CA               	addwfc	(??_dir_next+6)& (0+255),f,b
  7844  002DBE  51C4               	movf	??_dir_next& (0+255),w,b
  7845  002DC0  17C9               	andwf	(??_dir_next+5)& (0+255),f,b
  7846  002DC2  51C5               	movf	(??_dir_next+1)& (0+255),w,b
  7847  002DC4  17CA               	andwf	(??_dir_next+6)& (0+255),f,b
  7848  002DC6  51C9               	movf	(??_dir_next+5)& (0+255),w,b
  7849  002DC8  11CA               	iorwf	(??_dir_next+6)& (0+255),w,b
  7850  002DCA  A4D8               	btfss	status,2,c
  7851  002DCC  EFEA  F016         	goto	u9551
  7852  002DD0  EFEC  F016         	goto	u9550
  7853  002DD4                     u9551:
  7854  002DD4  EF53  F017         	goto	l7557
  7855  002DD8                     u9550:
  7856  002DD8                     
  7857                           ; BSR set to: 0
  7858                           ;pff.c: 483:     clst = get_fat(dj->clust);
  7859  002DD8  EE20 F008          	lfsr	2,8
  7860  002DDC  51C2               	movf	dir_next@dj& (0+255),w,b
  7861  002DDE  26D9               	addwf	fsr2l,f,c
  7862  002DE0  51C3               	movf	(dir_next@dj+1)& (0+255),w,b
  7863  002DE2  22DA               	addwfc	fsr2h,f,c
  7864  002DE4  CFDE F0A2          	movff	postinc2,get_fat@clst
  7865  002DE8  CFDE F0A3          	movff	postinc2,get_fat@clst+1
  7866  002DEC  CFDE F0A4          	movff	postinc2,get_fat@clst+2
  7867  002DF0  CFDE F0A5          	movff	postinc2,get_fat@clst+3
  7868  002DF4  EC63  F019         	call	_get_fat	;wreg free
  7869  002DF8  C0A2  F0CD         	movff	?_get_fat,dir_next@clst
  7870  002DFC  C0A3  F0CE         	movff	?_get_fat+1,dir_next@clst+1
  7871  002E00  C0A4  F0CF         	movff	?_get_fat+2,dir_next@clst+2
  7872  002E04  C0A5  F0D0         	movff	?_get_fat+3,dir_next@clst+3
  7873  002E08                     
  7874                           ;pff.c: 484:     if (clst <= 1) return FR_DISK_ERR;
  7875  002E08  0100               	movlb	0	; () banked
  7876  002E0A  51D0               	movf	(dir_next@clst+3)& (0+255),w,b
  7877  002E0C  11CF               	iorwf	(dir_next@clst+2)& (0+255),w,b
  7878  002E0E  11CE               	iorwf	(dir_next@clst+1)& (0+255),w,b
  7879  002E10  E107               	bnz	u9561
  7880  002E12  0E02               	movlw	2
  7881  002E14  5DCD               	subwf	dir_next@clst& (0+255),w,b
  7882  002E16  B0D8               	btfsc	status,0,c
  7883  002E18  EF10  F017         	goto	u9561
  7884  002E1C  EF12  F017         	goto	u9560
  7885  002E20                     u9561:
  7886  002E20  EF15  F017         	goto	l7547
  7887  002E24                     u9560:
  7888  002E24                     
  7889                           ; BSR set to: 0
  7890  002E24  0E01               	movlw	1
  7891  002E26  EF5C  F017         	goto	l229
  7892  002E2A                     l7547:
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;pff.c: 485:     if (clst >= fs->n_fatent)
  7896  002E2A  EE20 F006          	lfsr	2,6
  7897  002E2E  51CB               	movf	dir_next@fs& (0+255),w,b
  7898  002E30  26D9               	addwf	fsr2l,f,c
  7899  002E32  51CC               	movf	(dir_next@fs+1)& (0+255),w,b
  7900  002E34  22DA               	addwfc	fsr2h,f,c
  7901  002E36  50DE               	movf	postinc2,w,c
  7902  002E38  5DCD               	subwf	dir_next@clst& (0+255),w,b
  7903  002E3A  50DE               	movf	postinc2,w,c
  7904  002E3C  59CE               	subwfb	(dir_next@clst+1)& (0+255),w,b
  7905  002E3E  50DE               	movf	postinc2,w,c
  7906  002E40  59CF               	subwfb	(dir_next@clst+2)& (0+255),w,b
  7907  002E42  50DE               	movf	postinc2,w,c
  7908  002E44  59D0               	subwfb	(dir_next@clst+3)& (0+255),w,b
  7909  002E46  A0D8               	btfss	status,0,c
  7910  002E48  EF28  F017         	goto	u9571
  7911  002E4C  EF2A  F017         	goto	u9570
  7912  002E50                     u9571:
  7913  002E50  EF2C  F017         	goto	l7553
  7914  002E54                     u9570:
  7915  002E54  EF81  F016         	goto	l7523
  7916  002E58                     l7553:
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;pff.c: 487:     dj->clust = clst;
  7920  002E58  EE20 F008          	lfsr	2,8
  7921  002E5C  51C2               	movf	dir_next@dj& (0+255),w,b
  7922  002E5E  26D9               	addwf	fsr2l,f,c
  7923  002E60  51C3               	movf	(dir_next@dj+1)& (0+255),w,b
  7924  002E62  22DA               	addwfc	fsr2h,f,c
  7925  002E64  C0CD  FFDE         	movff	dir_next@clst,postinc2
  7926  002E68  C0CE  FFDE         	movff	dir_next@clst+1,postinc2
  7927  002E6C  C0CF  FFDE         	movff	dir_next@clst+2,postinc2
  7928  002E70  C0D0  FFDE         	movff	dir_next@clst+3,postinc2
  7929  002E74                     
  7930                           ; BSR set to: 0
  7931                           ;pff.c: 488:     dj->sect = clust2sect(clst);
  7932  002E74  C0CD  F012         	movff	dir_next@clst,clust2sect@clst
  7933  002E78  C0CE  F013         	movff	dir_next@clst+1,clust2sect@clst+1
  7934  002E7C  C0CF  F014         	movff	dir_next@clst+2,clust2sect@clst+2
  7935  002E80  C0D0  F015         	movff	dir_next@clst+3,clust2sect@clst+3
  7936  002E84  EC12  F027         	call	_clust2sect	;wreg free
  7937  002E88  0100               	movlb	0	; () banked
  7938  002E8A  EE20 F00C          	lfsr	2,12
  7939  002E8E  51C2               	movf	dir_next@dj& (0+255),w,b
  7940  002E90  26D9               	addwf	fsr2l,f,c
  7941  002E92  51C3               	movf	(dir_next@dj+1)& (0+255),w,b
  7942  002E94  22DA               	addwfc	fsr2h,f,c
  7943  002E96  C012  FFDE         	movff	?_clust2sect,postinc2
  7944  002E9A  C013  FFDE         	movff	?_clust2sect+1,postinc2
  7945  002E9E  C014  FFDE         	movff	?_clust2sect+2,postinc2
  7946  002EA2  C015  FFDE         	movff	?_clust2sect+3,postinc2
  7947  002EA6                     l7557:
  7948                           
  7949                           ; BSR set to: 0
  7950                           ;pff.c: 493:  dj->index = i;
  7951  002EA6  C0C2  FFD9         	movff	dir_next@dj,fsr2l
  7952  002EAA  C0C3  FFDA         	movff	dir_next@dj+1,fsr2h
  7953  002EAE  C0D1  FFDE         	movff	dir_next@i,postinc2
  7954  002EB2  C0D2  FFDD         	movff	dir_next@i+1,postdec2
  7955  002EB6                     
  7956                           ; BSR set to: 0
  7957                           ;pff.c: 495:  return FR_OK;
  7958  002EB6  0E00               	movlw	0
  7959  002EB8                     l229:
  7960                           
  7961                           ; BSR set to: 0
  7962  002EB8  0012               	return		;funcret
  7963  002EBA                     __end_of_dir_next:
  7964                           	callstack 0
  7965                           
  7966 ;; *************** function _create_name *****************
  7967 ;; Defined at:
  7968 ;;		line 577 in file "pff.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;  dj              2   13[COMRAM] PTR struct .
  7971 ;;		 -> pf_open@dj(16), main@dir(16), 
  7972 ;;  path            2   15[COMRAM] PTR PTR const unsigned c
  7973 ;;		 -> follow_path@path(2), 
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;  d               1    0        unsigned char 
  7976 ;;  sfn             2   25[COMRAM] PTR unsigned char 
  7977 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  7978 ;;  p               2   21[COMRAM] PTR const unsigned char 
  7979 ;;		 -> Line(128), 
  7980 ;;  c               1   28[COMRAM] unsigned char 
  7981 ;;  i               1   27[COMRAM] unsigned char 
  7982 ;;  si              1   24[COMRAM] unsigned char 
  7983 ;;  ni              1   23[COMRAM] unsigned char 
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  1    wreg      enum E2600
  7986 ;; Registers used:
  7987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7993 ;;      Params:         4       0       0       0       0       0       0
  7994 ;;      Locals:         8       0       0       0       0       0       0
  7995 ;;      Temps:          4       0       0       0       0       0       0
  7996 ;;      Totals:        16       0       0       0       0       0       0
  7997 ;;Total ram usage:       16 bytes
  7998 ;; Hardware stack levels used: 1
  7999 ;; Hardware stack levels required when called: 2
  8000 ;; This function calls:
  8001 ;;		_mem_set
  8002 ;; This function is called by:
  8003 ;;		_follow_path
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text24
  8008  003488                     __ptext24:
  8009                           	callstack 0
  8010  003488                     _create_name:
  8011                           	callstack 26
  8012  003488                     
  8013                           ;pff.c: 578:  DIR *dj,;pff.c: 579:  const char **path;pff.c: 581: {;pff.c: 582:  BYTE c,
      +                           ni, si, i, *sfn;;pff.c: 583:  const char *p;;pff.c: 586:  static const BYTE cvt[] = {0x
      +                          80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x90,0x92,
      +                          0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, 0x41,0x49,0x4F,0x
      +                          55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,0xB3,0xB4,
      +                          0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x
      +                          C6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,
      +                          0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, 0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0x
      +                          E9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,
      +                          0xFB,0xFC,0xFD,0xFE,0xFF};
  8014  003488  EE20 F002          	lfsr	2,2
  8015  00348C  500E               	movf	create_name@dj^0,w,c
  8016  00348E  26D9               	addwf	fsr2l,f,c
  8017  003490  500F               	movf	(create_name@dj+1)^0,w,c
  8018  003492  22DA               	addwfc	fsr2h,f,c
  8019  003494  CFDE F01A          	movff	postinc2,create_name@sfn
  8020  003498  CFDD F01B          	movff	postdec2,create_name@sfn+1
  8021  00349C                     
  8022                           ;pff.c: 592:  mem_set(sfn, ' ', 11);
  8023  00349C  C01A  F006         	movff	create_name@sfn,mem_set@dst
  8024  0034A0  C01B  F007         	movff	create_name@sfn+1,mem_set@dst+1
  8025  0034A4  0E00               	movlw	0
  8026  0034A6  6E09               	movwf	(mem_set@val+1)^0,c
  8027  0034A8  0E20               	movlw	32
  8028  0034AA  6E08               	movwf	mem_set@val^0,c
  8029  0034AC  0E00               	movlw	0
  8030  0034AE  6E0B               	movwf	(mem_set@cnt+1)^0,c
  8031  0034B0  0E0B               	movlw	11
  8032  0034B2  6E0A               	movwf	mem_set@cnt^0,c
  8033  0034B4  ECEA  F02B         	call	_mem_set	;wreg free
  8034  0034B8                     
  8035                           ;pff.c: 593:  si = i = 0; ni = 8;
  8036  0034B8  0E00               	movlw	0
  8037  0034BA  6E1C               	movwf	create_name@i^0,c
  8038  0034BC  C01C  F019         	movff	create_name@i,create_name@si
  8039  0034C0  0E08               	movlw	8
  8040  0034C2  6E18               	movwf	create_name@ni^0,c
  8041  0034C4                     
  8042                           ;pff.c: 594:  p = *path;
  8043  0034C4  C010  FFD9         	movff	create_name@path,fsr2l
  8044  0034C8  C011  FFDA         	movff	create_name@path+1,fsr2h
  8045  0034CC  CFDE F016          	movff	postinc2,create_name@p
  8046  0034D0  CFDD F017          	movff	postdec2,create_name@p+1
  8047  0034D4                     l5131:
  8048                           
  8049                           ;pff.c: 596:   c = p[si++];
  8050  0034D4  5019               	movf	create_name@si^0,w,c
  8051  0034D6  2416               	addwf	create_name@p^0,w,c
  8052  0034D8  6ED9               	movwf	fsr2l,c
  8053  0034DA  0E00               	movlw	0
  8054  0034DC  2017               	addwfc	(create_name@p+1)^0,w,c
  8055  0034DE  6EDA               	movwf	fsr2h,c
  8056  0034E0  50DF               	movf	indf2,w,c
  8057  0034E2  6E1D               	movwf	create_name@c^0,c
  8058  0034E4  2A19               	incf	create_name@si^0,f,c
  8059  0034E6                     
  8060                           ;pff.c: 597:   if (c <= ' ' || c == '/') break;
  8061  0034E6  0E20               	movlw	32
  8062  0034E8  641D               	cpfsgt	create_name@c^0,c
  8063  0034EA  EF79  F01A         	goto	u5761
  8064  0034EE  EF7B  F01A         	goto	u5760
  8065  0034F2                     u5761:
  8066  0034F2  EFEF  F01A         	goto	l5175
  8067  0034F6                     u5760:
  8068  0034F6  0E2F               	movlw	47
  8069  0034F8  181D               	xorwf	create_name@c^0,w,c
  8070  0034FA  A4D8               	btfss	status,2,c
  8071  0034FC  EF82  F01A         	goto	u5771
  8072  003500  EF84  F01A         	goto	u5770
  8073  003504                     u5771:
  8074  003504  EF86  F01A         	goto	l5139
  8075  003508                     u5770:
  8076  003508  EFEF  F01A         	goto	l5175
  8077  00350C                     l5139:
  8078                           
  8079                           ;pff.c: 598:   if (c == '.' || i >= ni) {
  8080  00350C  0E2E               	movlw	46
  8081  00350E  181D               	xorwf	create_name@c^0,w,c
  8082  003510  B4D8               	btfsc	status,2,c
  8083  003512  EF8D  F01A         	goto	u5781
  8084  003516  EF8F  F01A         	goto	u5780
  8085  00351A                     u5781:
  8086  00351A  EF98  F01A         	goto	l5143
  8087  00351E                     u5780:
  8088  00351E  5018               	movf	create_name@ni^0,w,c
  8089  003520  5C1C               	subwf	create_name@i^0,w,c
  8090  003522  A0D8               	btfss	status,0,c
  8091  003524  EF96  F01A         	goto	u5791
  8092  003528  EF98  F01A         	goto	u5790
  8093  00352C                     u5791:
  8094  00352C  EFB2  F01A         	goto	l5149
  8095  003530                     u5790:
  8096  003530                     l5143:
  8097                           
  8098                           ;pff.c: 599:    if (ni != 8 || c != '.') break;
  8099  003530  0E08               	movlw	8
  8100  003532  1818               	xorwf	create_name@ni^0,w,c
  8101  003534  A4D8               	btfss	status,2,c
  8102  003536  EF9F  F01A         	goto	u5801
  8103  00353A  EFA1  F01A         	goto	u5800
  8104  00353E                     u5801:
  8105  00353E  EFEF  F01A         	goto	l5175
  8106  003542                     u5800:
  8107  003542  0E2E               	movlw	46
  8108  003544  181D               	xorwf	create_name@c^0,w,c
  8109  003546  B4D8               	btfsc	status,2,c
  8110  003548  EFA8  F01A         	goto	u5811
  8111  00354C  EFAA  F01A         	goto	u5810
  8112  003550                     u5811:
  8113  003550  EFAC  F01A         	goto	l5147
  8114  003554                     u5810:
  8115  003554  EFEF  F01A         	goto	l5175
  8116  003558                     l5147:
  8117                           
  8118                           ;pff.c: 600:    i = 8; ni = 11;
  8119  003558  0E08               	movlw	8
  8120  00355A  6E1C               	movwf	create_name@i^0,c
  8121  00355C  0E0B               	movlw	11
  8122  00355E  6E18               	movwf	create_name@ni^0,c
  8123                           
  8124                           ;pff.c: 601:    continue;
  8125  003560  EF6A  F01A         	goto	l5131
  8126  003564                     l5149:
  8127                           
  8128                           ;pff.c: 605:   if (c >= 0x80)
  8129  003564  0E7F               	movlw	127
  8130  003566  641D               	cpfsgt	create_name@c^0,c
  8131  003568  EFB8  F01A         	goto	u5821
  8132  00356C  EFBA  F01A         	goto	u5820
  8133  003570                     u5821:
  8134  003570  EFD3  F01A         	goto	l5165
  8135  003574                     u5820:
  8136  003574                     
  8137                           ;pff.c: 606:    c = cvt[c - 0x80];
  8138  003574  0E80               	movlw	128
  8139  003576  6E12               	movwf	??_create_name^0,c
  8140  003578  0EFF               	movlw	255
  8141  00357A  6E13               	movwf	(??_create_name+1)^0,c
  8142  00357C  501D               	movf	create_name@c^0,w,c
  8143  00357E  6E14               	movwf	(??_create_name+2)^0,c
  8144  003580  6A15               	clrf	(??_create_name+3)^0,c
  8145  003582  5012               	movf	??_create_name^0,w,c
  8146  003584  2614               	addwf	(??_create_name+2)^0,f,c
  8147  003586  5013               	movf	(??_create_name+1)^0,w,c
  8148  003588  2215               	addwfc	(??_create_name+3)^0,f,c
  8149  00358A  0E8D               	movlw	low create_name@cvt
  8150  00358C  2414               	addwf	(??_create_name+2)^0,w,c
  8151  00358E  6EF6               	movwf	tblptrl,c
  8152  003590  0E7B               	movlw	high create_name@cvt
  8153  003592  2015               	addwfc	(??_create_name+3)^0,w,c
  8154  003594  6EF7               	movwf	tblptrh,c
  8155  003596                     	if	0	;There are less than 3 active tblptr bytes
  8156  003596                     	endif
  8157  003596  0008               	tblrd		*
  8158  003598  CFF5 F01D          	movff	tablat,create_name@c
  8159  00359C  EFD3  F01A         	goto	l5165
  8160  0035A0                     l5163:
  8161  0035A0  2A1C               	incf	create_name@i^0,f,c
  8162                           
  8163                           ;pff.c: 612:   } else
  8164  0035A2  EF6A  F01A         	goto	l5131
  8165  0035A6                     l5165:
  8166  0035A6  0E60               	movlw	96
  8167  0035A8  641D               	cpfsgt	create_name@c^0,c
  8168  0035AA  EFD9  F01A         	goto	u5831
  8169  0035AE  EFDB  F01A         	goto	u5830
  8170  0035B2                     u5831:
  8171  0035B2  EFE5  F01A         	goto	l5171
  8172  0035B6                     u5830:
  8173  0035B6  0E7B               	movlw	123
  8174  0035B8  601D               	cpfslt	create_name@c^0,c
  8175  0035BA  EFE1  F01A         	goto	u5841
  8176  0035BE  EFE3  F01A         	goto	u5840
  8177  0035C2                     u5841:
  8178  0035C2  EFE5  F01A         	goto	l5171
  8179  0035C6                     u5840:
  8180  0035C6  0E20               	movlw	32
  8181  0035C8  5E1D               	subwf	create_name@c^0,f,c
  8182  0035CA                     l5171:
  8183                           
  8184                           ;pff.c: 616:    sfn[i++] = c;
  8185  0035CA  501C               	movf	create_name@i^0,w,c
  8186  0035CC  241A               	addwf	create_name@sfn^0,w,c
  8187  0035CE  6ED9               	movwf	fsr2l,c
  8188  0035D0  0E00               	movlw	0
  8189  0035D2  201B               	addwfc	(create_name@sfn+1)^0,w,c
  8190  0035D4  6EDA               	movwf	fsr2h,c
  8191  0035D6  C01D  FFDF         	movff	create_name@c,indf2
  8192  0035DA  EFD0  F01A         	goto	l5163
  8193  0035DE                     l5175:
  8194                           
  8195                           ;pff.c: 619:  *path = &p[si];
  8196  0035DE  5019               	movf	create_name@si^0,w,c
  8197  0035E0  2416               	addwf	create_name@p^0,w,c
  8198  0035E2  6E12               	movwf	??_create_name^0,c
  8199  0035E4  0E00               	movlw	0
  8200  0035E6  2017               	addwfc	(create_name@p+1)^0,w,c
  8201  0035E8  6E13               	movwf	(??_create_name+1)^0,c
  8202  0035EA  C010  FFD9         	movff	create_name@path,fsr2l
  8203  0035EE  C011  FFDA         	movff	create_name@path+1,fsr2h
  8204  0035F2  C012  FFDE         	movff	??_create_name,postinc2
  8205  0035F6  C013  FFDD         	movff	??_create_name+1,postdec2
  8206                           
  8207                           ;pff.c: 621:  sfn[11] = (c <= ' ') ? 1 : 0;
  8208  0035FA  EE20 F00B          	lfsr	2,11
  8209  0035FE  501A               	movf	create_name@sfn^0,w,c
  8210  003600  26D9               	addwf	fsr2l,f,c
  8211  003602  501B               	movf	(create_name@sfn+1)^0,w,c
  8212  003604  22DA               	addwfc	fsr2h,f,c
  8213  003606  0E20               	movlw	32
  8214  003608  641D               	cpfsgt	create_name@c^0,c
  8215  00360A  EF09  F01B         	goto	u5851
  8216  00360E  EF0C  F01B         	goto	u5850
  8217  003612                     u5851:
  8218  003612  0E01               	movlw	1
  8219  003614  EF0D  F01B         	goto	u5860
  8220  003618                     u5850:
  8221  003618  0E00               	movlw	0
  8222  00361A                     u5860:
  8223  00361A  6EDF               	movwf	indf2,c
  8224  00361C                     
  8225                           ;pff.c: 623:  return FR_OK;
  8226  00361C  0E00               	movlw	0
  8227  00361E  0012               	return		;funcret
  8228  003620                     __end_of_create_name:
  8229                           	callstack 0
  8230                           
  8231 ;; *************** function _mem_set *****************
  8232 ;; Defined at:
  8233 ;;		line 325 in file "pff.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;  dst             2    5[COMRAM] PTR void 
  8236 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  8237 ;;  val             2    7[COMRAM] int 
  8238 ;;  cnt             2    9[COMRAM] int 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;  d               2   11[COMRAM] PTR unsigned char 
  8241 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  8242 ;; Return value:  Size  Location     Type
  8243 ;;                  1    wreg      void 
  8244 ;; Registers used:
  8245 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8246 ;; Tracked objects:
  8247 ;;		On entry : 0/0
  8248 ;;		On exit  : 0/0
  8249 ;;		Unchanged: 0/0
  8250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8251 ;;      Params:         6       0       0       0       0       0       0
  8252 ;;      Locals:         2       0       0       0       0       0       0
  8253 ;;      Temps:          0       0       0       0       0       0       0
  8254 ;;      Totals:         8       0       0       0       0       0       0
  8255 ;;Total ram usage:        8 bytes
  8256 ;; Hardware stack levels used: 1
  8257 ;; Hardware stack levels required when called: 1
  8258 ;; This function calls:
  8259 ;;		Nothing
  8260 ;; This function is called by:
  8261 ;;		_create_name
  8262 ;; This function uses a non-reentrant model
  8263 ;;
  8264                           
  8265                           	psect	text25
  8266  0057D4                     __ptext25:
  8267                           	callstack 0
  8268  0057D4                     _mem_set:
  8269                           	callstack 26
  8270  0057D4                     
  8271                           ;pff.c: 326:  char *d = (char*)dst;
  8272  0057D4  C006  F00C         	movff	mem_set@dst,mem_set@d
  8273  0057D8  C007  F00D         	movff	mem_set@dst+1,mem_set@d+1
  8274                           
  8275                           ;pff.c: 327:  while (cnt--) *d++ = (char)val;
  8276  0057DC  EFF8  F02B         	goto	l4977
  8277  0057E0                     l4973:
  8278  0057E0  C00C  FFD9         	movff	mem_set@d,fsr2l
  8279  0057E4  C00D  FFDA         	movff	mem_set@d+1,fsr2h
  8280  0057E8  C008  FFDF         	movff	mem_set@val,indf2
  8281  0057EC  4A0C               	infsnz	mem_set@d^0,f,c
  8282  0057EE  2A0D               	incf	(mem_set@d+1)^0,f,c
  8283  0057F0                     l4977:
  8284  0057F0  060A               	decf	mem_set@cnt^0,f,c
  8285  0057F2  A0D8               	btfss	status,0,c
  8286  0057F4  060B               	decf	(mem_set@cnt+1)^0,f,c
  8287  0057F6  280A               	incf	mem_set@cnt^0,w,c
  8288  0057F8  E106               	bnz	u5511
  8289  0057FA  280B               	incf	(mem_set@cnt+1)^0,w,c
  8290  0057FC  A4D8               	btfss	status,2,c
  8291  0057FE  EF03  F02C         	goto	u5511
  8292  005802  EF05  F02C         	goto	u5510
  8293  005806                     u5511:
  8294  005806  EFF0  F02B         	goto	l4973
  8295  00580A                     u5510:
  8296  00580A  0012               	return		;funcret
  8297  00580C                     __end_of_mem_set:
  8298                           	callstack 0
  8299                           
  8300 ;; *************** function _pf_mount *****************
  8301 ;; Defined at:
  8302 ;;		line 750 in file "pff.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;  fs              2   44[BANK0 ] PTR struct .
  8305 ;;		 -> main@fs(42), 
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;  buf            36    0[BANK1 ] unsigned char [36]
  8308 ;;  fsize           4   48[BANK1 ] unsigned long 
  8309 ;;  bsect           4   44[BANK1 ] unsigned long 
  8310 ;;  mclst           4   40[BANK1 ] unsigned long 
  8311 ;;  tsect           4   36[BANK1 ] unsigned long 
  8312 ;;  fmt             1   52[BANK1 ] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      enum E3114
  8315 ;; Registers used:
  8316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8322 ;;      Params:         0       2       0       0       0       0       0
  8323 ;;      Locals:         0       0      53       0       0       0       0
  8324 ;;      Temps:          0      22       0       0       0       0       0
  8325 ;;      Totals:         0      24      53       0       0       0       0
  8326 ;;Total ram usage:       77 bytes
  8327 ;; Hardware stack levels used: 1
  8328 ;; Hardware stack levels required when called: 11
  8329 ;; This function calls:
  8330 ;;		___lldiv
  8331 ;;		___lmul
  8332 ;;		_check_fs
  8333 ;;		_disk_initialize
  8334 ;;		_disk_readp
  8335 ;; This function is called by:
  8336 ;;		_main
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           	psect	text26
  8341  000FA6                     __ptext26:
  8342                           	callstack 0
  8343  000FA6                     _pf_mount:
  8344                           	callstack 19
  8345  000FA6                     
  8346                           ;pff.c: 751:  FATFS *fs;pff.c: 753: {;pff.c: 754:  BYTE fmt, buf[36];;pff.c: 755:  DWORD
      +                           bsect, fsize, tsect, mclst;;pff.c: 758:  FatFs = 0;
  8347  000FA6  0E00               	movlw	0
  8348  000FA8  0100               	movlb	0	; () banked
  8349  000FAA  6FF1               	movwf	_FatFs& (0+255),b
  8350  000FAC  0E00               	movlw	0
  8351  000FAE  6FF2               	movwf	(_FatFs+1)& (0+255),b
  8352  000FB0                     
  8353                           ; BSR set to: 0
  8354                           ;pff.c: 760:  if (disk_initialize() & 0x01)
  8355  000FB0  EC61  F012         	call	_disk_initialize	;wreg free
  8356  000FB4  0100               	movlb	0	; () banked
  8357  000FB6  6FAE               	movwf	??_pf_mount& (0+255),b
  8358  000FB8  A1AE               	btfss	??_pf_mount& (0+255),0,b
  8359  000FBA  EFE1  F007         	goto	u10541
  8360  000FBE  EFE3  F007         	goto	u10540
  8361  000FC2                     u10541:
  8362  000FC2  EFE6  F007         	goto	l8117
  8363  000FC6                     u10540:
  8364  000FC6                     
  8365                           ; BSR set to: 0
  8366                           ;pff.c: 761:   return FR_NOT_READY;
  8367  000FC6  0E02               	movlw	2
  8368  000FC8  EF3E  F00B         	goto	l315
  8369  000FCC                     l8117:
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;pff.c: 764:  bsect = 0;
  8373  000FCC  0E00               	movlw	0
  8374  000FCE  0101               	movlb	1	; () banked
  8375  000FD0  6F2C               	movwf	pf_mount@bsect& (0+255),b
  8376  000FD2  0E00               	movlw	0
  8377  000FD4  6F2D               	movwf	(pf_mount@bsect+1)& (0+255),b
  8378  000FD6  0E00               	movlw	0
  8379  000FD8  6F2E               	movwf	(pf_mount@bsect+2)& (0+255),b
  8380  000FDA  0E00               	movlw	0
  8381  000FDC  6F2F               	movwf	(pf_mount@bsect+3)& (0+255),b
  8382  000FDE                     
  8383                           ; BSR set to: 1
  8384                           ;pff.c: 765:  fmt = check_fs(buf, bsect);
  8385  000FDE  0E00               	movlw	low pf_mount@buf
  8386  000FE0  0100               	movlb	0	; () banked
  8387  000FE2  6FA2               	movwf	check_fs@buf& (0+255),b
  8388  000FE4  0E01               	movlw	high pf_mount@buf
  8389  000FE6  6FA3               	movwf	(check_fs@buf+1)& (0+255),b
  8390  000FE8  0E00               	movlw	0
  8391  000FEA  6FA4               	movwf	check_fs@sect& (0+255),b
  8392  000FEC  0E00               	movlw	0
  8393  000FEE  6FA5               	movwf	(check_fs@sect+1)& (0+255),b
  8394  000FF0  0E00               	movlw	0
  8395  000FF2  6FA6               	movwf	(check_fs@sect+2)& (0+255),b
  8396  000FF4  0E00               	movlw	0
  8397  000FF6  6FA7               	movwf	(check_fs@sect+3)& (0+255),b
  8398  000FF8  ECCD  F023         	call	_check_fs	;wreg free
  8399  000FFC  0101               	movlb	1	; () banked
  8400  000FFE  6F34               	movwf	pf_mount@fmt& (0+255),b
  8401  001000                     
  8402                           ; BSR set to: 1
  8403                           ;pff.c: 766:  if (fmt == 1) {
  8404  001000  0534               	decf	pf_mount@fmt& (0+255),w,b
  8405  001002  A4D8               	btfss	status,2,c
  8406  001004  EF06  F008         	goto	u10551
  8407  001008  EF08  F008         	goto	u10550
  8408  00100C                     u10551:
  8409  00100C  EF89  F008         	goto	l8133
  8410  001010                     u10550:
  8411  001010                     
  8412                           ; BSR set to: 1
  8413                           ;pff.c: 768:   if (disk_readp(buf, bsect, 446, 16)) {
  8414  001010  0E00               	movlw	low pf_mount@buf
  8415  001012  0100               	movlb	0	; () banked
  8416  001014  6F92               	movwf	disk_readp@buff& (0+255),b
  8417  001016  0E01               	movlw	high pf_mount@buf
  8418  001018  6F93               	movwf	(disk_readp@buff+1)& (0+255),b
  8419  00101A  0E00               	movlw	0
  8420  00101C  6F94               	movwf	disk_readp@sector& (0+255),b
  8421  00101E  0E00               	movlw	0
  8422  001020  6F95               	movwf	(disk_readp@sector+1)& (0+255),b
  8423  001022  0E00               	movlw	0
  8424  001024  6F96               	movwf	(disk_readp@sector+2)& (0+255),b
  8425  001026  0E00               	movlw	0
  8426  001028  6F97               	movwf	(disk_readp@sector+3)& (0+255),b
  8427  00102A  0E01               	movlw	1
  8428  00102C  6F99               	movwf	(disk_readp@offset+1)& (0+255),b
  8429  00102E  0EBE               	movlw	190
  8430  001030  6F98               	movwf	disk_readp@offset& (0+255),b
  8431  001032  0E00               	movlw	0
  8432  001034  6F9B               	movwf	(disk_readp@count+1)& (0+255),b
  8433  001036  0E10               	movlw	16
  8434  001038  6F9A               	movwf	disk_readp@count& (0+255),b
  8435  00103A  ECDC  F01B         	call	_disk_readp	;wreg free
  8436  00103E  0900               	iorlw	0
  8437  001040  B4D8               	btfsc	status,2,c
  8438  001042  EF25  F008         	goto	u10561
  8439  001046  EF27  F008         	goto	u10560
  8440  00104A                     u10561:
  8441  00104A  EF2C  F008         	goto	l8127
  8442  00104E                     u10560:
  8443  00104E                     
  8444                           ;pff.c: 769:    fmt = 3;
  8445  00104E  0E03               	movlw	3
  8446  001050  0101               	movlb	1	; () banked
  8447  001052  6F34               	movwf	pf_mount@fmt& (0+255),b
  8448                           
  8449                           ;pff.c: 770:   } else {
  8450  001054  EF89  F008         	goto	l8133
  8451  001058                     l8127:
  8452                           
  8453                           ;pff.c: 771:    if (buf[4]) {
  8454  001058  0101               	movlb	1	; () banked
  8455  00105A  5104               	movf	(pf_mount@buf+4)& (0+255),w,b
  8456  00105C  B4D8               	btfsc	status,2,c
  8457  00105E  EF33  F008         	goto	u10571
  8458  001062  EF35  F008         	goto	u10570
  8459  001066                     u10571:
  8460  001066  EF89  F008         	goto	l8133
  8461  00106A                     u10570:
  8462  00106A                     
  8463                           ; BSR set to: 1
  8464                           ;pff.c: 772:     bsect = (DWORD)(((DWORD)*((BYTE*)(&buf[8])+3)<<24)|((DWORD)*((BYTE*)(&b
      +                          uf[8])+2)<<16)|((WORD)*((BYTE*)(&buf[8])+1)<<8)|*(BYTE*)(&buf[8]));
  8465  00106A  5109               	movf	(pf_mount@buf+9)& (0+255),w,b
  8466  00106C  0100               	movlb	0	; () banked
  8467  00106E  6FAF               	movwf	(??_pf_mount+1)& (0+255),b
  8468  001070  6BAE               	clrf	??_pf_mount& (0+255),b
  8469  001072  C10A  F0B0         	movff	pf_mount@buf+10,??_pf_mount+2
  8470  001076  6BB1               	clrf	(??_pf_mount+3)& (0+255),b
  8471  001078  6BB2               	clrf	(??_pf_mount+4)& (0+255),b
  8472  00107A  6BB3               	clrf	(??_pf_mount+5)& (0+255),b
  8473  00107C  C0B1  F0B3         	movff	??_pf_mount+3,??_pf_mount+5
  8474  001080  C0B0  F0B2         	movff	??_pf_mount+2,??_pf_mount+4
  8475  001084  6BB1               	clrf	(??_pf_mount+3)& (0+255),b
  8476  001086  6BB0               	clrf	(??_pf_mount+2)& (0+255),b
  8477  001088  C10B  F0B4         	movff	pf_mount@buf+11,??_pf_mount+6
  8478  00108C  6BB5               	clrf	(??_pf_mount+7)& (0+255),b
  8479  00108E  6BB6               	clrf	(??_pf_mount+8)& (0+255),b
  8480  001090  6BB7               	clrf	(??_pf_mount+9)& (0+255),b
  8481  001092  C0B4  F0B7         	movff	??_pf_mount+6,??_pf_mount+9
  8482  001096  6BB6               	clrf	(??_pf_mount+8)& (0+255),b
  8483  001098  6BB5               	clrf	(??_pf_mount+7)& (0+255),b
  8484  00109A  6BB4               	clrf	(??_pf_mount+6)& (0+255),b
  8485  00109C  51B0               	movf	(??_pf_mount+2)& (0+255),w,b
  8486  00109E  11B4               	iorwf	(??_pf_mount+6)& (0+255),w,b
  8487  0010A0  6FB8               	movwf	(??_pf_mount+10)& (0+255),b
  8488  0010A2  51B1               	movf	(??_pf_mount+3)& (0+255),w,b
  8489  0010A4  11B5               	iorwf	(??_pf_mount+7)& (0+255),w,b
  8490  0010A6  6FB9               	movwf	(??_pf_mount+11)& (0+255),b
  8491  0010A8  51B2               	movf	(??_pf_mount+4)& (0+255),w,b
  8492  0010AA  11B6               	iorwf	(??_pf_mount+8)& (0+255),w,b
  8493  0010AC  6FBA               	movwf	(??_pf_mount+12)& (0+255),b
  8494  0010AE  51B3               	movf	(??_pf_mount+5)& (0+255),w,b
  8495  0010B0  11B7               	iorwf	(??_pf_mount+9)& (0+255),w,b
  8496  0010B2  6FBB               	movwf	(??_pf_mount+13)& (0+255),b
  8497  0010B4  51AE               	movf	??_pf_mount& (0+255),w,b
  8498  0010B6  11B8               	iorwf	(??_pf_mount+10)& (0+255),w,b
  8499  0010B8  6FBC               	movwf	(??_pf_mount+14)& (0+255),b
  8500  0010BA  51AF               	movf	(??_pf_mount+1)& (0+255),w,b
  8501  0010BC  11B9               	iorwf	(??_pf_mount+11)& (0+255),w,b
  8502  0010BE  6FBD               	movwf	(??_pf_mount+15)& (0+255),b
  8503  0010C0  0E00               	movlw	0
  8504  0010C2  11BA               	iorwf	(??_pf_mount+12)& (0+255),w,b
  8505  0010C4  6FBE               	movwf	(??_pf_mount+16)& (0+255),b
  8506  0010C6  0E00               	movlw	0
  8507  0010C8  11BB               	iorwf	(??_pf_mount+13)& (0+255),w,b
  8508  0010CA  6FBF               	movwf	(??_pf_mount+17)& (0+255),b
  8509  0010CC  0101               	movlb	1	; () banked
  8510  0010CE  5108               	movf	(pf_mount@buf+8)& (0+255),w,b
  8511  0010D0  0100               	movlb	0	; () banked
  8512  0010D2  11BC               	iorwf	(??_pf_mount+14)& (0+255),w,b
  8513  0010D4  0101               	movlb	1	; () banked
  8514  0010D6  6F2C               	movwf	pf_mount@bsect& (0+255),b
  8515  0010D8  0100               	movlb	0	; () banked
  8516  0010DA  51BD               	movf	(??_pf_mount+15)& (0+255),w,b
  8517  0010DC  0101               	movlb	1	; () banked
  8518  0010DE  6F2D               	movwf	(pf_mount@bsect+1)& (0+255),b
  8519  0010E0  0100               	movlb	0	; () banked
  8520  0010E2  51BE               	movf	(??_pf_mount+16)& (0+255),w,b
  8521  0010E4  0101               	movlb	1	; () banked
  8522  0010E6  6F2E               	movwf	(pf_mount@bsect+2)& (0+255),b
  8523  0010E8  0100               	movlb	0	; () banked
  8524  0010EA  51BF               	movf	(??_pf_mount+17)& (0+255),w,b
  8525  0010EC  0101               	movlb	1	; () banked
  8526  0010EE  6F2F               	movwf	(pf_mount@bsect+3)& (0+255),b
  8527  0010F0                     
  8528                           ; BSR set to: 1
  8529                           ;pff.c: 773:     fmt = check_fs(buf, bsect);
  8530  0010F0  0E00               	movlw	low pf_mount@buf
  8531  0010F2  0100               	movlb	0	; () banked
  8532  0010F4  6FA2               	movwf	check_fs@buf& (0+255),b
  8533  0010F6  0E01               	movlw	high pf_mount@buf
  8534  0010F8  6FA3               	movwf	(check_fs@buf+1)& (0+255),b
  8535  0010FA  C12C  F0A4         	movff	pf_mount@bsect,check_fs@sect
  8536  0010FE  C12D  F0A5         	movff	pf_mount@bsect+1,check_fs@sect+1
  8537  001102  C12E  F0A6         	movff	pf_mount@bsect+2,check_fs@sect+2
  8538  001106  C12F  F0A7         	movff	pf_mount@bsect+3,check_fs@sect+3
  8539  00110A  ECCD  F023         	call	_check_fs	;wreg free
  8540  00110E  0101               	movlb	1	; () banked
  8541  001110  6F34               	movwf	pf_mount@fmt& (0+255),b
  8542  001112                     l8133:
  8543                           
  8544                           ; BSR set to: 1
  8545                           ;pff.c: 777:  if (fmt == 3) return FR_DISK_ERR;
  8546  001112  0E03               	movlw	3
  8547  001114  1934               	xorwf	pf_mount@fmt& (0+255),w,b
  8548  001116  A4D8               	btfss	status,2,c
  8549  001118  EF90  F008         	goto	u10581
  8550  00111C  EF92  F008         	goto	u10580
  8551  001120                     u10581:
  8552  001120  EF95  F008         	goto	l8139
  8553  001124                     u10580:
  8554  001124                     l8135:
  8555  001124  0E01               	movlw	1
  8556  001126  EF3E  F00B         	goto	l315
  8557  00112A                     l8139:
  8558                           
  8559                           ; BSR set to: 1
  8560                           ;pff.c: 778:  if (fmt) return FR_NO_FILESYSTEM;
  8561  00112A  5134               	movf	pf_mount@fmt& (0+255),w,b
  8562  00112C  B4D8               	btfsc	status,2,c
  8563  00112E  EF9B  F008         	goto	u10591
  8564  001132  EF9D  F008         	goto	u10590
  8565  001136                     u10591:
  8566  001136  EFA0  F008         	goto	l8145
  8567  00113A                     u10590:
  8568  00113A                     l8141:
  8569                           
  8570                           ; BSR set to: 1
  8571  00113A  0E06               	movlw	6
  8572  00113C  EF3E  F00B         	goto	l315
  8573  001140                     l8145:
  8574                           
  8575                           ; BSR set to: 1
  8576                           ;pff.c: 781:  if (disk_readp(buf, bsect, 13, sizeof (buf))) return FR_DISK_ERR;
  8577  001140  0E00               	movlw	low pf_mount@buf
  8578  001142  0100               	movlb	0	; () banked
  8579  001144  6F92               	movwf	disk_readp@buff& (0+255),b
  8580  001146  0E01               	movlw	high pf_mount@buf
  8581  001148  6F93               	movwf	(disk_readp@buff+1)& (0+255),b
  8582  00114A  C12C  F094         	movff	pf_mount@bsect,disk_readp@sector
  8583  00114E  C12D  F095         	movff	pf_mount@bsect+1,disk_readp@sector+1
  8584  001152  C12E  F096         	movff	pf_mount@bsect+2,disk_readp@sector+2
  8585  001156  C12F  F097         	movff	pf_mount@bsect+3,disk_readp@sector+3
  8586  00115A  0E00               	movlw	0
  8587  00115C  6F99               	movwf	(disk_readp@offset+1)& (0+255),b
  8588  00115E  0E0D               	movlw	13
  8589  001160  6F98               	movwf	disk_readp@offset& (0+255),b
  8590  001162  0E00               	movlw	0
  8591  001164  6F9B               	movwf	(disk_readp@count+1)& (0+255),b
  8592  001166  0E24               	movlw	36
  8593  001168  6F9A               	movwf	disk_readp@count& (0+255),b
  8594  00116A  ECDC  F01B         	call	_disk_readp	;wreg free
  8595  00116E  0900               	iorlw	0
  8596  001170  B4D8               	btfsc	status,2,c
  8597  001172  EFBD  F008         	goto	u10601
  8598  001176  EFBF  F008         	goto	u10600
  8599  00117A                     u10601:
  8600  00117A  EFC1  F008         	goto	l8151
  8601  00117E                     u10600:
  8602  00117E  EF92  F008         	goto	l8135
  8603  001182                     l8151:
  8604                           
  8605                           ;pff.c: 783:  fsize = (WORD)(((WORD)*((BYTE*)(buf+22 -13)+1)<<8)|(WORD)*(BYTE*)(buf+22 -
      +                          13));
  8606  001182  0101               	movlb	1	; () banked
  8607  001184  5109               	movf	(pf_mount@buf+9)& (0+255),w,b
  8608  001186  C10A  F0AE         	movff	pf_mount@buf+10,??_pf_mount
  8609  00118A  0100               	movlb	0	; () banked
  8610  00118C  6BAF               	clrf	(??_pf_mount+1)& (0+255),b
  8611  00118E  C0AE  F0AF         	movff	??_pf_mount,??_pf_mount+1
  8612  001192  6BAE               	clrf	??_pf_mount& (0+255),b
  8613  001194  13AE               	iorwf	??_pf_mount& (0+255),f,b
  8614  001196  0E00               	movlw	0
  8615  001198  13AF               	iorwf	(??_pf_mount+1)& (0+255),f,b
  8616  00119A  C0AE  F130         	movff	??_pf_mount,pf_mount@fsize
  8617  00119E  C0AF  F131         	movff	??_pf_mount+1,pf_mount@fsize+1
  8618  0011A2  0101               	movlb	1	; () banked
  8619  0011A4  6B32               	clrf	(pf_mount@fsize+2)& (0+255),b
  8620  0011A6  6B33               	clrf	(pf_mount@fsize+3)& (0+255),b
  8621                           
  8622                           ;pff.c: 784:  if (!fsize) fsize = (DWORD)(((DWORD)*((BYTE*)(buf+36 -13)+3)<<24)|((DWORD)
      +                          *((BYTE*)(buf+36 -13)+2)<<16)|((WORD)*((BYTE*)(buf+36 -13)+1)<<8)|*(BYTE*)(buf+36 -13));
  8623  0011A8  5130               	movf	pf_mount@fsize& (0+255),w,b
  8624  0011AA  1131               	iorwf	(pf_mount@fsize+1)& (0+255),w,b
  8625  0011AC  1132               	iorwf	(pf_mount@fsize+2)& (0+255),w,b
  8626  0011AE  1133               	iorwf	(pf_mount@fsize+3)& (0+255),w,b
  8627  0011B0  A4D8               	btfss	status,2,c
  8628  0011B2  EFDD  F008         	goto	u10611
  8629  0011B6  EFDF  F008         	goto	u10610
  8630  0011BA                     u10611:
  8631  0011BA  EF22  F009         	goto	l8155
  8632  0011BE                     u10610:
  8633  0011BE                     
  8634                           ; BSR set to: 1
  8635  0011BE  5118               	movf	(pf_mount@buf+24)& (0+255),w,b
  8636  0011C0  0100               	movlb	0	; () banked
  8637  0011C2  6FAF               	movwf	(??_pf_mount+1)& (0+255),b
  8638  0011C4  6BAE               	clrf	??_pf_mount& (0+255),b
  8639  0011C6  C119  F0B0         	movff	pf_mount@buf+25,??_pf_mount+2
  8640  0011CA  6BB1               	clrf	(??_pf_mount+3)& (0+255),b
  8641  0011CC  6BB2               	clrf	(??_pf_mount+4)& (0+255),b
  8642  0011CE  6BB3               	clrf	(??_pf_mount+5)& (0+255),b
  8643  0011D0  C0B1  F0B3         	movff	??_pf_mount+3,??_pf_mount+5
  8644  0011D4  C0B0  F0B2         	movff	??_pf_mount+2,??_pf_mount+4
  8645  0011D8  6BB1               	clrf	(??_pf_mount+3)& (0+255),b
  8646  0011DA  6BB0               	clrf	(??_pf_mount+2)& (0+255),b
  8647  0011DC  C11A  F0B4         	movff	pf_mount@buf+26,??_pf_mount+6
  8648  0011E0  6BB5               	clrf	(??_pf_mount+7)& (0+255),b
  8649  0011E2  6BB6               	clrf	(??_pf_mount+8)& (0+255),b
  8650  0011E4  6BB7               	clrf	(??_pf_mount+9)& (0+255),b
  8651  0011E6  C0B4  F0B7         	movff	??_pf_mount+6,??_pf_mount+9
  8652  0011EA  6BB6               	clrf	(??_pf_mount+8)& (0+255),b
  8653  0011EC  6BB5               	clrf	(??_pf_mount+7)& (0+255),b
  8654  0011EE  6BB4               	clrf	(??_pf_mount+6)& (0+255),b
  8655  0011F0  51B0               	movf	(??_pf_mount+2)& (0+255),w,b
  8656  0011F2  11B4               	iorwf	(??_pf_mount+6)& (0+255),w,b
  8657  0011F4  6FB8               	movwf	(??_pf_mount+10)& (0+255),b
  8658  0011F6  51B1               	movf	(??_pf_mount+3)& (0+255),w,b
  8659  0011F8  11B5               	iorwf	(??_pf_mount+7)& (0+255),w,b
  8660  0011FA  6FB9               	movwf	(??_pf_mount+11)& (0+255),b
  8661  0011FC  51B2               	movf	(??_pf_mount+4)& (0+255),w,b
  8662  0011FE  11B6               	iorwf	(??_pf_mount+8)& (0+255),w,b
  8663  001200  6FBA               	movwf	(??_pf_mount+12)& (0+255),b
  8664  001202  51B3               	movf	(??_pf_mount+5)& (0+255),w,b
  8665  001204  11B7               	iorwf	(??_pf_mount+9)& (0+255),w,b
  8666  001206  6FBB               	movwf	(??_pf_mount+13)& (0+255),b
  8667  001208  51AE               	movf	??_pf_mount& (0+255),w,b
  8668  00120A  11B8               	iorwf	(??_pf_mount+10)& (0+255),w,b
  8669  00120C  6FBC               	movwf	(??_pf_mount+14)& (0+255),b
  8670  00120E  51AF               	movf	(??_pf_mount+1)& (0+255),w,b
  8671  001210  11B9               	iorwf	(??_pf_mount+11)& (0+255),w,b
  8672  001212  6FBD               	movwf	(??_pf_mount+15)& (0+255),b
  8673  001214  0E00               	movlw	0
  8674  001216  11BA               	iorwf	(??_pf_mount+12)& (0+255),w,b
  8675  001218  6FBE               	movwf	(??_pf_mount+16)& (0+255),b
  8676  00121A  0E00               	movlw	0
  8677  00121C  11BB               	iorwf	(??_pf_mount+13)& (0+255),w,b
  8678  00121E  6FBF               	movwf	(??_pf_mount+17)& (0+255),b
  8679  001220  0101               	movlb	1	; () banked
  8680  001222  5117               	movf	(pf_mount@buf+23)& (0+255),w,b
  8681  001224  0100               	movlb	0	; () banked
  8682  001226  11BC               	iorwf	(??_pf_mount+14)& (0+255),w,b
  8683  001228  0101               	movlb	1	; () banked
  8684  00122A  6F30               	movwf	pf_mount@fsize& (0+255),b
  8685  00122C  0100               	movlb	0	; () banked
  8686  00122E  51BD               	movf	(??_pf_mount+15)& (0+255),w,b
  8687  001230  0101               	movlb	1	; () banked
  8688  001232  6F31               	movwf	(pf_mount@fsize+1)& (0+255),b
  8689  001234  0100               	movlb	0	; () banked
  8690  001236  51BE               	movf	(??_pf_mount+16)& (0+255),w,b
  8691  001238  0101               	movlb	1	; () banked
  8692  00123A  6F32               	movwf	(pf_mount@fsize+2)& (0+255),b
  8693  00123C  0100               	movlb	0	; () banked
  8694  00123E  51BF               	movf	(??_pf_mount+17)& (0+255),w,b
  8695  001240  0101               	movlb	1	; () banked
  8696  001242  6F33               	movwf	(pf_mount@fsize+3)& (0+255),b
  8697  001244                     l8155:
  8698                           
  8699                           ; BSR set to: 1
  8700                           ;pff.c: 786:  fsize *= buf[16 -13];
  8701  001244  C130  F006         	movff	pf_mount@fsize,___lmul@multiplier
  8702  001248  C131  F007         	movff	pf_mount@fsize+1,___lmul@multiplier+1
  8703  00124C  C132  F008         	movff	pf_mount@fsize+2,___lmul@multiplier+2
  8704  001250  C133  F009         	movff	pf_mount@fsize+3,___lmul@multiplier+3
  8705  001254  5103               	movf	(pf_mount@buf+3)& (0+255),w,b
  8706  001256  6E0A               	movwf	___lmul@multiplicand^0,c
  8707  001258  6A0B               	clrf	(___lmul@multiplicand+1)^0,c
  8708  00125A  6A0C               	clrf	(___lmul@multiplicand+2)^0,c
  8709  00125C  6A0D               	clrf	(___lmul@multiplicand+3)^0,c
  8710  00125E  EC76  F02A         	call	___lmul	;wreg free
  8711  001262  C006  F130         	movff	?___lmul,pf_mount@fsize
  8712  001266  C007  F131         	movff	?___lmul+1,pf_mount@fsize+1
  8713  00126A  C008  F132         	movff	?___lmul+2,pf_mount@fsize+2
  8714  00126E  C009  F133         	movff	?___lmul+3,pf_mount@fsize+3
  8715  001272                     
  8716                           ;pff.c: 787:  fs->fatbase = bsect + (WORD)(((WORD)*((BYTE*)(buf+14 -13)+1)<<8)|(WORD)*(B
      +                          YTE*)(buf+14 -13));
  8717  001272  0101               	movlb	1	; () banked
  8718  001274  5101               	movf	(pf_mount@buf+1)& (0+255),w,b
  8719  001276  C102  F0AE         	movff	pf_mount@buf+2,??_pf_mount
  8720  00127A  0100               	movlb	0	; () banked
  8721  00127C  6BAF               	clrf	(??_pf_mount+1)& (0+255),b
  8722  00127E  C0AE  F0AF         	movff	??_pf_mount,??_pf_mount+1
  8723  001282  6BAE               	clrf	??_pf_mount& (0+255),b
  8724  001284  13AE               	iorwf	??_pf_mount& (0+255),f,b
  8725  001286  0E00               	movlw	0
  8726  001288  13AF               	iorwf	(??_pf_mount+1)& (0+255),f,b
  8727  00128A  51AE               	movf	??_pf_mount& (0+255),w,b
  8728  00128C  0101               	movlb	1	; () banked
  8729  00128E  252C               	addwf	pf_mount@bsect& (0+255),w,b
  8730  001290  0100               	movlb	0	; () banked
  8731  001292  6FB0               	movwf	(??_pf_mount+2)& (0+255),b
  8732  001294  51AF               	movf	(??_pf_mount+1)& (0+255),w,b
  8733  001296  0101               	movlb	1	; () banked
  8734  001298  212D               	addwfc	(pf_mount@bsect+1)& (0+255),w,b
  8735  00129A  0100               	movlb	0	; () banked
  8736  00129C  6FB1               	movwf	(??_pf_mount+3)& (0+255),b
  8737  00129E  0E00               	movlw	0
  8738  0012A0  0101               	movlb	1	; () banked
  8739  0012A2  212E               	addwfc	(pf_mount@bsect+2)& (0+255),w,b
  8740  0012A4  0100               	movlb	0	; () banked
  8741  0012A6  6FB2               	movwf	(??_pf_mount+4)& (0+255),b
  8742  0012A8  0E00               	movlw	0
  8743  0012AA  0101               	movlb	1	; () banked
  8744  0012AC  212F               	addwfc	(pf_mount@bsect+3)& (0+255),w,b
  8745  0012AE  0100               	movlb	0	; () banked
  8746  0012B0  6FB3               	movwf	(??_pf_mount+5)& (0+255),b
  8747  0012B2  EE20 F00A          	lfsr	2,10
  8748  0012B6  51AC               	movf	pf_mount@fs& (0+255),w,b
  8749  0012B8  26D9               	addwf	fsr2l,f,c
  8750  0012BA  51AD               	movf	(pf_mount@fs+1)& (0+255),w,b
  8751  0012BC  22DA               	addwfc	fsr2h,f,c
  8752  0012BE  C0B0  FFDE         	movff	??_pf_mount+2,postinc2
  8753  0012C2  C0B1  FFDE         	movff	??_pf_mount+3,postinc2
  8754  0012C6  C0B2  FFDE         	movff	??_pf_mount+4,postinc2
  8755  0012CA  C0B3  FFDE         	movff	??_pf_mount+5,postinc2
  8756  0012CE                     
  8757                           ; BSR set to: 0
  8758                           ;pff.c: 788:  fs->csize = buf[13 -13];
  8759  0012CE  EE20 F002          	lfsr	2,2
  8760  0012D2  51AC               	movf	pf_mount@fs& (0+255),w,b
  8761  0012D4  26D9               	addwf	fsr2l,f,c
  8762  0012D6  51AD               	movf	(pf_mount@fs+1)& (0+255),w,b
  8763  0012D8  22DA               	addwfc	fsr2h,f,c
  8764  0012DA  C100  FFDF         	movff	pf_mount@buf,indf2
  8765  0012DE                     
  8766                           ; BSR set to: 0
  8767                           ;pff.c: 789:  fs->n_rootdir = (WORD)(((WORD)*((BYTE*)(buf+17 -13)+1)<<8)|(WORD)*(BYTE*)(
      +                          buf+17 -13));
  8768  0012DE  0101               	movlb	1	; () banked
  8769  0012E0  5104               	movf	(pf_mount@buf+4)& (0+255),w,b
  8770  0012E2  C105  F0AE         	movff	pf_mount@buf+5,??_pf_mount
  8771  0012E6  0100               	movlb	0	; () banked
  8772  0012E8  6BAF               	clrf	(??_pf_mount+1)& (0+255),b
  8773  0012EA  C0AE  F0AF         	movff	??_pf_mount,??_pf_mount+1
  8774  0012EE  6BAE               	clrf	??_pf_mount& (0+255),b
  8775  0012F0  13AE               	iorwf	??_pf_mount& (0+255),f,b
  8776  0012F2  0E00               	movlw	0
  8777  0012F4  13AF               	iorwf	(??_pf_mount+1)& (0+255),f,b
  8778  0012F6  EE20 F004          	lfsr	2,4
  8779  0012FA  51AC               	movf	pf_mount@fs& (0+255),w,b
  8780  0012FC  26D9               	addwf	fsr2l,f,c
  8781  0012FE  51AD               	movf	(pf_mount@fs+1)& (0+255),w,b
  8782  001300  22DA               	addwfc	fsr2h,f,c
  8783  001302  C0AE  FFDE         	movff	??_pf_mount,postinc2
  8784  001306  C0AF  FFDD         	movff	??_pf_mount+1,postdec2
  8785  00130A                     
  8786                           ; BSR set to: 0
  8787                           ;pff.c: 790:  tsect = (WORD)(((WORD)*((BYTE*)(buf+19 -13)+1)<<8)|(WORD)*(BYTE*)(buf+19 -
      +                          13));
  8788  00130A  0101               	movlb	1	; () banked
  8789  00130C  5106               	movf	(pf_mount@buf+6)& (0+255),w,b
  8790  00130E  C107  F0AE         	movff	pf_mount@buf+7,??_pf_mount
  8791  001312  0100               	movlb	0	; () banked
  8792  001314  6BAF               	clrf	(??_pf_mount+1)& (0+255),b
  8793  001316  C0AE  F0AF         	movff	??_pf_mount,??_pf_mount+1
  8794  00131A  6BAE               	clrf	??_pf_mount& (0+255),b
  8795  00131C  13AE               	iorwf	??_pf_mount& (0+255),f,b
  8796  00131E  0E00               	movlw	0
  8797  001320  13AF               	iorwf	(??_pf_mount+1)& (0+255),f,b
  8798  001322  C0AE  F124         	movff	??_pf_mount,pf_mount@tsect
  8799  001326  C0AF  F125         	movff	??_pf_mount+1,pf_mount@tsect+1
  8800  00132A  0101               	movlb	1	; () banked
  8801  00132C  6B26               	clrf	(pf_mount@tsect+2)& (0+255),b
  8802  00132E  6B27               	clrf	(pf_mount@tsect+3)& (0+255),b
  8803  001330                     
  8804                           ; BSR set to: 1
  8805                           ;pff.c: 791:  if (!tsect) tsect = (DWORD)(((DWORD)*((BYTE*)(buf+32 -13)+3)<<24)|((DWORD)
      +                          *((BYTE*)(buf+32 -13)+2)<<16)|((WORD)*((BYTE*)(buf+32 -13)+1)<<8)|*(BYTE*)(buf+32 -13));
  8806  001330  5124               	movf	pf_mount@tsect& (0+255),w,b
  8807  001332  1125               	iorwf	(pf_mount@tsect+1)& (0+255),w,b
  8808  001334  1126               	iorwf	(pf_mount@tsect+2)& (0+255),w,b
  8809  001336  1127               	iorwf	(pf_mount@tsect+3)& (0+255),w,b
  8810  001338  A4D8               	btfss	status,2,c
  8811  00133A  EFA1  F009         	goto	u10621
  8812  00133E  EFA3  F009         	goto	u10620
  8813  001342                     u10621:
  8814  001342  EFE6  F009         	goto	l8169
  8815  001346                     u10620:
  8816  001346                     
  8817                           ; BSR set to: 1
  8818  001346  5114               	movf	(pf_mount@buf+20)& (0+255),w,b
  8819  001348  0100               	movlb	0	; () banked
  8820  00134A  6FAF               	movwf	(??_pf_mount+1)& (0+255),b
  8821  00134C  6BAE               	clrf	??_pf_mount& (0+255),b
  8822  00134E  C115  F0B0         	movff	pf_mount@buf+21,??_pf_mount+2
  8823  001352  6BB1               	clrf	(??_pf_mount+3)& (0+255),b
  8824  001354  6BB2               	clrf	(??_pf_mount+4)& (0+255),b
  8825  001356  6BB3               	clrf	(??_pf_mount+5)& (0+255),b
  8826  001358  C0B1  F0B3         	movff	??_pf_mount+3,??_pf_mount+5
  8827  00135C  C0B0  F0B2         	movff	??_pf_mount+2,??_pf_mount+4
  8828  001360  6BB1               	clrf	(??_pf_mount+3)& (0+255),b
  8829  001362  6BB0               	clrf	(??_pf_mount+2)& (0+255),b
  8830  001364  C116  F0B4         	movff	pf_mount@buf+22,??_pf_mount+6
  8831  001368  6BB5               	clrf	(??_pf_mount+7)& (0+255),b
  8832  00136A  6BB6               	clrf	(??_pf_mount+8)& (0+255),b
  8833  00136C  6BB7               	clrf	(??_pf_mount+9)& (0+255),b
  8834  00136E  C0B4  F0B7         	movff	??_pf_mount+6,??_pf_mount+9
  8835  001372  6BB6               	clrf	(??_pf_mount+8)& (0+255),b
  8836  001374  6BB5               	clrf	(??_pf_mount+7)& (0+255),b
  8837  001376  6BB4               	clrf	(??_pf_mount+6)& (0+255),b
  8838  001378  51B0               	movf	(??_pf_mount+2)& (0+255),w,b
  8839  00137A  11B4               	iorwf	(??_pf_mount+6)& (0+255),w,b
  8840  00137C  6FB8               	movwf	(??_pf_mount+10)& (0+255),b
  8841  00137E  51B1               	movf	(??_pf_mount+3)& (0+255),w,b
  8842  001380  11B5               	iorwf	(??_pf_mount+7)& (0+255),w,b
  8843  001382  6FB9               	movwf	(??_pf_mount+11)& (0+255),b
  8844  001384  51B2               	movf	(??_pf_mount+4)& (0+255),w,b
  8845  001386  11B6               	iorwf	(??_pf_mount+8)& (0+255),w,b
  8846  001388  6FBA               	movwf	(??_pf_mount+12)& (0+255),b
  8847  00138A  51B3               	movf	(??_pf_mount+5)& (0+255),w,b
  8848  00138C  11B7               	iorwf	(??_pf_mount+9)& (0+255),w,b
  8849  00138E  6FBB               	movwf	(??_pf_mount+13)& (0+255),b
  8850  001390  51AE               	movf	??_pf_mount& (0+255),w,b
  8851  001392  11B8               	iorwf	(??_pf_mount+10)& (0+255),w,b
  8852  001394  6FBC               	movwf	(??_pf_mount+14)& (0+255),b
  8853  001396  51AF               	movf	(??_pf_mount+1)& (0+255),w,b
  8854  001398  11B9               	iorwf	(??_pf_mount+11)& (0+255),w,b
  8855  00139A  6FBD               	movwf	(??_pf_mount+15)& (0+255),b
  8856  00139C  0E00               	movlw	0
  8857  00139E  11BA               	iorwf	(??_pf_mount+12)& (0+255),w,b
  8858  0013A0  6FBE               	movwf	(??_pf_mount+16)& (0+255),b
  8859  0013A2  0E00               	movlw	0
  8860  0013A4  11BB               	iorwf	(??_pf_mount+13)& (0+255),w,b
  8861  0013A6  6FBF               	movwf	(??_pf_mount+17)& (0+255),b
  8862  0013A8  0101               	movlb	1	; () banked
  8863  0013AA  5113               	movf	(pf_mount@buf+19)& (0+255),w,b
  8864  0013AC  0100               	movlb	0	; () banked
  8865  0013AE  11BC               	iorwf	(??_pf_mount+14)& (0+255),w,b
  8866  0013B0  0101               	movlb	1	; () banked
  8867  0013B2  6F24               	movwf	pf_mount@tsect& (0+255),b
  8868  0013B4  0100               	movlb	0	; () banked
  8869  0013B6  51BD               	movf	(??_pf_mount+15)& (0+255),w,b
  8870  0013B8  0101               	movlb	1	; () banked
  8871  0013BA  6F25               	movwf	(pf_mount@tsect+1)& (0+255),b
  8872  0013BC  0100               	movlb	0	; () banked
  8873  0013BE  51BE               	movf	(??_pf_mount+16)& (0+255),w,b
  8874  0013C0  0101               	movlb	1	; () banked
  8875  0013C2  6F26               	movwf	(pf_mount@tsect+2)& (0+255),b
  8876  0013C4  0100               	movlb	0	; () banked
  8877  0013C6  51BF               	movf	(??_pf_mount+17)& (0+255),w,b
  8878  0013C8  0101               	movlb	1	; () banked
  8879  0013CA  6F27               	movwf	(pf_mount@tsect+3)& (0+255),b
  8880  0013CC                     l8169:
  8881                           
  8882                           ; BSR set to: 1
  8883                           ;pff.c: 792:  mclst = (tsect
  8884  0013CC  0100               	movlb	0	; () banked
  8885  0013CE  EE20 F004          	lfsr	2,4
  8886  0013D2  51AC               	movf	pf_mount@fs& (0+255),w,b
  8887  0013D4  26D9               	addwf	fsr2l,f,c
  8888  0013D6  51AD               	movf	(pf_mount@fs+1)& (0+255),w,b
  8889  0013D8  22DA               	addwfc	fsr2h,f,c
  8890  0013DA  CFDE F0AE          	movff	postinc2,??_pf_mount
  8891  0013DE  CFDD F0AF          	movff	postdec2,??_pf_mount+1
  8892  0013E2  0E04               	movlw	4
  8893  0013E4  6FB0               	movwf	(??_pf_mount+2)& (0+255),b
  8894  0013E6                     u10635:
  8895  0013E6  90D8               	bcf	status,0,c
  8896  0013E8  33AF               	rrcf	(??_pf_mount+1)& (0+255),f,b
  8897  0013EA  33AE               	rrcf	??_pf_mount& (0+255),f,b
  8898  0013EC  2FB0               	decfsz	(??_pf_mount+2)& (0+255),f,b
  8899  0013EE  EFF3  F009         	goto	u10635
  8900  0013F2  51AE               	movf	??_pf_mount& (0+255),w,b
  8901  0013F4  6FB1               	movwf	(??_pf_mount+3)& (0+255),b
  8902  0013F6  51AF               	movf	(??_pf_mount+1)& (0+255),w,b
  8903  0013F8  6FB2               	movwf	(??_pf_mount+4)& (0+255),b
  8904  0013FA  6BB3               	clrf	(??_pf_mount+5)& (0+255),b
  8905  0013FC  6BB4               	clrf	(??_pf_mount+6)& (0+255),b
  8906  0013FE  0101               	movlb	1	; () banked
  8907  001400  5101               	movf	(pf_mount@buf+1)& (0+255),w,b
  8908  001402  C102  F0B5         	movff	pf_mount@buf+2,??_pf_mount+7
  8909  001406  0100               	movlb	0	; () banked
  8910  001408  6BB6               	clrf	(??_pf_mount+8)& (0+255),b
  8911  00140A  C0B5  F0B6         	movff	??_pf_mount+7,??_pf_mount+8
  8912  00140E  6BB5               	clrf	(??_pf_mount+7)& (0+255),b
  8913  001410  11B5               	iorwf	(??_pf_mount+7)& (0+255),w,b
  8914  001412  6FB7               	movwf	(??_pf_mount+9)& (0+255),b
  8915  001414  51B6               	movf	(??_pf_mount+8)& (0+255),w,b
  8916  001416  6FB8               	movwf	(??_pf_mount+10)& (0+255),b
  8917  001418  6BB9               	clrf	(??_pf_mount+11)& (0+255),b
  8918  00141A  6BBA               	clrf	(??_pf_mount+12)& (0+255),b
  8919  00141C  1FB7               	comf	(??_pf_mount+9)& (0+255),f,b
  8920  00141E  1FB8               	comf	(??_pf_mount+10)& (0+255),f,b
  8921  001420  1FB9               	comf	(??_pf_mount+11)& (0+255),f,b
  8922  001422  1FBA               	comf	(??_pf_mount+12)& (0+255),f,b
  8923  001424  2BB7               	incf	(??_pf_mount+9)& (0+255),f,b
  8924  001426  0E00               	movlw	0
  8925  001428  23B8               	addwfc	(??_pf_mount+10)& (0+255),f,b
  8926  00142A  23B9               	addwfc	(??_pf_mount+11)& (0+255),f,b
  8927  00142C  23BA               	addwfc	(??_pf_mount+12)& (0+255),f,b
  8928  00142E  0101               	movlb	1	; () banked
  8929  001430  5130               	movf	pf_mount@fsize& (0+255),w,b
  8930  001432  0100               	movlb	0	; () banked
  8931  001434  5DB7               	subwf	(??_pf_mount+9)& (0+255),w,b
  8932  001436  6FBB               	movwf	(??_pf_mount+13)& (0+255),b
  8933  001438  0101               	movlb	1	; () banked
  8934  00143A  5131               	movf	(pf_mount@fsize+1)& (0+255),w,b
  8935  00143C  0100               	movlb	0	; () banked
  8936  00143E  59B8               	subwfb	(??_pf_mount+10)& (0+255),w,b
  8937  001440  6FBC               	movwf	(??_pf_mount+14)& (0+255),b
  8938  001442  0101               	movlb	1	; () banked
  8939  001444  5132               	movf	(pf_mount@fsize+2)& (0+255),w,b
  8940  001446  0100               	movlb	0	; () banked
  8941  001448  59B9               	subwfb	(??_pf_mount+11)& (0+255),w,b
  8942  00144A  6FBD               	movwf	(??_pf_mount+15)& (0+255),b
  8943  00144C  0101               	movlb	1	; () banked
  8944  00144E  5133               	movf	(pf_mount@fsize+3)& (0+255),w,b
  8945  001450  0100               	movlb	0	; () banked
  8946  001452  59BA               	subwfb	(??_pf_mount+12)& (0+255),w,b
  8947  001454  6FBE               	movwf	(??_pf_mount+16)& (0+255),b
  8948  001456  51B1               	movf	(??_pf_mount+3)& (0+255),w,b
  8949  001458  5DBB               	subwf	(??_pf_mount+13)& (0+255),w,b
  8950  00145A  6FBF               	movwf	(??_pf_mount+17)& (0+255),b
  8951  00145C  51B2               	movf	(??_pf_mount+4)& (0+255),w,b
  8952  00145E  59BC               	subwfb	(??_pf_mount+14)& (0+255),w,b
  8953  001460  6FC0               	movwf	(??_pf_mount+18)& (0+255),b
  8954  001462  51B3               	movf	(??_pf_mount+5)& (0+255),w,b
  8955  001464  59BD               	subwfb	(??_pf_mount+15)& (0+255),w,b
  8956  001466  6FC1               	movwf	(??_pf_mount+19)& (0+255),b
  8957  001468  51B4               	movf	(??_pf_mount+6)& (0+255),w,b
  8958  00146A  59BE               	subwfb	(??_pf_mount+16)& (0+255),w,b
  8959  00146C  6FC2               	movwf	(??_pf_mount+20)& (0+255),b
  8960  00146E  0101               	movlb	1	; () banked
  8961  001470  5124               	movf	pf_mount@tsect& (0+255),w,b
  8962  001472  0100               	movlb	0	; () banked
  8963  001474  25BF               	addwf	(??_pf_mount+17)& (0+255),w,b
  8964  001476  6E06               	movwf	___lldiv@dividend^0,c
  8965  001478  0101               	movlb	1	; () banked
  8966  00147A  5125               	movf	(pf_mount@tsect+1)& (0+255),w,b
  8967  00147C  0100               	movlb	0	; () banked
  8968  00147E  21C0               	addwfc	(??_pf_mount+18)& (0+255),w,b
  8969  001480  6E07               	movwf	(___lldiv@dividend+1)^0,c
  8970  001482  0101               	movlb	1	; () banked
  8971  001484  5126               	movf	(pf_mount@tsect+2)& (0+255),w,b
  8972  001486  0100               	movlb	0	; () banked
  8973  001488  21C1               	addwfc	(??_pf_mount+19)& (0+255),w,b
  8974  00148A  6E08               	movwf	(___lldiv@dividend+2)^0,c
  8975  00148C  0101               	movlb	1	; () banked
  8976  00148E  5127               	movf	(pf_mount@tsect+3)& (0+255),w,b
  8977  001490  0100               	movlb	0	; () banked
  8978  001492  21C2               	addwfc	(??_pf_mount+20)& (0+255),w,b
  8979  001494  6E09               	movwf	(___lldiv@dividend+3)^0,c
  8980  001496  EE20 F002          	lfsr	2,2
  8981  00149A  51AC               	movf	pf_mount@fs& (0+255),w,b
  8982  00149C  26D9               	addwf	fsr2l,f,c
  8983  00149E  51AD               	movf	(pf_mount@fs+1)& (0+255),w,b
  8984  0014A0  22DA               	addwfc	fsr2h,f,c
  8985  0014A2  50DF               	movf	indf2,w,c
  8986  0014A4  6FC3               	movwf	(??_pf_mount+21)& (0+255),b
  8987  0014A6  51C3               	movf	(??_pf_mount+21)& (0+255),w,b
  8988  0014A8  6E0A               	movwf	___lldiv@divisor^0,c
  8989  0014AA  6A0B               	clrf	(___lldiv@divisor+1)^0,c
  8990  0014AC  6A0C               	clrf	(___lldiv@divisor+2)^0,c
  8991  0014AE  6A0D               	clrf	(___lldiv@divisor+3)^0,c
  8992  0014B0  EC3C  F028         	call	___lldiv	;wreg free
  8993  0014B4  0E02               	movlw	2
  8994  0014B6  2406               	addwf	?___lldiv^0,w,c
  8995  0014B8  0101               	movlb	1	; () banked
  8996  0014BA  6F28               	movwf	pf_mount@mclst& (0+255),b
  8997  0014BC  0E00               	movlw	0
  8998  0014BE  2007               	addwfc	(?___lldiv+1)^0,w,c
  8999  0014C0  6F29               	movwf	(pf_mount@mclst+1)& (0+255),b
  9000  0014C2  0E00               	movlw	0
  9001  0014C4  2008               	addwfc	(?___lldiv+2)^0,w,c
  9002  0014C6  6F2A               	movwf	(pf_mount@mclst+2)& (0+255),b
  9003  0014C8  0E00               	movlw	0
  9004  0014CA  2009               	addwfc	(?___lldiv+3)^0,w,c
  9005  0014CC  6F2B               	movwf	(pf_mount@mclst+3)& (0+255),b
  9006  0014CE                     
  9007                           ; BSR set to: 1
  9008                           ;pff.c: 795:  fs->n_fatent = (DWORD)mclst;
  9009  0014CE  0100               	movlb	0	; () banked
  9010  0014D0  EE20 F006          	lfsr	2,6
  9011  0014D4  51AC               	movf	pf_mount@fs& (0+255),w,b
  9012  0014D6  26D9               	addwf	fsr2l,f,c
  9013  0014D8  51AD               	movf	(pf_mount@fs+1)& (0+255),w,b
  9014  0014DA  22DA               	addwfc	fsr2h,f,c
  9015  0014DC  C128  FFDE         	movff	pf_mount@mclst,postinc2
  9016  0014E0  C129  FFDE         	movff	pf_mount@mclst+1,postinc2
  9017  0014E4  C12A  FFDE         	movff	pf_mount@mclst+2,postinc2
  9018  0014E8  C12B  FFDE         	movff	pf_mount@mclst+3,postinc2
  9019  0014EC                     
  9020                           ; BSR set to: 0
  9021                           ;pff.c: 797:  fmt = 0;
  9022  0014EC  0E00               	movlw	0
  9023  0014EE  0101               	movlb	1	; () banked
  9024  0014F0  6F34               	movwf	pf_mount@fmt& (0+255),b
  9025  0014F2                     
  9026                           ; BSR set to: 1
  9027  0014F2  512B               	movf	(pf_mount@mclst+3)& (0+255),w,b
  9028  0014F4  112A               	iorwf	(pf_mount@mclst+2)& (0+255),w,b
  9029  0014F6  E10B               	bnz	u10640
  9030  0014F8  0EF7               	movlw	247
  9031  0014FA  5D28               	subwf	pf_mount@mclst& (0+255),w,b
  9032  0014FC  0EFF               	movlw	255
  9033  0014FE  5929               	subwfb	(pf_mount@mclst+1)& (0+255),w,b
  9034  001500  A0D8               	btfss	status,0,c
  9035  001502  EF85  F00A         	goto	u10641
  9036  001506  EF87  F00A         	goto	u10640
  9037  00150A                     u10641:
  9038  00150A  EF89  F00A         	goto	l327
  9039  00150E                     u10640:
  9040  00150E                     
  9041                           ; BSR set to: 1
  9042                           ;pff.c: 803:   fmt = 3;
  9043  00150E  0E03               	movlw	3
  9044  001510  6F34               	movwf	pf_mount@fmt& (0+255),b
  9045  001512                     l327:
  9046                           
  9047                           ; BSR set to: 1
  9048                           ;pff.c: 804:  if (!fmt) return FR_NO_FILESYSTEM;
  9049  001512  5134               	movf	pf_mount@fmt& (0+255),w,b
  9050  001514  A4D8               	btfss	status,2,c
  9051  001516  EF8F  F00A         	goto	u10651
  9052  00151A  EF91  F00A         	goto	u10650
  9053  00151E                     u10651:
  9054  00151E  EF93  F00A         	goto	l8193
  9055  001522                     u10650:
  9056  001522  EF9D  F008         	goto	l8141
  9057  001526                     l8193:
  9058                           
  9059                           ; BSR set to: 1
  9060                           ;pff.c: 805:  fs->fs_type = fmt;
  9061  001526  C0AC  FFD9         	movff	pf_mount@fs,fsr2l
  9062  00152A  C0AD  FFDA         	movff	pf_mount@fs+1,fsr2h
  9063  00152E  C134  FFDF         	movff	pf_mount@fmt,indf2
  9064  001532                     
  9065                           ; BSR set to: 1
  9066                           ;pff.c: 808:   fs->dirbase = (DWORD)(((DWORD)*((BYTE*)(buf+(44 -13))+3)<<24)|((DWORD)*((
      +                          BYTE*)(buf+(44 -13))+2)<<16)|((WORD)*((BYTE*)(buf+(44 -13))+1)<<8)|*(BYTE*)(buf+(44 -13)
      +                          ));
  9067  001532  5120               	movf	(pf_mount@buf+32)& (0+255),w,b
  9068  001534  0100               	movlb	0	; () banked
  9069  001536  6FAF               	movwf	(??_pf_mount+1)& (0+255),b
  9070  001538  6BAE               	clrf	??_pf_mount& (0+255),b
  9071  00153A  C121  F0B0         	movff	pf_mount@buf+33,??_pf_mount+2
  9072  00153E  6BB1               	clrf	(??_pf_mount+3)& (0+255),b
  9073  001540  6BB2               	clrf	(??_pf_mount+4)& (0+255),b
  9074  001542  6BB3               	clrf	(??_pf_mount+5)& (0+255),b
  9075  001544  C0B1  F0B3         	movff	??_pf_mount+3,??_pf_mount+5
  9076  001548  C0B0  F0B2         	movff	??_pf_mount+2,??_pf_mount+4
  9077  00154C  6BB1               	clrf	(??_pf_mount+3)& (0+255),b
  9078  00154E  6BB0               	clrf	(??_pf_mount+2)& (0+255),b
  9079  001550  C122  F0B4         	movff	pf_mount@buf+34,??_pf_mount+6
  9080  001554  6BB5               	clrf	(??_pf_mount+7)& (0+255),b
  9081  001556  6BB6               	clrf	(??_pf_mount+8)& (0+255),b
  9082  001558  6BB7               	clrf	(??_pf_mount+9)& (0+255),b
  9083  00155A  C0B4  F0B7         	movff	??_pf_mount+6,??_pf_mount+9
  9084  00155E  6BB6               	clrf	(??_pf_mount+8)& (0+255),b
  9085  001560  6BB5               	clrf	(??_pf_mount+7)& (0+255),b
  9086  001562  6BB4               	clrf	(??_pf_mount+6)& (0+255),b
  9087  001564  51B0               	movf	(??_pf_mount+2)& (0+255),w,b
  9088  001566  11B4               	iorwf	(??_pf_mount+6)& (0+255),w,b
  9089  001568  6FB8               	movwf	(??_pf_mount+10)& (0+255),b
  9090  00156A  51B1               	movf	(??_pf_mount+3)& (0+255),w,b
  9091  00156C  11B5               	iorwf	(??_pf_mount+7)& (0+255),w,b
  9092  00156E  6FB9               	movwf	(??_pf_mount+11)& (0+255),b
  9093  001570  51B2               	movf	(??_pf_mount+4)& (0+255),w,b
  9094  001572  11B6               	iorwf	(??_pf_mount+8)& (0+255),w,b
  9095  001574  6FBA               	movwf	(??_pf_mount+12)& (0+255),b
  9096  001576  51B3               	movf	(??_pf_mount+5)& (0+255),w,b
  9097  001578  11B7               	iorwf	(??_pf_mount+9)& (0+255),w,b
  9098  00157A  6FBB               	movwf	(??_pf_mount+13)& (0+255),b
  9099  00157C  51AE               	movf	??_pf_mount& (0+255),w,b
  9100  00157E  11B8               	iorwf	(??_pf_mount+10)& (0+255),w,b
  9101  001580  6FBC               	movwf	(??_pf_mount+14)& (0+255),b
  9102  001582  51AF               	movf	(??_pf_mount+1)& (0+255),w,b
  9103  001584  11B9               	iorwf	(??_pf_mount+11)& (0+255),w,b
  9104  001586  6FBD               	movwf	(??_pf_mount+15)& (0+255),b
  9105  001588  0E00               	movlw	0
  9106  00158A  11BA               	iorwf	(??_pf_mount+12)& (0+255),w,b
  9107  00158C  6FBE               	movwf	(??_pf_mount+16)& (0+255),b
  9108  00158E  0E00               	movlw	0
  9109  001590  11BB               	iorwf	(??_pf_mount+13)& (0+255),w,b
  9110  001592  6FBF               	movwf	(??_pf_mount+17)& (0+255),b
  9111  001594  0101               	movlb	1	; () banked
  9112  001596  511F               	movf	(pf_mount@buf+31)& (0+255),w,b
  9113  001598  0100               	movlb	0	; () banked
  9114  00159A  11BC               	iorwf	(??_pf_mount+14)& (0+255),w,b
  9115  00159C  6FC0               	movwf	(??_pf_mount+18)& (0+255),b
  9116  00159E  51BD               	movf	(??_pf_mount+15)& (0+255),w,b
  9117  0015A0  6FC1               	movwf	(??_pf_mount+19)& (0+255),b
  9118  0015A2  51BE               	movf	(??_pf_mount+16)& (0+255),w,b
  9119  0015A4  6FC2               	movwf	(??_pf_mount+20)& (0+255),b
  9120  0015A6  51BF               	movf	(??_pf_mount+17)& (0+255),w,b
  9121  0015A8  6FC3               	movwf	(??_pf_mount+21)& (0+255),b
  9122  0015AA  EE20 F00E          	lfsr	2,14
  9123  0015AE  51AC               	movf	pf_mount@fs& (0+255),w,b
  9124  0015B0  26D9               	addwf	fsr2l,f,c
  9125  0015B2  51AD               	movf	(pf_mount@fs+1)& (0+255),w,b
  9126  0015B4  22DA               	addwfc	fsr2h,f,c
  9127  0015B6  C0C0  FFDE         	movff	??_pf_mount+18,postinc2
  9128  0015BA  C0C1  FFDE         	movff	??_pf_mount+19,postinc2
  9129  0015BE  C0C2  FFDE         	movff	??_pf_mount+20,postinc2
  9130  0015C2  C0C3  FFDE         	movff	??_pf_mount+21,postinc2
  9131  0015C6                     
  9132                           ; BSR set to: 0
  9133                           ;pff.c: 811:  fs->database = fs->fatbase + fsize + fs->n_rootdir / 16;
  9134  0015C6  EE20 F00A          	lfsr	2,10
  9135  0015CA  51AC               	movf	pf_mount@fs& (0+255),w,b
  9136  0015CC  26D9               	addwf	fsr2l,f,c
  9137  0015CE  51AD               	movf	(pf_mount@fs+1)& (0+255),w,b
  9138  0015D0  22DA               	addwfc	fsr2h,f,c
  9139  0015D2  CFDE F0AE          	movff	postinc2,??_pf_mount
  9140  0015D6  CFDE F0AF          	movff	postinc2,??_pf_mount+1
  9141  0015DA  CFDE F0B0          	movff	postinc2,??_pf_mount+2
  9142  0015DE  CFDE F0B1          	movff	postinc2,??_pf_mount+3
  9143  0015E2  EE20 F004          	lfsr	2,4
  9144  0015E6  51AC               	movf	pf_mount@fs& (0+255),w,b
  9145  0015E8  26D9               	addwf	fsr2l,f,c
  9146  0015EA  51AD               	movf	(pf_mount@fs+1)& (0+255),w,b
  9147  0015EC  22DA               	addwfc	fsr2h,f,c
  9148  0015EE  CFDE F0B2          	movff	postinc2,??_pf_mount+4
  9149  0015F2  CFDD F0B3          	movff	postdec2,??_pf_mount+5
  9150  0015F6  0E04               	movlw	4
  9151  0015F8  6FB4               	movwf	(??_pf_mount+6)& (0+255),b
  9152  0015FA                     u10665:
  9153  0015FA  90D8               	bcf	status,0,c
  9154  0015FC  33B3               	rrcf	(??_pf_mount+5)& (0+255),f,b
  9155  0015FE  33B2               	rrcf	(??_pf_mount+4)& (0+255),f,b
  9156  001600  2FB4               	decfsz	(??_pf_mount+6)& (0+255),f,b
  9157  001602  EFFD  F00A         	goto	u10665
  9158  001606  51B2               	movf	(??_pf_mount+4)& (0+255),w,b
  9159  001608  25AE               	addwf	??_pf_mount& (0+255),w,b
  9160  00160A  6FB5               	movwf	(??_pf_mount+7)& (0+255),b
  9161  00160C  51B3               	movf	(??_pf_mount+5)& (0+255),w,b
  9162  00160E  21AF               	addwfc	(??_pf_mount+1)& (0+255),w,b
  9163  001610  6FB6               	movwf	(??_pf_mount+8)& (0+255),b
  9164  001612  0E00               	movlw	0
  9165  001614  21B0               	addwfc	(??_pf_mount+2)& (0+255),w,b
  9166  001616  6FB7               	movwf	(??_pf_mount+9)& (0+255),b
  9167  001618  0E00               	movlw	0
  9168  00161A  21B1               	addwfc	(??_pf_mount+3)& (0+255),w,b
  9169  00161C  6FB8               	movwf	(??_pf_mount+10)& (0+255),b
  9170  00161E  0101               	movlb	1	; () banked
  9171  001620  5130               	movf	pf_mount@fsize& (0+255),w,b
  9172  001622  0100               	movlb	0	; () banked
  9173  001624  25B5               	addwf	(??_pf_mount+7)& (0+255),w,b
  9174  001626  6FB9               	movwf	(??_pf_mount+11)& (0+255),b
  9175  001628  0101               	movlb	1	; () banked
  9176  00162A  5131               	movf	(pf_mount@fsize+1)& (0+255),w,b
  9177  00162C  0100               	movlb	0	; () banked
  9178  00162E  21B6               	addwfc	(??_pf_mount+8)& (0+255),w,b
  9179  001630  6FBA               	movwf	(??_pf_mount+12)& (0+255),b
  9180  001632  0101               	movlb	1	; () banked
  9181  001634  5132               	movf	(pf_mount@fsize+2)& (0+255),w,b
  9182  001636  0100               	movlb	0	; () banked
  9183  001638  21B7               	addwfc	(??_pf_mount+9)& (0+255),w,b
  9184  00163A  6FBB               	movwf	(??_pf_mount+13)& (0+255),b
  9185  00163C  0101               	movlb	1	; () banked
  9186  00163E  5133               	movf	(pf_mount@fsize+3)& (0+255),w,b
  9187  001640  0100               	movlb	0	; () banked
  9188  001642  21B8               	addwfc	(??_pf_mount+10)& (0+255),w,b
  9189  001644  6FBC               	movwf	(??_pf_mount+14)& (0+255),b
  9190  001646  EE20 F012          	lfsr	2,18
  9191  00164A  51AC               	movf	pf_mount@fs& (0+255),w,b
  9192  00164C  26D9               	addwf	fsr2l,f,c
  9193  00164E  51AD               	movf	(pf_mount@fs+1)& (0+255),w,b
  9194  001650  22DA               	addwfc	fsr2h,f,c
  9195  001652  C0B9  FFDE         	movff	??_pf_mount+11,postinc2
  9196  001656  C0BA  FFDE         	movff	??_pf_mount+12,postinc2
  9197  00165A  C0BB  FFDE         	movff	??_pf_mount+13,postinc2
  9198  00165E  C0BC  FFDE         	movff	??_pf_mount+14,postinc2
  9199                           
  9200                           ;pff.c: 813:  fs->flag = 0;
  9201  001662  EE20 F001          	lfsr	2,1
  9202  001666  51AC               	movf	pf_mount@fs& (0+255),w,b
  9203  001668  26D9               	addwf	fsr2l,f,c
  9204  00166A  51AD               	movf	(pf_mount@fs+1)& (0+255),w,b
  9205  00166C  22DA               	addwfc	fsr2h,f,c
  9206  00166E  0E00               	movlw	0
  9207  001670  6EDF               	movwf	indf2,c
  9208  001672                     
  9209                           ; BSR set to: 0
  9210                           ;pff.c: 814:  FatFs = fs;
  9211  001672  C0AC  F0F1         	movff	pf_mount@fs,_FatFs
  9212  001676  C0AD  F0F2         	movff	pf_mount@fs+1,_FatFs+1
  9213  00167A                     
  9214                           ; BSR set to: 0
  9215                           ;pff.c: 816:  return FR_OK;
  9216  00167A  0E00               	movlw	0
  9217  00167C                     l315:
  9218  00167C  0012               	return		;funcret
  9219  00167E                     __end_of_pf_mount:
  9220                           	callstack 0
  9221                           
  9222 ;; *************** function _disk_initialize *****************
  9223 ;; Defined at:
  9224 ;;		line 172 in file "pic_mmcp.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;		None
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;  ocr             4   30[COMRAM] unsigned char [4]
  9229 ;;  tmr             2   38[COMRAM] unsigned int 
  9230 ;;  n               1   40[COMRAM] unsigned char 
  9231 ;;  ty              1   37[COMRAM] unsigned char 
  9232 ;;  cmd             1   36[COMRAM] unsigned char 
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  1    wreg      unsigned char 
  9235 ;; Registers used:
  9236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9242 ;;      Params:         0       0       0       0       0       0       0
  9243 ;;      Locals:        11       0       0       0       0       0       0
  9244 ;;      Temps:          1       0       0       0       0       0       0
  9245 ;;      Totals:        12       0       0       0       0       0       0
  9246 ;;Total ram usage:       12 bytes
  9247 ;; Hardware stack levels used: 1
  9248 ;; Hardware stack levels required when called: 5
  9249 ;; This function calls:
  9250 ;;		_disk_writep
  9251 ;;		_dly_100us
  9252 ;;		_init_spi
  9253 ;;		_rcv_spi
  9254 ;;		_send_cmd
  9255 ;; This function is called by:
  9256 ;;		_main
  9257 ;;		_pf_mount
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           	psect	text27
  9262  0024C2                     __ptext27:
  9263                           	callstack 0
  9264  0024C2                     _disk_initialize:
  9265                           	callstack 24
  9266  0024C2                     
  9267                           ;pic_mmcp.c: 174:  BYTE n, cmd, ty, ocr[4];;pic_mmcp.c: 175:  UINT tmr;;pic_mmcp.c: 178:
      +                            if (CardType && !PORTAbits.RA5)
  9268  0024C2  5079               	movf	_CardType^0,w,c
  9269  0024C4  B4D8               	btfsc	status,2,c
  9270  0024C6  EF67  F012         	goto	u9791
  9271  0024CA  EF69  F012         	goto	u9790
  9272  0024CE                     u9791:
  9273  0024CE  EF7E  F012         	goto	l7671
  9274  0024D2                     u9790:
  9275  0024D2  BA80               	btfsc	128,5,c	;volatile
  9276  0024D4  EF6E  F012         	goto	u9801
  9277  0024D8  EF70  F012         	goto	u9800
  9278  0024DC                     u9801:
  9279  0024DC  EF7E  F012         	goto	l7671
  9280  0024E0                     u9800:
  9281  0024E0                     
  9282                           ;pic_mmcp.c: 179:         disk_writep(0, 0);
  9283  0024E0  0E00               	movlw	0
  9284  0024E2  6E15               	movwf	disk_writep@buff^0,c
  9285  0024E4  0E00               	movlw	0
  9286  0024E6  6E16               	movwf	(disk_writep@buff+1)^0,c
  9287  0024E8  0E00               	movlw	0
  9288  0024EA  6E17               	movwf	disk_writep@sc^0,c
  9289  0024EC  0E00               	movlw	0
  9290  0024EE  6E18               	movwf	(disk_writep@sc+1)^0,c
  9291  0024F0  0E00               	movlw	0
  9292  0024F2  6E19               	movwf	(disk_writep@sc+2)^0,c
  9293  0024F4  0E00               	movlw	0
  9294  0024F6  6E1A               	movwf	(disk_writep@sc+3)^0,c
  9295  0024F8  EC6D  F01D         	call	_disk_writep	;wreg free
  9296  0024FC                     l7671:
  9297                           
  9298                           ;pic_mmcp.c: 182:  init_spi();
  9299  0024FC  ECD7  F02C         	call	_init_spi	;wreg free
  9300  002500                     
  9301                           ;pic_mmcp.c: 183:  LATAbits.LA5 = 1;
  9302  002500  8A89               	bsf	137,5,c	;volatile
  9303  002502                     
  9304                           ;pic_mmcp.c: 184:  for (n = 10; n; n--)
  9305  002502  0E0A               	movlw	10
  9306  002504  6E29               	movwf	disk_initialize@n^0,c
  9307  002506  EF88  F012         	goto	l7681
  9308  00250A                     l7677:
  9309                           
  9310                           ;pic_mmcp.c: 185:         rcv_spi();
  9311  00250A  ECB9  F02C         	call	_rcv_spi	;wreg free
  9312  00250E  0629               	decf	disk_initialize@n^0,f,c
  9313  002510                     l7681:
  9314  002510  5029               	movf	disk_initialize@n^0,w,c
  9315  002512  A4D8               	btfss	status,2,c
  9316  002514  EF8E  F012         	goto	u9811
  9317  002518  EF90  F012         	goto	u9810
  9318  00251C                     u9811:
  9319  00251C  EF85  F012         	goto	l7677
  9320  002520                     u9810:
  9321  002520                     
  9322                           ;pic_mmcp.c: 187:  ty = 0;
  9323  002520  0E00               	movlw	0
  9324  002522  6E26               	movwf	disk_initialize@ty^0,c
  9325  002524                     
  9326                           ;pic_mmcp.c: 188:  if (send_cmd((0x40+0), 0) == 1) {
  9327  002524  0E00               	movlw	0
  9328  002526  6E0E               	movwf	send_cmd@arg^0,c
  9329  002528  0E00               	movlw	0
  9330  00252A  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9331  00252C  0E00               	movlw	0
  9332  00252E  6E10               	movwf	(send_cmd@arg+2)^0,c
  9333  002530  0E00               	movlw	0
  9334  002532  6E11               	movwf	(send_cmd@arg+3)^0,c
  9335  002534  0E40               	movlw	64
  9336  002536  EC79  F027         	call	_send_cmd
  9337  00253A  06E8               	decf	wreg,f,c
  9338  00253C  A4D8               	btfss	status,2,c
  9339  00253E  EFA3  F012         	goto	u9821
  9340  002542  EFA5  F012         	goto	u9820
  9341  002546                     u9821:
  9342  002546  EFAE  F013         	goto	l7757
  9343  00254A                     u9820:
  9344  00254A                     
  9345                           ;pic_mmcp.c: 189:   if (send_cmd((0x40+8), 0x1AA) == 1) {
  9346  00254A  0EAA               	movlw	170
  9347  00254C  6E0E               	movwf	send_cmd@arg^0,c
  9348  00254E  0E01               	movlw	1
  9349  002550  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9350  002552  0E00               	movlw	0
  9351  002554  6E10               	movwf	(send_cmd@arg+2)^0,c
  9352  002556  0E00               	movlw	0
  9353  002558  6E11               	movwf	(send_cmd@arg+3)^0,c
  9354  00255A  0E48               	movlw	72
  9355  00255C  EC79  F027         	call	_send_cmd
  9356  002560  06E8               	decf	wreg,f,c
  9357  002562  A4D8               	btfss	status,2,c
  9358  002564  EFB6  F012         	goto	u9831
  9359  002568  EFB8  F012         	goto	u9830
  9360  00256C                     u9831:
  9361  00256C  EF49  F013         	goto	l7737
  9362  002570                     u9830:
  9363  002570                     
  9364                           ;pic_mmcp.c: 190:    for (n = 0; n < 4; n++)
  9365  002570  0E00               	movlw	0
  9366  002572  6E29               	movwf	disk_initialize@n^0,c
  9367  002574                     l7695:
  9368                           
  9369                           ;pic_mmcp.c: 191:                 ocr[n] = rcv_spi();
  9370  002574  0E1F               	movlw	low disk_initialize@ocr
  9371  002576  2429               	addwf	disk_initialize@n^0,w,c
  9372  002578  6ED9               	movwf	fsr2l,c
  9373  00257A  6ADA               	clrf	fsr2h,c
  9374  00257C  0E00               	movlw	high disk_initialize@ocr
  9375  00257E  22DA               	addwfc	fsr2h,f,c
  9376  002580  ECB9  F02C         	call	_rcv_spi	;wreg free
  9377  002584  6EDF               	movwf	indf2,c
  9378  002586  2A29               	incf	disk_initialize@n^0,f,c
  9379  002588  0E03               	movlw	3
  9380  00258A  6429               	cpfsgt	disk_initialize@n^0,c
  9381  00258C  EFCA  F012         	goto	u9841
  9382  002590  EFCC  F012         	goto	u9840
  9383  002594                     u9841:
  9384  002594  EFBA  F012         	goto	l7695
  9385  002598                     u9840:
  9386  002598                     
  9387                           ;pic_mmcp.c: 192:    if (ocr[2] == 0x01 && ocr[3] == 0xAA) {
  9388  002598  0421               	decf	(disk_initialize@ocr+2)^0,w,c
  9389  00259A  A4D8               	btfss	status,2,c
  9390  00259C  EFD2  F012         	goto	u9851
  9391  0025A0  EFD4  F012         	goto	u9850
  9392  0025A4                     u9851:
  9393  0025A4  EFAE  F013         	goto	l7757
  9394  0025A8                     u9850:
  9395  0025A8  0EAA               	movlw	170
  9396  0025AA  1822               	xorwf	(disk_initialize@ocr+3)^0,w,c
  9397  0025AC  A4D8               	btfss	status,2,c
  9398  0025AE  EFDB  F012         	goto	u9861
  9399  0025B2  EFDD  F012         	goto	u9860
  9400  0025B6                     u9861:
  9401  0025B6  EFAE  F013         	goto	l7757
  9402  0025BA                     u9860:
  9403  0025BA                     
  9404                           ;pic_mmcp.c: 193:     for (tmr = 10000; tmr && send_cmd((0xC0+41), 1UL << 30); tmr--)
  9405  0025BA  0E27               	movlw	39
  9406  0025BC  6E28               	movwf	(disk_initialize@tmr+1)^0,c
  9407  0025BE  0E10               	movlw	16
  9408  0025C0  6E27               	movwf	disk_initialize@tmr^0,c
  9409  0025C2  EFE8  F012         	goto	l7711
  9410  0025C6                     l7707:
  9411                           
  9412                           ;pic_mmcp.c: 194:                     dly_100us();
  9413  0025C6  ECDC  F02C         	call	_dly_100us	;wreg free
  9414  0025CA  0627               	decf	disk_initialize@tmr^0,f,c
  9415  0025CC  A0D8               	btfss	status,0,c
  9416  0025CE  0628               	decf	(disk_initialize@tmr+1)^0,f,c
  9417  0025D0                     l7711:
  9418  0025D0  5027               	movf	disk_initialize@tmr^0,w,c
  9419  0025D2  1028               	iorwf	(disk_initialize@tmr+1)^0,w,c
  9420  0025D4  B4D8               	btfsc	status,2,c
  9421  0025D6  EFEF  F012         	goto	u9871
  9422  0025DA  EFF1  F012         	goto	u9870
  9423  0025DE                     u9871:
  9424  0025DE  EF04  F013         	goto	l7715
  9425  0025E2                     u9870:
  9426  0025E2  0E00               	movlw	0
  9427  0025E4  6E0E               	movwf	send_cmd@arg^0,c
  9428  0025E6  0E00               	movlw	0
  9429  0025E8  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9430  0025EA  0E00               	movlw	0
  9431  0025EC  6E10               	movwf	(send_cmd@arg+2)^0,c
  9432  0025EE  0E40               	movlw	64
  9433  0025F0  6E11               	movwf	(send_cmd@arg+3)^0,c
  9434  0025F2  0EE9               	movlw	233
  9435  0025F4  EC79  F027         	call	_send_cmd
  9436  0025F8  0900               	iorlw	0
  9437  0025FA  A4D8               	btfss	status,2,c
  9438  0025FC  EF02  F013         	goto	u9881
  9439  002600  EF04  F013         	goto	u9880
  9440  002604                     u9881:
  9441  002604  EFE3  F012         	goto	l7707
  9442  002608                     u9880:
  9443  002608                     l7715:
  9444                           
  9445                           ;pic_mmcp.c: 195:     if (tmr && send_cmd((0x40+58), 0) == 0) {
  9446  002608  5027               	movf	disk_initialize@tmr^0,w,c
  9447  00260A  1028               	iorwf	(disk_initialize@tmr+1)^0,w,c
  9448  00260C  B4D8               	btfsc	status,2,c
  9449  00260E  EF0B  F013         	goto	u9891
  9450  002612  EF0D  F013         	goto	u9890
  9451  002616                     u9891:
  9452  002616  EFAE  F013         	goto	l628
  9453  00261A                     u9890:
  9454  00261A  0E00               	movlw	0
  9455  00261C  6E0E               	movwf	send_cmd@arg^0,c
  9456  00261E  0E00               	movlw	0
  9457  002620  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9458  002622  0E00               	movlw	0
  9459  002624  6E10               	movwf	(send_cmd@arg+2)^0,c
  9460  002626  0E00               	movlw	0
  9461  002628  6E11               	movwf	(send_cmd@arg+3)^0,c
  9462  00262A  0E7A               	movlw	122
  9463  00262C  EC79  F027         	call	_send_cmd
  9464  002630  0900               	iorlw	0
  9465  002632  A4D8               	btfss	status,2,c
  9466  002634  EF1E  F013         	goto	u9901
  9467  002638  EF20  F013         	goto	u9900
  9468  00263C                     u9901:
  9469  00263C  EFAE  F013         	goto	l628
  9470  002640                     u9900:
  9471  002640                     
  9472                           ;pic_mmcp.c: 196:      for (n = 0; n < 4; n++)
  9473  002640  0E00               	movlw	0
  9474  002642  6E29               	movwf	disk_initialize@n^0,c
  9475  002644                     l7725:
  9476                           
  9477                           ;pic_mmcp.c: 197:                         ocr[n] = rcv_spi();
  9478  002644  0E1F               	movlw	low disk_initialize@ocr
  9479  002646  2429               	addwf	disk_initialize@n^0,w,c
  9480  002648  6ED9               	movwf	fsr2l,c
  9481  00264A  6ADA               	clrf	fsr2h,c
  9482  00264C  0E00               	movlw	high disk_initialize@ocr
  9483  00264E  22DA               	addwfc	fsr2h,f,c
  9484  002650  ECB9  F02C         	call	_rcv_spi	;wreg free
  9485  002654  6EDF               	movwf	indf2,c
  9486  002656  2A29               	incf	disk_initialize@n^0,f,c
  9487  002658  0E03               	movlw	3
  9488  00265A  6429               	cpfsgt	disk_initialize@n^0,c
  9489  00265C  EF32  F013         	goto	u9911
  9490  002660  EF34  F013         	goto	u9910
  9491  002664                     u9911:
  9492  002664  EF22  F013         	goto	l7725
  9493  002668                     u9910:
  9494  002668                     
  9495                           ;pic_mmcp.c: 198:      ty = (ocr[0] & 0x40) ? 0x04 | 0x08 : 0x04;
  9496  002668  BC1F               	btfsc	disk_initialize@ocr^0,6,c
  9497  00266A  EF39  F013         	goto	u9921
  9498  00266E  EF3B  F013         	goto	u9920
  9499  002672                     u9921:
  9500  002672  EF41  F013         	goto	l7733
  9501  002676                     u9920:
  9502  002676  0E00               	movlw	0
  9503  002678  6E24               	movwf	(_disk_initialize$1320+1)^0,c
  9504  00267A  0E04               	movlw	4
  9505  00267C  6E23               	movwf	_disk_initialize$1320^0,c
  9506  00267E  EF45  F013         	goto	l7735
  9507  002682                     l7733:
  9508  002682  0E00               	movlw	0
  9509  002684  6E24               	movwf	(_disk_initialize$1320+1)^0,c
  9510  002686  0E0C               	movlw	12
  9511  002688  6E23               	movwf	_disk_initialize$1320^0,c
  9512  00268A                     l7735:
  9513  00268A  C023  F026         	movff	_disk_initialize$1320,disk_initialize@ty
  9514  00268E  EFAE  F013         	goto	l7757
  9515  002692                     l7737:
  9516                           
  9517                           ;pic_mmcp.c: 202:    if (send_cmd((0xC0+41), 0) <= 1) {
  9518  002692  0E00               	movlw	0
  9519  002694  6E0E               	movwf	send_cmd@arg^0,c
  9520  002696  0E00               	movlw	0
  9521  002698  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9522  00269A  0E00               	movlw	0
  9523  00269C  6E10               	movwf	(send_cmd@arg+2)^0,c
  9524  00269E  0E00               	movlw	0
  9525  0026A0  6E11               	movwf	(send_cmd@arg+3)^0,c
  9526  0026A2  0EE9               	movlw	233
  9527  0026A4  EC79  F027         	call	_send_cmd
  9528  0026A8  6E1E               	movwf	??_disk_initialize^0,c
  9529  0026AA  0E02               	movlw	2
  9530  0026AC  601E               	cpfslt	??_disk_initialize^0,c
  9531  0026AE  EF5B  F013         	goto	u9931
  9532  0026B2  EF5D  F013         	goto	u9930
  9533  0026B6                     u9931:
  9534  0026B6  EF63  F013         	goto	l7741
  9535  0026BA                     u9930:
  9536  0026BA                     
  9537                           ;pic_mmcp.c: 203:     ty = 0x02; cmd = (0xC0+41);
  9538  0026BA  0E02               	movlw	2
  9539  0026BC  6E26               	movwf	disk_initialize@ty^0,c
  9540  0026BE  0EE9               	movlw	233
  9541  0026C0  6E25               	movwf	disk_initialize@cmd^0,c
  9542                           
  9543                           ;pic_mmcp.c: 204:    } else {
  9544  0026C2  EF67  F013         	goto	l630
  9545  0026C6                     l7741:
  9546                           
  9547                           ;pic_mmcp.c: 205:     ty = 0x01; cmd = (0x40+1);
  9548  0026C6  0E01               	movlw	1
  9549  0026C8  6E26               	movwf	disk_initialize@ty^0,c
  9550  0026CA  0E41               	movlw	65
  9551  0026CC  6E25               	movwf	disk_initialize@cmd^0,c
  9552  0026CE                     l630:
  9553                           
  9554                           ;pic_mmcp.c: 207:    for (tmr = 10000; tmr && send_cmd(cmd, 0); tmr--)
  9555  0026CE  0E27               	movlw	39
  9556  0026D0  6E28               	movwf	(disk_initialize@tmr+1)^0,c
  9557  0026D2  0E10               	movlw	16
  9558  0026D4  6E27               	movwf	disk_initialize@tmr^0,c
  9559  0026D6  EF72  F013         	goto	l7747
  9560  0026DA                     l7743:
  9561                           
  9562                           ;pic_mmcp.c: 208:                 dly_100us();
  9563  0026DA  ECDC  F02C         	call	_dly_100us	;wreg free
  9564  0026DE  0627               	decf	disk_initialize@tmr^0,f,c
  9565  0026E0  A0D8               	btfss	status,0,c
  9566  0026E2  0628               	decf	(disk_initialize@tmr+1)^0,f,c
  9567  0026E4                     l7747:
  9568  0026E4  5027               	movf	disk_initialize@tmr^0,w,c
  9569  0026E6  1028               	iorwf	(disk_initialize@tmr+1)^0,w,c
  9570  0026E8  B4D8               	btfsc	status,2,c
  9571  0026EA  EF79  F013         	goto	u9941
  9572  0026EE  EF7B  F013         	goto	u9940
  9573  0026F2                     u9941:
  9574  0026F2  EF8E  F013         	goto	l7751
  9575  0026F6                     u9940:
  9576  0026F6  0E00               	movlw	0
  9577  0026F8  6E0E               	movwf	send_cmd@arg^0,c
  9578  0026FA  0E00               	movlw	0
  9579  0026FC  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9580  0026FE  0E00               	movlw	0
  9581  002700  6E10               	movwf	(send_cmd@arg+2)^0,c
  9582  002702  0E00               	movlw	0
  9583  002704  6E11               	movwf	(send_cmd@arg+3)^0,c
  9584  002706  5025               	movf	disk_initialize@cmd^0,w,c
  9585  002708  EC79  F027         	call	_send_cmd
  9586  00270C  0900               	iorlw	0
  9587  00270E  A4D8               	btfss	status,2,c
  9588  002710  EF8C  F013         	goto	u9951
  9589  002714  EF8E  F013         	goto	u9950
  9590  002718                     u9951:
  9591  002718  EF6D  F013         	goto	l7743
  9592  00271C                     u9950:
  9593  00271C                     l7751:
  9594                           
  9595                           ;pic_mmcp.c: 209:    if (!tmr || send_cmd((0x40+16), 512) != 0)
  9596  00271C  5027               	movf	disk_initialize@tmr^0,w,c
  9597  00271E  1028               	iorwf	(disk_initialize@tmr+1)^0,w,c
  9598  002720  B4D8               	btfsc	status,2,c
  9599  002722  EF95  F013         	goto	u9961
  9600  002726  EF97  F013         	goto	u9960
  9601  00272A                     u9961:
  9602  00272A  EFAA  F013         	goto	l7755
  9603  00272E                     u9960:
  9604  00272E  0E00               	movlw	0
  9605  002730  6E0E               	movwf	send_cmd@arg^0,c
  9606  002732  0E02               	movlw	2
  9607  002734  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9608  002736  0E00               	movlw	0
  9609  002738  6E10               	movwf	(send_cmd@arg+2)^0,c
  9610  00273A  0E00               	movlw	0
  9611  00273C  6E11               	movwf	(send_cmd@arg+3)^0,c
  9612  00273E  0E50               	movlw	80
  9613  002740  EC79  F027         	call	_send_cmd
  9614  002744  0900               	iorlw	0
  9615  002746  B4D8               	btfsc	status,2,c
  9616  002748  EFA8  F013         	goto	u9971
  9617  00274C  EFAA  F013         	goto	u9970
  9618  002750                     u9971:
  9619  002750  EFAE  F013         	goto	l7757
  9620  002754                     u9970:
  9621  002754                     l7755:
  9622                           
  9623                           ;pic_mmcp.c: 210:     ty = 0;
  9624  002754  0E00               	movlw	0
  9625  002756  6E26               	movwf	disk_initialize@ty^0,c
  9626  002758  EFAE  F013         	goto	l7757
  9627  00275C                     l628:
  9628  00275C                     l7757:
  9629                           
  9630                           ;pic_mmcp.c: 213:  CardType = ty;
  9631  00275C  C026  F079         	movff	disk_initialize@ty,_CardType
  9632  002760                     
  9633                           ;pic_mmcp.c: 214:  LATAbits.LA5 = 1;
  9634  002760  8A89               	bsf	137,5,c	;volatile
  9635  002762                     
  9636                           ;pic_mmcp.c: 215:  rcv_spi();
  9637  002762  ECB9  F02C         	call	_rcv_spi	;wreg free
  9638  002766                     
  9639                           ;pic_mmcp.c: 217:  return ty ? 0 : 0x01;
  9640  002766  5026               	movf	disk_initialize@ty^0,w,c
  9641  002768  B4D8               	btfsc	status,2,c
  9642  00276A  EFB9  F013         	goto	u9981
  9643  00276E  EFBC  F013         	goto	u9980
  9644  002772                     u9981:
  9645  002772  0E01               	movlw	1
  9646  002774  EFBD  F013         	goto	u9990
  9647  002778                     u9980:
  9648  002778  0E00               	movlw	0
  9649  00277A                     u9990:
  9650  00277A  0012               	return		;funcret
  9651  00277C                     __end_of_disk_initialize:
  9652                           	callstack 0
  9653                           
  9654 ;; *************** function _init_spi *****************
  9655 ;; Defined at:
  9656 ;;		line 22 in file "pic_mmcp.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;		None
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;		None
  9661 ;; Return value:  Size  Location     Type
  9662 ;;                  1    wreg      void 
  9663 ;; Registers used:
  9664 ;;		wreg, status,2
  9665 ;; Tracked objects:
  9666 ;;		On entry : 0/0
  9667 ;;		On exit  : 0/0
  9668 ;;		Unchanged: 0/0
  9669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9670 ;;      Params:         0       0       0       0       0       0       0
  9671 ;;      Locals:         0       0       0       0       0       0       0
  9672 ;;      Temps:          0       0       0       0       0       0       0
  9673 ;;      Totals:         0       0       0       0       0       0       0
  9674 ;;Total ram usage:        0 bytes
  9675 ;; Hardware stack levels used: 1
  9676 ;; Hardware stack levels required when called: 1
  9677 ;; This function calls:
  9678 ;;		Nothing
  9679 ;; This function is called by:
  9680 ;;		_disk_initialize
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684                           	psect	text28
  9685  0059AE                     __ptext28:
  9686                           	callstack 0
  9687  0059AE                     _init_spi:
  9688                           	callstack 27
  9689  0059AE                     
  9690                           ;pic_mmcp.c: 24:     SSPCON1 = 0x31;
  9691  0059AE  0E31               	movlw	49
  9692  0059B0  6EC6               	movwf	198,c	;volatile
  9693                           
  9694                           ;pic_mmcp.c: 32:     SSPSTAT = 0x80;
  9695  0059B2  0E80               	movlw	128
  9696  0059B4  6EC7               	movwf	199,c	;volatile
  9697  0059B6  0012               	return		;funcret
  9698  0059B8                     __end_of_init_spi:
  9699                           	callstack 0
  9700                           
  9701 ;; *************** function _disk_writep *****************
  9702 ;; Defined at:
  9703 ;;		line 283 in file "pic_mmcp.c"
  9704 ;; Parameters:    Size  Location     Type
  9705 ;;  buff            2   20[COMRAM] PTR const unsigned char 
  9706 ;;		 -> NULL(0), 
  9707 ;;  sc              4   22[COMRAM] unsigned long 
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;  bc              2   27[COMRAM] unsigned int 
  9710 ;;  res             1   26[COMRAM] enum E74
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      enum E2630
  9713 ;; Registers used:
  9714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9720 ;;      Params:         6       0       0       0       0       0       0
  9721 ;;      Locals:         3       0       0       0       0       0       0
  9722 ;;      Temps:          0       0       0       0       0       0       0
  9723 ;;      Totals:         9       0       0       0       0       0       0
  9724 ;;Total ram usage:        9 bytes
  9725 ;; Hardware stack levels used: 1
  9726 ;; Hardware stack levels required when called: 4
  9727 ;; This function calls:
  9728 ;;		_dly_100us
  9729 ;;		_rcv_spi
  9730 ;;		_send_cmd
  9731 ;;		_xmit_spi
  9732 ;; This function is called by:
  9733 ;;		_disk_initialize
  9734 ;;		_pf_write
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text29
  9739  003ADA                     __ptext29:
  9740                           	callstack 0
  9741  003ADA                     _disk_writep:
  9742                           	callstack 24
  9743  003ADA                     
  9744                           ;pic_mmcp.c: 284:  const BYTE *buff,;pic_mmcp.c: 285:  DWORD sc;pic_mmcp.c: 287: {;pic_m
      +                          mcp.c: 288:  DRESULT res;;pic_mmcp.c: 289:  UINT bc;;pic_mmcp.c: 290:  static WORD wc;;p
      +                          ic_mmcp.c: 292:  res = RES_ERROR;
  9745  003ADA  0E01               	movlw	1
  9746  003ADC  6E1B               	movwf	disk_writep@res^0,c
  9747  003ADE                     
  9748                           ;pic_mmcp.c: 294:  if (buff) {
  9749  003ADE  5015               	movf	disk_writep@buff^0,w,c
  9750  003AE0  1016               	iorwf	(disk_writep@buff+1)^0,w,c
  9751  003AE2  B4D8               	btfsc	status,2,c
  9752  003AE4  EF76  F01D         	goto	u9671
  9753  003AE8  EF78  F01D         	goto	u9670
  9754  003AEC                     u9671:
  9755  003AEC  EFA5  F01D         	goto	l7619
  9756  003AF0                     u9670:
  9757  003AF0                     
  9758                           ;pic_mmcp.c: 295:   bc = (WORD)sc;
  9759  003AF0  C017  F01C         	movff	disk_writep@sc,disk_writep@bc
  9760  003AF4  C018  F01D         	movff	disk_writep@sc+1,disk_writep@bc+1
  9761                           
  9762                           ;pic_mmcp.c: 296:   while (bc && wc) {
  9763  003AF8  EF8E  F01D         	goto	l7613
  9764  003AFC                     l7605:
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;pic_mmcp.c: 297:    xmit_spi(*buff++);
  9768  003AFC  C015  FFD9         	movff	disk_writep@buff,fsr2l
  9769  003B00  C016  FFDA         	movff	disk_writep@buff+1,fsr2h
  9770  003B04  50DF               	movf	indf2,w,c
  9771  003B06  EC94  F02C         	call	_xmit_spi
  9772  003B0A  4A15               	infsnz	disk_writep@buff^0,f,c
  9773  003B0C  2A16               	incf	(disk_writep@buff+1)^0,f,c
  9774  003B0E                     
  9775                           ;pic_mmcp.c: 298:    wc--; bc--;
  9776  003B0E  0100               	movlb	0	; () banked
  9777  003B10  07EF               	decf	disk_writep@wc& (0+255),f,b
  9778  003B12  A0D8               	btfss	status,0,c
  9779  003B14  07F0               	decf	(disk_writep@wc+1)& (0+255),f,b
  9780  003B16                     
  9781                           ; BSR set to: 0
  9782  003B16  061C               	decf	disk_writep@bc^0,f,c
  9783  003B18  A0D8               	btfss	status,0,c
  9784  003B1A  061D               	decf	(disk_writep@bc+1)^0,f,c
  9785  003B1C                     l7613:
  9786                           
  9787                           ;pic_mmcp.c: 296:   while (bc && wc) {
  9788  003B1C  501C               	movf	disk_writep@bc^0,w,c
  9789  003B1E  101D               	iorwf	(disk_writep@bc+1)^0,w,c
  9790  003B20  B4D8               	btfsc	status,2,c
  9791  003B22  EF95  F01D         	goto	u9681
  9792  003B26  EF97  F01D         	goto	u9680
  9793  003B2A                     u9681:
  9794  003B2A  EFA1  F01D         	goto	l7617
  9795  003B2E                     u9680:
  9796  003B2E  0100               	movlb	0	; () banked
  9797  003B30  51EF               	movf	disk_writep@wc& (0+255),w,b
  9798  003B32  11F0               	iorwf	(disk_writep@wc+1)& (0+255),w,b
  9799  003B34  A4D8               	btfss	status,2,c
  9800  003B36  EF9F  F01D         	goto	u9691
  9801  003B3A  EFA1  F01D         	goto	u9690
  9802  003B3E                     u9691:
  9803  003B3E  EF7E  F01D         	goto	l7605
  9804  003B42                     u9690:
  9805  003B42                     l7617:
  9806                           
  9807                           ;pic_mmcp.c: 300:   res = RES_OK;
  9808  003B42  0E00               	movlw	0
  9809  003B44  6E1B               	movwf	disk_writep@res^0,c
  9810                           
  9811                           ;pic_mmcp.c: 301:  } else {
  9812  003B46  EF30  F01E         	goto	l7659
  9813  003B4A                     l7619:
  9814                           
  9815                           ;pic_mmcp.c: 302:   if (sc) {
  9816  003B4A  5017               	movf	disk_writep@sc^0,w,c
  9817  003B4C  1018               	iorwf	(disk_writep@sc+1)^0,w,c
  9818  003B4E  1019               	iorwf	(disk_writep@sc+2)^0,w,c
  9819  003B50  101A               	iorwf	(disk_writep@sc+3)^0,w,c
  9820  003B52  B4D8               	btfsc	status,2,c
  9821  003B54  EFAE  F01D         	goto	u9701
  9822  003B58  EFB0  F01D         	goto	u9700
  9823  003B5C                     u9701:
  9824  003B5C  EFE0  F01D         	goto	l7633
  9825  003B60                     u9700:
  9826  003B60                     
  9827                           ;pic_mmcp.c: 303:    if (!(CardType & 0x08)) sc *= 512;
  9828  003B60  B679               	btfsc	_CardType^0,3,c
  9829  003B62  EFB5  F01D         	goto	u9711
  9830  003B66  EFB7  F01D         	goto	u9710
  9831  003B6A                     u9711:
  9832  003B6A  EFC0  F01D         	goto	l7625
  9833  003B6E                     u9710:
  9834  003B6E  0E09               	movlw	9
  9835  003B70                     u9725:
  9836  003B70  90D8               	bcf	status,0,c
  9837  003B72  3617               	rlcf	disk_writep@sc^0,f,c
  9838  003B74  3618               	rlcf	(disk_writep@sc+1)^0,f,c
  9839  003B76  3619               	rlcf	(disk_writep@sc+2)^0,f,c
  9840  003B78  361A               	rlcf	(disk_writep@sc+3)^0,f,c
  9841  003B7A  2EE8               	decfsz	wreg,f,c
  9842  003B7C  EFB8  F01D         	goto	u9725
  9843  003B80                     l7625:
  9844                           
  9845                           ;pic_mmcp.c: 304:    if (send_cmd((0x40+24), sc) == 0) {
  9846  003B80  C017  F00E         	movff	disk_writep@sc,send_cmd@arg
  9847  003B84  C018  F00F         	movff	disk_writep@sc+1,send_cmd@arg+1
  9848  003B88  C019  F010         	movff	disk_writep@sc+2,send_cmd@arg+2
  9849  003B8C  C01A  F011         	movff	disk_writep@sc+3,send_cmd@arg+3
  9850  003B90  0E58               	movlw	88
  9851  003B92  EC79  F027         	call	_send_cmd
  9852  003B96  0900               	iorlw	0
  9853  003B98  A4D8               	btfss	status,2,c
  9854  003B9A  EFD1  F01D         	goto	u9731
  9855  003B9E  EFD3  F01D         	goto	u9730
  9856  003BA2                     u9731:
  9857  003BA2  EF30  F01E         	goto	l7659
  9858  003BA6                     u9730:
  9859  003BA6                     
  9860                           ;pic_mmcp.c: 305:     xmit_spi(0xFF); xmit_spi(0xFE);
  9861  003BA6  0EFF               	movlw	255
  9862  003BA8  EC94  F02C         	call	_xmit_spi
  9863  003BAC  0EFE               	movlw	254
  9864  003BAE  EC94  F02C         	call	_xmit_spi
  9865  003BB2                     
  9866                           ;pic_mmcp.c: 306:     wc = 512;
  9867  003BB2  0E02               	movlw	2
  9868  003BB4  0100               	movlb	0	; () banked
  9869  003BB6  6FF0               	movwf	(disk_writep@wc+1)& (0+255),b
  9870  003BB8  0E00               	movlw	0
  9871  003BBA  6FEF               	movwf	disk_writep@wc& (0+255),b
  9872  003BBC  EFA1  F01D         	goto	l7617
  9873  003BC0                     l7633:
  9874                           
  9875                           ;pic_mmcp.c: 310:    bc = wc + 2;
  9876  003BC0  0E02               	movlw	2
  9877  003BC2  0100               	movlb	0	; () banked
  9878  003BC4  25EF               	addwf	disk_writep@wc& (0+255),w,b
  9879  003BC6  6E1C               	movwf	disk_writep@bc^0,c
  9880  003BC8  0E00               	movlw	0
  9881  003BCA  21F0               	addwfc	(disk_writep@wc+1)& (0+255),w,b
  9882  003BCC  6E1D               	movwf	(disk_writep@bc+1)^0,c
  9883                           
  9884                           ;pic_mmcp.c: 311:    while (bc--) xmit_spi(0);
  9885  003BCE  EFEC  F01D         	goto	l7637
  9886  003BD2                     l7635:
  9887  003BD2  0E00               	movlw	0
  9888  003BD4  EC94  F02C         	call	_xmit_spi
  9889  003BD8                     l7637:
  9890  003BD8  061C               	decf	disk_writep@bc^0,f,c
  9891  003BDA  A0D8               	btfss	status,0,c
  9892  003BDC  061D               	decf	(disk_writep@bc+1)^0,f,c
  9893  003BDE  281C               	incf	disk_writep@bc^0,w,c
  9894  003BE0  E106               	bnz	u9741
  9895  003BE2  281D               	incf	(disk_writep@bc+1)^0,w,c
  9896  003BE4  A4D8               	btfss	status,2,c
  9897  003BE6  EFF7  F01D         	goto	u9741
  9898  003BEA  EFF9  F01D         	goto	u9740
  9899  003BEE                     u9741:
  9900  003BEE  EFE9  F01D         	goto	l7635
  9901  003BF2                     u9740:
  9902  003BF2                     
  9903                           ;pic_mmcp.c: 312:    if ((rcv_spi() & 0x1F) == 0x05) {
  9904  003BF2  ECB9  F02C         	call	_rcv_spi	;wreg free
  9905  003BF6  0B1F               	andlw	31
  9906  003BF8  0A05               	xorlw	5
  9907  003BFA  A4D8               	btfss	status,2,c
  9908  003BFC  EF02  F01E         	goto	u9751
  9909  003C00  EF04  F01E         	goto	u9750
  9910  003C04                     u9751:
  9911  003C04  EF2D  F01E         	goto	l7655
  9912  003C08                     u9750:
  9913  003C08                     
  9914                           ;pic_mmcp.c: 313:     for (bc = 5000; rcv_spi() != 0xFF && bc; bc--) dly_100us();
  9915  003C08  0E13               	movlw	19
  9916  003C0A  6E1D               	movwf	(disk_writep@bc+1)^0,c
  9917  003C0C  0E88               	movlw	136
  9918  003C0E  6E1C               	movwf	disk_writep@bc^0,c
  9919  003C10  EF0F  F01E         	goto	l7647
  9920  003C14                     l7643:
  9921  003C14  ECDC  F02C         	call	_dly_100us	;wreg free
  9922  003C18  061C               	decf	disk_writep@bc^0,f,c
  9923  003C1A  A0D8               	btfss	status,0,c
  9924  003C1C  061D               	decf	(disk_writep@bc+1)^0,f,c
  9925  003C1E                     l7647:
  9926  003C1E  ECB9  F02C         	call	_rcv_spi	;wreg free
  9927  003C22  0AFF               	xorlw	255
  9928  003C24  B4D8               	btfsc	status,2,c
  9929  003C26  EF17  F01E         	goto	u9761
  9930  003C2A  EF19  F01E         	goto	u9760
  9931  003C2E                     u9761:
  9932  003C2E  EF22  F01E         	goto	l7651
  9933  003C32                     u9760:
  9934  003C32  501C               	movf	disk_writep@bc^0,w,c
  9935  003C34  101D               	iorwf	(disk_writep@bc+1)^0,w,c
  9936  003C36  A4D8               	btfss	status,2,c
  9937  003C38  EF20  F01E         	goto	u9771
  9938  003C3C  EF22  F01E         	goto	u9770
  9939  003C40                     u9771:
  9940  003C40  EF0A  F01E         	goto	l7643
  9941  003C44                     u9770:
  9942  003C44                     l7651:
  9943                           
  9944                           ;pic_mmcp.c: 314:     if (bc) res = RES_OK;
  9945  003C44  501C               	movf	disk_writep@bc^0,w,c
  9946  003C46  101D               	iorwf	(disk_writep@bc+1)^0,w,c
  9947  003C48  B4D8               	btfsc	status,2,c
  9948  003C4A  EF29  F01E         	goto	u9781
  9949  003C4E  EF2B  F01E         	goto	u9780
  9950  003C52                     u9781:
  9951  003C52  EF2D  F01E         	goto	l7655
  9952  003C56                     u9780:
  9953  003C56  0E00               	movlw	0
  9954  003C58  6E1B               	movwf	disk_writep@res^0,c
  9955  003C5A                     l7655:
  9956                           
  9957                           ;pic_mmcp.c: 316:    LATAbits.LA5 = 1;
  9958  003C5A  8A89               	bsf	137,5,c	;volatile
  9959  003C5C                     
  9960                           ;pic_mmcp.c: 317:    rcv_spi();
  9961  003C5C  ECB9  F02C         	call	_rcv_spi	;wreg free
  9962  003C60                     l7659:
  9963                           
  9964                           ;pic_mmcp.c: 321:  return res;
  9965  003C60  501B               	movf	disk_writep@res^0,w,c
  9966  003C62  0012               	return		;funcret
  9967  003C64                     __end_of_disk_writep:
  9968                           	callstack 0
  9969                           
  9970 ;; *************** function _dly_100us *****************
  9971 ;; Defined at:
  9972 ;;		line 40 in file "pic_mmcp.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;		None
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;		None
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  1    wreg      void 
  9979 ;; Registers used:
  9980 ;;		wreg
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9986 ;;      Params:         0       0       0       0       0       0       0
  9987 ;;      Locals:         0       0       0       0       0       0       0
  9988 ;;      Temps:          0       0       0       0       0       0       0
  9989 ;;      Totals:         0       0       0       0       0       0       0
  9990 ;;Total ram usage:        0 bytes
  9991 ;; Hardware stack levels used: 1
  9992 ;; Hardware stack levels required when called: 1
  9993 ;; This function calls:
  9994 ;;		Nothing
  9995 ;; This function is called by:
  9996 ;;		_disk_initialize
  9997 ;;		_disk_writep
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           	psect	text30
 10002  0059B8                     __ptext30:
 10003                           	callstack 0
 10004  0059B8                     _dly_100us:
 10005                           	callstack 27
 10006  0059B8                     
 10007                           ;pic_mmcp.c: 42:     _delay((unsigned long)((100)*(40000000/4000000.0)));
 10008  0059B8  0EC8               	movlw	200
 10009  0059BA                     u11557:
 10010  0059BA  D000               	nop2	
 10011  0059BC  2EE8               	decfsz	wreg,f,c
 10012  0059BE  D7FD               	bra	u11557
 10013  0059C0  0012               	return		;funcret
 10014  0059C2                     __end_of_dly_100us:
 10015                           	callstack 0
 10016                           
 10017 ;; *************** function _check_fs *****************
 10018 ;; Defined at:
 10019 ;;		line 718 in file "pff.c"
 10020 ;; Parameters:    Size  Location     Type
 10021 ;;  buf             2   34[BANK0 ] PTR unsigned char 
 10022 ;;		 -> pf_mount@buf(36), 
 10023 ;;  sect            4   36[BANK0 ] unsigned long 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;		None
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  1    wreg      unsigned char 
 10028 ;; Registers used:
 10029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10035 ;;      Params:         0       6       0       0       0       0       0
 10036 ;;      Locals:         0       0       0       0       0       0       0
 10037 ;;      Temps:          0       4       0       0       0       0       0
 10038 ;;      Totals:         0      10       0       0       0       0       0
 10039 ;;Total ram usage:       10 bytes
 10040 ;; Hardware stack levels used: 1
 10041 ;; Hardware stack levels required when called: 10
 10042 ;; This function calls:
 10043 ;;		_disk_readp
 10044 ;; This function is called by:
 10045 ;;		_pf_mount
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	text31
 10050  00479A                     __ptext31:
 10051                           	callstack 0
 10052  00479A                     _check_fs:
 10053                           	callstack 19
 10054  00479A                     
 10055                           ;pff.c: 719:  BYTE *buf,;pff.c: 720:  DWORD sect;pff.c: 722: {;pff.c: 723:  if (disk_rea
      +                          dp(buf, sect, 510, 2))
 10056  00479A  C0A2  F092         	movff	check_fs@buf,disk_readp@buff
 10057  00479E  C0A3  F093         	movff	check_fs@buf+1,disk_readp@buff+1
 10058  0047A2  C0A4  F094         	movff	check_fs@sect,disk_readp@sector
 10059  0047A6  C0A5  F095         	movff	check_fs@sect+1,disk_readp@sector+1
 10060  0047AA  C0A6  F096         	movff	check_fs@sect+2,disk_readp@sector+2
 10061  0047AE  C0A7  F097         	movff	check_fs@sect+3,disk_readp@sector+3
 10062  0047B2  0E01               	movlw	1
 10063  0047B4  0100               	movlb	0	; () banked
 10064  0047B6  6F99               	movwf	(disk_readp@offset+1)& (0+255),b
 10065  0047B8  0EFE               	movlw	254
 10066  0047BA  6F98               	movwf	disk_readp@offset& (0+255),b
 10067  0047BC  0E00               	movlw	0
 10068  0047BE  6F9B               	movwf	(disk_readp@count+1)& (0+255),b
 10069  0047C0  0E02               	movlw	2
 10070  0047C2  6F9A               	movwf	disk_readp@count& (0+255),b
 10071  0047C4  ECDC  F01B         	call	_disk_readp	;wreg free
 10072  0047C8  0900               	iorlw	0
 10073  0047CA  B4D8               	btfsc	status,2,c
 10074  0047CC  EFEA  F023         	goto	u10181
 10075  0047D0  EFEC  F023         	goto	u10180
 10076  0047D4                     u10181:
 10077  0047D4  EFEF  F023         	goto	l7857
 10078  0047D8                     u10180:
 10079  0047D8                     
 10080                           ;pff.c: 724:   return 3;
 10081  0047D8  0E03               	movlw	3
 10082  0047DA  EF5A  F024         	goto	l308
 10083  0047DE                     l7857:
 10084                           
 10085                           ;pff.c: 725:  if ((WORD)(((WORD)*((BYTE*)(buf)+1)<<8)|(WORD)*(BYTE*)(buf)) != 0xAA55)
 10086  0047DE  0100               	movlb	0	; () banked
 10087  0047E0  EE20 F001          	lfsr	2,1
 10088  0047E4  51A2               	movf	check_fs@buf& (0+255),w,b
 10089  0047E6  26D9               	addwf	fsr2l,f,c
 10090  0047E8  51A3               	movf	(check_fs@buf+1)& (0+255),w,b
 10091  0047EA  22DA               	addwfc	fsr2h,f,c
 10092  0047EC  50DF               	movf	indf2,w,c
 10093  0047EE  6FA8               	movwf	??_check_fs& (0+255),b
 10094  0047F0  51A8               	movf	??_check_fs& (0+255),w,b
 10095  0047F2  6FAA               	movwf	(??_check_fs+2)& (0+255),b
 10096  0047F4  6BA9               	clrf	(??_check_fs+1)& (0+255),b
 10097  0047F6  C0A2  FFD9         	movff	check_fs@buf,fsr2l
 10098  0047FA  C0A3  FFDA         	movff	check_fs@buf+1,fsr2h
 10099  0047FE  50DF               	movf	indf2,w,c
 10100  004800  6FAB               	movwf	(??_check_fs+3)& (0+255),b
 10101  004802  51AB               	movf	(??_check_fs+3)& (0+255),w,b
 10102  004804  13A9               	iorwf	(??_check_fs+1)& (0+255),f,b
 10103  004806  0E00               	movlw	0
 10104  004808  13AA               	iorwf	(??_check_fs+2)& (0+255),f,b
 10105  00480A  0E55               	movlw	85
 10106  00480C  19A9               	xorwf	(??_check_fs+1)& (0+255),w,b
 10107  00480E  E109               	bnz	u10190
 10108  004810  0EAA               	movlw	170
 10109  004812  19AA               	xorwf	(??_check_fs+2)& (0+255),w,b
 10110  004814  B4D8               	btfsc	status,2,c
 10111  004816  EF0F  F024         	goto	u10191
 10112  00481A  EF11  F024         	goto	u10190
 10113  00481E                     u10191:
 10114  00481E  EF17  F024         	goto	l7871
 10115  004822                     u10190:
 10116  004822                     
 10117                           ; BSR set to: 0
 10118                           ;pff.c: 726:   return 2;
 10119  004822  0E02               	movlw	2
 10120  004824  EF5A  F024         	goto	l308
 10121  004828                     l7867:
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;pff.c: 729:   return 0;
 10125  004828  0E00               	movlw	0
 10126  00482A  EF5A  F024         	goto	l308
 10127  00482E                     l7871:
 10128                           
 10129                           ; BSR set to: 0
 10130  00482E  C0A2  F092         	movff	check_fs@buf,disk_readp@buff
 10131  004832  C0A3  F093         	movff	check_fs@buf+1,disk_readp@buff+1
 10132  004836  C0A4  F094         	movff	check_fs@sect,disk_readp@sector
 10133  00483A  C0A5  F095         	movff	check_fs@sect+1,disk_readp@sector+1
 10134  00483E  C0A6  F096         	movff	check_fs@sect+2,disk_readp@sector+2
 10135  004842  C0A7  F097         	movff	check_fs@sect+3,disk_readp@sector+3
 10136  004846  0E00               	movlw	0
 10137  004848  6F99               	movwf	(disk_readp@offset+1)& (0+255),b
 10138  00484A  0E52               	movlw	82
 10139  00484C  6F98               	movwf	disk_readp@offset& (0+255),b
 10140  00484E  0E00               	movlw	0
 10141  004850  6F9B               	movwf	(disk_readp@count+1)& (0+255),b
 10142  004852  0E02               	movlw	2
 10143  004854  6F9A               	movwf	disk_readp@count& (0+255),b
 10144  004856  ECDC  F01B         	call	_disk_readp	;wreg free
 10145  00485A  0900               	iorlw	0
 10146  00485C  A4D8               	btfss	status,2,c
 10147  00485E  EF33  F024         	goto	u10201
 10148  004862  EF35  F024         	goto	u10200
 10149  004866                     u10201:
 10150  004866  EF59  F024         	goto	l7879
 10151  00486A                     u10200:
 10152  00486A  0100               	movlb	0	; () banked
 10153  00486C  EE20 F001          	lfsr	2,1
 10154  004870  51A2               	movf	check_fs@buf& (0+255),w,b
 10155  004872  26D9               	addwf	fsr2l,f,c
 10156  004874  51A3               	movf	(check_fs@buf+1)& (0+255),w,b
 10157  004876  22DA               	addwfc	fsr2h,f,c
 10158  004878  50DF               	movf	indf2,w,c
 10159  00487A  6FA8               	movwf	??_check_fs& (0+255),b
 10160  00487C  51A8               	movf	??_check_fs& (0+255),w,b
 10161  00487E  6FAA               	movwf	(??_check_fs+2)& (0+255),b
 10162  004880  6BA9               	clrf	(??_check_fs+1)& (0+255),b
 10163  004882  C0A2  FFD9         	movff	check_fs@buf,fsr2l
 10164  004886  C0A3  FFDA         	movff	check_fs@buf+1,fsr2h
 10165  00488A  50DF               	movf	indf2,w,c
 10166  00488C  6FAB               	movwf	(??_check_fs+3)& (0+255),b
 10167  00488E  51AB               	movf	(??_check_fs+3)& (0+255),w,b
 10168  004890  13A9               	iorwf	(??_check_fs+1)& (0+255),f,b
 10169  004892  0E00               	movlw	0
 10170  004894  13AA               	iorwf	(??_check_fs+2)& (0+255),f,b
 10171  004896  0E46               	movlw	70
 10172  004898  19A9               	xorwf	(??_check_fs+1)& (0+255),w,b
 10173  00489A  E107               	bnz	u10211
 10174  00489C  0E41               	movlw	65
 10175  00489E  19AA               	xorwf	(??_check_fs+2)& (0+255),w,b
 10176  0048A0  A4D8               	btfss	status,2,c
 10177  0048A2  EF55  F024         	goto	u10211
 10178  0048A6  EF57  F024         	goto	u10210
 10179  0048AA                     u10211:
 10180  0048AA  EF59  F024         	goto	l7879
 10181  0048AE                     u10210:
 10182  0048AE  EF14  F024         	goto	l7867
 10183  0048B2                     l7879:
 10184                           
 10185                           ;pff.c: 732:  return 1;
 10186  0048B2  0E01               	movlw	1
 10187  0048B4                     l308:
 10188  0048B4  0012               	return		;funcret
 10189  0048B6                     __end_of_check_fs:
 10190                           	callstack 0
 10191                           
 10192 ;; *************** function _pf_lseek *****************
 10193 ;; Defined at:
 10194 ;;		line 1000 in file "pff.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;  ofs             4   66[BANK0 ] unsigned long 
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;  clst            4   99[BANK0 ] unsigned long 
 10199 ;;  bcs             4   95[BANK0 ] unsigned long 
 10200 ;;  ifptr           4   91[BANK0 ] unsigned long 
 10201 ;;  sect            4   87[BANK0 ] unsigned long 
 10202 ;;  fs              2  103[BANK0 ] PTR struct .
 10203 ;;		 -> NULL(0), main@fs(42), 
 10204 ;; Return value:  Size  Location     Type
 10205 ;;                  1    wreg      enum E3114
 10206 ;; Registers used:
 10207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10208 ;; Tracked objects:
 10209 ;;		On entry : 0/0
 10210 ;;		On exit  : 0/0
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10213 ;;      Params:         0       4       0       0       0       0       0
 10214 ;;      Locals:         0      18       0       0       0       0       0
 10215 ;;      Temps:          0      17       0       0       0       0       0
 10216 ;;      Totals:         0      39       0       0       0       0       0
 10217 ;;Total ram usage:       39 bytes
 10218 ;; Hardware stack levels used: 1
 10219 ;; Hardware stack levels required when called: 11
 10220 ;; This function calls:
 10221 ;;		___lldiv
 10222 ;;		_clust2sect
 10223 ;;		_get_fat
 10224 ;; This function is called by:
 10225 ;;		_main
 10226 ;; This function uses a non-reentrant model
 10227 ;;
 10228                           
 10229                           	psect	text32
 10230  00167E                     __ptext32:
 10231                           	callstack 0
 10232  00167E                     _pf_lseek:
 10233                           	callstack 19
 10234  00167E                     
 10235                           ;pff.c: 1001:  DWORD ofs;pff.c: 1003: {;pff.c: 1004:  DWORD clst;;pff.c: 1005:  DWORD bc
      +                          s, sect, ifptr;;pff.c: 1006:  FATFS *fs = FatFs;
 10236  00167E  C0F1  F0E7         	movff	_FatFs,pf_lseek@fs
 10237  001682  C0F2  F0E8         	movff	_FatFs+1,pf_lseek@fs+1
 10238                           
 10239                           ;pff.c: 1009:  if (!fs) return FR_NOT_ENABLED;
 10240  001686  0100               	movlb	0	; () banked
 10241  001688  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10242  00168A  11E8               	iorwf	(pf_lseek@fs+1)& (0+255),w,b
 10243  00168C  A4D8               	btfss	status,2,c
 10244  00168E  EF4B  F00B         	goto	u10841
 10245  001692  EF4D  F00B         	goto	u10840
 10246  001696                     u10841:
 10247  001696  EF50  F00B         	goto	l8341
 10248  00169A                     u10840:
 10249  00169A                     
 10250                           ; BSR set to: 0
 10251  00169A  0E05               	movlw	5
 10252  00169C  EF86  F00D         	goto	l389
 10253  0016A0                     l8341:
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;pff.c: 1010:  if (!(fs->flag & 0x01))
 10257  0016A0  EE20 F001          	lfsr	2,1
 10258  0016A4  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10259  0016A6  26D9               	addwf	fsr2l,f,c
 10260  0016A8  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10261  0016AA  22DA               	addwfc	fsr2h,f,c
 10262  0016AC  B0DF               	btfsc	indf2,0,c
 10263  0016AE  EF5B  F00B         	goto	u10851
 10264  0016B2  EF5D  F00B         	goto	u10850
 10265  0016B6                     u10851:
 10266  0016B6  EF60  F00B         	goto	l8347
 10267  0016BA                     u10850:
 10268  0016BA                     
 10269                           ; BSR set to: 0
 10270                           ;pff.c: 1011:    return FR_NOT_OPENED;
 10271  0016BA  0E04               	movlw	4
 10272  0016BC  EF86  F00D         	goto	l389
 10273  0016C0                     l8347:
 10274                           
 10275                           ; BSR set to: 0
 10276                           ;pff.c: 1013:  if (ofs > fs->fsize) ofs = fs->fsize;
 10277  0016C0  EE20 F01A          	lfsr	2,26
 10278  0016C4  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10279  0016C6  26D9               	addwf	fsr2l,f,c
 10280  0016C8  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10281  0016CA  22DA               	addwfc	fsr2h,f,c
 10282  0016CC  51C2               	movf	pf_lseek@ofs& (0+255),w,b
 10283  0016CE  5CDE               	subwf	postinc2,w,c
 10284  0016D0  51C3               	movf	(pf_lseek@ofs+1)& (0+255),w,b
 10285  0016D2  58DE               	subwfb	postinc2,w,c
 10286  0016D4  51C4               	movf	(pf_lseek@ofs+2)& (0+255),w,b
 10287  0016D6  58DE               	subwfb	postinc2,w,c
 10288  0016D8  51C5               	movf	(pf_lseek@ofs+3)& (0+255),w,b
 10289  0016DA  58DE               	subwfb	postinc2,w,c
 10290  0016DC  B0D8               	btfsc	status,0,c
 10291  0016DE  EF73  F00B         	goto	u10861
 10292  0016E2  EF75  F00B         	goto	u10860
 10293  0016E6                     u10861:
 10294  0016E6  EF83  F00B         	goto	l391
 10295  0016EA                     u10860:
 10296  0016EA                     
 10297                           ; BSR set to: 0
 10298  0016EA  EE20 F01A          	lfsr	2,26
 10299  0016EE  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10300  0016F0  26D9               	addwf	fsr2l,f,c
 10301  0016F2  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10302  0016F4  22DA               	addwfc	fsr2h,f,c
 10303  0016F6  CFDE F0C2          	movff	postinc2,pf_lseek@ofs
 10304  0016FA  CFDE F0C3          	movff	postinc2,pf_lseek@ofs+1
 10305  0016FE  CFDE F0C4          	movff	postinc2,pf_lseek@ofs+2
 10306  001702  CFDE F0C5          	movff	postinc2,pf_lseek@ofs+3
 10307  001706                     l391:
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;pff.c: 1014:  ifptr = fs->fptr;
 10311  001706  EE20 F016          	lfsr	2,22
 10312  00170A  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10313  00170C  26D9               	addwf	fsr2l,f,c
 10314  00170E  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10315  001710  22DA               	addwfc	fsr2h,f,c
 10316  001712  CFDE F0DB          	movff	postinc2,pf_lseek@ifptr
 10317  001716  CFDE F0DC          	movff	postinc2,pf_lseek@ifptr+1
 10318  00171A  CFDE F0DD          	movff	postinc2,pf_lseek@ifptr+2
 10319  00171E  CFDE F0DE          	movff	postinc2,pf_lseek@ifptr+3
 10320                           
 10321                           ;pff.c: 1015:  fs->fptr = 0;
 10322  001722  EE20 F016          	lfsr	2,22
 10323  001726  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10324  001728  26D9               	addwf	fsr2l,f,c
 10325  00172A  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10326  00172C  22DA               	addwfc	fsr2h,f,c
 10327  00172E  6ADE               	clrf	postinc2,c
 10328  001730  6ADE               	clrf	postinc2,c
 10329  001732  6ADE               	clrf	postinc2,c
 10330  001734  6ADD               	clrf	postdec2,c
 10331  001736                     
 10332                           ; BSR set to: 0
 10333                           ;pff.c: 1016:  if (ofs > 0) {
 10334  001736  51C2               	movf	pf_lseek@ofs& (0+255),w,b
 10335  001738  11C3               	iorwf	(pf_lseek@ofs+1)& (0+255),w,b
 10336  00173A  11C4               	iorwf	(pf_lseek@ofs+2)& (0+255),w,b
 10337  00173C  11C5               	iorwf	(pf_lseek@ofs+3)& (0+255),w,b
 10338  00173E  B4D8               	btfsc	status,2,c
 10339  001740  EFA4  F00B         	goto	u10871
 10340  001744  EFA6  F00B         	goto	u10870
 10341  001748                     u10871:
 10342  001748  EF85  F00D         	goto	l8395
 10343  00174C                     u10870:
 10344  00174C                     
 10345                           ; BSR set to: 0
 10346                           ;pff.c: 1017:   bcs = (DWORD)fs->csize * 512;
 10347  00174C  EE20 F002          	lfsr	2,2
 10348  001750  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10349  001752  26D9               	addwf	fsr2l,f,c
 10350  001754  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10351  001756  22DA               	addwfc	fsr2h,f,c
 10352  001758  50DF               	movf	indf2,w,c
 10353  00175A  6FC6               	movwf	??_pf_lseek& (0+255),b
 10354  00175C  C0C6  F0C7         	movff	??_pf_lseek,??_pf_lseek+1
 10355  001760  6BC8               	clrf	(??_pf_lseek+2)& (0+255),b
 10356  001762  6BC9               	clrf	(??_pf_lseek+3)& (0+255),b
 10357  001764  6BCA               	clrf	(??_pf_lseek+4)& (0+255),b
 10358  001766  0E09               	movlw	9
 10359  001768                     u10885:
 10360  001768  90D8               	bcf	status,0,c
 10361  00176A  37C7               	rlcf	(??_pf_lseek+1)& (0+255),f,b
 10362  00176C  37C8               	rlcf	(??_pf_lseek+2)& (0+255),f,b
 10363  00176E  37C9               	rlcf	(??_pf_lseek+3)& (0+255),f,b
 10364  001770  37CA               	rlcf	(??_pf_lseek+4)& (0+255),f,b
 10365  001772  2EE8               	decfsz	wreg,f,c
 10366  001774  EFB4  F00B         	goto	u10885
 10367  001778  C0C7  F0DF         	movff	??_pf_lseek+1,pf_lseek@bcs
 10368  00177C  C0C8  F0E0         	movff	??_pf_lseek+2,pf_lseek@bcs+1
 10369  001780  C0C9  F0E1         	movff	??_pf_lseek+3,pf_lseek@bcs+2
 10370  001784  C0CA  F0E2         	movff	??_pf_lseek+4,pf_lseek@bcs+3
 10371  001788                     
 10372                           ; BSR set to: 0
 10373                           ;pff.c: 1018:   if (ifptr > 0 &&
 10374  001788  51DB               	movf	pf_lseek@ifptr& (0+255),w,b
 10375  00178A  11DC               	iorwf	(pf_lseek@ifptr+1)& (0+255),w,b
 10376  00178C  11DD               	iorwf	(pf_lseek@ifptr+2)& (0+255),w,b
 10377  00178E  11DE               	iorwf	(pf_lseek@ifptr+3)& (0+255),w,b
 10378  001790  B4D8               	btfsc	status,2,c
 10379  001792  EFCD  F00B         	goto	u10891
 10380  001796  EFCF  F00B         	goto	u10890
 10381  00179A                     u10891:
 10382  00179A  EF6C  F00C         	goto	l8361
 10383  00179E                     u10890:
 10384  00179E                     
 10385                           ; BSR set to: 0
 10386  00179E  0EFF               	movlw	255
 10387  0017A0  25C2               	addwf	pf_lseek@ofs& (0+255),w,b
 10388  0017A2  6E06               	movwf	___lldiv@dividend^0,c
 10389  0017A4  0EFF               	movlw	255
 10390  0017A6  21C3               	addwfc	(pf_lseek@ofs+1)& (0+255),w,b
 10391  0017A8  6E07               	movwf	(___lldiv@dividend+1)^0,c
 10392  0017AA  0EFF               	movlw	255
 10393  0017AC  21C4               	addwfc	(pf_lseek@ofs+2)& (0+255),w,b
 10394  0017AE  6E08               	movwf	(___lldiv@dividend+2)^0,c
 10395  0017B0  0EFF               	movlw	255
 10396  0017B2  21C5               	addwfc	(pf_lseek@ofs+3)& (0+255),w,b
 10397  0017B4  6E09               	movwf	(___lldiv@dividend+3)^0,c
 10398  0017B6  C0DF  F00A         	movff	pf_lseek@bcs,___lldiv@divisor
 10399  0017BA  C0E0  F00B         	movff	pf_lseek@bcs+1,___lldiv@divisor+1
 10400  0017BE  C0E1  F00C         	movff	pf_lseek@bcs+2,___lldiv@divisor+2
 10401  0017C2  C0E2  F00D         	movff	pf_lseek@bcs+3,___lldiv@divisor+3
 10402  0017C6  EC3C  F028         	call	___lldiv	;wreg free
 10403  0017CA  C006  F0C6         	movff	?___lldiv,??_pf_lseek
 10404  0017CE  C007  F0C7         	movff	?___lldiv+1,??_pf_lseek+1
 10405  0017D2  C008  F0C8         	movff	?___lldiv+2,??_pf_lseek+2
 10406  0017D6  C009  F0C9         	movff	?___lldiv+3,??_pf_lseek+3
 10407  0017DA  0EFF               	movlw	255
 10408  0017DC  0100               	movlb	0	; () banked
 10409  0017DE  25DB               	addwf	pf_lseek@ifptr& (0+255),w,b
 10410  0017E0  6E06               	movwf	___lldiv@dividend^0,c
 10411  0017E2  0EFF               	movlw	255
 10412  0017E4  21DC               	addwfc	(pf_lseek@ifptr+1)& (0+255),w,b
 10413  0017E6  6E07               	movwf	(___lldiv@dividend+1)^0,c
 10414  0017E8  0EFF               	movlw	255
 10415  0017EA  21DD               	addwfc	(pf_lseek@ifptr+2)& (0+255),w,b
 10416  0017EC  6E08               	movwf	(___lldiv@dividend+2)^0,c
 10417  0017EE  0EFF               	movlw	255
 10418  0017F0  21DE               	addwfc	(pf_lseek@ifptr+3)& (0+255),w,b
 10419  0017F2  6E09               	movwf	(___lldiv@dividend+3)^0,c
 10420  0017F4  C0DF  F00A         	movff	pf_lseek@bcs,___lldiv@divisor
 10421  0017F8  C0E0  F00B         	movff	pf_lseek@bcs+1,___lldiv@divisor+1
 10422  0017FC  C0E1  F00C         	movff	pf_lseek@bcs+2,___lldiv@divisor+2
 10423  001800  C0E2  F00D         	movff	pf_lseek@bcs+3,___lldiv@divisor+3
 10424  001804  EC3C  F028         	call	___lldiv	;wreg free
 10425  001808  5006               	movf	?___lldiv^0,w,c
 10426  00180A  0100               	movlb	0	; () banked
 10427  00180C  5DC6               	subwf	??_pf_lseek& (0+255),w,b
 10428  00180E  5007               	movf	(?___lldiv+1)^0,w,c
 10429  001810  59C7               	subwfb	(??_pf_lseek+1)& (0+255),w,b
 10430  001812  5008               	movf	(?___lldiv+2)^0,w,c
 10431  001814  59C8               	subwfb	(??_pf_lseek+2)& (0+255),w,b
 10432  001816  5009               	movf	(?___lldiv+3)^0,w,c
 10433  001818  59C9               	subwfb	(??_pf_lseek+3)& (0+255),w,b
 10434  00181A  A0D8               	btfss	status,0,c
 10435  00181C  EF12  F00C         	goto	u10901
 10436  001820  EF14  F00C         	goto	u10900
 10437  001824                     u10901:
 10438  001824  EF6C  F00C         	goto	l8361
 10439  001828                     u10900:
 10440  001828                     
 10441                           ; BSR set to: 0
 10442                           ;pff.c: 1019:    (ofs - 1) / bcs >= (ifptr - 1) / bcs) {;pff.c: 1020:    fs->fptr = (ifp
      +                          tr - 1) & ~(bcs - 1);
 10443  001828  0EFF               	movlw	255
 10444  00182A  25DF               	addwf	pf_lseek@bcs& (0+255),w,b
 10445  00182C  6FC6               	movwf	??_pf_lseek& (0+255),b
 10446  00182E  0EFF               	movlw	255
 10447  001830  21E0               	addwfc	(pf_lseek@bcs+1)& (0+255),w,b
 10448  001832  6FC7               	movwf	(??_pf_lseek+1)& (0+255),b
 10449  001834  0EFF               	movlw	255
 10450  001836  21E1               	addwfc	(pf_lseek@bcs+2)& (0+255),w,b
 10451  001838  6FC8               	movwf	(??_pf_lseek+2)& (0+255),b
 10452  00183A  0EFF               	movlw	255
 10453  00183C  21E2               	addwfc	(pf_lseek@bcs+3)& (0+255),w,b
 10454  00183E  6FC9               	movwf	(??_pf_lseek+3)& (0+255),b
 10455  001840  1DC6               	comf	??_pf_lseek& (0+255),w,b
 10456  001842  6FCA               	movwf	(??_pf_lseek+4)& (0+255),b
 10457  001844  1DC7               	comf	(??_pf_lseek+1)& (0+255),w,b
 10458  001846  6FCB               	movwf	(??_pf_lseek+5)& (0+255),b
 10459  001848  1DC8               	comf	(??_pf_lseek+2)& (0+255),w,b
 10460  00184A  6FCC               	movwf	(??_pf_lseek+6)& (0+255),b
 10461  00184C  1DC9               	comf	(??_pf_lseek+3)& (0+255),w,b
 10462  00184E  6FCD               	movwf	(??_pf_lseek+7)& (0+255),b
 10463  001850  0EFF               	movlw	255
 10464  001852  25DB               	addwf	pf_lseek@ifptr& (0+255),w,b
 10465  001854  6FCE               	movwf	(??_pf_lseek+8)& (0+255),b
 10466  001856  0EFF               	movlw	255
 10467  001858  21DC               	addwfc	(pf_lseek@ifptr+1)& (0+255),w,b
 10468  00185A  6FCF               	movwf	(??_pf_lseek+9)& (0+255),b
 10469  00185C  0EFF               	movlw	255
 10470  00185E  21DD               	addwfc	(pf_lseek@ifptr+2)& (0+255),w,b
 10471  001860  6FD0               	movwf	(??_pf_lseek+10)& (0+255),b
 10472  001862  0EFF               	movlw	255
 10473  001864  21DE               	addwfc	(pf_lseek@ifptr+3)& (0+255),w,b
 10474  001866  6FD1               	movwf	(??_pf_lseek+11)& (0+255),b
 10475  001868  51CA               	movf	(??_pf_lseek+4)& (0+255),w,b
 10476  00186A  15CE               	andwf	(??_pf_lseek+8)& (0+255),w,b
 10477  00186C  6FD2               	movwf	(??_pf_lseek+12)& (0+255),b
 10478  00186E  51CB               	movf	(??_pf_lseek+5)& (0+255),w,b
 10479  001870  15CF               	andwf	(??_pf_lseek+9)& (0+255),w,b
 10480  001872  6FD3               	movwf	(??_pf_lseek+13)& (0+255),b
 10481  001874  51CC               	movf	(??_pf_lseek+6)& (0+255),w,b
 10482  001876  15D0               	andwf	(??_pf_lseek+10)& (0+255),w,b
 10483  001878  6FD4               	movwf	(??_pf_lseek+14)& (0+255),b
 10484  00187A  51CD               	movf	(??_pf_lseek+7)& (0+255),w,b
 10485  00187C  15D1               	andwf	(??_pf_lseek+11)& (0+255),w,b
 10486  00187E  6FD5               	movwf	(??_pf_lseek+15)& (0+255),b
 10487  001880  EE20 F016          	lfsr	2,22
 10488  001884  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10489  001886  26D9               	addwf	fsr2l,f,c
 10490  001888  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10491  00188A  22DA               	addwfc	fsr2h,f,c
 10492  00188C  C0D2  FFDE         	movff	??_pf_lseek+12,postinc2
 10493  001890  C0D3  FFDE         	movff	??_pf_lseek+13,postinc2
 10494  001894  C0D4  FFDE         	movff	??_pf_lseek+14,postinc2
 10495  001898  C0D5  FFDE         	movff	??_pf_lseek+15,postinc2
 10496                           
 10497                           ;pff.c: 1021:    ofs -= fs->fptr;
 10498  00189C  EE20 F016          	lfsr	2,22
 10499  0018A0  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10500  0018A2  26D9               	addwf	fsr2l,f,c
 10501  0018A4  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10502  0018A6  22DA               	addwfc	fsr2h,f,c
 10503  0018A8  50DE               	movf	postinc2,w,c
 10504  0018AA  5FC2               	subwf	pf_lseek@ofs& (0+255),f,b
 10505  0018AC  50DE               	movf	postinc2,w,c
 10506  0018AE  5BC3               	subwfb	(pf_lseek@ofs+1)& (0+255),f,b
 10507  0018B0  50DE               	movf	postinc2,w,c
 10508  0018B2  5BC4               	subwfb	(pf_lseek@ofs+2)& (0+255),f,b
 10509  0018B4  50DD               	movf	postdec2,w,c
 10510  0018B6  5BC5               	subwfb	(pf_lseek@ofs+3)& (0+255),f,b
 10511                           
 10512                           ;pff.c: 1022:    clst = fs->curr_clust;
 10513  0018B8  EE20 F022          	lfsr	2,34
 10514  0018BC  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10515  0018BE  26D9               	addwf	fsr2l,f,c
 10516  0018C0  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10517  0018C2  22DA               	addwfc	fsr2h,f,c
 10518  0018C4  CFDE F0E3          	movff	postinc2,pf_lseek@clst
 10519  0018C8  CFDE F0E4          	movff	postinc2,pf_lseek@clst+1
 10520  0018CC  CFDE F0E5          	movff	postinc2,pf_lseek@clst+2
 10521  0018D0  CFDE F0E6          	movff	postinc2,pf_lseek@clst+3
 10522                           
 10523                           ;pff.c: 1023:   } else {
 10524  0018D4  EFEE  F00C         	goto	l8379
 10525  0018D8                     l8361:
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;pff.c: 1024:    clst = fs->org_clust;
 10529  0018D8  EE20 F01E          	lfsr	2,30
 10530  0018DC  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10531  0018DE  26D9               	addwf	fsr2l,f,c
 10532  0018E0  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10533  0018E2  22DA               	addwfc	fsr2h,f,c
 10534  0018E4  CFDE F0E3          	movff	postinc2,pf_lseek@clst
 10535  0018E8  CFDE F0E4          	movff	postinc2,pf_lseek@clst+1
 10536  0018EC  CFDE F0E5          	movff	postinc2,pf_lseek@clst+2
 10537  0018F0  CFDE F0E6          	movff	postinc2,pf_lseek@clst+3
 10538                           
 10539                           ;pff.c: 1025:    fs->curr_clust = clst;
 10540  0018F4  EE20 F022          	lfsr	2,34
 10541  0018F8  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10542  0018FA  26D9               	addwf	fsr2l,f,c
 10543  0018FC  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10544  0018FE  22DA               	addwfc	fsr2h,f,c
 10545  001900  C0E3  FFDE         	movff	pf_lseek@clst,postinc2
 10546  001904  C0E4  FFDE         	movff	pf_lseek@clst+1,postinc2
 10547  001908  C0E5  FFDE         	movff	pf_lseek@clst+2,postinc2
 10548  00190C  C0E6  FFDE         	movff	pf_lseek@clst+3,postinc2
 10549  001910  EFEE  F00C         	goto	l8379
 10550  001914                     l8363:
 10551                           
 10552                           ; BSR set to: 0
 10553                           ;pff.c: 1028:    clst = get_fat(clst);
 10554  001914  C0E3  F0A2         	movff	pf_lseek@clst,get_fat@clst
 10555  001918  C0E4  F0A3         	movff	pf_lseek@clst+1,get_fat@clst+1
 10556  00191C  C0E5  F0A4         	movff	pf_lseek@clst+2,get_fat@clst+2
 10557  001920  C0E6  F0A5         	movff	pf_lseek@clst+3,get_fat@clst+3
 10558  001924  EC63  F019         	call	_get_fat	;wreg free
 10559  001928  C0A2  F0E3         	movff	?_get_fat,pf_lseek@clst
 10560  00192C  C0A3  F0E4         	movff	?_get_fat+1,pf_lseek@clst+1
 10561  001930  C0A4  F0E5         	movff	?_get_fat+2,pf_lseek@clst+2
 10562  001934  C0A5  F0E6         	movff	?_get_fat+3,pf_lseek@clst+3
 10563  001938                     
 10564                           ;pff.c: 1029:    if (clst <= 1 || clst >= fs->n_fatent) {fs->flag = 0; return FR_DISK_ER
      +                          R;};
 10565  001938  0100               	movlb	0	; () banked
 10566  00193A  51E6               	movf	(pf_lseek@clst+3)& (0+255),w,b
 10567  00193C  11E5               	iorwf	(pf_lseek@clst+2)& (0+255),w,b
 10568  00193E  11E4               	iorwf	(pf_lseek@clst+1)& (0+255),w,b
 10569  001940  E109               	bnz	u10910
 10570  001942  0E02               	movlw	2
 10571  001944  5DE3               	subwf	pf_lseek@clst& (0+255),w,b
 10572  001946  A0D8               	btfss	status,0,c
 10573  001948  EFA8  F00C         	goto	u10911
 10574  00194C  EFAA  F00C         	goto	u10910
 10575  001950                     u10911:
 10576  001950  EFBF  F00C         	goto	l8369
 10577  001954                     u10910:
 10578  001954                     
 10579                           ; BSR set to: 0
 10580  001954  EE20 F006          	lfsr	2,6
 10581  001958  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10582  00195A  26D9               	addwf	fsr2l,f,c
 10583  00195C  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10584  00195E  22DA               	addwfc	fsr2h,f,c
 10585  001960  50DE               	movf	postinc2,w,c
 10586  001962  5DE3               	subwf	pf_lseek@clst& (0+255),w,b
 10587  001964  50DE               	movf	postinc2,w,c
 10588  001966  59E4               	subwfb	(pf_lseek@clst+1)& (0+255),w,b
 10589  001968  50DE               	movf	postinc2,w,c
 10590  00196A  59E5               	subwfb	(pf_lseek@clst+2)& (0+255),w,b
 10591  00196C  50DE               	movf	postinc2,w,c
 10592  00196E  59E6               	subwfb	(pf_lseek@clst+3)& (0+255),w,b
 10593  001970  A0D8               	btfss	status,0,c
 10594  001972  EFBD  F00C         	goto	u10921
 10595  001976  EFBF  F00C         	goto	u10920
 10596  00197A                     u10921:
 10597  00197A  EFCA  F00C         	goto	l8375
 10598  00197E                     u10920:
 10599  00197E                     l8369:
 10600                           
 10601                           ; BSR set to: 0
 10602  00197E  EE20 F001          	lfsr	2,1
 10603  001982  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10604  001984  26D9               	addwf	fsr2l,f,c
 10605  001986  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10606  001988  22DA               	addwfc	fsr2h,f,c
 10607  00198A  0E00               	movlw	0
 10608  00198C  6EDF               	movwf	indf2,c
 10609  00198E                     l8371:
 10610                           
 10611                           ; BSR set to: 0
 10612  00198E  0E01               	movlw	1
 10613  001990  EF86  F00D         	goto	l389
 10614  001994                     l8375:
 10615                           
 10616                           ; BSR set to: 0
 10617                           ;pff.c: 1030:    fs->curr_clust = clst;
 10618  001994  EE20 F022          	lfsr	2,34
 10619  001998  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10620  00199A  26D9               	addwf	fsr2l,f,c
 10621  00199C  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10622  00199E  22DA               	addwfc	fsr2h,f,c
 10623  0019A0  C0E3  FFDE         	movff	pf_lseek@clst,postinc2
 10624  0019A4  C0E4  FFDE         	movff	pf_lseek@clst+1,postinc2
 10625  0019A8  C0E5  FFDE         	movff	pf_lseek@clst+2,postinc2
 10626  0019AC  C0E6  FFDE         	movff	pf_lseek@clst+3,postinc2
 10627                           
 10628                           ;pff.c: 1031:    fs->fptr += bcs;
 10629  0019B0  EE20 F016          	lfsr	2,22
 10630  0019B4  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10631  0019B6  26D9               	addwf	fsr2l,f,c
 10632  0019B8  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10633  0019BA  22DA               	addwfc	fsr2h,f,c
 10634  0019BC  51DF               	movf	pf_lseek@bcs& (0+255),w,b
 10635  0019BE  26DE               	addwf	postinc2,f,c
 10636  0019C0  51E0               	movf	(pf_lseek@bcs+1)& (0+255),w,b
 10637  0019C2  22DE               	addwfc	postinc2,f,c
 10638  0019C4  51E1               	movf	(pf_lseek@bcs+2)& (0+255),w,b
 10639  0019C6  22DE               	addwfc	postinc2,f,c
 10640  0019C8  51E2               	movf	(pf_lseek@bcs+3)& (0+255),w,b
 10641  0019CA  22DE               	addwfc	postinc2,f,c
 10642  0019CC                     
 10643                           ; BSR set to: 0
 10644                           ;pff.c: 1032:    ofs -= bcs;
 10645  0019CC  51DF               	movf	pf_lseek@bcs& (0+255),w,b
 10646  0019CE  5FC2               	subwf	pf_lseek@ofs& (0+255),f,b
 10647  0019D0  51E0               	movf	(pf_lseek@bcs+1)& (0+255),w,b
 10648  0019D2  5BC3               	subwfb	(pf_lseek@ofs+1)& (0+255),f,b
 10649  0019D4  51E1               	movf	(pf_lseek@bcs+2)& (0+255),w,b
 10650  0019D6  5BC4               	subwfb	(pf_lseek@ofs+2)& (0+255),f,b
 10651  0019D8  51E2               	movf	(pf_lseek@bcs+3)& (0+255),w,b
 10652  0019DA  5BC5               	subwfb	(pf_lseek@ofs+3)& (0+255),f,b
 10653  0019DC                     l8379:
 10654                           
 10655                           ; BSR set to: 0
 10656                           ;pff.c: 1027:   while (ofs > bcs) {
 10657  0019DC  51C2               	movf	pf_lseek@ofs& (0+255),w,b
 10658  0019DE  5DDF               	subwf	pf_lseek@bcs& (0+255),w,b
 10659  0019E0  51C3               	movf	(pf_lseek@ofs+1)& (0+255),w,b
 10660  0019E2  59E0               	subwfb	(pf_lseek@bcs+1)& (0+255),w,b
 10661  0019E4  51C4               	movf	(pf_lseek@ofs+2)& (0+255),w,b
 10662  0019E6  59E1               	subwfb	(pf_lseek@bcs+2)& (0+255),w,b
 10663  0019E8  51C5               	movf	(pf_lseek@ofs+3)& (0+255),w,b
 10664  0019EA  59E2               	subwfb	(pf_lseek@bcs+3)& (0+255),w,b
 10665  0019EC  A0D8               	btfss	status,0,c
 10666  0019EE  EFFB  F00C         	goto	u10931
 10667  0019F2  EFFD  F00C         	goto	u10930
 10668  0019F6                     u10931:
 10669  0019F6  EF8A  F00C         	goto	l8363
 10670  0019FA                     u10930:
 10671  0019FA                     
 10672                           ; BSR set to: 0
 10673                           ;pff.c: 1034:   fs->fptr += ofs;
 10674  0019FA  EE20 F016          	lfsr	2,22
 10675  0019FE  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10676  001A00  26D9               	addwf	fsr2l,f,c
 10677  001A02  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10678  001A04  22DA               	addwfc	fsr2h,f,c
 10679  001A06  51C2               	movf	pf_lseek@ofs& (0+255),w,b
 10680  001A08  26DE               	addwf	postinc2,f,c
 10681  001A0A  51C3               	movf	(pf_lseek@ofs+1)& (0+255),w,b
 10682  001A0C  22DE               	addwfc	postinc2,f,c
 10683  001A0E  51C4               	movf	(pf_lseek@ofs+2)& (0+255),w,b
 10684  001A10  22DE               	addwfc	postinc2,f,c
 10685  001A12  51C5               	movf	(pf_lseek@ofs+3)& (0+255),w,b
 10686  001A14  22DE               	addwfc	postinc2,f,c
 10687  001A16                     
 10688                           ; BSR set to: 0
 10689                           ;pff.c: 1035:   sect = clust2sect(clst);
 10690  001A16  C0E3  F012         	movff	pf_lseek@clst,clust2sect@clst
 10691  001A1A  C0E4  F013         	movff	pf_lseek@clst+1,clust2sect@clst+1
 10692  001A1E  C0E5  F014         	movff	pf_lseek@clst+2,clust2sect@clst+2
 10693  001A22  C0E6  F015         	movff	pf_lseek@clst+3,clust2sect@clst+3
 10694  001A26  EC12  F027         	call	_clust2sect	;wreg free
 10695  001A2A  C012  F0D7         	movff	?_clust2sect,pf_lseek@sect
 10696  001A2E  C013  F0D8         	movff	?_clust2sect+1,pf_lseek@sect+1
 10697  001A32  C014  F0D9         	movff	?_clust2sect+2,pf_lseek@sect+2
 10698  001A36  C015  F0DA         	movff	?_clust2sect+3,pf_lseek@sect+3
 10699  001A3A                     
 10700                           ;pff.c: 1036:   if (!sect) {fs->flag = 0; return FR_DISK_ERR;};
 10701  001A3A  0100               	movlb	0	; () banked
 10702  001A3C  51D7               	movf	pf_lseek@sect& (0+255),w,b
 10703  001A3E  11D8               	iorwf	(pf_lseek@sect+1)& (0+255),w,b
 10704  001A40  11D9               	iorwf	(pf_lseek@sect+2)& (0+255),w,b
 10705  001A42  11DA               	iorwf	(pf_lseek@sect+3)& (0+255),w,b
 10706  001A44  A4D8               	btfss	status,2,c
 10707  001A46  EF27  F00D         	goto	u10941
 10708  001A4A  EF29  F00D         	goto	u10940
 10709  001A4E                     u10941:
 10710  001A4E  EF33  F00D         	goto	l8393
 10711  001A52                     u10940:
 10712  001A52                     
 10713                           ; BSR set to: 0
 10714  001A52  EE20 F001          	lfsr	2,1
 10715  001A56  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10716  001A58  26D9               	addwf	fsr2l,f,c
 10717  001A5A  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10718  001A5C  22DA               	addwfc	fsr2h,f,c
 10719  001A5E  0E00               	movlw	0
 10720  001A60  6EDF               	movwf	indf2,c
 10721  001A62  EFC7  F00C         	goto	l8371
 10722  001A66                     l8393:
 10723                           
 10724                           ; BSR set to: 0
 10725                           ;pff.c: 1037:   fs->dsect = sect + (fs->fptr / 512 & (fs->csize - 1));
 10726  001A66  EE20 F002          	lfsr	2,2
 10727  001A6A  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10728  001A6C  26D9               	addwf	fsr2l,f,c
 10729  001A6E  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10730  001A70  22DA               	addwfc	fsr2h,f,c
 10731  001A72  50DF               	movf	indf2,w,c
 10732  001A74  6FC6               	movwf	??_pf_lseek& (0+255),b
 10733  001A76  0EFF               	movlw	255
 10734  001A78  25C6               	addwf	??_pf_lseek& (0+255),w,b
 10735  001A7A  6FC7               	movwf	(??_pf_lseek+1)& (0+255),b
 10736  001A7C  6BC8               	clrf	(??_pf_lseek+2)& (0+255),b
 10737  001A7E  0EFF               	movlw	255
 10738  001A80  23C8               	addwfc	(??_pf_lseek+2)& (0+255),f,b
 10739  001A82  6BC9               	clrf	(??_pf_lseek+3)& (0+255),b
 10740  001A84  BFC8               	btfsc	(??_pf_lseek+2)& (0+255),7,b
 10741  001A86  07C9               	decf	(??_pf_lseek+3)& (0+255),f,b
 10742  001A88  51C9               	movf	(??_pf_lseek+3)& (0+255),w,b
 10743  001A8A  6FCA               	movwf	(??_pf_lseek+4)& (0+255),b
 10744  001A8C  EE20 F016          	lfsr	2,22
 10745  001A90  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10746  001A92  26D9               	addwf	fsr2l,f,c
 10747  001A94  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10748  001A96  22DA               	addwfc	fsr2h,f,c
 10749  001A98  CFDE F0CB          	movff	postinc2,??_pf_lseek+5
 10750  001A9C  CFDE F0CC          	movff	postinc2,??_pf_lseek+6
 10751  001AA0  CFDE F0CD          	movff	postinc2,??_pf_lseek+7
 10752  001AA4  CFDE F0CE          	movff	postinc2,??_pf_lseek+8
 10753  001AA8  0E0A               	movlw	10
 10754  001AAA  EF5C  F00D         	goto	u10950
 10755  001AAE                     u10955:
 10756  001AAE  90D8               	bcf	status,0,c
 10757  001AB0  33CE               	rrcf	(??_pf_lseek+8)& (0+255),f,b
 10758  001AB2  33CD               	rrcf	(??_pf_lseek+7)& (0+255),f,b
 10759  001AB4  33CC               	rrcf	(??_pf_lseek+6)& (0+255),f,b
 10760  001AB6  33CB               	rrcf	(??_pf_lseek+5)& (0+255),f,b
 10761  001AB8                     u10950:
 10762  001AB8  2EE8               	decfsz	wreg,f,c
 10763  001ABA  EF57  F00D         	goto	u10955
 10764  001ABE  51C7               	movf	(??_pf_lseek+1)& (0+255),w,b
 10765  001AC0  15CB               	andwf	(??_pf_lseek+5)& (0+255),w,b
 10766  001AC2  6FCF               	movwf	(??_pf_lseek+9)& (0+255),b
 10767  001AC4  51C8               	movf	(??_pf_lseek+2)& (0+255),w,b
 10768  001AC6  15CC               	andwf	(??_pf_lseek+6)& (0+255),w,b
 10769  001AC8  6FD0               	movwf	(??_pf_lseek+10)& (0+255),b
 10770  001ACA  51C9               	movf	(??_pf_lseek+3)& (0+255),w,b
 10771  001ACC  15CD               	andwf	(??_pf_lseek+7)& (0+255),w,b
 10772  001ACE  6FD1               	movwf	(??_pf_lseek+11)& (0+255),b
 10773  001AD0  51CA               	movf	(??_pf_lseek+4)& (0+255),w,b
 10774  001AD2  15CE               	andwf	(??_pf_lseek+8)& (0+255),w,b
 10775  001AD4  6FD2               	movwf	(??_pf_lseek+12)& (0+255),b
 10776  001AD6  51D7               	movf	pf_lseek@sect& (0+255),w,b
 10777  001AD8  25CF               	addwf	(??_pf_lseek+9)& (0+255),w,b
 10778  001ADA  6FD3               	movwf	(??_pf_lseek+13)& (0+255),b
 10779  001ADC  51D8               	movf	(pf_lseek@sect+1)& (0+255),w,b
 10780  001ADE  21D0               	addwfc	(??_pf_lseek+10)& (0+255),w,b
 10781  001AE0  6FD4               	movwf	(??_pf_lseek+14)& (0+255),b
 10782  001AE2  51D9               	movf	(pf_lseek@sect+2)& (0+255),w,b
 10783  001AE4  21D1               	addwfc	(??_pf_lseek+11)& (0+255),w,b
 10784  001AE6  6FD5               	movwf	(??_pf_lseek+15)& (0+255),b
 10785  001AE8  51DA               	movf	(pf_lseek@sect+3)& (0+255),w,b
 10786  001AEA  21D2               	addwfc	(??_pf_lseek+12)& (0+255),w,b
 10787  001AEC  6FD6               	movwf	(??_pf_lseek+16)& (0+255),b
 10788  001AEE  EE20 F026          	lfsr	2,38
 10789  001AF2  51E7               	movf	pf_lseek@fs& (0+255),w,b
 10790  001AF4  26D9               	addwf	fsr2l,f,c
 10791  001AF6  51E8               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10792  001AF8  22DA               	addwfc	fsr2h,f,c
 10793  001AFA  C0D3  FFDE         	movff	??_pf_lseek+13,postinc2
 10794  001AFE  C0D4  FFDE         	movff	??_pf_lseek+14,postinc2
 10795  001B02  C0D5  FFDE         	movff	??_pf_lseek+15,postinc2
 10796  001B06  C0D6  FFDE         	movff	??_pf_lseek+16,postinc2
 10797  001B0A                     l8395:
 10798                           
 10799                           ; BSR set to: 0
 10800                           ;pff.c: 1040:  return FR_OK;
 10801  001B0A  0E00               	movlw	0
 10802  001B0C                     l389:
 10803                           
 10804                           ; BSR set to: 0
 10805  001B0C  0012               	return		;funcret
 10806  001B0E                     __end_of_pf_lseek:
 10807                           	callstack 0
 10808                           
 10809 ;; *************** function _get_fat *****************
 10810 ;; Defined at:
 10811 ;;		line 346 in file "pff.c"
 10812 ;; Parameters:    Size  Location     Type
 10813 ;;  clst            4   34[BANK0 ] unsigned long 
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;  buf             4   60[BANK0 ] unsigned char [4]
 10816 ;;  fs              2   64[BANK0 ] PTR struct .
 10817 ;;		 -> NULL(0), main@fs(42), 
 10818 ;; Return value:  Size  Location     Type
 10819 ;;                  4   34[BANK0 ] unsigned long 
 10820 ;; Registers used:
 10821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/0
 10824 ;;		On exit  : 0/0
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10827 ;;      Params:         0       4       0       0       0       0       0
 10828 ;;      Locals:         0       6       0       0       0       0       0
 10829 ;;      Temps:          0      22       0       0       0       0       0
 10830 ;;      Totals:         0      32       0       0       0       0       0
 10831 ;;Total ram usage:       32 bytes
 10832 ;; Hardware stack levels used: 1
 10833 ;; Hardware stack levels required when called: 10
 10834 ;; This function calls:
 10835 ;;		_disk_readp
 10836 ;; This function is called by:
 10837 ;;		_dir_next
 10838 ;;		_pf_read
 10839 ;;		_pf_lseek
 10840 ;;		_pf_write
 10841 ;; This function uses a non-reentrant model
 10842 ;;
 10843                           
 10844                           	psect	text33
 10845  0032C6                     __ptext33:
 10846                           	callstack 0
 10847  0032C6                     _get_fat:
 10848                           	callstack 17
 10849  0032C6                     
 10850                           ;pff.c: 347:  DWORD clst;pff.c: 349: {;pff.c: 350:  BYTE buf[4];;pff.c: 351:  FATFS *fs 
      +                          = FatFs;
 10851  0032C6  C0F1  F0C0         	movff	_FatFs,get_fat@fs
 10852  0032CA  C0F2  F0C1         	movff	_FatFs+1,get_fat@fs+1
 10853                           
 10854                           ;pff.c: 353:  if (clst < 2 || clst >= fs->n_fatent)
 10855  0032CE  0100               	movlb	0	; () banked
 10856  0032D0  51A5               	movf	(get_fat@clst+3)& (0+255),w,b
 10857  0032D2  11A4               	iorwf	(get_fat@clst+2)& (0+255),w,b
 10858  0032D4  11A3               	iorwf	(get_fat@clst+1)& (0+255),w,b
 10859  0032D6  E109               	bnz	u9410
 10860  0032D8  0E02               	movlw	2
 10861  0032DA  5DA2               	subwf	get_fat@clst& (0+255),w,b
 10862  0032DC  A0D8               	btfss	status,0,c
 10863  0032DE  EF73  F019         	goto	u9411
 10864  0032E2  EF75  F019         	goto	u9410
 10865  0032E6                     u9411:
 10866  0032E6  EF8A  F019         	goto	l7445
 10867  0032EA                     u9410:
 10868  0032EA                     
 10869                           ; BSR set to: 0
 10870  0032EA  EE20 F006          	lfsr	2,6
 10871  0032EE  51C0               	movf	get_fat@fs& (0+255),w,b
 10872  0032F0  26D9               	addwf	fsr2l,f,c
 10873  0032F2  51C1               	movf	(get_fat@fs+1)& (0+255),w,b
 10874  0032F4  22DA               	addwfc	fsr2h,f,c
 10875  0032F6  50DE               	movf	postinc2,w,c
 10876  0032F8  5DA2               	subwf	get_fat@clst& (0+255),w,b
 10877  0032FA  50DE               	movf	postinc2,w,c
 10878  0032FC  59A3               	subwfb	(get_fat@clst+1)& (0+255),w,b
 10879  0032FE  50DE               	movf	postinc2,w,c
 10880  003300  59A4               	subwfb	(get_fat@clst+2)& (0+255),w,b
 10881  003302  50DE               	movf	postinc2,w,c
 10882  003304  59A5               	subwfb	(get_fat@clst+3)& (0+255),w,b
 10883  003306  A0D8               	btfss	status,0,c
 10884  003308  EF88  F019         	goto	u9421
 10885  00330C  EF8A  F019         	goto	u9420
 10886  003310                     u9421:
 10887  003310  EF2E  F01A         	goto	l7459
 10888  003314                     u9420:
 10889  003314                     l7445:
 10890                           
 10891                           ;pff.c: 354:   return 1;
 10892  003314  0E01               	movlw	1
 10893  003316  0100               	movlb	0	; () banked
 10894  003318  6FA2               	movwf	?_get_fat& (0+255),b
 10895  00331A  0E00               	movlw	0
 10896  00331C  6FA3               	movwf	(?_get_fat+1)& (0+255),b
 10897  00331E  0E00               	movlw	0
 10898  003320  6FA4               	movwf	(?_get_fat+2)& (0+255),b
 10899  003322  0E00               	movlw	0
 10900  003324  6FA5               	movwf	(?_get_fat+3)& (0+255),b
 10901  003326  EF43  F01A         	goto	l196
 10902  00332A                     l7449:
 10903                           
 10904                           ; BSR set to: 0
 10905                           ;pff.c: 380:   if (disk_readp(buf, fs->fatbase + clst / 128, ((UINT)clst % 128) * 4, 4))
      +                           break;
 10906  00332A  0EBC               	movlw	low get_fat@buf
 10907  00332C  6F92               	movwf	disk_readp@buff& (0+255),b
 10908  00332E  0E00               	movlw	high get_fat@buf
 10909  003330  6F93               	movwf	(disk_readp@buff+1)& (0+255),b
 10910  003332  EE20 F00A          	lfsr	2,10
 10911  003336  51C0               	movf	get_fat@fs& (0+255),w,b
 10912  003338  26D9               	addwf	fsr2l,f,c
 10913  00333A  51C1               	movf	(get_fat@fs+1)& (0+255),w,b
 10914  00333C  22DA               	addwfc	fsr2h,f,c
 10915  00333E  CFDE F0A6          	movff	postinc2,??_get_fat
 10916  003342  CFDE F0A7          	movff	postinc2,??_get_fat+1
 10917  003346  CFDE F0A8          	movff	postinc2,??_get_fat+2
 10918  00334A  CFDE F0A9          	movff	postinc2,??_get_fat+3
 10919  00334E  C0A2  F0AA         	movff	get_fat@clst,??_get_fat+4
 10920  003352  C0A3  F0AB         	movff	get_fat@clst+1,??_get_fat+5
 10921  003356  C0A4  F0AC         	movff	get_fat@clst+2,??_get_fat+6
 10922  00335A  C0A5  F0AD         	movff	get_fat@clst+3,??_get_fat+7
 10923  00335E  0E08               	movlw	8
 10924  003360  EFB7  F019         	goto	u9430
 10925  003364                     u9435:
 10926  003364  90D8               	bcf	status,0,c
 10927  003366  33AD               	rrcf	(??_get_fat+7)& (0+255),f,b
 10928  003368  33AC               	rrcf	(??_get_fat+6)& (0+255),f,b
 10929  00336A  33AB               	rrcf	(??_get_fat+5)& (0+255),f,b
 10930  00336C  33AA               	rrcf	(??_get_fat+4)& (0+255),f,b
 10931  00336E                     u9430:
 10932  00336E  2EE8               	decfsz	wreg,f,c
 10933  003370  EFB2  F019         	goto	u9435
 10934  003374  51A6               	movf	??_get_fat& (0+255),w,b
 10935  003376  25AA               	addwf	(??_get_fat+4)& (0+255),w,b
 10936  003378  6F94               	movwf	disk_readp@sector& (0+255),b
 10937  00337A  51A7               	movf	(??_get_fat+1)& (0+255),w,b
 10938  00337C  21AB               	addwfc	(??_get_fat+5)& (0+255),w,b
 10939  00337E  6F95               	movwf	(disk_readp@sector+1)& (0+255),b
 10940  003380  51A8               	movf	(??_get_fat+2)& (0+255),w,b
 10941  003382  21AC               	addwfc	(??_get_fat+6)& (0+255),w,b
 10942  003384  6F96               	movwf	(disk_readp@sector+2)& (0+255),b
 10943  003386  51A9               	movf	(??_get_fat+3)& (0+255),w,b
 10944  003388  21AD               	addwfc	(??_get_fat+7)& (0+255),w,b
 10945  00338A  6F97               	movwf	(disk_readp@sector+3)& (0+255),b
 10946  00338C  0E7F               	movlw	127
 10947  00338E  15A2               	andwf	get_fat@clst& (0+255),w,b
 10948  003390  6FAE               	movwf	(??_get_fat+8)& (0+255),b
 10949  003392  0E00               	movlw	0
 10950  003394  15A3               	andwf	(get_fat@clst+1)& (0+255),w,b
 10951  003396  6FAF               	movwf	(??_get_fat+9)& (0+255),b
 10952  003398  90D8               	bcf	status,0,c
 10953  00339A  37AE               	rlcf	(??_get_fat+8)& (0+255),f,b
 10954  00339C  37AF               	rlcf	(??_get_fat+9)& (0+255),f,b
 10955  00339E  90D8               	bcf	status,0,c
 10956  0033A0  37AE               	rlcf	(??_get_fat+8)& (0+255),f,b
 10957  0033A2  37AF               	rlcf	(??_get_fat+9)& (0+255),f,b
 10958  0033A4  C0AE  F098         	movff	??_get_fat+8,disk_readp@offset
 10959  0033A8  C0AF  F099         	movff	??_get_fat+9,disk_readp@offset+1
 10960  0033AC  0E00               	movlw	0
 10961  0033AE  6F9B               	movwf	(disk_readp@count+1)& (0+255),b
 10962  0033B0  0E04               	movlw	4
 10963  0033B2  6F9A               	movwf	disk_readp@count& (0+255),b
 10964  0033B4  ECDC  F01B         	call	_disk_readp	;wreg free
 10965  0033B8  0900               	iorlw	0
 10966  0033BA  B4D8               	btfsc	status,2,c
 10967  0033BC  EFE2  F019         	goto	u9441
 10968  0033C0  EFE4  F019         	goto	u9440
 10969  0033C4                     u9441:
 10970  0033C4  EFE6  F019         	goto	l7453
 10971  0033C8                     u9440:
 10972  0033C8  EF8A  F019         	goto	l7445
 10973  0033CC                     l7453:
 10974                           
 10975                           ;pff.c: 381:   return (DWORD)(((DWORD)*((BYTE*)(buf)+3)<<24)|((DWORD)*((BYTE*)(buf)+2)<<
      +                          16)|((WORD)*((BYTE*)(buf)+1)<<8)|*(BYTE*)(buf)) & 0x0FFFFFFF;
 10976  0033CC  0100               	movlb	0	; () banked
 10977  0033CE  51BD               	movf	(get_fat@buf+1)& (0+255),w,b
 10978  0033D0  6FA7               	movwf	(??_get_fat+1)& (0+255),b
 10979  0033D2  6BA6               	clrf	??_get_fat& (0+255),b
 10980  0033D4  C0BE  F0A8         	movff	get_fat@buf+2,??_get_fat+2
 10981  0033D8  6BA9               	clrf	(??_get_fat+3)& (0+255),b
 10982  0033DA  6BAA               	clrf	(??_get_fat+4)& (0+255),b
 10983  0033DC  6BAB               	clrf	(??_get_fat+5)& (0+255),b
 10984  0033DE  C0A9  F0AB         	movff	??_get_fat+3,??_get_fat+5
 10985  0033E2  C0A8  F0AA         	movff	??_get_fat+2,??_get_fat+4
 10986  0033E6  6BA9               	clrf	(??_get_fat+3)& (0+255),b
 10987  0033E8  6BA8               	clrf	(??_get_fat+2)& (0+255),b
 10988  0033EA  C0BF  F0AC         	movff	get_fat@buf+3,??_get_fat+6
 10989  0033EE  6BAD               	clrf	(??_get_fat+7)& (0+255),b
 10990  0033F0  6BAE               	clrf	(??_get_fat+8)& (0+255),b
 10991  0033F2  6BAF               	clrf	(??_get_fat+9)& (0+255),b
 10992  0033F4  C0AC  F0AF         	movff	??_get_fat+6,??_get_fat+9
 10993  0033F8  6BAE               	clrf	(??_get_fat+8)& (0+255),b
 10994  0033FA  6BAD               	clrf	(??_get_fat+7)& (0+255),b
 10995  0033FC  6BAC               	clrf	(??_get_fat+6)& (0+255),b
 10996  0033FE  51A8               	movf	(??_get_fat+2)& (0+255),w,b
 10997  003400  11AC               	iorwf	(??_get_fat+6)& (0+255),w,b
 10998  003402  6FB0               	movwf	(??_get_fat+10)& (0+255),b
 10999  003404  51A9               	movf	(??_get_fat+3)& (0+255),w,b
 11000  003406  11AD               	iorwf	(??_get_fat+7)& (0+255),w,b
 11001  003408  6FB1               	movwf	(??_get_fat+11)& (0+255),b
 11002  00340A  51AA               	movf	(??_get_fat+4)& (0+255),w,b
 11003  00340C  11AE               	iorwf	(??_get_fat+8)& (0+255),w,b
 11004  00340E  6FB2               	movwf	(??_get_fat+12)& (0+255),b
 11005  003410  51AB               	movf	(??_get_fat+5)& (0+255),w,b
 11006  003412  11AF               	iorwf	(??_get_fat+9)& (0+255),w,b
 11007  003414  6FB3               	movwf	(??_get_fat+13)& (0+255),b
 11008  003416  51A6               	movf	??_get_fat& (0+255),w,b
 11009  003418  11B0               	iorwf	(??_get_fat+10)& (0+255),w,b
 11010  00341A  6FB4               	movwf	(??_get_fat+14)& (0+255),b
 11011  00341C  51A7               	movf	(??_get_fat+1)& (0+255),w,b
 11012  00341E  11B1               	iorwf	(??_get_fat+11)& (0+255),w,b
 11013  003420  6FB5               	movwf	(??_get_fat+15)& (0+255),b
 11014  003422  0E00               	movlw	0
 11015  003424  11B2               	iorwf	(??_get_fat+12)& (0+255),w,b
 11016  003426  6FB6               	movwf	(??_get_fat+16)& (0+255),b
 11017  003428  0E00               	movlw	0
 11018  00342A  11B3               	iorwf	(??_get_fat+13)& (0+255),w,b
 11019  00342C  6FB7               	movwf	(??_get_fat+17)& (0+255),b
 11020  00342E  51BC               	movf	get_fat@buf& (0+255),w,b
 11021  003430  11B4               	iorwf	(??_get_fat+14)& (0+255),w,b
 11022  003432  6FB8               	movwf	(??_get_fat+18)& (0+255),b
 11023  003434  51B5               	movf	(??_get_fat+15)& (0+255),w,b
 11024  003436  6FB9               	movwf	(??_get_fat+19)& (0+255),b
 11025  003438  51B6               	movf	(??_get_fat+16)& (0+255),w,b
 11026  00343A  6FBA               	movwf	(??_get_fat+20)& (0+255),b
 11027  00343C  51B7               	movf	(??_get_fat+17)& (0+255),w,b
 11028  00343E  6FBB               	movwf	(??_get_fat+21)& (0+255),b
 11029  003440  0EFF               	movlw	255
 11030  003442  15B8               	andwf	(??_get_fat+18)& (0+255),w,b
 11031  003444  6FA2               	movwf	?_get_fat& (0+255),b
 11032  003446  0EFF               	movlw	255
 11033  003448  15B9               	andwf	(??_get_fat+19)& (0+255),w,b
 11034  00344A  6FA3               	movwf	(?_get_fat+1)& (0+255),b
 11035  00344C  0EFF               	movlw	255
 11036  00344E  15BA               	andwf	(??_get_fat+20)& (0+255),w,b
 11037  003450  6FA4               	movwf	(?_get_fat+2)& (0+255),b
 11038  003452  0E0F               	movlw	15
 11039  003454  15BB               	andwf	(??_get_fat+21)& (0+255),w,b
 11040  003456  6FA5               	movwf	(?_get_fat+3)& (0+255),b
 11041  003458  EF43  F01A         	goto	l196
 11042  00345C                     l7459:
 11043                           
 11044                           ; BSR set to: 0
 11045  00345C  C0C0  FFD9         	movff	get_fat@fs,fsr2l
 11046  003460  C0C1  FFDA         	movff	get_fat@fs+1,fsr2h
 11047  003464  50DF               	movf	indf2,w,c
 11048  003466  6FA6               	movwf	??_get_fat& (0+255),b
 11049  003468  6BA7               	clrf	(??_get_fat+1)& (0+255),b
 11050                           
 11051                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11052                           ; Switch size 1, requested type "simple"
 11053                           ; Number of cases is 1, Range of values is 0 to 0
 11054                           ; switch strategies available:
 11055                           ; Name         Instructions Cycles
 11056                           ; simple_byte            4     3 (average)
 11057                           ;	Chosen strategy is simple_byte
 11058  00346A  51A7               	movf	(??_get_fat+1)& (0+255),w,b
 11059  00346C  0A00               	xorlw	0	; case 0
 11060  00346E  B4D8               	btfsc	status,2,c
 11061  003470  EF3C  F01A         	goto	l8957
 11062  003474  EF8A  F019         	goto	l7445
 11063  003478                     l8957:
 11064                           
 11065                           ; BSR set to: 0
 11066                           ; Switch size 1, requested type "simple"
 11067                           ; Number of cases is 1, Range of values is 3 to 3
 11068                           ; switch strategies available:
 11069                           ; Name         Instructions Cycles
 11070                           ; simple_byte            4     3 (average)
 11071                           ;	Chosen strategy is simple_byte
 11072  003478  51A6               	movf	??_get_fat& (0+255),w,b
 11073  00347A  0A03               	xorlw	3	; case 3
 11074  00347C  B4D8               	btfsc	status,2,c
 11075  00347E  EF95  F019         	goto	l7449
 11076  003482  EF8A  F019         	goto	l7445
 11077  003486                     l196:
 11078                           
 11079                           ; BSR set to: 0
 11080  003486  0012               	return		;funcret
 11081  003488                     __end_of_get_fat:
 11082                           	callstack 0
 11083                           
 11084 ;; *************** function _disk_readp *****************
 11085 ;; Defined at:
 11086 ;;		line 224 in file "pic_mmcp.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;  buff            2   18[BANK0 ] PTR unsigned char 
 11089 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), pf_mount@buf(36), 
 11090 ;;		 -> get_fat@buf(4), NULL(0), Line(128), 
 11091 ;;  sector          4   20[BANK0 ] unsigned long 
 11092 ;;  offset          2   24[BANK0 ] unsigned int 
 11093 ;;  count           2   26[BANK0 ] unsigned int 
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;  bc              2   32[BANK0 ] unsigned int 
 11096 ;;  rc              1   31[BANK0 ] unsigned char 
 11097 ;;  res             1   30[BANK0 ] enum E74
 11098 ;; Return value:  Size  Location     Type
 11099 ;;                  1    wreg      enum E3069
 11100 ;; Registers used:
 11101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11102 ;; Tracked objects:
 11103 ;;		On entry : 0/0
 11104 ;;		On exit  : 0/0
 11105 ;;		Unchanged: 0/0
 11106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11107 ;;      Params:         0      10       0       0       0       0       0
 11108 ;;      Locals:         0       4       0       0       0       0       0
 11109 ;;      Temps:          0       2       0       0       0       0       0
 11110 ;;      Totals:         0      16       0       0       0       0       0
 11111 ;;Total ram usage:       16 bytes
 11112 ;; Hardware stack levels used: 1
 11113 ;; Hardware stack levels required when called: 9
 11114 ;; This function calls:
 11115 ;;		_printf
 11116 ;;		_rcv_spi
 11117 ;;		_send_cmd
 11118 ;; This function is called by:
 11119 ;;		_main
 11120 ;;		_get_fat
 11121 ;;		_dir_find
 11122 ;;		_dir_read
 11123 ;;		_check_fs
 11124 ;;		_pf_mount
 11125 ;;		_pf_read
 11126 ;; This function uses a non-reentrant model
 11127 ;;
 11128                           
 11129                           	psect	text34
 11130  0037B8                     __ptext34:
 11131                           	callstack 0
 11132  0037B8                     _disk_readp:
 11133                           	callstack 19
 11134  0037B8                     
 11135                           ;pic_mmcp.c: 225:  BYTE *buff,;pic_mmcp.c: 226:  DWORD sector,;pic_mmcp.c: 227:  UINT of
      +                          fset,;pic_mmcp.c: 228:  UINT count;pic_mmcp.c: 230: {;pic_mmcp.c: 231:  DRESULT res;;pic
      +                          _mmcp.c: 232:  BYTE rc;;pic_mmcp.c: 233:  UINT bc;;pic_mmcp.c: 236:  if (!(CardType & 0x
      +                          08)) sector *= 512;
 11136  0037B8  B679               	btfsc	_CardType^0,3,c
 11137  0037BA  EFE1  F01B         	goto	u9271
 11138  0037BE  EFE3  F01B         	goto	u9270
 11139  0037C2                     u9271:
 11140  0037C2  EFED  F01B         	goto	l7385
 11141  0037C6                     u9270:
 11142  0037C6  0100               	movlb	0	; () banked
 11143  0037C8  0E09               	movlw	9
 11144  0037CA                     u9285:
 11145  0037CA  90D8               	bcf	status,0,c
 11146  0037CC  3794               	rlcf	disk_readp@sector& (0+255),f,b
 11147  0037CE  3795               	rlcf	(disk_readp@sector+1)& (0+255),f,b
 11148  0037D0  3796               	rlcf	(disk_readp@sector+2)& (0+255),f,b
 11149  0037D2  3797               	rlcf	(disk_readp@sector+3)& (0+255),f,b
 11150  0037D4  2EE8               	decfsz	wreg,f,c
 11151  0037D6  EFE5  F01B         	goto	u9285
 11152  0037DA                     l7385:
 11153                           
 11154                           ;pic_mmcp.c: 238:  res = RES_ERROR;
 11155  0037DA  0E01               	movlw	1
 11156  0037DC  0100               	movlb	0	; () banked
 11157  0037DE  6F9E               	movwf	disk_readp@res& (0+255),b
 11158  0037E0                     
 11159                           ; BSR set to: 0
 11160                           ;pic_mmcp.c: 239:  if (send_cmd((0x40+17), sector) == 0) {
 11161  0037E0  C094  F00E         	movff	disk_readp@sector,send_cmd@arg
 11162  0037E4  C095  F00F         	movff	disk_readp@sector+1,send_cmd@arg+1
 11163  0037E8  C096  F010         	movff	disk_readp@sector+2,send_cmd@arg+2
 11164  0037EC  C097  F011         	movff	disk_readp@sector+3,send_cmd@arg+3
 11165  0037F0  0E51               	movlw	81
 11166  0037F2  EC79  F027         	call	_send_cmd
 11167  0037F6  0900               	iorlw	0
 11168  0037F8  A4D8               	btfss	status,2,c
 11169  0037FA  EF01  F01C         	goto	u9291
 11170  0037FE  EF03  F01C         	goto	u9290
 11171  003802                     u9291:
 11172  003802  EF9F  F01C         	goto	l7423
 11173  003806                     u9290:
 11174  003806                     
 11175                           ;pic_mmcp.c: 241:   bc = 40000;
 11176  003806  0E9C               	movlw	156
 11177  003808  0100               	movlb	0	; () banked
 11178  00380A  6FA1               	movwf	(disk_readp@bc+1)& (0+255),b
 11179  00380C  0E40               	movlw	64
 11180  00380E  6FA0               	movwf	disk_readp@bc& (0+255),b
 11181  003810                     l7391:
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;pic_mmcp.c: 243:    rc = rcv_spi();
 11185  003810  ECB9  F02C         	call	_rcv_spi	;wreg free
 11186  003814  0100               	movlb	0	; () banked
 11187  003816  6F9F               	movwf	disk_readp@rc& (0+255),b
 11188  003818                     
 11189                           ; BSR set to: 0
 11190                           ;pic_mmcp.c: 244:   } while (rc == 0xFF && --bc);
 11191  003818  299F               	incf	disk_readp@rc& (0+255),w,b
 11192  00381A  A4D8               	btfss	status,2,c
 11193  00381C  EF12  F01C         	goto	u9301
 11194  003820  EF14  F01C         	goto	u9300
 11195  003824                     u9301:
 11196  003824  EF20  F01C         	goto	l7397
 11197  003828                     u9300:
 11198  003828                     
 11199                           ; BSR set to: 0
 11200  003828  07A0               	decf	disk_readp@bc& (0+255),f,b
 11201  00382A  A0D8               	btfss	status,0,c
 11202  00382C  07A1               	decf	(disk_readp@bc+1)& (0+255),f,b
 11203  00382E  51A0               	movf	disk_readp@bc& (0+255),w,b
 11204  003830  11A1               	iorwf	(disk_readp@bc+1)& (0+255),w,b
 11205  003832  A4D8               	btfss	status,2,c
 11206  003834  EF1E  F01C         	goto	u9311
 11207  003838  EF20  F01C         	goto	u9310
 11208  00383C                     u9311:
 11209  00383C  EF08  F01C         	goto	l7391
 11210  003840                     u9310:
 11211  003840                     l7397:
 11212                           
 11213                           ; BSR set to: 0
 11214                           ;pic_mmcp.c: 246:   if (rc == 0xFE) {
 11215  003840  0EFE               	movlw	254
 11216  003842  199F               	xorwf	disk_readp@rc& (0+255),w,b
 11217  003844  A4D8               	btfss	status,2,c
 11218  003846  EF27  F01C         	goto	u9321
 11219  00384A  EF29  F01C         	goto	u9320
 11220  00384E                     u9321:
 11221  00384E  EF9F  F01C         	goto	l7423
 11222  003852                     u9320:
 11223  003852                     
 11224                           ; BSR set to: 0
 11225                           ;pic_mmcp.c: 247:    bc = 514 - offset - count;
 11226  003852  C098  F09C         	movff	disk_readp@offset,??_disk_readp
 11227  003856  C099  F09D         	movff	disk_readp@offset+1,??_disk_readp+1
 11228  00385A  1F9C               	comf	??_disk_readp& (0+255),f,b
 11229  00385C  1F9D               	comf	(??_disk_readp+1)& (0+255),f,b
 11230  00385E  4B9C               	infsnz	??_disk_readp& (0+255),f,b
 11231  003860  2B9D               	incf	(??_disk_readp+1)& (0+255),f,b
 11232  003862  519A               	movf	disk_readp@count& (0+255),w,b
 11233  003864  5F9C               	subwf	??_disk_readp& (0+255),f,b
 11234  003866  519B               	movf	(disk_readp@count+1)& (0+255),w,b
 11235  003868  5B9D               	subwfb	(??_disk_readp+1)& (0+255),f,b
 11236  00386A  0E02               	movlw	2
 11237  00386C  259C               	addwf	??_disk_readp& (0+255),w,b
 11238  00386E  6FA0               	movwf	disk_readp@bc& (0+255),b
 11239  003870  0E02               	movlw	2
 11240  003872  219D               	addwfc	(??_disk_readp+1)& (0+255),w,b
 11241  003874  6FA1               	movwf	(disk_readp@bc+1)& (0+255),b
 11242                           
 11243                           ;pic_mmcp.c: 250:    if (offset) {
 11244  003876  5198               	movf	disk_readp@offset& (0+255),w,b
 11245  003878  1199               	iorwf	(disk_readp@offset+1)& (0+255),w,b
 11246  00387A  B4D8               	btfsc	status,2,c
 11247  00387C  EF42  F01C         	goto	u9331
 11248  003880  EF44  F01C         	goto	u9330
 11249  003884                     u9331:
 11250  003884  EF53  F01C         	goto	l7405
 11251  003888                     u9330:
 11252  003888                     l7401:
 11253                           
 11254                           ; BSR set to: 0
 11255  003888  ECB9  F02C         	call	_rcv_spi	;wreg free
 11256  00388C  0100               	movlb	0	; () banked
 11257  00388E  0798               	decf	disk_readp@offset& (0+255),f,b
 11258  003890  A0D8               	btfss	status,0,c
 11259  003892  0799               	decf	(disk_readp@offset+1)& (0+255),f,b
 11260  003894  5198               	movf	disk_readp@offset& (0+255),w,b
 11261  003896  1199               	iorwf	(disk_readp@offset+1)& (0+255),w,b
 11262  003898  A4D8               	btfss	status,2,c
 11263  00389A  EF51  F01C         	goto	u9341
 11264  00389E  EF53  F01C         	goto	u9340
 11265  0038A2                     u9341:
 11266  0038A2  EF44  F01C         	goto	l7401
 11267  0038A6                     u9340:
 11268  0038A6                     l7405:
 11269                           
 11270                           ; BSR set to: 0
 11271                           ;pic_mmcp.c: 255:    if (buff) {
 11272  0038A6  5192               	movf	disk_readp@buff& (0+255),w,b
 11273  0038A8  1193               	iorwf	(disk_readp@buff+1)& (0+255),w,b
 11274  0038AA  B4D8               	btfsc	status,2,c
 11275  0038AC  EF5A  F01C         	goto	u9351
 11276  0038B0  EF5C  F01C         	goto	u9350
 11277  0038B4                     u9351:
 11278  0038B4  EF74  F01C         	goto	l7413
 11279  0038B8                     u9350:
 11280  0038B8                     l7407:
 11281                           
 11282                           ; BSR set to: 0
 11283                           ;pic_mmcp.c: 257:      *buff++ = rcv_spi();
 11284  0038B8  ECB9  F02C         	call	_rcv_spi	;wreg free
 11285  0038BC  C092  FFD9         	movff	disk_readp@buff,fsr2l
 11286  0038C0  C093  FFDA         	movff	disk_readp@buff+1,fsr2h
 11287  0038C4  6EDF               	movwf	indf2,c
 11288  0038C6  0100               	movlb	0	; () banked
 11289  0038C8  4B92               	infsnz	disk_readp@buff& (0+255),f,b
 11290  0038CA  2B93               	incf	(disk_readp@buff+1)& (0+255),f,b
 11291  0038CC                     
 11292                           ; BSR set to: 0
 11293                           ;pic_mmcp.c: 258:     } while (--count);
 11294  0038CC  079A               	decf	disk_readp@count& (0+255),f,b
 11295  0038CE  A0D8               	btfss	status,0,c
 11296  0038D0  079B               	decf	(disk_readp@count+1)& (0+255),f,b
 11297  0038D2  519A               	movf	disk_readp@count& (0+255),w,b
 11298  0038D4  119B               	iorwf	(disk_readp@count+1)& (0+255),w,b
 11299  0038D6  A4D8               	btfss	status,2,c
 11300  0038D8  EF70  F01C         	goto	u9361
 11301  0038DC  EF72  F01C         	goto	u9360
 11302  0038E0                     u9361:
 11303  0038E0  EF5C  F01C         	goto	l7407
 11304  0038E4                     u9360:
 11305  0038E4  EF8E  F01C         	goto	l7417
 11306  0038E8                     l7413:
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;pic_mmcp.c: 261:      printf("%c", rcv_spi());
 11310  0038E8  0EB8               	movlw	low STR_21
 11311  0038EA  6F86               	movwf	printf@fmt& (0+255),b
 11312  0038EC  0E7D               	movlw	high STR_21
 11313  0038EE  6F87               	movwf	(printf@fmt+1)& (0+255),b
 11314  0038F0  ECB9  F02C         	call	_rcv_spi	;wreg free
 11315  0038F4  0100               	movlb	0	; () banked
 11316  0038F6  6F9C               	movwf	??_disk_readp& (0+255),b
 11317  0038F8  519C               	movf	??_disk_readp& (0+255),w,b
 11318  0038FA  6F88               	movwf	(?_printf+2)& (0+255),b
 11319  0038FC  6B89               	clrf	(?_printf+3)& (0+255),b
 11320  0038FE  EC5A  F02C         	call	_printf	;wreg free
 11321  003902                     
 11322                           ;pic_mmcp.c: 262:     } while (--count);
 11323  003902  0100               	movlb	0	; () banked
 11324  003904  079A               	decf	disk_readp@count& (0+255),f,b
 11325  003906  A0D8               	btfss	status,0,c
 11326  003908  079B               	decf	(disk_readp@count+1)& (0+255),f,b
 11327  00390A  519A               	movf	disk_readp@count& (0+255),w,b
 11328  00390C  119B               	iorwf	(disk_readp@count+1)& (0+255),w,b
 11329  00390E  A4D8               	btfss	status,2,c
 11330  003910  EF8C  F01C         	goto	u9371
 11331  003914  EF8E  F01C         	goto	u9370
 11332  003918                     u9371:
 11333  003918  EF74  F01C         	goto	l7413
 11334  00391C                     u9370:
 11335  00391C                     l7417:
 11336                           
 11337                           ; BSR set to: 0
 11338  00391C  ECB9  F02C         	call	_rcv_spi	;wreg free
 11339  003920  0100               	movlb	0	; () banked
 11340  003922  07A0               	decf	disk_readp@bc& (0+255),f,b
 11341  003924  A0D8               	btfss	status,0,c
 11342  003926  07A1               	decf	(disk_readp@bc+1)& (0+255),f,b
 11343  003928  51A0               	movf	disk_readp@bc& (0+255),w,b
 11344  00392A  11A1               	iorwf	(disk_readp@bc+1)& (0+255),w,b
 11345  00392C  A4D8               	btfss	status,2,c
 11346  00392E  EF9B  F01C         	goto	u9381
 11347  003932  EF9D  F01C         	goto	u9380
 11348  003936                     u9381:
 11349  003936  EF8E  F01C         	goto	l7417
 11350  00393A                     u9380:
 11351  00393A                     
 11352                           ; BSR set to: 0
 11353                           ;pic_mmcp.c: 268:    res = RES_OK;
 11354  00393A  0E00               	movlw	0
 11355  00393C  6F9E               	movwf	disk_readp@res& (0+255),b
 11356  00393E                     l7423:
 11357                           
 11358                           ;pic_mmcp.c: 272:  LATAbits.LA5 = 1;
 11359  00393E  8A89               	bsf	137,5,c	;volatile
 11360  003940                     
 11361                           ;pic_mmcp.c: 273:  rcv_spi();
 11362  003940  ECB9  F02C         	call	_rcv_spi	;wreg free
 11363  003944                     
 11364                           ;pic_mmcp.c: 275:  return res;
 11365  003944  0100               	movlb	0	; () banked
 11366  003946  519E               	movf	disk_readp@res& (0+255),w,b
 11367  003948                     
 11368                           ; BSR set to: 0
 11369  003948  0012               	return		;funcret
 11370  00394A                     __end_of_disk_readp:
 11371                           	callstack 0
 11372                           
 11373 ;; *************** function _send_cmd *****************
 11374 ;; Defined at:
 11375 ;;		line 122 in file "pic_mmcp.c"
 11376 ;; Parameters:    Size  Location     Type
 11377 ;;  cmd             1    wreg     unsigned char 
 11378 ;;  arg             4   13[COMRAM] unsigned long 
 11379 ;; Auto vars:     Size  Location     Type
 11380 ;;  cmd             1   18[COMRAM] unsigned char 
 11381 ;;  res             1   19[COMRAM] unsigned char 
 11382 ;;  n               1   17[COMRAM] unsigned char 
 11383 ;; Return value:  Size  Location     Type
 11384 ;;                  1    wreg      unsigned char 
 11385 ;; Registers used:
 11386 ;;		wreg, status,2, status,0, cstack
 11387 ;; Tracked objects:
 11388 ;;		On entry : 0/0
 11389 ;;		On exit  : 0/0
 11390 ;;		Unchanged: 0/0
 11391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11392 ;;      Params:         4       0       0       0       0       0       0
 11393 ;;      Locals:         3       0       0       0       0       0       0
 11394 ;;      Temps:          0       0       0       0       0       0       0
 11395 ;;      Totals:         7       0       0       0       0       0       0
 11396 ;;Total ram usage:        7 bytes
 11397 ;; Hardware stack levels used: 1
 11398 ;; Hardware stack levels required when called: 3
 11399 ;; This function calls:
 11400 ;;		_rcv_spi
 11401 ;;		_send_cmd2
 11402 ;;		_xmit_spi
 11403 ;; This function is called by:
 11404 ;;		_disk_initialize
 11405 ;;		_disk_readp
 11406 ;;		_disk_writep
 11407 ;; This function uses a non-reentrant model
 11408 ;;
 11409                           
 11410                           	psect	text35
 11411  004EF2                     __ptext35:
 11412                           	callstack 0
 11413  004EF2                     _send_cmd:
 11414                           	callstack 24
 11415                           
 11416                           ; BSR set to: 0
 11417                           ;incstack = 0
 11418                           ;send_cmd@cmd stored from wreg
 11419  004EF2  6E13               	movwf	send_cmd@cmd^0,c
 11420  004EF4                     
 11421                           ;pic_mmcp.c: 123:  BYTE cmd,;pic_mmcp.c: 124:  DWORD arg;pic_mmcp.c: 126: {;pic_mmcp.c: 
      +                          127:  BYTE n, res;;pic_mmcp.c: 129:  if (cmd & 0x80) {
 11422  004EF4  AE13               	btfss	send_cmd@cmd^0,7,c
 11423  004EF6  EF7F  F027         	goto	u9221
 11424  004EFA  EF81  F027         	goto	u9220
 11425  004EFE                     u9221:
 11426  004EFE  EF99  F027         	goto	l596
 11427  004F02                     u9220:
 11428  004F02                     
 11429                           ;pic_mmcp.c: 130:   cmd &= 0x7F;
 11430  004F02  9E13               	bcf	send_cmd@cmd^0,7,c
 11431  004F04                     
 11432                           ;pic_mmcp.c: 131:   res = send_cmd2((0x40+55), 0);
 11433  004F04  0E00               	movlw	0
 11434  004F06  6E07               	movwf	send_cmd2@arg^0,c
 11435  004F08  0E00               	movlw	0
 11436  004F0A  6E08               	movwf	(send_cmd2@arg+1)^0,c
 11437  004F0C  0E00               	movlw	0
 11438  004F0E  6E09               	movwf	(send_cmd2@arg+2)^0,c
 11439  004F10  0E00               	movlw	0
 11440  004F12  6E0A               	movwf	(send_cmd2@arg+3)^0,c
 11441  004F14  0E77               	movlw	119
 11442  004F16  EC7C  F029         	call	_send_cmd2
 11443  004F1A  6E14               	movwf	send_cmd@res^0,c
 11444  004F1C                     
 11445                           ;pic_mmcp.c: 132:   if (res > 1)
 11446  004F1C  0E01               	movlw	1
 11447  004F1E  6414               	cpfsgt	send_cmd@res^0,c
 11448  004F20  EF94  F027         	goto	u9231
 11449  004F24  EF96  F027         	goto	u9230
 11450  004F28                     u9231:
 11451  004F28  EF99  F027         	goto	l596
 11452  004F2C                     u9230:
 11453  004F2C                     l7351:
 11454                           
 11455                           ;pic_mmcp.c: 133:             return res;
 11456  004F2C  5014               	movf	send_cmd@res^0,w,c
 11457  004F2E  EFDA  F027         	goto	l598
 11458  004F32                     l596:
 11459                           
 11460                           ;pic_mmcp.c: 137:  LATAbits.LA5 = 1;
 11461  004F32  8A89               	bsf	137,5,c	;volatile
 11462  004F34                     
 11463                           ;pic_mmcp.c: 138:  rcv_spi();
 11464  004F34  ECB9  F02C         	call	_rcv_spi	;wreg free
 11465  004F38                     
 11466                           ;pic_mmcp.c: 139:  LATAbits.LA5 = 0;
 11467  004F38  9A89               	bcf	137,5,c	;volatile
 11468                           
 11469                           ;pic_mmcp.c: 140:  rcv_spi();
 11470  004F3A  ECB9  F02C         	call	_rcv_spi	;wreg free
 11471                           
 11472                           ;pic_mmcp.c: 143:  xmit_spi(cmd);
 11473  004F3E  5013               	movf	send_cmd@cmd^0,w,c
 11474  004F40  EC94  F02C         	call	_xmit_spi
 11475                           
 11476                           ;pic_mmcp.c: 144:  xmit_spi((BYTE)(arg >> 24));
 11477  004F44  5011               	movf	(send_cmd@arg+3)^0,w,c
 11478  004F46  EC94  F02C         	call	_xmit_spi
 11479                           
 11480                           ;pic_mmcp.c: 145:  xmit_spi((BYTE)(arg >> 16));
 11481  004F4A  5010               	movf	(send_cmd@arg+2)^0,w,c
 11482  004F4C  EC94  F02C         	call	_xmit_spi
 11483                           
 11484                           ;pic_mmcp.c: 146:  xmit_spi((BYTE)(arg >> 8));
 11485  004F50  500F               	movf	(send_cmd@arg+1)^0,w,c
 11486  004F52  EC94  F02C         	call	_xmit_spi
 11487                           
 11488                           ;pic_mmcp.c: 147:  xmit_spi((BYTE)arg);
 11489  004F56  500E               	movf	send_cmd@arg^0,w,c
 11490  004F58  EC94  F02C         	call	_xmit_spi
 11491  004F5C                     
 11492                           ;pic_mmcp.c: 148:  n = 0x01;
 11493  004F5C  0E01               	movlw	1
 11494  004F5E  6E12               	movwf	send_cmd@n^0,c
 11495  004F60                     
 11496                           ;pic_mmcp.c: 149:  if (cmd == (0x40+0)) n = 0x95;
 11497  004F60  0E40               	movlw	64
 11498  004F62  1813               	xorwf	send_cmd@cmd^0,w,c
 11499  004F64  A4D8               	btfss	status,2,c
 11500  004F66  EFB7  F027         	goto	u9241
 11501  004F6A  EFB9  F027         	goto	u9240
 11502  004F6E                     u9241:
 11503  004F6E  EFBB  F027         	goto	l7365
 11504  004F72                     u9240:
 11505  004F72  0E95               	movlw	149
 11506  004F74  6E12               	movwf	send_cmd@n^0,c
 11507  004F76                     l7365:
 11508                           
 11509                           ;pic_mmcp.c: 150:  if (cmd == (0x40+8)) n = 0x87;
 11510  004F76  0E48               	movlw	72
 11511  004F78  1813               	xorwf	send_cmd@cmd^0,w,c
 11512  004F7A  A4D8               	btfss	status,2,c
 11513  004F7C  EFC2  F027         	goto	u9251
 11514  004F80  EFC4  F027         	goto	u9250
 11515  004F84                     u9251:
 11516  004F84  EFC6  F027         	goto	l7369
 11517  004F88                     u9250:
 11518  004F88  0E87               	movlw	135
 11519  004F8A  6E12               	movwf	send_cmd@n^0,c
 11520  004F8C                     l7369:
 11521                           
 11522                           ;pic_mmcp.c: 151:  xmit_spi(n);
 11523  004F8C  5012               	movf	send_cmd@n^0,w,c
 11524  004F8E  EC94  F02C         	call	_xmit_spi
 11525  004F92                     
 11526                           ;pic_mmcp.c: 154:  n = 10;
 11527  004F92  0E0A               	movlw	10
 11528  004F94  6E12               	movwf	send_cmd@n^0,c
 11529  004F96                     l601:
 11530                           
 11531                           ;pic_mmcp.c: 156:   res = rcv_spi();
 11532  004F96  ECB9  F02C         	call	_rcv_spi	;wreg free
 11533  004F9A  6E14               	movwf	send_cmd@res^0,c
 11534  004F9C                     
 11535                           ;pic_mmcp.c: 157:  } while ((res & 0x80) && --n);
 11536  004F9C  AE14               	btfss	send_cmd@res^0,7,c
 11537  004F9E  EFD3  F027         	goto	u9261
 11538  004FA2  EFD5  F027         	goto	u9260
 11539  004FA6                     u9261:
 11540  004FA6  EF96  F027         	goto	l7351
 11541  004FAA                     u9260:
 11542  004FAA  2E12               	decfsz	send_cmd@n^0,f,c
 11543  004FAC  EFCB  F027         	goto	l601
 11544  004FB0  EF96  F027         	goto	l7351
 11545  004FB4                     l598:
 11546  004FB4  0012               	return		;funcret
 11547  004FB6                     __end_of_send_cmd:
 11548                           	callstack 0
 11549                           
 11550 ;; *************** function _send_cmd2 *****************
 11551 ;; Defined at:
 11552 ;;		line 89 in file "pic_mmcp.c"
 11553 ;; Parameters:    Size  Location     Type
 11554 ;;  cmd             1    wreg     unsigned char 
 11555 ;;  arg             4    6[COMRAM] unsigned long 
 11556 ;; Auto vars:     Size  Location     Type
 11557 ;;  cmd             1   11[COMRAM] unsigned char 
 11558 ;;  n               1   12[COMRAM] unsigned char 
 11559 ;;  res             1   10[COMRAM] unsigned char 
 11560 ;; Return value:  Size  Location     Type
 11561 ;;                  1    wreg      unsigned char 
 11562 ;; Registers used:
 11563 ;;		wreg, status,2, status,0, cstack
 11564 ;; Tracked objects:
 11565 ;;		On entry : 0/0
 11566 ;;		On exit  : 0/0
 11567 ;;		Unchanged: 0/0
 11568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11569 ;;      Params:         4       0       0       0       0       0       0
 11570 ;;      Locals:         3       0       0       0       0       0       0
 11571 ;;      Temps:          0       0       0       0       0       0       0
 11572 ;;      Totals:         7       0       0       0       0       0       0
 11573 ;;Total ram usage:        7 bytes
 11574 ;; Hardware stack levels used: 1
 11575 ;; Hardware stack levels required when called: 2
 11576 ;; This function calls:
 11577 ;;		_rcv_spi
 11578 ;;		_xmit_spi
 11579 ;; This function is called by:
 11580 ;;		_send_cmd
 11581 ;; This function uses a non-reentrant model
 11582 ;;
 11583                           
 11584                           	psect	text36
 11585  0052F8                     __ptext36:
 11586                           	callstack 0
 11587  0052F8                     _send_cmd2:
 11588                           	callstack 24
 11589                           
 11590                           ;incstack = 0
 11591                           ;send_cmd2@cmd stored from wreg
 11592  0052F8  6E0C               	movwf	send_cmd2@cmd^0,c
 11593  0052FA                     
 11594                           ;pic_mmcp.c: 90:  BYTE cmd,;pic_mmcp.c: 91:  DWORD arg;pic_mmcp.c: 93: {;pic_mmcp.c: 94:
      +                            BYTE n, res;;pic_mmcp.c: 97:  LATAbits.LA5 = 1;
 11595  0052FA  8A89               	bsf	137,5,c	;volatile
 11596  0052FC                     
 11597                           ;pic_mmcp.c: 98:  rcv_spi();
 11598  0052FC  ECB9  F02C         	call	_rcv_spi	;wreg free
 11599  005300                     
 11600                           ;pic_mmcp.c: 99:  LATAbits.LA5 = 0;
 11601  005300  9A89               	bcf	137,5,c	;volatile
 11602                           
 11603                           ;pic_mmcp.c: 100:  rcv_spi();
 11604  005302  ECB9  F02C         	call	_rcv_spi	;wreg free
 11605                           
 11606                           ;pic_mmcp.c: 103:  xmit_spi(cmd);
 11607  005306  500C               	movf	send_cmd2@cmd^0,w,c
 11608  005308  EC94  F02C         	call	_xmit_spi
 11609                           
 11610                           ;pic_mmcp.c: 104:  xmit_spi((BYTE)(arg >> 24));
 11611  00530C  500A               	movf	(send_cmd2@arg+3)^0,w,c
 11612  00530E  EC94  F02C         	call	_xmit_spi
 11613                           
 11614                           ;pic_mmcp.c: 105:  xmit_spi((BYTE)(arg >> 16));
 11615  005312  5009               	movf	(send_cmd2@arg+2)^0,w,c
 11616  005314  EC94  F02C         	call	_xmit_spi
 11617                           
 11618                           ;pic_mmcp.c: 106:  xmit_spi((BYTE)(arg >> 8));
 11619  005318  5008               	movf	(send_cmd2@arg+1)^0,w,c
 11620  00531A  EC94  F02C         	call	_xmit_spi
 11621                           
 11622                           ;pic_mmcp.c: 107:  xmit_spi((BYTE)arg);
 11623  00531E  5007               	movf	send_cmd2@arg^0,w,c
 11624  005320  EC94  F02C         	call	_xmit_spi
 11625  005324                     
 11626                           ;pic_mmcp.c: 108:  n = 0x01;
 11627  005324  0E01               	movlw	1
 11628  005326  6E0D               	movwf	send_cmd2@n^0,c
 11629  005328                     
 11630                           ;pic_mmcp.c: 109:  if (cmd == (0x40+0)) n = 0x95;
 11631  005328  0E40               	movlw	64
 11632  00532A  180C               	xorwf	send_cmd2@cmd^0,w,c
 11633  00532C  A4D8               	btfss	status,2,c
 11634  00532E  EF9B  F029         	goto	u9181
 11635  005332  EF9D  F029         	goto	u9180
 11636  005336                     u9181:
 11637  005336  EF9F  F029         	goto	l7313
 11638  00533A                     u9180:
 11639  00533A  0E95               	movlw	149
 11640  00533C  6E0D               	movwf	send_cmd2@n^0,c
 11641  00533E                     l7313:
 11642                           
 11643                           ;pic_mmcp.c: 110:  if (cmd == (0x40+8)) n = 0x87;
 11644  00533E  0E48               	movlw	72
 11645  005340  180C               	xorwf	send_cmd2@cmd^0,w,c
 11646  005342  A4D8               	btfss	status,2,c
 11647  005344  EFA6  F029         	goto	u9191
 11648  005348  EFA8  F029         	goto	u9190
 11649  00534C                     u9191:
 11650  00534C  EFAA  F029         	goto	l7317
 11651  005350                     u9190:
 11652  005350  0E87               	movlw	135
 11653  005352  6E0D               	movwf	send_cmd2@n^0,c
 11654  005354                     l7317:
 11655                           
 11656                           ;pic_mmcp.c: 111:  xmit_spi(n);
 11657  005354  500D               	movf	send_cmd2@n^0,w,c
 11658  005356  EC94  F02C         	call	_xmit_spi
 11659  00535A                     
 11660                           ;pic_mmcp.c: 114:  n = 10;
 11661  00535A  0E0A               	movlw	10
 11662  00535C  6E0D               	movwf	send_cmd2@n^0,c
 11663  00535E                     l589:
 11664                           
 11665                           ;pic_mmcp.c: 116:   res = rcv_spi();
 11666  00535E  ECB9  F02C         	call	_rcv_spi	;wreg free
 11667  005362  6E0B               	movwf	send_cmd2@res^0,c
 11668  005364                     
 11669                           ;pic_mmcp.c: 117:  } while ((res & 0x80) && --n);
 11670  005364  AE0B               	btfss	send_cmd2@res^0,7,c
 11671  005366  EFB7  F029         	goto	u9201
 11672  00536A  EFB9  F029         	goto	u9200
 11673  00536E                     u9201:
 11674  00536E  EFBC  F029         	goto	l7325
 11675  005372                     u9200:
 11676  005372  2E0D               	decfsz	send_cmd2@n^0,f,c
 11677  005374  EFAF  F029         	goto	l589
 11678  005378                     l7325:
 11679                           
 11680                           ;pic_mmcp.c: 119:  return res;
 11681  005378  500B               	movf	send_cmd2@res^0,w,c
 11682  00537A  0012               	return		;funcret
 11683  00537C                     __end_of_send_cmd2:
 11684                           	callstack 0
 11685                           
 11686 ;; *************** function _xmit_spi *****************
 11687 ;; Defined at:
 11688 ;;		line 45 in file "pic_mmcp.c"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;  d               1    wreg     unsigned char 
 11691 ;; Auto vars:     Size  Location     Type
 11692 ;;  d               1    5[COMRAM] unsigned char 
 11693 ;; Return value:  Size  Location     Type
 11694 ;;                  1    wreg      void 
 11695 ;; Registers used:
 11696 ;;		wreg
 11697 ;; Tracked objects:
 11698 ;;		On entry : 0/0
 11699 ;;		On exit  : 0/0
 11700 ;;		Unchanged: 0/0
 11701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11702 ;;      Params:         0       0       0       0       0       0       0
 11703 ;;      Locals:         1       0       0       0       0       0       0
 11704 ;;      Temps:          0       0       0       0       0       0       0
 11705 ;;      Totals:         1       0       0       0       0       0       0
 11706 ;;Total ram usage:        1 bytes
 11707 ;; Hardware stack levels used: 1
 11708 ;; Hardware stack levels required when called: 1
 11709 ;; This function calls:
 11710 ;;		Nothing
 11711 ;; This function is called by:
 11712 ;;		_send_cmd2
 11713 ;;		_send_cmd
 11714 ;;		_disk_writep
 11715 ;; This function uses a non-reentrant model
 11716 ;;
 11717                           
 11718                           	psect	text37
 11719  005928                     __ptext37:
 11720                           	callstack 0
 11721  005928                     _xmit_spi:
 11722                           	callstack 25
 11723                           
 11724                           ;incstack = 0
 11725                           ;xmit_spi@d stored from wreg
 11726  005928  6E06               	movwf	xmit_spi@d^0,c
 11727  00592A                     
 11728                           ;pic_mmcp.c: 45: void xmit_spi (BYTE d);pic_mmcp.c: 46: {;pic_mmcp.c: 47:  SSPBUF = d;
 11729  00592A  C006  FFC9         	movff	xmit_spi@d,4041	;volatile
 11730  00592E                     l573:
 11731  00592E  A69E               	btfss	3998,3,c	;volatile
 11732  005930  EF9C  F02C         	goto	u8981
 11733  005934  EF9E  F02C         	goto	u8980
 11734  005938                     u8981:
 11735  005938  EF97  F02C         	goto	l573
 11736  00593C                     u8980:
 11737  00593C                     
 11738                           ;pic_mmcp.c: 49:     SSPIF = 0;
 11739  00593C  969E               	bcf	3998,3,c	;volatile
 11740                           
 11741                           ;pic_mmcp.c: 50:  SSPBUF;
 11742  00593E  50C9               	movf	201,w,c	;volatile
 11743  005940  0012               	return		;funcret
 11744  005942                     __end_of_xmit_spi:
 11745                           	callstack 0
 11746                           
 11747 ;; *************** function _rcv_spi *****************
 11748 ;; Defined at:
 11749 ;;		line 53 in file "pic_mmcp.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;		None
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;		None
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1    wreg      unsigned char 
 11756 ;; Registers used:
 11757 ;;		wreg, status,2
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11763 ;;      Params:         0       0       0       0       0       0       0
 11764 ;;      Locals:         0       0       0       0       0       0       0
 11765 ;;      Temps:          0       0       0       0       0       0       0
 11766 ;;      Totals:         0       0       0       0       0       0       0
 11767 ;;Total ram usage:        0 bytes
 11768 ;; Hardware stack levels used: 1
 11769 ;; Hardware stack levels required when called: 1
 11770 ;; This function calls:
 11771 ;;		Nothing
 11772 ;; This function is called by:
 11773 ;;		_send_cmd2
 11774 ;;		_send_cmd
 11775 ;;		_disk_initialize
 11776 ;;		_disk_readp
 11777 ;;		_disk_writep
 11778 ;; This function uses a non-reentrant model
 11779 ;;
 11780                           
 11781                           	psect	text38
 11782  005972                     __ptext38:
 11783                           	callstack 0
 11784  005972                     _rcv_spi:
 11785                           	callstack 24
 11786  005972                     
 11787                           ;pic_mmcp.c: 55:     SSPBUF = 0xff;
 11788  005972  68C9               	setf	201,c	;volatile
 11789  005974                     l579:
 11790  005974  A69E               	btfss	3998,3,c	;volatile
 11791  005976  EFBF  F02C         	goto	u8991
 11792  00597A  EFC1  F02C         	goto	u8990
 11793  00597E                     u8991:
 11794  00597E  EFBA  F02C         	goto	l579
 11795  005982                     u8990:
 11796  005982                     
 11797                           ;pic_mmcp.c: 57:     SSPIF = 0;
 11798  005982  969E               	bcf	3998,3,c	;volatile
 11799  005984                     
 11800                           ;pic_mmcp.c: 58:  return SSPBUF;
 11801  005984  50C9               	movf	201,w,c	;volatile
 11802  005986  0012               	return		;funcret
 11803  005988                     __end_of_rcv_spi:
 11804                           	callstack 0
 11805                           
 11806 ;; *************** function _printf *****************
 11807 ;; Defined at:
 11808 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
 11809 ;; Parameters:    Size  Location     Type
 11810 ;;  fmt             2    6[BANK0 ] PTR const unsigned char 
 11811 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 11812 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 11813 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 11814 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 11815 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 11816 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 11817 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 11818 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;  ap              2   16[BANK0 ] PTR void [1]
 11821 ;;		 -> ?_printf(2), 
 11822 ;;  ret             2    0        int 
 11823 ;; Return value:  Size  Location     Type
 11824 ;;                  2    6[BANK0 ] int 
 11825 ;; Registers used:
 11826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11827 ;; Tracked objects:
 11828 ;;		On entry : 0/0
 11829 ;;		On exit  : 0/0
 11830 ;;		Unchanged: 0/0
 11831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11832 ;;      Params:         0      10       0       0       0       0       0
 11833 ;;      Locals:         0       2       0       0       0       0       0
 11834 ;;      Temps:          0       0       0       0       0       0       0
 11835 ;;      Totals:         0      12       0       0       0       0       0
 11836 ;;Total ram usage:       12 bytes
 11837 ;; Hardware stack levels used: 1
 11838 ;; Hardware stack levels required when called: 8
 11839 ;; This function calls:
 11840 ;;		_vfprintf
 11841 ;; This function is called by:
 11842 ;;		_put_rc
 11843 ;;		_put_drc
 11844 ;;		_main
 11845 ;;		_uart_gets
 11846 ;;		_put_dump
 11847 ;;		_disk_readp
 11848 ;; This function uses a non-reentrant model
 11849 ;;
 11850                           
 11851                           	psect	text39
 11852  0058B4                     __ptext39:
 11853                           	callstack 0
 11854  0058B4                     _printf:
 11855                           	callstack 21
 11856  0058B4  0E88               	movlw	low (?_printf+2)
 11857  0058B6  0100               	movlb	0	; () banked
 11858  0058B8  6F90               	movwf	printf@ap& (0+255),b
 11859  0058BA  0E00               	movlw	high (?_printf+2)
 11860  0058BC  6F91               	movwf	(printf@ap+1)& (0+255),b
 11861  0058BE                     
 11862                           ; BSR set to: 0
 11863  0058BE  0E00               	movlw	0
 11864  0058C0  6F80               	movwf	vfprintf@fp& (0+255),b
 11865  0058C2  0E00               	movlw	0
 11866  0058C4  6F81               	movwf	(vfprintf@fp+1)& (0+255),b
 11867  0058C6  C086  F082         	movff	printf@fmt,vfprintf@fmt
 11868  0058CA  C087  F083         	movff	printf@fmt+1,vfprintf@fmt+1
 11869  0058CE  0E90               	movlw	low printf@ap
 11870  0058D0  6F84               	movwf	vfprintf@ap& (0+255),b
 11871  0058D2  0E00               	movlw	high printf@ap
 11872  0058D4  6F85               	movwf	(vfprintf@ap+1)& (0+255),b
 11873  0058D6  ECAB  F02A         	call	_vfprintf	;wreg free
 11874  0058DA  0012               	return		;funcret
 11875  0058DC                     __end_of_printf:
 11876                           	callstack 0
 11877                           
 11878 ;; *************** function _vfprintf *****************
 11879 ;; Defined at:
 11880 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 11881 ;; Parameters:    Size  Location     Type
 11882 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 11883 ;;		 -> NULL(0), 
 11884 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 11885 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 11886 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 11887 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 11888 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 11889 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 11890 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 11891 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 11892 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 11893 ;;  ap              2    4[BANK0 ] PTR PTR void 
 11894 ;;		 -> printf@ap(2), 
 11895 ;; Auto vars:     Size  Location     Type
 11896 ;;  cfmt            2  113[COMRAM] PTR unsigned char 
 11897 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 11898 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 11899 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 11900 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 11901 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 11902 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 11903 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 11904 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 11905 ;; Return value:  Size  Location     Type
 11906 ;;                  2    0[BANK0 ] int 
 11907 ;; Registers used:
 11908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11909 ;; Tracked objects:
 11910 ;;		On entry : 0/0
 11911 ;;		On exit  : 0/0
 11912 ;;		Unchanged: 0/0
 11913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11914 ;;      Params:         0       6       0       0       0       0       0
 11915 ;;      Locals:         2       0       0       0       0       0       0
 11916 ;;      Temps:          0       0       0       0       0       0       0
 11917 ;;      Totals:         2       6       0       0       0       0       0
 11918 ;;Total ram usage:        8 bytes
 11919 ;; Hardware stack levels used: 1
 11920 ;; Hardware stack levels required when called: 7
 11921 ;; This function calls:
 11922 ;;		_vfpfcnvrt
 11923 ;; This function is called by:
 11924 ;;		_printf
 11925 ;; This function uses a non-reentrant model
 11926 ;;
 11927                           
 11928                           	psect	text40
 11929  005556                     __ptext40:
 11930                           	callstack 0
 11931  005556                     _vfprintf:
 11932                           	callstack 21
 11933  005556                     
 11934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 11935  005556  C082  F072         	movff	vfprintf@fmt,vfprintf@cfmt
 11936  00555A  C083  F073         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 11937  00555E                     
 11938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 11939  00555E  0E00               	movlw	0
 11940  005560  0100               	movlb	0	; () banked
 11941  005562  6FEC               	movwf	(_nout+1)& (0+255),b
 11942  005564  0E00               	movlw	0
 11943  005566  6FEB               	movwf	_nout& (0+255),b
 11944                           
 11945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11946  005568  EFC9  F02A         	goto	l7335
 11947  00556C                     l7333:
 11948                           
 11949                           ; BSR set to: 0
 11950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 11951  00556C  C080  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
 11952  005570  C081  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 11953  005574  0E72               	movlw	low vfprintf@cfmt
 11954  005576  6E4B               	movwf	vfpfcnvrt@fmt^0,c
 11955  005578  0E00               	movlw	high vfprintf@cfmt
 11956  00557A  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
 11957  00557C  C084  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
 11958  005580  C085  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 11959  005584  ECF0  F003         	call	_vfpfcnvrt	;wreg free
 11960  005588  5049               	movf	?_vfpfcnvrt^0,w,c
 11961  00558A  0100               	movlb	0	; () banked
 11962  00558C  27EB               	addwf	_nout& (0+255),f,b
 11963  00558E  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
 11964  005590  23EC               	addwfc	(_nout+1)& (0+255),f,b
 11965  005592                     l7335:
 11966                           
 11967                           ; BSR set to: 0
 11968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11969  005592  C072  FFF6         	movff	vfprintf@cfmt,tblptrl
 11970  005596  C073  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 11971  00559A                     	if	0	;tblptru may be non-zero
 11972  00559A                     	endif
 11973  00559A                     	if	0	;tblptru may be non-zero
 11974  00559A                     	endif
 11975  00559A  0008               	tblrd		*
 11976  00559C  50F5               	movf	tablat,w,c
 11977  00559E  0900               	iorlw	0
 11978  0055A0  A4D8               	btfss	status,2,c
 11979  0055A2  EFD5  F02A         	goto	u9211
 11980  0055A6  EFD7  F02A         	goto	u9210
 11981  0055AA                     u9211:
 11982  0055AA  EFB6  F02A         	goto	l7333
 11983  0055AE                     u9210:
 11984  0055AE                     
 11985                           ; BSR set to: 0
 11986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 11987  0055AE  C0EB  F080         	movff	_nout,?_vfprintf
 11988  0055B2  C0EC  F081         	movff	_nout+1,?_vfprintf+1
 11989  0055B6                     
 11990                           ; BSR set to: 0
 11991  0055B6  0012               	return		;funcret
 11992  0055B8                     __end_of_vfprintf:
 11993                           	callstack 0
 11994                           
 11995 ;; *************** function _vfpfcnvrt *****************
 11996 ;; Defined at:
 11997 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 11998 ;; Parameters:    Size  Location     Type
 11999 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
 12000 ;;		 -> NULL(0), 
 12001 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
 12002 ;;		 -> vfprintf@cfmt(2), 
 12003 ;;  ap              2   76[COMRAM] PTR PTR void 
 12004 ;;		 -> printf@ap(2), 
 12005 ;; Auto vars:     Size  Location     Type
 12006 ;;  llu             8  105[COMRAM] unsigned long long 
 12007 ;;  ll              8   96[COMRAM] long long 
 12008 ;;  f               4    0        long long 
 12009 ;;  vp              3    0        PTR void 
 12010 ;;  ct              3    0        unsigned char [3]
 12011 ;;  cp              2   92[COMRAM] PTR unsigned char 
 12012 ;;		 -> ?_printf(2), main@fno(22), put_rc@str(69), 
 12013 ;;  i               2    0        int 
 12014 ;;  done            2    0        int 
 12015 ;;  c               1  104[COMRAM] unsigned char 
 12016 ;; Return value:  Size  Location     Type
 12017 ;;                  2   72[COMRAM] int 
 12018 ;; Registers used:
 12019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12020 ;; Tracked objects:
 12021 ;;		On entry : 0/0
 12022 ;;		On exit  : 0/0
 12023 ;;		Unchanged: 0/0
 12024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12025 ;;      Params:         6       0       0       0       0       0       0
 12026 ;;      Locals:        21       0       0       0       0       0       0
 12027 ;;      Temps:         14       0       0       0       0       0       0
 12028 ;;      Totals:        41       0       0       0       0       0       0
 12029 ;;Total ram usage:       41 bytes
 12030 ;; Hardware stack levels used: 1
 12031 ;; Hardware stack levels required when called: 6
 12032 ;; This function calls:
 12033 ;;		_atoi
 12034 ;;		_dtoa
 12035 ;;		_fputc
 12036 ;;		_isdigit
 12037 ;;		_stoa
 12038 ;;		_strncmp
 12039 ;;		_utoa
 12040 ;;		_xtoa
 12041 ;; This function is called by:
 12042 ;;		_vfprintf
 12043 ;; This function uses a non-reentrant model
 12044 ;;
 12045                           
 12046                           	psect	text41
 12047  0007E0                     __ptext41:
 12048                           	callstack 0
 12049  0007E0                     _vfpfcnvrt:
 12050                           	callstack 21
 12051  0007E0                     
 12052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 12053  0007E0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12054  0007E4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12055  0007E8  CFDE FFF6          	movff	postinc2,tblptrl
 12056  0007EC  CFDD FFF7          	movff	postdec2,tblptrh
 12057  0007F0                     	if	0	;tblptru may be non-zero
 12058  0007F0                     	endif
 12059  0007F0                     	if	0	;tblptru may be non-zero
 12060  0007F0                     	endif
 12061  0007F0  0008               	tblrd		*
 12062  0007F2  50F5               	movf	tablat,w,c
 12063  0007F4  0A25               	xorlw	37
 12064  0007F6  A4D8               	btfss	status,2,c
 12065  0007F8  EF00  F004         	goto	u9001
 12066  0007FC  EF02  F004         	goto	u9000
 12067  000800                     u9001:
 12068  000800  EFB7  F007         	goto	l7293
 12069  000804                     u9000:
 12070  000804                     
 12071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 12072  000804  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12073  000808  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12074  00080C  2ADE               	incf	postinc2,f,c
 12075  00080E  0E00               	movlw	0
 12076  000810  22DD               	addwfc	postdec2,f,c
 12077  000812                     
 12078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 12079  000812  0E00               	movlw	0
 12080  000814  0100               	movlb	0	; () banked
 12081  000816  6FEE               	movwf	(_width+1)& (0+255),b
 12082  000818  0E00               	movlw	0
 12083  00081A  6FED               	movwf	_width& (0+255),b
 12084  00081C  C0ED  F077         	movff	_width,_flags
 12085  000820  C0EE  F078         	movff	_width+1,_flags+1
 12086  000824                     
 12087                           ; BSR set to: 0
 12088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 12089  000824  6875               	setf	_prec^0,c
 12090  000826  6876               	setf	(_prec+1)^0,c
 12091  000828                     
 12092                           ; BSR set to: 0
 12093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
 12094  000828  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12095  00082C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12096  000830  CFDE FFF6          	movff	postinc2,tblptrl
 12097  000834  CFDD FFF7          	movff	postdec2,tblptrh
 12098  000838                     	if	0	;tblptru may be non-zero
 12099  000838                     	endif
 12100  000838                     	if	0	;tblptru may be non-zero
 12101  000838                     	endif
 12102  000838  0008               	tblrd		*
 12103  00083A  50F5               	movf	tablat,w,c
 12104  00083C  0A2A               	xorlw	42
 12105  00083E  A4D8               	btfss	status,2,c
 12106  000840  EF24  F004         	goto	u9011
 12107  000844  EF26  F004         	goto	u9010
 12108  000848                     u9011:
 12109  000848  EF4F  F004         	goto	l7195
 12110  00084C                     u9010:
 12111  00084C                     
 12112                           ; BSR set to: 0
 12113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
 12114  00084C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12115  000850  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12116  000854  2ADE               	incf	postinc2,f,c
 12117  000856  0E00               	movlw	0
 12118  000858  22DD               	addwfc	postdec2,f,c
 12119                           
 12120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
 12121  00085A  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12122  00085E  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12123  000862  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12124  000866  0E02               	movlw	2
 12125  000868  26DE               	addwf	postinc2,f,c
 12126  00086A  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12127  00086E  0E00               	movlw	0
 12128  000870  22DD               	addwfc	postdec2,f,c
 12129  000872  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12130  000876  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12131  00087A  CFDE F0ED          	movff	postinc2,_width
 12132  00087E  CFDD F0EE          	movff	postdec2,_width+1
 12133  000882                     
 12134                           ; BSR set to: 0
 12135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
 12136  000882  BFEE               	btfsc	(_width+1)& (0+255),7,b
 12137  000884  EF48  F004         	goto	u9020
 12138  000888  EF46  F004         	goto	u9021
 12139  00088C                     u9021:
 12140  00088C  EF92  F004         	goto	l7205
 12141  000890                     u9020:
 12142  000890                     
 12143                           ; BSR set to: 0
 12144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
 12145  000890  8077               	bsf	_flags^0,0,c
 12146                           
 12147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
 12148  000892  6DED               	negf	_width& (0+255),b
 12149  000894  1FEE               	comf	(_width+1)& (0+255),f,b
 12150  000896  B0D8               	btfsc	status,0,c
 12151  000898  2BEE               	incf	(_width+1)& (0+255),f,b
 12152  00089A  EF92  F004         	goto	l7205
 12153  00089E                     l7195:
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
 12157  00089E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12158  0008A2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12159  0008A6  CFDE F00D          	movff	postinc2,atoi@s
 12160  0008AA  CFDD F00E          	movff	postdec2,atoi@s+1
 12161  0008AE  ECA5  F01C         	call	_atoi	;wreg free
 12162  0008B2  C00D  F0ED         	movff	?_atoi,_width
 12163  0008B6  C00E  F0EE         	movff	?_atoi+1,_width+1
 12164                           
 12165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12166  0008BA  EF66  F004         	goto	l7199
 12167  0008BE                     l7197:
 12168                           
 12169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
 12170  0008BE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12171  0008C2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12172  0008C6  2ADE               	incf	postinc2,f,c
 12173  0008C8  0E00               	movlw	0
 12174  0008CA  22DD               	addwfc	postdec2,f,c
 12175  0008CC                     l7199:
 12176  0008CC  0ED0               	movlw	208
 12177  0008CE  6E4F               	movwf	??_vfpfcnvrt^0,c
 12178  0008D0  0EFF               	movlw	255
 12179  0008D2  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
 12180  0008D4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12181  0008D8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12182  0008DC  CFDE FFF6          	movff	postinc2,tblptrl
 12183  0008E0  CFDD FFF7          	movff	postdec2,tblptrh
 12184  0008E4                     	if	0	;tblptru may be non-zero
 12185  0008E4                     	endif
 12186  0008E4                     	if	0	;tblptru may be non-zero
 12187  0008E4                     	endif
 12188  0008E4  0008               	tblrd		*
 12189  0008E6  50F5               	movf	tablat,w,c
 12190  0008E8  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
 12191  0008EA  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
 12192  0008EC  504F               	movf	??_vfpfcnvrt^0,w,c
 12193  0008EE  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
 12194  0008F0  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 12195  0008F2  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 12196  0008F4  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 12197  0008F6  E10A               	bnz	u9030
 12198  0008F8  0E0A               	movlw	10
 12199  0008FA  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
 12200  0008FC  A0D8               	btfss	status,0,c
 12201  0008FE  EF83  F004         	goto	u9031
 12202  000902  EF86  F004         	goto	u9030
 12203  000906                     u9031:
 12204  000906  0E01               	movlw	1
 12205  000908  EF87  F004         	goto	u9040
 12206  00090C                     u9030:
 12207  00090C  0E00               	movlw	0
 12208  00090E                     u9040:
 12209  00090E  6E5F               	movwf	_vfpfcnvrt$1922^0,c
 12210  000910  6A60               	clrf	(_vfpfcnvrt$1922+1)^0,c
 12211  000912  505F               	movf	_vfpfcnvrt$1922^0,w,c
 12212  000914  1060               	iorwf	(_vfpfcnvrt$1922+1)^0,w,c
 12213  000916  A4D8               	btfss	status,2,c
 12214  000918  EF90  F004         	goto	u9051
 12215  00091C  EF92  F004         	goto	u9050
 12216  000920                     u9051:
 12217  000920  EF5F  F004         	goto	l7197
 12218  000924                     u9050:
 12219  000924                     l7205:
 12220                           
 12221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 12222  000924  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12223  000928  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12224  00092C  CFDE FFF6          	movff	postinc2,tblptrl
 12225  000930  CFDD FFF7          	movff	postdec2,tblptrh
 12226  000934                     	if	0	;tblptru may be non-zero
 12227  000934                     	endif
 12228  000934                     	if	0	;tblptru may be non-zero
 12229  000934                     	endif
 12230  000934  0008               	tblrd		*
 12231  000936  50F5               	movf	tablat,w,c
 12232  000938  0A64               	xorlw	100
 12233  00093A  B4D8               	btfsc	status,2,c
 12234  00093C  EFA2  F004         	goto	u9061
 12235  000940  EFA4  F004         	goto	u9060
 12236  000944                     u9061:
 12237  000944  EFB6  F004         	goto	l7209
 12238  000948                     u9060:
 12239  000948  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12240  00094C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12241  000950  CFDE FFF6          	movff	postinc2,tblptrl
 12242  000954  CFDD FFF7          	movff	postdec2,tblptrh
 12243  000958                     	if	0	;tblptru may be non-zero
 12244  000958                     	endif
 12245  000958                     	if	0	;tblptru may be non-zero
 12246  000958                     	endif
 12247  000958  0008               	tblrd		*
 12248  00095A  50F5               	movf	tablat,w,c
 12249  00095C  0A69               	xorlw	105
 12250  00095E  A4D8               	btfss	status,2,c
 12251  000960  EFB4  F004         	goto	u9071
 12252  000964  EFB6  F004         	goto	u9070
 12253  000968                     u9071:
 12254  000968  EFF6  F004         	goto	l7215
 12255  00096C                     u9070:
 12256  00096C                     l7209:
 12257                           
 12258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 12259  00096C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12260  000970  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12261  000974  2ADE               	incf	postinc2,f,c
 12262  000976  0E00               	movlw	0
 12263  000978  22DD               	addwfc	postdec2,f,c
 12264                           
 12265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 12266  00097A  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12267  00097E  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12268  000982  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12269  000986  0E02               	movlw	2
 12270  000988  26DE               	addwf	postinc2,f,c
 12271  00098A  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12272  00098E  0E00               	movlw	0
 12273  000990  22DD               	addwfc	postdec2,f,c
 12274  000992  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12275  000996  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12276  00099A  CFDE F061          	movff	postinc2,vfpfcnvrt@ll
 12277  00099E  CFDD F062          	movff	postdec2,vfpfcnvrt@ll+1
 12278  0009A2  0E00               	movlw	0
 12279  0009A4  BE62               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 12280  0009A6  0EFF               	movlw	-1
 12281  0009A8  6E63               	movwf	(vfpfcnvrt@ll+2)^0,c
 12282  0009AA  6E64               	movwf	(vfpfcnvrt@ll+3)^0,c
 12283  0009AC  6E65               	movwf	(vfpfcnvrt@ll+4)^0,c
 12284  0009AE  6E66               	movwf	(vfpfcnvrt@ll+5)^0,c
 12285  0009B0  6E67               	movwf	(vfpfcnvrt@ll+6)^0,c
 12286  0009B2  6E68               	movwf	(vfpfcnvrt@ll+7)^0,c
 12287  0009B4                     
 12288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 12289  0009B4  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 12290  0009B8  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 12291  0009BC  C061  F024         	movff	vfpfcnvrt@ll,dtoa@d
 12292  0009C0  C062  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 12293  0009C4  C063  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 12294  0009C8  C064  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 12295  0009CC  C065  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 12296  0009D0  C066  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 12297  0009D4  C067  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 12298  0009D8  C068  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 12299  0009DC  EC88  F00F         	call	_dtoa	;wreg free
 12300  0009E0  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 12301  0009E4  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12302  0009E8  EFD2  F007         	goto	l1532
 12303  0009EC                     l7215:
 12304                           
 12305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
 12306  0009EC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12307  0009F0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12308  0009F4  CFDE F006          	movff	postinc2,strncmp@_l
 12309  0009F8  CFDD F007          	movff	postdec2,strncmp@_l+1
 12310  0009FC  0EAC               	movlw	low STR_32
 12311  0009FE  6E08               	movwf	strncmp@_r^0,c
 12312  000A00  0E7D               	movlw	high STR_32
 12313  000A02  6E09               	movwf	(strncmp@_r+1)^0,c
 12314  000A04  0E00               	movlw	0
 12315  000A06  6E0B               	movwf	(strncmp@n+1)^0,c
 12316  000A08  0E02               	movlw	2
 12317  000A0A  6E0A               	movwf	strncmp@n^0,c
 12318  000A0C  EC3B  F026         	call	_strncmp	;wreg free
 12319  000A10  5006               	movf	?_strncmp^0,w,c
 12320  000A12  1007               	iorwf	(?_strncmp+1)^0,w,c
 12321  000A14  B4D8               	btfsc	status,2,c
 12322  000A16  EF0F  F005         	goto	u9081
 12323  000A1A  EF11  F005         	goto	u9080
 12324  000A1E                     u9081:
 12325  000A1E  EF2C  F005         	goto	l7219
 12326  000A22                     u9080:
 12327  000A22  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12328  000A26  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12329  000A2A  CFDE F006          	movff	postinc2,strncmp@_l
 12330  000A2E  CFDD F007          	movff	postdec2,strncmp@_l+1
 12331  000A32  0EAF               	movlw	low STR_36
 12332  000A34  6E08               	movwf	strncmp@_r^0,c
 12333  000A36  0E7D               	movlw	high STR_36
 12334  000A38  6E09               	movwf	(strncmp@_r+1)^0,c
 12335  000A3A  0E00               	movlw	0
 12336  000A3C  6E0B               	movwf	(strncmp@n+1)^0,c
 12337  000A3E  0E02               	movlw	2
 12338  000A40  6E0A               	movwf	strncmp@n^0,c
 12339  000A42  EC3B  F026         	call	_strncmp	;wreg free
 12340  000A46  5006               	movf	?_strncmp^0,w,c
 12341  000A48  1007               	iorwf	(?_strncmp+1)^0,w,c
 12342  000A4A  A4D8               	btfss	status,2,c
 12343  000A4C  EF2A  F005         	goto	u9091
 12344  000A50  EF2C  F005         	goto	u9090
 12345  000A54                     u9091:
 12346  000A54  EF89  F005         	goto	l7225
 12347  000A58                     u9090:
 12348  000A58                     l7219:
 12349                           
 12350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
 12351  000A58  0E02               	movlw	2
 12352  000A5A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12353  000A5E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12354  000A62  26DE               	addwf	postinc2,f,c
 12355  000A64  0E00               	movlw	0
 12356  000A66  22DD               	addwfc	postdec2,f,c
 12357                           
 12358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 12359  000A68  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12360  000A6C  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12361  000A70  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12362  000A74  0E04               	movlw	4
 12363  000A76  26DE               	addwf	postinc2,f,c
 12364  000A78  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12365  000A7C  0E00               	movlw	0
 12366  000A7E  22DD               	addwfc	postdec2,f,c
 12367  000A80  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12368  000A84  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12369  000A88  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12370  000A8C  CFDE F052          	movff	postinc2,??_vfpfcnvrt+3
 12371  000A90  CFDE F053          	movff	postinc2,??_vfpfcnvrt+4
 12372  000A94  CFDE F054          	movff	postinc2,??_vfpfcnvrt+5
 12373  000A98  C051  F055         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
 12374  000A9C  C052  F056         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
 12375  000AA0  C053  F057         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
 12376  000AA4  C054  F058         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
 12377  000AA8  6A59               	clrf	(??_vfpfcnvrt+10)^0,c
 12378  000AAA  BE58               	btfsc	(??_vfpfcnvrt+9)^0,7,c
 12379  000AAC  6859               	setf	(??_vfpfcnvrt+10)^0,c
 12380  000AAE  C059  F05A         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
 12381  000AB2  C059  F05B         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
 12382  000AB6  C059  F05C         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
 12383  000ABA  C055  F061         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
 12384  000ABE  C056  F062         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
 12385  000AC2  C057  F063         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
 12386  000AC6  C058  F064         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
 12387  000ACA  C059  F065         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
 12388  000ACE  C05A  F066         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
 12389  000AD2  C05B  F067         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
 12390  000AD6  C05C  F068         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
 12391  000ADA                     
 12392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
 12393  000ADA  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 12394  000ADE  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 12395  000AE2  C061  F024         	movff	vfpfcnvrt@ll,dtoa@d
 12396  000AE6  C062  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 12397  000AEA  C063  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 12398  000AEE  C064  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 12399  000AF2  C065  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 12400  000AF6  C066  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 12401  000AFA  C067  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 12402  000AFE  C068  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 12403  000B02  EC88  F00F         	call	_dtoa	;wreg free
 12404  000B06  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 12405  000B0A  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12406  000B0E  EFD2  F007         	goto	l1532
 12407  000B12                     l7225:
 12408                           
 12409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
 12410  000B12  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12411  000B16  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12412  000B1A  CFDE FFF6          	movff	postinc2,tblptrl
 12413  000B1E  CFDD FFF7          	movff	postdec2,tblptrh
 12414  000B22                     	if	0	;tblptru may be non-zero
 12415  000B22                     	endif
 12416  000B22                     	if	0	;tblptru may be non-zero
 12417  000B22                     	endif
 12418  000B22  0008               	tblrd		*
 12419  000B24  50F5               	movf	tablat,w,c
 12420  000B26  0A73               	xorlw	115
 12421  000B28  A4D8               	btfss	status,2,c
 12422  000B2A  EF99  F005         	goto	u9101
 12423  000B2E  EF9B  F005         	goto	u9100
 12424  000B32                     u9101:
 12425  000B32  EFC6  F005         	goto	l7233
 12426  000B36                     u9100:
 12427  000B36                     
 12428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
 12429  000B36  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12430  000B3A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12431  000B3E  2ADE               	incf	postinc2,f,c
 12432  000B40  0E00               	movlw	0
 12433  000B42  22DD               	addwfc	postdec2,f,c
 12434                           
 12435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 12436  000B44  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12437  000B48  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12438  000B4C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12439  000B50  0E02               	movlw	2
 12440  000B52  26DE               	addwf	postinc2,f,c
 12441  000B54  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12442  000B58  0E00               	movlw	0
 12443  000B5A  22DD               	addwfc	postdec2,f,c
 12444  000B5C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12445  000B60  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12446  000B64  CFDE F05D          	movff	postinc2,vfpfcnvrt@cp
 12447  000B68  CFDD F05E          	movff	postdec2,vfpfcnvrt@cp+1
 12448  000B6C                     
 12449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
 12450  000B6C  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
 12451  000B70  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 12452  000B74  C05D  F012         	movff	vfpfcnvrt@cp,stoa@s
 12453  000B78  C05E  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
 12454  000B7C  EC10  F01B         	call	_stoa	;wreg free
 12455  000B80  C010  F049         	movff	?_stoa,?_vfpfcnvrt
 12456  000B84  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
 12457  000B88  EFD2  F007         	goto	l1532
 12458  000B8C                     l7233:
 12459                           
 12460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
 12461  000B8C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12462  000B90  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12463  000B94  CFDE FFF6          	movff	postinc2,tblptrl
 12464  000B98  CFDD FFF7          	movff	postdec2,tblptrh
 12465  000B9C                     	if	0	;tblptru may be non-zero
 12466  000B9C                     	endif
 12467  000B9C                     	if	0	;tblptru may be non-zero
 12468  000B9C                     	endif
 12469  000B9C  0008               	tblrd		*
 12470  000B9E  50F5               	movf	tablat,w,c
 12471  000BA0  0A75               	xorlw	117
 12472  000BA2  A4D8               	btfss	status,2,c
 12473  000BA4  EFD6  F005         	goto	u9111
 12474  000BA8  EFD8  F005         	goto	u9110
 12475  000BAC                     u9111:
 12476  000BAC  EF19  F006         	goto	l7241
 12477  000BB0                     u9110:
 12478  000BB0                     
 12479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
 12480  000BB0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12481  000BB4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12482  000BB8  2ADE               	incf	postinc2,f,c
 12483  000BBA  0E00               	movlw	0
 12484  000BBC  22DD               	addwfc	postdec2,f,c
 12485                           
 12486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 12487  000BBE  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12488  000BC2  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12489  000BC6  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12490  000BCA  0E02               	movlw	2
 12491  000BCC  26DE               	addwf	postinc2,f,c
 12492  000BCE  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12493  000BD2  0E00               	movlw	0
 12494  000BD4  22DD               	addwfc	postdec2,f,c
 12495  000BD6  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12496  000BDA  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12497  000BDE  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12498  000BE2  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 12499  000BE6  C051  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 12500  000BEA  C052  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 12501  000BEE  6A6C               	clrf	(vfpfcnvrt@llu+2)^0,c
 12502  000BF0  6A6D               	clrf	(vfpfcnvrt@llu+3)^0,c
 12503  000BF2  6A6E               	clrf	(vfpfcnvrt@llu+4)^0,c
 12504  000BF4  6A6F               	clrf	(vfpfcnvrt@llu+5)^0,c
 12505  000BF6  6A70               	clrf	(vfpfcnvrt@llu+6)^0,c
 12506  000BF8  6A71               	clrf	(vfpfcnvrt@llu+7)^0,c
 12507  000BFA                     
 12508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
 12509  000BFA  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 12510  000BFE  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 12511  000C02  C06A  F024         	movff	vfpfcnvrt@llu,utoa@d
 12512  000C06  C06B  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 12513  000C0A  C06C  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 12514  000C0E  C06D  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 12515  000C12  C06E  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 12516  000C16  C06F  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 12517  000C1A  C070  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 12518  000C1E  C071  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 12519  000C22  EC63  F018         	call	_utoa	;wreg free
 12520  000C26  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 12521  000C2A  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 12522  000C2E  EFD2  F007         	goto	l1532
 12523  000C32                     l7241:
 12524                           
 12525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12526  000C32  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12527  000C36  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12528  000C3A  CFDE F006          	movff	postinc2,strncmp@_l
 12529  000C3E  CFDD F007          	movff	postdec2,strncmp@_l+1
 12530  000C42  0EB2               	movlw	low STR_41
 12531  000C44  6E08               	movwf	strncmp@_r^0,c
 12532  000C46  0E7D               	movlw	high STR_41
 12533  000C48  6E09               	movwf	(strncmp@_r+1)^0,c
 12534  000C4A  0E00               	movlw	0
 12535  000C4C  6E0B               	movwf	(strncmp@n+1)^0,c
 12536  000C4E  0E02               	movlw	2
 12537  000C50  6E0A               	movwf	strncmp@n^0,c
 12538  000C52  EC3B  F026         	call	_strncmp	;wreg free
 12539  000C56  5006               	movf	?_strncmp^0,w,c
 12540  000C58  1007               	iorwf	(?_strncmp+1)^0,w,c
 12541  000C5A  A4D8               	btfss	status,2,c
 12542  000C5C  EF32  F006         	goto	u9121
 12543  000C60  EF34  F006         	goto	u9120
 12544  000C64                     u9121:
 12545  000C64  EF7C  F006         	goto	l7249
 12546  000C68                     u9120:
 12547  000C68                     
 12548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 12549  000C68  0E02               	movlw	2
 12550  000C6A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12551  000C6E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12552  000C72  26DE               	addwf	postinc2,f,c
 12553  000C74  0E00               	movlw	0
 12554  000C76  22DD               	addwfc	postdec2,f,c
 12555                           
 12556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
 12557  000C78  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12558  000C7C  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12559  000C80  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12560  000C84  0E04               	movlw	4
 12561  000C86  26DE               	addwf	postinc2,f,c
 12562  000C88  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12563  000C8C  0E00               	movlw	0
 12564  000C8E  22DD               	addwfc	postdec2,f,c
 12565  000C90  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12566  000C94  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12567  000C98  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12568  000C9C  CFDE F052          	movff	postinc2,??_vfpfcnvrt+3
 12569  000CA0  CFDE F053          	movff	postinc2,??_vfpfcnvrt+4
 12570  000CA4  CFDE F054          	movff	postinc2,??_vfpfcnvrt+5
 12571  000CA8  5051               	movf	(??_vfpfcnvrt+2)^0,w,c
 12572  000CAA  6E6A               	movwf	vfpfcnvrt@llu^0,c
 12573  000CAC  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 12574  000CAE  6E6B               	movwf	(vfpfcnvrt@llu+1)^0,c
 12575  000CB0  5053               	movf	(??_vfpfcnvrt+4)^0,w,c
 12576  000CB2  6E6C               	movwf	(vfpfcnvrt@llu+2)^0,c
 12577  000CB4  5054               	movf	(??_vfpfcnvrt+5)^0,w,c
 12578  000CB6  6E6D               	movwf	(vfpfcnvrt@llu+3)^0,c
 12579  000CB8  6A6E               	clrf	(vfpfcnvrt@llu+4)^0,c
 12580  000CBA  6A6F               	clrf	(vfpfcnvrt@llu+5)^0,c
 12581  000CBC  6A70               	clrf	(vfpfcnvrt@llu+6)^0,c
 12582  000CBE  6A71               	clrf	(vfpfcnvrt@llu+7)^0,c
 12583  000CC0                     
 12584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1219:            
      +                           return utoa(fp, llu);
 12585  000CC0  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 12586  000CC4  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 12587  000CC8  C06A  F024         	movff	vfpfcnvrt@llu,utoa@d
 12588  000CCC  C06B  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 12589  000CD0  C06C  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 12590  000CD4  C06D  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 12591  000CD8  C06E  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 12592  000CDC  C06F  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 12593  000CE0  C070  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 12594  000CE4  C071  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 12595  000CE8  EC63  F018         	call	_utoa	;wreg free
 12596  000CEC  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 12597  000CF0  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 12598  000CF4  EFD2  F007         	goto	l1532
 12599  000CF8                     l7249:
 12600                           
 12601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 12602  000CF8  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12603  000CFC  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12604  000D00  CFDE FFF6          	movff	postinc2,tblptrl
 12605  000D04  CFDD FFF7          	movff	postdec2,tblptrh
 12606  000D08                     	if	0	;tblptru may be non-zero
 12607  000D08                     	endif
 12608  000D08                     	if	0	;tblptru may be non-zero
 12609  000D08                     	endif
 12610  000D08  0008               	tblrd		*
 12611  000D0A  50F5               	movf	tablat,w,c
 12612  000D0C  0A78               	xorlw	120
 12613  000D0E  B4D8               	btfsc	status,2,c
 12614  000D10  EF8C  F006         	goto	u9131
 12615  000D14  EF8E  F006         	goto	u9130
 12616  000D18                     u9131:
 12617  000D18  EFA0  F006         	goto	l7253
 12618  000D1C                     u9130:
 12619  000D1C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12620  000D20  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12621  000D24  CFDE FFF6          	movff	postinc2,tblptrl
 12622  000D28  CFDD FFF7          	movff	postdec2,tblptrh
 12623  000D2C                     	if	0	;tblptru may be non-zero
 12624  000D2C                     	endif
 12625  000D2C                     	if	0	;tblptru may be non-zero
 12626  000D2C                     	endif
 12627  000D2C  0008               	tblrd		*
 12628  000D2E  50F5               	movf	tablat,w,c
 12629  000D30  0A58               	xorlw	88
 12630  000D32  A4D8               	btfss	status,2,c
 12631  000D34  EF9E  F006         	goto	u9141
 12632  000D38  EFA0  F006         	goto	u9140
 12633  000D3C                     u9141:
 12634  000D3C  EFEE  F006         	goto	l7263
 12635  000D40                     u9140:
 12636  000D40                     l7253:
 12637                           
 12638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
 12639  000D40  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12640  000D44  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12641  000D48  CFDE FFF6          	movff	postinc2,tblptrl
 12642  000D4C  CFDD FFF7          	movff	postdec2,tblptrh
 12643  000D50                     	if	0	;tblptru may be non-zero
 12644  000D50                     	endif
 12645  000D50                     	if	0	;tblptru may be non-zero
 12646  000D50                     	endif
 12647  000D50  0008               	tblrd		*
 12648  000D52  CFF5 F069          	movff	tablat,vfpfcnvrt@c
 12649  000D56                     
 12650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
 12651  000D56  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12652  000D5A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12653  000D5E  2ADE               	incf	postinc2,f,c
 12654  000D60  0E00               	movlw	0
 12655  000D62  22DD               	addwfc	postdec2,f,c
 12656  000D64                     
 12657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 12658  000D64  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12659  000D68  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12660  000D6C  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12661  000D70  0E02               	movlw	2
 12662  000D72  26DE               	addwf	postinc2,f,c
 12663  000D74  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12664  000D78  0E00               	movlw	0
 12665  000D7A  22DD               	addwfc	postdec2,f,c
 12666  000D7C  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12667  000D80  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12668  000D84  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12669  000D88  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 12670  000D8C  C051  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 12671  000D90  C052  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 12672  000D94  6A6C               	clrf	(vfpfcnvrt@llu+2)^0,c
 12673  000D96  6A6D               	clrf	(vfpfcnvrt@llu+3)^0,c
 12674  000D98  6A6E               	clrf	(vfpfcnvrt@llu+4)^0,c
 12675  000D9A  6A6F               	clrf	(vfpfcnvrt@llu+5)^0,c
 12676  000D9C  6A70               	clrf	(vfpfcnvrt@llu+6)^0,c
 12677  000D9E  6A71               	clrf	(vfpfcnvrt@llu+7)^0,c
 12678  000DA0                     
 12679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
 12680  000DA0  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 12681  000DA4  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 12682  000DA8  C06A  F024         	movff	vfpfcnvrt@llu,xtoa@d
 12683  000DAC  C06B  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 12684  000DB0  C06C  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 12685  000DB4  C06D  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 12686  000DB8  C06E  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 12687  000DBC  C06F  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 12688  000DC0  C070  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 12689  000DC4  C071  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 12690  000DC8  C069  F02C         	movff	vfpfcnvrt@c,xtoa@x
 12691  000DCC  ECF7  F010         	call	_xtoa	;wreg free
 12692  000DD0  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 12693  000DD4  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 12694  000DD8  EFD2  F007         	goto	l1532
 12695  000DDC                     l7263:
 12696                           
 12697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1307:         if 
      +                          (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((size
      +                          of("lX")/sizeof("lX"[0]))-1))) {
 12698  000DDC  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12699  000DE0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12700  000DE4  CFDE F006          	movff	postinc2,strncmp@_l
 12701  000DE8  CFDD F007          	movff	postdec2,strncmp@_l+1
 12702  000DEC  0EB5               	movlw	low STR_46
 12703  000DEE  6E08               	movwf	strncmp@_r^0,c
 12704  000DF0  0E7D               	movlw	high STR_46
 12705  000DF2  6E09               	movwf	(strncmp@_r+1)^0,c
 12706  000DF4  0E00               	movlw	0
 12707  000DF6  6E0B               	movwf	(strncmp@n+1)^0,c
 12708  000DF8  0E02               	movlw	2
 12709  000DFA  6E0A               	movwf	strncmp@n^0,c
 12710  000DFC  EC3B  F026         	call	_strncmp	;wreg free
 12711  000E00  5006               	movf	?_strncmp^0,w,c
 12712  000E02  1007               	iorwf	(?_strncmp+1)^0,w,c
 12713  000E04  B4D8               	btfsc	status,2,c
 12714  000E06  EF07  F007         	goto	u9151
 12715  000E0A  EF09  F007         	goto	u9150
 12716  000E0E                     u9151:
 12717  000E0E  EF24  F007         	goto	l7267
 12718  000E12                     u9150:
 12719  000E12  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12720  000E16  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12721  000E1A  CFDE F006          	movff	postinc2,strncmp@_l
 12722  000E1E  CFDD F007          	movff	postdec2,strncmp@_l+1
 12723  000E22  0EA9               	movlw	low STR_50
 12724  000E24  6E08               	movwf	strncmp@_r^0,c
 12725  000E26  0E7D               	movlw	high STR_50
 12726  000E28  6E09               	movwf	(strncmp@_r+1)^0,c
 12727  000E2A  0E00               	movlw	0
 12728  000E2C  6E0B               	movwf	(strncmp@n+1)^0,c
 12729  000E2E  0E02               	movlw	2
 12730  000E30  6E0A               	movwf	strncmp@n^0,c
 12731  000E32  EC3B  F026         	call	_strncmp	;wreg free
 12732  000E36  5006               	movf	?_strncmp^0,w,c
 12733  000E38  1007               	iorwf	(?_strncmp+1)^0,w,c
 12734  000E3A  A4D8               	btfss	status,2,c
 12735  000E3C  EF22  F007         	goto	u9161
 12736  000E40  EF24  F007         	goto	u9160
 12737  000E44                     u9161:
 12738  000E44  EF81  F007         	goto	l7277
 12739  000E48                     u9160:
 12740  000E48                     l7267:
 12741                           
 12742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1308: ;C:\Program
      +                           Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1310:             c = (*fmt)
      +                          [1];
 12743  000E48  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12744  000E4C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12745  000E50  CFDE F04F          	movff	postinc2,??_vfpfcnvrt
 12746  000E54  CFDD F050          	movff	postdec2,??_vfpfcnvrt+1
 12747  000E58  0E01               	movlw	1
 12748  000E5A  264F               	addwf	??_vfpfcnvrt^0,f,c
 12749  000E5C  0E00               	movlw	0
 12750  000E5E  2250               	addwfc	(??_vfpfcnvrt+1)^0,f,c
 12751  000E60  C04F  FFF6         	movff	??_vfpfcnvrt,tblptrl
 12752  000E64  C050  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 12753  000E68                     	if	0	;tblptru may be non-zero
 12754  000E68                     	endif
 12755  000E68                     	if	0	;tblptru may be non-zero
 12756  000E68                     	endif
 12757  000E68  0008               	tblrd		*
 12758  000E6A  CFF5 F069          	movff	tablat,vfpfcnvrt@c
 12759  000E6E                     
 12760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1311:            
      +                           *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 12761  000E6E  0E02               	movlw	2
 12762  000E70  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12763  000E74  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12764  000E78  26DE               	addwf	postinc2,f,c
 12765  000E7A  0E00               	movlw	0
 12766  000E7C  22DD               	addwfc	postdec2,f,c
 12767  000E7E                     
 12768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1312:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
 12769  000E7E  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12770  000E82  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12771  000E86  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12772  000E8A  0E04               	movlw	4
 12773  000E8C  26DE               	addwf	postinc2,f,c
 12774  000E8E  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12775  000E92  0E00               	movlw	0
 12776  000E94  22DD               	addwfc	postdec2,f,c
 12777  000E96  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12778  000E9A  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12779  000E9E  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12780  000EA2  CFDE F052          	movff	postinc2,??_vfpfcnvrt+3
 12781  000EA6  CFDE F053          	movff	postinc2,??_vfpfcnvrt+4
 12782  000EAA  CFDE F054          	movff	postinc2,??_vfpfcnvrt+5
 12783  000EAE  5051               	movf	(??_vfpfcnvrt+2)^0,w,c
 12784  000EB0  6E6A               	movwf	vfpfcnvrt@llu^0,c
 12785  000EB2  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 12786  000EB4  6E6B               	movwf	(vfpfcnvrt@llu+1)^0,c
 12787  000EB6  5053               	movf	(??_vfpfcnvrt+4)^0,w,c
 12788  000EB8  6E6C               	movwf	(vfpfcnvrt@llu+2)^0,c
 12789  000EBA  5054               	movf	(??_vfpfcnvrt+5)^0,w,c
 12790  000EBC  6E6D               	movwf	(vfpfcnvrt@llu+3)^0,c
 12791  000EBE  6A6E               	clrf	(vfpfcnvrt@llu+4)^0,c
 12792  000EC0  6A6F               	clrf	(vfpfcnvrt@llu+5)^0,c
 12793  000EC2  6A70               	clrf	(vfpfcnvrt@llu+6)^0,c
 12794  000EC4  6A71               	clrf	(vfpfcnvrt@llu+7)^0,c
 12795  000EC6                     
 12796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1314:            
      +                           return xtoa(fp, llu, c);
 12797  000EC6  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 12798  000ECA  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 12799  000ECE  C06A  F024         	movff	vfpfcnvrt@llu,xtoa@d
 12800  000ED2  C06B  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 12801  000ED6  C06C  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 12802  000EDA  C06D  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 12803  000EDE  C06E  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 12804  000EE2  C06F  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 12805  000EE6  C070  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 12806  000EEA  C071  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 12807  000EEE  C069  F02C         	movff	vfpfcnvrt@c,xtoa@x
 12808  000EF2  ECF7  F010         	call	_xtoa	;wreg free
 12809  000EF6  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 12810  000EFA  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 12811  000EFE  EFD2  F007         	goto	l1532
 12812  000F02                     l7277:
 12813                           
 12814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 12815  000F02  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12816  000F06  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12817  000F0A  CFDE FFF6          	movff	postinc2,tblptrl
 12818  000F0E  CFDD FFF7          	movff	postdec2,tblptrh
 12819  000F12                     	if	0	;tblptru may be non-zero
 12820  000F12                     	endif
 12821  000F12                     	if	0	;tblptru may be non-zero
 12822  000F12                     	endif
 12823  000F12  0008               	tblrd		*
 12824  000F14  50F5               	movf	tablat,w,c
 12825  000F16  0A25               	xorlw	37
 12826  000F18  A4D8               	btfss	status,2,c
 12827  000F1A  EF91  F007         	goto	u9171
 12828  000F1E  EF93  F007         	goto	u9170
 12829  000F22                     u9171:
 12830  000F22  EFAA  F007         	goto	l7287
 12831  000F26                     u9170:
 12832  000F26                     
 12833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 12834  000F26  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12835  000F2A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12836  000F2E  2ADE               	incf	postinc2,f,c
 12837  000F30  0E00               	movlw	0
 12838  000F32  22DD               	addwfc	postdec2,f,c
 12839  000F34                     
 12840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 12841  000F34  0E00               	movlw	0
 12842  000F36  6E08               	movwf	(fputc@c+1)^0,c
 12843  000F38  0E25               	movlw	37
 12844  000F3A  6E07               	movwf	fputc@c^0,c
 12845  000F3C  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 12846  000F40  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12847  000F44  EC31  F029         	call	_fputc	;wreg free
 12848  000F48                     l7283:
 12849                           
 12850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12851  000F48  0E00               	movlw	0
 12852  000F4A  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 12853  000F4C  0E01               	movlw	1
 12854  000F4E  6E49               	movwf	?_vfpfcnvrt^0,c
 12855  000F50  EFD2  F007         	goto	l1532
 12856  000F54                     l7287:
 12857                           
 12858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12859  000F54  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12860  000F58  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12861  000F5C  2ADE               	incf	postinc2,f,c
 12862  000F5E  0E00               	movlw	0
 12863  000F60  22DD               	addwfc	postdec2,f,c
 12864  000F62                     
 12865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12866  000F62  0E00               	movlw	0
 12867  000F64  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 12868  000F66  0E00               	movlw	0
 12869  000F68  6E49               	movwf	?_vfpfcnvrt^0,c
 12870  000F6A  EFD2  F007         	goto	l1532
 12871  000F6E                     l7293:
 12872                           
 12873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12874  000F6E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12875  000F72  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12876  000F76  CFDE FFF6          	movff	postinc2,tblptrl
 12877  000F7A  CFDD FFF7          	movff	postdec2,tblptrh
 12878  000F7E                     	if	0	;tblptru may be non-zero
 12879  000F7E                     	endif
 12880  000F7E                     	if	0	;tblptru may be non-zero
 12881  000F7E                     	endif
 12882  000F7E  0008               	tblrd		*
 12883  000F80  50F5               	movf	tablat,w,c
 12884  000F82  6E07               	movwf	fputc@c^0,c
 12885  000F84  6A08               	clrf	(fputc@c+1)^0,c
 12886  000F86  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 12887  000F8A  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12888  000F8E  EC31  F029         	call	_fputc	;wreg free
 12889  000F92                     
 12890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12891  000F92  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12892  000F96  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12893  000F9A  2ADE               	incf	postinc2,f,c
 12894  000F9C  0E00               	movlw	0
 12895  000F9E  22DD               	addwfc	postdec2,f,c
 12896  000FA0  EFA4  F007         	goto	l7283
 12897  000FA4                     l1532:
 12898  000FA4  0012               	return		;funcret
 12899  000FA6                     __end_of_vfpfcnvrt:
 12900                           	callstack 0
 12901                           
 12902 ;; *************** function _xtoa *****************
 12903 ;; Defined at:
 12904 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 12905 ;; Parameters:    Size  Location     Type
 12906 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 12907 ;;		 -> NULL(0), 
 12908 ;;  d               8   35[COMRAM] unsigned long long 
 12909 ;;  x               1   43[COMRAM] unsigned char 
 12910 ;; Auto vars:     Size  Location     Type
 12911 ;;  n               8   60[COMRAM] unsigned long long 
 12912 ;;  c               2   70[COMRAM] int 
 12913 ;;  i               2   68[COMRAM] int 
 12914 ;;  w               2   58[COMRAM] int 
 12915 ;;  p               2   56[COMRAM] int 
 12916 ;; Return value:  Size  Location     Type
 12917 ;;                  2   33[COMRAM] int 
 12918 ;; Registers used:
 12919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12920 ;; Tracked objects:
 12921 ;;		On entry : 0/0
 12922 ;;		On exit  : 0/0
 12923 ;;		Unchanged: 0/0
 12924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12925 ;;      Params:        11       0       0       0       0       0       0
 12926 ;;      Locals:        20       0       0       0       0       0       0
 12927 ;;      Temps:          8       0       0       0       0       0       0
 12928 ;;      Totals:        39       0       0       0       0       0       0
 12929 ;;Total ram usage:       39 bytes
 12930 ;; Hardware stack levels used: 1
 12931 ;; Hardware stack levels required when called: 5
 12932 ;; This function calls:
 12933 ;;		_isalpha
 12934 ;;		_isupper
 12935 ;;		_pad
 12936 ;;		_toupper
 12937 ;; This function is called by:
 12938 ;;		_vfpfcnvrt
 12939 ;; This function uses a non-reentrant model
 12940 ;;
 12941                           
 12942                           	psect	text42
 12943  0021EE                     __ptext42:
 12944                           	callstack 0
 12945  0021EE                     _xtoa:
 12946                           	callstack 21
 12947  0021EE                     
 12948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
 12949  0021EE  BE76               	btfsc	(_prec+1)^0,7,c
 12950  0021F0  EFFC  F010         	goto	u8691
 12951  0021F4  EFFE  F010         	goto	u8690
 12952  0021F8                     u8691:
 12953  0021F8  EFFF  F010         	goto	l7047
 12954  0021FC                     u8690:
 12955  0021FC                     
 12956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
 12957  0021FC  9277               	bcf	_flags^0,1,c
 12958  0021FE                     l7047:
 12959                           
 12960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
 12961  0021FE  BE76               	btfsc	(_prec+1)^0,7,c
 12962  002200  EF0C  F011         	goto	u8700
 12963  002204  5076               	movf	(_prec+1)^0,w,c
 12964  002206  E106               	bnz	u8701
 12965  002208  0475               	decf	_prec^0,w,c
 12966  00220A  B0D8               	btfsc	status,0,c
 12967  00220C  EF0A  F011         	goto	u8701
 12968  002210  EF0C  F011         	goto	u8700
 12969  002214                     u8701:
 12970  002214  EF12  F011         	goto	l1490
 12971  002218                     u8700:
 12972  002218  0E00               	movlw	0
 12973  00221A  6E3A               	movwf	(xtoa@p+1)^0,c
 12974  00221C  0E01               	movlw	1
 12975  00221E  6E39               	movwf	xtoa@p^0,c
 12976  002220  EF16  F011         	goto	l1492
 12977  002224                     l1490:
 12978  002224  C075  F039         	movff	_prec,xtoa@p
 12979  002228  C076  F03A         	movff	_prec+1,xtoa@p+1
 12980  00222C                     l1492:
 12981                           
 12982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
 12983  00222C  C0ED  F03B         	movff	_width,xtoa@w
 12984  002230  C0EE  F03C         	movff	_width+1,xtoa@w+1
 12985                           
 12986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
 12987  002234  A877               	btfss	_flags^0,4,c
 12988  002236  EF1F  F011         	goto	u8711
 12989  00223A  EF21  F011         	goto	u8710
 12990  00223E                     u8711:
 12991  00223E  EF25  F011         	goto	l7053
 12992  002242                     u8710:
 12993  002242                     
 12994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
 12995  002242  0EFE               	movlw	254
 12996  002244  263B               	addwf	xtoa@w^0,f,c
 12997  002246  0EFF               	movlw	255
 12998  002248  223C               	addwfc	(xtoa@w+1)^0,f,c
 12999  00224A                     l7053:
 13000                           
 13001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
 13002  00224A  C024  F03D         	movff	xtoa@d,xtoa@n
 13003  00224E  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 13004  002252  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 13005  002256  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 13006  00225A  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 13007  00225E  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 13008  002262  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 13009  002266  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 13010  00226A                     
 13011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
 13012  00226A  0E00               	movlw	0
 13013  00226C  6E46               	movwf	(xtoa@i+1)^0,c
 13014  00226E  0E1F               	movlw	31
 13015  002270  6E45               	movwf	xtoa@i^0,c
 13016  002272                     
 13017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
 13018  002272  0E00               	movlw	0
 13019  002274  0101               	movlb	1	; () banked
 13020  002276  6FE0               	movwf	(_dbuf+31)& (0+255),b
 13021                           
 13022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13023  002278  EFF1  F011         	goto	l7089
 13024  00227C                     l7059:
 13025                           
 13026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
 13027  00227C  0645               	decf	xtoa@i^0,f,c
 13028  00227E  A0D8               	btfss	status,0,c
 13029  002280  0646               	decf	(xtoa@i+1)^0,f,c
 13030  002282                     
 13031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
 13032  002282  0E0F               	movlw	15
 13033  002284  143D               	andwf	xtoa@n^0,w,c
 13034  002286  6E47               	movwf	xtoa@c^0,c
 13035  002288  6A48               	clrf	(xtoa@c+1)^0,c
 13036  00228A                     
 13037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
 13038  00228A  BE48               	btfsc	(xtoa@c+1)^0,7,c
 13039  00228C  EF51  F011         	goto	u8721
 13040  002290  5048               	movf	(xtoa@c+1)^0,w,c
 13041  002292  E109               	bnz	u8720
 13042  002294  0E0A               	movlw	10
 13043  002296  5C47               	subwf	xtoa@c^0,w,c
 13044  002298  A0D8               	btfss	status,0,c
 13045  00229A  EF51  F011         	goto	u8721
 13046  00229E  EF53  F011         	goto	u8720
 13047  0022A2                     u8721:
 13048  0022A2  EF5B  F011         	goto	l7067
 13049  0022A6                     u8720:
 13050  0022A6  0E57               	movlw	87
 13051  0022A8  2447               	addwf	xtoa@c^0,w,c
 13052  0022AA  6E47               	movwf	xtoa@c^0,c
 13053  0022AC  0E00               	movlw	0
 13054  0022AE  2048               	addwfc	(xtoa@c+1)^0,w,c
 13055  0022B0  6E48               	movwf	(xtoa@c+1)^0,c
 13056  0022B2  EF61  F011         	goto	l1499
 13057  0022B6                     l7067:
 13058  0022B6  0E30               	movlw	48
 13059  0022B8  2447               	addwf	xtoa@c^0,w,c
 13060  0022BA  6E47               	movwf	xtoa@c^0,c
 13061  0022BC  0E00               	movlw	0
 13062  0022BE  2048               	addwfc	(xtoa@c+1)^0,w,c
 13063  0022C0  6E48               	movwf	(xtoa@c+1)^0,c
 13064  0022C2                     l1499:
 13065  0022C2  0EBF               	movlw	191
 13066  0022C4  6E2D               	movwf	??_xtoa^0,c
 13067  0022C6  0EFF               	movlw	255
 13068  0022C8  6E2E               	movwf	(??_xtoa+1)^0,c
 13069  0022CA  502C               	movf	xtoa@x^0,w,c
 13070  0022CC  6E2F               	movwf	(??_xtoa+2)^0,c
 13071  0022CE  6A30               	clrf	(??_xtoa+3)^0,c
 13072  0022D0  502D               	movf	??_xtoa^0,w,c
 13073  0022D2  262F               	addwf	(??_xtoa+2)^0,f,c
 13074  0022D4  502E               	movf	(??_xtoa+1)^0,w,c
 13075  0022D6  2230               	addwfc	(??_xtoa+3)^0,f,c
 13076  0022D8  5030               	movf	(??_xtoa+3)^0,w,c
 13077  0022DA  E10A               	bnz	u8730
 13078  0022DC  0E1A               	movlw	26
 13079  0022DE  5C2F               	subwf	(??_xtoa+2)^0,w,c
 13080  0022E0  A0D8               	btfss	status,0,c
 13081  0022E2  EF75  F011         	goto	u8731
 13082  0022E6  EF78  F011         	goto	u8730
 13083  0022EA                     u8731:
 13084  0022EA  0E01               	movlw	1
 13085  0022EC  EF79  F011         	goto	u8740
 13086  0022F0                     u8730:
 13087  0022F0  0E00               	movlw	0
 13088  0022F2                     u8740:
 13089  0022F2  6E35               	movwf	_xtoa$1907^0,c
 13090  0022F4  6A36               	clrf	(_xtoa$1907+1)^0,c
 13091  0022F6  5035               	movf	_xtoa$1907^0,w,c
 13092  0022F8  1036               	iorwf	(_xtoa$1907+1)^0,w,c
 13093  0022FA  B4D8               	btfsc	status,2,c
 13094  0022FC  EF82  F011         	goto	u8751
 13095  002300  EF84  F011         	goto	u8750
 13096  002304                     u8751:
 13097  002304  EFB4  F011         	goto	l7081
 13098  002308                     u8750:
 13099  002308  0E9F               	movlw	159
 13100  00230A  6E2D               	movwf	??_xtoa^0,c
 13101  00230C  0EFF               	movlw	255
 13102  00230E  6E2E               	movwf	(??_xtoa+1)^0,c
 13103  002310  0E20               	movlw	32
 13104  002312  1047               	iorwf	xtoa@c^0,w,c
 13105  002314  6E2F               	movwf	(??_xtoa+2)^0,c
 13106  002316  0E00               	movlw	0
 13107  002318  1048               	iorwf	(xtoa@c+1)^0,w,c
 13108  00231A  6E30               	movwf	(??_xtoa+3)^0,c
 13109  00231C  502D               	movf	??_xtoa^0,w,c
 13110  00231E  262F               	addwf	(??_xtoa+2)^0,f,c
 13111  002320  502E               	movf	(??_xtoa+1)^0,w,c
 13112  002322  2230               	addwfc	(??_xtoa+3)^0,f,c
 13113  002324  5030               	movf	(??_xtoa+3)^0,w,c
 13114  002326  E10A               	bnz	u8760
 13115  002328  0E1A               	movlw	26
 13116  00232A  5C2F               	subwf	(??_xtoa+2)^0,w,c
 13117  00232C  A0D8               	btfss	status,0,c
 13118  00232E  EF9B  F011         	goto	u8761
 13119  002332  EF9E  F011         	goto	u8760
 13120  002336                     u8761:
 13121  002336  0E01               	movlw	1
 13122  002338  EF9F  F011         	goto	u8770
 13123  00233C                     u8760:
 13124  00233C  0E00               	movlw	0
 13125  00233E                     u8770:
 13126  00233E  6E37               	movwf	_xtoa$1908^0,c
 13127  002340  6A38               	clrf	(_xtoa$1908+1)^0,c
 13128  002342  5037               	movf	_xtoa$1908^0,w,c
 13129  002344  1038               	iorwf	(_xtoa$1908+1)^0,w,c
 13130  002346  B4D8               	btfsc	status,2,c
 13131  002348  EFA8  F011         	goto	u8781
 13132  00234C  EFAA  F011         	goto	u8780
 13133  002350                     u8781:
 13134  002350  EFB4  F011         	goto	l7081
 13135  002354                     u8780:
 13136  002354                     
 13137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
 13138  002354  C047  F00C         	movff	xtoa@c,toupper@c
 13139  002358  C048  F00D         	movff	xtoa@c+1,toupper@c+1
 13140  00235C  EC0B  F02B         	call	_toupper	;wreg free
 13141  002360  C00C  F047         	movff	?_toupper,xtoa@c
 13142  002364  C00D  F048         	movff	?_toupper+1,xtoa@c+1
 13143  002368                     l7081:
 13144                           
 13145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
 13146  002368  0EC1               	movlw	low _dbuf
 13147  00236A  2445               	addwf	xtoa@i^0,w,c
 13148  00236C  6ED9               	movwf	fsr2l,c
 13149  00236E  0E01               	movlw	high _dbuf
 13150  002370  2046               	addwfc	(xtoa@i+1)^0,w,c
 13151  002372  6EDA               	movwf	fsr2h,c
 13152  002374  C047  FFDF         	movff	xtoa@c,indf2
 13153  002378                     
 13154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
 13155  002378  0639               	decf	xtoa@p^0,f,c
 13156  00237A  A0D8               	btfss	status,0,c
 13157  00237C  063A               	decf	(xtoa@p+1)^0,f,c
 13158  00237E                     
 13159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
 13160  00237E  063B               	decf	xtoa@w^0,f,c
 13161  002380  A0D8               	btfss	status,0,c
 13162  002382  063C               	decf	(xtoa@w+1)^0,f,c
 13163  002384                     
 13164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
 13165  002384  C03D  F02D         	movff	xtoa@n,??_xtoa
 13166  002388  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 13167  00238C  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 13168  002390  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 13169  002394  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 13170  002398  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 13171  00239C  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 13172  0023A0  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 13173  0023A4  0E05               	movlw	5
 13174  0023A6  EFDE  F011         	goto	u8790
 13175  0023AA                     u8795:
 13176  0023AA  90D8               	bcf	status,0,c
 13177  0023AC  3234               	rrcf	(??_xtoa+7)^0,f,c
 13178  0023AE  3233               	rrcf	(??_xtoa+6)^0,f,c
 13179  0023B0  3232               	rrcf	(??_xtoa+5)^0,f,c
 13180  0023B2  3231               	rrcf	(??_xtoa+4)^0,f,c
 13181  0023B4  3230               	rrcf	(??_xtoa+3)^0,f,c
 13182  0023B6  322F               	rrcf	(??_xtoa+2)^0,f,c
 13183  0023B8  322E               	rrcf	(??_xtoa+1)^0,f,c
 13184  0023BA  322D               	rrcf	??_xtoa^0,f,c
 13185  0023BC                     u8790:
 13186  0023BC  2EE8               	decfsz	wreg,f,c
 13187  0023BE  EFD5  F011         	goto	u8795
 13188  0023C2  C02D  F03D         	movff	??_xtoa,xtoa@n
 13189  0023C6  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 13190  0023CA  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 13191  0023CE  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 13192  0023D2  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 13193  0023D6  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 13194  0023DA  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 13195  0023DE  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 13196  0023E2                     l7089:
 13197                           
 13198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13199  0023E2  BE46               	btfsc	(xtoa@i+1)^0,7,c
 13200  0023E4  EFFD  F011         	goto	u8801
 13201  0023E8  5046               	movf	(xtoa@i+1)^0,w,c
 13202  0023EA  E109               	bnz	u8800
 13203  0023EC  0E02               	movlw	2
 13204  0023EE  5C45               	subwf	xtoa@i^0,w,c
 13205  0023F0  A0D8               	btfss	status,0,c
 13206  0023F2  EFFD  F011         	goto	u8801
 13207  0023F6  EFFF  F011         	goto	u8800
 13208  0023FA                     u8801:
 13209  0023FA  EF2F  F012         	goto	l1513
 13210  0023FE                     u8800:
 13211  0023FE  503D               	movf	xtoa@n^0,w,c
 13212  002400  103E               	iorwf	(xtoa@n+1)^0,w,c
 13213  002402  103F               	iorwf	(xtoa@n+2)^0,w,c
 13214  002404  1040               	iorwf	(xtoa@n+3)^0,w,c
 13215  002406  1041               	iorwf	(xtoa@n+4)^0,w,c
 13216  002408  1042               	iorwf	(xtoa@n+5)^0,w,c
 13217  00240A  1043               	iorwf	(xtoa@n+6)^0,w,c
 13218  00240C  1044               	iorwf	(xtoa@n+7)^0,w,c
 13219  00240E  A4D8               	btfss	status,2,c
 13220  002410  EF0C  F012         	goto	u8811
 13221  002414  EF0E  F012         	goto	u8810
 13222  002418                     u8811:
 13223  002418  EF3E  F011         	goto	l7059
 13224  00241C                     u8810:
 13225  00241C  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 13226  00241E  EF1B  F012         	goto	u8820
 13227  002422  503A               	movf	(xtoa@p+1)^0,w,c
 13228  002424  E106               	bnz	u8821
 13229  002426  0439               	decf	xtoa@p^0,w,c
 13230  002428  B0D8               	btfsc	status,0,c
 13231  00242A  EF19  F012         	goto	u8821
 13232  00242E  EF1B  F012         	goto	u8820
 13233  002432                     u8821:
 13234  002432  EF3E  F011         	goto	l7059
 13235  002436                     u8820:
 13236  002436  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 13237  002438  EF26  F012         	goto	u8831
 13238  00243C  503C               	movf	(xtoa@w+1)^0,w,c
 13239  00243E  E108               	bnz	u8830
 13240  002440  043B               	decf	xtoa@w^0,w,c
 13241  002442  A0D8               	btfss	status,0,c
 13242  002444  EF26  F012         	goto	u8831
 13243  002448  EF28  F012         	goto	u8830
 13244  00244C                     u8831:
 13245  00244C  EF2F  F012         	goto	l1513
 13246  002450                     u8830:
 13247  002450  B277               	btfsc	_flags^0,1,c
 13248  002452  EF2D  F012         	goto	u8841
 13249  002456  EF2F  F012         	goto	u8840
 13250  00245A                     u8841:
 13251  00245A  EF3E  F011         	goto	l7059
 13252  00245E                     u8840:
 13253  00245E                     l1513:
 13254                           
 13255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
 13256  00245E  A877               	btfss	_flags^0,4,c
 13257  002460  EF34  F012         	goto	u8851
 13258  002464  EF36  F012         	goto	u8850
 13259  002468                     u8851:
 13260  002468  EF4C  F012         	goto	l7105
 13261  00246C                     u8850:
 13262  00246C                     
 13263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
 13264  00246C  0645               	decf	xtoa@i^0,f,c
 13265  00246E  A0D8               	btfss	status,0,c
 13266  002470  0646               	decf	(xtoa@i+1)^0,f,c
 13267  002472                     
 13268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
 13269  002472  0EC1               	movlw	low _dbuf
 13270  002474  2445               	addwf	xtoa@i^0,w,c
 13271  002476  6ED9               	movwf	fsr2l,c
 13272  002478  0E01               	movlw	high _dbuf
 13273  00247A  2046               	addwfc	(xtoa@i+1)^0,w,c
 13274  00247C  6EDA               	movwf	fsr2h,c
 13275  00247E  C02C  FFDF         	movff	xtoa@x,indf2
 13276  002482                     
 13277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
 13278  002482  0645               	decf	xtoa@i^0,f,c
 13279  002484  A0D8               	btfss	status,0,c
 13280  002486  0646               	decf	(xtoa@i+1)^0,f,c
 13281                           
 13282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
 13283  002488  0EC1               	movlw	low _dbuf
 13284  00248A  2445               	addwf	xtoa@i^0,w,c
 13285  00248C  6ED9               	movwf	fsr2l,c
 13286  00248E  0E01               	movlw	high _dbuf
 13287  002490  2046               	addwfc	(xtoa@i+1)^0,w,c
 13288  002492  6EDA               	movwf	fsr2h,c
 13289  002494  0E30               	movlw	48
 13290  002496  6EDF               	movwf	indf2,c
 13291  002498                     l7105:
 13292                           
 13293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
 13294  002498  C022  F017         	movff	xtoa@fp,pad@fp
 13295  00249C  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 13296  0024A0  0EC1               	movlw	low _dbuf
 13297  0024A2  2445               	addwf	xtoa@i^0,w,c
 13298  0024A4  6E19               	movwf	pad@buf^0,c
 13299  0024A6  0E01               	movlw	high _dbuf
 13300  0024A8  2046               	addwfc	(xtoa@i+1)^0,w,c
 13301  0024AA  6E1A               	movwf	(pad@buf+1)^0,c
 13302  0024AC  C03B  F01B         	movff	xtoa@w,pad@p
 13303  0024B0  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 13304  0024B4  ECDB  F027         	call	_pad	;wreg free
 13305  0024B8  C017  F022         	movff	?_pad,?_xtoa
 13306  0024BC  C018  F023         	movff	?_pad+1,?_xtoa+1
 13307  0024C0  0012               	return		;funcret
 13308  0024C2                     __end_of_xtoa:
 13309                           	callstack 0
 13310                           
 13311 ;; *************** function _toupper *****************
 13312 ;; Defined at:
 13313 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;  c               2   11[COMRAM] int 
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;		None
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  2   11[COMRAM] int 
 13320 ;; Registers used:
 13321 ;;		wreg, status,2, status,0
 13322 ;; Tracked objects:
 13323 ;;		On entry : 0/0
 13324 ;;		On exit  : 0/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13327 ;;      Params:         2       0       0       0       0       0       0
 13328 ;;      Locals:         2       0       0       0       0       0       0
 13329 ;;      Temps:          4       0       0       0       0       0       0
 13330 ;;      Totals:         8       0       0       0       0       0       0
 13331 ;;Total ram usage:        8 bytes
 13332 ;; Hardware stack levels used: 1
 13333 ;; Hardware stack levels required when called: 2
 13334 ;; This function calls:
 13335 ;;		_islower
 13336 ;; This function is called by:
 13337 ;;		_xtoa
 13338 ;; This function uses a non-reentrant model
 13339 ;;
 13340                           
 13341                           	psect	text43
 13342  005616                     __ptext43:
 13343                           	callstack 0
 13344  005616                     _toupper:
 13345                           	callstack 23
 13346  005616  0E9F               	movlw	159
 13347  005618  6E0E               	movwf	??_toupper^0,c
 13348  00561A  0EFF               	movlw	255
 13349  00561C  6E0F               	movwf	(??_toupper+1)^0,c
 13350  00561E  C00C  F010         	movff	toupper@c,??_toupper+2
 13351  005622  C00D  F011         	movff	toupper@c+1,??_toupper+3
 13352  005626  500E               	movf	??_toupper^0,w,c
 13353  005628  2610               	addwf	(??_toupper+2)^0,f,c
 13354  00562A  500F               	movf	(??_toupper+1)^0,w,c
 13355  00562C  2211               	addwfc	(??_toupper+3)^0,f,c
 13356  00562E  5011               	movf	(??_toupper+3)^0,w,c
 13357  005630  E10A               	bnz	u8300
 13358  005632  0E1A               	movlw	26
 13359  005634  5C10               	subwf	(??_toupper+2)^0,w,c
 13360  005636  A0D8               	btfss	status,0,c
 13361  005638  EF20  F02B         	goto	u8301
 13362  00563C  EF23  F02B         	goto	u8300
 13363  005640                     u8301:
 13364  005640  0E01               	movlw	1
 13365  005642  EF24  F02B         	goto	u8310
 13366  005646                     u8300:
 13367  005646  0E00               	movlw	0
 13368  005648                     u8310:
 13369  005648  6E12               	movwf	_toupper$2050^0,c
 13370  00564A  6A13               	clrf	(_toupper$2050+1)^0,c
 13371  00564C  5012               	movf	_toupper$2050^0,w,c
 13372  00564E  1013               	iorwf	(_toupper$2050+1)^0,w,c
 13373  005650  B4D8               	btfsc	status,2,c
 13374  005652  EF2D  F02B         	goto	u8321
 13375  005656  EF2F  F02B         	goto	u8320
 13376  00565A                     u8321:
 13377  00565A  EF35  F02B         	goto	l1655
 13378  00565E                     u8320:
 13379  00565E  0E5F               	movlw	95
 13380  005660  140C               	andwf	toupper@c^0,w,c
 13381  005662  6E0C               	movwf	?_toupper^0,c
 13382  005664  6A0D               	clrf	(?_toupper+1)^0,c
 13383  005666  EF39  F02B         	goto	l1660
 13384  00566A                     l1655:
 13385  00566A  C00C  F00C         	movff	toupper@c,?_toupper
 13386  00566E  C00D  F00D         	movff	toupper@c+1,?_toupper+1
 13387  005672                     l1660:
 13388  005672  0012               	return		;funcret
 13389  005674                     __end_of_toupper:
 13390                           	callstack 0
 13391                           
 13392 ;; *************** function _islower *****************
 13393 ;; Defined at:
 13394 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
 13395 ;; Parameters:    Size  Location     Type
 13396 ;;  c               2    5[COMRAM] int 
 13397 ;; Auto vars:     Size  Location     Type
 13398 ;;		None
 13399 ;; Return value:  Size  Location     Type
 13400 ;;                  2    5[COMRAM] int 
 13401 ;; Registers used:
 13402 ;;		wreg, status,2, status,0
 13403 ;; Tracked objects:
 13404 ;;		On entry : 0/0
 13405 ;;		On exit  : 0/0
 13406 ;;		Unchanged: 0/0
 13407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13408 ;;      Params:         2       0       0       0       0       0       0
 13409 ;;      Locals:         0       0       0       0       0       0       0
 13410 ;;      Temps:          4       0       0       0       0       0       0
 13411 ;;      Totals:         6       0       0       0       0       0       0
 13412 ;;Total ram usage:        6 bytes
 13413 ;; Hardware stack levels used: 1
 13414 ;; Hardware stack levels required when called: 1
 13415 ;; This function calls:
 13416 ;;		Nothing
 13417 ;; This function is called by:
 13418 ;;		_toupper
 13419 ;; This function uses a non-reentrant model
 13420 ;;
 13421                           
 13422                           	psect	text44
 13423  00580C                     __ptext44:
 13424                           	callstack 0
 13425  00580C                     _islower:
 13426                           	callstack 23
 13427  00580C  0E9F               	movlw	159
 13428  00580E  6E08               	movwf	??_islower^0,c
 13429  005810  0EFF               	movlw	255
 13430  005812  6E09               	movwf	(??_islower+1)^0,c
 13431  005814  C006  F00A         	movff	islower@c,??_islower+2
 13432  005818  C007  F00B         	movff	islower@c+1,??_islower+3
 13433  00581C  5008               	movf	??_islower^0,w,c
 13434  00581E  260A               	addwf	(??_islower+2)^0,f,c
 13435  005820  5009               	movf	(??_islower+1)^0,w,c
 13436  005822  220B               	addwfc	(??_islower+3)^0,f,c
 13437  005824  500B               	movf	(??_islower+3)^0,w,c
 13438  005826  E10A               	bnz	u7990
 13439  005828  0E1A               	movlw	26
 13440  00582A  5C0A               	subwf	(??_islower+2)^0,w,c
 13441  00582C  A0D8               	btfss	status,0,c
 13442  00582E  EF1B  F02C         	goto	u7991
 13443  005832  EF1E  F02C         	goto	u7990
 13444  005836                     u7991:
 13445  005836  0E01               	movlw	1
 13446  005838  EF1F  F02C         	goto	u8000
 13447  00583C                     u7990:
 13448  00583C  0E00               	movlw	0
 13449  00583E                     u8000:
 13450  00583E  6E06               	movwf	?_islower^0,c
 13451  005840  6A07               	clrf	(?_islower+1)^0,c
 13452  005842  0012               	return		;funcret
 13453  005844                     __end_of_islower:
 13454                           	callstack 0
 13455                           
 13456 ;; *************** function _isupper *****************
 13457 ;; Defined at:
 13458 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
 13459 ;; Parameters:    Size  Location     Type
 13460 ;;  c               2    5[COMRAM] int 
 13461 ;; Auto vars:     Size  Location     Type
 13462 ;;		None
 13463 ;; Return value:  Size  Location     Type
 13464 ;;                  2    5[COMRAM] int 
 13465 ;; Registers used:
 13466 ;;		wreg, status,2, status,0
 13467 ;; Tracked objects:
 13468 ;;		On entry : 0/0
 13469 ;;		On exit  : 0/0
 13470 ;;		Unchanged: 0/0
 13471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13472 ;;      Params:         2       0       0       0       0       0       0
 13473 ;;      Locals:         0       0       0       0       0       0       0
 13474 ;;      Temps:          4       0       0       0       0       0       0
 13475 ;;      Totals:         6       0       0       0       0       0       0
 13476 ;;Total ram usage:        6 bytes
 13477 ;; Hardware stack levels used: 1
 13478 ;; Hardware stack levels required when called: 1
 13479 ;; This function calls:
 13480 ;;		Nothing
 13481 ;; This function is called by:
 13482 ;;		_xtoa
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486                           	psect	text45
 13487  005844                     __ptext45:
 13488                           	callstack 0
 13489  005844                     _isupper:
 13490                           	callstack 24
 13491  005844  0EBF               	movlw	191
 13492  005846  6E08               	movwf	??_isupper^0,c
 13493  005848  0EFF               	movlw	255
 13494  00584A  6E09               	movwf	(??_isupper+1)^0,c
 13495  00584C  C006  F00A         	movff	isupper@c,??_isupper+2
 13496  005850  C007  F00B         	movff	isupper@c+1,??_isupper+3
 13497  005854  5008               	movf	??_isupper^0,w,c
 13498  005856  260A               	addwf	(??_isupper+2)^0,f,c
 13499  005858  5009               	movf	(??_isupper+1)^0,w,c
 13500  00585A  220B               	addwfc	(??_isupper+3)^0,f,c
 13501  00585C  500B               	movf	(??_isupper+3)^0,w,c
 13502  00585E  E10A               	bnz	u8260
 13503  005860  0E1A               	movlw	26
 13504  005862  5C0A               	subwf	(??_isupper+2)^0,w,c
 13505  005864  A0D8               	btfss	status,0,c
 13506  005866  EF37  F02C         	goto	u8261
 13507  00586A  EF3A  F02C         	goto	u8260
 13508  00586E                     u8261:
 13509  00586E  0E01               	movlw	1
 13510  005870  EF3B  F02C         	goto	u8270
 13511  005874                     u8260:
 13512  005874  0E00               	movlw	0
 13513  005876                     u8270:
 13514  005876  6E06               	movwf	?_isupper^0,c
 13515  005878  6A07               	clrf	(?_isupper+1)^0,c
 13516  00587A  0012               	return		;funcret
 13517  00587C                     __end_of_isupper:
 13518                           	callstack 0
 13519                           
 13520 ;; *************** function _isalpha *****************
 13521 ;; Defined at:
 13522 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
 13523 ;; Parameters:    Size  Location     Type
 13524 ;;  c               2    5[COMRAM] int 
 13525 ;; Auto vars:     Size  Location     Type
 13526 ;;		None
 13527 ;; Return value:  Size  Location     Type
 13528 ;;                  2    5[COMRAM] int 
 13529 ;; Registers used:
 13530 ;;		wreg, status,2, status,0
 13531 ;; Tracked objects:
 13532 ;;		On entry : 0/0
 13533 ;;		On exit  : 0/0
 13534 ;;		Unchanged: 0/0
 13535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13536 ;;      Params:         2       0       0       0       0       0       0
 13537 ;;      Locals:         0       0       0       0       0       0       0
 13538 ;;      Temps:          4       0       0       0       0       0       0
 13539 ;;      Totals:         6       0       0       0       0       0       0
 13540 ;;Total ram usage:        6 bytes
 13541 ;; Hardware stack levels used: 1
 13542 ;; Hardware stack levels required when called: 1
 13543 ;; This function calls:
 13544 ;;		Nothing
 13545 ;; This function is called by:
 13546 ;;		_xtoa
 13547 ;; This function uses a non-reentrant model
 13548 ;;
 13549                           
 13550                           	psect	text46
 13551  005798                     __ptext46:
 13552                           	callstack 0
 13553  005798                     _isalpha:
 13554                           	callstack 24
 13555  005798  0E9F               	movlw	159
 13556  00579A  6E08               	movwf	??_isalpha^0,c
 13557  00579C  0EFF               	movlw	255
 13558  00579E  6E09               	movwf	(??_isalpha+1)^0,c
 13559  0057A0  0E20               	movlw	32
 13560  0057A2  1006               	iorwf	isalpha@c^0,w,c
 13561  0057A4  6E0A               	movwf	(??_isalpha+2)^0,c
 13562  0057A6  0E00               	movlw	0
 13563  0057A8  1007               	iorwf	(isalpha@c+1)^0,w,c
 13564  0057AA  6E0B               	movwf	(??_isalpha+3)^0,c
 13565  0057AC  5008               	movf	??_isalpha^0,w,c
 13566  0057AE  260A               	addwf	(??_isalpha+2)^0,f,c
 13567  0057B0  5009               	movf	(??_isalpha+1)^0,w,c
 13568  0057B2  220B               	addwfc	(??_isalpha+3)^0,f,c
 13569  0057B4  500B               	movf	(??_isalpha+3)^0,w,c
 13570  0057B6  E10A               	bnz	u8280
 13571  0057B8  0E1A               	movlw	26
 13572  0057BA  5C0A               	subwf	(??_isalpha+2)^0,w,c
 13573  0057BC  A0D8               	btfss	status,0,c
 13574  0057BE  EFE3  F02B         	goto	u8281
 13575  0057C2  EFE6  F02B         	goto	u8280
 13576  0057C6                     u8281:
 13577  0057C6  0E01               	movlw	1
 13578  0057C8  EFE7  F02B         	goto	u8290
 13579  0057CC                     u8280:
 13580  0057CC  0E00               	movlw	0
 13581  0057CE                     u8290:
 13582  0057CE  6E06               	movwf	?_isalpha^0,c
 13583  0057D0  6A07               	clrf	(?_isalpha+1)^0,c
 13584  0057D2  0012               	return		;funcret
 13585  0057D4                     __end_of_isalpha:
 13586                           	callstack 0
 13587                           
 13588 ;; *************** function _utoa *****************
 13589 ;; Defined at:
 13590 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 13591 ;; Parameters:    Size  Location     Type
 13592 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 13593 ;;		 -> NULL(0), 
 13594 ;;  d               8   35[COMRAM] unsigned long long 
 13595 ;; Auto vars:     Size  Location     Type
 13596 ;;  n               8   55[COMRAM] unsigned long long 
 13597 ;;  i               2   63[COMRAM] int 
 13598 ;;  w               2   53[COMRAM] int 
 13599 ;;  p               2   51[COMRAM] int 
 13600 ;; Return value:  Size  Location     Type
 13601 ;;                  2   33[COMRAM] int 
 13602 ;; Registers used:
 13603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13604 ;; Tracked objects:
 13605 ;;		On entry : 0/0
 13606 ;;		On exit  : 0/0
 13607 ;;		Unchanged: 0/0
 13608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13609 ;;      Params:        10       0       0       0       0       0       0
 13610 ;;      Locals:        14       0       0       0       0       0       0
 13611 ;;      Temps:          8       0       0       0       0       0       0
 13612 ;;      Totals:        32       0       0       0       0       0       0
 13613 ;;Total ram usage:       32 bytes
 13614 ;; Hardware stack levels used: 1
 13615 ;; Hardware stack levels required when called: 5
 13616 ;; This function calls:
 13617 ;;		___lodiv
 13618 ;;		___lomod
 13619 ;;		_pad
 13620 ;; This function is called by:
 13621 ;;		_vfpfcnvrt
 13622 ;; This function uses a non-reentrant model
 13623 ;;
 13624                           
 13625                           	psect	text47
 13626  0030C6                     __ptext47:
 13627                           	callstack 0
 13628  0030C6                     _utoa:
 13629                           	callstack 21
 13630  0030C6                     
 13631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
 13632  0030C6  BE76               	btfsc	(_prec+1)^0,7,c
 13633  0030C8  EF68  F018         	goto	u8621
 13634  0030CC  EF6A  F018         	goto	u8620
 13635  0030D0                     u8621:
 13636  0030D0  EF6B  F018         	goto	l7011
 13637  0030D4                     u8620:
 13638  0030D4                     
 13639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
 13640  0030D4  9277               	bcf	_flags^0,1,c
 13641  0030D6                     l7011:
 13642                           
 13643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
 13644  0030D6  BE76               	btfsc	(_prec+1)^0,7,c
 13645  0030D8  EF78  F018         	goto	u8630
 13646  0030DC  5076               	movf	(_prec+1)^0,w,c
 13647  0030DE  E106               	bnz	u8631
 13648  0030E0  0475               	decf	_prec^0,w,c
 13649  0030E2  B0D8               	btfsc	status,0,c
 13650  0030E4  EF76  F018         	goto	u8631
 13651  0030E8  EF78  F018         	goto	u8630
 13652  0030EC                     u8631:
 13653  0030EC  EF7E  F018         	goto	l1475
 13654  0030F0                     u8630:
 13655  0030F0  0E00               	movlw	0
 13656  0030F2  6E35               	movwf	(utoa@p+1)^0,c
 13657  0030F4  0E01               	movlw	1
 13658  0030F6  6E34               	movwf	utoa@p^0,c
 13659  0030F8  EF82  F018         	goto	l1477
 13660  0030FC                     l1475:
 13661  0030FC  C075  F034         	movff	_prec,utoa@p
 13662  003100  C076  F035         	movff	_prec+1,utoa@p+1
 13663  003104                     l1477:
 13664                           
 13665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
 13666  003104  C0ED  F036         	movff	_width,utoa@w
 13667  003108  C0EE  F037         	movff	_width+1,utoa@w+1
 13668                           
 13669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
 13670  00310C  C024  F038         	movff	utoa@d,utoa@n
 13671  003110  C025  F039         	movff	utoa@d+1,utoa@n+1
 13672  003114  C026  F03A         	movff	utoa@d+2,utoa@n+2
 13673  003118  C027  F03B         	movff	utoa@d+3,utoa@n+3
 13674  00311C  C028  F03C         	movff	utoa@d+4,utoa@n+4
 13675  003120  C029  F03D         	movff	utoa@d+5,utoa@n+5
 13676  003124  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 13677  003128  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 13678  00312C                     
 13679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
 13680  00312C  0E00               	movlw	0
 13681  00312E  6E41               	movwf	(utoa@i+1)^0,c
 13682  003130  0E1F               	movlw	31
 13683  003132  6E40               	movwf	utoa@i^0,c
 13684  003134                     
 13685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
 13686  003134  0E00               	movlw	0
 13687  003136  0101               	movlb	1	; () banked
 13688  003138  6FE0               	movwf	(_dbuf+31)& (0+255),b
 13689                           
 13690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13691  00313A  EF15  F019         	goto	l7029
 13692  00313E                     l7019:
 13693                           
 13694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
 13695  00313E  0640               	decf	utoa@i^0,f,c
 13696  003140  A0D8               	btfss	status,0,c
 13697  003142  0641               	decf	(utoa@i+1)^0,f,c
 13698  003144                     
 13699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
 13700  003144  0EC1               	movlw	low _dbuf
 13701  003146  2440               	addwf	utoa@i^0,w,c
 13702  003148  6ED9               	movwf	fsr2l,c
 13703  00314A  0E01               	movlw	high _dbuf
 13704  00314C  2041               	addwfc	(utoa@i+1)^0,w,c
 13705  00314E  6EDA               	movwf	fsr2h,c
 13706  003150  C038  F006         	movff	utoa@n,___lomod@dividend
 13707  003154  C039  F007         	movff	utoa@n+1,___lomod@dividend+1
 13708  003158  C03A  F008         	movff	utoa@n+2,___lomod@dividend+2
 13709  00315C  C03B  F009         	movff	utoa@n+3,___lomod@dividend+3
 13710  003160  C03C  F00A         	movff	utoa@n+4,___lomod@dividend+4
 13711  003164  C03D  F00B         	movff	utoa@n+5,___lomod@dividend+5
 13712  003168  C03E  F00C         	movff	utoa@n+6,___lomod@dividend+6
 13713  00316C  C03F  F00D         	movff	utoa@n+7,___lomod@dividend+7
 13714  003170  0E0A               	movlw	10
 13715  003172  6E0E               	movwf	___lomod@divisor^0,c
 13716  003174  0E00               	movlw	0
 13717  003176  6E0F               	movwf	(___lomod@divisor+1)^0,c
 13718  003178  0E00               	movlw	0
 13719  00317A  6E10               	movwf	(___lomod@divisor+2)^0,c
 13720  00317C  0E00               	movlw	0
 13721  00317E  6E11               	movwf	(___lomod@divisor+3)^0,c
 13722  003180  0E00               	movlw	0
 13723  003182  6E12               	movwf	(___lomod@divisor+4)^0,c
 13724  003184  0E00               	movlw	0
 13725  003186  6E13               	movwf	(___lomod@divisor+5)^0,c
 13726  003188  0E00               	movlw	0
 13727  00318A  6E14               	movwf	(___lomod@divisor+6)^0,c
 13728  00318C  0E00               	movlw	0
 13729  00318E  6E15               	movwf	(___lomod@divisor+7)^0,c
 13730  003190  ECAA  F026         	call	___lomod	;wreg free
 13731  003194  C006  F02C         	movff	?___lomod,??_utoa
 13732  003198  C007  F02D         	movff	?___lomod+1,??_utoa+1
 13733  00319C  C008  F02E         	movff	?___lomod+2,??_utoa+2
 13734  0031A0  C009  F02F         	movff	?___lomod+3,??_utoa+3
 13735  0031A4  C00A  F030         	movff	?___lomod+4,??_utoa+4
 13736  0031A8  C00B  F031         	movff	?___lomod+5,??_utoa+5
 13737  0031AC  C00C  F032         	movff	?___lomod+6,??_utoa+6
 13738  0031B0  C00D  F033         	movff	?___lomod+7,??_utoa+7
 13739  0031B4  502C               	movf	??_utoa^0,w,c
 13740  0031B6  0F30               	addlw	48
 13741  0031B8  6EDF               	movwf	indf2,c
 13742  0031BA                     
 13743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
 13744  0031BA  0634               	decf	utoa@p^0,f,c
 13745  0031BC  A0D8               	btfss	status,0,c
 13746  0031BE  0635               	decf	(utoa@p+1)^0,f,c
 13747  0031C0                     
 13748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
 13749  0031C0  0636               	decf	utoa@w^0,f,c
 13750  0031C2  A0D8               	btfss	status,0,c
 13751  0031C4  0637               	decf	(utoa@w+1)^0,f,c
 13752  0031C6                     
 13753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
 13754  0031C6  C038  F006         	movff	utoa@n,___lodiv@dividend
 13755  0031CA  C039  F007         	movff	utoa@n+1,___lodiv@dividend+1
 13756  0031CE  C03A  F008         	movff	utoa@n+2,___lodiv@dividend+2
 13757  0031D2  C03B  F009         	movff	utoa@n+3,___lodiv@dividend+3
 13758  0031D6  C03C  F00A         	movff	utoa@n+4,___lodiv@dividend+4
 13759  0031DA  C03D  F00B         	movff	utoa@n+5,___lodiv@dividend+5
 13760  0031DE  C03E  F00C         	movff	utoa@n+6,___lodiv@dividend+6
 13761  0031E2  C03F  F00D         	movff	utoa@n+7,___lodiv@dividend+7
 13762  0031E6  0E0A               	movlw	10
 13763  0031E8  6E0E               	movwf	___lodiv@divisor^0,c
 13764  0031EA  0E00               	movlw	0
 13765  0031EC  6E0F               	movwf	(___lodiv@divisor+1)^0,c
 13766  0031EE  0E00               	movlw	0
 13767  0031F0  6E10               	movwf	(___lodiv@divisor+2)^0,c
 13768  0031F2  0E00               	movlw	0
 13769  0031F4  6E11               	movwf	(___lodiv@divisor+3)^0,c
 13770  0031F6  0E00               	movlw	0
 13771  0031F8  6E12               	movwf	(___lodiv@divisor+4)^0,c
 13772  0031FA  0E00               	movlw	0
 13773  0031FC  6E13               	movwf	(___lodiv@divisor+5)^0,c
 13774  0031FE  0E00               	movlw	0
 13775  003200  6E14               	movwf	(___lodiv@divisor+6)^0,c
 13776  003202  0E00               	movlw	0
 13777  003204  6E15               	movwf	(___lodiv@divisor+7)^0,c
 13778  003206  ECE1  F024         	call	___lodiv	;wreg free
 13779  00320A  C006  F038         	movff	?___lodiv,utoa@n
 13780  00320E  C007  F039         	movff	?___lodiv+1,utoa@n+1
 13781  003212  C008  F03A         	movff	?___lodiv+2,utoa@n+2
 13782  003216  C009  F03B         	movff	?___lodiv+3,utoa@n+3
 13783  00321A  C00A  F03C         	movff	?___lodiv+4,utoa@n+4
 13784  00321E  C00B  F03D         	movff	?___lodiv+5,utoa@n+5
 13785  003222  C00C  F03E         	movff	?___lodiv+6,utoa@n+6
 13786  003226  C00D  F03F         	movff	?___lodiv+7,utoa@n+7
 13787  00322A                     l7029:
 13788                           
 13789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13790  00322A  5040               	movf	utoa@i^0,w,c
 13791  00322C  1041               	iorwf	(utoa@i+1)^0,w,c
 13792  00322E  B4D8               	btfsc	status,2,c
 13793  003230  EF1C  F019         	goto	u8641
 13794  003234  EF1E  F019         	goto	u8640
 13795  003238                     u8641:
 13796  003238  EF4E  F019         	goto	l7039
 13797  00323C                     u8640:
 13798  00323C  5038               	movf	utoa@n^0,w,c
 13799  00323E  1039               	iorwf	(utoa@n+1)^0,w,c
 13800  003240  103A               	iorwf	(utoa@n+2)^0,w,c
 13801  003242  103B               	iorwf	(utoa@n+3)^0,w,c
 13802  003244  103C               	iorwf	(utoa@n+4)^0,w,c
 13803  003246  103D               	iorwf	(utoa@n+5)^0,w,c
 13804  003248  103E               	iorwf	(utoa@n+6)^0,w,c
 13805  00324A  103F               	iorwf	(utoa@n+7)^0,w,c
 13806  00324C  A4D8               	btfss	status,2,c
 13807  00324E  EF2B  F019         	goto	u8651
 13808  003252  EF2D  F019         	goto	u8650
 13809  003256                     u8651:
 13810  003256  EF9F  F018         	goto	l7019
 13811  00325A                     u8650:
 13812  00325A  BE35               	btfsc	(utoa@p+1)^0,7,c
 13813  00325C  EF3A  F019         	goto	u8660
 13814  003260  5035               	movf	(utoa@p+1)^0,w,c
 13815  003262  E106               	bnz	u8661
 13816  003264  0434               	decf	utoa@p^0,w,c
 13817  003266  B0D8               	btfsc	status,0,c
 13818  003268  EF38  F019         	goto	u8661
 13819  00326C  EF3A  F019         	goto	u8660
 13820  003270                     u8661:
 13821  003270  EF9F  F018         	goto	l7019
 13822  003274                     u8660:
 13823  003274  BE37               	btfsc	(utoa@w+1)^0,7,c
 13824  003276  EF45  F019         	goto	u8671
 13825  00327A  5037               	movf	(utoa@w+1)^0,w,c
 13826  00327C  E108               	bnz	u8670
 13827  00327E  0436               	decf	utoa@w^0,w,c
 13828  003280  A0D8               	btfss	status,0,c
 13829  003282  EF45  F019         	goto	u8671
 13830  003286  EF47  F019         	goto	u8670
 13831  00328A                     u8671:
 13832  00328A  EF4E  F019         	goto	l7039
 13833  00328E                     u8670:
 13834  00328E  B277               	btfsc	_flags^0,1,c
 13835  003290  EF4C  F019         	goto	u8681
 13836  003294  EF4E  F019         	goto	u8680
 13837  003298                     u8681:
 13838  003298  EF9F  F018         	goto	l7019
 13839  00329C                     u8680:
 13840  00329C                     l7039:
 13841                           
 13842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
 13843  00329C  C022  F017         	movff	utoa@fp,pad@fp
 13844  0032A0  C023  F018         	movff	utoa@fp+1,pad@fp+1
 13845  0032A4  0EC1               	movlw	low _dbuf
 13846  0032A6  2440               	addwf	utoa@i^0,w,c
 13847  0032A8  6E19               	movwf	pad@buf^0,c
 13848  0032AA  0E01               	movlw	high _dbuf
 13849  0032AC  2041               	addwfc	(utoa@i+1)^0,w,c
 13850  0032AE  6E1A               	movwf	(pad@buf+1)^0,c
 13851  0032B0  C036  F01B         	movff	utoa@w,pad@p
 13852  0032B4  C037  F01C         	movff	utoa@w+1,pad@p+1
 13853  0032B8  ECDB  F027         	call	_pad	;wreg free
 13854  0032BC  C017  F022         	movff	?_pad,?_utoa
 13855  0032C0  C018  F023         	movff	?_pad+1,?_utoa+1
 13856  0032C4  0012               	return		;funcret
 13857  0032C6                     __end_of_utoa:
 13858                           	callstack 0
 13859                           
 13860 ;; *************** function ___lomod *****************
 13861 ;; Defined at:
 13862 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
 13863 ;; Parameters:    Size  Location     Type
 13864 ;;  dividend        8    5[COMRAM] unsigned long long 
 13865 ;;  divisor         8   13[COMRAM] unsigned long long 
 13866 ;; Auto vars:     Size  Location     Type
 13867 ;;  counter         1   21[COMRAM] unsigned char 
 13868 ;; Return value:  Size  Location     Type
 13869 ;;                  8    5[COMRAM] unsigned long long 
 13870 ;; Registers used:
 13871 ;;		wreg, status,2, status,0
 13872 ;; Tracked objects:
 13873 ;;		On entry : 0/0
 13874 ;;		On exit  : 0/0
 13875 ;;		Unchanged: 0/0
 13876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13877 ;;      Params:        16       0       0       0       0       0       0
 13878 ;;      Locals:         1       0       0       0       0       0       0
 13879 ;;      Temps:          0       0       0       0       0       0       0
 13880 ;;      Totals:        17       0       0       0       0       0       0
 13881 ;;Total ram usage:       17 bytes
 13882 ;; Hardware stack levels used: 1
 13883 ;; Hardware stack levels required when called: 1
 13884 ;; This function calls:
 13885 ;;		Nothing
 13886 ;; This function is called by:
 13887 ;;		_utoa
 13888 ;; This function uses a non-reentrant model
 13889 ;;
 13890                           
 13891                           	psect	text48
 13892  004D54                     __ptext48:
 13893                           	callstack 0
 13894  004D54                     ___lomod:
 13895                           	callstack 24
 13896  004D54  500E               	movf	___lomod@divisor^0,w,c
 13897  004D56  100F               	iorwf	(___lomod@divisor+1)^0,w,c
 13898  004D58  1010               	iorwf	(___lomod@divisor+2)^0,w,c
 13899  004D5A  1011               	iorwf	(___lomod@divisor+3)^0,w,c
 13900  004D5C  1012               	iorwf	(___lomod@divisor+4)^0,w,c
 13901  004D5E  1013               	iorwf	(___lomod@divisor+5)^0,w,c
 13902  004D60  1014               	iorwf	(___lomod@divisor+6)^0,w,c
 13903  004D62  1015               	iorwf	(___lomod@divisor+7)^0,w,c
 13904  004D64  B4D8               	btfsc	status,2,c
 13905  004D66  EFB7  F026         	goto	u8181
 13906  004D6A  EFB9  F026         	goto	u8180
 13907  004D6E                     u8181:
 13908  004D6E  EF01  F027         	goto	l1137
 13909  004D72                     u8180:
 13910  004D72  0E01               	movlw	1
 13911  004D74  6E16               	movwf	___lomod@counter^0,c
 13912  004D76  EFC7  F026         	goto	l6833
 13913  004D7A                     l6831:
 13914  004D7A  90D8               	bcf	status,0,c
 13915  004D7C  360E               	rlcf	___lomod@divisor^0,f,c
 13916  004D7E  360F               	rlcf	(___lomod@divisor+1)^0,f,c
 13917  004D80  3610               	rlcf	(___lomod@divisor+2)^0,f,c
 13918  004D82  3611               	rlcf	(___lomod@divisor+3)^0,f,c
 13919  004D84  3612               	rlcf	(___lomod@divisor+4)^0,f,c
 13920  004D86  3613               	rlcf	(___lomod@divisor+5)^0,f,c
 13921  004D88  3614               	rlcf	(___lomod@divisor+6)^0,f,c
 13922  004D8A  3615               	rlcf	(___lomod@divisor+7)^0,f,c
 13923  004D8C  2A16               	incf	___lomod@counter^0,f,c
 13924  004D8E                     l6833:
 13925  004D8E  AE15               	btfss	(___lomod@divisor+7)^0,7,c
 13926  004D90  EFCC  F026         	goto	u8191
 13927  004D94  EFCE  F026         	goto	u8190
 13928  004D98                     u8191:
 13929  004D98  EFBD  F026         	goto	l6831
 13930  004D9C                     u8190:
 13931  004D9C                     l6835:
 13932  004D9C  500E               	movf	___lomod@divisor^0,w,c
 13933  004D9E  5C06               	subwf	___lomod@dividend^0,w,c
 13934  004DA0  500F               	movf	(___lomod@divisor+1)^0,w,c
 13935  004DA2  5807               	subwfb	(___lomod@dividend+1)^0,w,c
 13936  004DA4  5010               	movf	(___lomod@divisor+2)^0,w,c
 13937  004DA6  5808               	subwfb	(___lomod@dividend+2)^0,w,c
 13938  004DA8  5011               	movf	(___lomod@divisor+3)^0,w,c
 13939  004DAA  5809               	subwfb	(___lomod@dividend+3)^0,w,c
 13940  004DAC  5012               	movf	(___lomod@divisor+4)^0,w,c
 13941  004DAE  580A               	subwfb	(___lomod@dividend+4)^0,w,c
 13942  004DB0  5013               	movf	(___lomod@divisor+5)^0,w,c
 13943  004DB2  580B               	subwfb	(___lomod@dividend+5)^0,w,c
 13944  004DB4  5014               	movf	(___lomod@divisor+6)^0,w,c
 13945  004DB6  580C               	subwfb	(___lomod@dividend+6)^0,w,c
 13946  004DB8  5015               	movf	(___lomod@divisor+7)^0,w,c
 13947  004DBA  580D               	subwfb	(___lomod@dividend+7)^0,w,c
 13948  004DBC  A0D8               	btfss	status,0,c
 13949  004DBE  EFE3  F026         	goto	u8201
 13950  004DC2  EFE5  F026         	goto	u8200
 13951  004DC6                     u8201:
 13952  004DC6  EFF5  F026         	goto	l6839
 13953  004DCA                     u8200:
 13954  004DCA  500E               	movf	___lomod@divisor^0,w,c
 13955  004DCC  5E06               	subwf	___lomod@dividend^0,f,c
 13956  004DCE  500F               	movf	(___lomod@divisor+1)^0,w,c
 13957  004DD0  5A07               	subwfb	(___lomod@dividend+1)^0,f,c
 13958  004DD2  5010               	movf	(___lomod@divisor+2)^0,w,c
 13959  004DD4  5A08               	subwfb	(___lomod@dividend+2)^0,f,c
 13960  004DD6  5011               	movf	(___lomod@divisor+3)^0,w,c
 13961  004DD8  5A09               	subwfb	(___lomod@dividend+3)^0,f,c
 13962  004DDA  5012               	movf	(___lomod@divisor+4)^0,w,c
 13963  004DDC  5A0A               	subwfb	(___lomod@dividend+4)^0,f,c
 13964  004DDE  5013               	movf	(___lomod@divisor+5)^0,w,c
 13965  004DE0  5A0B               	subwfb	(___lomod@dividend+5)^0,f,c
 13966  004DE2  5014               	movf	(___lomod@divisor+6)^0,w,c
 13967  004DE4  5A0C               	subwfb	(___lomod@dividend+6)^0,f,c
 13968  004DE6  5015               	movf	(___lomod@divisor+7)^0,w,c
 13969  004DE8  5A0D               	subwfb	(___lomod@dividend+7)^0,f,c
 13970  004DEA                     l6839:
 13971  004DEA  90D8               	bcf	status,0,c
 13972  004DEC  3215               	rrcf	(___lomod@divisor+7)^0,f,c
 13973  004DEE  3214               	rrcf	(___lomod@divisor+6)^0,f,c
 13974  004DF0  3213               	rrcf	(___lomod@divisor+5)^0,f,c
 13975  004DF2  3212               	rrcf	(___lomod@divisor+4)^0,f,c
 13976  004DF4  3211               	rrcf	(___lomod@divisor+3)^0,f,c
 13977  004DF6  3210               	rrcf	(___lomod@divisor+2)^0,f,c
 13978  004DF8  320F               	rrcf	(___lomod@divisor+1)^0,f,c
 13979  004DFA  320E               	rrcf	___lomod@divisor^0,f,c
 13980  004DFC  2E16               	decfsz	___lomod@counter^0,f,c
 13981  004DFE  EFCE  F026         	goto	l6835
 13982  004E02                     l1137:
 13983  004E02  C006  F006         	movff	___lomod@dividend,?___lomod
 13984  004E06  C007  F007         	movff	___lomod@dividend+1,?___lomod+1
 13985  004E0A  C008  F008         	movff	___lomod@dividend+2,?___lomod+2
 13986  004E0E  C009  F009         	movff	___lomod@dividend+3,?___lomod+3
 13987  004E12  C00A  F00A         	movff	___lomod@dividend+4,?___lomod+4
 13988  004E16  C00B  F00B         	movff	___lomod@dividend+5,?___lomod+5
 13989  004E1A  C00C  F00C         	movff	___lomod@dividend+6,?___lomod+6
 13990  004E1E  C00D  F00D         	movff	___lomod@dividend+7,?___lomod+7
 13991  004E22  0012               	return		;funcret
 13992  004E24                     __end_of___lomod:
 13993                           	callstack 0
 13994                           
 13995 ;; *************** function ___lodiv *****************
 13996 ;; Defined at:
 13997 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
 13998 ;; Parameters:    Size  Location     Type
 13999 ;;  dividend        8    5[COMRAM] unsigned long long 
 14000 ;;  divisor         8   13[COMRAM] unsigned long long 
 14001 ;; Auto vars:     Size  Location     Type
 14002 ;;  quotient        8   21[COMRAM] unsigned long long 
 14003 ;;  counter         1   29[COMRAM] unsigned char 
 14004 ;; Return value:  Size  Location     Type
 14005 ;;                  8    5[COMRAM] unsigned long long 
 14006 ;; Registers used:
 14007 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14008 ;; Tracked objects:
 14009 ;;		On entry : 0/0
 14010 ;;		On exit  : 0/0
 14011 ;;		Unchanged: 0/0
 14012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14013 ;;      Params:        16       0       0       0       0       0       0
 14014 ;;      Locals:         9       0       0       0       0       0       0
 14015 ;;      Temps:          0       0       0       0       0       0       0
 14016 ;;      Totals:        25       0       0       0       0       0       0
 14017 ;;Total ram usage:       25 bytes
 14018 ;; Hardware stack levels used: 1
 14019 ;; Hardware stack levels required when called: 1
 14020 ;; This function calls:
 14021 ;;		Nothing
 14022 ;; This function is called by:
 14023 ;;		_utoa
 14024 ;; This function uses a non-reentrant model
 14025 ;;
 14026                           
 14027                           	psect	text49
 14028  0049C2                     __ptext49:
 14029                           	callstack 0
 14030  0049C2                     ___lodiv:
 14031                           	callstack 24
 14032  0049C2  EE20  F016         	lfsr	2,___lodiv@quotient
 14033  0049C6  0E07               	movlw	7
 14034  0049C8                     u8141:
 14035  0049C8  6ADE               	clrf	postinc2,c
 14036  0049CA  06E8               	decf	wreg,f,c
 14037  0049CC  E2FD               	bc	u8141
 14038  0049CE  500E               	movf	___lodiv@divisor^0,w,c
 14039  0049D0  100F               	iorwf	(___lodiv@divisor+1)^0,w,c
 14040  0049D2  1010               	iorwf	(___lodiv@divisor+2)^0,w,c
 14041  0049D4  1011               	iorwf	(___lodiv@divisor+3)^0,w,c
 14042  0049D6  1012               	iorwf	(___lodiv@divisor+4)^0,w,c
 14043  0049D8  1013               	iorwf	(___lodiv@divisor+5)^0,w,c
 14044  0049DA  1014               	iorwf	(___lodiv@divisor+6)^0,w,c
 14045  0049DC  1015               	iorwf	(___lodiv@divisor+7)^0,w,c
 14046  0049DE  B4D8               	btfsc	status,2,c
 14047  0049E0  EFF4  F024         	goto	u8151
 14048  0049E4  EFF6  F024         	goto	u8150
 14049  0049E8                     u8151:
 14050  0049E8  EF48  F025         	goto	l1127
 14051  0049EC                     u8150:
 14052  0049EC  0E01               	movlw	1
 14053  0049EE  6E1E               	movwf	___lodiv@counter^0,c
 14054  0049F0  EF04  F025         	goto	l6813
 14055  0049F4                     l6811:
 14056  0049F4  90D8               	bcf	status,0,c
 14057  0049F6  360E               	rlcf	___lodiv@divisor^0,f,c
 14058  0049F8  360F               	rlcf	(___lodiv@divisor+1)^0,f,c
 14059  0049FA  3610               	rlcf	(___lodiv@divisor+2)^0,f,c
 14060  0049FC  3611               	rlcf	(___lodiv@divisor+3)^0,f,c
 14061  0049FE  3612               	rlcf	(___lodiv@divisor+4)^0,f,c
 14062  004A00  3613               	rlcf	(___lodiv@divisor+5)^0,f,c
 14063  004A02  3614               	rlcf	(___lodiv@divisor+6)^0,f,c
 14064  004A04  3615               	rlcf	(___lodiv@divisor+7)^0,f,c
 14065  004A06  2A1E               	incf	___lodiv@counter^0,f,c
 14066  004A08                     l6813:
 14067  004A08  AE15               	btfss	(___lodiv@divisor+7)^0,7,c
 14068  004A0A  EF09  F025         	goto	u8161
 14069  004A0E  EF0B  F025         	goto	u8160
 14070  004A12                     u8161:
 14071  004A12  EFFA  F024         	goto	l6811
 14072  004A16                     u8160:
 14073  004A16                     l6815:
 14074  004A16  90D8               	bcf	status,0,c
 14075  004A18  3616               	rlcf	___lodiv@quotient^0,f,c
 14076  004A1A  3617               	rlcf	(___lodiv@quotient+1)^0,f,c
 14077  004A1C  3618               	rlcf	(___lodiv@quotient+2)^0,f,c
 14078  004A1E  3619               	rlcf	(___lodiv@quotient+3)^0,f,c
 14079  004A20  361A               	rlcf	(___lodiv@quotient+4)^0,f,c
 14080  004A22  361B               	rlcf	(___lodiv@quotient+5)^0,f,c
 14081  004A24  361C               	rlcf	(___lodiv@quotient+6)^0,f,c
 14082  004A26  361D               	rlcf	(___lodiv@quotient+7)^0,f,c
 14083  004A28  500E               	movf	___lodiv@divisor^0,w,c
 14084  004A2A  5C06               	subwf	___lodiv@dividend^0,w,c
 14085  004A2C  500F               	movf	(___lodiv@divisor+1)^0,w,c
 14086  004A2E  5807               	subwfb	(___lodiv@dividend+1)^0,w,c
 14087  004A30  5010               	movf	(___lodiv@divisor+2)^0,w,c
 14088  004A32  5808               	subwfb	(___lodiv@dividend+2)^0,w,c
 14089  004A34  5011               	movf	(___lodiv@divisor+3)^0,w,c
 14090  004A36  5809               	subwfb	(___lodiv@dividend+3)^0,w,c
 14091  004A38  5012               	movf	(___lodiv@divisor+4)^0,w,c
 14092  004A3A  580A               	subwfb	(___lodiv@dividend+4)^0,w,c
 14093  004A3C  5013               	movf	(___lodiv@divisor+5)^0,w,c
 14094  004A3E  580B               	subwfb	(___lodiv@dividend+5)^0,w,c
 14095  004A40  5014               	movf	(___lodiv@divisor+6)^0,w,c
 14096  004A42  580C               	subwfb	(___lodiv@dividend+6)^0,w,c
 14097  004A44  5015               	movf	(___lodiv@divisor+7)^0,w,c
 14098  004A46  580D               	subwfb	(___lodiv@dividend+7)^0,w,c
 14099  004A48  A0D8               	btfss	status,0,c
 14100  004A4A  EF29  F025         	goto	u8171
 14101  004A4E  EF2B  F025         	goto	u8170
 14102  004A52                     u8171:
 14103  004A52  EF3C  F025         	goto	l6823
 14104  004A56                     u8170:
 14105  004A56  500E               	movf	___lodiv@divisor^0,w,c
 14106  004A58  5E06               	subwf	___lodiv@dividend^0,f,c
 14107  004A5A  500F               	movf	(___lodiv@divisor+1)^0,w,c
 14108  004A5C  5A07               	subwfb	(___lodiv@dividend+1)^0,f,c
 14109  004A5E  5010               	movf	(___lodiv@divisor+2)^0,w,c
 14110  004A60  5A08               	subwfb	(___lodiv@dividend+2)^0,f,c
 14111  004A62  5011               	movf	(___lodiv@divisor+3)^0,w,c
 14112  004A64  5A09               	subwfb	(___lodiv@dividend+3)^0,f,c
 14113  004A66  5012               	movf	(___lodiv@divisor+4)^0,w,c
 14114  004A68  5A0A               	subwfb	(___lodiv@dividend+4)^0,f,c
 14115  004A6A  5013               	movf	(___lodiv@divisor+5)^0,w,c
 14116  004A6C  5A0B               	subwfb	(___lodiv@dividend+5)^0,f,c
 14117  004A6E  5014               	movf	(___lodiv@divisor+6)^0,w,c
 14118  004A70  5A0C               	subwfb	(___lodiv@dividend+6)^0,f,c
 14119  004A72  5015               	movf	(___lodiv@divisor+7)^0,w,c
 14120  004A74  5A0D               	subwfb	(___lodiv@dividend+7)^0,f,c
 14121  004A76  8016               	bsf	___lodiv@quotient^0,0,c
 14122  004A78                     l6823:
 14123  004A78  90D8               	bcf	status,0,c
 14124  004A7A  3215               	rrcf	(___lodiv@divisor+7)^0,f,c
 14125  004A7C  3214               	rrcf	(___lodiv@divisor+6)^0,f,c
 14126  004A7E  3213               	rrcf	(___lodiv@divisor+5)^0,f,c
 14127  004A80  3212               	rrcf	(___lodiv@divisor+4)^0,f,c
 14128  004A82  3211               	rrcf	(___lodiv@divisor+3)^0,f,c
 14129  004A84  3210               	rrcf	(___lodiv@divisor+2)^0,f,c
 14130  004A86  320F               	rrcf	(___lodiv@divisor+1)^0,f,c
 14131  004A88  320E               	rrcf	___lodiv@divisor^0,f,c
 14132  004A8A  2E1E               	decfsz	___lodiv@counter^0,f,c
 14133  004A8C  EF0B  F025         	goto	l6815
 14134  004A90                     l1127:
 14135  004A90  C016  F006         	movff	___lodiv@quotient,?___lodiv
 14136  004A94  C017  F007         	movff	___lodiv@quotient+1,?___lodiv+1
 14137  004A98  C018  F008         	movff	___lodiv@quotient+2,?___lodiv+2
 14138  004A9C  C019  F009         	movff	___lodiv@quotient+3,?___lodiv+3
 14139  004AA0  C01A  F00A         	movff	___lodiv@quotient+4,?___lodiv+4
 14140  004AA4  C01B  F00B         	movff	___lodiv@quotient+5,?___lodiv+5
 14141  004AA8  C01C  F00C         	movff	___lodiv@quotient+6,?___lodiv+6
 14142  004AAC  C01D  F00D         	movff	___lodiv@quotient+7,?___lodiv+7
 14143  004AB0  0012               	return		;funcret
 14144  004AB2                     __end_of___lodiv:
 14145                           	callstack 0
 14146                           
 14147 ;; *************** function _strncmp *****************
 14148 ;; Defined at:
 14149 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
 14150 ;; Parameters:    Size  Location     Type
 14151 ;;  _l              2    5[COMRAM] PTR const unsigned char 
 14152 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 14153 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 14154 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 14155 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 14156 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 14157 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 14158 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 14159 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 14160 ;;  _r              2    7[COMRAM] PTR const unsigned char 
 14161 ;;		 -> STR_52(3), STR_48(3), STR_43(3), STR_38(3), 
 14162 ;;		 -> STR_34(3), 
 14163 ;;  n               2    9[COMRAM] unsigned int 
 14164 ;; Auto vars:     Size  Location     Type
 14165 ;;  r               2   14[COMRAM] PTR const unsigned char 
 14166 ;;		 -> STR_52(3), STR_48(3), STR_43(3), STR_38(3), 
 14167 ;;		 -> STR_34(3), 
 14168 ;;  l               2   12[COMRAM] PTR const unsigned char 
 14169 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 14170 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 14171 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 14172 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 14173 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 14174 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 14175 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 14176 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 14177 ;; Return value:  Size  Location     Type
 14178 ;;                  2    5[COMRAM] int 
 14179 ;; Registers used:
 14180 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 14181 ;; Tracked objects:
 14182 ;;		On entry : 0/0
 14183 ;;		On exit  : 0/0
 14184 ;;		Unchanged: 0/0
 14185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14186 ;;      Params:         6       0       0       0       0       0       0
 14187 ;;      Locals:         4       0       0       0       0       0       0
 14188 ;;      Temps:          1       0       0       0       0       0       0
 14189 ;;      Totals:        11       0       0       0       0       0       0
 14190 ;;Total ram usage:       11 bytes
 14191 ;; Hardware stack levels used: 1
 14192 ;; Hardware stack levels required when called: 1
 14193 ;; This function calls:
 14194 ;;		Nothing
 14195 ;; This function is called by:
 14196 ;;		_vfpfcnvrt
 14197 ;; This function uses a non-reentrant model
 14198 ;;
 14199                           
 14200                           	psect	text50
 14201  004C76                     __ptext50:
 14202                           	callstack 0
 14203  004C76                     _strncmp:
 14204                           	callstack 25
 14205  004C76  C006  F00D         	movff	strncmp@_l,strncmp@l
 14206  004C7A  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
 14207  004C7E  C008  F00F         	movff	strncmp@_r,strncmp@r
 14208  004C82  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
 14209  004C86  060A               	decf	strncmp@n^0,f,c
 14210  004C88  A0D8               	btfss	status,0,c
 14211  004C8A  060B               	decf	(strncmp@n+1)^0,f,c
 14212  004C8C  280A               	incf	strncmp@n^0,w,c
 14213  004C8E  E106               	bnz	u8931
 14214  004C90  280B               	incf	(strncmp@n+1)^0,w,c
 14215  004C92  A4D8               	btfss	status,2,c
 14216  004C94  EF4E  F026         	goto	u8931
 14217  004C98  EF50  F026         	goto	u8930
 14218  004C9C                     u8931:
 14219  004C9C  EF5D  F026         	goto	l7159
 14220  004CA0                     u8930:
 14221  004CA0  0E00               	movlw	0
 14222  004CA2  6E07               	movwf	(?_strncmp+1)^0,c
 14223  004CA4  0E00               	movlw	0
 14224  004CA6  6E06               	movwf	?_strncmp^0,c
 14225  004CA8  EFA9  F026         	goto	l1645
 14226  004CAC                     l7157:
 14227  004CAC  4A0D               	infsnz	strncmp@l^0,f,c
 14228  004CAE  2A0E               	incf	(strncmp@l+1)^0,f,c
 14229  004CB0  4A0F               	infsnz	strncmp@r^0,f,c
 14230  004CB2  2A10               	incf	(strncmp@r+1)^0,f,c
 14231  004CB4  060A               	decf	strncmp@n^0,f,c
 14232  004CB6  A0D8               	btfss	status,0,c
 14233  004CB8  060B               	decf	(strncmp@n+1)^0,f,c
 14234  004CBA                     l7159:
 14235  004CBA  C00D  FFF6         	movff	strncmp@l,tblptrl
 14236  004CBE  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 14237  004CC2                     	if	0	;tblptru may be non-zero
 14238  004CC2                     	endif
 14239  004CC2                     	if	0	;tblptru may be non-zero
 14240  004CC2                     	endif
 14241  004CC2  0008               	tblrd		*
 14242  004CC4  50F5               	movf	tablat,w,c
 14243  004CC6  0900               	iorlw	0
 14244  004CC8  B4D8               	btfsc	status,2,c
 14245  004CCA  EF69  F026         	goto	u8941
 14246  004CCE  EF6B  F026         	goto	u8940
 14247  004CD2                     u8941:
 14248  004CD2  EF97  F026         	goto	l7167
 14249  004CD6                     u8940:
 14250  004CD6  C00F  FFF6         	movff	strncmp@r,tblptrl
 14251  004CDA  C010  FFF7         	movff	strncmp@r+1,tblptrh
 14252  004CDE                     	if	0	;tblptru may be non-zero
 14253  004CDE                     	endif
 14254  004CDE                     	if	0	;tblptru may be non-zero
 14255  004CDE                     	endif
 14256  004CDE  0008               	tblrd		*
 14257  004CE0  50F5               	movf	tablat,w,c
 14258  004CE2  0900               	iorlw	0
 14259  004CE4  B4D8               	btfsc	status,2,c
 14260  004CE6  EF77  F026         	goto	u8951
 14261  004CEA  EF79  F026         	goto	u8950
 14262  004CEE                     u8951:
 14263  004CEE  EF97  F026         	goto	l7167
 14264  004CF2                     u8950:
 14265  004CF2  500A               	movf	strncmp@n^0,w,c
 14266  004CF4  100B               	iorwf	(strncmp@n+1)^0,w,c
 14267  004CF6  B4D8               	btfsc	status,2,c
 14268  004CF8  EF80  F026         	goto	u8961
 14269  004CFC  EF82  F026         	goto	u8960
 14270  004D00                     u8961:
 14271  004D00  EF97  F026         	goto	l7167
 14272  004D04                     u8960:
 14273  004D04  C00D  FFF6         	movff	strncmp@l,tblptrl
 14274  004D08  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 14275  004D0C                     	if	0	;tblptru may be non-zero
 14276  004D0C                     	endif
 14277  004D0C                     	if	0	;tblptru may be non-zero
 14278  004D0C                     	endif
 14279  004D0C  0008               	tblrd		*
 14280  004D0E  CFF5 F00C          	movff	tablat,??_strncmp
 14281  004D12  C00F  FFF6         	movff	strncmp@r,tblptrl
 14282  004D16  C010  FFF7         	movff	strncmp@r+1,tblptrh
 14283  004D1A                     	if	0	;tblptru may be non-zero
 14284  004D1A                     	endif
 14285  004D1A                     	if	0	;tblptru may be non-zero
 14286  004D1A                     	endif
 14287  004D1A  0008               	tblrd		*
 14288  004D1C  50F5               	movf	tablat,w,c
 14289  004D1E  180C               	xorwf	??_strncmp^0,w,c
 14290  004D20  B4D8               	btfsc	status,2,c
 14291  004D22  EF95  F026         	goto	u8971
 14292  004D26  EF97  F026         	goto	u8970
 14293  004D2A                     u8971:
 14294  004D2A  EF56  F026         	goto	l7157
 14295  004D2E                     u8970:
 14296  004D2E                     l7167:
 14297  004D2E  C00D  FFF6         	movff	strncmp@l,tblptrl
 14298  004D32  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 14299  004D36                     	if	0	;tblptru may be non-zero
 14300  004D36                     	endif
 14301  004D36                     	if	0	;tblptru may be non-zero
 14302  004D36                     	endif
 14303  004D36  0008               	tblrd		*
 14304  004D38  CFF5 F00C          	movff	tablat,??_strncmp
 14305  004D3C  C00F  FFF6         	movff	strncmp@r,tblptrl
 14306  004D40  C010  FFF7         	movff	strncmp@r+1,tblptrh
 14307  004D44                     	if	0	;tblptru may be non-zero
 14308  004D44                     	endif
 14309  004D44                     	if	0	;tblptru may be non-zero
 14310  004D44                     	endif
 14311  004D44  0008               	tblrd		*
 14312  004D46  50F5               	movf	tablat,w,c
 14313  004D48  5C0C               	subwf	??_strncmp^0,w,c
 14314  004D4A  6E06               	movwf	?_strncmp^0,c
 14315  004D4C  6A07               	clrf	(?_strncmp+1)^0,c
 14316  004D4E  A0D8               	btfss	status,0,c
 14317  004D50  0607               	decf	(?_strncmp+1)^0,f,c
 14318  004D52                     l1645:
 14319  004D52  0012               	return		;funcret
 14320  004D54                     __end_of_strncmp:
 14321                           	callstack 0
 14322                           
 14323 ;; *************** function _stoa *****************
 14324 ;; Defined at:
 14325 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 14326 ;; Parameters:    Size  Location     Type
 14327 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 14328 ;;		 -> NULL(0), 
 14329 ;;  s               2   17[COMRAM] PTR unsigned char 
 14330 ;;		 -> ?_printf(2), main@fno(22), put_rc@str(69), 
 14331 ;; Auto vars:     Size  Location     Type
 14332 ;;  nuls            7   20[COMRAM] unsigned char [7]
 14333 ;;  l               2   35[COMRAM] int 
 14334 ;;  p               2   33[COMRAM] int 
 14335 ;;  cp              2   31[COMRAM] PTR unsigned char 
 14336 ;;		 -> stoa@nuls(7), ?_printf(2), main@fno(22), put_rc@str(69), 
 14337 ;;  w               2   29[COMRAM] int 
 14338 ;;  i               2   27[COMRAM] int 
 14339 ;; Return value:  Size  Location     Type
 14340 ;;                  2   15[COMRAM] int 
 14341 ;; Registers used:
 14342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14343 ;; Tracked objects:
 14344 ;;		On entry : 0/0
 14345 ;;		On exit  : 0/0
 14346 ;;		Unchanged: 0/0
 14347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14348 ;;      Params:         4       0       0       0       0       0       0
 14349 ;;      Locals:        17       0       0       0       0       0       0
 14350 ;;      Temps:          1       0       0       0       0       0       0
 14351 ;;      Totals:        22       0       0       0       0       0       0
 14352 ;;Total ram usage:       22 bytes
 14353 ;; Hardware stack levels used: 1
 14354 ;; Hardware stack levels required when called: 3
 14355 ;; This function calls:
 14356 ;;		_fputc
 14357 ;;		_strlen
 14358 ;; This function is called by:
 14359 ;;		_vfpfcnvrt
 14360 ;; This function uses a non-reentrant model
 14361 ;;
 14362                           
 14363                           	psect	text51
 14364  003620                     __ptext51:
 14365                           	callstack 0
 14366  003620                     _stoa:
 14367                           	callstack 23
 14368  003620                     
 14369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
 14370  003620  EE21  F0E1         	lfsr	2,stoa@F1141
 14371  003624  EE10  F015         	lfsr	1,stoa@nuls
 14372  003628  0E06               	movlw	6
 14373  00362A                     u8521:
 14374  00362A  CFDB FFE3          	movff	plusw2,plusw1
 14375  00362E  06E8               	decf	wreg,f,c
 14376  003630  E2FC               	bc	u8521
 14377  003632                     
 14378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
 14379  003632  C012  F020         	movff	stoa@s,stoa@cp
 14380  003636  C013  F021         	movff	stoa@s+1,stoa@cp+1
 14381  00363A                     
 14382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
 14383  00363A  5020               	movf	stoa@cp^0,w,c
 14384  00363C  1021               	iorwf	(stoa@cp+1)^0,w,c
 14385  00363E  A4D8               	btfss	status,2,c
 14386  003640  EF24  F01B         	goto	u8531
 14387  003644  EF26  F01B         	goto	u8530
 14388  003648                     u8531:
 14389  003648  EF2A  F01B         	goto	l6973
 14390  00364C                     u8530:
 14391  00364C                     
 14392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
 14393  00364C  0E15               	movlw	low stoa@nuls
 14394  00364E  6E20               	movwf	stoa@cp^0,c
 14395  003650  0E00               	movlw	high stoa@nuls
 14396  003652  6E21               	movwf	(stoa@cp+1)^0,c
 14397  003654                     l6973:
 14398                           
 14399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
 14400  003654  C020  F006         	movff	stoa@cp,strlen@s
 14401  003658  C021  F007         	movff	stoa@cp+1,strlen@s+1
 14402  00365C  EC63  F02B         	call	_strlen	;wreg free
 14403  003660  C006  F024         	movff	?_strlen,stoa@l
 14404  003664  C007  F025         	movff	?_strlen+1,stoa@l+1
 14405  003668                     
 14406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
 14407  003668  C075  F022         	movff	_prec,stoa@p
 14408  00366C  C076  F023         	movff	_prec+1,stoa@p+1
 14409  003670                     
 14410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
 14411  003670  BE23               	btfsc	(stoa@p+1)^0,7,c
 14412  003672  EF3D  F01B         	goto	u8541
 14413  003676  EF3F  F01B         	goto	u8540
 14414  00367A                     u8541:
 14415  00367A  EF54  F01B         	goto	l1456
 14416  00367E                     u8540:
 14417  00367E  5024               	movf	stoa@l^0,w,c
 14418  003680  5C22               	subwf	stoa@p^0,w,c
 14419  003682  5023               	movf	(stoa@p+1)^0,w,c
 14420  003684  0A80               	xorlw	128
 14421  003686  6E14               	movwf	??_stoa^0,c
 14422  003688  5025               	movf	(stoa@l+1)^0,w,c
 14423  00368A  0A80               	xorlw	128
 14424  00368C  5814               	subwfb	??_stoa^0,w,c
 14425  00368E  A0D8               	btfss	status,0,c
 14426  003690  EF4C  F01B         	goto	u8551
 14427  003694  EF4E  F01B         	goto	u8550
 14428  003698                     u8551:
 14429  003698  EF50  F01B         	goto	l1454
 14430  00369C                     u8550:
 14431  00369C  EF54  F01B         	goto	l1456
 14432  0036A0                     l1454:
 14433  0036A0  C022  F024         	movff	stoa@p,stoa@l
 14434  0036A4  C023  F025         	movff	stoa@p+1,stoa@l+1
 14435  0036A8                     l1456:
 14436                           
 14437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
 14438  0036A8  C024  F022         	movff	stoa@l,stoa@p
 14439  0036AC  C025  F023         	movff	stoa@l+1,stoa@p+1
 14440                           
 14441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
 14442  0036B0  C0ED  F01E         	movff	_width,stoa@w
 14443  0036B4  C0EE  F01F         	movff	_width+1,stoa@w+1
 14444                           
 14445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
 14446  0036B8  B077               	btfsc	_flags^0,0,c
 14447  0036BA  EF61  F01B         	goto	u8561
 14448  0036BE  EF63  F01B         	goto	u8560
 14449  0036C2                     u8561:
 14450  0036C2  EF80  F01B         	goto	l6989
 14451  0036C6                     u8560:
 14452  0036C6  EF71  F01B         	goto	l6987
 14453  0036CA                     l6983:
 14454                           
 14455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
 14456  0036CA  0E00               	movlw	0
 14457  0036CC  6E08               	movwf	(fputc@c+1)^0,c
 14458  0036CE  0E20               	movlw	32
 14459  0036D0  6E07               	movwf	fputc@c^0,c
 14460  0036D2  C010  F009         	movff	stoa@fp,fputc@fp
 14461  0036D6  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 14462  0036DA  EC31  F029         	call	_fputc	;wreg free
 14463  0036DE                     
 14464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
 14465  0036DE  4A24               	infsnz	stoa@l^0,f,c
 14466  0036E0  2A25               	incf	(stoa@l+1)^0,f,c
 14467  0036E2                     l6987:
 14468                           
 14469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
 14470  0036E2  501E               	movf	stoa@w^0,w,c
 14471  0036E4  5C24               	subwf	stoa@l^0,w,c
 14472  0036E6  5025               	movf	(stoa@l+1)^0,w,c
 14473  0036E8  0A80               	xorlw	128
 14474  0036EA  6E14               	movwf	??_stoa^0,c
 14475  0036EC  501F               	movf	(stoa@w+1)^0,w,c
 14476  0036EE  0A80               	xorlw	128
 14477  0036F0  5814               	subwfb	??_stoa^0,w,c
 14478  0036F2  A0D8               	btfss	status,0,c
 14479  0036F4  EF7E  F01B         	goto	u8571
 14480  0036F8  EF80  F01B         	goto	u8570
 14481  0036FC                     u8571:
 14482  0036FC  EF65  F01B         	goto	l6983
 14483  003700                     u8570:
 14484  003700                     l6989:
 14485                           
 14486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
 14487  003700  0E00               	movlw	0
 14488  003702  6E1D               	movwf	(stoa@i+1)^0,c
 14489  003704  0E00               	movlw	0
 14490  003706  6E1C               	movwf	stoa@i^0,c
 14491                           
 14492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
 14493  003708  EFA4  F01B         	goto	l6997
 14494  00370C                     l6991:
 14495                           
 14496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
 14497  00370C  C020  FFF6         	movff	stoa@cp,tblptrl
 14498  003710  C021  FFF7         	movff	stoa@cp+1,tblptrh
 14499  003714  6AF8               	clrf	tblptru,c
 14500  003716  0E05               	movlw	(high __ramtop+-1)
 14501  003718  64F7               	cpfsgt	tblptrh,c
 14502  00371A  D003               	bra	u8587
 14503  00371C  0008               	tblrd		*
 14504  00371E  50F5               	movf	tablat,w,c
 14505  003720  D005               	bra	u8580
 14506  003722                     u8587:
 14507  003722  CFF6 FFE1          	movff	tblptrl,fsr1l
 14508  003726  CFF7 FFE2          	movff	tblptrh,fsr1h
 14509  00372A  50E7               	movf	indf1,w,c
 14510  00372C                     u8580:
 14511  00372C  6E14               	movwf	??_stoa^0,c
 14512  00372E  5014               	movf	??_stoa^0,w,c
 14513  003730  6E07               	movwf	fputc@c^0,c
 14514  003732  6A08               	clrf	(fputc@c+1)^0,c
 14515  003734  C010  F009         	movff	stoa@fp,fputc@fp
 14516  003738  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 14517  00373C  EC31  F029         	call	_fputc	;wreg free
 14518  003740                     
 14519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
 14520  003740  4A20               	infsnz	stoa@cp^0,f,c
 14521  003742  2A21               	incf	(stoa@cp+1)^0,f,c
 14522  003744                     
 14523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
 14524  003744  4A1C               	infsnz	stoa@i^0,f,c
 14525  003746  2A1D               	incf	(stoa@i+1)^0,f,c
 14526  003748                     l6997:
 14527                           
 14528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
 14529  003748  5022               	movf	stoa@p^0,w,c
 14530  00374A  5C1C               	subwf	stoa@i^0,w,c
 14531  00374C  501D               	movf	(stoa@i+1)^0,w,c
 14532  00374E  0A80               	xorlw	128
 14533  003750  6E14               	movwf	??_stoa^0,c
 14534  003752  5023               	movf	(stoa@p+1)^0,w,c
 14535  003754  0A80               	xorlw	128
 14536  003756  5814               	subwfb	??_stoa^0,w,c
 14537  003758  A0D8               	btfss	status,0,c
 14538  00375A  EFB1  F01B         	goto	u8591
 14539  00375E  EFB3  F01B         	goto	u8590
 14540  003762                     u8591:
 14541  003762  EF86  F01B         	goto	l6991
 14542  003766                     u8590:
 14543  003766                     
 14544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
 14545  003766  A077               	btfss	_flags^0,0,c
 14546  003768  EFB8  F01B         	goto	u8601
 14547  00376C  EFBA  F01B         	goto	u8600
 14548  003770                     u8601:
 14549  003770  EFD7  F01B         	goto	l1466
 14550  003774                     u8600:
 14551  003774  EFC8  F01B         	goto	l7005
 14552  003778                     l7001:
 14553                           
 14554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
 14555  003778  0E00               	movlw	0
 14556  00377A  6E08               	movwf	(fputc@c+1)^0,c
 14557  00377C  0E20               	movlw	32
 14558  00377E  6E07               	movwf	fputc@c^0,c
 14559  003780  C010  F009         	movff	stoa@fp,fputc@fp
 14560  003784  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 14561  003788  EC31  F029         	call	_fputc	;wreg free
 14562  00378C                     
 14563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
 14564  00378C  4A24               	infsnz	stoa@l^0,f,c
 14565  00378E  2A25               	incf	(stoa@l+1)^0,f,c
 14566  003790                     l7005:
 14567                           
 14568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
 14569  003790  501E               	movf	stoa@w^0,w,c
 14570  003792  5C24               	subwf	stoa@l^0,w,c
 14571  003794  5025               	movf	(stoa@l+1)^0,w,c
 14572  003796  0A80               	xorlw	128
 14573  003798  6E14               	movwf	??_stoa^0,c
 14574  00379A  501F               	movf	(stoa@w+1)^0,w,c
 14575  00379C  0A80               	xorlw	128
 14576  00379E  5814               	subwfb	??_stoa^0,w,c
 14577  0037A0  A0D8               	btfss	status,0,c
 14578  0037A2  EFD5  F01B         	goto	u8611
 14579  0037A6  EFD7  F01B         	goto	u8610
 14580  0037AA                     u8611:
 14581  0037AA  EFBC  F01B         	goto	l7001
 14582  0037AE                     u8610:
 14583  0037AE                     l1466:
 14584                           
 14585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
 14586  0037AE  C024  F010         	movff	stoa@l,?_stoa
 14587  0037B2  C025  F011         	movff	stoa@l+1,?_stoa+1
 14588  0037B6  0012               	return		;funcret
 14589  0037B8                     __end_of_stoa:
 14590                           	callstack 0
 14591                           
 14592 ;; *************** function _dtoa *****************
 14593 ;; Defined at:
 14594 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 14595 ;; Parameters:    Size  Location     Type
 14596 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 14597 ;;		 -> NULL(0), 
 14598 ;;  d               8   35[COMRAM] long long 
 14599 ;; Auto vars:     Size  Location     Type
 14600 ;;  n               8   59[COMRAM] long long 
 14601 ;;  i               2   67[COMRAM] int 
 14602 ;;  s               2   57[COMRAM] int 
 14603 ;;  w               2   55[COMRAM] int 
 14604 ;;  p               2   53[COMRAM] int 
 14605 ;; Return value:  Size  Location     Type
 14606 ;;                  2   33[COMRAM] int 
 14607 ;; Registers used:
 14608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14609 ;; Tracked objects:
 14610 ;;		On entry : 0/0
 14611 ;;		On exit  : 0/0
 14612 ;;		Unchanged: 0/0
 14613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14614 ;;      Params:        10       0       0       0       0       0       0
 14615 ;;      Locals:        18       0       0       0       0       0       0
 14616 ;;      Temps:          8       0       0       0       0       0       0
 14617 ;;      Totals:        36       0       0       0       0       0       0
 14618 ;;Total ram usage:       36 bytes
 14619 ;; Hardware stack levels used: 1
 14620 ;; Hardware stack levels required when called: 5
 14621 ;; This function calls:
 14622 ;;		___aodiv
 14623 ;;		___aomod
 14624 ;;		_abs
 14625 ;;		_pad
 14626 ;; This function is called by:
 14627 ;;		_vfpfcnvrt
 14628 ;; This function uses a non-reentrant model
 14629 ;;
 14630                           
 14631                           	psect	text52
 14632  001F10                     __ptext52:
 14633                           	callstack 0
 14634  001F10                     _dtoa:
 14635                           	callstack 21
 14636  001F10                     
 14637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 14638  001F10  C024  F03C         	movff	dtoa@d,dtoa@n
 14639  001F14  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 14640  001F18  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 14641  001F1C  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 14642  001F20  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 14643  001F24  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 14644  001F28  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 14645  001F2C  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 14646  001F30                     
 14647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 14648  001F30  BE43               	btfsc	(dtoa@n+7)^0,7,c
 14649  001F32  EF9D  F00F         	goto	u8371
 14650  001F36  EFA0  F00F         	goto	u8370
 14651  001F3A                     u8371:
 14652  001F3A  0E01               	movlw	1
 14653  001F3C  EFA1  F00F         	goto	u8380
 14654  001F40                     u8370:
 14655  001F40  0E00               	movlw	0
 14656  001F42                     u8380:
 14657  001F42  6E3A               	movwf	dtoa@s^0,c
 14658  001F44  6A3B               	clrf	(dtoa@s+1)^0,c
 14659                           
 14660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 14661  001F46  503A               	movf	dtoa@s^0,w,c
 14662  001F48  103B               	iorwf	(dtoa@s+1)^0,w,c
 14663  001F4A  B4D8               	btfsc	status,2,c
 14664  001F4C  EFAA  F00F         	goto	u8391
 14665  001F50  EFAC  F00F         	goto	u8390
 14666  001F54                     u8391:
 14667  001F54  EFBC  F00F         	goto	l6909
 14668  001F58                     u8390:
 14669  001F58                     
 14670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 14671  001F58  1E43               	comf	(dtoa@n+7)^0,f,c
 14672  001F5A  1E42               	comf	(dtoa@n+6)^0,f,c
 14673  001F5C  1E41               	comf	(dtoa@n+5)^0,f,c
 14674  001F5E  1E40               	comf	(dtoa@n+4)^0,f,c
 14675  001F60  1E3F               	comf	(dtoa@n+3)^0,f,c
 14676  001F62  1E3E               	comf	(dtoa@n+2)^0,f,c
 14677  001F64  1E3D               	comf	(dtoa@n+1)^0,f,c
 14678  001F66  6C3C               	negf	dtoa@n^0,c
 14679  001F68  0E00               	movlw	0
 14680  001F6A  223D               	addwfc	(dtoa@n+1)^0,f,c
 14681  001F6C  223E               	addwfc	(dtoa@n+2)^0,f,c
 14682  001F6E  223F               	addwfc	(dtoa@n+3)^0,f,c
 14683  001F70  2240               	addwfc	(dtoa@n+4)^0,f,c
 14684  001F72  2241               	addwfc	(dtoa@n+5)^0,f,c
 14685  001F74  2242               	addwfc	(dtoa@n+6)^0,f,c
 14686  001F76  2243               	addwfc	(dtoa@n+7)^0,f,c
 14687  001F78                     l6909:
 14688                           
 14689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 14690  001F78  BE76               	btfsc	(_prec+1)^0,7,c
 14691  001F7A  EFC1  F00F         	goto	u8401
 14692  001F7E  EFC3  F00F         	goto	u8400
 14693  001F82                     u8401:
 14694  001F82  EFC4  F00F         	goto	l6913
 14695  001F86                     u8400:
 14696  001F86                     
 14697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 14698  001F86  9277               	bcf	_flags^0,1,c
 14699  001F88                     l6913:
 14700                           
 14701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 14702  001F88  BE76               	btfsc	(_prec+1)^0,7,c
 14703  001F8A  EFD1  F00F         	goto	u8410
 14704  001F8E  5076               	movf	(_prec+1)^0,w,c
 14705  001F90  E106               	bnz	u8411
 14706  001F92  0475               	decf	_prec^0,w,c
 14707  001F94  B0D8               	btfsc	status,0,c
 14708  001F96  EFCF  F00F         	goto	u8411
 14709  001F9A  EFD1  F00F         	goto	u8410
 14710  001F9E                     u8411:
 14711  001F9E  EFD7  F00F         	goto	l1427
 14712  001FA2                     u8410:
 14713  001FA2  0E00               	movlw	0
 14714  001FA4  6E37               	movwf	(dtoa@p+1)^0,c
 14715  001FA6  0E01               	movlw	1
 14716  001FA8  6E36               	movwf	dtoa@p^0,c
 14717  001FAA  EFDB  F00F         	goto	l1429
 14718  001FAE                     l1427:
 14719  001FAE  C075  F036         	movff	_prec,dtoa@p
 14720  001FB2  C076  F037         	movff	_prec+1,dtoa@p+1
 14721  001FB6                     l1429:
 14722                           
 14723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 14724  001FB6  C0ED  F038         	movff	_width,dtoa@w
 14725  001FBA  C0EE  F039         	movff	_width+1,dtoa@w+1
 14726  001FBE                     
 14727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 14728  001FBE  503A               	movf	dtoa@s^0,w,c
 14729  001FC0  103B               	iorwf	(dtoa@s+1)^0,w,c
 14730  001FC2  A4D8               	btfss	status,2,c
 14731  001FC4  EFE6  F00F         	goto	u8421
 14732  001FC8  EFE8  F00F         	goto	u8420
 14733  001FCC                     u8421:
 14734  001FCC  EFEF  F00F         	goto	l6921
 14735  001FD0                     u8420:
 14736  001FD0  A477               	btfss	_flags^0,2,c
 14737  001FD2  EFED  F00F         	goto	u8431
 14738  001FD6  EFEF  F00F         	goto	u8430
 14739  001FDA                     u8431:
 14740  001FDA  EFF2  F00F         	goto	l6923
 14741  001FDE                     u8430:
 14742  001FDE                     l6921:
 14743                           
 14744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 14745  001FDE  0638               	decf	dtoa@w^0,f,c
 14746  001FE0  A0D8               	btfss	status,0,c
 14747  001FE2  0639               	decf	(dtoa@w+1)^0,f,c
 14748  001FE4                     l6923:
 14749                           
 14750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 14751  001FE4  0E00               	movlw	0
 14752  001FE6  6E45               	movwf	(dtoa@i+1)^0,c
 14753  001FE8  0E1F               	movlw	31
 14754  001FEA  6E44               	movwf	dtoa@i^0,c
 14755  001FEC                     
 14756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 14757  001FEC  0E00               	movlw	0
 14758  001FEE  0101               	movlb	1	; () banked
 14759  001FF0  6FE0               	movwf	(_dbuf+31)& (0+255),b
 14760                           
 14761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14762  001FF2  EF77  F010         	goto	l6937
 14763  001FF6                     l6927:
 14764                           
 14765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 14766  001FF6  0644               	decf	dtoa@i^0,f,c
 14767  001FF8  A0D8               	btfss	status,0,c
 14768  001FFA  0645               	decf	(dtoa@i+1)^0,f,c
 14769  001FFC                     
 14770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 14771  001FFC  0EC1               	movlw	low _dbuf
 14772  001FFE  2444               	addwf	dtoa@i^0,w,c
 14773  002000  6ED9               	movwf	fsr2l,c
 14774  002002  0E01               	movlw	high _dbuf
 14775  002004  2045               	addwfc	(dtoa@i+1)^0,w,c
 14776  002006  6EDA               	movwf	fsr2h,c
 14777  002008  C03C  F006         	movff	dtoa@n,___aomod@dividend
 14778  00200C  C03D  F007         	movff	dtoa@n+1,___aomod@dividend+1
 14779  002010  C03E  F008         	movff	dtoa@n+2,___aomod@dividend+2
 14780  002014  C03F  F009         	movff	dtoa@n+3,___aomod@dividend+3
 14781  002018  C040  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 14782  00201C  C041  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 14783  002020  C042  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 14784  002024  C043  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 14785  002028  0E0A               	movlw	10
 14786  00202A  6E0E               	movwf	___aomod@divisor^0,c
 14787  00202C  0E00               	movlw	0
 14788  00202E  6E0F               	movwf	(___aomod@divisor+1)^0,c
 14789  002030  0E00               	movlw	0
 14790  002032  6E10               	movwf	(___aomod@divisor+2)^0,c
 14791  002034  0E00               	movlw	0
 14792  002036  6E11               	movwf	(___aomod@divisor+3)^0,c
 14793  002038  0E00               	movlw	0
 14794  00203A  6E12               	movwf	(___aomod@divisor+4)^0,c
 14795  00203C  0E00               	movlw	0
 14796  00203E  6E13               	movwf	(___aomod@divisor+5)^0,c
 14797  002040  0E00               	movlw	0
 14798  002042  6E14               	movwf	(___aomod@divisor+6)^0,c
 14799  002044  0E00               	movlw	0
 14800  002046  6E15               	movwf	(___aomod@divisor+7)^0,c
 14801  002048  ECD8  F021         	call	___aomod	;wreg free
 14802  00204C  C006  F02C         	movff	?___aomod,??_dtoa
 14803  002050  C007  F02D         	movff	?___aomod+1,??_dtoa+1
 14804  002054  C008  F02E         	movff	?___aomod+2,??_dtoa+2
 14805  002058  C009  F02F         	movff	?___aomod+3,??_dtoa+3
 14806  00205C  C00A  F030         	movff	?___aomod+4,??_dtoa+4
 14807  002060  C00B  F031         	movff	?___aomod+5,??_dtoa+5
 14808  002064  C00C  F032         	movff	?___aomod+6,??_dtoa+6
 14809  002068  C00D  F033         	movff	?___aomod+7,??_dtoa+7
 14810  00206C  C02C  F018         	movff	??_dtoa,abs@a
 14811  002070  C02E  F019         	movff	??_dtoa+2,abs@a+1
 14812  002074  ECAC  F02B         	call	_abs	;wreg free
 14813  002078  5018               	movf	?_abs^0,w,c
 14814  00207A  0F30               	addlw	48
 14815  00207C  6EDF               	movwf	indf2,c
 14816  00207E                     
 14817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 14818  00207E  0636               	decf	dtoa@p^0,f,c
 14819  002080  A0D8               	btfss	status,0,c
 14820  002082  0637               	decf	(dtoa@p+1)^0,f,c
 14821  002084                     
 14822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 14823  002084  0638               	decf	dtoa@w^0,f,c
 14824  002086  A0D8               	btfss	status,0,c
 14825  002088  0639               	decf	(dtoa@w+1)^0,f,c
 14826  00208A                     
 14827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 14828  00208A  C03C  F006         	movff	dtoa@n,___aodiv@dividend
 14829  00208E  C03D  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 14830  002092  C03E  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 14831  002096  C03F  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 14832  00209A  C040  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 14833  00209E  C041  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 14834  0020A2  C042  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 14835  0020A6  C043  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 14836  0020AA  0E0A               	movlw	10
 14837  0020AC  6E0E               	movwf	___aodiv@divisor^0,c
 14838  0020AE  0E00               	movlw	0
 14839  0020B0  6E0F               	movwf	(___aodiv@divisor+1)^0,c
 14840  0020B2  0E00               	movlw	0
 14841  0020B4  6E10               	movwf	(___aodiv@divisor+2)^0,c
 14842  0020B6  0E00               	movlw	0
 14843  0020B8  6E11               	movwf	(___aodiv@divisor+3)^0,c
 14844  0020BA  0E00               	movlw	0
 14845  0020BC  6E12               	movwf	(___aodiv@divisor+4)^0,c
 14846  0020BE  0E00               	movlw	0
 14847  0020C0  6E13               	movwf	(___aodiv@divisor+5)^0,c
 14848  0020C2  0E00               	movlw	0
 14849  0020C4  6E14               	movwf	(___aodiv@divisor+6)^0,c
 14850  0020C6  0E00               	movlw	0
 14851  0020C8  6E15               	movwf	(___aodiv@divisor+7)^0,c
 14852  0020CA  EC32  F01E         	call	___aodiv	;wreg free
 14853  0020CE  C006  F03C         	movff	?___aodiv,dtoa@n
 14854  0020D2  C007  F03D         	movff	?___aodiv+1,dtoa@n+1
 14855  0020D6  C008  F03E         	movff	?___aodiv+2,dtoa@n+2
 14856  0020DA  C009  F03F         	movff	?___aodiv+3,dtoa@n+3
 14857  0020DE  C00A  F040         	movff	?___aodiv+4,dtoa@n+4
 14858  0020E2  C00B  F041         	movff	?___aodiv+5,dtoa@n+5
 14859  0020E6  C00C  F042         	movff	?___aodiv+6,dtoa@n+6
 14860  0020EA  C00D  F043         	movff	?___aodiv+7,dtoa@n+7
 14861  0020EE                     l6937:
 14862                           
 14863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14864  0020EE  BE45               	btfsc	(dtoa@i+1)^0,7,c
 14865  0020F0  EF82  F010         	goto	u8441
 14866  0020F4  5045               	movf	(dtoa@i+1)^0,w,c
 14867  0020F6  E108               	bnz	u8440
 14868  0020F8  0444               	decf	dtoa@i^0,w,c
 14869  0020FA  A0D8               	btfss	status,0,c
 14870  0020FC  EF82  F010         	goto	u8441
 14871  002100  EF84  F010         	goto	u8440
 14872  002104                     u8441:
 14873  002104  EFB4  F010         	goto	l6947
 14874  002108                     u8440:
 14875  002108  503C               	movf	dtoa@n^0,w,c
 14876  00210A  103D               	iorwf	(dtoa@n+1)^0,w,c
 14877  00210C  103E               	iorwf	(dtoa@n+2)^0,w,c
 14878  00210E  103F               	iorwf	(dtoa@n+3)^0,w,c
 14879  002110  1040               	iorwf	(dtoa@n+4)^0,w,c
 14880  002112  1041               	iorwf	(dtoa@n+5)^0,w,c
 14881  002114  1042               	iorwf	(dtoa@n+6)^0,w,c
 14882  002116  1043               	iorwf	(dtoa@n+7)^0,w,c
 14883  002118  A4D8               	btfss	status,2,c
 14884  00211A  EF91  F010         	goto	u8451
 14885  00211E  EF93  F010         	goto	u8450
 14886  002122                     u8451:
 14887  002122  EFFB  F00F         	goto	l6927
 14888  002126                     u8450:
 14889  002126  BE37               	btfsc	(dtoa@p+1)^0,7,c
 14890  002128  EFA0  F010         	goto	u8460
 14891  00212C  5037               	movf	(dtoa@p+1)^0,w,c
 14892  00212E  E106               	bnz	u8461
 14893  002130  0436               	decf	dtoa@p^0,w,c
 14894  002132  B0D8               	btfsc	status,0,c
 14895  002134  EF9E  F010         	goto	u8461
 14896  002138  EFA0  F010         	goto	u8460
 14897  00213C                     u8461:
 14898  00213C  EFFB  F00F         	goto	l6927
 14899  002140                     u8460:
 14900  002140  BE39               	btfsc	(dtoa@w+1)^0,7,c
 14901  002142  EFAB  F010         	goto	u8471
 14902  002146  5039               	movf	(dtoa@w+1)^0,w,c
 14903  002148  E108               	bnz	u8470
 14904  00214A  0438               	decf	dtoa@w^0,w,c
 14905  00214C  A0D8               	btfss	status,0,c
 14906  00214E  EFAB  F010         	goto	u8471
 14907  002152  EFAD  F010         	goto	u8470
 14908  002156                     u8471:
 14909  002156  EFB4  F010         	goto	l6947
 14910  00215A                     u8470:
 14911  00215A  B277               	btfsc	_flags^0,1,c
 14912  00215C  EFB2  F010         	goto	u8481
 14913  002160  EFB4  F010         	goto	u8480
 14914  002164                     u8481:
 14915  002164  EFFB  F00F         	goto	l6927
 14916  002168                     u8480:
 14917  002168                     l6947:
 14918                           
 14919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 14920  002168  503A               	movf	dtoa@s^0,w,c
 14921  00216A  103B               	iorwf	(dtoa@s+1)^0,w,c
 14922  00216C  A4D8               	btfss	status,2,c
 14923  00216E  EFBB  F010         	goto	u8491
 14924  002172  EFBD  F010         	goto	u8490
 14925  002176                     u8491:
 14926  002176  EFC4  F010         	goto	l6951
 14927  00217A                     u8490:
 14928  00217A  A477               	btfss	_flags^0,2,c
 14929  00217C  EFC2  F010         	goto	u8501
 14930  002180  EFC4  F010         	goto	u8500
 14931  002184                     u8501:
 14932  002184  EFE2  F010         	goto	l6961
 14933  002188                     u8500:
 14934  002188                     l6951:
 14935                           
 14936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 14937  002188  0644               	decf	dtoa@i^0,f,c
 14938  00218A  A0D8               	btfss	status,0,c
 14939  00218C  0645               	decf	(dtoa@i+1)^0,f,c
 14940  00218E                     
 14941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 14942  00218E  503A               	movf	dtoa@s^0,w,c
 14943  002190  103B               	iorwf	(dtoa@s+1)^0,w,c
 14944  002192  A4D8               	btfss	status,2,c
 14945  002194  EFCE  F010         	goto	u8511
 14946  002198  EFD0  F010         	goto	u8510
 14947  00219C                     u8511:
 14948  00219C  EFD6  F010         	goto	l6957
 14949  0021A0                     u8510:
 14950  0021A0  0E00               	movlw	0
 14951  0021A2  6E35               	movwf	(_dtoa$1879+1)^0,c
 14952  0021A4  0E2B               	movlw	43
 14953  0021A6  6E34               	movwf	_dtoa$1879^0,c
 14954  0021A8  EFDA  F010         	goto	l6959
 14955  0021AC                     l6957:
 14956  0021AC  0E00               	movlw	0
 14957  0021AE  6E35               	movwf	(_dtoa$1879+1)^0,c
 14958  0021B0  0E2D               	movlw	45
 14959  0021B2  6E34               	movwf	_dtoa$1879^0,c
 14960  0021B4                     l6959:
 14961  0021B4  0EC1               	movlw	low _dbuf
 14962  0021B6  2444               	addwf	dtoa@i^0,w,c
 14963  0021B8  6ED9               	movwf	fsr2l,c
 14964  0021BA  0E01               	movlw	high _dbuf
 14965  0021BC  2045               	addwfc	(dtoa@i+1)^0,w,c
 14966  0021BE  6EDA               	movwf	fsr2h,c
 14967  0021C0  C034  FFDF         	movff	_dtoa$1879,indf2
 14968  0021C4                     l6961:
 14969                           
 14970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 14971  0021C4  C022  F017         	movff	dtoa@fp,pad@fp
 14972  0021C8  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 14973  0021CC  0EC1               	movlw	low _dbuf
 14974  0021CE  2444               	addwf	dtoa@i^0,w,c
 14975  0021D0  6E19               	movwf	pad@buf^0,c
 14976  0021D2  0E01               	movlw	high _dbuf
 14977  0021D4  2045               	addwfc	(dtoa@i+1)^0,w,c
 14978  0021D6  6E1A               	movwf	(pad@buf+1)^0,c
 14979  0021D8  C038  F01B         	movff	dtoa@w,pad@p
 14980  0021DC  C039  F01C         	movff	dtoa@w+1,pad@p+1
 14981  0021E0  ECDB  F027         	call	_pad	;wreg free
 14982  0021E4  C017  F022         	movff	?_pad,?_dtoa
 14983  0021E8  C018  F023         	movff	?_pad+1,?_dtoa+1
 14984  0021EC  0012               	return		;funcret
 14985  0021EE                     __end_of_dtoa:
 14986                           	callstack 0
 14987                           
 14988 ;; *************** function _pad *****************
 14989 ;; Defined at:
 14990 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 14991 ;; Parameters:    Size  Location     Type
 14992 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 14993 ;;		 -> NULL(0), 
 14994 ;;  buf             2   24[COMRAM] PTR unsigned char 
 14995 ;;		 -> dbuf(32), 
 14996 ;;  p               2   26[COMRAM] int 
 14997 ;; Auto vars:     Size  Location     Type
 14998 ;;  w               2   31[COMRAM] int 
 14999 ;;  i               2   29[COMRAM] int 
 15000 ;; Return value:  Size  Location     Type
 15001 ;;                  2   22[COMRAM] int 
 15002 ;; Registers used:
 15003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15004 ;; Tracked objects:
 15005 ;;		On entry : 0/0
 15006 ;;		On exit  : 0/0
 15007 ;;		Unchanged: 0/0
 15008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15009 ;;      Params:         6       0       0       0       0       0       0
 15010 ;;      Locals:         4       0       0       0       0       0       0
 15011 ;;      Temps:          1       0       0       0       0       0       0
 15012 ;;      Totals:        11       0       0       0       0       0       0
 15013 ;;Total ram usage:       11 bytes
 15014 ;; Hardware stack levels used: 1
 15015 ;; Hardware stack levels required when called: 4
 15016 ;; This function calls:
 15017 ;;		_fputc
 15018 ;;		_fputs
 15019 ;;		_strlen
 15020 ;; This function is called by:
 15021 ;;		_dtoa
 15022 ;;		_utoa
 15023 ;;		_xtoa
 15024 ;; This function uses a non-reentrant model
 15025 ;;
 15026                           
 15027                           	psect	text53
 15028  004FB6                     __ptext53:
 15029                           	callstack 0
 15030  004FB6                     _pad:
 15031                           	callstack 21
 15032  004FB6                     
 15033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 15034  004FB6  A077               	btfss	_flags^0,0,c
 15035  004FB8  EFE0  F027         	goto	u8211
 15036  004FBC  EFE2  F027         	goto	u8210
 15037  004FC0                     u8211:
 15038  004FC0  EFEC  F027         	goto	l6847
 15039  004FC4                     u8210:
 15040  004FC4                     
 15041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 15042  004FC4  C019  F010         	movff	pad@buf,fputs@s
 15043  004FC8  C01A  F011         	movff	pad@buf+1,fputs@s+1
 15044  004FCC  C017  F012         	movff	pad@fp,fputs@fp
 15045  004FD0  C018  F013         	movff	pad@fp+1,fputs@fp+1
 15046  004FD4  EC8A  F02B         	call	_fputs	;wreg free
 15047  004FD8                     l6847:
 15048                           
 15049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 15050  004FD8  BE1C               	btfsc	(pad@p+1)^0,7,c
 15051  004FDA  EFF1  F027         	goto	u8221
 15052  004FDE  EFF3  F027         	goto	u8220
 15053  004FE2                     u8221:
 15054  004FE2  EFF9  F027         	goto	l6851
 15055  004FE6                     u8220:
 15056  004FE6  C01B  F020         	movff	pad@p,pad@w
 15057  004FEA  C01C  F021         	movff	pad@p+1,pad@w+1
 15058  004FEE  EFFD  F027         	goto	l1416
 15059  004FF2                     l6851:
 15060  004FF2  0E00               	movlw	0
 15061  004FF4  6E21               	movwf	(pad@w+1)^0,c
 15062  004FF6  0E00               	movlw	0
 15063  004FF8  6E20               	movwf	pad@w^0,c
 15064  004FFA                     l1416:
 15065                           
 15066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 15067  004FFA  0E00               	movlw	0
 15068  004FFC  6E1F               	movwf	(pad@i+1)^0,c
 15069  004FFE  0E00               	movlw	0
 15070  005000  6E1E               	movwf	pad@i^0,c
 15071                           
 15072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 15073  005002  EF0F  F028         	goto	l6857
 15074  005006                     l6853:
 15075                           
 15076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 15077  005006  0E00               	movlw	0
 15078  005008  6E08               	movwf	(fputc@c+1)^0,c
 15079  00500A  0E20               	movlw	32
 15080  00500C  6E07               	movwf	fputc@c^0,c
 15081  00500E  C017  F009         	movff	pad@fp,fputc@fp
 15082  005012  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 15083  005016  EC31  F029         	call	_fputc	;wreg free
 15084  00501A                     
 15085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 15086  00501A  4A1E               	infsnz	pad@i^0,f,c
 15087  00501C  2A1F               	incf	(pad@i+1)^0,f,c
 15088  00501E                     l6857:
 15089                           
 15090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 15091  00501E  5020               	movf	pad@w^0,w,c
 15092  005020  5C1E               	subwf	pad@i^0,w,c
 15093  005022  501F               	movf	(pad@i+1)^0,w,c
 15094  005024  0A80               	xorlw	128
 15095  005026  6E1D               	movwf	??_pad^0,c
 15096  005028  5021               	movf	(pad@w+1)^0,w,c
 15097  00502A  0A80               	xorlw	128
 15098  00502C  581D               	subwfb	??_pad^0,w,c
 15099  00502E  A0D8               	btfss	status,0,c
 15100  005030  EF1C  F028         	goto	u8231
 15101  005034  EF1E  F028         	goto	u8230
 15102  005038                     u8231:
 15103  005038  EF03  F028         	goto	l6853
 15104  00503C                     u8230:
 15105  00503C                     
 15106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 15107  00503C  B077               	btfsc	_flags^0,0,c
 15108  00503E  EF23  F028         	goto	u8241
 15109  005042  EF25  F028         	goto	u8240
 15110  005046                     u8241:
 15111  005046  EF2F  F028         	goto	l6861
 15112  00504A                     u8240:
 15113  00504A                     
 15114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 15115  00504A  C019  F010         	movff	pad@buf,fputs@s
 15116  00504E  C01A  F011         	movff	pad@buf+1,fputs@s+1
 15117  005052  C017  F012         	movff	pad@fp,fputs@fp
 15118  005056  C018  F013         	movff	pad@fp+1,fputs@fp+1
 15119  00505A  EC8A  F02B         	call	_fputs	;wreg free
 15120  00505E                     l6861:
 15121                           
 15122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 15123  00505E  C019  F006         	movff	pad@buf,strlen@s
 15124  005062  C01A  F007         	movff	pad@buf+1,strlen@s+1
 15125  005066  EC63  F02B         	call	_strlen	;wreg free
 15126  00506A  5020               	movf	pad@w^0,w,c
 15127  00506C  2406               	addwf	?_strlen^0,w,c
 15128  00506E  6E17               	movwf	?_pad^0,c
 15129  005070  5021               	movf	(pad@w+1)^0,w,c
 15130  005072  2007               	addwfc	(?_strlen+1)^0,w,c
 15131  005074  6E18               	movwf	(?_pad+1)^0,c
 15132  005076  0012               	return		;funcret
 15133  005078                     __end_of_pad:
 15134                           	callstack 0
 15135                           
 15136 ;; *************** function _strlen *****************
 15137 ;; Defined at:
 15138 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 15139 ;; Parameters:    Size  Location     Type
 15140 ;;  s               2    5[COMRAM] PTR const unsigned char 
 15141 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), main@fno(22), 
 15142 ;;		 -> put_rc@str(69), 
 15143 ;; Auto vars:     Size  Location     Type
 15144 ;;  a               2    7[COMRAM] PTR const unsigned char 
 15145 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), main@fno(22), 
 15146 ;;		 -> put_rc@str(69), 
 15147 ;; Return value:  Size  Location     Type
 15148 ;;                  2    5[COMRAM] unsigned int 
 15149 ;; Registers used:
 15150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 15151 ;; Tracked objects:
 15152 ;;		On entry : 0/0
 15153 ;;		On exit  : 0/0
 15154 ;;		Unchanged: 0/0
 15155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15156 ;;      Params:         2       0       0       0       0       0       0
 15157 ;;      Locals:         2       0       0       0       0       0       0
 15158 ;;      Temps:          0       0       0       0       0       0       0
 15159 ;;      Totals:         4       0       0       0       0       0       0
 15160 ;;Total ram usage:        4 bytes
 15161 ;; Hardware stack levels used: 1
 15162 ;; Hardware stack levels required when called: 1
 15163 ;; This function calls:
 15164 ;;		Nothing
 15165 ;; This function is called by:
 15166 ;;		_pad
 15167 ;;		_stoa
 15168 ;; This function uses a non-reentrant model
 15169 ;;
 15170                           
 15171                           	psect	text54
 15172  0056C6                     __ptext54:
 15173                           	callstack 0
 15174  0056C6                     _strlen:
 15175                           	callstack 23
 15176  0056C6  C006  F008         	movff	strlen@s,strlen@a
 15177  0056CA  C007  F009         	movff	strlen@s+1,strlen@a+1
 15178  0056CE  EF6B  F02B         	goto	l6709
 15179  0056D2                     l6707:
 15180  0056D2  4A06               	infsnz	strlen@s^0,f,c
 15181  0056D4  2A07               	incf	(strlen@s+1)^0,f,c
 15182  0056D6                     l6709:
 15183  0056D6  C006  FFF6         	movff	strlen@s,tblptrl
 15184  0056DA  C007  FFF7         	movff	strlen@s+1,tblptrh
 15185  0056DE  6AF8               	clrf	tblptru,c
 15186  0056E0  0E05               	movlw	(high __ramtop+-1)
 15187  0056E2  64F7               	cpfsgt	tblptrh,c
 15188  0056E4  D003               	bra	u7977
 15189  0056E6  0008               	tblrd		*
 15190  0056E8  50F5               	movf	tablat,w,c
 15191  0056EA  D005               	bra	u7970
 15192  0056EC                     u7977:
 15193  0056EC  CFF6 FFE1          	movff	tblptrl,fsr1l
 15194  0056F0  CFF7 FFE2          	movff	tblptrh,fsr1h
 15195  0056F4  50E7               	movf	indf1,w,c
 15196  0056F6                     u7970:
 15197  0056F6  0900               	iorlw	0
 15198  0056F8  A4D8               	btfss	status,2,c
 15199  0056FA  EF81  F02B         	goto	u7981
 15200  0056FE  EF83  F02B         	goto	u7980
 15201  005702                     u7981:
 15202  005702  EF69  F02B         	goto	l6707
 15203  005706                     u7980:
 15204  005706  5008               	movf	strlen@a^0,w,c
 15205  005708  5C06               	subwf	strlen@s^0,w,c
 15206  00570A  6E06               	movwf	?_strlen^0,c
 15207  00570C  5009               	movf	(strlen@a+1)^0,w,c
 15208  00570E  5807               	subwfb	(strlen@s+1)^0,w,c
 15209  005710  6E07               	movwf	(?_strlen+1)^0,c
 15210  005712  0012               	return		;funcret
 15211  005714                     __end_of_strlen:
 15212                           	callstack 0
 15213                           
 15214 ;; *************** function _fputs *****************
 15215 ;; Defined at:
 15216 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 15217 ;; Parameters:    Size  Location     Type
 15218 ;;  s               2   15[COMRAM] PTR const unsigned char 
 15219 ;;		 -> dbuf(32), 
 15220 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 15221 ;;		 -> NULL(0), 
 15222 ;; Auto vars:     Size  Location     Type
 15223 ;;  i               2   20[COMRAM] int 
 15224 ;;  c               1   19[COMRAM] unsigned char 
 15225 ;; Return value:  Size  Location     Type
 15226 ;;                  2   15[COMRAM] int 
 15227 ;; Registers used:
 15228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15229 ;; Tracked objects:
 15230 ;;		On entry : 0/0
 15231 ;;		On exit  : 0/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15234 ;;      Params:         4       0       0       0       0       0       0
 15235 ;;      Locals:         3       0       0       0       0       0       0
 15236 ;;      Temps:          0       0       0       0       0       0       0
 15237 ;;      Totals:         7       0       0       0       0       0       0
 15238 ;;Total ram usage:        7 bytes
 15239 ;; Hardware stack levels used: 1
 15240 ;; Hardware stack levels required when called: 3
 15241 ;; This function calls:
 15242 ;;		_fputc
 15243 ;; This function is called by:
 15244 ;;		_pad
 15245 ;; This function uses a non-reentrant model
 15246 ;;
 15247                           
 15248                           	psect	text55
 15249  005714                     __ptext55:
 15250                           	callstack 0
 15251  005714                     _fputs:
 15252                           	callstack 21
 15253  005714  0E00               	movlw	0
 15254  005716  6E16               	movwf	(fputs@i+1)^0,c
 15255  005718  0E00               	movlw	0
 15256  00571A  6E15               	movwf	fputs@i^0,c
 15257  00571C  EF9B  F02B         	goto	l6703
 15258  005720                     l6699:
 15259  005720  C014  F007         	movff	fputs@c,fputc@c
 15260  005724  6A08               	clrf	(fputc@c+1)^0,c
 15261  005726  C012  F009         	movff	fputs@fp,fputc@fp
 15262  00572A  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 15263  00572E  EC31  F029         	call	_fputc	;wreg free
 15264  005732  4A15               	infsnz	fputs@i^0,f,c
 15265  005734  2A16               	incf	(fputs@i+1)^0,f,c
 15266  005736                     l6703:
 15267  005736  5015               	movf	fputs@i^0,w,c
 15268  005738  2410               	addwf	fputs@s^0,w,c
 15269  00573A  6ED9               	movwf	fsr2l,c
 15270  00573C  5016               	movf	(fputs@i+1)^0,w,c
 15271  00573E  2011               	addwfc	(fputs@s+1)^0,w,c
 15272  005740  6EDA               	movwf	fsr2h,c
 15273  005742  50DF               	movf	indf2,w,c
 15274  005744  6E14               	movwf	fputs@c^0,c
 15275  005746  5014               	movf	fputs@c^0,w,c
 15276  005748  A4D8               	btfss	status,2,c
 15277  00574A  EFA9  F02B         	goto	u7961
 15278  00574E  EFAB  F02B         	goto	u7960
 15279  005752                     u7961:
 15280  005752  EF90  F02B         	goto	l6699
 15281  005756                     u7960:
 15282  005756  0012               	return		;funcret
 15283  005758                     __end_of_fputs:
 15284                           	callstack 0
 15285                           
 15286 ;; *************** function _fputc *****************
 15287 ;; Defined at:
 15288 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 15289 ;; Parameters:    Size  Location     Type
 15290 ;;  c               2    6[COMRAM] int 
 15291 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 15292 ;;		 -> NULL(0), 
 15293 ;; Auto vars:     Size  Location     Type
 15294 ;;		None
 15295 ;; Return value:  Size  Location     Type
 15296 ;;                  2    6[COMRAM] int 
 15297 ;; Registers used:
 15298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15299 ;; Tracked objects:
 15300 ;;		On entry : 0/0
 15301 ;;		On exit  : 0/0
 15302 ;;		Unchanged: 0/0
 15303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15304 ;;      Params:         4       0       0       0       0       0       0
 15305 ;;      Locals:         0       0       0       0       0       0       0
 15306 ;;      Temps:          5       0       0       0       0       0       0
 15307 ;;      Totals:         9       0       0       0       0       0       0
 15308 ;;Total ram usage:        9 bytes
 15309 ;; Hardware stack levels used: 1
 15310 ;; Hardware stack levels required when called: 2
 15311 ;; This function calls:
 15312 ;;		_putch
 15313 ;; This function is called by:
 15314 ;;		_pad
 15315 ;;		_stoa
 15316 ;;		_vfpfcnvrt
 15317 ;;		_fputs
 15318 ;; This function uses a non-reentrant model
 15319 ;;
 15320                           
 15321                           	psect	text56
 15322  005262                     __ptext56:
 15323                           	callstack 0
 15324  005262                     _fputc:
 15325                           	callstack 21
 15326  005262  5009               	movf	fputc@fp^0,w,c
 15327  005264  100A               	iorwf	(fputc@fp+1)^0,w,c
 15328  005266  B4D8               	btfsc	status,2,c
 15329  005268  EF38  F029         	goto	u7921
 15330  00526C  EF3A  F029         	goto	u7920
 15331  005270                     u7921:
 15332  005270  EF43  F029         	goto	l6687
 15333  005274                     u7920:
 15334  005274  5009               	movf	fputc@fp^0,w,c
 15335  005276  100A               	iorwf	(fputc@fp+1)^0,w,c
 15336  005278  A4D8               	btfss	status,2,c
 15337  00527A  EF41  F029         	goto	u7931
 15338  00527E  EF43  F029         	goto	u7930
 15339  005282                     u7931:
 15340  005282  EF48  F029         	goto	l6689
 15341  005286                     u7930:
 15342  005286                     l6687:
 15343  005286  5007               	movf	fputc@c^0,w,c
 15344  005288  ECC4  F02C         	call	_putch
 15345  00528C  EF7B  F029         	goto	l1627
 15346  005290                     l6689:
 15347  005290  EE20 F004          	lfsr	2,4
 15348  005294  5009               	movf	fputc@fp^0,w,c
 15349  005296  26D9               	addwf	fsr2l,f,c
 15350  005298  500A               	movf	(fputc@fp+1)^0,w,c
 15351  00529A  22DA               	addwfc	fsr2h,f,c
 15352  00529C  50DE               	movf	postinc2,w,c
 15353  00529E  10DE               	iorwf	postinc2,w,c
 15354  0052A0  B4D8               	btfsc	status,2,c
 15355  0052A2  EF55  F029         	goto	u7941
 15356  0052A6  EF57  F029         	goto	u7940
 15357  0052AA                     u7941:
 15358  0052AA  EF72  F029         	goto	l6693
 15359  0052AE                     u7940:
 15360  0052AE  EE20 F004          	lfsr	2,4
 15361  0052B2  5009               	movf	fputc@fp^0,w,c
 15362  0052B4  26D9               	addwf	fsr2l,f,c
 15363  0052B6  500A               	movf	(fputc@fp+1)^0,w,c
 15364  0052B8  22DA               	addwfc	fsr2h,f,c
 15365  0052BA  EE10 F002          	lfsr	1,2
 15366  0052BE  5009               	movf	fputc@fp^0,w,c
 15367  0052C0  26E1               	addwf	fsr1l,f,c
 15368  0052C2  500A               	movf	(fputc@fp+1)^0,w,c
 15369  0052C4  22E2               	addwfc	fsr1h,f,c
 15370  0052C6  50DE               	movf	postinc2,w,c
 15371  0052C8  5CE6               	subwf	postinc1,w,c
 15372  0052CA  50E6               	movf	postinc1,w,c
 15373  0052CC  0A80               	xorlw	128
 15374  0052CE  6E0F               	movwf	(??_fputc+4)^0,c
 15375  0052D0  50DE               	movf	postinc2,w,c
 15376  0052D2  0A80               	xorlw	128
 15377  0052D4  580F               	subwfb	(??_fputc+4)^0,w,c
 15378  0052D6  B0D8               	btfsc	status,0,c
 15379  0052D8  EF70  F029         	goto	u7951
 15380  0052DC  EF72  F029         	goto	u7950
 15381  0052E0                     u7951:
 15382  0052E0  EF7B  F029         	goto	l1627
 15383  0052E4                     u7950:
 15384  0052E4                     l6693:
 15385  0052E4  EE20 F002          	lfsr	2,2
 15386  0052E8  5009               	movf	fputc@fp^0,w,c
 15387  0052EA  26D9               	addwf	fsr2l,f,c
 15388  0052EC  500A               	movf	(fputc@fp+1)^0,w,c
 15389  0052EE  22DA               	addwfc	fsr2h,f,c
 15390  0052F0  2ADE               	incf	postinc2,f,c
 15391  0052F2  0E00               	movlw	0
 15392  0052F4  22DD               	addwfc	postdec2,f,c
 15393  0052F6                     l1627:
 15394  0052F6  0012               	return		;funcret
 15395  0052F8                     __end_of_fputc:
 15396                           	callstack 0
 15397                           
 15398 ;; *************** function _putch *****************
 15399 ;; Defined at:
 15400 ;;		line 136 in file "uart.c"
 15401 ;; Parameters:    Size  Location     Type
 15402 ;;  byte            1    wreg     unsigned char 
 15403 ;; Auto vars:     Size  Location     Type
 15404 ;;  byte            1    5[COMRAM] unsigned char 
 15405 ;; Return value:  Size  Location     Type
 15406 ;;                  1    wreg      void 
 15407 ;; Registers used:
 15408 ;;		wreg
 15409 ;; Tracked objects:
 15410 ;;		On entry : 0/0
 15411 ;;		On exit  : 0/0
 15412 ;;		Unchanged: 0/0
 15413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15414 ;;      Params:         0       0       0       0       0       0       0
 15415 ;;      Locals:         1       0       0       0       0       0       0
 15416 ;;      Temps:          0       0       0       0       0       0       0
 15417 ;;      Totals:         1       0       0       0       0       0       0
 15418 ;;Total ram usage:        1 bytes
 15419 ;; Hardware stack levels used: 1
 15420 ;; Hardware stack levels required when called: 1
 15421 ;; This function calls:
 15422 ;;		Nothing
 15423 ;; This function is called by:
 15424 ;;		_fputc
 15425 ;; This function uses a non-reentrant model
 15426 ;;
 15427                           
 15428                           	psect	text57
 15429  005988                     __ptext57:
 15430                           	callstack 0
 15431  005988                     _putch:
 15432                           	callstack 21
 15433                           
 15434                           ;incstack = 0
 15435                           ;putch@byte stored from wreg
 15436  005988  6E06               	movwf	putch@byte^0,c
 15437  00598A                     l487:
 15438  00598A  A89E               	btfss	3998,4,c	;volatile
 15439  00598C  EFCA  F02C         	goto	u7911
 15440  005990  EFCC  F02C         	goto	u7910
 15441  005994                     u7911:
 15442  005994  EFC5  F02C         	goto	l487
 15443  005998                     u7910:
 15444  005998                     
 15445                           ;uart.c: 140:     TXREG = byte;
 15446  005998  C006  FFAD         	movff	putch@byte,4013	;volatile
 15447  00599C  0012               	return		;funcret
 15448  00599E                     __end_of_putch:
 15449                           	callstack 0
 15450                           
 15451 ;; *************** function _abs *****************
 15452 ;; Defined at:
 15453 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 15454 ;; Parameters:    Size  Location     Type
 15455 ;;  a               2   23[COMRAM] int 
 15456 ;; Auto vars:     Size  Location     Type
 15457 ;;		None
 15458 ;; Return value:  Size  Location     Type
 15459 ;;                  2   23[COMRAM] int 
 15460 ;; Registers used:
 15461 ;;		wreg, status,2, status,0
 15462 ;; Tracked objects:
 15463 ;;		On entry : 0/0
 15464 ;;		On exit  : 0/0
 15465 ;;		Unchanged: 0/0
 15466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15467 ;;      Params:         2       0       0       0       0       0       0
 15468 ;;      Locals:         0       0       0       0       0       0       0
 15469 ;;      Temps:          2       0       0       0       0       0       0
 15470 ;;      Totals:         4       0       0       0       0       0       0
 15471 ;;Total ram usage:        4 bytes
 15472 ;; Hardware stack levels used: 1
 15473 ;; Hardware stack levels required when called: 1
 15474 ;; This function calls:
 15475 ;;		Nothing
 15476 ;; This function is called by:
 15477 ;;		_dtoa
 15478 ;; This function uses a non-reentrant model
 15479 ;;
 15480                           
 15481                           	psect	text58
 15482  005758                     __ptext58:
 15483                           	callstack 0
 15484  005758                     _abs:
 15485                           	callstack 24
 15486  005758  BE19               	btfsc	(abs@a+1)^0,7,c
 15487  00575A  EFB9  F02B         	goto	u8250
 15488  00575E  5019               	movf	(abs@a+1)^0,w,c
 15489  005760  E106               	bnz	u8251
 15490  005762  0418               	decf	abs@a^0,w,c
 15491  005764  B0D8               	btfsc	status,0,c
 15492  005766  EFB7  F02B         	goto	u8251
 15493  00576A  EFB9  F02B         	goto	u8250
 15494  00576E                     u8251:
 15495  00576E  EFC7  F02B         	goto	l1555
 15496  005772                     u8250:
 15497  005772  C018  F01A         	movff	abs@a,??_abs
 15498  005776  C019  F01B         	movff	abs@a+1,??_abs+1
 15499  00577A  1E1A               	comf	??_abs^0,f,c
 15500  00577C  1E1B               	comf	(??_abs+1)^0,f,c
 15501  00577E  4A1A               	infsnz	??_abs^0,f,c
 15502  005780  2A1B               	incf	(??_abs+1)^0,f,c
 15503  005782  C01A  F018         	movff	??_abs,?_abs
 15504  005786  C01B  F019         	movff	??_abs+1,?_abs+1
 15505  00578A  EFCB  F02B         	goto	l1558
 15506  00578E                     l1555:
 15507  00578E  C018  F018         	movff	abs@a,?_abs
 15508  005792  C019  F019         	movff	abs@a+1,?_abs+1
 15509  005796                     l1558:
 15510  005796  0012               	return		;funcret
 15511  005798                     __end_of_abs:
 15512                           	callstack 0
 15513                           
 15514 ;; *************** function ___aomod *****************
 15515 ;; Defined at:
 15516 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 15517 ;; Parameters:    Size  Location     Type
 15518 ;;  dividend        8    5[COMRAM] long long 
 15519 ;;  divisor         8   13[COMRAM] long long 
 15520 ;; Auto vars:     Size  Location     Type
 15521 ;;  sign            1   22[COMRAM] unsigned char 
 15522 ;;  counter         1   21[COMRAM] unsigned char 
 15523 ;; Return value:  Size  Location     Type
 15524 ;;                  8    5[COMRAM] long long 
 15525 ;; Registers used:
 15526 ;;		wreg, status,2, status,0
 15527 ;; Tracked objects:
 15528 ;;		On entry : 0/0
 15529 ;;		On exit  : 0/0
 15530 ;;		Unchanged: 0/0
 15531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15532 ;;      Params:        16       0       0       0       0       0       0
 15533 ;;      Locals:         2       0       0       0       0       0       0
 15534 ;;      Temps:          0       0       0       0       0       0       0
 15535 ;;      Totals:        18       0       0       0       0       0       0
 15536 ;;Total ram usage:       18 bytes
 15537 ;; Hardware stack levels used: 1
 15538 ;; Hardware stack levels required when called: 1
 15539 ;; This function calls:
 15540 ;;		Nothing
 15541 ;; This function is called by:
 15542 ;;		_dtoa
 15543 ;; This function uses a non-reentrant model
 15544 ;;
 15545                           
 15546                           	psect	text59
 15547  0043B0                     __ptext59:
 15548                           	callstack 0
 15549  0043B0                     ___aomod:
 15550                           	callstack 24
 15551  0043B0  0E00               	movlw	0
 15552  0043B2  6E17               	movwf	___aomod@sign^0,c
 15553  0043B4  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
 15554  0043B6  EFE1  F021         	goto	u8080
 15555  0043BA  EFDF  F021         	goto	u8081
 15556  0043BE                     u8081:
 15557  0043BE  EFF3  F021         	goto	l6777
 15558  0043C2                     u8080:
 15559  0043C2  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 15560  0043C4  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 15561  0043C6  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 15562  0043C8  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 15563  0043CA  1E09               	comf	(___aomod@dividend+3)^0,f,c
 15564  0043CC  1E08               	comf	(___aomod@dividend+2)^0,f,c
 15565  0043CE  1E07               	comf	(___aomod@dividend+1)^0,f,c
 15566  0043D0  6C06               	negf	___aomod@dividend^0,c
 15567  0043D2  0E00               	movlw	0
 15568  0043D4  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 15569  0043D6  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 15570  0043D8  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 15571  0043DA  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 15572  0043DC  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 15573  0043DE  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 15574  0043E0  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 15575  0043E2  0E01               	movlw	1
 15576  0043E4  6E17               	movwf	___aomod@sign^0,c
 15577  0043E6                     l6777:
 15578  0043E6  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
 15579  0043E8  EFFA  F021         	goto	u8090
 15580  0043EC  EFF8  F021         	goto	u8091
 15581  0043F0                     u8091:
 15582  0043F0  EF0A  F022         	goto	l6781
 15583  0043F4                     u8090:
 15584  0043F4  1E15               	comf	(___aomod@divisor+7)^0,f,c
 15585  0043F6  1E14               	comf	(___aomod@divisor+6)^0,f,c
 15586  0043F8  1E13               	comf	(___aomod@divisor+5)^0,f,c
 15587  0043FA  1E12               	comf	(___aomod@divisor+4)^0,f,c
 15588  0043FC  1E11               	comf	(___aomod@divisor+3)^0,f,c
 15589  0043FE  1E10               	comf	(___aomod@divisor+2)^0,f,c
 15590  004400  1E0F               	comf	(___aomod@divisor+1)^0,f,c
 15591  004402  6C0E               	negf	___aomod@divisor^0,c
 15592  004404  0E00               	movlw	0
 15593  004406  220F               	addwfc	(___aomod@divisor+1)^0,f,c
 15594  004408  2210               	addwfc	(___aomod@divisor+2)^0,f,c
 15595  00440A  2211               	addwfc	(___aomod@divisor+3)^0,f,c
 15596  00440C  2212               	addwfc	(___aomod@divisor+4)^0,f,c
 15597  00440E  2213               	addwfc	(___aomod@divisor+5)^0,f,c
 15598  004410  2214               	addwfc	(___aomod@divisor+6)^0,f,c
 15599  004412  2215               	addwfc	(___aomod@divisor+7)^0,f,c
 15600  004414                     l6781:
 15601  004414  500E               	movf	___aomod@divisor^0,w,c
 15602  004416  100F               	iorwf	(___aomod@divisor+1)^0,w,c
 15603  004418  1010               	iorwf	(___aomod@divisor+2)^0,w,c
 15604  00441A  1011               	iorwf	(___aomod@divisor+3)^0,w,c
 15605  00441C  1012               	iorwf	(___aomod@divisor+4)^0,w,c
 15606  00441E  1013               	iorwf	(___aomod@divisor+5)^0,w,c
 15607  004420  1014               	iorwf	(___aomod@divisor+6)^0,w,c
 15608  004422  1015               	iorwf	(___aomod@divisor+7)^0,w,c
 15609  004424  B4D8               	btfsc	status,2,c
 15610  004426  EF17  F022         	goto	u8101
 15611  00442A  EF19  F022         	goto	u8100
 15612  00442E                     u8101:
 15613  00442E  EF61  F022         	goto	l6797
 15614  004432                     u8100:
 15615  004432  0E01               	movlw	1
 15616  004434  6E16               	movwf	___aomod@counter^0,c
 15617  004436  EF27  F022         	goto	l6787
 15618  00443A                     l6785:
 15619  00443A  90D8               	bcf	status,0,c
 15620  00443C  360E               	rlcf	___aomod@divisor^0,f,c
 15621  00443E  360F               	rlcf	(___aomod@divisor+1)^0,f,c
 15622  004440  3610               	rlcf	(___aomod@divisor+2)^0,f,c
 15623  004442  3611               	rlcf	(___aomod@divisor+3)^0,f,c
 15624  004444  3612               	rlcf	(___aomod@divisor+4)^0,f,c
 15625  004446  3613               	rlcf	(___aomod@divisor+5)^0,f,c
 15626  004448  3614               	rlcf	(___aomod@divisor+6)^0,f,c
 15627  00444A  3615               	rlcf	(___aomod@divisor+7)^0,f,c
 15628  00444C  2A16               	incf	___aomod@counter^0,f,c
 15629  00444E                     l6787:
 15630  00444E  AE15               	btfss	(___aomod@divisor+7)^0,7,c
 15631  004450  EF2C  F022         	goto	u8111
 15632  004454  EF2E  F022         	goto	u8110
 15633  004458                     u8111:
 15634  004458  EF1D  F022         	goto	l6785
 15635  00445C                     u8110:
 15636  00445C                     l6789:
 15637  00445C  500E               	movf	___aomod@divisor^0,w,c
 15638  00445E  5C06               	subwf	___aomod@dividend^0,w,c
 15639  004460  500F               	movf	(___aomod@divisor+1)^0,w,c
 15640  004462  5807               	subwfb	(___aomod@dividend+1)^0,w,c
 15641  004464  5010               	movf	(___aomod@divisor+2)^0,w,c
 15642  004466  5808               	subwfb	(___aomod@dividend+2)^0,w,c
 15643  004468  5011               	movf	(___aomod@divisor+3)^0,w,c
 15644  00446A  5809               	subwfb	(___aomod@dividend+3)^0,w,c
 15645  00446C  5012               	movf	(___aomod@divisor+4)^0,w,c
 15646  00446E  580A               	subwfb	(___aomod@dividend+4)^0,w,c
 15647  004470  5013               	movf	(___aomod@divisor+5)^0,w,c
 15648  004472  580B               	subwfb	(___aomod@dividend+5)^0,w,c
 15649  004474  5014               	movf	(___aomod@divisor+6)^0,w,c
 15650  004476  580C               	subwfb	(___aomod@dividend+6)^0,w,c
 15651  004478  5015               	movf	(___aomod@divisor+7)^0,w,c
 15652  00447A  580D               	subwfb	(___aomod@dividend+7)^0,w,c
 15653  00447C  A0D8               	btfss	status,0,c
 15654  00447E  EF43  F022         	goto	u8121
 15655  004482  EF45  F022         	goto	u8120
 15656  004486                     u8121:
 15657  004486  EF55  F022         	goto	l6793
 15658  00448A                     u8120:
 15659  00448A  500E               	movf	___aomod@divisor^0,w,c
 15660  00448C  5E06               	subwf	___aomod@dividend^0,f,c
 15661  00448E  500F               	movf	(___aomod@divisor+1)^0,w,c
 15662  004490  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
 15663  004492  5010               	movf	(___aomod@divisor+2)^0,w,c
 15664  004494  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
 15665  004496  5011               	movf	(___aomod@divisor+3)^0,w,c
 15666  004498  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
 15667  00449A  5012               	movf	(___aomod@divisor+4)^0,w,c
 15668  00449C  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
 15669  00449E  5013               	movf	(___aomod@divisor+5)^0,w,c
 15670  0044A0  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
 15671  0044A2  5014               	movf	(___aomod@divisor+6)^0,w,c
 15672  0044A4  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
 15673  0044A6  5015               	movf	(___aomod@divisor+7)^0,w,c
 15674  0044A8  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
 15675  0044AA                     l6793:
 15676  0044AA  90D8               	bcf	status,0,c
 15677  0044AC  3215               	rrcf	(___aomod@divisor+7)^0,f,c
 15678  0044AE  3214               	rrcf	(___aomod@divisor+6)^0,f,c
 15679  0044B0  3213               	rrcf	(___aomod@divisor+5)^0,f,c
 15680  0044B2  3212               	rrcf	(___aomod@divisor+4)^0,f,c
 15681  0044B4  3211               	rrcf	(___aomod@divisor+3)^0,f,c
 15682  0044B6  3210               	rrcf	(___aomod@divisor+2)^0,f,c
 15683  0044B8  320F               	rrcf	(___aomod@divisor+1)^0,f,c
 15684  0044BA  320E               	rrcf	___aomod@divisor^0,f,c
 15685  0044BC  2E16               	decfsz	___aomod@counter^0,f,c
 15686  0044BE  EF2E  F022         	goto	l6789
 15687  0044C2                     l6797:
 15688  0044C2  5017               	movf	___aomod@sign^0,w,c
 15689  0044C4  B4D8               	btfsc	status,2,c
 15690  0044C6  EF67  F022         	goto	u8131
 15691  0044CA  EF69  F022         	goto	u8130
 15692  0044CE                     u8131:
 15693  0044CE  EF79  F022         	goto	l6801
 15694  0044D2                     u8130:
 15695  0044D2  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 15696  0044D4  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 15697  0044D6  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 15698  0044D8  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 15699  0044DA  1E09               	comf	(___aomod@dividend+3)^0,f,c
 15700  0044DC  1E08               	comf	(___aomod@dividend+2)^0,f,c
 15701  0044DE  1E07               	comf	(___aomod@dividend+1)^0,f,c
 15702  0044E0  6C06               	negf	___aomod@dividend^0,c
 15703  0044E2  0E00               	movlw	0
 15704  0044E4  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 15705  0044E6  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 15706  0044E8  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 15707  0044EA  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 15708  0044EC  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 15709  0044EE  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 15710  0044F0  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 15711  0044F2                     l6801:
 15712  0044F2  C006  F006         	movff	___aomod@dividend,?___aomod
 15713  0044F6  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 15714  0044FA  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 15715  0044FE  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 15716  004502  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 15717  004506  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 15718  00450A  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 15719  00450E  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 15720  004512  0012               	return		;funcret
 15721  004514                     __end_of___aomod:
 15722                           	callstack 0
 15723                           
 15724 ;; *************** function ___aodiv *****************
 15725 ;; Defined at:
 15726 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 15727 ;; Parameters:    Size  Location     Type
 15728 ;;  dividend        8    5[COMRAM] long long 
 15729 ;;  divisor         8   13[COMRAM] long long 
 15730 ;; Auto vars:     Size  Location     Type
 15731 ;;  quotient        8   23[COMRAM] long long 
 15732 ;;  sign            1   22[COMRAM] unsigned char 
 15733 ;;  counter         1   21[COMRAM] unsigned char 
 15734 ;; Return value:  Size  Location     Type
 15735 ;;                  8    5[COMRAM] long long 
 15736 ;; Registers used:
 15737 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15738 ;; Tracked objects:
 15739 ;;		On entry : 0/0
 15740 ;;		On exit  : 0/0
 15741 ;;		Unchanged: 0/0
 15742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15743 ;;      Params:        16       0       0       0       0       0       0
 15744 ;;      Locals:        10       0       0       0       0       0       0
 15745 ;;      Temps:          0       0       0       0       0       0       0
 15746 ;;      Totals:        26       0       0       0       0       0       0
 15747 ;;Total ram usage:       26 bytes
 15748 ;; Hardware stack levels used: 1
 15749 ;; Hardware stack levels required when called: 1
 15750 ;; This function calls:
 15751 ;;		Nothing
 15752 ;; This function is called by:
 15753 ;;		_dtoa
 15754 ;; This function uses a non-reentrant model
 15755 ;;
 15756                           
 15757                           	psect	text60
 15758  003C64                     __ptext60:
 15759                           	callstack 0
 15760  003C64                     ___aodiv:
 15761                           	callstack 24
 15762  003C64  0E00               	movlw	0
 15763  003C66  6E17               	movwf	___aodiv@sign^0,c
 15764  003C68  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
 15765  003C6A  EF3B  F01E         	goto	u8010
 15766  003C6E  EF39  F01E         	goto	u8011
 15767  003C72                     u8011:
 15768  003C72  EF4D  F01E         	goto	l6733
 15769  003C76                     u8010:
 15770  003C76  1E15               	comf	(___aodiv@divisor+7)^0,f,c
 15771  003C78  1E14               	comf	(___aodiv@divisor+6)^0,f,c
 15772  003C7A  1E13               	comf	(___aodiv@divisor+5)^0,f,c
 15773  003C7C  1E12               	comf	(___aodiv@divisor+4)^0,f,c
 15774  003C7E  1E11               	comf	(___aodiv@divisor+3)^0,f,c
 15775  003C80  1E10               	comf	(___aodiv@divisor+2)^0,f,c
 15776  003C82  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
 15777  003C84  6C0E               	negf	___aodiv@divisor^0,c
 15778  003C86  0E00               	movlw	0
 15779  003C88  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
 15780  003C8A  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
 15781  003C8C  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
 15782  003C8E  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
 15783  003C90  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
 15784  003C92  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
 15785  003C94  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
 15786  003C96  0E01               	movlw	1
 15787  003C98  6E17               	movwf	___aodiv@sign^0,c
 15788  003C9A                     l6733:
 15789  003C9A  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
 15790  003C9C  EF54  F01E         	goto	u8020
 15791  003CA0  EF52  F01E         	goto	u8021
 15792  003CA4                     u8021:
 15793  003CA4  EF66  F01E         	goto	l6739
 15794  003CA8                     u8020:
 15795  003CA8  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
 15796  003CAA  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
 15797  003CAC  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
 15798  003CAE  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
 15799  003CB0  1E09               	comf	(___aodiv@dividend+3)^0,f,c
 15800  003CB2  1E08               	comf	(___aodiv@dividend+2)^0,f,c
 15801  003CB4  1E07               	comf	(___aodiv@dividend+1)^0,f,c
 15802  003CB6  6C06               	negf	___aodiv@dividend^0,c
 15803  003CB8  0E00               	movlw	0
 15804  003CBA  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
 15805  003CBC  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
 15806  003CBE  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
 15807  003CC0  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
 15808  003CC2  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
 15809  003CC4  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
 15810  003CC6  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
 15811  003CC8  0E01               	movlw	1
 15812  003CCA  1A17               	xorwf	___aodiv@sign^0,f,c
 15813  003CCC                     l6739:
 15814  003CCC  EE20  F018         	lfsr	2,___aodiv@quotient
 15815  003CD0  0E07               	movlw	7
 15816  003CD2                     u8031:
 15817  003CD2  6ADE               	clrf	postinc2,c
 15818  003CD4  06E8               	decf	wreg,f,c
 15819  003CD6  E2FD               	bc	u8031
 15820  003CD8  500E               	movf	___aodiv@divisor^0,w,c
 15821  003CDA  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
 15822  003CDC  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
 15823  003CDE  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
 15824  003CE0  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
 15825  003CE2  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
 15826  003CE4  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
 15827  003CE6  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
 15828  003CE8  B4D8               	btfsc	status,2,c
 15829  003CEA  EF79  F01E         	goto	u8041
 15830  003CEE  EF7B  F01E         	goto	u8040
 15831  003CF2                     u8041:
 15832  003CF2  EFCD  F01E         	goto	l6761
 15833  003CF6                     u8040:
 15834  003CF6  0E01               	movlw	1
 15835  003CF8  6E16               	movwf	___aodiv@counter^0,c
 15836  003CFA  EF89  F01E         	goto	l6747
 15837  003CFE                     l6745:
 15838  003CFE  90D8               	bcf	status,0,c
 15839  003D00  360E               	rlcf	___aodiv@divisor^0,f,c
 15840  003D02  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
 15841  003D04  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
 15842  003D06  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
 15843  003D08  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
 15844  003D0A  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
 15845  003D0C  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
 15846  003D0E  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
 15847  003D10  2A16               	incf	___aodiv@counter^0,f,c
 15848  003D12                     l6747:
 15849  003D12  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
 15850  003D14  EF8E  F01E         	goto	u8051
 15851  003D18  EF90  F01E         	goto	u8050
 15852  003D1C                     u8051:
 15853  003D1C  EF7F  F01E         	goto	l6745
 15854  003D20                     u8050:
 15855  003D20                     l6749:
 15856  003D20  90D8               	bcf	status,0,c
 15857  003D22  3618               	rlcf	___aodiv@quotient^0,f,c
 15858  003D24  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
 15859  003D26  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
 15860  003D28  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
 15861  003D2A  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
 15862  003D2C  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
 15863  003D2E  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
 15864  003D30  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
 15865  003D32  500E               	movf	___aodiv@divisor^0,w,c
 15866  003D34  5C06               	subwf	___aodiv@dividend^0,w,c
 15867  003D36  500F               	movf	(___aodiv@divisor+1)^0,w,c
 15868  003D38  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
 15869  003D3A  5010               	movf	(___aodiv@divisor+2)^0,w,c
 15870  003D3C  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
 15871  003D3E  5011               	movf	(___aodiv@divisor+3)^0,w,c
 15872  003D40  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
 15873  003D42  5012               	movf	(___aodiv@divisor+4)^0,w,c
 15874  003D44  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
 15875  003D46  5013               	movf	(___aodiv@divisor+5)^0,w,c
 15876  003D48  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
 15877  003D4A  5014               	movf	(___aodiv@divisor+6)^0,w,c
 15878  003D4C  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
 15879  003D4E  5015               	movf	(___aodiv@divisor+7)^0,w,c
 15880  003D50  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
 15881  003D52  A0D8               	btfss	status,0,c
 15882  003D54  EFAE  F01E         	goto	u8061
 15883  003D58  EFB0  F01E         	goto	u8060
 15884  003D5C                     u8061:
 15885  003D5C  EFC1  F01E         	goto	l6757
 15886  003D60                     u8060:
 15887  003D60  500E               	movf	___aodiv@divisor^0,w,c
 15888  003D62  5E06               	subwf	___aodiv@dividend^0,f,c
 15889  003D64  500F               	movf	(___aodiv@divisor+1)^0,w,c
 15890  003D66  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
 15891  003D68  5010               	movf	(___aodiv@divisor+2)^0,w,c
 15892  003D6A  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
 15893  003D6C  5011               	movf	(___aodiv@divisor+3)^0,w,c
 15894  003D6E  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
 15895  003D70  5012               	movf	(___aodiv@divisor+4)^0,w,c
 15896  003D72  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
 15897  003D74  5013               	movf	(___aodiv@divisor+5)^0,w,c
 15898  003D76  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
 15899  003D78  5014               	movf	(___aodiv@divisor+6)^0,w,c
 15900  003D7A  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
 15901  003D7C  5015               	movf	(___aodiv@divisor+7)^0,w,c
 15902  003D7E  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
 15903  003D80  8018               	bsf	___aodiv@quotient^0,0,c
 15904  003D82                     l6757:
 15905  003D82  90D8               	bcf	status,0,c
 15906  003D84  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
 15907  003D86  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
 15908  003D88  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
 15909  003D8A  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
 15910  003D8C  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
 15911  003D8E  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
 15912  003D90  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
 15913  003D92  320E               	rrcf	___aodiv@divisor^0,f,c
 15914  003D94  2E16               	decfsz	___aodiv@counter^0,f,c
 15915  003D96  EF90  F01E         	goto	l6749
 15916  003D9A                     l6761:
 15917  003D9A  5017               	movf	___aodiv@sign^0,w,c
 15918  003D9C  B4D8               	btfsc	status,2,c
 15919  003D9E  EFD3  F01E         	goto	u8071
 15920  003DA2  EFD5  F01E         	goto	u8070
 15921  003DA6                     u8071:
 15922  003DA6  EFE5  F01E         	goto	l6765
 15923  003DAA                     u8070:
 15924  003DAA  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
 15925  003DAC  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
 15926  003DAE  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
 15927  003DB0  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
 15928  003DB2  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
 15929  003DB4  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
 15930  003DB6  1E19               	comf	(___aodiv@quotient+1)^0,f,c
 15931  003DB8  6C18               	negf	___aodiv@quotient^0,c
 15932  003DBA  0E00               	movlw	0
 15933  003DBC  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
 15934  003DBE  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
 15935  003DC0  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
 15936  003DC2  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
 15937  003DC4  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
 15938  003DC6  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
 15939  003DC8  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
 15940  003DCA                     l6765:
 15941  003DCA  C018  F006         	movff	___aodiv@quotient,?___aodiv
 15942  003DCE  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 15943  003DD2  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 15944  003DD6  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 15945  003DDA  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 15946  003DDE  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 15947  003DE2  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 15948  003DE6  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 15949  003DEA  0012               	return		;funcret
 15950  003DEC                     __end_of___aodiv:
 15951                           	callstack 0
 15952                           
 15953 ;; *************** function _atoi *****************
 15954 ;; Defined at:
 15955 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 15956 ;; Parameters:    Size  Location     Type
 15957 ;;  s               2   12[COMRAM] PTR const unsigned char 
 15958 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 15959 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 15960 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 15961 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 15962 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 15963 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 15964 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 15965 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 15966 ;; Auto vars:     Size  Location     Type
 15967 ;;  n               2   25[COMRAM] int 
 15968 ;;  neg             2   18[COMRAM] int 
 15969 ;; Return value:  Size  Location     Type
 15970 ;;                  2   12[COMRAM] int 
 15971 ;; Registers used:
 15972 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15973 ;; Tracked objects:
 15974 ;;		On entry : 0/0
 15975 ;;		On exit  : 0/0
 15976 ;;		Unchanged: 0/0
 15977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15978 ;;      Params:         2       0       0       0       0       0       0
 15979 ;;      Locals:         9       0       0       0       0       0       0
 15980 ;;      Temps:          4       0       0       0       0       0       0
 15981 ;;      Totals:        15       0       0       0       0       0       0
 15982 ;;Total ram usage:       15 bytes
 15983 ;; Hardware stack levels used: 1
 15984 ;; Hardware stack levels required when called: 2
 15985 ;; This function calls:
 15986 ;;		___wmul
 15987 ;;		_isdigit
 15988 ;;		_isspace
 15989 ;; This function is called by:
 15990 ;;		_vfpfcnvrt
 15991 ;; This function uses a non-reentrant model
 15992 ;;
 15993                           
 15994                           	psect	text61
 15995  00394A                     __ptext61:
 15996                           	callstack 0
 15997  00394A                     _atoi:
 15998                           	callstack 24
 15999  00394A  0E00               	movlw	0
 16000  00394C  6E1B               	movwf	(atoi@n+1)^0,c
 16001  00394E  0E00               	movlw	0
 16002  003950  6E1A               	movwf	atoi@n^0,c
 16003  003952  0E00               	movlw	0
 16004  003954  6E14               	movwf	(atoi@neg+1)^0,c
 16005  003956  0E00               	movlw	0
 16006  003958  6E13               	movwf	atoi@neg^0,c
 16007  00395A  EFB1  F01C         	goto	l7113
 16008  00395E                     l7111:
 16009  00395E  4A0D               	infsnz	atoi@s^0,f,c
 16010  003960  2A0E               	incf	(atoi@s+1)^0,f,c
 16011  003962                     l7113:
 16012  003962  0E01               	movlw	1
 16013  003964  6E19               	movwf	_atoi$1969^0,c
 16014  003966  C00D  FFF6         	movff	atoi@s,tblptrl
 16015  00396A  C00E  FFF7         	movff	atoi@s+1,tblptrh
 16016  00396E                     	if	0	;tblptru may be non-zero
 16017  00396E                     	endif
 16018  00396E                     	if	0	;tblptru may be non-zero
 16019  00396E                     	endif
 16020  00396E  0008               	tblrd		*
 16021  003970  50F5               	movf	tablat,w,c
 16022  003972  0A20               	xorlw	32
 16023  003974  B4D8               	btfsc	status,2,c
 16024  003976  EFBF  F01C         	goto	u8861
 16025  00397A  EFC1  F01C         	goto	u8860
 16026  00397E                     u8861:
 16027  00397E  EFDE  F01C         	goto	l7121
 16028  003982                     u8860:
 16029  003982  0EF7               	movlw	247
 16030  003984  6E0F               	movwf	??_atoi^0,c
 16031  003986  0EFF               	movlw	255
 16032  003988  6E10               	movwf	(??_atoi+1)^0,c
 16033  00398A  C00D  FFF6         	movff	atoi@s,tblptrl
 16034  00398E  C00E  FFF7         	movff	atoi@s+1,tblptrh
 16035  003992                     	if	0	;tblptru may be non-zero
 16036  003992                     	endif
 16037  003992                     	if	0	;tblptru may be non-zero
 16038  003992                     	endif
 16039  003992  0008               	tblrd		*
 16040  003994  50F5               	movf	tablat,w,c
 16041  003996  6E11               	movwf	(??_atoi+2)^0,c
 16042  003998  6A12               	clrf	(??_atoi+3)^0,c
 16043  00399A  500F               	movf	??_atoi^0,w,c
 16044  00399C  2611               	addwf	(??_atoi+2)^0,f,c
 16045  00399E  5010               	movf	(??_atoi+1)^0,w,c
 16046  0039A0  2212               	addwfc	(??_atoi+3)^0,f,c
 16047  0039A2  5012               	movf	(??_atoi+3)^0,w,c
 16048  0039A4  E109               	bnz	u8870
 16049  0039A6  0E05               	movlw	5
 16050  0039A8  5C11               	subwf	(??_atoi+2)^0,w,c
 16051  0039AA  A0D8               	btfss	status,0,c
 16052  0039AC  EFDA  F01C         	goto	u8871
 16053  0039B0  EFDC  F01C         	goto	u8870
 16054  0039B4                     u8871:
 16055  0039B4  EFDE  F01C         	goto	l7121
 16056  0039B8                     u8870:
 16057  0039B8  0E00               	movlw	0
 16058  0039BA  6E19               	movwf	_atoi$1969^0,c
 16059  0039BC                     l7121:
 16060  0039BC  C019  F015         	movff	_atoi$1969,_atoi$1968
 16061  0039C0  6A16               	clrf	(_atoi$1968+1)^0,c
 16062  0039C2  5015               	movf	_atoi$1968^0,w,c
 16063  0039C4  1016               	iorwf	(_atoi$1968+1)^0,w,c
 16064  0039C6  A4D8               	btfss	status,2,c
 16065  0039C8  EFE8  F01C         	goto	u8881
 16066  0039CC  EFEA  F01C         	goto	u8880
 16067  0039D0                     u8881:
 16068  0039D0  EFAF  F01C         	goto	l7111
 16069  0039D4                     u8880:
 16070  0039D4  EFF4  F01C         	goto	l7131
 16071  0039D8                     l7127:
 16072  0039D8  0E00               	movlw	0
 16073  0039DA  6E14               	movwf	(atoi@neg+1)^0,c
 16074  0039DC  0E01               	movlw	1
 16075  0039DE  6E13               	movwf	atoi@neg^0,c
 16076  0039E0                     l7129:
 16077  0039E0  4A0D               	infsnz	atoi@s^0,f,c
 16078  0039E2  2A0E               	incf	(atoi@s+1)^0,f,c
 16079  0039E4  EF29  F01D         	goto	l7137
 16080  0039E8                     l7131:
 16081  0039E8  C00D  FFF6         	movff	atoi@s,tblptrl
 16082  0039EC  C00E  FFF7         	movff	atoi@s+1,tblptrh
 16083  0039F0                     	if	0	;tblptru may be non-zero
 16084  0039F0                     	endif
 16085  0039F0                     	if	0	;tblptru may be non-zero
 16086  0039F0                     	endif
 16087  0039F0  0008               	tblrd		*
 16088  0039F2  50F5               	movf	tablat,w,c
 16089  0039F4  6E0F               	movwf	??_atoi^0,c
 16090  0039F6  6A10               	clrf	(??_atoi+1)^0,c
 16091                           
 16092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16093                           ; Switch size 1, requested type "simple"
 16094                           ; Number of cases is 1, Range of values is 0 to 0
 16095                           ; switch strategies available:
 16096                           ; Name         Instructions Cycles
 16097                           ; simple_byte            4     3 (average)
 16098                           ;	Chosen strategy is simple_byte
 16099  0039F8  5010               	movf	(??_atoi+1)^0,w,c
 16100  0039FA  0A00               	xorlw	0	; case 0
 16101  0039FC  B4D8               	btfsc	status,2,c
 16102  0039FE  EF03  F01D         	goto	l8959
 16103  003A02  EF29  F01D         	goto	l7137
 16104  003A06                     l8959:
 16105                           
 16106                           ; Switch size 1, requested type "simple"
 16107                           ; Number of cases is 2, Range of values is 43 to 45
 16108                           ; switch strategies available:
 16109                           ; Name         Instructions Cycles
 16110                           ; simple_byte            7     4 (average)
 16111                           ;	Chosen strategy is simple_byte
 16112  003A06  500F               	movf	??_atoi^0,w,c
 16113  003A08  0A2B               	xorlw	43	; case 43
 16114  003A0A  B4D8               	btfsc	status,2,c
 16115  003A0C  EFF0  F01C         	goto	l7129
 16116  003A10  0A06               	xorlw	6	; case 45
 16117  003A12  B4D8               	btfsc	status,2,c
 16118  003A14  EFEC  F01C         	goto	l7127
 16119  003A18  EF29  F01D         	goto	l7137
 16120  003A1C                     l7133:
 16121  003A1C  C01A  F006         	movff	atoi@n,___wmul@multiplier
 16122  003A20  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 16123  003A24  0E00               	movlw	0
 16124  003A26  6E09               	movwf	(___wmul@multiplicand+1)^0,c
 16125  003A28  0E0A               	movlw	10
 16126  003A2A  6E08               	movwf	___wmul@multiplicand^0,c
 16127  003A2C  EC81  F02C         	call	___wmul	;wreg free
 16128  003A30  C00D  FFF6         	movff	atoi@s,tblptrl
 16129  003A34  C00E  FFF7         	movff	atoi@s+1,tblptrh
 16130  003A38                     	if	0	;tblptru may be non-zero
 16131  003A38                     	endif
 16132  003A38                     	if	0	;tblptru may be non-zero
 16133  003A38                     	endif
 16134  003A38  0008               	tblrd		*
 16135  003A3A  50F5               	movf	tablat,w,c
 16136  003A3C  5E06               	subwf	?___wmul^0,f,c
 16137  003A3E  0E00               	movlw	0
 16138  003A40  5A07               	subwfb	(?___wmul+1)^0,f,c
 16139  003A42  0E30               	movlw	48
 16140  003A44  2406               	addwf	?___wmul^0,w,c
 16141  003A46  6E1A               	movwf	atoi@n^0,c
 16142  003A48  0E00               	movlw	0
 16143  003A4A  2007               	addwfc	(?___wmul+1)^0,w,c
 16144  003A4C  6E1B               	movwf	(atoi@n+1)^0,c
 16145  003A4E  EFF0  F01C         	goto	l7129
 16146  003A52                     l7137:
 16147  003A52  0ED0               	movlw	208
 16148  003A54  6E0F               	movwf	??_atoi^0,c
 16149  003A56  0EFF               	movlw	255
 16150  003A58  6E10               	movwf	(??_atoi+1)^0,c
 16151  003A5A  C00D  FFF6         	movff	atoi@s,tblptrl
 16152  003A5E  C00E  FFF7         	movff	atoi@s+1,tblptrh
 16153  003A62                     	if	0	;tblptru may be non-zero
 16154  003A62                     	endif
 16155  003A62                     	if	0	;tblptru may be non-zero
 16156  003A62                     	endif
 16157  003A62  0008               	tblrd		*
 16158  003A64  50F5               	movf	tablat,w,c
 16159  003A66  6E11               	movwf	(??_atoi+2)^0,c
 16160  003A68  6A12               	clrf	(??_atoi+3)^0,c
 16161  003A6A  500F               	movf	??_atoi^0,w,c
 16162  003A6C  2611               	addwf	(??_atoi+2)^0,f,c
 16163  003A6E  5010               	movf	(??_atoi+1)^0,w,c
 16164  003A70  2212               	addwfc	(??_atoi+3)^0,f,c
 16165  003A72  5012               	movf	(??_atoi+3)^0,w,c
 16166  003A74  E10A               	bnz	u8890
 16167  003A76  0E0A               	movlw	10
 16168  003A78  5C11               	subwf	(??_atoi+2)^0,w,c
 16169  003A7A  A0D8               	btfss	status,0,c
 16170  003A7C  EF42  F01D         	goto	u8891
 16171  003A80  EF45  F01D         	goto	u8890
 16172  003A84                     u8891:
 16173  003A84  0E01               	movlw	1
 16174  003A86  EF46  F01D         	goto	u8900
 16175  003A8A                     u8890:
 16176  003A8A  0E00               	movlw	0
 16177  003A8C                     u8900:
 16178  003A8C  6E17               	movwf	_atoi$1970^0,c
 16179  003A8E  6A18               	clrf	(_atoi$1970+1)^0,c
 16180  003A90  5017               	movf	_atoi$1970^0,w,c
 16181  003A92  1018               	iorwf	(_atoi$1970+1)^0,w,c
 16182  003A94  A4D8               	btfss	status,2,c
 16183  003A96  EF4F  F01D         	goto	u8911
 16184  003A9A  EF51  F01D         	goto	u8910
 16185  003A9E                     u8911:
 16186  003A9E  EF0E  F01D         	goto	l7133
 16187  003AA2                     u8910:
 16188  003AA2  5013               	movf	atoi@neg^0,w,c
 16189  003AA4  1014               	iorwf	(atoi@neg+1)^0,w,c
 16190  003AA6  A4D8               	btfss	status,2,c
 16191  003AA8  EF58  F01D         	goto	u8921
 16192  003AAC  EF5A  F01D         	goto	u8920
 16193  003AB0                     u8921:
 16194  003AB0  EF68  F01D         	goto	l1586
 16195  003AB4                     u8920:
 16196  003AB4  C01A  F00F         	movff	atoi@n,??_atoi
 16197  003AB8  C01B  F010         	movff	atoi@n+1,??_atoi+1
 16198  003ABC  1E0F               	comf	??_atoi^0,f,c
 16199  003ABE  1E10               	comf	(??_atoi+1)^0,f,c
 16200  003AC0  4A0F               	infsnz	??_atoi^0,f,c
 16201  003AC2  2A10               	incf	(??_atoi+1)^0,f,c
 16202  003AC4  C00F  F00D         	movff	??_atoi,?_atoi
 16203  003AC8  C010  F00E         	movff	??_atoi+1,?_atoi+1
 16204  003ACC  EF6C  F01D         	goto	l1589
 16205  003AD0                     l1586:
 16206  003AD0  C01A  F00D         	movff	atoi@n,?_atoi
 16207  003AD4  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 16208  003AD8                     l1589:
 16209  003AD8  0012               	return		;funcret
 16210  003ADA                     __end_of_atoi:
 16211                           	callstack 0
 16212                           
 16213 ;; *************** function _isspace *****************
 16214 ;; Defined at:
 16215 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 16216 ;; Parameters:    Size  Location     Type
 16217 ;;  c               2    5[COMRAM] int 
 16218 ;; Auto vars:     Size  Location     Type
 16219 ;;		None
 16220 ;; Return value:  Size  Location     Type
 16221 ;;                  2    5[COMRAM] int 
 16222 ;; Registers used:
 16223 ;;		wreg, status,2, status,0
 16224 ;; Tracked objects:
 16225 ;;		On entry : 0/0
 16226 ;;		On exit  : 0/0
 16227 ;;		Unchanged: 0/0
 16228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16229 ;;      Params:         2       0       0       0       0       0       0
 16230 ;;      Locals:         1       0       0       0       0       0       0
 16231 ;;      Temps:          4       0       0       0       0       0       0
 16232 ;;      Totals:         7       0       0       0       0       0       0
 16233 ;;Total ram usage:        7 bytes
 16234 ;; Hardware stack levels used: 1
 16235 ;; Hardware stack levels required when called: 1
 16236 ;; This function calls:
 16237 ;;		Nothing
 16238 ;; This function is called by:
 16239 ;;		_atoi
 16240 ;; This function uses a non-reentrant model
 16241 ;;
 16242                           
 16243                           	psect	text62
 16244  005674                     __ptext62:
 16245                           	callstack 0
 16246  005674                     _isspace:
 16247                           	callstack 24
 16248  005674  0E01               	movlw	1
 16249  005676  6E0C               	movwf	_isspace$1995^0,c
 16250  005678  0E20               	movlw	32
 16251  00567A  1806               	xorwf	isspace@c^0,w,c
 16252  00567C  1007               	iorwf	(isspace@c+1)^0,w,c
 16253  00567E  B4D8               	btfsc	status,2,c
 16254  005680  EF44  F02B         	goto	u8351
 16255  005684  EF46  F02B         	goto	u8350
 16256  005688                     u8351:
 16257  005688  EF5F  F02B         	goto	l6899
 16258  00568C                     u8350:
 16259  00568C  0EF7               	movlw	247
 16260  00568E  6E08               	movwf	??_isspace^0,c
 16261  005690  0EFF               	movlw	255
 16262  005692  6E09               	movwf	(??_isspace+1)^0,c
 16263  005694  C006  F00A         	movff	isspace@c,??_isspace+2
 16264  005698  C007  F00B         	movff	isspace@c+1,??_isspace+3
 16265  00569C  5008               	movf	??_isspace^0,w,c
 16266  00569E  260A               	addwf	(??_isspace+2)^0,f,c
 16267  0056A0  5009               	movf	(??_isspace+1)^0,w,c
 16268  0056A2  220B               	addwfc	(??_isspace+3)^0,f,c
 16269  0056A4  500B               	movf	(??_isspace+3)^0,w,c
 16270  0056A6  E109               	bnz	u8360
 16271  0056A8  0E05               	movlw	5
 16272  0056AA  5C0A               	subwf	(??_isspace+2)^0,w,c
 16273  0056AC  A0D8               	btfss	status,0,c
 16274  0056AE  EF5B  F02B         	goto	u8361
 16275  0056B2  EF5D  F02B         	goto	u8360
 16276  0056B6                     u8361:
 16277  0056B6  EF5F  F02B         	goto	l6899
 16278  0056BA                     u8360:
 16279  0056BA  0E00               	movlw	0
 16280  0056BC  6E0C               	movwf	_isspace$1995^0,c
 16281  0056BE                     l6899:
 16282  0056BE  C00C  F006         	movff	_isspace$1995,?_isspace
 16283  0056C2  6A07               	clrf	(?_isspace+1)^0,c
 16284  0056C4  0012               	return		;funcret
 16285  0056C6                     __end_of_isspace:
 16286                           	callstack 0
 16287                           
 16288 ;; *************** function _isdigit *****************
 16289 ;; Defined at:
 16290 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 16291 ;; Parameters:    Size  Location     Type
 16292 ;;  c               2    5[COMRAM] int 
 16293 ;; Auto vars:     Size  Location     Type
 16294 ;;		None
 16295 ;; Return value:  Size  Location     Type
 16296 ;;                  2    5[COMRAM] int 
 16297 ;; Registers used:
 16298 ;;		wreg, status,2, status,0
 16299 ;; Tracked objects:
 16300 ;;		On entry : 0/0
 16301 ;;		On exit  : 0/0
 16302 ;;		Unchanged: 0/0
 16303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16304 ;;      Params:         2       0       0       0       0       0       0
 16305 ;;      Locals:         0       0       0       0       0       0       0
 16306 ;;      Temps:          4       0       0       0       0       0       0
 16307 ;;      Totals:         6       0       0       0       0       0       0
 16308 ;;Total ram usage:        6 bytes
 16309 ;; Hardware stack levels used: 1
 16310 ;; Hardware stack levels required when called: 1
 16311 ;; This function calls:
 16312 ;;		Nothing
 16313 ;; This function is called by:
 16314 ;;		_vfpfcnvrt
 16315 ;;		_atoi
 16316 ;; This function uses a non-reentrant model
 16317 ;;
 16318                           
 16319                           	psect	text63
 16320  00587C                     __ptext63:
 16321                           	callstack 0
 16322  00587C                     _isdigit:
 16323                           	callstack 25
 16324  00587C  0ED0               	movlw	208
 16325  00587E  6E08               	movwf	??_isdigit^0,c
 16326  005880  0EFF               	movlw	255
 16327  005882  6E09               	movwf	(??_isdigit+1)^0,c
 16328  005884  C006  F00A         	movff	isdigit@c,??_isdigit+2
 16329  005888  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 16330  00588C  5008               	movf	??_isdigit^0,w,c
 16331  00588E  260A               	addwf	(??_isdigit+2)^0,f,c
 16332  005890  5009               	movf	(??_isdigit+1)^0,w,c
 16333  005892  220B               	addwfc	(??_isdigit+3)^0,f,c
 16334  005894  500B               	movf	(??_isdigit+3)^0,w,c
 16335  005896  E10A               	bnz	u8330
 16336  005898  0E0A               	movlw	10
 16337  00589A  5C0A               	subwf	(??_isdigit+2)^0,w,c
 16338  00589C  A0D8               	btfss	status,0,c
 16339  00589E  EF53  F02C         	goto	u8331
 16340  0058A2  EF56  F02C         	goto	u8330
 16341  0058A6                     u8331:
 16342  0058A6  0E01               	movlw	1
 16343  0058A8  EF57  F02C         	goto	u8340
 16344  0058AC                     u8330:
 16345  0058AC  0E00               	movlw	0
 16346  0058AE                     u8340:
 16347  0058AE  6E06               	movwf	?_isdigit^0,c
 16348  0058B0  6A07               	clrf	(?_isdigit+1)^0,c
 16349  0058B2  0012               	return		;funcret
 16350  0058B4                     __end_of_isdigit:
 16351                           	callstack 0
 16352                           
 16353 ;; *************** function ___wmul *****************
 16354 ;; Defined at:
 16355 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 16356 ;; Parameters:    Size  Location     Type
 16357 ;;  multiplier      2    5[COMRAM] unsigned int 
 16358 ;;  multiplicand    2    7[COMRAM] unsigned int 
 16359 ;; Auto vars:     Size  Location     Type
 16360 ;;  product         2    9[COMRAM] unsigned int 
 16361 ;; Return value:  Size  Location     Type
 16362 ;;                  2    5[COMRAM] unsigned int 
 16363 ;; Registers used:
 16364 ;;		wreg, status,2, status,0, prodl, prodh
 16365 ;; Tracked objects:
 16366 ;;		On entry : 0/0
 16367 ;;		On exit  : 0/0
 16368 ;;		Unchanged: 0/0
 16369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16370 ;;      Params:         4       0       0       0       0       0       0
 16371 ;;      Locals:         2       0       0       0       0       0       0
 16372 ;;      Temps:          0       0       0       0       0       0       0
 16373 ;;      Totals:         6       0       0       0       0       0       0
 16374 ;;Total ram usage:        6 bytes
 16375 ;; Hardware stack levels used: 1
 16376 ;; Hardware stack levels required when called: 1
 16377 ;; This function calls:
 16378 ;;		Nothing
 16379 ;; This function is called by:
 16380 ;;		_atoi
 16381 ;; This function uses a non-reentrant model
 16382 ;;
 16383                           
 16384                           	psect	text64
 16385  005902                     __ptext64:
 16386                           	callstack 0
 16387  005902                     ___wmul:
 16388                           	callstack 24
 16389  005902  5006               	movf	___wmul@multiplier^0,w,c
 16390  005904  0208               	mulwf	___wmul@multiplicand^0,c
 16391  005906  CFF3 F00A          	movff	prodl,___wmul@product
 16392  00590A  CFF4 F00B          	movff	prodh,___wmul@product+1
 16393  00590E  5006               	movf	___wmul@multiplier^0,w,c
 16394  005910  0209               	mulwf	(___wmul@multiplicand+1)^0,c
 16395  005912  50F3               	movf	243,w,c
 16396  005914  260B               	addwf	(___wmul@product+1)^0,f,c
 16397  005916  5007               	movf	(___wmul@multiplier+1)^0,w,c
 16398  005918  0208               	mulwf	___wmul@multiplicand^0,c
 16399  00591A  50F3               	movf	243,w,c
 16400  00591C  260B               	addwf	(___wmul@product+1)^0,f,c
 16401  00591E  C00A  F006         	movff	___wmul@product,?___wmul
 16402  005922  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 16403  005926  0012               	return		;funcret
 16404  005928                     __end_of___wmul:
 16405                           	callstack 0
 16406                           
 16407 ;; *************** function _clust2sect *****************
 16408 ;; Defined at:
 16409 ;;		line 396 in file "pff.c"
 16410 ;; Parameters:    Size  Location     Type
 16411 ;;  clst            4   17[COMRAM] unsigned long 
 16412 ;; Auto vars:     Size  Location     Type
 16413 ;;  fs              2   26[COMRAM] PTR struct .
 16414 ;;		 -> NULL(0), main@fs(42), 
 16415 ;; Return value:  Size  Location     Type
 16416 ;;                  4   17[COMRAM] unsigned long 
 16417 ;; Registers used:
 16418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16419 ;; Tracked objects:
 16420 ;;		On entry : 0/0
 16421 ;;		On exit  : 0/0
 16422 ;;		Unchanged: 0/0
 16423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16424 ;;      Params:         4       0       0       0       0       0       0
 16425 ;;      Locals:         2       0       0       0       0       0       0
 16426 ;;      Temps:          5       0       0       0       0       0       0
 16427 ;;      Totals:        11       0       0       0       0       0       0
 16428 ;;Total ram usage:       11 bytes
 16429 ;; Hardware stack levels used: 1
 16430 ;; Hardware stack levels required when called: 2
 16431 ;; This function calls:
 16432 ;;		___lmul
 16433 ;; This function is called by:
 16434 ;;		_dir_rewind
 16435 ;;		_dir_next
 16436 ;;		_pf_read
 16437 ;;		_pf_lseek
 16438 ;;		_pf_write
 16439 ;; This function uses a non-reentrant model
 16440 ;;
 16441                           
 16442                           	psect	text65
 16443  004E24                     __ptext65:
 16444                           	callstack 0
 16445  004E24                     _clust2sect:
 16446                           	callstack 26
 16447  004E24                     
 16448                           ;pff.c: 397:  DWORD clst;pff.c: 399: {;pff.c: 400:  FATFS *fs = FatFs;
 16449  004E24  C0F1  F01B         	movff	_FatFs,clust2sect@fs
 16450  004E28  C0F2  F01C         	movff	_FatFs+1,clust2sect@fs+1
 16451                           
 16452                           ;pff.c: 403:  clst -= 2;
 16453  004E2C  0E02               	movlw	2
 16454  004E2E  5E12               	subwf	clust2sect@clst^0,f,c
 16455  004E30  0E00               	movlw	0
 16456  004E32  5A13               	subwfb	(clust2sect@clst+1)^0,f,c
 16457  004E34  5A14               	subwfb	(clust2sect@clst+2)^0,f,c
 16458  004E36  5A15               	subwfb	(clust2sect@clst+3)^0,f,c
 16459  004E38                     
 16460                           ;pff.c: 404:  if (clst >= (fs->n_fatent - 2)) return 0;
 16461  004E38  EE20 F006          	lfsr	2,6
 16462  004E3C  501B               	movf	clust2sect@fs^0,w,c
 16463  004E3E  26D9               	addwf	fsr2l,f,c
 16464  004E40  501C               	movf	(clust2sect@fs+1)^0,w,c
 16465  004E42  22DA               	addwfc	fsr2h,f,c
 16466  004E44  0EFE               	movlw	254
 16467  004E46  24DE               	addwf	postinc2,w,c
 16468  004E48  6E16               	movwf	??_clust2sect^0,c
 16469  004E4A  0EFF               	movlw	255
 16470  004E4C  20DE               	addwfc	postinc2,w,c
 16471  004E4E  6E17               	movwf	(??_clust2sect+1)^0,c
 16472  004E50  0EFF               	movlw	255
 16473  004E52  20DE               	addwfc	postinc2,w,c
 16474  004E54  6E18               	movwf	(??_clust2sect+2)^0,c
 16475  004E56  0EFF               	movlw	255
 16476  004E58  20DE               	addwfc	postinc2,w,c
 16477  004E5A  6E19               	movwf	(??_clust2sect+3)^0,c
 16478  004E5C  5016               	movf	??_clust2sect^0,w,c
 16479  004E5E  5C12               	subwf	clust2sect@clst^0,w,c
 16480  004E60  5017               	movf	(??_clust2sect+1)^0,w,c
 16481  004E62  5813               	subwfb	(clust2sect@clst+1)^0,w,c
 16482  004E64  5018               	movf	(??_clust2sect+2)^0,w,c
 16483  004E66  5814               	subwfb	(clust2sect@clst+2)^0,w,c
 16484  004E68  5019               	movf	(??_clust2sect+3)^0,w,c
 16485  004E6A  5815               	subwfb	(clust2sect@clst+3)^0,w,c
 16486  004E6C  A0D8               	btfss	status,0,c
 16487  004E6E  EF3B  F027         	goto	u9451
 16488  004E72  EF3D  F027         	goto	u9450
 16489  004E76                     u9451:
 16490  004E76  EF47  F027         	goto	l7477
 16491  004E7A                     u9450:
 16492  004E7A  0E00               	movlw	0
 16493  004E7C  6E12               	movwf	?_clust2sect^0,c
 16494  004E7E  0E00               	movlw	0
 16495  004E80  6E13               	movwf	(?_clust2sect+1)^0,c
 16496  004E82  0E00               	movlw	0
 16497  004E84  6E14               	movwf	(?_clust2sect+2)^0,c
 16498  004E86  0E00               	movlw	0
 16499  004E88  6E15               	movwf	(?_clust2sect+3)^0,c
 16500  004E8A  EF78  F027         	goto	l204
 16501  004E8E                     l7477:
 16502                           
 16503                           ;pff.c: 405:  return (DWORD)clst * fs->csize + fs->database;
 16504  004E8E  EE20 F012          	lfsr	2,18
 16505  004E92  501B               	movf	clust2sect@fs^0,w,c
 16506  004E94  26D9               	addwf	fsr2l,f,c
 16507  004E96  501C               	movf	(clust2sect@fs+1)^0,w,c
 16508  004E98  22DA               	addwfc	fsr2h,f,c
 16509  004E9A  CFDE F016          	movff	postinc2,??_clust2sect
 16510  004E9E  CFDE F017          	movff	postinc2,??_clust2sect+1
 16511  004EA2  CFDE F018          	movff	postinc2,??_clust2sect+2
 16512  004EA6  CFDE F019          	movff	postinc2,??_clust2sect+3
 16513  004EAA  EE20 F002          	lfsr	2,2
 16514  004EAE  501B               	movf	clust2sect@fs^0,w,c
 16515  004EB0  26D9               	addwf	fsr2l,f,c
 16516  004EB2  501C               	movf	(clust2sect@fs+1)^0,w,c
 16517  004EB4  22DA               	addwfc	fsr2h,f,c
 16518  004EB6  50DF               	movf	indf2,w,c
 16519  004EB8  6E1A               	movwf	(??_clust2sect+4)^0,c
 16520  004EBA  501A               	movf	(??_clust2sect+4)^0,w,c
 16521  004EBC  6E06               	movwf	___lmul@multiplier^0,c
 16522  004EBE  6A07               	clrf	(___lmul@multiplier+1)^0,c
 16523  004EC0  6A08               	clrf	(___lmul@multiplier+2)^0,c
 16524  004EC2  6A09               	clrf	(___lmul@multiplier+3)^0,c
 16525  004EC4  C012  F00A         	movff	clust2sect@clst,___lmul@multiplicand
 16526  004EC8  C013  F00B         	movff	clust2sect@clst+1,___lmul@multiplicand+1
 16527  004ECC  C014  F00C         	movff	clust2sect@clst+2,___lmul@multiplicand+2
 16528  004ED0  C015  F00D         	movff	clust2sect@clst+3,___lmul@multiplicand+3
 16529  004ED4  EC76  F02A         	call	___lmul	;wreg free
 16530  004ED8  5016               	movf	??_clust2sect^0,w,c
 16531  004EDA  2406               	addwf	?___lmul^0,w,c
 16532  004EDC  6E12               	movwf	?_clust2sect^0,c
 16533  004EDE  5017               	movf	(??_clust2sect+1)^0,w,c
 16534  004EE0  2007               	addwfc	(?___lmul+1)^0,w,c
 16535  004EE2  6E13               	movwf	(?_clust2sect+1)^0,c
 16536  004EE4  5018               	movf	(??_clust2sect+2)^0,w,c
 16537  004EE6  2008               	addwfc	(?___lmul+2)^0,w,c
 16538  004EE8  6E14               	movwf	(?_clust2sect+2)^0,c
 16539  004EEA  5019               	movf	(??_clust2sect+3)^0,w,c
 16540  004EEC  2009               	addwfc	(?___lmul+3)^0,w,c
 16541  004EEE  6E15               	movwf	(?_clust2sect+3)^0,c
 16542  004EF0                     l204:
 16543  004EF0  0012               	return		;funcret
 16544  004EF2                     __end_of_clust2sect:
 16545                           	callstack 0
 16546                           
 16547 ;; *************** function ___lmul *****************
 16548 ;; Defined at:
 16549 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
 16550 ;; Parameters:    Size  Location     Type
 16551 ;;  multiplier      4    5[COMRAM] unsigned long 
 16552 ;;  multiplicand    4    9[COMRAM] unsigned long 
 16553 ;; Auto vars:     Size  Location     Type
 16554 ;;  product         4   13[COMRAM] unsigned long 
 16555 ;; Return value:  Size  Location     Type
 16556 ;;                  4    5[COMRAM] unsigned long 
 16557 ;; Registers used:
 16558 ;;		wreg, status,2, status,0
 16559 ;; Tracked objects:
 16560 ;;		On entry : 0/0
 16561 ;;		On exit  : 0/0
 16562 ;;		Unchanged: 0/0
 16563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16564 ;;      Params:         8       0       0       0       0       0       0
 16565 ;;      Locals:         4       0       0       0       0       0       0
 16566 ;;      Temps:          0       0       0       0       0       0       0
 16567 ;;      Totals:        12       0       0       0       0       0       0
 16568 ;;Total ram usage:       12 bytes
 16569 ;; Hardware stack levels used: 1
 16570 ;; Hardware stack levels required when called: 1
 16571 ;; This function calls:
 16572 ;;		Nothing
 16573 ;; This function is called by:
 16574 ;;		_clust2sect
 16575 ;;		_pf_mount
 16576 ;;		_xatoi
 16577 ;; This function uses a non-reentrant model
 16578 ;;
 16579                           
 16580                           	psect	text66
 16581  0054EC                     __ptext66:
 16582                           	callstack 0
 16583  0054EC                     ___lmul:
 16584                           	callstack 28
 16585  0054EC  0E00               	movlw	0
 16586  0054EE  6E0E               	movwf	___lmul@product^0,c
 16587  0054F0  0E00               	movlw	0
 16588  0054F2  6E0F               	movwf	(___lmul@product+1)^0,c
 16589  0054F4  0E00               	movlw	0
 16590  0054F6  6E10               	movwf	(___lmul@product+2)^0,c
 16591  0054F8  0E00               	movlw	0
 16592  0054FA  6E11               	movwf	(___lmul@product+3)^0,c
 16593  0054FC                     l7433:
 16594  0054FC  A006               	btfss	___lmul@multiplier^0,0,c
 16595  0054FE  EF83  F02A         	goto	u9391
 16596  005502  EF85  F02A         	goto	u9390
 16597  005506                     u9391:
 16598  005506  EF8D  F02A         	goto	l7437
 16599  00550A                     u9390:
 16600  00550A  500A               	movf	___lmul@multiplicand^0,w,c
 16601  00550C  260E               	addwf	___lmul@product^0,f,c
 16602  00550E  500B               	movf	(___lmul@multiplicand+1)^0,w,c
 16603  005510  220F               	addwfc	(___lmul@product+1)^0,f,c
 16604  005512  500C               	movf	(___lmul@multiplicand+2)^0,w,c
 16605  005514  2210               	addwfc	(___lmul@product+2)^0,f,c
 16606  005516  500D               	movf	(___lmul@multiplicand+3)^0,w,c
 16607  005518  2211               	addwfc	(___lmul@product+3)^0,f,c
 16608  00551A                     l7437:
 16609  00551A  90D8               	bcf	status,0,c
 16610  00551C  360A               	rlcf	___lmul@multiplicand^0,f,c
 16611  00551E  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
 16612  005520  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
 16613  005522  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
 16614  005524  90D8               	bcf	status,0,c
 16615  005526  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
 16616  005528  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
 16617  00552A  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
 16618  00552C  3206               	rrcf	___lmul@multiplier^0,f,c
 16619  00552E  5006               	movf	___lmul@multiplier^0,w,c
 16620  005530  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
 16621  005532  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
 16622  005534  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
 16623  005536  A4D8               	btfss	status,2,c
 16624  005538  EFA0  F02A         	goto	u9401
 16625  00553C  EFA2  F02A         	goto	u9400
 16626  005540                     u9401:
 16627  005540  EF7E  F02A         	goto	l7433
 16628  005544                     u9400:
 16629  005544  C00E  F006         	movff	___lmul@product,?___lmul
 16630  005548  C00F  F007         	movff	___lmul@product+1,?___lmul+1
 16631  00554C  C010  F008         	movff	___lmul@product+2,?___lmul+2
 16632  005550  C011  F009         	movff	___lmul@product+3,?___lmul+3
 16633  005554  0012               	return		;funcret
 16634  005556                     __end_of___lmul:
 16635                           	callstack 0
 16636                           
 16637 ;; *************** function ___lldiv *****************
 16638 ;; Defined at:
 16639 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 16640 ;; Parameters:    Size  Location     Type
 16641 ;;  dividend        4    5[COMRAM] unsigned long 
 16642 ;;  divisor         4    9[COMRAM] unsigned long 
 16643 ;; Auto vars:     Size  Location     Type
 16644 ;;  quotient        4   13[COMRAM] unsigned long 
 16645 ;;  counter         1   17[COMRAM] unsigned char 
 16646 ;; Return value:  Size  Location     Type
 16647 ;;                  4    5[COMRAM] unsigned long 
 16648 ;; Registers used:
 16649 ;;		wreg, status,2, status,0
 16650 ;; Tracked objects:
 16651 ;;		On entry : 0/0
 16652 ;;		On exit  : 0/0
 16653 ;;		Unchanged: 0/0
 16654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16655 ;;      Params:         8       0       0       0       0       0       0
 16656 ;;      Locals:         5       0       0       0       0       0       0
 16657 ;;      Temps:          0       0       0       0       0       0       0
 16658 ;;      Totals:        13       0       0       0       0       0       0
 16659 ;;Total ram usage:       13 bytes
 16660 ;; Hardware stack levels used: 1
 16661 ;; Hardware stack levels required when called: 1
 16662 ;; This function calls:
 16663 ;;		Nothing
 16664 ;; This function is called by:
 16665 ;;		_pf_mount
 16666 ;;		_pf_lseek
 16667 ;; This function uses a non-reentrant model
 16668 ;;
 16669                           
 16670                           	psect	text67
 16671  005078                     __ptext67:
 16672                           	callstack 0
 16673  005078                     ___lldiv:
 16674                           	callstack 28
 16675  005078  0E00               	movlw	0
 16676  00507A  6E0E               	movwf	___lldiv@quotient^0,c
 16677  00507C  0E00               	movlw	0
 16678  00507E  6E0F               	movwf	(___lldiv@quotient+1)^0,c
 16679  005080  0E00               	movlw	0
 16680  005082  6E10               	movwf	(___lldiv@quotient+2)^0,c
 16681  005084  0E00               	movlw	0
 16682  005086  6E11               	movwf	(___lldiv@quotient+3)^0,c
 16683  005088  500A               	movf	___lldiv@divisor^0,w,c
 16684  00508A  100B               	iorwf	(___lldiv@divisor+1)^0,w,c
 16685  00508C  100C               	iorwf	(___lldiv@divisor+2)^0,w,c
 16686  00508E  100D               	iorwf	(___lldiv@divisor+3)^0,w,c
 16687  005090  B4D8               	btfsc	status,2,c
 16688  005092  EF4D  F028         	goto	u10221
 16689  005096  EF4F  F028         	goto	u10220
 16690  00509A                     u10221:
 16691  00509A  EF85  F028         	goto	l716
 16692  00509E                     u10220:
 16693  00509E  0E01               	movlw	1
 16694  0050A0  6E12               	movwf	___lldiv@counter^0,c
 16695  0050A2  EF59  F028         	goto	l7891
 16696  0050A6                     l7889:
 16697  0050A6  90D8               	bcf	status,0,c
 16698  0050A8  360A               	rlcf	___lldiv@divisor^0,f,c
 16699  0050AA  360B               	rlcf	(___lldiv@divisor+1)^0,f,c
 16700  0050AC  360C               	rlcf	(___lldiv@divisor+2)^0,f,c
 16701  0050AE  360D               	rlcf	(___lldiv@divisor+3)^0,f,c
 16702  0050B0  2A12               	incf	___lldiv@counter^0,f,c
 16703  0050B2                     l7891:
 16704  0050B2  AE0D               	btfss	(___lldiv@divisor+3)^0,7,c
 16705  0050B4  EF5E  F028         	goto	u10231
 16706  0050B8  EF60  F028         	goto	u10230
 16707  0050BC                     u10231:
 16708  0050BC  EF53  F028         	goto	l7889
 16709  0050C0                     u10230:
 16710  0050C0                     l7893:
 16711  0050C0  90D8               	bcf	status,0,c
 16712  0050C2  360E               	rlcf	___lldiv@quotient^0,f,c
 16713  0050C4  360F               	rlcf	(___lldiv@quotient+1)^0,f,c
 16714  0050C6  3610               	rlcf	(___lldiv@quotient+2)^0,f,c
 16715  0050C8  3611               	rlcf	(___lldiv@quotient+3)^0,f,c
 16716  0050CA  500A               	movf	___lldiv@divisor^0,w,c
 16717  0050CC  5C06               	subwf	___lldiv@dividend^0,w,c
 16718  0050CE  500B               	movf	(___lldiv@divisor+1)^0,w,c
 16719  0050D0  5807               	subwfb	(___lldiv@dividend+1)^0,w,c
 16720  0050D2  500C               	movf	(___lldiv@divisor+2)^0,w,c
 16721  0050D4  5808               	subwfb	(___lldiv@dividend+2)^0,w,c
 16722  0050D6  500D               	movf	(___lldiv@divisor+3)^0,w,c
 16723  0050D8  5809               	subwfb	(___lldiv@dividend+3)^0,w,c
 16724  0050DA  A0D8               	btfss	status,0,c
 16725  0050DC  EF72  F028         	goto	u10241
 16726  0050E0  EF74  F028         	goto	u10240
 16727  0050E4                     u10241:
 16728  0050E4  EF7D  F028         	goto	l7901
 16729  0050E8                     u10240:
 16730  0050E8  500A               	movf	___lldiv@divisor^0,w,c
 16731  0050EA  5E06               	subwf	___lldiv@dividend^0,f,c
 16732  0050EC  500B               	movf	(___lldiv@divisor+1)^0,w,c
 16733  0050EE  5A07               	subwfb	(___lldiv@dividend+1)^0,f,c
 16734  0050F0  500C               	movf	(___lldiv@divisor+2)^0,w,c
 16735  0050F2  5A08               	subwfb	(___lldiv@dividend+2)^0,f,c
 16736  0050F4  500D               	movf	(___lldiv@divisor+3)^0,w,c
 16737  0050F6  5A09               	subwfb	(___lldiv@dividend+3)^0,f,c
 16738  0050F8  800E               	bsf	___lldiv@quotient^0,0,c
 16739  0050FA                     l7901:
 16740  0050FA  90D8               	bcf	status,0,c
 16741  0050FC  320D               	rrcf	(___lldiv@divisor+3)^0,f,c
 16742  0050FE  320C               	rrcf	(___lldiv@divisor+2)^0,f,c
 16743  005100  320B               	rrcf	(___lldiv@divisor+1)^0,f,c
 16744  005102  320A               	rrcf	___lldiv@divisor^0,f,c
 16745  005104  2E12               	decfsz	___lldiv@counter^0,f,c
 16746  005106  EF60  F028         	goto	l7893
 16747  00510A                     l716:
 16748  00510A  C00E  F006         	movff	___lldiv@quotient,?___lldiv
 16749  00510E  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
 16750  005112  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
 16751  005116  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
 16752  00511A  0012               	return		;funcret
 16753  00511C                     __end_of___lldiv:
 16754                           	callstack 0
 16755                           
 16756 ;; *************** function _gpio_init *****************
 16757 ;; Defined at:
 16758 ;;		line 45 in file "main.c"
 16759 ;; Parameters:    Size  Location     Type
 16760 ;;		None
 16761 ;; Auto vars:     Size  Location     Type
 16762 ;;		None
 16763 ;; Return value:  Size  Location     Type
 16764 ;;                  1    wreg      void 
 16765 ;; Registers used:
 16766 ;;		None
 16767 ;; Tracked objects:
 16768 ;;		On entry : 0/0
 16769 ;;		On exit  : 0/0
 16770 ;;		Unchanged: 0/0
 16771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16772 ;;      Params:         0       0       0       0       0       0       0
 16773 ;;      Locals:         0       0       0       0       0       0       0
 16774 ;;      Temps:          0       0       0       0       0       0       0
 16775 ;;      Totals:         0       0       0       0       0       0       0
 16776 ;;Total ram usage:        0 bytes
 16777 ;; Hardware stack levels used: 1
 16778 ;; Hardware stack levels required when called: 1
 16779 ;; This function calls:
 16780 ;;		Nothing
 16781 ;; This function is called by:
 16782 ;;		_main
 16783 ;; This function uses a non-reentrant model
 16784 ;;
 16785                           
 16786                           	psect	text68
 16787  00599E                     __ptext68:
 16788                           	callstack 0
 16789  00599E                     _gpio_init:
 16790                           	callstack 29
 16791  00599E                     
 16792                           ;main.c: 52:     TRISCbits.RC7 = 1;
 16793  00599E  8E94               	bsf	148,7,c	;volatile
 16794                           
 16795                           ;main.c: 53:     TRISCbits.RC6 = 0;
 16796  0059A0  9C94               	bcf	148,6,c	;volatile
 16797                           
 16798                           ;main.c: 56:     TRISAbits.RA5 = 0;
 16799  0059A2  9A92               	bcf	146,5,c	;volatile
 16800                           
 16801                           ;main.c: 57:     LATAbits.LA5 = 1;
 16802  0059A4  8A89               	bsf	137,5,c	;volatile
 16803                           
 16804                           ;main.c: 59:     TRISCbits.RC5 = 0;
 16805  0059A6  9A94               	bcf	148,5,c	;volatile
 16806                           
 16807                           ;main.c: 60:     TRISCbits.RC4 = 1;
 16808  0059A8  8894               	bsf	148,4,c	;volatile
 16809                           
 16810                           ;main.c: 61:     TRISCbits.RC3 = 0;
 16811  0059AA  9694               	bcf	148,3,c	;volatile
 16812  0059AC  0012               	return		;funcret
 16813  0059AE                     __end_of_gpio_init:
 16814                           	callstack 0
 16815                           
 16816 ;; *************** function _isr_high *****************
 16817 ;; Defined at:
 16818 ;;		line 68 in file "uart.c"
 16819 ;; Parameters:    Size  Location     Type
 16820 ;;		None
 16821 ;; Auto vars:     Size  Location     Type
 16822 ;;  i               2    3[COMRAM] int 
 16823 ;;  d               1    2[COMRAM] unsigned char 
 16824 ;; Return value:  Size  Location     Type
 16825 ;;                  1    wreg      void 
 16826 ;; Registers used:
 16827 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16828 ;; Tracked objects:
 16829 ;;		On entry : 0/0
 16830 ;;		On exit  : 0/0
 16831 ;;		Unchanged: 0/0
 16832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16833 ;;      Params:         0       0       0       0       0       0       0
 16834 ;;      Locals:         3       0       0       0       0       0       0
 16835 ;;      Temps:          2       0       0       0       0       0       0
 16836 ;;      Totals:         5       0       0       0       0       0       0
 16837 ;;Total ram usage:        5 bytes
 16838 ;; Hardware stack levels used: 1
 16839 ;; This function calls:
 16840 ;;		Nothing
 16841 ;; This function is called by:
 16842 ;;		Interrupt level 2
 16843 ;; This function uses a non-reentrant model
 16844 ;;
 16845                           
 16846                           	psect	intcode
 16847  000008                     __pintcode:
 16848                           	callstack 0
 16849  000008                     _isr_high:
 16850                           	callstack 16
 16851                           
 16852                           ;incstack = 0
 16853  000008  827A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16854  00000A  ED8E  F028         	call	int_func,f	;refresh shadow registers
 16855                           
 16856                           	psect	intcode_body
 16857  00511C                     __pintcode_body:
 16858                           	callstack 16
 16859  00511C                     int_func:
 16860                           	callstack 16
 16861  00511C  0006               	pop		; remove dummy address from shadow register refresh
 16862  00511E  CFD9 F001          	movff	fsr2l,??_isr_high
 16863  005122  CFDA F002          	movff	fsr2h,??_isr_high+1
 16864  005126                     
 16865                           ;uart.c: 70:     if (RCIE && RCIF)
 16866  005126  AA9D               	btfss	3997,5,c	;volatile
 16867  005128  EF98  F028         	goto	i2u786_41
 16868  00512C  EF9A  F028         	goto	i2u786_40
 16869  005130                     i2u786_41:
 16870  005130  EFDA  F028         	goto	i2l468
 16871  005134                     i2u786_40:
 16872  005134  AA9E               	btfss	3998,5,c	;volatile
 16873  005136  EF9F  F028         	goto	i2u787_41
 16874  00513A  EFA1  F028         	goto	i2u787_40
 16875  00513E                     i2u787_41:
 16876  00513E  EFDA  F028         	goto	i2l468
 16877  005142                     i2u787_40:
 16878  005142                     
 16879                           ;uart.c: 71:     {;uart.c: 72:         BYTE d;;uart.c: 73:         int i;;uart.c: 75:   
      +                                d = (BYTE)RCREG;
 16880  005142  CFAE F003          	movff	4014,isr_high@d	;volatile
 16881                           
 16882                           ;uart.c: 76:         RCIF = 0;
 16883  005146  9A9E               	bcf	3998,5,c	;volatile
 16884                           
 16885                           ;uart.c: 78:         TXREG = RCREG;
 16886  005148  CFAE FFAD          	movff	4014,4013	;volatile
 16887                           
 16888                           ;uart.c: 80:         i = RxFifo.ct;
 16889  00514C  C204  F004         	movff	_RxFifo+4,isr_high@i	;volatile
 16890  005150  C205  F005         	movff	_RxFifo+5,isr_high@i+1	;volatile
 16891  005154                     
 16892                           ;uart.c: 81:         if (i < 128) {
 16893  005154  BE05               	btfsc	(isr_high@i+1)^0,7,c
 16894  005156  EFB8  F028         	goto	i2u788_40
 16895  00515A  5005               	movf	(isr_high@i+1)^0,w,c
 16896  00515C  E107               	bnz	i2u788_41
 16897  00515E  0E80               	movlw	128
 16898  005160  5C04               	subwf	isr_high@i^0,w,c
 16899  005162  B0D8               	btfsc	status,0,c
 16900  005164  EFB6  F028         	goto	i2u788_41
 16901  005168  EFB8  F028         	goto	i2u788_40
 16902  00516C                     i2u788_41:
 16903  00516C  EFD1  F028         	goto	i2l6495
 16904  005170                     i2u788_40:
 16905  005170                     
 16906                           ;uart.c: 82:             RxFifo.ct = ++i;
 16907  005170  4A04               	infsnz	isr_high@i^0,f,c
 16908  005172  2A05               	incf	(isr_high@i+1)^0,f,c
 16909  005174  C004  F204         	movff	isr_high@i,_RxFifo+4	;volatile
 16910  005178  C005  F205         	movff	isr_high@i+1,_RxFifo+5	;volatile
 16911  00517C                     
 16912                           ;uart.c: 83:             i = RxFifo.wi;
 16913  00517C  C202  F004         	movff	_RxFifo+2,isr_high@i	;volatile
 16914  005180  C203  F005         	movff	_RxFifo+3,isr_high@i+1	;volatile
 16915  005184                     
 16916                           ;uart.c: 84:             RxFifo.buff[i++] = d;
 16917  005184  0E06               	movlw	low (_RxFifo+6)
 16918  005186  2404               	addwf	isr_high@i^0,w,c
 16919  005188  6ED9               	movwf	fsr2l,c
 16920  00518A  0E02               	movlw	high (_RxFifo+6)
 16921  00518C  2005               	addwfc	(isr_high@i+1)^0,w,c
 16922  00518E  6EDA               	movwf	fsr2h,c
 16923  005190  C003  FFDF         	movff	isr_high@d,indf2
 16924  005194  4A04               	infsnz	isr_high@i^0,f,c
 16925  005196  2A05               	incf	(isr_high@i+1)^0,f,c
 16926  005198                     
 16927                           ;uart.c: 85:             RxFifo.wi = i % 128;
 16928  005198  0E7F               	movlw	127
 16929  00519A  1404               	andwf	isr_high@i^0,w,c
 16930  00519C  0102               	movlb	2	; () banked
 16931  00519E  6F02               	movwf	(_RxFifo+2)& (0+255),b	;volatile
 16932  0051A0  6B03               	clrf	(_RxFifo+3)& (0+255),b	;volatile
 16933  0051A2                     i2l6495:
 16934                           
 16935                           ;uart.c: 88:         LATBbits.LB1 = PORTBbits.RB1 ^ 0x01;
 16936  0051A2  A281               	btfss	129,1,c	;volatile
 16937  0051A4  EFD6  F028         	goto	i2u789_41
 16938  0051A8  EFD9  F028         	goto	i2u789_40
 16939  0051AC                     i2u789_41:
 16940  0051AC  828A               	bsf	138,1,c	;volatile
 16941  0051AE  EFDA  F028         	goto	i2u790_45
 16942  0051B2                     i2u789_40:
 16943  0051B2  928A               	bcf	138,1,c	;volatile
 16944  0051B4                     i2u790_45:
 16945  0051B4                     i2l468:
 16946  0051B4  C002  FFDA         	movff	??_isr_high+1,fsr2h
 16947  0051B8  C001  FFD9         	movff	??_isr_high,fsr2l
 16948  0051BC  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16949  0051BE  0011               	retfie		f
 16950  0051C0                     __end_of_isr_high:
 16951                           	callstack 0
 16952                           
 16953                           	psect	rparam
 16954  0000                     
 16955                           	psect	temp
 16956  00007A                     btemp:
 16957                           	callstack 0
 16958  00007A                     	ds	1
 16959  0000                     int$flags	set	btemp
 16960  0000                     wtemp8	set	btemp+1
 16961  0000                     ttemp5	set	btemp+1
 16962  0000                     ttemp6	set	btemp+4
 16963  0000                     ttemp7	set	btemp+8
 16964                           
 16965                           	psect	idloc
 16966                           
 16967                           ;Config register IDLOC0 @ 0x200000
 16968                           ;	unspecified, using default values
 16969  200000                     	org	2097152
 16970  200000  FF                 	db	255
 16971                           
 16972                           ;Config register IDLOC1 @ 0x200001
 16973                           ;	unspecified, using default values
 16974  200001                     	org	2097153
 16975  200001  FF                 	db	255
 16976                           
 16977                           ;Config register IDLOC2 @ 0x200002
 16978                           ;	unspecified, using default values
 16979  200002                     	org	2097154
 16980  200002  FF                 	db	255
 16981                           
 16982                           ;Config register IDLOC3 @ 0x200003
 16983                           ;	unspecified, using default values
 16984  200003                     	org	2097155
 16985  200003  FF                 	db	255
 16986                           
 16987                           ;Config register IDLOC4 @ 0x200004
 16988                           ;	unspecified, using default values
 16989  200004                     	org	2097156
 16990  200004  FF                 	db	255
 16991                           
 16992                           ;Config register IDLOC5 @ 0x200005
 16993                           ;	unspecified, using default values
 16994  200005                     	org	2097157
 16995  200005  FF                 	db	255
 16996                           
 16997                           ;Config register IDLOC6 @ 0x200006
 16998                           ;	unspecified, using default values
 16999  200006                     	org	2097158
 17000  200006  FF                 	db	255
 17001                           
 17002                           ;Config register IDLOC7 @ 0x200007
 17003                           ;	unspecified, using default values
 17004  200007                     	org	2097159
 17005  200007  FF                 	db	255
 17006                           
 17007                           	psect	config
 17008                           
 17009                           ; Padding undefined space
 17010  300000                     	org	3145728
 17011  300000  FF                 	db	255
 17012                           
 17013                           ;Config register CONFIG1H @ 0x300001
 17014                           ;	Oscillator Selection bits
 17015                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 17016                           ;	Fail-Safe Clock Monitor Enable bit
 17017                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 17018                           ;	Internal/External Oscillator Switchover bit
 17019                           ;	IESO = OFF, Oscillator Switchover mode disabled
 17020  300001                     	org	3145729
 17021  300001  06                 	db	6
 17022                           
 17023                           ;Config register CONFIG2L @ 0x300002
 17024                           ;	Power-up Timer Enable bit
 17025                           ;	PWRT = OFF, PWRT disabled
 17026                           ;	Brown-out Reset Enable bits
 17027                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 17028                           ;	Brown Out Reset Voltage bits
 17029                           ;	BORV = 3, Minimum setting
 17030  300002                     	org	3145730
 17031  300002  19                 	db	25
 17032                           
 17033                           ;Config register CONFIG2H @ 0x300003
 17034                           ;	Watchdog Timer Enable bit
 17035                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 17036                           ;	Watchdog Timer Postscale Select bits
 17037                           ;	WDTPS = 32768, 1:32768
 17038  300003                     	org	3145731
 17039  300003  1E                 	db	30
 17040                           
 17041                           ; Padding undefined space
 17042  300004                     	org	3145732
 17043  300004  FF                 	db	255
 17044                           
 17045                           ;Config register CONFIG3H @ 0x300005
 17046                           ;	CCP2 MUX bit
 17047                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 17048                           ;	PORTB A/D Enable bit
 17049                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 17050                           ;	Low-Power Timer1 Oscillator Enable bit
 17051                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 17052                           ;	MCLR Pin Enable bit
 17053                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 17054  300005                     	org	3145733
 17055  300005  81                 	db	129
 17056                           
 17057                           ;Config register CONFIG4L @ 0x300006
 17058                           ;	Stack Full/Underflow Reset Enable bit
 17059                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17060                           ;	Single-Supply ICSP Enable bit
 17061                           ;	LVP = OFF, Single-Supply ICSP disabled
 17062                           ;	Extended Instruction Set Enable bit
 17063                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 17064                           ;	Background Debugger Enable bit
 17065                           ;	DEBUG = 0x1, unprogrammed default
 17066  300006                     	org	3145734
 17067  300006  81                 	db	129
 17068                           
 17069                           ; Padding undefined space
 17070  300007                     	org	3145735
 17071  300007  FF                 	db	255
 17072                           
 17073                           ;Config register CONFIG5L @ 0x300008
 17074                           ;	Code Protection bit
 17075                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 17076                           ;	Code Protection bit
 17077                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 17078                           ;	Code Protection bit
 17079                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 17080                           ;	Code Protection bit
 17081                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 17082  300008                     	org	3145736
 17083  300008  0F                 	db	15
 17084                           
 17085                           ;Config register CONFIG5H @ 0x300009
 17086                           ;	Boot Block Code Protection bit
 17087                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 17088                           ;	Data EEPROM Code Protection bit
 17089                           ;	CPD = OFF, Data EEPROM not code-protected
 17090  300009                     	org	3145737
 17091  300009  C0                 	db	192
 17092                           
 17093                           ;Config register CONFIG6L @ 0x30000A
 17094                           ;	Write Protection bit
 17095                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 17096                           ;	Write Protection bit
 17097                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 17098                           ;	Write Protection bit
 17099                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 17100                           ;	Write Protection bit
 17101                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 17102  30000A                     	org	3145738
 17103  30000A  0F                 	db	15
 17104                           
 17105                           ;Config register CONFIG6H @ 0x30000B
 17106                           ;	Configuration Register Write Protection bit
 17107                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 17108                           ;	Boot Block Write Protection bit
 17109                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
 17110                           ;	Data EEPROM Write Protection bit
 17111                           ;	WRTD = OFF, Data EEPROM not write-protected
 17112  30000B                     	org	3145739
 17113  30000B  E0                 	db	224
 17114                           
 17115                           ;Config register CONFIG7L @ 0x30000C
 17116                           ;	Table Read Protection bit
 17117                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 17118                           ;	Table Read Protection bit
 17119                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 17120                           ;	Table Read Protection bit
 17121                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 17122                           ;	Table Read Protection bit
 17123                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 17124  30000C                     	org	3145740
 17125  30000C  0F                 	db	15
 17126                           
 17127                           ;Config register CONFIG7H @ 0x30000D
 17128                           ;	Boot Block Table Read Protection bit
 17129                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 17130  30000D                     	org	3145741
 17131  30000D  40                 	db	64
 17132                           tosu	equ	0xFFF
 17133                           tosh	equ	0xFFE
 17134                           tosl	equ	0xFFD
 17135                           stkptr	equ	0xFFC
 17136                           pclatu	equ	0xFFB
 17137                           pclath	equ	0xFFA
 17138                           pcl	equ	0xFF9
 17139                           tblptru	equ	0xFF8
 17140                           tblptrh	equ	0xFF7
 17141                           tblptrl	equ	0xFF6
 17142                           tablat	equ	0xFF5
 17143                           prodh	equ	0xFF4
 17144                           prodl	equ	0xFF3
 17145                           indf0	equ	0xFEF
 17146                           postinc0	equ	0xFEE
 17147                           postdec0	equ	0xFED
 17148                           preinc0	equ	0xFEC
 17149                           plusw0	equ	0xFEB
 17150                           fsr0h	equ	0xFEA
 17151                           fsr0l	equ	0xFE9
 17152                           wreg	equ	0xFE8
 17153                           indf1	equ	0xFE7
 17154                           postinc1	equ	0xFE6
 17155                           postdec1	equ	0xFE5
 17156                           preinc1	equ	0xFE4
 17157                           plusw1	equ	0xFE3
 17158                           fsr1h	equ	0xFE2
 17159                           fsr1l	equ	0xFE1
 17160                           bsr	equ	0xFE0
 17161                           indf2	equ	0xFDF
 17162                           postinc2	equ	0xFDE
 17163                           postdec2	equ	0xFDD
 17164                           preinc2	equ	0xFDC
 17165                           plusw2	equ	0xFDB
 17166                           fsr2h	equ	0xFDA
 17167                           fsr2l	equ	0xFD9
 17168                           status	equ	0xFD8

Data Sizes:
    Strings     365
    Constant    197
    Data        7
    BSS         445
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    116     121
    BANK0           128    107     115
    BANK1           256    189     232
    BANK2           256      0     134
    BANK3           256      0     128
    BANK4           256      0     134
    BANK5           244      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_52(CODE[3]), STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_52(CODE[3]), STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_printf(BANK0[2]), main@fno(BANK1[22]), 
		 -> put_rc@str(CODE[69]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_printf(BANK0[2]), main@fno(BANK1[22]), 
		 -> put_rc@str(CODE[69]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1784_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), main@fno(BANK1[22]), put_rc@str(CODE[69]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), main@fno(BANK1[22]), put_rc@str(CODE[69]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(BANK0[2]), main@fno(BANK1[22]), put_rc@str(CODE[69]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    memset@dest	PTR void  size(2) Largest target is 134
		 -> RxFifo.buff(BANK2[128]), RxFifo(BANK2[134]), 

    memset@s	PTR unsigned char  size(2) Largest target is 134
		 -> RxFifo.buff(BANK2[128]), RxFifo(BANK2[134]), 

    disk_writep@buff	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    disk_readp@buff	PTR unsigned char  size(2) Largest target is 128
		 -> pf_readdir@dir(BANK1[32]), pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), pf_mount@buf(BANK1[36]), 
		 -> get_fat@buf(BANK0[4]), NULL(NULL[0]), Line(BANK3[128]), 

    xatoi@str	PTR PTR unsigned char  size(2) Largest target is 2
		 -> main@ptr(BANK1[2]), 

    xatoi@res	PTR long  size(2) Largest target is 4
		 -> main@p2(BANK1[4]), main@p1(BANK1[4]), 

    put_dump@lp	PTR const unsigned long  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    put_dump@sp	PTR const unsigned short  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    put_dump@buff	PTR const void  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    put_dump@bp	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    sp__memset	PTR void  size(2) Largest target is 134
		 -> RxFifo.buff(BANK2[128]), RxFifo(BANK2[134]), 

    uart_gets@buff	PTR unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    pf_readdir@fno	PTR struct . size(2) Largest target is 22
		 -> main@fno(BANK1[22]), 

    pf_readdir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    pf_readdir@dj	PTR struct . size(2) Largest target is 17
		 -> main@dir(BANK1[16]), 

    pf_readdir@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    pf_opendir@path	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    pf_opendir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    pf_opendir@dj	PTR struct . size(2) Largest target is 17
		 -> main@dir(BANK1[16]), 

    pf_opendir@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    pf_lseek@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    pf_read$900	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), Line(BANK3[128]), 

    pf_read@br	PTR unsigned int  size(2) Largest target is 2
		 -> main@s1(BANK1[2]), 

    pf_read@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    pf_read@buff	PTR void  size(2) Largest target is 128
		 -> NULL(NULL[0]), Line(BANK3[128]), 

    pf_read@rbuff	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), Line(BANK3[128]), 

    pf_open@path	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    pf_open@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    pf_mount@fs	PTR struct . size(2) Largest target is 42
		 -> main@fs(BANK1[42]), 

    check_fs@buf	PTR unsigned char  size(2) Largest target is 36
		 -> pf_mount@buf(BANK1[36]), 

    follow_path@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    follow_path@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    follow_path@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    get_fileinfo@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK1[32]), 

    get_fileinfo@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    get_fileinfo@dj	PTR struct . size(2) Largest target is 17
		 -> main@dir(BANK1[16]), 

    get_fileinfo@fno	PTR struct . size(2) Largest target is 22
		 -> main@fno(BANK1[22]), 

    get_fileinfo@p	PTR unsigned char  size(2) Largest target is 22
		 -> fno.fname(COMRAM[13]), main@fno(BANK1[22]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK0[2]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    create_name@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    create_name@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_read@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_read@dj	PTR struct . size(2) Largest target is 17
		 -> main@dir(BANK1[16]), 

    dir_read@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK1[32]), 

    dir_find@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_find@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    dir_find@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    dir_next@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_next@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    dir_next@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    dir_rewind@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_rewind@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    dir_rewind@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    get_clust@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    get_clust@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    clust2sect@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    FatFs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    get_fat@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    mem_set@dst	PTR void  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    main@ptr	PTR unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    S179$fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    put_rc@p	PTR const unsigned char  size(2) Largest target is 69
		 -> put_rc@str(CODE[69]), 


Critical Paths under _main in COMRAM

    _main->_put_drc
    _xatoi->___lmul
    _pf_opendir->_follow_path
    _pf_open->_follow_path
    _dir_rewind->_clust2sect
    _create_name->_mem_set
    _disk_initialize->_disk_writep
    _disk_writep->_send_cmd
    _send_cmd->_send_cmd2
    _send_cmd2->_xmit_spi
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _atoi->_isspace
    _clust2sect->___lmul

Critical Paths under _isr_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_pf_lseek
    _uart_gets->_printf
    _put_rc->_printf
    _put_dump->_printf
    _put_drc->_printf
    _pf_readdir->_dir_read
    _dir_read->_dir_next
    _pf_read->_get_fat
    _pf_opendir->_follow_path
    _pf_open->_follow_path
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_next->_get_fat
    _pf_mount->_check_fs
    _check_fs->_disk_readp
    _pf_lseek->_get_fat
    _get_fat->_disk_readp
    _disk_readp->_printf
    _printf->_vfprintf

Critical Paths under _isr_high in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_pf_open

Critical Paths under _isr_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               112   112      0  775579
                                            105 BANK0      2     2      0
                                             85 BANK1    104   104      0
                    _disk_initialize
                         _disk_readp
                          _gpio_init
                           _pf_lseek
                           _pf_mount
                            _pf_open
                         _pf_opendir
                            _pf_read
                         _pf_readdir
                             _printf
                            _put_drc
                           _put_dump
                             _put_rc
                           _pwm_Init
                        _pwm_setDuty
                          _pwm_start
                           _pwm_stop
                          _uart_gets
                          _uart_init
                              _xatoi
 ---------------------------------------------------------------------------------
 (1) _xatoi                                               13     9      4    2249
                                             17 COMRAM    13     9      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_gets                                           13     9      4   36580
                                             18 BANK0     13     9      4
                             _memset
                             _printf
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6     947
                                              5 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _pwm_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm_setDuty                                          4     2      2     196
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _pwm_Init                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _put_rc                                               4     4      0   35140
                                             18 BANK0      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _put_dump                                            22    12     10   36380
                                             18 BANK0     22    12     10
                             _printf
 ---------------------------------------------------------------------------------
 (1) _put_drc                                              1     1      0   34976
                                            115 COMRAM     1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _pf_readdir                                          51    47      4  132967
                                             94 BANK0      4     0      4
                                              0 BANK1     47    47      0
                           _dir_next
                           _dir_read
                         _dir_rewind
                       _get_fileinfo
 ---------------------------------------------------------------------------------
 (2) _get_fileinfo                                        36    30      6     965
                                              5 COMRAM    36    30      6
 ---------------------------------------------------------------------------------
 (2) _dir_read                                            11     7      4   85256
                                             83 BANK0     11     7      4
                           _dir_next
                         _disk_readp
 ---------------------------------------------------------------------------------
 (1) _pf_read                                             36    30      6   85913
                                             66 BANK0     36    30      6
                         _clust2sect
                         _disk_readp
                            _get_fat
 ---------------------------------------------------------------------------------
 (1) _pf_opendir                                          51    47      4   95969
                                             98 BANK0      4     0      4
                                              0 BANK1     47    47      0
                         _dir_rewind
                        _follow_path
                          _get_clust
 ---------------------------------------------------------------------------------
 (1) _pf_open                                             87    85      2   93951
                                             98 BANK0      2     0      2
                                              0 BANK1     85    85      0
                        _follow_path
                          _get_clust
 ---------------------------------------------------------------------------------
 (2) _follow_path                                          8     2      6   92693
                                            115 COMRAM     1     1      0
                                             91 BANK0      7     1      6
                        _create_name
                           _dir_find
                         _dir_rewind
                          _get_clust
 ---------------------------------------------------------------------------------
 (2) _get_clust                                           18    14      4     365
                                              5 COMRAM    16    12      4
 ---------------------------------------------------------------------------------
 (3) _dir_find                                             8     4      4   87793
                                             83 BANK0      8     4      4
                           _dir_next
                         _dir_rewind
                         _disk_readp
                            _mem_cmp
 ---------------------------------------------------------------------------------
 (4) _mem_cmp                                             14     8      6     364
                                              5 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (2) _dir_rewind                                          16    14      2    2207
                                             28 COMRAM    16    14      2
                         _clust2sect
 ---------------------------------------------------------------------------------
 (3) _dir_next                                            17    15      2   43789
                                             66 BANK0     17    15      2
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (3) _create_name                                         17    13      4    1234
                                             13 COMRAM    16    12      4
                            _mem_set
 ---------------------------------------------------------------------------------
 (4) _mem_set                                              8     2      6     318
                                              5 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _pf_mount                                            77    75      2   91714
                                             44 BANK0     24    22      2
                                              0 BANK1     53    53      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                         _disk_readp
 ---------------------------------------------------------------------------------
 (2) _disk_initialize                                     12    12      0    5515
                                             29 COMRAM    12    12      0
                        _disk_writep
                          _dly_100us
                           _init_spi
                            _rcv_spi
                           _send_cmd
 ---------------------------------------------------------------------------------
 (3) _init_spi                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _disk_writep                                          9     3      6    3047
                                             20 COMRAM     9     3      6
                          _dly_100us
                            _rcv_spi
                           _send_cmd
                           _xmit_spi
 ---------------------------------------------------------------------------------
 (3) _dly_100us                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_fs                                            10     4      6   41505
                                             34 BANK0     10     4      6
                         _disk_readp
 ---------------------------------------------------------------------------------
 (1) _pf_lseek                                            39    35      4   45064
                                             66 BANK0     39    35      4
                            ___lldiv
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (4) _get_fat                                             32    28      4   41523
                                             34 BANK0     32    28      4
                         _disk_readp
 ---------------------------------------------------------------------------------
 (3) _disk_readp                                          16     6     10   40773
                                             18 BANK0     16     6     10
                             _printf
                            _rcv_spi
                           _send_cmd
 ---------------------------------------------------------------------------------
 (4) _send_cmd                                             7     3      4    1773
                                             13 COMRAM     7     3      4
                            _rcv_spi
                          _send_cmd2
                           _xmit_spi
 ---------------------------------------------------------------------------------
 (5) _send_cmd2                                            7     3      4     477
                                              6 COMRAM     7     3      4
                            _rcv_spi
                           _xmit_spi
 ---------------------------------------------------------------------------------
 (5) _xmit_spi                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _rcv_spi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   34945
                                              6 BANK0     12     2     10
                            _rcv_spi (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   32032
                                            113 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           55    49      6   31466
                                             72 COMRAM    41    35      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7303
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6595
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              5 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              5 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    1675
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2670
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7449
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5003
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2015
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1515
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1815
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     712
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _clust2sect                                          11     7      4    1367
                                             17 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     756
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     721
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _isr_high                                            5     5      0     114
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _disk_initialize
     _disk_writep
       _dly_100us
       _rcv_spi
       _send_cmd
         _rcv_spi
         _send_cmd2
           _rcv_spi
           _xmit_spi
         _xmit_spi
       _xmit_spi
     _dly_100us
     _init_spi
     _rcv_spi
     _send_cmd
   _disk_readp
     _printf
       _rcv_spi (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit
           _stoa
             _fputc
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
     _rcv_spi
     _send_cmd
   _gpio_init
   _pf_lseek
     ___lldiv
     _clust2sect
       ___lmul
     _get_fat
       _disk_readp
   _pf_mount
     ___lldiv
     ___lmul
     _check_fs
       _disk_readp
     _disk_initialize
     _disk_readp
   _pf_open
     _follow_path
       _create_name
         _mem_set
       _dir_find
         _dir_next
           _clust2sect
           _get_fat
         _dir_rewind
           _clust2sect
         _disk_readp
         _mem_cmp
       _dir_rewind
       _get_clust
     _get_clust
   _pf_opendir
     _dir_rewind
     _follow_path
     _get_clust
   _pf_read
     _clust2sect
     _disk_readp
     _get_fat
   _pf_readdir
     _dir_next
     _dir_read
       _dir_next
       _disk_readp
     _dir_rewind
     _get_fileinfo
   _printf
   _put_drc
     _printf
   _put_dump
     _printf
   _put_rc
     _printf
   _pwm_Init
   _pwm_setDuty
   _pwm_start
   _pwm_stop
   _uart_gets
     _memset
     _printf
   _uart_init
   _xatoi
     ___lmul

 _isr_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0      86      12       52.3%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      80      10       50.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      86       8       52.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100     BD      E8       6       90.6%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     6B      73       4       89.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     74      79       1       96.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     360      14        0.0%
DATA                 0      0     360      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jan 18 19:51:27 2022

             get_fat@clst 00A2              create_name@c 001D              create_name@i 001C  
            create_name@p 0016                        l62 5900                        l65 59D0  
                      l91 59AC                        l59 5958                        l68 59CC  
                      l85 53FC                        l88 5970               _pwm_setDuty 58DC  
           pf_mount@bsect 012C       ___wmul@multiplicand 0008             pf_mount@mclst 0128  
           pf_mount@fsize 0130             create_name@dj 000E             pf_mount@tsect 0124  
           create_name@ni 0018             create_name@si 0019                       l120 0258  
                     l105 0104                       l210 5260                       l204 4EF0  
                     l135 03D2                       l216 49C0                       l240 4666  
                     l304 43AE                       l217 4962                       l315 167C  
                     l411 4C74                       l308 48B4                       l332 15C6  
                     l164 06D0                       l229 2EB8                       l421 4B94  
                     l182 580A                       l190 5476                       l327 1512  
                     l407 4C50                       l415 4B92                       l336 40D6  
                     l344 1F0E                       l256 4244                       l520 27A2  
                     l601 4F96                       l418 4B40                       l531 2A24  
                     l700 5544                       l196 3486                       l701 5554  
                     l277 361E                       l189 546E                       l349 1DD0  
                     l517 30C4                       l541 293C                       l630 26CE  
                     l391 1706                       l623 2668                       l535 2914  
                     l289 2CA6                       l481 4798                       l490 599C  
                     l570 59C0                       l723 511A                       l803 3DEA  
                     l716 510A                       l660 3948                       l628 275C  
                     l581 5982                       l573 592E                       l389 1B0C  
                     l493 5614                       l582 5986                       l487 598A  
                     l575 593C                       l567 59B6                       l639 277A  
                     l816 4512                       l576 5940                       l593 537A  
                     l579 5974                       l596 4F32                       l589 535E  
                     l598 4FB4                       l686 3C62                       l689 5926  
                     _GIE 007F97                       _PR2 000FCB                       _abs 5758  
                     _pad 4FB6                       wreg 000FE8              disk_readp@bc 00A0  
            disk_readp@rc 009F         disk_initialize@ty 0026            create_name@cvt 7B8D  
          create_name@sfn 001A                      ?_abs 0018                      l1134 4AB0  
                    l1127 4A90                      l1144 4E22                      l1137 4E02  
                    l1421 5076                      l1416 4FFA                      l1513 245E  
                    l1419 503C                      l1427 1FAE                      l1515 24C0  
                    l1612 587A                      l1532 0FA4                      l1364 3F60  
                    l1429 1FB6                      l1606 56C4                      l1470 37B6  
                    l1454 36A0                      l1550 55AE                      l1447 21EC  
                    l1551 55B6                      l1456 36A8                      l1641 5712  
                    l1465 3766                      l1377 58DA                      l1466 37AE  
                    l1490 2224                      l1555 578E                      l1627 52F6  
                    l1635 5756                      l1475 30FC                      l1660 5672  
                    l1492 222C                      l1645 4D52                      l1485 32C4  
                    l1477 3104                      l1558 5796                      l1655 566A  
                    l1592 57D2                      l5121 3488                      l1586 3AD0  
                    l1666 5842                      l1499 22C2                      l5131 34D4  
                    l5123 349C                      l1589 3AD8                      l5141 351E  
                    l5133 34E4                      l5125 34B8                      l1598 58B2  
                    l5151 3574                      l5143 3530                      l5135 34E6  
                    l5127 34C0                      l5071 51C0                      l7001 3778  
                    l5145 3542                      l5137 34F6                      l5129 34C4  
                    l5081 520C                      l5073 51C0                      l5401 2A68  
                    l7003 378C                      l7011 30D6                      l5171 35CA  
                    l5163 35A0                      l5147 3558                      l5139 350C  
                    l5083 5250                      l5411 2AA0                      l7005 3790  
                    l7021 3144                      l7013 30F0                      l7101 2472  
                    l5165 35A6                      l5149 3564                      l5077 51C0  
                    l5421 2AE0                      l5413 2AA4                      l5405 2A7E  
                    ?_pad 0017                      l7111 395E                      l7031 323C  
                    l7023 31BA                      l7015 312C                      l7007 30C6  
                    l7103 2482                      l5167 35B6                      l5175 35DE  
                    l5079 51FA                      l5431 2AF8                      l5423 2AE4  
                    l5415 2AA6                      l5407 2A90                      l7121 39BC  
                    l7113 3962                      l7033 325A                      l7025 31C0  
                    l7017 3134                      l7009 30D4                      l7105 2498  
                    l5177 361C                      l5169 35C6                      l5441 2B20  
                    l5409 2A94                      l5417 2AB6                      l8001 28BA  
                    l7131 39E8                      l7115 3966                      l7035 3274  
                    l7027 31C6                      l7019 313E                      l7051 2242  
                    l7043 21EE                      l7211 09B4                      l7203 0912  
                    l5435 2B0E                      l5419 2AD4                      l5443 2B30  
                    l5451 2C9A                      l5611 55B8                      l8003 28C2  
                    l7141 3A90                      l7133 3A1C                      l7125 39C2  
                    l7117 3982                      l7109 394A                      l7037 328E  
                    l7029 322A                      l7061 2282                      l7053 224A  
                    l7045 21FC                      l7221 0ADA                      l7205 0924  
                    l7301 52FA                      l5445 2B4C                      l5437 2B1A  
                    l5429 2AE8                      l8101 30B8                      l5541 3EA4  
                    l5533 3E0A                      l5621 560C                      l5613 55BC  
                    l8013 2910                      l8005 28EC                      l7143 3AA2  
                    l7127 39D8                      l7119 39B8                      l7151 4C76  
                    l7039 329C                      l7071 22F6                      l7063 228A  
                    l7055 226A                      l7047 21FE                      l7215 09EC  
                    l7207 0948                      l7311 533A                      l7303 52FC  
                    l8111 0FB0                      l5447 2C16                      l5439 2B1E  
                    l5391 2A32                      l5551 3F04                      l5535 3E16  
                    l5623 560E                      l5615 5606                      l8031 297E  
                    l8015 2928                      l8007 28FC                      l5609 599E  
                    l7145 3AB4                      l7137 3A52                      l7129 39E0  
                    l7161 4CD6                      l7153 4CA0                      l7073 2308  
                    l7081 2368                      l7065 22A6                      l7057 2272  
                    l7049 2218                      l7241 0C32                      l7233 0B8C  
                    l7225 0B12                      l7217 0A22                      l7209 096C  
                    l7321 5364                      l7313 533E                      l7305 5300  
                    l7401 3888                      l8201 1672                      l8121 1000  
                    l8113 0FC6                      l5449 2C58                      l5393 2A54  
                    l5553 3F38                      l5545 3EBE                      l5529 3DEC  
                    l5625 5610                      l5617 5608                      l8041 2A08  
                    l8033 29B4                      l8025 2968                      l8017 2938  
                    l7163 4CF2                      l7091 23FE                      l7083 2378  
                    l7067 22B6                      l7059 227C                      l7251 0D1C  
                    l7243 0C68                      l7235 0BB0                      l7227 0B36  
                    l7219 0A58                      l7331 555E                      l7171 592A  
                    l7323 5372                      l7315 5350                      l7307 5324  
                    l7411 38CC                      l7403 388C                      l8203 167A  
                    l8131 10F0                      l8123 1010                      l8051 2EBA  
                    l5555 3F44                      l5547 3EEA                      l5539 3E4C  
                    l5627 5612                      l5619 560A                      l8019 2950  
                    l8035 29D6                      l6701 5732                      l7165 4D04  
                    l7157 4CAC                      l7093 241C                      l7085 237E  
                    l7077 2342                      l7253 0D40                      l7245 0CC0  
                    l7237 0BFA                      l7229 0B6C                      l7181 0804  
                    l7333 556C                      l7173 5972                      l7325 5378  
                    l7317 5354                      l7309 5328                      l7421 393A  
                    l7413 38E8                      l7405 38A6                      l8141 113A  
                    l8125 104E                      l8133 1112                      l8117 0FCC  
                    l8109 0FA6                      l7501 4946                      l8221 3FCE  
                    l8213 3F84                      l8301 1E04                      l5389 2A26  
                    l8061 2F18                      l8053 2EDC                      l5557 3F4A  
                    l8037 29E6                      l7431 54EC                      l6703 5736  
                    l6711 5706                      l7167 4D2E                      l7159 4CBA  
                    l7095 2436                      l7087 2384                      l7079 2354  
                    l7271 0E7E                      l7255 0D56                      l7263 0DDC  
                    l7191 0882                      l7183 0812                      l7335 5592  
                    l7175 5984                      l7319 535A                      l7351 4F2C  
                    l7343 4EF4                      l7415 3902                      l7407 38B8  
                    l7423 393E                      l8151 1182                      l8135 1124  
                    l8127 1058                      l8119 0FDE                      l7511 49BE  
                    l8215 3F94                      l8207 3F62                      l8311 1E48  
                    l8303 1E1A                      l5399 2A58                      l8071 2F88  
                    l8063 2F36                      l8055 2EE4                      l5583 5944  
                    l5591 59CE                      l5559 3F4E                      l8039 29F6  
                    l7433 54FC                      l6721 591E                      l6801 44F2  
                    l6705 56C6                      l7097 2450                      l7089 23E2  
                    l7281 0F34                      l7273 0EC6                      l7265 0E12  
                    l7257 0D64                      l7249 0CF8                      l7193 0890  
                    l7185 0824                      l7329 5556                      l7337 58B4  
                    l7361 4F60                      l7345 4F02                      l7425 3940  
                    l7417 391C                      l7409 38C6                      l7441 32C6  
                    l7601 3ADE                      l8161 12DE                      l8153 11BE  
                    l8145 1140                      l8129 106A                      l7521 2CE0  
                    l8241 40D4                      l8233 3FF8                      l8225 3FD4  
                    l8217 3F9C                      l8209 3F7E                      l8401 4BB2  
                    l8321 1EC0                      l8313 1E9C                      l8305 1E22  
                    l8081 2FE6                      l8073 2F94                      l8065 2F42  
                    l8057 2EF0                      l5585 5950                      l5593 59CA  
                    l7435 550A                      l6731 3C96                      l6707 56D2  
                    l6811 49F4                      l6715 580C                      l7099 246C  
                    l7283 0F48                      l7267 0E48                      l7259 0DA0  
                    l7195 089E                      l7187 0828                      l7179 07E0  
                    l7339 58BE                      l7371 4F92                      l7363 4F72  
                    l7355 4F34                      l7347 4F04                      l7427 3944  
                    l7419 3920                      l7443 32EA                      l7611 3B16  
                    l7603 3AF0                      l8171 14CE                      l8163 130A  
                    l8155 1244                      l8139 112A                      l4971 57D4  
                    l7531 2D5E                      l7523 2D02                      l7515 2CA8  
                    l7507 497E                      l8235 4022                      l8227 3FE4  
                    l8219 3FBE                      l8411 4C10                      l8403 4BBA  
                    l8331 1F0C                      l8323 1EDA                      l8315 1EAC  
                    l8307 1E34                      l8251 1B42                      l8091 3038  
                    l8083 2FEE                      l8075 2FAA                      l8067 2F50  
                    l8059 2F12                      l5587 5954                      l7437 551A  
                    l6741 3CD8                      l6733 3C9A                      l6725 3C64  
                    l6709 56D6                      l6821 4A76                      l6813 4A08  
                    l6805 49C2                      l7269 0E6E                      l7277 0F02  
                    l7197 08BE                      l7189 084C                      l7293 0F6E  
                    l7373 4F9C                      l7365 4F76                      l7357 4F38  
                    l7349 4F1C                      l7381 37B8                      l7453 33CC  
                    l7445 3314                      l8341 16A0                      l7621 3B60  
                    l7605 3AFC                      l7613 3B1C                      l7701 2598  
                    l8173 14EC                      l8165 1330                      l8157 1272  
                    l4973 57E0                      l7541 2E08                      l7517 2CB0  
                    l7509 49A2                      l4981 540E                      l8237 40B0  
                    l8229 3FF2                      l8413 4C1E                      l8405 4BD0  
                    l8325 1EE2                      l8309 1E40                      l8261 1B68  
                    l8245 1B0E                      l8093 305C                      l8085 300A  
                    l8077 2FBE                      l8069 2F6C                      l5589 58DC  
                    l8501 01F8                      l7439 5524                      l7471 4E38  
                    l6719 5902                      l6751 3D32                      l6743 3CF6  
                    l6735 3CA8                      l6727 3C68                      l6911 1F86  
                    l6903 1F10                      l6823 4A78                      l6815 4A16  
                    l6807 49CE                      l6831 4D7A                      l7295 0F92  
                    l7279 0F26                      l7287 0F54                      l7199 08CC  
                    l7375 4FAA                      l7367 4F88                      l7359 4F5C  
                    l7391 3810                      l7383 37C6                      l8351 1736  
                    l8343 16BA                      l8335 167E                      l7623 3B6E  
                    l7615 3B2E                      l7607 3B0A                      l7711 25D0  
                    l7703 25A8                      l8167 1346                      l8159 12CE  
                    l4975 57EC                      l7543 2E24                      l7527 2D08  
                    l7519 2CCE                      l4983 5416                      l8239 40C4  
                    l8415 4C4C                      l8407 4BF0                      l8327 1EEA  
                    l8271 1C70                      l8263 1BB8                      l8255 1B48  
                    l8247 1B1E                      l8431 4AFE                      l8423 4AB2  
                    l8095 3066                      l8087 3014                      l8079 2FC4  
                    l8511 027A                      l7473 4E7A                      l6753 3D60  
                    l6745 3CFE                      l6761 3D9A                      l6737 3CC8  
                    l6729 3C76                      l6681 5998                      l6921 1FDE  
                    l6913 1F88                      l6905 1F30                      l6825 4A8A  
                    l6817 4A28                      l6809 49EC                      l6841 4DFC  
                    l6833 4D8E                      l7289 0F62                      l7369 4F8C  
                    l7393 3818                      l7385 37DA                      l7449 332A  
                    l8361 18D8                      l8353 174C                      l8337 169A  
                    l7641 3C08                      l7625 3B80                      l7633 3BC0  
                    l7617 3B42                      l7609 3B0E                      l7713 25E2  
                    l7705 25BA                      l8193 1526                      l8185 14F2  
                    l8169 13CC                      l4977 57F0                      l7553 2E58  
                    l7537 2D84                      l7529 2D26                      l7481 48B6  
                    l4985 5430                      l8417 4C62                      l8409 4C00  
                    l8281 1D0E                      l8273 1C80                      l8265 1BE2  
                    l8329 1EFA                      l8257 1B62                      l8249 1B2E  
                    l7801 422E                      l8441 4B6C                      l8433 4B12  
                    l8425 4ACE                      l8089 3030                      l8601 0558  
                    l8521 02CA                      l8513 0284                      l8505 0212  
                    l6763 3DAA                      l6755 3D80                      l6747 3D12  
                    l6739 3CCC                      l6771 43B4                      l6691 52AE  
                    l6683 5262                      l6851 4FF2                      l6843 4FB6  
                    l6931 207E                      l6923 1FE4                      l6915 1FA2  
                    l6907 1F58                      l6819 4A56                      l6835 4D9C  
                    l6827 4D54                      l7395 3828                      l7387 37E0  
                    l7459 345C                      l8371 198E                      l8363 1914  
                    l8355 1788                      l8347 16C0                      l7563 59B8  
                    l7651 3C44                      l7643 3C14                      l7635 3BD2  
                    l7627 3BA6                      l7619 3B4A                      l7731 2676  
                    l7715 2608                      l7707 25C6                      l8187 150E  
                    l7555 2E74                      l7547 2E2A                      l7539 2DD8  
                    l7491 492A                      l7483 48BE                      l4979 53FE  
                    l7811 4250                      l8419 4C72                      l8291 1D70  
                    l8283 1D1E                      l8275 1CA2                      l8267 1BEE  
                    l7803 4242                      l8443 4B7C                      l8435 4B2A  
                    l8427 4AD6                      l8099 3082                      l8611 05EA  
                    l8603 0572                      l8531 0304                      l8523 02DC  
                    l8515 0294                      l8507 024C                      l8451 0018  
                    l7901 50FA                      l7477 4E8E                      l7469 4E24  
                    l6765 3DCA                      l6757 3D82                      l6749 3D20  
                    l6781 4414                      l6773 43C2                      l6693 52E4  
                    l6685 5274                      l6861 505E                      l6853 5006  
                    l6845 4FC4                      l6941 2126                      l6933 2084  
                    l6925 1FEC                      l6917 1FBE                      l6909 1F78  
                    l6837 4DCA                      l6829 4D72                      l7397 3840  
                    l7389 3806                      l8381 19FA                      l8365 1938  
                    l8357 179E                      l8349 16EA                      l7653 3C56  
                    l7645 3C18                      l7637 3BD8                      l7629 3BB2  
                    l7741 26C6                      l7733 2682                      l7725 2644  
                    l7717 261A                      l7709 25CA                      l8197 1532  
                    l7557 2EA6                      l7485 48CE                      l7581 45D2  
                    l7573 453C                      l7565 4514                      l7821 42B8  
                    l7813 426A                      l8293 1D88                      l8277 1CC2  
                    l8269 1C28                      l8445 4B8E                      l8437 4B3C  
                    l8429 4AEC                      l8621 0666                      l8613 061C  
                    l8605 0598                      l8541 0360                      l8533 030C  
                    l8525 02E8                      l8517 029A                      l8509 026A  
                    l8461 0054                      l8453 0022                      l7903 5104  
                    l6759 3D94                      l6791 448A                      l6783 4432  
                    l6775 43E2                      l6679 598A                      l6687 5286  
                    l6855 501A                      l6847 4FD8                      l6951 2188  
                    l6943 2140                      l6935 208A                      l6927 1FF6  
                    l6919 1FD0                      l6839 4DEA                      l7399 3852  
                    l8383 1A16                      l8375 1994                      l8367 1954  
                    l8359 1828                      l7647 3C1E                      l7655 3C5A  
                    l7639 3BF2                      l7663 59AE                      l7751 271C  
                    l7743 26DA                      l7735 268A                      l7727 2656  
                    l7719 2640                      l7671 24FC                      l7559 2EB6  
                    l7495 4930                      l7487 48EA                      l7591 4642  
                    l7583 45E2                      l7575 45B2                      l7567 4524  
                    l7831 4304                      l7823 42C8                      l7815 4284  
                    l7807 4246                      l8287 1D24                      l8279 1CF2  
                    l8439 4B50                      l7911 53B4                      l8631 06B2  
                    l8623 0676                      l8615 062C                      l8607 05AA  
                    l8551 03AC                      l8543 0372                      l8535 032E  
                    l8527 02F4                      l8519 02B4                      l8471 009A  
                    l8463 006A                      l8455 0026                      l6793 44AA  
                    l6785 443A                      l6777 43E6                      l6769 43B0  
                    l6865 5758                      l6689 5290                      l6697 5714  
                    l6857 501E                      l6849 4FE6                      l6953 218E  
                    l6961 21C4                      l6945 215A                      l6929 1FFC  
                    l6937 20EE                      l6873 5798                      l6881 564C  
                    l8393 1A66                      l8385 1A3A                      l8377 19CC  
                    l8369 197E                      l7657 3C5C                      l7649 3C32  
                    l7761 2762                      l7753 272E                      l7745 26DE  
                    l7729 2658                      l7737 2692                      l7681 2510  
                    l7673 2500                      l7665 24C2                      l7489 4900  
                    l7593 4652                      l7585 45EA                      l7569 4534  
                    l7841 435C                      l7833 431C                      l7825 42D8  
                    l7817 428A                      l7809 424A                      l8289 1D40  
                    l7913 53C6                      l7905 5380                      l7921 4672  
                    l8641 071E                      l8633 06BC                      l8625 0680  
                    l8617 0632                      l8609 05D8                      l8553 03B2  
                    l8545 037A                      l8561 03F8                      l8537 033E  
                    l8529 0300                      l8481 013E                      l8473 00AA  
                    l8465 0078                      l8457 0034                      l8449 0012  
                    l6891 5674                      l6795 44BC                      l6787 444E  
                    l6779 43F4                      l6867 5772                      l6699 5720  
                    l6859 504A                      l6955 21A0                      l6939 2108  
                    l6947 2168                      l6971 364C                      l6883 565E  
                    l8387 1A52                      l8379 19DC                      l8395 1B0A  
                    l7851 479A                      l7659 3C60                      l7763 2766  
                    l7755 2754                      l7747 26E4                      l7739 26BA  
                    l7683 2520                      l7675 2502                      l7667 24D2  
                    l7587 4604                      l7579 45C6                      l7843 4376  
                    l7827 42F0                      l7819 42A0                      l8299 1D9C  
                    l7771 4158                      l7915 53E2                      l7907 5392  
                    l7931 46B6                      l7923 4688                      l8643 0728  
                    l8627 0688                      l8619 064C                      l8571 0460  
                    l8563 0400                      l8547 0386                      l8555 03BA  
                    l8539 0358                      l8491 01AA                      l8483 014E  
                    l8475 00B4                      l8467 0086                      l8651 07A4  
                    l8459 0046                      l6893 5678                      l6789 445C  
                    l6797 44C2                      l6957 21AC                      l6949 217A  
                    l6973 3654                      l6965 3620                      l6869 5844  
                    l6877 5616                      l7853 47D8                      l7749 26F6  
                    l7757 275C                      l7685 2524                      l7677 250A  
                    l7669 24E0                      l7845 437E                      l7837 4330  
                    l7781 4190                      l7917 595C                      l7909 53B2  
                    l7933 46CA                      l7941 46F6                      l8637 06DE  
                    l8629 06A2                      l8581 049E                      l8573 046C  
                    l8565 040C                      l8557 03E0                      l8549 03A0  
                    l8493 01B4                      l8485 0158                      l8477 00DA  
                    l8469 0092                      l6887 587C                      l6895 568C  
                    l6799 44D2                      l6959 21B4                      l6991 370C  
                    l6983 36CA                      l6975 3668                      l6967 3632  
                    l7871 482E                      l7599 3ADA                      l7759 2760  
                    l7695 2574                      l7687 254A                      l7679 250E  
                    l7847 43AC                      l8399 4B96                      l7791 41D8  
                    l7783 41A2                      l7775 416C                      l7767 40D8  
                    l7943 470C                      l7935 46DC                      l7951 475A  
                    l7927 469E                      l7919 4668                      l8647 0742  
                    l8639 06F8                      l8591 04FE                      l8583 04AC  
                    l8575 0482                      l8567 0436                      l8559 03E6  
                    l8495 01DE                      l8487 0170                      l8479 010C  
                    l6897 56BA                      l6993 3740                      l6985 36DE  
                    l6977 3670                      l6969 363A                      l7873 486A  
                    l7857 47DE                      l7697 2586                      l7689 2570  
                    l7793 41E8                      l7785 41B4                      l7777 4178  
                    l7769 40E2                      l7945 4742                      l7937 46EC  
                    l8593 0520                      l8585 04D6                      l8577 048E  
                    l8569 0446                      l8497 01E8                      l8489 0198  
                    l7891 50B2                      l7883 5078                      l6899 56BE  
                    l6995 3744                      l6987 36E2                      l6979 367E  
                    l7867 4828                      l7859 4822                      l7699 2588  
                    l7787 41C6                      l7779 4188                      l7955 476A  
                    l7947 4752                      l7971 27E2                      l7963 277C  
                    l8595 0530                      l8587 04E0                      l8579 0496  
                    l8499 01F0                      l7893 50C0                      l7885 5088  
                    l6997 3748                      l6989 3700                      l7797 41FC  
                    l7957 4786                      l7981 2844                      l7973 27E6  
                    l7965 2780                      l8597 053A                      l8589 04E8  
                    l7895 50CA                      l7887 509E                      l7879 48B2  
                    l7799 421E                      l7959 4790                      l7983 286A  
                    l7975 2808                      l7967 2794                      l8951 07C6  
                    l8599 0552                      l7897 50E8                      l7889 50A6  
                    l8953 28D6                      l7993 288E                      l7977 281A  
                    l7969 27D0                      l7899 50F8                      l8955 309A  
                    l7995 289E                      l7987 2872                      l7979 2840  
                    l8947 0236                      l8957 3478                      l7997 28AE  
                    l7989 2882                      l8949 0766                      l8959 3A06  
                    STR_1 7D74                      STR_2 7D8E                      STR_3 7CA1  
                    STR_4 7DBD                      STR_5 7D1F                      STR_6 7CC0  
                    STR_7 7CF8                      STR_8 7D48                      STR_9 7C52  
                    _LATC 000F8B                      _PEIE 007F96                      u5510 580A  
                    u6310 2A54                      u5511 5806                      u6311 2A50  
                    u8000 583E                      u5520 5430                      u6320 2A7A  
                    u5521 542C                      u6321 2A76                      u8010 3C76  
                    u5530 546E                      u6330 2A90                      u8011 3C72  
                    u5531 546A                      u6331 2A8C                      _RCIE 007CED  
                    u8020 3CA8                      u8100 4432                      u6340 2AB6  
                    u6500 3E48                      _RCIF 007CF5                      u8021 3CA4  
                    u8101 442E                      u6341 2AB2                      u6501 3E44  
                    u8110 445C                      u6350 2AD4                      u6510 3EBA  
                    u8031 3CD2                      u8111 4458                      u6351 2AD0  
                    u6511 3EB6                      u8040 3CF6                      u8120 448A  
                    u8200 4DCA                      u9000 0804                      u5800 3542  
                    u6360 2B0A                      u6520 3F00                      u8041 3CF2  
                    u8121 4486                      u8201 4DC6                      u9001 0800  
                    u5801 353E                      u6361 2B06                      u6521 3EFC  
                    u8050 3D20                      u8130 44D2                      u8210 4FC4  
                    u9010 084C                      u5810 3554                      u6370 2B30  
                    u6530 3F60                      u8051 3D1C                      u8131 44CE  
                    u8211 4FC0                      u9011 0848                      u5811 3550  
                    u6371 2B2C                      u6531 3F5C                      u8060 3D60  
                    u8220 4FE6                      u8300 5646                      u9100 0B36  
                    u9020 0890                      u5820 3574                      u8061 3D5C  
                    u8221 4FE2                      u8141 49C8                      u8301 5640  
                    u9101 0B32                      u9021 088C                      u5821 3570  
                    u8070 3DAA                      u8230 503C                      u8150 49EC  
                    u8310 5648                      u9110 0BB0                      u9030 090C  
                    u5830 35B6                      _RCIP 007CFD                      u8071 3DA6  
                    u8231 5038                      u8151 49E8                      u9111 0BAC  
                    u9031 0906                      u5831 35B2                      u8080 43C2  
                    u8240 504A                      u8400 1F86                      u8160 4A16  
                    u8320 565E                      u9120 0C68                      u9040 090E  
                    u9200 5372                      u5840 35C6                      u5760 34F6  
                    u8081 43BE                      u8241 5046                      u8401 1F82  
                    u8161 4A12                      u8321 565A                      u9121 0C64  
                    u9201 536E                      u5841 35C2                      u5761 34F2  
                    u5665 51FC                      u8330 58AC                      u8090 43F4  
                    u8250 5772                      u8410 1FA2                      u8170 4A56  
                    u9130 0D1C                      u9050 0924                      u9210 55AE  
                    u5850 3618                      u5770 3508                      u6490 3E06  
                    u8331 58A6                      u8091 43F0                      u8251 576E  
                    u8411 1F9E                      u8171 4A52                      u9131 0D18  
                    u9051 0920                      u9211 55AA                      u5851 3612  
                    u5771 3504                      u6491 3E02                      u8340 58AE  
                    u8500 2188                      u8420 1FD0                      u8180 4D72  
                    u8260 5874                      u9140 0D40                      u9060 0948  
                    u9220 4F02                      u9300 3828                      u5860 361A  
                    u5780 351E                      u8501 2184                      u8421 1FCC  
                    u8181 4D6E                      u8261 586E                      u9141 0D3C  
                    u9061 0944                      u9221 4EFE                      u9301 3824  
                    u5781 351A                      u8350 568C                      u8510 21A0  
                    u8430 1FDE                      u8190 4D9C                      u8270 5876  
                    u9150 0E12                      u9070 096C                      u9230 4F2C  
                    u9310 3840                      u5790 3530                      u8351 5688  
                    u8511 219C                      u8431 1FDA                      u8191 4D98  
                    u9151 0E0E                      u9071 0968                      u9231 4F28  
                    u9311 383C                      u5791 352C             _put_dump$1131 00A2  
                    u9400 5544                      u8360 56BA                      u8440 2108  
                    u8600 3774                      u8280 57CC                      u9160 0E48  
                    u9080 0A22                      u9240 4F72                      u9320 3852  
                    u9401 5540                      u8361 56B6                      u8441 2104  
                    u8601 3770                      u8521 362A                      u8281 57C6  
                    u9161 0E44                      u9081 0A1E                      u9241 4F6E  
                    u9321 384E                      u8450 2126                      u8370 1F40  
                    u8610 37AE                      u8530 364C                      u8290 57CE  
                    u9170 0F26                      u9090 0A58                      u9250 4F88  
                    u9330 3888                      u9410 32EA                      u8451 2122  
                    u8371 1F3A                      u8611 37AA                      u8531 3648  
                    u9171 0F22                      u9091 0A54                      u9251 4F84  
                    u9331 3884                      u9411 32E6                      u8460 2140  
                    u8380 1F42                      u8540 367E                      u8620 30D4  
                    u8700 2218                      u9180 533A                      u9260 4FAA  
                    u9340 38A6                      u9420 3314                      u9500 2D02  
                    u8461 213C                      u8541 367A                      u8621 30D0  
                    u8701 2214                      u9181 5336                      u9261 4FA6  
                    u9341 38A2                      u9421 3310                      u9501 2CFE  
                    u7910 5998                      u8470 215A                      u8390 1F58  
                    u8550 369C                      u8630 30F0                      u8710 2242  
                    u9190 5350                      u9350 38B8                      u9270 37C6  
                    u9430 336E                      u9510 2D26              get_clust@dir 0006  
                    u7911 5994                      u8471 2156                      u8391 1F54  
                    u8551 3698                      u8631 30EC                      u8711 223E  
                    u9191 534C                      u9351 38B4                      u9271 37C2  
                    u9511 2D22                      u7920 5274                      u8480 2168  
                    u8560 36C6                      u8640 323C                      u8800 23FE  
                    u8720 22A6                      u9360 38E4                      u9440 33C8  
                    u9520 2D5E                      u9600 45AC                      u7921 5270  
                    u8481 2164                      u8561 36C2                      u8641 3238  
                    u8801 23FA                      u8721 22A2                      u9361 38E0  
                    u9441 33C4                      u9521 2D5A                      u9601 45A6  
                    u9450 4E7A                      u7930 5286                      u8490 217A  
                    u8570 3700                      u8650 325A                      u8810 241C  
                    u8730 22F0                      u9370 391C                      u9290 3806  
                    u9530 2D80                      u9610 45AE                      u9451 4E76  
                    u7931 5282                      u8491 2176                      u8571 36FC  
                    u8651 3256                      u8811 2418                      u8731 22EA  
                    u9371 3918                      u9291 3802                      u9435 3364  
                    u9531 2D7C                      u8900 3A8C                      u7940 52AE  
                    u8580 372C                      u8660 3274                      u8820 2436  
                    u8740 22F2                      u9380 393A                      u9700 3B60  
                    u9460 4900                      u9620 45C2                      u7941 52AA  
                    u8661 3270                      u8821 2432                      u9381 3936  
                    u9285 37CA                      u9701 3B5C                      u9461 48FC  
                    u9621 45BE                      u9390 550A                      u8910 3AA2  
                    u7950 52E4                      u8590 3766                      u8670 328E  
                    u8830 2450                      u8750 2308                      u9710 3B6E  
                    u9550 2DD8                      u9470 492A                      u9630 45E2  
                    u9391 5506                      u8911 3A9E                      u7951 52E0  
                    u8591 3762                      u8671 328A                      u8831 244C  
                    u8751 2304                      u9711 3B6A                      u9551 2DD4  
                    u9471 4926                      u9631 45DE                      u8920 3AB4  
                    u7960 5756                      u8680 329C                      u8840 245E  
                    u8760 233C                      u9800 24E0                      u9560 2E24  
                    u9480 4946                      u9640 4604                      u8921 3AB0  
                    u7961 5752                      u8681 3298                      u8841 245A  
                    u8761 2336                      u9801 24DC                      u9561 2E20  
                    u9545 2D90                      u9481 4942                      u9641 4600  
                    u7970 56F6                      u8930 4CA0                      u8850 246C  
                    u8770 233E                      u8690 21FC                      u9730 3BA6  
                    u9810 2520                      u9570 2E54                      u9490 2CE0  
                    u9650 463E                      u8587 3722                      u8931 4C9C  
                    u8851 2468                      u8691 21F8                      u9731 3BA2  
                    u9811 251C                      u9571 2E50                      u9491 2CDC  
                    u9651 463A                      u8860 3982                      u7980 5706  
                    u8940 4CD6                      u8780 2354                      u9740 3BF2  
                    u9900 2640                      u9820 254A                      u9660 4662  
                    u9580 4534                      u8861 397E                      u7981 5702  
                    u8941 4CD2                      u8781 2350                      u9741 3BEE  
                    u9725 3B70                      u9901 263C                      u9821 2546  
                    u9661 465E                      u9581 4530                      u8870 39B8  
                    u8950 4CF2                      u7990 583C                      u8790 23BC  
                    u9750 3C08                      u9670 3AF0                      u9910 2668  
                    u9830 2570                      u8871 39B4                      u8951 4CEE  
                    u7991 5836                      u9751 3C04                      u9671 3AEC  
                    u9911 2664                      u9831 256C                      u8880 39D4  
                    u8960 4D04                      u9760 3C32                      u9680 3B2E  
                    u9920 2676                      u9840 2598            ??_get_fileinfo 000C  
                    u8881 39D0                      u7977 56EC                      u8961 4D00  
                    u9761 3C2E                      u9681 3B2A                      u9921 2672  
                    u9841 2594                      u8890 3A8A                      u8970 4D2E  
                    u9770 3C44                      u9690 3B42                      u9930 26BA  
                    u9850 25A8                      u8891 3A84                      u8971 4D2A  
                    u8795 23AA                      u9771 3C40                      u9691 3B3E  
                    u9931 26B6                      u9851 25A4                      u9595 457A  
                    u8980 593C                      u9780 3C56                      u9940 26F6  
                    u9860 25BA                      u8981 5938                      u9781 3C52  
                    u9941 26F2                      u9861 25B6                      u8990 5982  
                    u9950 271C                      u9870 25E2                      u9790 24D2  
                    u8991 597E                      u9951 2718                      u9871 25DE  
                    u9791 24CE                      u9960 272E                      u9880 2608  
                    u9961 272A                      u9881 2604                      u9970 2754  
                    u9890 261A                      u9971 2750                      u9891 2616  
                    u9980 2778                      u9981 2772                      u9990 277A  
                    _TXIE 007CEC                      _TXIF 007CF4                      _TXIP 007CFC  
                    _Line 0300                      abs@a 0018                      _dbuf 01C1  
                    _atoi 394A                      _main 0012                      _dtoa 1F10  
                    _prec 0075                      _nout 00EB                      pad@i 001E  
                    pad@p 001B                      fsr1h 000FE2                      fsr2h 000FDA  
                    indf1 000FE7                      indf2 000FDF                      fsr1l 000FE1  
                    pad@w 0020                      fsr2l 000FD9                      _stoa 3620  
                    btemp 007A                      _utoa 30C6                      _xtoa 21EE  
                    prodh 000FF4                      prodl 000FF3                      start 000E  
           disk_readp@res 009E        disk_initialize@cmd 0025              ?_follow_path 00DB  
      disk_initialize@ocr 001F              ___param_bank 000000        disk_initialize@tmr 0027  
         create_name@path 0010                     ??_abs 001A             get_fileinfo@c 0028  
           get_fileinfo@i 0029                     ??_pad 001D             get_fileinfo@p 0026  
          pwm_Init@period 0006           __end_of___aodiv 3DEC                     ?_atoi 000D  
                   ?_main 0001                     ?_dtoa 0022           __end_of___aomod 4514  
                   STR_10 7D56                     STR_11 7C7A                     STR_12 7D56  
                   STR_20 7D66                     STR_13 7D56                     STR_21 7DB8  
                   STR_30 7D1F                     STR_14 7CDE                     STR_15 7D56  
                   STR_31 7DB8                     STR_32 7DAC                     STR_24 7D58  
                   STR_16 7D0D                     STR_41 7DB2                     STR_25 7D9D  
                   STR_17 7D22                     STR_34 7DAC                     STR_26 7DBB  
                   STR_50 7DA9                     STR_18 7D37                     STR_27 7DB8  
                   STR_43 7DB2                     STR_19 7D82                     STR_52 7DA9  
                   STR_36 7DAF                     STR_28 7DA3                     STR_29 7D96  
                   STR_38 7DAF                     STR_46 7DB5                     STR_48 7DB5  
                   ?_stoa 0010                     u10010 4152           __end_of___lldiv 511C  
                   u10011 414C                     u10100 422E                     u10020 4154  
                   u10101 422A                     u10005 4120                     u10110 426A  
                   u10030 4168                     u10111 4266                     u10031 4164  
                   ?_utoa 0022                     u10200 486A                     u10120 4284  
                   u11000 4C62                     u10040 4188                     u10201 4866  
                   u10121 4280                     u11001 4C5E                     u10041 4184  
                   u10210 48AE                     u10130 42B8                     u10050 41B4  
                   u11010 4ACE                     u10211 48AA                     u10131 42B4  
                   u10051 41B0                     u11011 4ACA                     u10220 509E  
                   u10140 4300                     u10060 41C6                     u11020 4AFE  
                   u10300 46CA                     u11100 0100                     u10221 509A  
                   u10141 42FC                     u10061 41C2                     u11021 4AFA  
                   u10301 46C6                     u11101 00FC                     u10230 50C0  
                   u10150 432C                     u10070 41D4                     u11030 4B3C  
                   u10310 46DC                     u11110 014E                     u10231 50BC  
                   u10151 4328                     u10071 41D0                     u11031 4B38  
                   u10311 46D8                     u11111 014A                     u10240 50E8  
                   u10160 4358                     u10080 41F8                     u11040 4B50  
                   u10320 470C                     u10400 28FC                     u11200 03E0  
                   u11120 0198                     u10241 50E4                     u10161 4354  
                   u10081 41F4                     u11041 4B4C                     u10321 4708  
                   u10401 28F8                     u11201 03DC                     u11121 0194  
                   u10170 4376                     u10090 421E                     u11050 4B8E  
                   u10250 53B2                     u10330 4742                     u10410 290C  
                   u11210 03F8                     u11130 020E                     u10171 4372  
                   u10091 421A                     u11051 4B8A                     u10251 53AE  
                   u10331 473E                     u10411 2908                     u11211 03F4  
                   u11131 020A                     u10180 47D8                     u10500 2F88  
                   u10260 53C6                     u10420 2938                     u10340 27D0  
                   u11300 064C                     u11220 0446                     u11140 027A  
                   u11060 0044                     u10181 47D4                     u10501 2F84  
                   u10261 53C2                     u10421 2934                     u10341 27CC  
                   u11301 0648                     u11221 0442                     u11141 0276  
                   u11061 003E                     u10190 4822                     u10510 2FE2  
                   u10270 53E2                     u10430 2950                     u10350 27E2  
                   u11310 0676                     u11230 0482                     u11150 02B4  
                   u10191 481E                     u10511 2FDE                     u10271 53DE  
                   u10431 294C                     u10351 27DE                     u11311 0672  
                   u11231 047E                     u11151 02B0                     u10600 117E  
                   u10520 302C                     u10280 469A                     u10440 2964  
                   u10360 281A                     u11320 06B2                     u11240 04FA  
                   u11160 02DC                     u11080 00AA                     u10601 117A  
                   u10521 3028                     u10281 4696                     u10441 2960  
                   u10361 2816                     u11321 06AE                     u11241 04F6  
                   u11161 02D8                     u11081 00A6                     u10610 11BE  
                   u10530 307E                     u10290 46B2                     u10450 297A  
                   u10370 2882                     u11330 06CC                     u11250 0530  
                   u11170 033E                     u11090 00DA           __end_of___lodiv 4AB2  
                   u10611 11BA                     u10531 307A                     u10291 46AE  
                   u10451 2976                     u10371 287E                     u11331 06C8  
                   u11251 052C                     u11171 033A                     u11091 00D6  
                   u11075 0046                     u10620 1346                     u10540 0FC6  
                   u10700 3FF2                     u10460 29E6                     u10380 289E  
                   u11340 06DE                     u11260 054E                     u11180 0372  
                   u10621 1342                     u10541 0FC2                     u10701 3FEE  
                   u10461 29E2                     u10381 289A                     u11341 06DA  
                   u11261 054A                     u11181 036E                     u10550 1010  
                   u10710 1B42                     u10470 29F6                     u10390 28AE  
                   u11270 0572                     u11190 03D2                     u10551 100C  
                   u10711 1B3E                     u10471 29F2                     u10391 28AA  
                   u11271 056E                     u11191 03CE                     ?_xtoa 0022  
                   u10640 150E                     u10560 104E                     u10800 1E1A  
                   u10720 1B62                     u10480 2F36                     u11280 0598  
                   u10641 150A                     u10561 104A                     u10801 1E16  
                   u10721 1B5E                     u10481 2F32                     u11281 0594  
                   u10650 1522                     u10570 106A                     u10810 1E34  
                   u10730 1BE2                     u10490 2F6C                     u11290 05EA  
                   u10651 151E                     u10635 13E6                     u10571 1066  
                   u10811 1E30                     u10731 1BDE                     u10491 2F68  
                   u11291 05E6                     u10900 1828                     u10580 1124  
                   u10820 1EAC                     u10740 1C28                     u10901 1824  
                   u10581 1120                     u10821 1EA8                     u10741 1C24  
                   u10910 1954                     u10590 113A                     u10670 3F7E  
                   u10830 1F0C                     u10750 1C54                     u10911 1950  
                   u10591 1136                     u10671 3F7A                     u10831 1F08  
                   u10920 197E                     u10840 169A                     u10680 3FCE  
                   u10760 1C80                     _T2CON 000FCA                     u10921 197A  
                   u10841 1696                     u10665 15FA                     u10681 3FCA  
                   u10761 1C7C                     u10930 19FA                     u10850 16BA  
                   u10690 3FE4                     u10770 1CA2                     u10931 19F6  
                   u10851 16B6                     u10691 3FE0                     u10771 1C9E  
                   u10755 1C4A                     u11547 03B4                     u10940 1A52  
                   u10860 16EA                     u10780 1D0E                     u10941 1A4E  
                   u10861 16E6                     u11557 59BA                     u10781 1D0A  
                   u10950 1AB8                     u10870 174C                     u10790 1D88  
                   u10871 1748                     u10791 1D84                     u10960 4BB2  
                   u10961 4BAE                     u10890 179E                     u10970 4C00  
                   u10955 1AAE                     u10891 179A                     u10971 4BFC  
                   u10980 4C10                     u10885 1768                     u10981 4C0C  
                   u10990 4C1E                     u10991 4C1A           __end_of___lomod 4E24  
                   i2l468 51B4                     _RCREG 000FAE                     _RCSTA 000FAB  
            vfpfcnvrt@fmt 004B             get_clust@clst 0012              vfpfcnvrt@llu 006A  
                   _SPBRG 000FAF                     _TRISC 000F94                     _SSPIF 007CF3  
                   _TXREG 000FAD                     _TXSTA 000FAC                     _FatFs 00F1  
  __end_ofcreate_name@cvt 7C0D       ___lmul@multiplicand 000A           __end_of_get_fat 3488  
                   _TxRun 01BD                     _flags 0077           __end_of_mem_cmp 5478  
         __end_of_mem_set 580C                     _fputc 5262           __end_of_pf_read 1F10  
         __end_of_isalpha 57D4                     _fputs 5714           __end_of_isdigit 58B4  
         __end_of_pf_open 40D8                     atoi@n 001A                     pad@fp 0017  
                   atoi@s 000D                     _width 00ED                     _xatoi 277C  
                   _putch 5988                     dtoa@d 0024                     dtoa@i 0044  
                   dtoa@n 003C                     dtoa@p 0036                     dtoa@s 003A  
                   dtoa@w 0038           __end_of_islower 5844           __end_of_isspace 56C6  
            main@num_temp 0156           __end_of_rcv_spi 5988           __end_of_isupper 587C  
                   tablat 000FF5                     plusw1 000FE3                     plusw2 000FDB  
                   stoa@i 001C                     stoa@l 0024                     stoa@p 0022  
                   stoa@s 0012                     stoa@w 001E           __end_of_put_drc 5972  
                   ttemp5 007B                     ttemp6 007E                     ttemp7 0082  
                   utoa@d 0024                     utoa@i 0040                     utoa@n 0038  
                   utoa@p 0034                     utoa@w 0036                     status 000FD8  
                   wtemp8 007B                     xtoa@c 0047                     xtoa@d 0024  
                   xtoa@i 0045                     xtoa@n 003D                     xtoa@p 0039  
                   xtoa@w 003B                     xtoa@x 002C           __end_of_strncmp 4D54  
         __end_of_toupper 5674          ___lodiv@dividend 0006            disk_readp@buff 0092  
           disk_writep@bc 001C             disk_writep@sc 0017              _toupper$2050 0012  
           disk_writep@wc 00EF           __initialization 5478              __end_of_atoi 3ADA  
            __end_of_main 07E0              __end_of_dtoa 21EE              clust2sect@fs 001B  
            __end_of_stoa 37B8              __end_of_utoa 32C6              __end_of_xtoa 24C2  
                  ??_atoi 000F            get_fileinfo@dj 0006                    ??_main 00E9  
                  ??_dtoa 002C                    ??_stoa 0014                    ??_utoa 002C  
                  ??_xtoa 002D             __activetblptr 000002          ___lodiv@quotient 0016  
                  ?_fputc 0007                    ?_fputs 0010                    _CCPR1L 000FBE  
                  ?_xatoi 0012                    ?_putch 0001                    _INT0IF 007F91  
                  i2l6481 5142                    i2l6491 5194                    i2l6483 5154  
                  i2l6493 5198                    i2l6485 5170                    i2l6477 5126  
                  i2l6487 517C                    i2l6495 51A2                    i2l6479 5134  
                  i2l6489 5184                    _TMR2ON 007E52                    _SSPBUF 000FC9  
        __end_of_check_fs 48B6      __size_of_create_name 0198  __size_of_disk_initialize 02BA  
        __end_of_dir_find 4668                    _RxFifo 0200          __end_of_dir_read 4246  
        __end_of_dir_next 2EBA                    _TxFifo 0400              put_dump@addr 0094  
            vfprintf@cfmt 0072              put_dump@buff 0092                    ___lmul 54EC  
               ??___aodiv 0016                 ??___aomod 0016                    ___wmul 5902  
    __size_of_disk_writep 018A                 ??___lldiv 000E                 ??___lodiv 0016  
               ??___lomod 0016                    _memset 3DEC          __end_of_init_spi 59B8  
                  clear_0 549E                    clear_1 54AA                    clear_2 54B6  
                  clear_3 54C2                    clear_4 54CE          __end_of_pf_lseek 1B0E  
    pwm_setDuty@dutycycle 0006          __end_of_pf_mount 167E      __end_of_get_fileinfo 2CA8  
                  isa$std 000001                    _printf 58B4                    pad@buf 0019  
             pf_read@buff 00C2               pf_read@clst 00DD          __end_of_isr_high 51C0  
                  main@p1 0162                    main@p2 015C                    _put_rc 537C  
                  main@s1 018E                    main@s2 0166                    main@s3 0160  
             pf_read@sect 00D5               pf_read@rcnt 00E2                 ??_get_fat 00A6  
                  main@fs 0193                    dtoa@fp 0022                    _strlen 56C6  
        __end_of_send_cmd 4FB6                 ??_mem_cmp 000C                    fputc@c 0007  
               ??_mem_set 000C                    fputs@c 0014                    fputs@i 0015  
               ??_pf_read 00C8                    fputs@s 0010                 ??_isalpha 0008  
               ??_isdigit 0008                 ??_pf_open 0100                 ??_islower 0008  
            __mediumconst 7B8C                 ??_isspace 0008          __end_of_pwm_Init 595A  
               ??_rcv_spi 0006                    tblptrh 000FF7                 ??_isupper 0008  
                  tblptrl 000FF6                    tblptru 000FF8               pf_lseek@bcs 00DF  
             pf_lseek@ofs 00C2                    xatoi@c 001E                    stoa@cp 0020  
                  xatoi@r 0019                    xatoi@s 0018                    stoa@fp 0010  
        __end_of_vfprintf 55B8          __end_of_put_dump 30C6          __end_of_pwm_stop 59CE  
               ??_put_drc 0074                    utoa@fp 0022               pf_open@path 00E2  
                  xtoa@fp 0022                 ??_strncmp 000C                 ??_toupper 000E  
        __end_of_xmit_spi 5942                __accesstop 0080   __end_of__initialization 54DE  
             pf_mount@buf 0100               pf_mount@fmt 0134           disk_readp@count 009A  
           ___rparam_used 000001            disk_writep@res 001B            __pcstackCOMRAM 0001  
            __pidataBANK1 59C2             __end_of_fputc 52F8      __size_of_follow_path 016A  
           __end_of_fputs 5758              ?_pwm_setDuty 0006             __end_of_xatoi 2A26  
           __end_of_putch 599E        __size_of_dly_100us 000A        __size_of_get_clust 00A2  
         get_fileinfo@dir 0008           get_fileinfo@fno 000A                   ??_fputc 000B  
                 ??_fputs 0014                   ??_xatoi 0016                   ??_putch 0006  
              __pbssBANK0 00EB                __pbssBANK1 01BD                __pbssBANK2 0200  
              __pbssBANK3 0300                __pbssBANK4 0400        __size_of_gpio_init 0010  
                 ?___lmul 0006                   ?___wmul 0006        __size_of_send_cmd2 0084  
                 _CCP1CON 000FBD         ??_disk_initialize 001E                   ?_memset 0006  
          ___lmul@product 000E                   ?_printf 0086                   ?_put_rc 0001  
                 ?_strlen 0006                _dir_rewind 48B6        __size_of_uart_gets 0132  
      __size_of_uart_init 005E                 ?_check_fs 00A2                _disk_readp 37B8  
          follow_path@dir 00DD            follow_path@res 00E1        __size_of_vfpfcnvrt 07C6  
             send_cmd@cmd 0013               send_cmd@arg 000E               send_cmd@res 0014  
               ?_dir_find 00D3                 ?_dir_read 00D3                 ?_dir_next 00C2  
                 _SSPCON1 000FC6        __size_of_pwm_start 0004                   _SSPSTAT 000FC7  
              _clust2sect 4E24          ___lomod@dividend 0006         __end_of_dly_100us 59C2  
               ?_init_spi 0001                 ?_pf_lseek 00C2                 ?_pf_mount 00AC  
               ?_isr_high 0001                 ?_send_cmd 000E                   __Hparam 0000  
                 __Lparam 0000     __size_of_get_fileinfo 0282         __end_of_get_clust 5262  
               ?_pwm_Init 0001                   ___aodiv 3C64                   ___aomod 43B0  
         __size_of___lmul 006A             put_dump@width 009A                   ___lldiv 5078  
         __size_of___wmul 0026                   ___lodiv 49C2                   ___lomod 4D54  
               ?_put_dump 0092                 ?_vfprintf 0080                 ?_pwm_stop 0001  
                 __pcinit 5478                _pf_readdir 4AB2           __size_of_memset 0176  
                 __ramtop 0600                 ?_xmit_spi 0001                   __ptext0 0012  
                 __ptext1 277C                   __ptext2 55B8                   __ptext3 4668  
                 __ptext4 3DEC                   __ptext5 59CA                   __ptext6 59CE  
                 __ptext7 58DC                   __ptext8 5942                   __ptext9 537C  
                 _get_fat 32C6                _pf_opendir 4B96           __size_of_printf 0028  
       __end_of_gpio_init 59AE           __size_of_put_rc 0082           __size_of_strlen 004E  
                 _mem_cmp 53FE                   _mem_set 57D4              __size_of_abs 0040  
            __size_of_pad 00C2                   _pf_read 1B0E                   _isalpha 5798  
                 _isdigit 587C                   _pf_open 3F62                ??_check_fs 00A8  
                 _islower 580C                   _isspace 5674                   _rcv_spi 5972  
                 _isupper 5844                   atoi@neg 0013                ??_dir_find 00D7  
              ??_dir_read 00D7                   _put_drc 595A                ??_dir_next 00C4  
            pf_read@rbuff 00D1                   main@dir 017E                   main@fno 0168  
                 main@ofs 0158                   main@res 0192                   main@ptr 0190  
                 _strncmp 4C76            __pintcode_body 511C                   _toupper 5616  
    end_of_initialization 54DE         __end_of_send_cmd2 537C                   fputc@fp 0009  
            _get_fileinfo 2A26                   memset@c 0008                   memset@k 000E  
                 memset@n 000A                   memset@s 0010             __Lmediumconst 7B8C  
                 int_func 511C                   fputs@fp 0012                ??_init_spi 0006  
              ??_pf_lseek 00C6              pf_readdir@dj 00DE              pf_readdir@fs 012C  
              ??_pf_mount 00AE              pf_readdir@sp 0120                ??_isr_high 0001  
       __end_of_uart_gets 479A         __end_of_uart_init 5616           ___lldiv@divisor 000A  
              ??_send_cmd 0012           ___lldiv@counter 0012              pf_lseek@clst 00E3  
       __end_of_vfpfcnvrt 0FA6              pf_lseek@sect 00D7                ??_pwm_Init 0006  
                 postdec1 000FE5                   postdec2 000FDD                   postinc0 000FEE  
                 postinc1 000FE6                   postinc2 000FDE                   put_rc@i 0092  
                 put_rc@p 0094         __end_of_pwm_start 59D2                ??_vfprintf 0072  
              ??_put_dump 009C                ??_pwm_stop 0006                   strlen@a 0008  
                 strlen@s 0006                dir_find@dj 00D3                ??_xmit_spi 0006  
               _PORTAbits 000F80                 _PORTBbits 000F81      __size_of_pwm_setDuty 0026  
              dir_read@dj 00D3               ?_dir_rewind 001D                dir_next@dj 00C2  
              dir_next@fs 00CB              pf_opendir@dj 00E2               ?_disk_readp 0092  
            pf_opendir@fs 012C              pf_opendir@sp 0120                 _TRISAbits 000F92  
               _TRISCbits 000F94                get_fat@buf 00BC               ?_clust2sect 0012  
        disk_readp@offset 0098          disk_readp@sector 0094             ??_create_name 0012  
        disk_initialize@n 0029           disk_writep@buff 0015             ??_disk_writep 001B  
              main@upmode 0155            __end_of___lmul 5556               vfpfcnvrt@ap 004D  
             vfpfcnvrt@cp 005D               vfpfcnvrt@fp 0049               vfpfcnvrt@ll 0061  
          __end_of___wmul 5928               ?_pf_readdir 00DE            clust2sect@clst 0012  
             ?_pf_opendir 00E2            __end_of_memset 3F62            __end_of_printf 58DC  
          __end_of_put_rc 53FE            __end_of_strlen 5714       start_initialization 5478  
         ___lodiv@divisor 000E           ___lodiv@counter 001E               __end_of_abs 5798  
             __end_of_pad 5078                mem_cmp@cnt 000A                mem_cmp@dst 0006  
              mem_cmp@src 0008           _disk_initialize 24C2                mem_set@cnt 000A  
              mem_set@dst 0006                mem_set@val 0008       __size_of_dir_rewind 010C  
           ??_follow_path 0074       __size_of_disk_readp 0192       __end_of_create_name 3620  
             vfprintf@fmt 0082               put_dump@len 0098                  ??___lmul 000E  
                ??___wmul 000A                pf_read@btr 00C4               __pdataBANK1 01E1  
     __size_of_clust2sect 00CE                  ??_memset 000C       __end_of_disk_writep 3C64  
              pf_lseek@fs 00E7                memset@dest 0006                  ??_printf 0074  
              pf_open@dir 0122                  ??_put_rc 0074         __end_ofput_rc@str 7C52  
              pf_open@res 0142                  ??_strlen 0008                pf_mount@fs 00AC  
             __pbssCOMRAM 0075             __pcstackBANK0 0080             __pcstackBANK1 0100  
        ___aodiv@dividend 0006         __size_of_check_fs 011C              check_fs@sect 00A4  
       __size_of_dir_find 0154         __size_of_dir_read 016E         __size_of_dir_next 0212  
     __size_of_pf_readdir 00E4                 _atoi$1970 0017                 _atoi$1968 0015  
               _atoi$1969 0019       __size_of_pf_opendir 00E0         __size_of_init_spi 000A  
       __size_of_pf_lseek 0490                 _dly_100us 59B8         __size_of_pf_mount 06D8  
               _dtoa$1879 0034         __size_of_isr_high 51B8                 __pintcode 0008  
           __pmediumconst 7B8C         __size_of_send_cmd 00C4                  ?___aodiv 0006  
                ?___aomod 0006          ___aodiv@quotient 0018                  ?___lldiv 0006  
                ?___lodiv 0006                  ?___lomod 0006         __size_of_pwm_Init 0018  
               _get_clust 51C0                send_cmd2@n 000D             follow_path@dj 00DB  
     __end_of_follow_path 43B0         __size_of_vfprintf 0062         __size_of_put_dump 020C  
                ?_get_fat 00A2         __size_of_pwm_stop 0004           ___lomod@divisor 000E  
                ?_mem_cmp 0006           ___lomod@counter 0016                  ?_mem_set 0006  
                ?_pf_read 00C2                  ?_isalpha 0006                  ?_isdigit 0006  
                ?_pf_open 00E2         __size_of_xmit_spi 001A                  ?_islower 0006  
                ?_isspace 0006                  ?_rcv_spi 0001                  ?_isupper 0006  
               _gpio_init 599E            _dir_rewind$709 0023                  ?_put_drc 0001  
               _init_flag 01BF   __end_of_disk_initialize 277C            __size_of_fputc 0096  
          __size_of_fputs 0044                  ?_strncmp 0006                  ?_toupper 000C  
          __size_of_xatoi 02AA            __size_of_putch 0016               _create_name 3488  
          ___wmul@product 000A                  _LATAbits 000F89                  _LATBbits 000F8A  
               _send_cmd2 52F8              send_cmd2@cmd 000C              send_cmd2@arg 0007  
            send_cmd2@res 000B                ?_dly_100us 0001           follow_path@path 00DF  
             _disk_writep 3ADA                  i2u790_45 51B4                  i2u786_40 5134  
                i2u786_41 5130                  i2u787_40 5142                  i2u787_41 513E  
                i2u788_40 5170                  i2u788_41 516C                  i2u789_40 51B2  
                i2u789_41 51AC                 _uart_gets 4668                uart_gets@c 009D  
              uart_gets@i 009B                 _uart_init 55B8                 dir_find@c 00D9  
               dir_read@a 00DB                 dir_read@c 00DC                 dir_next@i 00D1  
               _vfpfcnvrt 07E0                ?_get_clust 0006                 _xtoa$1907 0035  
               _xtoa$1908 0037                 get_fat@fs 00C0         ___wmul@multiplier 0006  
               _pwm_start 59CE              ??_dir_rewind 001F                  _CardType 0079  
            ??_disk_readp 009C                 main@count 015A                ?_gpio_init 0001  
            _isspace$1995 000C                vfpfcnvrt@c 0069              ??_clust2sect 0016  
       ___lmul@multiplier 0006                 copy_data0 548C                ?_send_cmd2 0007  
              put_drc@res 0074                  __Hrparam 0000        __end_of_dir_rewind 49C2  
              vfprintf@ap 0084                put_dump@bp 00A4                  __Lrparam 0000  
              vfprintf@fp 0080                put_dump@lp 00A0                put_dump@sp 009E  
             _follow_path 4246        __end_of_disk_readp 394A                 pf_read@br 00C6  
               pf_read@cs 00E1                 pf_read@dr 00D0                 pf_read@fs 00E4  
              ?_uart_gets 0092                ?_uart_init 0001             ??_pwm_setDuty 0008  
               pf_open@dj 0145                 pf_open@fs 0143                 pf_open@sp 0116  
        __size_of___aodiv 0188          __size_of___aomod 0164          __size_of___lldiv 00A4  
        __size_of___lodiv 00F0              ??_pf_readdir 0074          __size_of___lomod 00D0  
              ?_vfpfcnvrt 0049               _pf_read$900 00D3        __end_of_clust2sect 4EF2  
         ___aodiv@divisor 000E              ??_pf_opendir 0075               check_fs@buf 00A2  
         ___aodiv@counter 0016                ?_pwm_start 0001          __size_of_get_fat 01C2  
               isr_high@d 0003                 isr_high@i 0004                  _check_fs 479A  
    _disk_initialize$1320 0023          __size_of_mem_cmp 007A          __size_of_mem_set 0038  
        __size_of_pf_read 0402          __size_of_isalpha 003C          __size_of_isdigit 0038  
        __size_of_pf_open 0176          __size_of_islower 0038          __size_of_isspace 0052  
        __size_of_rcv_spi 0016                  __ptext10 2EBA                  __ptext11 595A  
                __ptext20 4514                  __ptext12 4AB2                  __ptext21 53FE  
                __ptext13 2A26                  __ptext30 59B8                  __ptext22 48B6  
                __ptext14 40D8                  __ptext31 479A                  __ptext23 2CA8  
                __ptext15 1B0E                  __ptext40 5556                  __ptext32 167E  
                __ptext24 3488                  __ptext16 4B96                  __ptext41 07E0  
                __ptext33 32C6                  __ptext25 57D4                  __ptext17 3F62  
                __ptext50 4C76                  __ptext42 21EE                  __ptext34 37B8  
                __ptext26 0FA6                  __ptext18 4246                  __ptext51 3620  
                __ptext43 5616                  __ptext35 4EF2                  __ptext27 24C2  
                __ptext19 51C0                  __ptext60 3C64                  __ptext52 1F10  
                __ptext44 580C                  __ptext36 52F8                  __ptext28 59AE  
                __ptext61 394A                  __ptext53 4FB6                  __ptext45 5844  
                __ptext37 5928                  __ptext29 3ADA                  __ptext62 5674  
                __ptext54 56C6                  __ptext46 5798                  __ptext38 5972  
                __ptext63 587C                  __ptext55 5714                  __ptext47 30C6  
                __ptext39 58B4                  __ptext64 5902                  __ptext56 5262  
                __ptext48 4D54                  __ptext65 4E24                  __ptext57 5988  
                __ptext49 49C2                  __ptext66 54EC                  __ptext58 5758  
                __ptext67 5078                  __ptext59 43B0                  __ptext68 599E  
                _dir_find 4514          __size_of_isupper 0038                  _dir_read 40D8  
                _dir_next 2CA8          ?_disk_initialize 0001                 send_cmd@n 0012  
        __size_of_put_drc 0018          __size_of_strncmp 00DE          __size_of_toupper 005E  
           __size_of_atoi 0190             __size_of_main 07CE             __size_of_dtoa 02DE  
                _init_spi 59AE                  _pf_lseek 167E             __size_of_stoa 0198  
                _pf_mount 0FA6             __size_of_utoa 0200             __size_of_xtoa 02D4  
      __end_of_pf_readdir 4B96                  _isr_high 0008        __end_of_pf_opendir 4C76  
                _send_cmd 4EF2               ??_dly_100us 0006                 stoa@F1141 01E1  
                isa$xinst 000000                  _pwm_Init 5942                  int$flags 007A  
                _vfprintf 5556                  _put_dump 2EBA                  _pwm_stop 59CA  
           pf_read@remain 00D9                 printf@fmt 0086               ??_get_clust 000A  
                _xmit_spi 5928          ___aomod@dividend 0006                 putch@byte 0006  
          _vfpfcnvrt$1922 005F       __end_of_pwm_setDuty 5902                  mem_cmp@d 000E  
                mem_cmp@r 0012                  mem_cmp@s 0010                _INTCONbits 000FF2  
                mem_set@d 000C                 put_rc@str 7C0D               ??_gpio_init 0006  
               put_dump@i 00A6                  isalpha@c 0006                  isdigit@c 0006  
           pf_readdir@dir 0100             pf_readdir@fno 00E0             pf_readdir@res 012E  
                intlevel2 0000             uart_gets@buff 0092                  islower@c 0006  
                isspace@c 0006          ___lldiv@dividend 0006               ??_send_cmd2 000B  
                isupper@c 0006                 strncmp@_l 0006                 strncmp@_r 0008  
               xmit_spi@d 0006             pf_lseek@ifptr 00DB               ??_uart_gets 0096  
             ??_uart_init 0006                  printf@ap 0090           ___aomod@divisor 000E  
                xatoi@res 0014                  xatoi@val 001A                  xatoi@str 0012  
             ??_vfpfcnvrt 004F                  stoa@nuls 0015           ___aomod@counter 0016  
                put_rc@rc 0093               ??_pwm_start 0006              uart_gets@len 0094  
        ___lldiv@quotient 000E            dir_rewind@clst 0029               dir_find@dir 00D5  
             dir_find@res 00DA                  strncmp@l 000D                  strncmp@n 000A  
                strncmp@r 000F                  toupper@c 000C              dir_next@clst 00CD  
             dir_read@dir 00D5               dir_read@res 00DD              ___aodiv@sign 0017  
          pf_opendir@path 00E4             ?_get_fileinfo 0006              ?_create_name 000E  
           pf_opendir@dir 0100              dir_rewind@dj 001D              dir_rewind@fs 0027  
           pf_opendir@res 012E              ___aomod@sign 0017              ?_disk_writep 0015  
