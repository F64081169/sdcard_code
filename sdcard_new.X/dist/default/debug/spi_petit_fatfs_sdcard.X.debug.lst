

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jan 18 19:08:04 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93  0000                     
    94                           ; Version 2.32
    95                           ; Generated 02/02/2021 GMT
    96                           ; 
    97                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F4520 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataBANK1
   131  00574A                     __pidataBANK1:
   132                           	callstack 0
   133                           
   134                           ;initializer for stoa@F1141
   135  00574A  28                 	db	40
   136  00574B  6E                 	db	110
   137  00574C  75                 	db	117
   138  00574D  6C                 	db	108
   139  00574E  6C                 	db	108
   140  00574F  29                 	db	41
   141  005750  00                 	db	0
   142                           
   143                           	psect	mediumconst
   144  007B8C                     __pmediumconst:
   145                           	callstack 0
   146  007B8C  00                 	db	0
   147  007B8D                     create_name@cvt:
   148                           	callstack 0
   149  007B8D  80                 	db	128
   150  007B8E  9A                 	db	154
   151  007B8F  90                 	db	144
   152  007B90  41                 	db	65
   153  007B91  8E                 	db	142
   154  007B92  41                 	db	65
   155  007B93  8F                 	db	143
   156  007B94  80                 	db	128
   157  007B95  45                 	db	69
   158  007B96  45                 	db	69
   159  007B97  45                 	db	69
   160  007B98  49                 	db	73
   161  007B99  49                 	db	73
   162  007B9A  49                 	db	73
   163  007B9B  8E                 	db	142
   164  007B9C  8F                 	db	143
   165  007B9D  90                 	db	144
   166  007B9E  92                 	db	146
   167  007B9F  92                 	db	146
   168  007BA0  4F                 	db	79
   169  007BA1  99                 	db	153
   170  007BA2  4F                 	db	79
   171  007BA3  55                 	db	85
   172  007BA4  55                 	db	85
   173  007BA5  59                 	db	89
   174  007BA6  99                 	db	153
   175  007BA7  9A                 	db	154
   176  007BA8  9B                 	db	155
   177  007BA9  9C                 	db	156
   178  007BAA  9D                 	db	157
   179  007BAB  9E                 	db	158
   180  007BAC  9F                 	db	159
   181  007BAD  41                 	db	65
   182  007BAE  49                 	db	73
   183  007BAF  4F                 	db	79
   184  007BB0  55                 	db	85
   185  007BB1  A5                 	db	165
   186  007BB2  A5                 	db	165
   187  007BB3  A6                 	db	166
   188  007BB4  A7                 	db	167
   189  007BB5  A8                 	db	168
   190  007BB6  A9                 	db	169
   191  007BB7  AA                 	db	170
   192  007BB8  AB                 	db	171
   193  007BB9  AC                 	db	172
   194  007BBA  21                 	db	33
   195  007BBB  AE                 	db	174
   196  007BBC  AF                 	db	175
   197  007BBD  B0                 	db	176
   198  007BBE  B1                 	db	177
   199  007BBF  B2                 	db	178
   200  007BC0  B3                 	db	179
   201  007BC1  B4                 	db	180
   202  007BC2  B5                 	db	181
   203  007BC3  B6                 	db	182
   204  007BC4  B7                 	db	183
   205  007BC5  B8                 	db	184
   206  007BC6  B9                 	db	185
   207  007BC7  BA                 	db	186
   208  007BC8  BB                 	db	187
   209  007BC9  BC                 	db	188
   210  007BCA  BD                 	db	189
   211  007BCB  BE                 	db	190
   212  007BCC  BF                 	db	191
   213  007BCD  C0                 	db	192
   214  007BCE  C1                 	db	193
   215  007BCF  C2                 	db	194
   216  007BD0  C3                 	db	195
   217  007BD1  C4                 	db	196
   218  007BD2  C5                 	db	197
   219  007BD3  C6                 	db	198
   220  007BD4  C7                 	db	199
   221  007BD5  C8                 	db	200
   222  007BD6  C9                 	db	201
   223  007BD7  CA                 	db	202
   224  007BD8  CB                 	db	203
   225  007BD9  CC                 	db	204
   226  007BDA  CD                 	db	205
   227  007BDB  CE                 	db	206
   228  007BDC  CF                 	db	207
   229  007BDD  D0                 	db	208
   230  007BDE  D1                 	db	209
   231  007BDF  D2                 	db	210
   232  007BE0  D3                 	db	211
   233  007BE1  D4                 	db	212
   234  007BE2  D5                 	db	213
   235  007BE3  D6                 	db	214
   236  007BE4  D7                 	db	215
   237  007BE5  D8                 	db	216
   238  007BE6  D9                 	db	217
   239  007BE7  DA                 	db	218
   240  007BE8  DB                 	db	219
   241  007BE9  DC                 	db	220
   242  007BEA  DD                 	db	221
   243  007BEB  DE                 	db	222
   244  007BEC  DF                 	db	223
   245  007BED  E0                 	db	224
   246  007BEE  E1                 	db	225
   247  007BEF  E2                 	db	226
   248  007BF0  E3                 	db	227
   249  007BF1  E4                 	db	228
   250  007BF2  E5                 	db	229
   251  007BF3  E6                 	db	230
   252  007BF4  E7                 	db	231
   253  007BF5  E8                 	db	232
   254  007BF6  E9                 	db	233
   255  007BF7  EA                 	db	234
   256  007BF8  EB                 	db	235
   257  007BF9  EC                 	db	236
   258  007BFA  ED                 	db	237
   259  007BFB  EE                 	db	238
   260  007BFC  EF                 	db	239
   261  007BFD  F0                 	db	240
   262  007BFE  F1                 	db	241
   263  007BFF  F2                 	db	242
   264  007C00  F3                 	db	243
   265  007C01  F4                 	db	244
   266  007C02  F5                 	db	245
   267  007C03  F6                 	db	246
   268  007C04  F7                 	db	247
   269  007C05  F8                 	db	248
   270  007C06  F9                 	db	249
   271  007C07  FA                 	db	250
   272  007C08  FB                 	db	251
   273  007C09  FC                 	db	252
   274  007C0A  FD                 	db	253
   275  007C0B  FE                 	db	254
   276  007C0C  FF                 	db	255
   277  007C0D                     __end_ofcreate_name@cvt:
   278                           	callstack 0
   279  007C0D                     put_rc@str:
   280                           	callstack 0
   281  007C0D  4F                 	db	79
   282  007C0E  4B                 	db	75
   283  007C0F  00                 	db	0
   284  007C10  44                 	db	68
   285  007C11  49                 	db	73
   286  007C12  53                 	db	83
   287  007C13  4B                 	db	75
   288  007C14  5F                 	db	95
   289  007C15  45                 	db	69
   290  007C16  52                 	db	82
   291  007C17  52                 	db	82
   292  007C18  00                 	db	0
   293  007C19  4E                 	db	78
   294  007C1A  4F                 	db	79
   295  007C1B  54                 	db	84
   296  007C1C  5F                 	db	95
   297  007C1D  52                 	db	82
   298  007C1E  45                 	db	69
   299  007C1F  41                 	db	65
   300  007C20  44                 	db	68
   301  007C21  59                 	db	89
   302  007C22  00                 	db	0
   303  007C23  4E                 	db	78
   304  007C24  4F                 	db	79
   305  007C25  5F                 	db	95
   306  007C26  46                 	db	70
   307  007C27  49                 	db	73
   308  007C28  4C                 	db	76
   309  007C29  45                 	db	69
   310  007C2A  00                 	db	0
   311  007C2B  4E                 	db	78
   312  007C2C  4F                 	db	79
   313  007C2D  54                 	db	84
   314  007C2E  5F                 	db	95
   315  007C2F  4F                 	db	79
   316  007C30  50                 	db	80
   317  007C31  45                 	db	69
   318  007C32  4E                 	db	78
   319  007C33  45                 	db	69
   320  007C34  44                 	db	68
   321  007C35  00                 	db	0
   322  007C36  4E                 	db	78
   323  007C37  4F                 	db	79
   324  007C38  54                 	db	84
   325  007C39  5F                 	db	95
   326  007C3A  45                 	db	69
   327  007C3B  4E                 	db	78
   328  007C3C  41                 	db	65
   329  007C3D  42                 	db	66
   330  007C3E  4C                 	db	76
   331  007C3F  45                 	db	69
   332  007C40  44                 	db	68
   333  007C41  00                 	db	0
   334  007C42  4E                 	db	78
   335  007C43  4F                 	db	79
   336  007C44  5F                 	db	95
   337  007C45  46                 	db	70
   338  007C46  49                 	db	73
   339  007C47  4C                 	db	76
   340  007C48  45                 	db	69
   341  007C49  5F                 	db	95
   342  007C4A  53                 	db	83
   343  007C4B  59                 	db	89
   344  007C4C  53                 	db	83
   345  007C4D  54                 	db	84
   346  007C4E  45                 	db	69
   347  007C4F  4D                 	db	77
   348  007C50  00                 	db	0
   349  007C51  00                 	db	0
   350  007C52                     __end_ofput_rc@str:
   351                           	callstack 0
   352  0000                     _PORTBbits	set	3969
   353  0000                     _LATBbits	set	3978
   354  0000                     _LATAbits	set	3977
   355  0000                     _TRISAbits	set	3986
   356  0000                     _TRISCbits	set	3988
   357  0000                     _LATC	set	3979
   358  0000                     _TRISC	set	3988
   359  0000                     _SSPBUF	set	4041
   360  0000                     _SSPSTAT	set	4039
   361  0000                     _SSPCON1	set	4038
   362  0000                     _SPBRG	set	4015
   363  0000                     _RCSTA	set	4011
   364  0000                     _TXSTA	set	4012
   365  0000                     _TXREG	set	4013
   366  0000                     _RCREG	set	4014
   367  0000                     _CCPR1L	set	4030
   368  0000                     _T2CON	set	4042
   369  0000                     _PR2	set	4043
   370  0000                     _CCP1CON	set	4029
   371  0000                     _SSPIF	set	31987
   372  0000                     _TXIP	set	31996
   373  0000                     _RCIP	set	31997
   374  0000                     _TXIE	set	31980
   375  0000                     _TXIF	set	31988
   376  0000                     _RCIF	set	31989
   377  0000                     _RCIE	set	31981
   378  0000                     _TMR2ON	set	32338
   379  0000                     _INTCONbits	set	4082
   380  0000                     _PEIE	set	32662
   381  0000                     _GIE	set	32663
   382  0000                     _INT0IF	set	32657
   383  007C52                     STR_9:
   384  007C52  09                 	db	9
   385  007C53  52                 	db	82	;'R'
   386  007C54  65                 	db	101	;'e'
   387  007C55  61                 	db	97	;'a'
   388  007C56  64                 	db	100	;'d'
   389  007C57  20                 	db	32
   390  007C58  61                 	db	97	;'a'
   391  007C59  6C                 	db	108	;'l'
   392  007C5A  6C                 	db	108	;'l'
   393  007C5B  20                 	db	32
   394  007C5C  66                 	db	102	;'f'
   395  007C5D  69                 	db	105	;'i'
   396  007C5E  6C                 	db	108	;'l'
   397  007C5F  65                 	db	101	;'e'
   398  007C60  20                 	db	32
   399  007C61  61                 	db	97	;'a'
   400  007C62  6E                 	db	110	;'n'
   401  007C63  64                 	db	100	;'d'
   402  007C64  20                 	db	32
   403  007C65  6F                 	db	111	;'o'
   404  007C66  75                 	db	117	;'u'
   405  007C67  74                 	db	116	;'t'
   406  007C68  70                 	db	112	;'p'
   407  007C69  75                 	db	117	;'u'
   408  007C6A  74                 	db	116	;'t'
   409  007C6B  20                 	db	32
   410  007C6C  73                 	db	115	;'s'
   411  007C6D  71                 	db	113	;'q'
   412  007C6E  75                 	db	117	;'u'
   413  007C6F  61                 	db	97	;'a'
   414  007C70  72                 	db	114	;'r'
   415  007C71  65                 	db	101	;'e'
   416  007C72  20                 	db	32
   417  007C73  77                 	db	119	;'w'
   418  007C74  61                 	db	97	;'a'
   419  007C75  76                 	db	118	;'v'
   420  007C76  65                 	db	101	;'e'
   421  007C77  0D                 	db	13
   422  007C78  0A                 	db	10
   423  007C79  00                 	db	0
   424  007C7A                     STR_11:
   425  007C7A  09                 	db	9
   426  007C7B  52                 	db	82	;'R'
   427  007C7C  65                 	db	101	;'e'
   428  007C7D  61                 	db	97	;'a'
   429  007C7E  64                 	db	100	;'d'
   430  007C7F  20                 	db	32
   431  007C80  74                 	db	116	;'t'
   432  007C81  68                 	db	104	;'h'
   433  007C82  65                 	db	101	;'e'
   434  007C83  20                 	db	32
   435  007C84  66                 	db	102	;'f'
   436  007C85  69                 	db	105	;'i'
   437  007C86  6C                 	db	108	;'l'
   438  007C87  65                 	db	101	;'e'
   439  007C88  20                 	db	32
   440  007C89  31                 	db	49	;'1'
   441  007C8A  32                 	db	50	;'2'
   442  007C8B  38                 	db	56	;'8'
   443  007C8C  20                 	db	32
   444  007C8D  62                 	db	98	;'b'
   445  007C8E  79                 	db	121	;'y'
   446  007C8F  74                 	db	116	;'t'
   447  007C90  65                 	db	101	;'e'
   448  007C91  73                 	db	115	;'s'
   449  007C92  20                 	db	32
   450  007C93  61                 	db	97	;'a'
   451  007C94  6E                 	db	110	;'n'
   452  007C95  64                 	db	100	;'d'
   453  007C96  20                 	db	32
   454  007C97  64                 	db	100	;'d'
   455  007C98  75                 	db	117	;'u'
   456  007C99  6D                 	db	109	;'m'
   457  007C9A  70                 	db	112	;'p'
   458  007C9B  20                 	db	32
   459  007C9C  69                 	db	105	;'i'
   460  007C9D  74                 	db	116	;'t'
   461  007C9E  0D                 	db	13
   462  007C9F  0A                 	db	10
   463  007CA0  00                 	db	0
   464  007CA1                     STR_3:
   465  007CA1  0D                 	db	13
   466  007CA2  0A                 	db	10
   467  007CA3  0D                 	db	13
   468  007CA4  0A                 	db	10
   469  007CA5  50                 	db	80	;'P'
   470  007CA6  65                 	db	101	;'e'
   471  007CA7  74                 	db	116	;'t'
   472  007CA8  69                 	db	105	;'i'
   473  007CA9  74                 	db	116	;'t'
   474  007CAA  20                 	db	32
   475  007CAB  46                 	db	70	;'F'
   476  007CAC  61                 	db	97	;'a'
   477  007CAD  74                 	db	116	;'t'
   478  007CAE  46                 	db	70	;'F'
   479  007CAF  73                 	db	115	;'s'
   480  007CB0  20                 	db	32
   481  007CB1  74                 	db	116	;'t'
   482  007CB2  65                 	db	101	;'e'
   483  007CB3  73                 	db	115	;'s'
   484  007CB4  74                 	db	116	;'t'
   485  007CB5  20                 	db	32
   486  007CB6  6D                 	db	109	;'m'
   487  007CB7  6F                 	db	111	;'o'
   488  007CB8  6E                 	db	110	;'n'
   489  007CB9  69                 	db	105	;'i'
   490  007CBA  74                 	db	116	;'t'
   491  007CBB  6F                 	db	111	;'o'
   492  007CBC  72                 	db	114	;'r'
   493  007CBD  0D                 	db	13
   494  007CBE  0A                 	db	10
   495  007CBF  00                 	db	0
   496  007CC0                     STR_6:
   497  007CC0  09                 	db	9
   498  007CC1  49                 	db	73	;'I'
   499  007CC2  6E                 	db	110	;'n'
   500  007CC3  69                 	db	105	;'i'
   501  007CC4  74                 	db	116	;'t'
   502  007CC5  69                 	db	105	;'i'
   503  007CC6  61                 	db	97	;'a'
   504  007CC7  6C                 	db	108	;'l'
   505  007CC8  69                 	db	105	;'i'
   506  007CC9  7A                 	db	122	;'z'
   507  007CCA  65                 	db	101	;'e'
   508  007CCB  20                 	db	32
   509  007CCC  70                 	db	112	;'p'
   510  007CCD  68                 	db	104	;'h'
   511  007CCE  79                 	db	121	;'y'
   512  007CCF  73                 	db	115	;'s'
   513  007CD0  69                 	db	105	;'i'
   514  007CD1  63                 	db	99	;'c'
   515  007CD2  61                 	db	97	;'a'
   516  007CD3  6C                 	db	108	;'l'
   517  007CD4  20                 	db	32
   518  007CD5  64                 	db	100	;'d'
   519  007CD6  72                 	db	114	;'r'
   520  007CD7  69                 	db	105	;'i'
   521  007CD8  76                 	db	118	;'v'
   522  007CD9  65                 	db	101	;'e'
   523  007CDA  0D                 	db	13
   524  007CDB  0A                 	db	10
   525  007CDC  09                 	db	9
   526  007CDD  00                 	db	0
   527  007CDE                     STR_14:
   528  007CDE  73                 	db	115	;'s'
   529  007CDF  65                 	db	101	;'e'
   530  007CE0  65                 	db	101	;'e'
   531  007CE1  6B                 	db	107	;'k'
   532  007CE2  20                 	db	32
   533  007CE3  70                 	db	112	;'p'
   534  007CE4  6F                 	db	111	;'o'
   535  007CE5  69                 	db	105	;'i'
   536  007CE6  6E                 	db	110	;'n'
   537  007CE7  74                 	db	116	;'t'
   538  007CE8  65                 	db	101	;'e'
   539  007CE9  72                 	db	114	;'r'
   540  007CEA  20                 	db	32
   541  007CEB  69                 	db	105	;'i'
   542  007CEC  73                 	db	115	;'s'
   543  007CED  20                 	db	32
   544  007CEE  69                 	db	105	;'i'
   545  007CEF  6E                 	db	110	;'n'
   546  007CF0  76                 	db	118	;'v'
   547  007CF1  61                 	db	97	;'a'
   548  007CF2  6C                 	db	108	;'l'
   549  007CF3  69                 	db	105	;'i'
   550  007CF4  64                 	db	100	;'d'
   551  007CF5  0D                 	db	13
   552  007CF6  0A                 	db	10
   553  007CF7  00                 	db	0
   554  007CF8                     STR_7:
   555  007CF8  09                 	db	9
   556  007CF9  4D                 	db	77	;'M'
   557  007CFA  6F                 	db	111	;'o'
   558  007CFB  75                 	db	117	;'u'
   559  007CFC  6E                 	db	110	;'n'
   560  007CFD  74                 	db	116	;'t'
   561  007CFE  20                 	db	32
   562  007CFF  74                 	db	116	;'t'
   563  007D00  68                 	db	104	;'h'
   564  007D01  65                 	db	101	;'e'
   565  007D02  20                 	db	32
   566  007D03  76                 	db	118	;'v'
   567  007D04  6F                 	db	111	;'o'
   568  007D05  6C                 	db	108	;'l'
   569  007D06  75                 	db	117	;'u'
   570  007D07  6D                 	db	109	;'m'
   571  007D08  65                 	db	101	;'e'
   572  007D09  0D                 	db	13
   573  007D0A  0A                 	db	10
   574  007D0B  09                 	db	9
   575  007D0C  00                 	db	0
   576  007D0D                     STR_16:
   577  007D0D  09                 	db	9
   578  007D0E  66                 	db	102	;'f'
   579  007D0F  70                 	db	112	;'p'
   580  007D10  74                 	db	116	;'t'
   581  007D11  72                 	db	114	;'r'
   582  007D12  20                 	db	32
   583  007D13  3D                 	db	61	;'='
   584  007D14  20                 	db	32
   585  007D15  25                 	db	37
   586  007D16  6C                 	db	108	;'l'
   587  007D17  75                 	db	117	;'u'
   588  007D18  28                 	db	40
   589  007D19  30                 	db	48	;'0'
   590  007D1A  78                 	db	120	;'x'
   591  007D1B  25                 	db	37
   592  007D1C  6C                 	db	108	;'l'
   593  007D1D  58                 	db	88	;'X'
   594  007D1E  29                 	db	41
   595  007D1F  0D                 	db	13
   596  007D20  0A                 	db	10
   597  007D21  00                 	db	0
   598  007D22                     STR_17:
   599  007D22  09                 	db	9
   600  007D23  44                 	db	68	;'D'
   601  007D24  69                 	db	105	;'i'
   602  007D25  72                 	db	114	;'r'
   603  007D26  65                 	db	101	;'e'
   604  007D27  63                 	db	99	;'c'
   605  007D28  74                 	db	116	;'t'
   606  007D29  6F                 	db	111	;'o'
   607  007D2A  72                 	db	114	;'r'
   608  007D2B  79                 	db	121	;'y'
   609  007D2C  20                 	db	32
   610  007D2D  6C                 	db	108	;'l'
   611  007D2E  69                 	db	105	;'i'
   612  007D2F  73                 	db	115	;'s'
   613  007D30  74                 	db	116	;'t'
   614  007D31  69                 	db	105	;'i'
   615  007D32  6E                 	db	110	;'n'
   616  007D33  67                 	db	103	;'g'
   617  007D34  0D                 	db	13
   618  007D35  0A                 	db	10
   619  007D36  00                 	db	0
   620  007D37                     STR_18:
   621  007D37  09                 	db	9
   622  007D38  20                 	db	32
   623  007D39  20                 	db	32
   624  007D3A  20                 	db	32
   625  007D3B  3C                 	db	60	;'<'
   626  007D3C  44                 	db	68	;'D'
   627  007D3D  49                 	db	73	;'I'
   628  007D3E  52                 	db	82	;'R'
   629  007D3F  3E                 	db	62	;'>'
   630  007D40  20                 	db	32
   631  007D41  20                 	db	32
   632  007D42  20                 	db	32
   633  007D43  25                 	db	37
   634  007D44  73                 	db	115	;'s'
   635  007D45  0D                 	db	13
   636  007D46  0A                 	db	10
   637  007D47  00                 	db	0
   638  007D48                     STR_8:
   639  007D48  09                 	db	9
   640  007D49  4F                 	db	79	;'O'
   641  007D4A  70                 	db	112	;'p'
   642  007D4B  65                 	db	101	;'e'
   643  007D4C  6E                 	db	110	;'n'
   644  007D4D  20                 	db	32
   645  007D4E  61                 	db	97	;'a'
   646  007D4F  20                 	db	32
   647  007D50  66                 	db	102	;'f'
   648  007D51  69                 	db	105	;'i'
   649  007D52  6C                 	db	108	;'l'
   650  007D53  65                 	db	101	;'e'
   651  007D54  0D                 	db	13
   652  007D55  0A                 	db	10
   653  007D56  09                 	db	9
   654  007D57  00                 	db	0
   655  007D58                     STR_24:
   656  007D58  61                 	db	97	;'a'
   657  007D59  64                 	db	100	;'d'
   658  007D5A  64                 	db	100	;'d'
   659  007D5B  72                 	db	114	;'r'
   660  007D5C  3A                 	db	58	;':'
   661  007D5D  20                 	db	32
   662  007D5E  25                 	db	37
   663  007D5F  30                 	db	48	;'0'
   664  007D60  38                 	db	56	;'8'
   665  007D61  6C                 	db	108	;'l'
   666  007D62  58                 	db	88	;'X'
   667  007D63  20                 	db	32
   668  007D64  7C                 	db	124
   669  007D65  00                 	db	0
   670  007D66                     STR_20:
   671  007D66  09                 	db	9
   672  007D67  25                 	db	37
   673  007D68  75                 	db	117	;'u'
   674  007D69  20                 	db	32
   675  007D6A  69                 	db	105	;'i'
   676  007D6B  74                 	db	116	;'t'
   677  007D6C  65                 	db	101	;'e'
   678  007D6D  6D                 	db	109	;'m'
   679  007D6E  28                 	db	40
   680  007D6F  73                 	db	115	;'s'
   681  007D70  29                 	db	41
   682  007D71  0D                 	db	13
   683  007D72  0A                 	db	10
   684  007D73  00                 	db	0
   685  007D74                     STR_1:
   686  007D74  72                 	db	114	;'r'
   687  007D75  63                 	db	99	;'c'
   688  007D76  3D                 	db	61	;'='
   689  007D77  25                 	db	37
   690  007D78  75                 	db	117	;'u'
   691  007D79  20                 	db	32
   692  007D7A  46                 	db	70	;'F'
   693  007D7B  52                 	db	82	;'R'
   694  007D7C  5F                 	db	95	;'_'
   695  007D7D  25                 	db	37
   696  007D7E  73                 	db	115	;'s'
   697  007D7F  0D                 	db	13
   698  007D80  0A                 	db	10
   699  007D81  00                 	db	0
   700  007D82                     STR_19:
   701  007D82  09                 	db	9
   702  007D83  25                 	db	37
   703  007D84  39                 	db	57	;'9'
   704  007D85  6C                 	db	108	;'l'
   705  007D86  75                 	db	117	;'u'
   706  007D87  20                 	db	32
   707  007D88  20                 	db	32
   708  007D89  25                 	db	37
   709  007D8A  73                 	db	115	;'s'
   710  007D8B  0D                 	db	13
   711  007D8C  0A                 	db	10
   712  007D8D  00                 	db	0
   713  007D8E                     STR_2:
   714  007D8E  72                 	db	114	;'r'
   715  007D8F  63                 	db	99	;'c'
   716  007D90  3D                 	db	61	;'='
   717  007D91  25                 	db	37
   718  007D92  64                 	db	100	;'d'
   719  007D93  0D                 	db	13
   720  007D94  0A                 	db	10
   721  007D95  00                 	db	0
   722  007D96                     STR_29:
   723  007D96  20                 	db	32
   724  007D97  25                 	db	37
   725  007D98  30                 	db	48	;'0'
   726  007D99  38                 	db	56	;'8'
   727  007D9A  4C                 	db	76	;'L'
   728  007D9B  58                 	db	88	;'X'
   729  007D9C  00                 	db	0
   730  007D9D                     STR_25:
   731  007D9D  20                 	db	32
   732  007D9E  25                 	db	37
   733  007D9F  30                 	db	48	;'0'
   734  007DA0  32                 	db	50	;'2'
   735  007DA1  58                 	db	88	;'X'
   736  007DA2  00                 	db	0
   737  007DA3                     STR_28:
   738  007DA3  20                 	db	32
   739  007DA4  25                 	db	37
   740  007DA5  30                 	db	48	;'0'
   741  007DA6  34                 	db	52	;'4'
   742  007DA7  58                 	db	88	;'X'
   743  007DA8  00                 	db	0
   744  007DA9                     STR_50:
   745  007DA9  6C                 	db	108	;'l'
   746  007DAA  58                 	db	88	;'X'
   747  007DAB  00                 	db	0
   748  007DAC                     STR_32:
   749  007DAC  6C                 	db	108	;'l'
   750  007DAD  64                 	db	100	;'d'
   751  007DAE  00                 	db	0
   752  007DAF                     STR_36:
   753  007DAF  6C                 	db	108	;'l'
   754  007DB0  69                 	db	105	;'i'
   755  007DB1  00                 	db	0
   756  007DB2                     STR_41:
   757  007DB2  6C                 	db	108	;'l'
   758  007DB3  75                 	db	117	;'u'
   759  007DB4  00                 	db	0
   760  007DB5                     STR_46:
   761  007DB5  6C                 	db	108	;'l'
   762  007DB6  78                 	db	120	;'x'
   763  007DB7  00                 	db	0
   764  007DB8                     STR_21:
   765  007DB8  25                 	db	37
   766  007DB9  63                 	db	99	;'c'
   767  007DBA  00                 	db	0
   768  007DBB                     STR_26:
   769  007DBB  20                 	db	32
   770  007DBC  00                 	db	0
   771  007DBD                     STR_4:
   772  007DBD  3E                 	db	62	;'>'
   773  007DBE  00                 	db	0
   774  007DBF  00                 	db	0	; dummy byte at the end
   775  0000                     
   776                           ; #config settings
   777                           
   778                           	psect	cinit
   779  005200                     __pcinit:
   780                           	callstack 0
   781  005200                     start_initialization:
   782                           	callstack 0
   783  005200                     __initialization:
   784                           	callstack 0
   785                           
   786                           ; Initialize objects allocated to BANK1 (7 bytes)
   787                           ; load TBLPTR registers with __pidataBANK1
   788  005200  0E4A               	movlw	low __pidataBANK1
   789  005202  6EF6               	movwf	tblptrl,c
   790  005204  0E57               	movlw	high __pidataBANK1
   791  005206  6EF7               	movwf	tblptrh,c
   792  005208  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   793  00520A  6EF8               	movwf	tblptru,c
   794  00520C  EE01  F0E1         	lfsr	0,__pdataBANK1
   795  005210  EE10 F007          	lfsr	1,7
   796  005214                     copy_data0:
   797  005214  0009               	tblrd		*+
   798  005216  CFF5 FFEE          	movff	tablat,postinc0
   799  00521A  50E5               	movf	postdec1,w,c
   800  00521C  50E1               	movf	fsr1l,w,c
   801  00521E  E1FA               	bnz	copy_data0
   802                           
   803                           ; Clear objects allocated to BANK4 (134 bytes)
   804  005220  EE04  F000         	lfsr	0,__pbssBANK4
   805  005224  0E86               	movlw	134
   806  005226                     clear_0:
   807  005226  6AEE               	clrf	postinc0,c
   808  005228  06E8               	decf	wreg,f,c
   809  00522A  E1FD               	bnz	clear_0
   810                           
   811                           ; Clear objects allocated to BANK3 (128 bytes)
   812  00522C  EE03  F000         	lfsr	0,__pbssBANK3
   813  005230  0E80               	movlw	128
   814  005232                     clear_1:
   815  005232  6AEE               	clrf	postinc0,c
   816  005234  06E8               	decf	wreg,f,c
   817  005236  E1FD               	bnz	clear_1
   818                           
   819                           ; Clear objects allocated to BANK2 (134 bytes)
   820  005238  EE02  F000         	lfsr	0,__pbssBANK2
   821  00523C  0E86               	movlw	134
   822  00523E                     clear_2:
   823  00523E  6AEE               	clrf	postinc0,c
   824  005240  06E8               	decf	wreg,f,c
   825  005242  E1FD               	bnz	clear_2
   826                           
   827                           ; Clear objects allocated to BANK1 (34 bytes)
   828  005244  EE01  F0BF         	lfsr	0,__pbssBANK1
   829  005248  0E22               	movlw	34
   830  00524A                     clear_3:
   831  00524A  6AEE               	clrf	postinc0,c
   832  00524C  06E8               	decf	wreg,f,c
   833  00524E  E1FD               	bnz	clear_3
   834                           
   835                           ; Clear objects allocated to BANK0 (9 bytes)
   836  005250  EE00  F0F7         	lfsr	0,__pbssBANK0
   837  005254  0E09               	movlw	9
   838  005256                     clear_4:
   839  005256  6AEE               	clrf	postinc0,c
   840  005258  06E8               	decf	wreg,f,c
   841  00525A  E1FD               	bnz	clear_4
   842                           
   843                           ; Clear objects allocated to COMRAM (4 bytes)
   844  00525C  6A79               	clrf	(__pbssCOMRAM+3)& (0+255),c
   845  00525E  6A78               	clrf	(__pbssCOMRAM+2)& (0+255),c
   846  005260  6A77               	clrf	(__pbssCOMRAM+1)& (0+255),c
   847  005262  6A76               	clrf	__pbssCOMRAM& (0+255),c
   848  005264                     end_of_initialization:
   849                           	callstack 0
   850  005264                     __end_of__initialization:
   851                           	callstack 0
   852  005264  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   853  005266  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   854  005268  0E00               	movlw	low (__Lmediumconst shr (0+16))
   855  00526A  6EF8               	movwf	tblptru,c
   856  00526C  0100               	movlb	0
   857  00526E  EFEC  F003         	goto	_main	;jump to C main() function
   858                           
   859                           	psect	bssCOMRAM
   860  000076                     __pbssCOMRAM:
   861                           	callstack 0
   862  000076                     _prec:
   863                           	callstack 0
   864  000076                     	ds	2
   865  000078                     _flags:
   866                           	callstack 0
   867  000078                     	ds	2
   868                           
   869                           	psect	bssBANK0
   870  0000F7                     __pbssBANK0:
   871                           	callstack 0
   872  0000F7                     _nout:
   873                           	callstack 0
   874  0000F7                     	ds	2
   875  0000F9                     _width:
   876                           	callstack 0
   877  0000F9                     	ds	2
   878  0000FB                     _TxRun:
   879                           	callstack 0
   880  0000FB                     	ds	2
   881  0000FD                     _FatFs:
   882                           	callstack 0
   883  0000FD                     	ds	2
   884  0000FF                     _CardType:
   885                           	callstack 0
   886  0000FF                     	ds	1
   887                           
   888                           	psect	bssBANK1
   889  0001BF                     __pbssBANK1:
   890                           	callstack 0
   891  0001BF                     _init_flag:
   892                           	callstack 0
   893  0001BF                     	ds	2
   894  0001C1                     _dbuf:
   895                           	callstack 0
   896  0001C1                     	ds	32
   897                           
   898                           	psect	dataBANK1
   899  0001E1                     __pdataBANK1:
   900                           	callstack 0
   901  0001E1                     stoa@F1141:
   902                           	callstack 0
   903  0001E1                     	ds	7
   904                           
   905                           	psect	bssBANK2
   906  000200                     __pbssBANK2:
   907                           	callstack 0
   908  000200                     _RxFifo:
   909                           	callstack 0
   910  000200                     	ds	134
   911                           
   912                           	psect	bssBANK3
   913  000300                     __pbssBANK3:
   914                           	callstack 0
   915  000300                     _Line:
   916                           	callstack 0
   917  000300                     	ds	128
   918                           
   919                           	psect	bssBANK4
   920  000400                     __pbssBANK4:
   921                           	callstack 0
   922  000400                     _TxFifo:
   923                           	callstack 0
   924  000400                     	ds	134
   925                           
   926                           	psect	cstackBANK1
   927  000100                     __pcstackBANK1:
   928                           	callstack 0
   929  000100                     ??_pf_open:
   930  000100                     pf_opendir@dir:
   931                           	callstack 0
   932  000100                     pf_readdir@dir:
   933                           	callstack 0
   934                           
   935                           ; 32 bytes @ 0x0
   936  000100                     	ds	22
   937  000116                     pf_open@sp:
   938                           	callstack 0
   939                           
   940                           ; 12 bytes @ 0x16
   941  000116                     	ds	10
   942  000120                     pf_opendir@sp:
   943                           	callstack 0
   944  000120                     pf_readdir@sp:
   945                           	callstack 0
   946                           
   947                           ; 12 bytes @ 0x20
   948  000120                     	ds	2
   949  000122                     pf_open@dir:
   950                           	callstack 0
   951                           
   952                           ; 32 bytes @ 0x22
   953  000122                     	ds	10
   954  00012C                     pf_opendir@fs:
   955                           	callstack 0
   956  00012C                     pf_readdir@fs:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x2C
   960  00012C                     	ds	2
   961  00012E                     pf_opendir@res:
   962                           	callstack 0
   963  00012E                     pf_readdir@res:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x2E
   967  00012E                     	ds	20
   968  000142                     pf_open@res:
   969                           	callstack 0
   970                           
   971                           ; 1 bytes @ 0x42
   972  000142                     	ds	1
   973  000143                     pf_open@fs:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x43
   977  000143                     	ds	2
   978  000145                     pf_open@dj:
   979                           	callstack 0
   980                           
   981                           ; 16 bytes @ 0x45
   982  000145                     	ds	16
   983  000155                     ??_main:
   984                           
   985                           ; 1 bytes @ 0x55
   986  000155                     	ds	2
   987  000157                     main@upmode:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x57
   991  000157                     	ds	1
   992  000158                     main@num_temp:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x58
   996  000158                     	ds	2
   997  00015A                     main@ofs:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x5A
  1001  00015A                     	ds	2
  1002  00015C                     main@p2:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x5C
  1006  00015C                     	ds	4
  1007  000160                     main@count:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x60
  1011  000160                     	ds	2
  1012  000162                     main@s3:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x62
  1016  000162                     	ds	2
  1017  000164                     main@p1:
  1018                           	callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x64
  1021  000164                     	ds	4
  1022  000168                     main@s2:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x68
  1026  000168                     	ds	2
  1027  00016A                     main@fno:
  1028                           	callstack 0
  1029                           
  1030                           ; 22 bytes @ 0x6A
  1031  00016A                     	ds	22
  1032  000180                     main@dir:
  1033                           	callstack 0
  1034                           
  1035                           ; 16 bytes @ 0x80
  1036  000180                     	ds	16
  1037  000190                     main@s1:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x90
  1041  000190                     	ds	2
  1042  000192                     main@ptr:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x92
  1046  000192                     	ds	2
  1047  000194                     main@res:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x94
  1051  000194                     	ds	1
  1052  000195                     main@fs:
  1053                           	callstack 0
  1054                           
  1055                           ; 42 bytes @ 0x95
  1056  000195                     	ds	42
  1057                           
  1058                           	psect	cstackBANK0
  1059  000080                     __pcstackBANK0:
  1060                           	callstack 0
  1061  000080                     ?_vfprintf:
  1062                           	callstack 0
  1063  000080                     vfprintf@fp:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x0
  1067  000080                     	ds	2
  1068  000082                     vfprintf@fmt:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x2
  1072  000082                     	ds	2
  1073  000084                     vfprintf@ap:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x4
  1077  000084                     	ds	2
  1078  000086                     ?_printf:
  1079                           	callstack 0
  1080  000086                     printf@fmt:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x6
  1084  000086                     	ds	10
  1085  000090                     put_rc@i:
  1086                           	callstack 0
  1087  000090                     put_drc@res:
  1088                           	callstack 0
  1089  000090                     uart_gets@buff:
  1090                           	callstack 0
  1091  000090                     put_dump@buff:
  1092                           	callstack 0
  1093  000090                     disk_readp@buff:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x10
  1097  000090                     	ds	1
  1098  000091                     put_rc@rc:
  1099                           	callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x11
  1102  000091                     	ds	1
  1103  000092                     put_rc@p:
  1104                           	callstack 0
  1105  000092                     uart_gets@len:
  1106                           	callstack 0
  1107  000092                     put_dump@addr:
  1108                           	callstack 0
  1109  000092                     disk_readp@sector:
  1110                           	callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x12
  1113  000092                     	ds	2
  1114  000094                     ??_uart_gets:
  1115                           
  1116                           ; 1 bytes @ 0x14
  1117  000094                     	ds	2
  1118  000096                     put_dump@len:
  1119                           	callstack 0
  1120  000096                     disk_readp@offset:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x16
  1124  000096                     	ds	2
  1125  000098                     put_dump@width:
  1126                           	callstack 0
  1127  000098                     disk_readp@count:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x18
  1131  000098                     	ds	1
  1132  000099                     uart_gets@i:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x19
  1136  000099                     	ds	1
  1137  00009A                     ??_disk_readp:
  1138  00009A                     ??_put_dump:
  1139                           
  1140                           ; 1 bytes @ 0x1A
  1141  00009A                     	ds	1
  1142  00009B                     uart_gets@c:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x1B
  1146  00009B                     	ds	1
  1147  00009C                     disk_readp@res:
  1148                           	callstack 0
  1149  00009C                     put_dump@sp:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x1C
  1153  00009C                     	ds	1
  1154  00009D                     disk_readp@rc:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x1D
  1158  00009D                     	ds	1
  1159  00009E                     put_dump@lp:
  1160                           	callstack 0
  1161  00009E                     disk_readp@bc:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x1E
  1165  00009E                     	ds	2
  1166  0000A0                     ?_get_fat:
  1167                           	callstack 0
  1168  0000A0                     check_fs@buf:
  1169                           	callstack 0
  1170  0000A0                     _put_dump$1127:
  1171                           	callstack 0
  1172  0000A0                     get_fat@clst:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x20
  1176  0000A0                     	ds	2
  1177  0000A2                     put_dump@bp:
  1178                           	callstack 0
  1179  0000A2                     check_fs@sect:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x22
  1183  0000A2                     	ds	2
  1184  0000A4                     ??_get_fat:
  1185  0000A4                     put_dump@i:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x24
  1189  0000A4                     	ds	2
  1190  0000A6                     ??_check_fs:
  1191                           
  1192                           ; 1 bytes @ 0x26
  1193  0000A6                     	ds	4
  1194  0000AA                     pf_mount@fs:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x2A
  1198  0000AA                     	ds	2
  1199  0000AC                     ??_pf_mount:
  1200                           
  1201                           ; 1 bytes @ 0x2C
  1202  0000AC                     	ds	14
  1203  0000BA                     get_fat@buf:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x3A
  1207  0000BA                     	ds	4
  1208  0000BE                     get_fat@fs:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x3E
  1212  0000BE                     	ds	2
  1213  0000C0                     dir_next@dj:
  1214                           	callstack 0
  1215  0000C0                     pf_read@buff:
  1216                           	callstack 0
  1217  0000C0                     pf_lseek@ofs:
  1218                           	callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x40
  1221  0000C0                     	ds	2
  1222  0000C2                     ??_dir_next:
  1223  0000C2                     pf_read@btr:
  1224                           	callstack 0
  1225  0000C2                     pf_mount@buf:
  1226                           	callstack 0
  1227                           
  1228                           ; 36 bytes @ 0x42
  1229  0000C2                     	ds	2
  1230  0000C4                     ??_pf_lseek:
  1231  0000C4                     pf_read@br:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x44
  1235  0000C4                     	ds	2
  1236  0000C6                     ??_pf_read:
  1237                           
  1238                           ; 1 bytes @ 0x46
  1239  0000C6                     	ds	3
  1240  0000C9                     dir_next@fs:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x49
  1244  0000C9                     	ds	2
  1245  0000CB                     dir_next@clst:
  1246                           	callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x4B
  1249  0000CB                     	ds	3
  1250  0000CE                     pf_read@dr:
  1251                           	callstack 0
  1252                           
  1253                           ; 1 bytes @ 0x4E
  1254  0000CE                     	ds	1
  1255  0000CF                     dir_next@i:
  1256                           	callstack 0
  1257  0000CF                     pf_read@rbuff:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x4F
  1261  0000CF                     	ds	2
  1262  0000D1                     dir_find@dj:
  1263                           	callstack 0
  1264  0000D1                     dir_read@dj:
  1265                           	callstack 0
  1266  0000D1                     _pf_read$894:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x51
  1270  0000D1                     	ds	2
  1271  0000D3                     dir_find@dir:
  1272                           	callstack 0
  1273  0000D3                     dir_read@dir:
  1274                           	callstack 0
  1275  0000D3                     pf_read@sect:
  1276                           	callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x53
  1279  0000D3                     	ds	2
  1280  0000D5                     ??_dir_find:
  1281  0000D5                     ??_dir_read:
  1282  0000D5                     pf_lseek@sect:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x55
  1286  0000D5                     	ds	2
  1287  0000D7                     dir_find@c:
  1288                           	callstack 0
  1289  0000D7                     pf_read@remain:
  1290                           	callstack 0
  1291                           
  1292                           ; 4 bytes @ 0x57
  1293  0000D7                     	ds	1
  1294  0000D8                     dir_find@res:
  1295                           	callstack 0
  1296                           
  1297                           ; 1 bytes @ 0x58
  1298  0000D8                     	ds	1
  1299  0000D9                     dir_read@a:
  1300                           	callstack 0
  1301  0000D9                     follow_path@dj:
  1302                           	callstack 0
  1303  0000D9                     pf_lseek@ifptr:
  1304                           	callstack 0
  1305                           
  1306                           ; 4 bytes @ 0x59
  1307  0000D9                     	ds	1
  1308  0000DA                     dir_read@c:
  1309                           	callstack 0
  1310                           
  1311                           ; 1 bytes @ 0x5A
  1312  0000DA                     	ds	1
  1313  0000DB                     dir_read@res:
  1314                           	callstack 0
  1315  0000DB                     follow_path@dir:
  1316                           	callstack 0
  1317  0000DB                     pf_read@clst:
  1318                           	callstack 0
  1319                           
  1320                           ; 4 bytes @ 0x5B
  1321  0000DB                     	ds	1
  1322  0000DC                     pf_readdir@dj:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x5C
  1326  0000DC                     	ds	1
  1327  0000DD                     follow_path@path:
  1328                           	callstack 0
  1329  0000DD                     pf_lseek@bcs:
  1330                           	callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x5D
  1333  0000DD                     	ds	1
  1334  0000DE                     pf_readdir@fno:
  1335                           	callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x5E
  1338  0000DE                     	ds	1
  1339  0000DF                     pf_read@cs:
  1340                           	callstack 0
  1341                           
  1342                           ; 1 bytes @ 0x5F
  1343  0000DF                     	ds	1
  1344  0000E0                     follow_path@res:
  1345                           	callstack 0
  1346  0000E0                     pf_read@rcnt:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x60
  1350  0000E0                     	ds	1
  1351  0000E1                     pf_open@path:
  1352                           	callstack 0
  1353  0000E1                     pf_opendir@dj:
  1354                           	callstack 0
  1355  0000E1                     pf_lseek@clst:
  1356                           	callstack 0
  1357                           
  1358                           ; 4 bytes @ 0x61
  1359  0000E1                     	ds	1
  1360  0000E2                     pf_read@fs:
  1361                           	callstack 0
  1362                           
  1363                           ; 2 bytes @ 0x62
  1364  0000E2                     	ds	1
  1365  0000E3                     pf_opendir@path:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x63
  1369  0000E3                     	ds	2
  1370  0000E5                     pf_lseek@fs:
  1371                           	callstack 0
  1372                           
  1373                           ; 2 bytes @ 0x65
  1374  0000E5                     	ds	1
  1375  0000E6                     pf_mount@tsect:
  1376                           	callstack 0
  1377                           
  1378                           ; 4 bytes @ 0x66
  1379  0000E6                     	ds	4
  1380  0000EA                     pf_mount@mclst:
  1381                           	callstack 0
  1382                           
  1383                           ; 4 bytes @ 0x6A
  1384  0000EA                     	ds	4
  1385  0000EE                     pf_mount@bsect:
  1386                           	callstack 0
  1387                           
  1388                           ; 4 bytes @ 0x6E
  1389  0000EE                     	ds	4
  1390  0000F2                     pf_mount@fsize:
  1391                           	callstack 0
  1392                           
  1393                           ; 4 bytes @ 0x72
  1394  0000F2                     	ds	4
  1395  0000F6                     pf_mount@fmt:
  1396                           	callstack 0
  1397                           
  1398                           ; 1 bytes @ 0x76
  1399  0000F6                     	ds	1
  1400                           
  1401                           	psect	cstackCOMRAM
  1402  000001                     __pcstackCOMRAM:
  1403                           	callstack 0
  1404  000001                     ??_isr_high:
  1405  000001                     
  1406                           ; 2 bytes @ 0x0
  1407  000001                     	ds	2
  1408  000003                     isr_high@d:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x2
  1412  000003                     	ds	1
  1413  000004                     isr_high@i:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x3
  1417  000004                     	ds	2
  1418  000006                     ?_strlen:
  1419                           	callstack 0
  1420  000006                     ?_isupper:
  1421                           	callstack 0
  1422  000006                     ?_isalpha:
  1423                           	callstack 0
  1424  000006                     ?_isdigit:
  1425                           	callstack 0
  1426  000006                     ?_strncmp:
  1427                           	callstack 0
  1428  000006                     ?_isspace:
  1429                           	callstack 0
  1430  000006                     ?_islower:
  1431                           	callstack 0
  1432  000006                     ?_mem_cmp:
  1433                           	callstack 0
  1434  000006                     ?___wmul:
  1435                           	callstack 0
  1436  000006                     ?_get_clust:
  1437                           	callstack 0
  1438  000006                     ?___lmul:
  1439                           	callstack 0
  1440  000006                     ?___lldiv:
  1441                           	callstack 0
  1442  000006                     ?___aodiv:
  1443                           	callstack 0
  1444  000006                     ?___aomod:
  1445                           	callstack 0
  1446  000006                     ?___lodiv:
  1447                           	callstack 0
  1448  000006                     ?___lomod:
  1449                           	callstack 0
  1450  000006                     pwm_Init@period:
  1451                           	callstack 0
  1452  000006                     putch@byte:
  1453                           	callstack 0
  1454  000006                     xmit_spi@d:
  1455                           	callstack 0
  1456  000006                     pwm_setDuty@dutycycle:
  1457                           	callstack 0
  1458  000006                     mem_set@dst:
  1459                           	callstack 0
  1460  000006                     mem_cmp@dst:
  1461                           	callstack 0
  1462  000006                     get_clust@dir:
  1463                           	callstack 0
  1464  000006                     get_fileinfo@dj:
  1465                           	callstack 0
  1466  000006                     ___wmul@multiplier:
  1467                           	callstack 0
  1468  000006                     memset@dest:
  1469                           	callstack 0
  1470  000006                     isalpha@c:
  1471                           	callstack 0
  1472  000006                     isdigit@c:
  1473                           	callstack 0
  1474  000006                     isspace@c:
  1475                           	callstack 0
  1476  000006                     isupper@c:
  1477                           	callstack 0
  1478  000006                     strlen@s:
  1479                           	callstack 0
  1480  000006                     strncmp@_l:
  1481                           	callstack 0
  1482  000006                     islower@c:
  1483                           	callstack 0
  1484  000006                     ___lmul@multiplier:
  1485                           	callstack 0
  1486  000006                     ___lldiv@dividend:
  1487                           	callstack 0
  1488  000006                     ___aodiv@dividend:
  1489                           	callstack 0
  1490  000006                     ___aomod@dividend:
  1491                           	callstack 0
  1492  000006                     ___lodiv@dividend:
  1493                           	callstack 0
  1494  000006                     ___lomod@dividend:
  1495                           	callstack 0
  1496                           
  1497                           ; 8 bytes @ 0x5
  1498  000006                     	ds	1
  1499  000007                     fputc@c:
  1500                           	callstack 0
  1501  000007                     send_cmd2@arg:
  1502                           	callstack 0
  1503                           
  1504                           ; 4 bytes @ 0x6
  1505  000007                     	ds	1
  1506  000008                     ??_isupper:
  1507  000008                     ??_isalpha:
  1508  000008                     ??_isdigit:
  1509  000008                     ??_isspace:
  1510  000008                     ??_islower:
  1511  000008                     ??_pwm_setDuty:
  1512  000008                     mem_set@val:
  1513                           	callstack 0
  1514  000008                     mem_cmp@src:
  1515                           	callstack 0
  1516  000008                     get_fileinfo@dir:
  1517                           	callstack 0
  1518  000008                     ___wmul@multiplicand:
  1519                           	callstack 0
  1520  000008                     memset@c:
  1521                           	callstack 0
  1522  000008                     strlen@a:
  1523                           	callstack 0
  1524  000008                     strncmp@_r:
  1525                           	callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x7
  1528  000008                     	ds	1
  1529  000009                     fputc@fp:
  1530                           	callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x8
  1533  000009                     	ds	1
  1534  00000A                     ??_get_clust:
  1535  00000A                     mem_set@cnt:
  1536                           	callstack 0
  1537  00000A                     mem_cmp@cnt:
  1538                           	callstack 0
  1539  00000A                     get_fileinfo@fno:
  1540                           	callstack 0
  1541  00000A                     ___wmul@product:
  1542                           	callstack 0
  1543  00000A                     memset@n:
  1544                           	callstack 0
  1545  00000A                     strncmp@n:
  1546                           	callstack 0
  1547  00000A                     ___lmul@multiplicand:
  1548                           	callstack 0
  1549  00000A                     ___lldiv@divisor:
  1550                           	callstack 0
  1551                           
  1552                           ; 4 bytes @ 0x9
  1553  00000A                     	ds	1
  1554  00000B                     ??_fputc:
  1555  00000B                     send_cmd2@res:
  1556                           	callstack 0
  1557                           
  1558                           ; 1 bytes @ 0xA
  1559  00000B                     	ds	1
  1560  00000C                     ??_memset:
  1561  00000C                     ??_strncmp:
  1562  00000C                     ??_mem_cmp:
  1563  00000C                     ??_get_fileinfo:
  1564  00000C                     ?_toupper:
  1565                           	callstack 0
  1566  00000C                     send_cmd2@cmd:
  1567                           	callstack 0
  1568  00000C                     _isspace$1869:
  1569                           	callstack 0
  1570  00000C                     mem_set@d:
  1571                           	callstack 0
  1572  00000C                     toupper@c:
  1573                           	callstack 0
  1574                           
  1575                           ; 2 bytes @ 0xB
  1576  00000C                     	ds	1
  1577  00000D                     ?_atoi:
  1578                           	callstack 0
  1579  00000D                     send_cmd2@n:
  1580                           	callstack 0
  1581  00000D                     atoi@s:
  1582                           	callstack 0
  1583  00000D                     strncmp@l:
  1584                           	callstack 0
  1585                           
  1586                           ; 2 bytes @ 0xC
  1587  00000D                     	ds	1
  1588  00000E                     ??_toupper:
  1589  00000E                     mem_cmp@d:
  1590                           	callstack 0
  1591  00000E                     create_name@dj:
  1592                           	callstack 0
  1593  00000E                     memset@k:
  1594                           	callstack 0
  1595  00000E                     send_cmd@arg:
  1596                           	callstack 0
  1597  00000E                     ___lmul@product:
  1598                           	callstack 0
  1599  00000E                     ___lldiv@quotient:
  1600                           	callstack 0
  1601  00000E                     ___aodiv@divisor:
  1602                           	callstack 0
  1603  00000E                     ___aomod@divisor:
  1604                           	callstack 0
  1605  00000E                     ___lodiv@divisor:
  1606                           	callstack 0
  1607  00000E                     ___lomod@divisor:
  1608                           	callstack 0
  1609                           
  1610                           ; 8 bytes @ 0xD
  1611  00000E                     	ds	1
  1612  00000F                     ??_atoi:
  1613  00000F                     strncmp@r:
  1614                           	callstack 0
  1615                           
  1616                           ; 2 bytes @ 0xE
  1617  00000F                     	ds	1
  1618  000010                     ?_stoa:
  1619                           	callstack 0
  1620  000010                     mem_cmp@s:
  1621                           	callstack 0
  1622  000010                     create_name@path:
  1623                           	callstack 0
  1624  000010                     memset@s:
  1625                           	callstack 0
  1626  000010                     stoa@fp:
  1627                           	callstack 0
  1628  000010                     fputs@s:
  1629                           	callstack 0
  1630                           
  1631                           ; 2 bytes @ 0xF
  1632  000010                     	ds	2
  1633  000012                     ??_create_name:
  1634  000012                     ?_xatoi:
  1635                           	callstack 0
  1636  000012                     ?_clust2sect:
  1637                           	callstack 0
  1638  000012                     send_cmd@n:
  1639                           	callstack 0
  1640  000012                     ___lldiv@counter:
  1641                           	callstack 0
  1642  000012                     mem_cmp@r:
  1643                           	callstack 0
  1644  000012                     xatoi@str:
  1645                           	callstack 0
  1646  000012                     stoa@s:
  1647                           	callstack 0
  1648  000012                     fputs@fp:
  1649                           	callstack 0
  1650  000012                     _toupper$1924:
  1651                           	callstack 0
  1652  000012                     clust2sect@clst:
  1653                           	callstack 0
  1654  000012                     get_clust@clst:
  1655                           	callstack 0
  1656                           
  1657                           ; 4 bytes @ 0x11
  1658  000012                     	ds	1
  1659  000013                     send_cmd@cmd:
  1660                           	callstack 0
  1661  000013                     atoi@neg:
  1662                           	callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x12
  1665  000013                     	ds	1
  1666  000014                     ??_stoa:
  1667  000014                     send_cmd@res:
  1668                           	callstack 0
  1669  000014                     fputs@c:
  1670                           	callstack 0
  1671  000014                     xatoi@res:
  1672                           	callstack 0
  1673                           
  1674                           ; 2 bytes @ 0x13
  1675  000014                     	ds	1
  1676  000015                     ??_disk_initialize:
  1677  000015                     _atoi$1842:
  1678                           	callstack 0
  1679  000015                     fputs@i:
  1680                           	callstack 0
  1681  000015                     stoa@nuls:
  1682                           	callstack 0
  1683                           
  1684                           ; 7 bytes @ 0x14
  1685  000015                     	ds	1
  1686  000016                     ??_xatoi:
  1687  000016                     ??_clust2sect:
  1688  000016                     ___aodiv@counter:
  1689                           	callstack 0
  1690  000016                     ___aomod@counter:
  1691                           	callstack 0
  1692  000016                     ___lomod@counter:
  1693                           	callstack 0
  1694  000016                     create_name@p:
  1695                           	callstack 0
  1696  000016                     disk_initialize@ocr:
  1697                           	callstack 0
  1698  000016                     ___lodiv@quotient:
  1699                           	callstack 0
  1700                           
  1701                           ; 8 bytes @ 0x15
  1702  000016                     	ds	1
  1703  000017                     ?_pad:
  1704                           	callstack 0
  1705  000017                     ___aodiv@sign:
  1706                           	callstack 0
  1707  000017                     ___aomod@sign:
  1708                           	callstack 0
  1709  000017                     pad@fp:
  1710                           	callstack 0
  1711  000017                     _atoi$1844:
  1712                           	callstack 0
  1713                           
  1714                           ; 2 bytes @ 0x16
  1715  000017                     	ds	1
  1716  000018                     ?_abs:
  1717                           	callstack 0
  1718  000018                     create_name@ni:
  1719                           	callstack 0
  1720  000018                     xatoi@s:
  1721                           	callstack 0
  1722  000018                     abs@a:
  1723                           	callstack 0
  1724  000018                     ___aodiv@quotient:
  1725                           	callstack 0
  1726                           
  1727                           ; 8 bytes @ 0x17
  1728  000018                     	ds	1
  1729  000019                     create_name@si:
  1730                           	callstack 0
  1731  000019                     xatoi@r:
  1732                           	callstack 0
  1733  000019                     _atoi$1843:
  1734                           	callstack 0
  1735  000019                     pad@buf:
  1736                           	callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x18
  1739  000019                     	ds	1
  1740  00001A                     ??_abs:
  1741  00001A                     create_name@sfn:
  1742                           	callstack 0
  1743  00001A                     _disk_initialize$1200:
  1744                           	callstack 0
  1745  00001A                     atoi@n:
  1746                           	callstack 0
  1747  00001A                     xatoi@val:
  1748                           	callstack 0
  1749                           
  1750                           ; 4 bytes @ 0x19
  1751  00001A                     	ds	1
  1752  00001B                     clust2sect@fs:
  1753                           	callstack 0
  1754  00001B                     pad@p:
  1755                           	callstack 0
  1756                           
  1757                           ; 2 bytes @ 0x1A
  1758  00001B                     	ds	1
  1759  00001C                     create_name@i:
  1760                           	callstack 0
  1761  00001C                     disk_initialize@cmd:
  1762                           	callstack 0
  1763  00001C                     stoa@i:
  1764                           	callstack 0
  1765                           
  1766                           ; 2 bytes @ 0x1B
  1767  00001C                     	ds	1
  1768  00001D                     ??_pad:
  1769  00001D                     create_name@c:
  1770                           	callstack 0
  1771  00001D                     disk_initialize@ty:
  1772                           	callstack 0
  1773  00001D                     dir_rewind@dj:
  1774                           	callstack 0
  1775                           
  1776                           ; 2 bytes @ 0x1C
  1777  00001D                     	ds	1
  1778  00001E                     xatoi@c:
  1779                           	callstack 0
  1780  00001E                     ___lodiv@counter:
  1781                           	callstack 0
  1782  00001E                     disk_initialize@tmr:
  1783                           	callstack 0
  1784  00001E                     pad@i:
  1785                           	callstack 0
  1786  00001E                     stoa@w:
  1787                           	callstack 0
  1788                           
  1789                           ; 2 bytes @ 0x1D
  1790  00001E                     	ds	1
  1791  00001F                     
  1792                           ; 1 bytes @ 0x1E
  1793  00001F                     	ds	1
  1794  000020                     disk_initialize@n:
  1795                           	callstack 0
  1796  000020                     pad@w:
  1797                           	callstack 0
  1798  000020                     stoa@cp:
  1799                           	callstack 0
  1800                           
  1801                           ; 2 bytes @ 0x1F
  1802  000020                     	ds	2
  1803  000022                     ?_dtoa:
  1804                           	callstack 0
  1805  000022                     ?_utoa:
  1806                           	callstack 0
  1807  000022                     ?_xtoa:
  1808                           	callstack 0
  1809  000022                     dtoa@fp:
  1810                           	callstack 0
  1811  000022                     stoa@p:
  1812                           	callstack 0
  1813  000022                     utoa@fp:
  1814                           	callstack 0
  1815  000022                     xtoa@fp:
  1816                           	callstack 0
  1817                           
  1818                           ; 2 bytes @ 0x21
  1819  000022                     	ds	1
  1820  000023                     _dir_rewind$703:
  1821                           	callstack 0
  1822                           
  1823                           ; 4 bytes @ 0x22
  1824  000023                     	ds	1
  1825  000024                     stoa@l:
  1826                           	callstack 0
  1827  000024                     dtoa@d:
  1828                           	callstack 0
  1829  000024                     utoa@d:
  1830                           	callstack 0
  1831  000024                     xtoa@d:
  1832                           	callstack 0
  1833                           
  1834                           ; 8 bytes @ 0x23
  1835  000024                     	ds	2
  1836  000026                     get_fileinfo@p:
  1837                           	callstack 0
  1838                           
  1839                           ; 2 bytes @ 0x25
  1840  000026                     	ds	1
  1841  000027                     dir_rewind@fs:
  1842                           	callstack 0
  1843                           
  1844                           ; 2 bytes @ 0x26
  1845  000027                     	ds	1
  1846  000028                     get_fileinfo@c:
  1847                           	callstack 0
  1848                           
  1849                           ; 1 bytes @ 0x27
  1850  000028                     	ds	1
  1851  000029                     get_fileinfo@i:
  1852                           	callstack 0
  1853  000029                     dir_rewind@clst:
  1854                           	callstack 0
  1855                           
  1856                           ; 4 bytes @ 0x28
  1857  000029                     	ds	3
  1858  00002C                     ??_dtoa:
  1859  00002C                     ??_utoa:
  1860  00002C                     xtoa@x:
  1861                           	callstack 0
  1862                           
  1863                           ; 1 bytes @ 0x2B
  1864  00002C                     	ds	1
  1865  00002D                     ??_xtoa:
  1866                           
  1867                           ; 1 bytes @ 0x2C
  1868  00002D                     	ds	7
  1869  000034                     _dtoa$1753:
  1870                           	callstack 0
  1871  000034                     utoa@p:
  1872                           	callstack 0
  1873                           
  1874                           ; 2 bytes @ 0x33
  1875  000034                     	ds	1
  1876  000035                     _xtoa$1781:
  1877                           	callstack 0
  1878                           
  1879                           ; 2 bytes @ 0x34
  1880  000035                     	ds	1
  1881  000036                     dtoa@p:
  1882                           	callstack 0
  1883  000036                     utoa@w:
  1884                           	callstack 0
  1885                           
  1886                           ; 2 bytes @ 0x35
  1887  000036                     	ds	1
  1888  000037                     _xtoa$1782:
  1889                           	callstack 0
  1890                           
  1891                           ; 2 bytes @ 0x36
  1892  000037                     	ds	1
  1893  000038                     dtoa@w:
  1894                           	callstack 0
  1895  000038                     utoa@n:
  1896                           	callstack 0
  1897                           
  1898                           ; 8 bytes @ 0x37
  1899  000038                     	ds	1
  1900  000039                     xtoa@p:
  1901                           	callstack 0
  1902                           
  1903                           ; 2 bytes @ 0x38
  1904  000039                     	ds	1
  1905  00003A                     dtoa@s:
  1906                           	callstack 0
  1907                           
  1908                           ; 2 bytes @ 0x39
  1909  00003A                     	ds	1
  1910  00003B                     xtoa@w:
  1911                           	callstack 0
  1912                           
  1913                           ; 2 bytes @ 0x3A
  1914  00003B                     	ds	1
  1915  00003C                     dtoa@n:
  1916                           	callstack 0
  1917                           
  1918                           ; 8 bytes @ 0x3B
  1919  00003C                     	ds	1
  1920  00003D                     xtoa@n:
  1921                           	callstack 0
  1922                           
  1923                           ; 8 bytes @ 0x3C
  1924  00003D                     	ds	3
  1925  000040                     utoa@i:
  1926                           	callstack 0
  1927                           
  1928                           ; 2 bytes @ 0x3F
  1929  000040                     	ds	4
  1930  000044                     dtoa@i:
  1931                           	callstack 0
  1932                           
  1933                           ; 2 bytes @ 0x43
  1934  000044                     	ds	1
  1935  000045                     xtoa@i:
  1936                           	callstack 0
  1937                           
  1938                           ; 2 bytes @ 0x44
  1939  000045                     	ds	2
  1940  000047                     xtoa@c:
  1941                           	callstack 0
  1942                           
  1943                           ; 2 bytes @ 0x46
  1944  000047                     	ds	2
  1945  000049                     ?_vfpfcnvrt:
  1946                           	callstack 0
  1947  000049                     vfpfcnvrt@fp:
  1948                           	callstack 0
  1949                           
  1950                           ; 2 bytes @ 0x48
  1951  000049                     	ds	2
  1952  00004B                     vfpfcnvrt@fmt:
  1953                           	callstack 0
  1954                           
  1955                           ; 2 bytes @ 0x4A
  1956  00004B                     	ds	2
  1957  00004D                     vfpfcnvrt@ap:
  1958                           	callstack 0
  1959                           
  1960                           ; 2 bytes @ 0x4C
  1961  00004D                     	ds	2
  1962  00004F                     ??_vfpfcnvrt:
  1963                           
  1964                           ; 1 bytes @ 0x4E
  1965  00004F                     	ds	14
  1966  00005D                     vfpfcnvrt@cp:
  1967                           	callstack 0
  1968                           
  1969                           ; 2 bytes @ 0x5C
  1970  00005D                     	ds	2
  1971  00005F                     _vfpfcnvrt$1796:
  1972                           	callstack 0
  1973                           
  1974                           ; 2 bytes @ 0x5E
  1975  00005F                     	ds	2
  1976  000061                     vfpfcnvrt@ll:
  1977                           	callstack 0
  1978                           
  1979                           ; 8 bytes @ 0x60
  1980  000061                     	ds	8
  1981  000069                     vfpfcnvrt@c:
  1982                           	callstack 0
  1983                           
  1984                           ; 1 bytes @ 0x68
  1985  000069                     	ds	1
  1986  00006A                     vfpfcnvrt@llu:
  1987                           	callstack 0
  1988                           
  1989                           ; 8 bytes @ 0x69
  1990  00006A                     	ds	8
  1991  000072                     vfprintf@cfmt:
  1992                           	callstack 0
  1993                           
  1994                           ; 2 bytes @ 0x71
  1995  000072                     	ds	2
  1996  000074                     printf@ap:
  1997                           	callstack 0
  1998                           
  1999                           ; 2 bytes @ 0x73
  2000  000074                     	ds	2
  2001  000076                     
  2002                           ; 1 bytes @ 0x75
  2003 ;;
  2004 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2005 ;;
  2006 ;; *************** function _main *****************
  2007 ;; Defined at:
  2008 ;;		line 69 in file "main.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  count           2   96[BANK1 ] int 
  2013 ;;  num_temp        2   88[BANK1 ] unsigned int 
  2014 ;;  fs             42  149[BANK1 ] struct .
  2015 ;;  fno            22  106[BANK1 ] struct .
  2016 ;;  dir            16  128[BANK1 ] struct .
  2017 ;;  p1              4  100[BANK1 ] long 
  2018 ;;  p2              4   92[BANK1 ] long 
  2019 ;;  ptr             2  146[BANK1 ] PTR unsigned char 
  2020 ;;		 -> Line(128), 
  2021 ;;  s1              2  144[BANK1 ] unsigned int 
  2022 ;;  s2              2  104[BANK1 ] unsigned int 
  2023 ;;  s3              2   98[BANK1 ] unsigned int 
  2024 ;;  ofs             2   90[BANK1 ] unsigned int 
  2025 ;;  duty            2    0        unsigned short 
  2026 ;;  w               2    0        unsigned int 
  2027 ;;  cnt             2    0        unsigned int 
  2028 ;;  res             1  148[BANK1 ] unsigned char 
  2029 ;;  upmode          1   87[BANK1 ] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  2   95[None  ] int 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2039 ;;      Params:         0       0       0       0       0       0       0
  2040 ;;      Locals:         0       0     104       0       0       0       0
  2041 ;;      Temps:          0       0       2       0       0       0       0
  2042 ;;      Totals:         0       0     106       0       0       0       0
  2043 ;;Total ram usage:      106 bytes
  2044 ;; Hardware stack levels required when called: 15
  2045 ;; This function calls:
  2046 ;;		_disk_initialize
  2047 ;;		_disk_readp
  2048 ;;		_gpio_init
  2049 ;;		_pf_lseek
  2050 ;;		_pf_mount
  2051 ;;		_pf_open
  2052 ;;		_pf_opendir
  2053 ;;		_pf_read
  2054 ;;		_pf_readdir
  2055 ;;		_printf
  2056 ;;		_put_drc
  2057 ;;		_put_dump
  2058 ;;		_put_rc
  2059 ;;		_pwm_Init
  2060 ;;		_pwm_setDuty
  2061 ;;		_pwm_start
  2062 ;;		_pwm_stop
  2063 ;;		_uart_gets
  2064 ;;		_uart_init
  2065 ;;		_xatoi
  2066 ;; This function is called by:
  2067 ;;		Startup code after reset
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text0
  2072  0007D8                     __ptext0:
  2073                           	callstack 0
  2074  0007D8                     _main:
  2075                           	callstack 16
  2076  0007D8                     
  2077                           ;main.c: 80:     unsigned char upmode = 1;
  2078  0007D8  0E01               	movlw	1
  2079  0007DA  0101               	movlb	1	; () banked
  2080  0007DC  6F57               	movwf	main@upmode& (0+255),b
  2081  0007DE                     
  2082                           ; BSR set to: 1
  2083                           ;main.c: 84:     pwm_Init(62);
  2084  0007DE  0E3E               	movlw	62
  2085  0007E0  EC71  F02B         	call	_pwm_Init
  2086                           
  2087                           ;main.c: 85:  gpio_init();
  2088  0007E4  EC93  F02B         	call	_gpio_init	;wreg free
  2089  0007E8                     
  2090                           ;main.c: 88:  uart_init();
  2091  0007E8  EC9F  F029         	call	_uart_init	;wreg free
  2092  0007EC                     
  2093                           ;main.c: 90:     printf("\r\n\r\nPetit FatFs test monitor\r\n");
  2094  0007EC  0EA1               	movlw	low STR_3
  2095  0007EE  0100               	movlb	0	; () banked
  2096  0007F0  6F86               	movwf	printf@fmt& (0+255),b
  2097  0007F2  0E7C               	movlw	high STR_3
  2098  0007F4  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2099  0007F6  EC1D  F02B         	call	_printf	;wreg free
  2100  0007FA                     l7661:
  2101                           
  2102                           ;main.c: 105:         LATBbits.LB0 = PORTBbits.RB0 ^ 0x01;
  2103  0007FA  A081               	btfss	129,0,c	;volatile
  2104  0007FC  EF02  F004         	goto	u9741
  2105  000800  EF05  F004         	goto	u9740
  2106  000804                     u9741:
  2107  000804  808A               	bsf	138,0,c	;volatile
  2108  000806  EF06  F004         	goto	u9755
  2109  00080A                     u9740:
  2110  00080A  908A               	bcf	138,0,c	;volatile
  2111  00080C                     u9755:
  2112  00080C                     
  2113                           ;main.c: 107:         printf(">");
  2114  00080C  0EBD               	movlw	low STR_4
  2115  00080E  0100               	movlb	0	; () banked
  2116  000810  6F86               	movwf	printf@fmt& (0+255),b
  2117  000812  0E7D               	movlw	high STR_4
  2118  000814  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2119  000816  EC1D  F02B         	call	_printf	;wreg free
  2120  00081A                     
  2121                           ;main.c: 108:         uart_gets(Line, sizeof(Line));
  2122  00081A  0E00               	movlw	low _Line
  2123  00081C  0100               	movlb	0	; () banked
  2124  00081E  6F90               	movwf	uart_gets@buff& (0+255),b
  2125  000820  0E03               	movlw	high _Line
  2126  000822  6F91               	movwf	(uart_gets@buff+1)& (0+255),b
  2127  000824  0E00               	movlw	0
  2128  000826  6F93               	movwf	(uart_gets@len+1)& (0+255),b
  2129  000828  0E80               	movlw	128
  2130  00082A  6F92               	movwf	uart_gets@len& (0+255),b
  2131  00082C  ECF7  F021         	call	_uart_gets	;wreg free
  2132  000830                     
  2133                           ;main.c: 109:         printf("\r\n");
  2134  000830  0E1F               	movlw	low (STR_16+18)
  2135  000832  0100               	movlb	0	; () banked
  2136  000834  6F86               	movwf	printf@fmt& (0+255),b
  2137  000836  0E7D               	movlw	high (STR_16+18)
  2138  000838  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2139  00083A  EC1D  F02B         	call	_printf	;wreg free
  2140  00083E                     
  2141                           ;main.c: 111:         ptr = Line;
  2142  00083E  0E00               	movlw	low _Line
  2143  000840  0101               	movlb	1	; () banked
  2144  000842  6F92               	movwf	main@ptr& (0+255),b
  2145  000844  0E03               	movlw	high _Line
  2146  000846  6F93               	movwf	(main@ptr+1)& (0+255),b
  2147                           
  2148                           ;main.c: 113:   switch (*ptr++)
  2149  000848  EFAF  F007         	goto	l7855
  2150  00084C                     l7671:
  2151                           
  2152                           ; BSR set to: 1
  2153                           ;main.c: 119:                 printf("\tInitialize physical drive\r\n\t");
  2154  00084C  0EC0               	movlw	low STR_6
  2155  00084E  0100               	movlb	0	; () banked
  2156  000850  6F86               	movwf	printf@fmt& (0+255),b
  2157  000852  0E7C               	movlw	high STR_6
  2158  000854  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2159  000856  EC1D  F02B         	call	_printf	;wreg free
  2160  00085A                     l7673:
  2161                           
  2162                           ;main.c: 121:                 {;main.c: 122:         res = disk_initialize();
  2163  00085A  EC9D  F014         	call	_disk_initialize	;wreg free
  2164  00085E  0101               	movlb	1	; () banked
  2165  000860  6F94               	movwf	main@res& (0+255),b
  2166  000862                     
  2167                           ; BSR set to: 1
  2168                           ;main.c: 123:                 }while(res != 0);
  2169  000862  5194               	movf	main@res& (0+255),w,b
  2170  000864  A4D8               	btfss	status,2,c
  2171  000866  EF37  F004         	goto	u9761
  2172  00086A  EF39  F004         	goto	u9760
  2173  00086E                     u9761:
  2174  00086E  EF2D  F004         	goto	l7673
  2175  000872                     u9760:
  2176  000872                     
  2177                           ; BSR set to: 1
  2178                           ;main.c: 124:     put_drc(res);
  2179  000872  5194               	movf	main@res& (0+255),w,b
  2180  000874  EC57  F02B         	call	_put_drc
  2181                           
  2182                           ;main.c: 125:     break;
  2183  000878  EFFD  F003         	goto	l7661
  2184  00087C                     l7679:
  2185                           
  2186                           ; BSR set to: 1
  2187                           ;main.c: 128:     if (!xatoi(&ptr, &p1) || !xatoi(&ptr, &p2))
  2188  00087C  0E92               	movlw	low main@ptr
  2189  00087E  6E12               	movwf	xatoi@str^0,c
  2190  000880  0E01               	movlw	high main@ptr
  2191  000882  6E13               	movwf	(xatoi@str+1)^0,c
  2192  000884  0E64               	movlw	low main@p1
  2193  000886  6E14               	movwf	xatoi@res^0,c
  2194  000888  0E01               	movlw	high main@p1
  2195  00088A  6E15               	movwf	(xatoi@res+1)^0,c
  2196  00088C  EC07  F012         	call	_xatoi	;wreg free
  2197  000890  5012               	movf	?_xatoi^0,w,c
  2198  000892  1013               	iorwf	(?_xatoi+1)^0,w,c
  2199  000894  B4D8               	btfsc	status,2,c
  2200  000896  EF4F  F004         	goto	u9771
  2201  00089A  EF51  F004         	goto	u9770
  2202  00089E                     u9771:
  2203  00089E  EFFD  F003         	goto	l7661
  2204  0008A2                     u9770:
  2205  0008A2  0E92               	movlw	low main@ptr
  2206  0008A4  6E12               	movwf	xatoi@str^0,c
  2207  0008A6  0E01               	movlw	high main@ptr
  2208  0008A8  6E13               	movwf	(xatoi@str+1)^0,c
  2209  0008AA  0E5C               	movlw	low main@p2
  2210  0008AC  6E14               	movwf	xatoi@res^0,c
  2211  0008AE  0E01               	movlw	high main@p2
  2212  0008B0  6E15               	movwf	(xatoi@res+1)^0,c
  2213  0008B2  EC07  F012         	call	_xatoi	;wreg free
  2214  0008B6  5012               	movf	?_xatoi^0,w,c
  2215  0008B8  1013               	iorwf	(?_xatoi+1)^0,w,c
  2216  0008BA  A4D8               	btfss	status,2,c
  2217  0008BC  EF62  F004         	goto	u9781
  2218  0008C0  EF64  F004         	goto	u9780
  2219  0008C4                     u9781:
  2220  0008C4  EF66  F004         	goto	l105
  2221  0008C8                     u9780:
  2222  0008C8  EFFD  F003         	goto	l7661
  2223  0008CC                     l105:
  2224                           
  2225                           ;main.c: 130:     s2 = p2;
  2226  0008CC  C15C  F168         	movff	main@p2,main@s2
  2227  0008D0  C15D  F169         	movff	main@p2+1,main@s2+1
  2228  0008D4                     
  2229                           ;main.c: 131:     res = disk_readp((BYTE*)Line, p1, s2, 128);
  2230  0008D4  0E00               	movlw	low _Line
  2231  0008D6  0100               	movlb	0	; () banked
  2232  0008D8  6F90               	movwf	disk_readp@buff& (0+255),b
  2233  0008DA  0E03               	movlw	high _Line
  2234  0008DC  6F91               	movwf	(disk_readp@buff+1)& (0+255),b
  2235  0008DE  C164  F092         	movff	main@p1,disk_readp@sector
  2236  0008E2  C165  F093         	movff	main@p1+1,disk_readp@sector+1
  2237  0008E6  C166  F094         	movff	main@p1+2,disk_readp@sector+2
  2238  0008EA  C167  F095         	movff	main@p1+3,disk_readp@sector+3
  2239  0008EE  C168  F096         	movff	main@s2,disk_readp@offset
  2240  0008F2  C169  F097         	movff	main@s2+1,disk_readp@offset+1
  2241  0008F6  0E00               	movlw	0
  2242  0008F8  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  2243  0008FA  0E80               	movlw	128
  2244  0008FC  6F98               	movwf	disk_readp@count& (0+255),b
  2245  0008FE  EC65  F01B         	call	_disk_readp	;wreg free
  2246  000902  0101               	movlb	1	; () banked
  2247  000904  6F94               	movwf	main@res& (0+255),b
  2248  000906                     
  2249                           ; BSR set to: 1
  2250                           ;main.c: 132:     if (res) {
  2251  000906  5194               	movf	main@res& (0+255),w,b
  2252  000908  B4D8               	btfsc	status,2,c
  2253  00090A  EF89  F004         	goto	u9791
  2254  00090E  EF8B  F004         	goto	u9790
  2255  000912                     u9791:
  2256  000912  EF90  F004         	goto	l7689
  2257  000916                     u9790:
  2258  000916                     
  2259                           ; BSR set to: 1
  2260                           ;main.c: 133:                     put_drc(res);
  2261  000916  5194               	movf	main@res& (0+255),w,b
  2262  000918  EC57  F02B         	call	_put_drc
  2263                           
  2264                           ;main.c: 134:                     break;
  2265  00091C  EFFD  F003         	goto	l7661
  2266  000920                     l7689:
  2267                           
  2268                           ; BSR set to: 1
  2269                           ;main.c: 136:     s3 = s2 + 128;
  2270  000920  0E80               	movlw	128
  2271  000922  2568               	addwf	main@s2& (0+255),w,b
  2272  000924  6F62               	movwf	main@s3& (0+255),b
  2273  000926  0E00               	movlw	0
  2274  000928  2169               	addwfc	(main@s2+1)& (0+255),w,b
  2275  00092A  6F63               	movwf	(main@s3+1)& (0+255),b
  2276                           
  2277                           ;main.c: 137:     for (ptr = Line; s2 < s3; s2 += 16, ptr += 16, ofs += 16)
  2278  00092C  0E00               	movlw	low _Line
  2279  00092E  6F92               	movwf	main@ptr& (0+255),b
  2280  000930  0E03               	movlw	high _Line
  2281  000932  6F93               	movwf	(main@ptr+1)& (0+255),b
  2282  000934  EFDB  F004         	goto	l7705
  2283  000938                     l7691:
  2284                           
  2285                           ; BSR set to: 1
  2286                           ;main.c: 138:                 {;main.c: 139:      s1 = (s3 - s2 >= 16) ? 16 : s3 - s2;
  2287  000938  5168               	movf	main@s2& (0+255),w,b
  2288  00093A  5D62               	subwf	main@s3& (0+255),w,b
  2289  00093C  6F55               	movwf	??_main& (0+255),b
  2290  00093E  5169               	movf	(main@s2+1)& (0+255),w,b
  2291  000940  5963               	subwfb	(main@s3+1)& (0+255),w,b
  2292  000942  6F56               	movwf	(??_main+1)& (0+255),b
  2293  000944  5156               	movf	(??_main+1)& (0+255),w,b
  2294  000946  E107               	bnz	u9801
  2295  000948  0E10               	movlw	16
  2296  00094A  5D55               	subwf	??_main& (0+255),w,b
  2297  00094C  B0D8               	btfsc	status,0,c
  2298  00094E  EFAB  F004         	goto	u9801
  2299  000952  EFAD  F004         	goto	u9800
  2300  000956                     u9801:
  2301  000956  EFB5  F004         	goto	l7695
  2302  00095A                     u9800:
  2303  00095A                     
  2304                           ; BSR set to: 1
  2305  00095A  5168               	movf	main@s2& (0+255),w,b
  2306  00095C  5D62               	subwf	main@s3& (0+255),w,b
  2307  00095E  6F90               	movwf	main@s1& (0+255),b
  2308  000960  5169               	movf	(main@s2+1)& (0+255),w,b
  2309  000962  5963               	subwfb	(main@s3+1)& (0+255),w,b
  2310  000964  6F91               	movwf	(main@s1+1)& (0+255),b
  2311  000966  EFB9  F004         	goto	l7697
  2312  00096A                     l7695:
  2313                           
  2314                           ; BSR set to: 1
  2315  00096A  0E00               	movlw	0
  2316  00096C  6F91               	movwf	(main@s1+1)& (0+255),b
  2317  00096E  0E10               	movlw	16
  2318  000970  6F90               	movwf	main@s1& (0+255),b
  2319  000972                     l7697:
  2320                           
  2321                           ; BSR set to: 1
  2322                           ;main.c: 140:      put_dump((BYTE*)ptr, s2, s1, 16);
  2323  000972  C192  F090         	movff	main@ptr,put_dump@buff
  2324  000976  C193  F091         	movff	main@ptr+1,put_dump@buff+1
  2325  00097A  C168  F092         	movff	main@s2,put_dump@addr
  2326  00097E  C169  F093         	movff	main@s2+1,put_dump@addr+1
  2327  000982  0100               	movlb	0	; () banked
  2328  000984  6B94               	clrf	(put_dump@addr+2)& (0+255),b
  2329  000986  6B95               	clrf	(put_dump@addr+3)& (0+255),b
  2330  000988  C190  F096         	movff	main@s1,put_dump@len
  2331  00098C  C191  F097         	movff	main@s1+1,put_dump@len+1
  2332  000990  0E00               	movlw	0
  2333  000992  6F99               	movwf	(put_dump@width+1)& (0+255),b
  2334  000994  0E10               	movlw	16
  2335  000996  6F98               	movwf	put_dump@width& (0+255),b
  2336  000998  ECE6  F016         	call	_put_dump	;wreg free
  2337  00099C                     
  2338                           ;main.c: 141:     }
  2339  00099C  0E10               	movlw	16
  2340  00099E  0101               	movlb	1	; () banked
  2341  0009A0  2768               	addwf	main@s2& (0+255),f,b
  2342  0009A2  0E00               	movlw	0
  2343  0009A4  2369               	addwfc	(main@s2+1)& (0+255),f,b
  2344  0009A6                     
  2345                           ; BSR set to: 1
  2346  0009A6  0E10               	movlw	16
  2347  0009A8  2792               	addwf	main@ptr& (0+255),f,b
  2348  0009AA  0E00               	movlw	0
  2349  0009AC  2393               	addwfc	(main@ptr+1)& (0+255),f,b
  2350  0009AE                     
  2351                           ; BSR set to: 1
  2352  0009AE  0E10               	movlw	16
  2353  0009B0  275A               	addwf	main@ofs& (0+255),f,b
  2354  0009B2  0E00               	movlw	0
  2355  0009B4  235B               	addwfc	(main@ofs+1)& (0+255),f,b
  2356  0009B6                     l7705:
  2357                           
  2358                           ; BSR set to: 1
  2359  0009B6  5162               	movf	main@s3& (0+255),w,b
  2360  0009B8  5D68               	subwf	main@s2& (0+255),w,b
  2361  0009BA  5163               	movf	(main@s3+1)& (0+255),w,b
  2362  0009BC  5969               	subwfb	(main@s2+1)& (0+255),w,b
  2363  0009BE  A0D8               	btfss	status,0,c
  2364  0009C0  EFE4  F004         	goto	u9811
  2365  0009C4  EFE6  F004         	goto	u9810
  2366  0009C8                     u9811:
  2367  0009C8  EF9C  F004         	goto	l7691
  2368  0009CC                     u9810:
  2369  0009CC  EFFD  F003         	goto	l7661
  2370  0009D0                     l7709:
  2371                           
  2372                           ; BSR set to: 1
  2373  0009D0  C192  FFD9         	movff	main@ptr,fsr2l
  2374  0009D4  C193  FFDA         	movff	main@ptr+1,fsr2h
  2375  0009D8  4B92               	infsnz	main@ptr& (0+255),f,b
  2376  0009DA  2B93               	incf	(main@ptr+1)& (0+255),f,b
  2377  0009DC  50DF               	movf	indf2,w,c
  2378  0009DE  6F55               	movwf	??_main& (0+255),b
  2379  0009E0  6B56               	clrf	(??_main+1)& (0+255),b
  2380                           
  2381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2382                           ; Switch size 1, requested type "simple"
  2383                           ; Number of cases is 1, Range of values is 0 to 0
  2384                           ; switch strategies available:
  2385                           ; Name         Instructions Cycles
  2386                           ; simple_byte            4     3 (average)
  2387                           ;	Chosen strategy is simple_byte
  2388  0009E2  5156               	movf	(??_main+1)& (0+255),w,b
  2389  0009E4  0A00               	xorlw	0	; case 0
  2390  0009E6  B4D8               	btfsc	status,2,c
  2391  0009E8  EFF8  F004         	goto	l8055
  2392  0009EC  EFFD  F003         	goto	l7661
  2393  0009F0                     l8055:
  2394                           
  2395                           ; BSR set to: 1
  2396                           ; Switch size 1, requested type "simple"
  2397                           ; Number of cases is 2, Range of values is 100 to 105
  2398                           ; switch strategies available:
  2399                           ; Name         Instructions Cycles
  2400                           ; simple_byte            7     4 (average)
  2401                           ;	Chosen strategy is simple_byte
  2402  0009F0  5155               	movf	??_main& (0+255),w,b
  2403  0009F2  0A64               	xorlw	100	; case 100
  2404  0009F4  B4D8               	btfsc	status,2,c
  2405  0009F6  EF3E  F004         	goto	l7679
  2406  0009FA  0A0D               	xorlw	13	; case 105
  2407  0009FC  B4D8               	btfsc	status,2,c
  2408  0009FE  EF26  F004         	goto	l7671
  2409  000A02  EFFD  F003         	goto	l7661
  2410  000A06                     l7711:
  2411                           
  2412                           ; BSR set to: 1
  2413                           ;main.c: 150:                 printf("\tMount the volume\r\n\t");
  2414  000A06  0EF8               	movlw	low STR_7
  2415  000A08  0100               	movlb	0	; () banked
  2416  000A0A  6F86               	movwf	printf@fmt& (0+255),b
  2417  000A0C  0E7C               	movlw	high STR_7
  2418  000A0E  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2419  000A10  EC1D  F02B         	call	_printf	;wreg free
  2420  000A14                     l120:
  2421                           
  2422                           ;main.c: 152:                 {;main.c: 153:                     res = pf_mount(&fs);
  2423  000A14  0E95               	movlw	low main@fs
  2424  000A16  0100               	movlb	0	; () banked
  2425  000A18  6FAA               	movwf	pf_mount@fs& (0+255),b
  2426  000A1A  0E01               	movlw	high main@fs
  2427  000A1C  6FAB               	movwf	(pf_mount@fs+1)& (0+255),b
  2428  000A1E  ECCC  F007         	call	_pf_mount	;wreg free
  2429  000A22  0101               	movlb	1	; () banked
  2430  000A24  6F94               	movwf	main@res& (0+255),b
  2431  000A26                     
  2432                           ; BSR set to: 1
  2433                           ;main.c: 154:                 } while (res != FR_OK);
  2434  000A26  5194               	movf	main@res& (0+255),w,b
  2435  000A28  A4D8               	btfss	status,2,c
  2436  000A2A  EF19  F005         	goto	u9821
  2437  000A2E  EF1B  F005         	goto	u9820
  2438  000A32                     u9821:
  2439  000A32  EF0A  F005         	goto	l120
  2440  000A36                     u9820:
  2441  000A36                     
  2442                           ; BSR set to: 1
  2443                           ;main.c: 155:     put_rc(res);
  2444  000A36  5194               	movf	main@res& (0+255),w,b
  2445  000A38  EC82  F028         	call	_put_rc
  2446                           
  2447                           ;main.c: 156:     break;
  2448  000A3C  EFFD  F003         	goto	l7661
  2449  000A40                     l7717:
  2450                           
  2451                           ; BSR set to: 1
  2452                           ;main.c: 159:                 printf("\tOpen a file\r\n\t");
  2453  000A40  0E48               	movlw	low STR_8
  2454  000A42  0100               	movlb	0	; () banked
  2455  000A44  6F86               	movwf	printf@fmt& (0+255),b
  2456  000A46  0E7D               	movlw	high STR_8
  2457  000A48  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2458  000A4A  EC1D  F02B         	call	_printf	;wreg free
  2459                           
  2460                           ;main.c: 160:     while (*ptr == ' ')
  2461  000A4E  EF2C  F005         	goto	l7721
  2462  000A52                     l7719:
  2463                           
  2464                           ;main.c: 161:                     ptr++;
  2465  000A52  0101               	movlb	1	; () banked
  2466  000A54  4B92               	infsnz	main@ptr& (0+255),f,b
  2467  000A56  2B93               	incf	(main@ptr+1)& (0+255),f,b
  2468  000A58                     l7721:
  2469                           
  2470                           ;main.c: 160:     while (*ptr == ' ')
  2471  000A58  C192  FFD9         	movff	main@ptr,fsr2l
  2472  000A5C  C193  FFDA         	movff	main@ptr+1,fsr2h
  2473  000A60  0E20               	movlw	32
  2474  000A62  18DE               	xorwf	postinc2,w,c
  2475  000A64  B4D8               	btfsc	status,2,c
  2476  000A66  EF37  F005         	goto	u9831
  2477  000A6A  EF39  F005         	goto	u9830
  2478  000A6E                     u9831:
  2479  000A6E  EF29  F005         	goto	l7719
  2480  000A72                     u9830:
  2481  000A72                     
  2482                           ;main.c: 162:     res = pf_open(ptr);
  2483  000A72  C192  F0E1         	movff	main@ptr,pf_open@path
  2484  000A76  C193  F0E2         	movff	main@ptr+1,pf_open@path+1
  2485  000A7A  EC74  F01E         	call	_pf_open	;wreg free
  2486  000A7E  0101               	movlb	1	; () banked
  2487  000A80  6F94               	movwf	main@res& (0+255),b
  2488                           
  2489                           ;main.c: 163:                 put_rc(res);
  2490  000A82  5194               	movf	main@res& (0+255),w,b
  2491  000A84  EC82  F028         	call	_put_rc
  2492  000A88                     
  2493                           ;main.c: 164:                 if(res == FR_OK)
  2494  000A88  0101               	movlb	1	; () banked
  2495  000A8A  5194               	movf	main@res& (0+255),w,b
  2496  000A8C  A4D8               	btfss	status,2,c
  2497  000A8E  EF4B  F005         	goto	u9841
  2498  000A92  EF4D  F005         	goto	u9840
  2499  000A96                     u9841:
  2500  000A96  EFFD  F003         	goto	l7661
  2501  000A9A                     u9840:
  2502  000A9A                     
  2503                           ; BSR set to: 1
  2504                           ;main.c: 165:                     init_flag = 0;
  2505  000A9A  0E00               	movlw	0
  2506  000A9C  6FC0               	movwf	(_init_flag+1)& (0+255),b
  2507  000A9E  0E00               	movlw	0
  2508  000AA0  6FBF               	movwf	_init_flag& (0+255),b
  2509  000AA2  EFFD  F003         	goto	l7661
  2510  000AA6                     l7729:
  2511                           
  2512                           ; BSR set to: 1
  2513                           ;main.c: 169:                 printf("\tRead all file and output square wave\r\n");
  2514  000AA6  0E52               	movlw	low STR_9
  2515  000AA8  0100               	movlb	0	; () banked
  2516  000AAA  6F86               	movwf	printf@fmt& (0+255),b
  2517  000AAC  0E7C               	movlw	high STR_9
  2518  000AAE  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2519  000AB0  EC1D  F02B         	call	_printf	;wreg free
  2520  000AB4                     
  2521                           ;main.c: 170:                 int count;;main.c: 171:                 unsigned int num_t
      +                          emp;;main.c: 172:                 pwm_setDuty(0);
  2522  000AB4  0E00               	movlw	0
  2523  000AB6  6E07               	movwf	(pwm_setDuty@dutycycle+1)^0,c
  2524  000AB8  0E00               	movlw	0
  2525  000ABA  6E06               	movwf	pwm_setDuty@dutycycle^0,c
  2526  000ABC  EC31  F02B         	call	_pwm_setDuty	;wreg free
  2527  000AC0                     
  2528                           ;main.c: 173:                 pwm_start();
  2529  000AC0  ECAB  F02B         	call	_pwm_start	;wreg free
  2530  000AC4                     l7735:
  2531                           
  2532                           ;main.c: 175:                 {;main.c: 176:         ofs = fs.fptr;
  2533  000AC4  C1AB  F15A         	movff	main@fs+22,main@ofs
  2534  000AC8  C1AC  F15B         	movff	main@fs+23,main@ofs+1
  2535  000ACC                     
  2536                           ;main.c: 177:         res = pf_read(Line, sizeof(Line), &s1);
  2537  000ACC  0E00               	movlw	low _Line
  2538  000ACE  0100               	movlb	0	; () banked
  2539  000AD0  6FC0               	movwf	pf_read@buff& (0+255),b
  2540  000AD2  0E03               	movlw	high _Line
  2541  000AD4  6FC1               	movwf	(pf_read@buff+1)& (0+255),b
  2542  000AD6  0E00               	movlw	0
  2543  000AD8  6FC3               	movwf	(pf_read@btr+1)& (0+255),b
  2544  000ADA  0E80               	movlw	128
  2545  000ADC  6FC2               	movwf	pf_read@btr& (0+255),b
  2546  000ADE  0E90               	movlw	low main@s1
  2547  000AE0  6FC4               	movwf	pf_read@br& (0+255),b
  2548  000AE2  0E01               	movlw	high main@s1
  2549  000AE4  6FC5               	movwf	(pf_read@br+1)& (0+255),b
  2550  000AE6  EC2D  F00D         	call	_pf_read	;wreg free
  2551  000AEA  0101               	movlb	1	; () banked
  2552  000AEC  6F94               	movwf	main@res& (0+255),b
  2553  000AEE                     
  2554                           ; BSR set to: 1
  2555                           ;main.c: 178:         if (res != FR_OK)
  2556  000AEE  5194               	movf	main@res& (0+255),w,b
  2557  000AF0  B4D8               	btfsc	status,2,c
  2558  000AF2  EF7D  F005         	goto	u9851
  2559  000AF6  EF7F  F005         	goto	u9850
  2560  000AFA                     u9851:
  2561  000AFA  EF8C  F005         	goto	l7743
  2562  000AFE                     u9850:
  2563  000AFE                     
  2564                           ; BSR set to: 1
  2565                           ;main.c: 179:                     {;main.c: 180:                         printf("\t");
  2566  000AFE  0E56               	movlw	low (STR_8+14)
  2567  000B00  0100               	movlb	0	; () banked
  2568  000B02  6F86               	movwf	printf@fmt& (0+255),b
  2569  000B04  0E7D               	movlw	high (STR_8+14)
  2570  000B06  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2571  000B08  EC1D  F02B         	call	_printf	;wreg free
  2572                           
  2573                           ;main.c: 181:                         put_rc(res);
  2574  000B0C  0101               	movlb	1	; () banked
  2575  000B0E  5194               	movf	main@res& (0+255),w,b
  2576  000B10  EC82  F028         	call	_put_rc
  2577                           
  2578                           ;main.c: 182:                         break;
  2579  000B14  EFDA  F005         	goto	l7765
  2580  000B18                     l7743:
  2581                           
  2582                           ; BSR set to: 1
  2583                           ;main.c: 184:                     count = 0;
  2584  000B18  0E00               	movlw	0
  2585  000B1A  6F61               	movwf	(main@count+1)& (0+255),b
  2586  000B1C  0E00               	movlw	0
  2587  000B1E  6F60               	movwf	main@count& (0+255),b
  2588  000B20                     
  2589                           ; BSR set to: 1
  2590                           ;main.c: 185:                     if(init_flag == 0)
  2591  000B20  51BF               	movf	_init_flag& (0+255),w,b
  2592  000B22  11C0               	iorwf	(_init_flag+1)& (0+255),w,b
  2593  000B24  A4D8               	btfss	status,2,c
  2594  000B26  EF97  F005         	goto	u9861
  2595  000B2A  EF99  F005         	goto	u9860
  2596  000B2E                     u9861:
  2597  000B2E  EFBB  F005         	goto	l7759
  2598  000B32                     u9860:
  2599  000B32                     
  2600                           ; BSR set to: 1
  2601                           ;main.c: 186:                     {;main.c: 187:                         init_flag = 1;
  2602  000B32  0E00               	movlw	0
  2603  000B34  6FC0               	movwf	(_init_flag+1)& (0+255),b
  2604  000B36  0E01               	movlw	1
  2605  000B38  6FBF               	movwf	_init_flag& (0+255),b
  2606  000B3A                     
  2607                           ; BSR set to: 1
  2608                           ;main.c: 188:                         count += 44;
  2609  000B3A  0E2C               	movlw	44
  2610  000B3C  2760               	addwf	main@count& (0+255),f,b
  2611  000B3E  0E00               	movlw	0
  2612  000B40  2361               	addwfc	(main@count+1)& (0+255),f,b
  2613  000B42  EFBB  F005         	goto	l7759
  2614  000B46                     l7751:
  2615                           
  2616                           ; BSR set to: 1
  2617                           ;main.c: 191:                     {;main.c: 192:                         num_temp = Line
      +                          [count];
  2618  000B46  0E00               	movlw	low _Line
  2619  000B48  2560               	addwf	main@count& (0+255),w,b
  2620  000B4A  6ED9               	movwf	fsr2l,c
  2621  000B4C  0E03               	movlw	high _Line
  2622  000B4E  2161               	addwfc	(main@count+1)& (0+255),w,b
  2623  000B50  6EDA               	movwf	fsr2h,c
  2624  000B52  50DF               	movf	indf2,w,c
  2625  000B54  6F55               	movwf	??_main& (0+255),b
  2626  000B56  5155               	movf	??_main& (0+255),w,b
  2627  000B58  6F58               	movwf	main@num_temp& (0+255),b
  2628  000B5A  6B59               	clrf	(main@num_temp+1)& (0+255),b
  2629  000B5C                     
  2630                           ; BSR set to: 1
  2631                           ;main.c: 193:                         pwm_setDuty((int)num_temp);
  2632  000B5C  C158  F006         	movff	main@num_temp,pwm_setDuty@dutycycle
  2633  000B60  C159  F007         	movff	main@num_temp+1,pwm_setDuty@dutycycle+1
  2634  000B64  EC31  F02B         	call	_pwm_setDuty	;wreg free
  2635  000B68                     
  2636                           ;main.c: 194:                         count++;
  2637  000B68  0101               	movlb	1	; () banked
  2638  000B6A  4B60               	infsnz	main@count& (0+255),f,b
  2639  000B6C  2B61               	incf	(main@count+1)& (0+255),f,b
  2640  000B6E                     
  2641                           ; BSR set to: 1
  2642                           ;main.c: 196:                         _delay((unsigned long)((40)*(40000000/4000000.0)))
      +                          ;
  2643  000B6E  0E85               	movlw	133
  2644  000B70                     u10037:
  2645  000B70  2EE8               	decfsz	wreg,f,c
  2646  000B72  D7FE               	bra	u10037
  2647  000B74  F000               	nop	
  2648  000B76                     l7759:
  2649                           
  2650                           ;main.c: 190:                     while(count < s1)
  2651  000B76  0101               	movlb	1	; () banked
  2652  000B78  5190               	movf	main@s1& (0+255),w,b
  2653  000B7A  5D60               	subwf	main@count& (0+255),w,b
  2654  000B7C  5191               	movf	(main@s1+1)& (0+255),w,b
  2655  000B7E  5961               	subwfb	(main@count+1)& (0+255),w,b
  2656  000B80  A0D8               	btfss	status,0,c
  2657  000B82  EFC5  F005         	goto	u9871
  2658  000B86  EFC7  F005         	goto	u9870
  2659  000B8A                     u9871:
  2660  000B8A  EFA3  F005         	goto	l7751
  2661  000B8E                     u9870:
  2662  000B8E                     
  2663                           ; BSR set to: 1
  2664                           ;main.c: 198:                     if(INTCONbits.INT0IF)
  2665  000B8E  A2F2               	btfss	242,1,c	;volatile
  2666  000B90  EFCC  F005         	goto	u9881
  2667  000B94  EFCE  F005         	goto	u9880
  2668  000B98                     u9881:
  2669  000B98  EFD1  F005         	goto	l7763
  2670  000B9C                     u9880:
  2671  000B9C                     
  2672                           ; BSR set to: 1
  2673                           ;main.c: 199:                     {;main.c: 200:                         INT0IF = 0;
  2674  000B9C  92F2               	bcf	4082,1,c	;volatile
  2675                           
  2676                           ;main.c: 201:                         break;
  2677  000B9E  EFDA  F005         	goto	l7765
  2678  000BA2                     l7763:
  2679                           
  2680                           ; BSR set to: 1
  2681                           ;main.c: 203:     }while(s1 != 0);
  2682  000BA2  5190               	movf	main@s1& (0+255),w,b
  2683  000BA4  1191               	iorwf	(main@s1+1)& (0+255),w,b
  2684  000BA6  A4D8               	btfss	status,2,c
  2685  000BA8  EFD8  F005         	goto	u9891
  2686  000BAC  EFDA  F005         	goto	u9890
  2687  000BB0                     u9891:
  2688  000BB0  EF62  F005         	goto	l7735
  2689  000BB4                     u9890:
  2690  000BB4                     l7765:
  2691                           
  2692                           ;main.c: 204:                 pwm_stop();
  2693  000BB4  ECA9  F02B         	call	_pwm_stop	;wreg free
  2694                           
  2695                           ;main.c: 205:     break;
  2696  000BB8  EFFD  F003         	goto	l7661
  2697  000BBC                     l7767:
  2698                           
  2699                           ; BSR set to: 1
  2700                           ;main.c: 207:                 printf("\tRead the file 128 bytes and dump it\r\n");
  2701  000BBC  0E7A               	movlw	low STR_11
  2702  000BBE  0100               	movlb	0	; () banked
  2703  000BC0  6F86               	movwf	printf@fmt& (0+255),b
  2704  000BC2  0E7C               	movlw	high STR_11
  2705  000BC4  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2706  000BC6  EC1D  F02B         	call	_printf	;wreg free
  2707  000BCA                     
  2708                           ;main.c: 208:                 ofs = fs.fptr;
  2709  000BCA  C1AB  F15A         	movff	main@fs+22,main@ofs
  2710  000BCE  C1AC  F15B         	movff	main@fs+23,main@ofs+1
  2711                           
  2712                           ;main.c: 209:                 res = pf_read(Line, sizeof(Line), &s1);
  2713  000BD2  0E00               	movlw	low _Line
  2714  000BD4  0100               	movlb	0	; () banked
  2715  000BD6  6FC0               	movwf	pf_read@buff& (0+255),b
  2716  000BD8  0E03               	movlw	high _Line
  2717  000BDA  6FC1               	movwf	(pf_read@buff+1)& (0+255),b
  2718  000BDC  0E00               	movlw	0
  2719  000BDE  6FC3               	movwf	(pf_read@btr+1)& (0+255),b
  2720  000BE0  0E80               	movlw	128
  2721  000BE2  6FC2               	movwf	pf_read@btr& (0+255),b
  2722  000BE4  0E90               	movlw	low main@s1
  2723  000BE6  6FC4               	movwf	pf_read@br& (0+255),b
  2724  000BE8  0E01               	movlw	high main@s1
  2725  000BEA  6FC5               	movwf	(pf_read@br+1)& (0+255),b
  2726  000BEC  EC2D  F00D         	call	_pf_read	;wreg free
  2727  000BF0  0101               	movlb	1	; () banked
  2728  000BF2  6F94               	movwf	main@res& (0+255),b
  2729  000BF4                     
  2730                           ; BSR set to: 1
  2731                           ;main.c: 210:                 if (res != FR_OK)
  2732  000BF4  5194               	movf	main@res& (0+255),w,b
  2733  000BF6  B4D8               	btfsc	status,2,c
  2734  000BF8  EF00  F006         	goto	u9901
  2735  000BFC  EF02  F006         	goto	u9900
  2736  000C00                     u9901:
  2737  000C00  EF0F  F006         	goto	l7775
  2738  000C04                     u9900:
  2739  000C04                     
  2740                           ; BSR set to: 1
  2741                           ;main.c: 211:                 {;main.c: 212:                     printf("\t");
  2742  000C04  0E56               	movlw	low (STR_8+14)
  2743  000C06  0100               	movlb	0	; () banked
  2744  000C08  6F86               	movwf	printf@fmt& (0+255),b
  2745  000C0A  0E7D               	movlw	high (STR_8+14)
  2746  000C0C  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2747  000C0E  EC1D  F02B         	call	_printf	;wreg free
  2748                           
  2749                           ;main.c: 213:                     put_rc(res);
  2750  000C12  0101               	movlb	1	; () banked
  2751  000C14  5194               	movf	main@res& (0+255),w,b
  2752  000C16  EC82  F028         	call	_put_rc
  2753                           
  2754                           ;main.c: 214:                     break;
  2755  000C1A  EFFD  F003         	goto	l7661
  2756  000C1E                     l7775:
  2757                           
  2758                           ; BSR set to: 1
  2759                           ;main.c: 216:                 ptr = Line;
  2760  000C1E  0E00               	movlw	low _Line
  2761  000C20  6F92               	movwf	main@ptr& (0+255),b
  2762  000C22  0E03               	movlw	high _Line
  2763  000C24  6F93               	movwf	(main@ptr+1)& (0+255),b
  2764                           
  2765                           ;main.c: 217:                 while (s1)
  2766  000C26  EF53  F006         	goto	l7793
  2767  000C2A                     l7777:
  2768                           
  2769                           ; BSR set to: 1
  2770                           ;main.c: 218:                 {;main.c: 219:      s2 = (s1 >= 16) ? 16 : s1;
  2771  000C2A  5191               	movf	(main@s1+1)& (0+255),w,b
  2772  000C2C  E107               	bnz	u9911
  2773  000C2E  0E10               	movlw	16
  2774  000C30  5D90               	subwf	main@s1& (0+255),w,b
  2775  000C32  B0D8               	btfsc	status,0,c
  2776  000C34  EF1E  F006         	goto	u9911
  2777  000C38  EF20  F006         	goto	u9910
  2778  000C3C                     u9911:
  2779  000C3C  EF26  F006         	goto	l7781
  2780  000C40                     u9910:
  2781  000C40                     
  2782                           ; BSR set to: 1
  2783  000C40  C190  F168         	movff	main@s1,main@s2
  2784  000C44  C191  F169         	movff	main@s1+1,main@s2+1
  2785  000C48  EF2A  F006         	goto	l7783
  2786  000C4C                     l7781:
  2787                           
  2788                           ; BSR set to: 1
  2789  000C4C  0E00               	movlw	0
  2790  000C4E  6F69               	movwf	(main@s2+1)& (0+255),b
  2791  000C50  0E10               	movlw	16
  2792  000C52  6F68               	movwf	main@s2& (0+255),b
  2793  000C54                     l7783:
  2794                           
  2795                           ; BSR set to: 1
  2796                           ;main.c: 220:      s1 -= s2;
  2797  000C54  5168               	movf	main@s2& (0+255),w,b
  2798  000C56  5F90               	subwf	main@s1& (0+255),f,b
  2799  000C58  5169               	movf	(main@s2+1)& (0+255),w,b
  2800  000C5A  5B91               	subwfb	(main@s1+1)& (0+255),f,b
  2801  000C5C                     
  2802                           ; BSR set to: 1
  2803                           ;main.c: 221:                     printf("\t");
  2804  000C5C  0E56               	movlw	low (STR_8+14)
  2805  000C5E  0100               	movlb	0	; () banked
  2806  000C60  6F86               	movwf	printf@fmt& (0+255),b
  2807  000C62  0E7D               	movlw	high (STR_8+14)
  2808  000C64  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2809  000C66  EC1D  F02B         	call	_printf	;wreg free
  2810  000C6A                     
  2811                           ;main.c: 222:         put_dump((BYTE*)ptr, ofs, s2, sizeof(char));
  2812  000C6A  C192  F090         	movff	main@ptr,put_dump@buff
  2813  000C6E  C193  F091         	movff	main@ptr+1,put_dump@buff+1
  2814  000C72  C15A  F092         	movff	main@ofs,put_dump@addr
  2815  000C76  C15B  F093         	movff	main@ofs+1,put_dump@addr+1
  2816  000C7A  0100               	movlb	0	; () banked
  2817  000C7C  6B94               	clrf	(put_dump@addr+2)& (0+255),b
  2818  000C7E  6B95               	clrf	(put_dump@addr+3)& (0+255),b
  2819  000C80  C168  F096         	movff	main@s2,put_dump@len
  2820  000C84  C169  F097         	movff	main@s2+1,put_dump@len+1
  2821  000C88  0E00               	movlw	0
  2822  000C8A  6F99               	movwf	(put_dump@width+1)& (0+255),b
  2823  000C8C  0E01               	movlw	1
  2824  000C8E  6F98               	movwf	put_dump@width& (0+255),b
  2825  000C90  ECE6  F016         	call	_put_dump	;wreg free
  2826  000C94                     
  2827                           ;main.c: 223:                     ptr += 16;
  2828  000C94  0E10               	movlw	16
  2829  000C96  0101               	movlb	1	; () banked
  2830  000C98  2792               	addwf	main@ptr& (0+255),f,b
  2831  000C9A  0E00               	movlw	0
  2832  000C9C  2393               	addwfc	(main@ptr+1)& (0+255),f,b
  2833  000C9E                     
  2834                           ; BSR set to: 1
  2835                           ;main.c: 224:                     ofs += 16;
  2836  000C9E  0E10               	movlw	16
  2837  000CA0  275A               	addwf	main@ofs& (0+255),f,b
  2838  000CA2  0E00               	movlw	0
  2839  000CA4  235B               	addwfc	(main@ofs+1)& (0+255),f,b
  2840  000CA6                     l7793:
  2841                           
  2842                           ; BSR set to: 1
  2843                           ;main.c: 217:                 while (s1)
  2844  000CA6  5190               	movf	main@s1& (0+255),w,b
  2845  000CA8  1191               	iorwf	(main@s1+1)& (0+255),w,b
  2846  000CAA  A4D8               	btfss	status,2,c
  2847  000CAC  EF5A  F006         	goto	u9921
  2848  000CB0  EF5C  F006         	goto	u9920
  2849  000CB4                     u9921:
  2850  000CB4  EF15  F006         	goto	l7777
  2851  000CB8                     u9920:
  2852  000CB8  EFFD  F003         	goto	l7661
  2853  000CBC                     l7795:
  2854                           
  2855                           ; BSR set to: 1
  2856                           ;main.c: 229:      res = pf_read(0, 32768, &s1);
  2857  000CBC  0E00               	movlw	0
  2858  000CBE  0100               	movlb	0	; () banked
  2859  000CC0  6FC0               	movwf	pf_read@buff& (0+255),b
  2860  000CC2  0E00               	movlw	0
  2861  000CC4  6FC1               	movwf	(pf_read@buff+1)& (0+255),b
  2862  000CC6  0E80               	movlw	128
  2863  000CC8  6FC3               	movwf	(pf_read@btr+1)& (0+255),b
  2864  000CCA  0E00               	movlw	0
  2865  000CCC  6FC2               	movwf	pf_read@btr& (0+255),b
  2866  000CCE  0E90               	movlw	low main@s1
  2867  000CD0  6FC4               	movwf	pf_read@br& (0+255),b
  2868  000CD2  0E01               	movlw	high main@s1
  2869  000CD4  6FC5               	movwf	(pf_read@br+1)& (0+255),b
  2870  000CD6  EC2D  F00D         	call	_pf_read	;wreg free
  2871  000CDA  0101               	movlb	1	; () banked
  2872  000CDC  6F94               	movwf	main@res& (0+255),b
  2873  000CDE                     
  2874                           ; BSR set to: 1
  2875                           ;main.c: 230:      if (res != FR_OK)
  2876  000CDE  5194               	movf	main@res& (0+255),w,b
  2877  000CE0  B4D8               	btfsc	status,2,c
  2878  000CE2  EF75  F006         	goto	u9931
  2879  000CE6  EF77  F006         	goto	u9930
  2880  000CEA                     u9931:
  2881  000CEA  EF7C  F006         	goto	l7801
  2882  000CEE                     u9930:
  2883  000CEE                     
  2884                           ; BSR set to: 1
  2885                           ;main.c: 231:                     {;main.c: 232:                         put_rc(res);
  2886  000CEE  5194               	movf	main@res& (0+255),w,b
  2887  000CF0  EC82  F028         	call	_put_rc
  2888                           
  2889                           ;main.c: 233:                         break;
  2890  000CF4  EFFD  F003         	goto	l7661
  2891  000CF8                     l7801:
  2892                           
  2893                           ; BSR set to: 1
  2894                           ;main.c: 235:     } while (s1 == 32768);
  2895  000CF8  0E80               	movlw	128
  2896  000CFA  1991               	xorwf	(main@s1+1)& (0+255),w,b
  2897  000CFC  1190               	iorwf	main@s1& (0+255),w,b
  2898  000CFE  B4D8               	btfsc	status,2,c
  2899  000D00  EF84  F006         	goto	u9941
  2900  000D04  EF86  F006         	goto	u9940
  2901  000D08                     u9941:
  2902  000D08  EF5E  F006         	goto	l7795
  2903  000D0C                     u9940:
  2904  000D0C  EFFD  F003         	goto	l7661
  2905  000D10                     l7803:
  2906                           
  2907                           ; BSR set to: 1
  2908                           ;main.c: 317:                     ptr++;
  2909  000D10  4B92               	infsnz	main@ptr& (0+255),f,b
  2910  000D12  2B93               	incf	(main@ptr+1)& (0+255),f,b
  2911  000D14                     l7805:
  2912                           
  2913                           ; BSR set to: 1
  2914                           ;main.c: 316:     while (*ptr == ' ')
  2915  000D14  C192  FFD9         	movff	main@ptr,fsr2l
  2916  000D18  C193  FFDA         	movff	main@ptr+1,fsr2h
  2917  000D1C  0E20               	movlw	32
  2918  000D1E  18DE               	xorwf	postinc2,w,c
  2919  000D20  B4D8               	btfsc	status,2,c
  2920  000D22  EF95  F006         	goto	u9951
  2921  000D26  EF97  F006         	goto	u9950
  2922  000D2A                     u9951:
  2923  000D2A  EF88  F006         	goto	l7803
  2924  000D2E                     u9950:
  2925  000D2E                     
  2926                           ; BSR set to: 1
  2927                           ;main.c: 319:     if (!xatoi(&ptr, &p1))
  2928  000D2E  0E92               	movlw	low main@ptr
  2929  000D30  6E12               	movwf	xatoi@str^0,c
  2930  000D32  0E01               	movlw	high main@ptr
  2931  000D34  6E13               	movwf	(xatoi@str+1)^0,c
  2932  000D36  0E64               	movlw	low main@p1
  2933  000D38  6E14               	movwf	xatoi@res^0,c
  2934  000D3A  0E01               	movlw	high main@p1
  2935  000D3C  6E15               	movwf	(xatoi@res+1)^0,c
  2936  000D3E  EC07  F012         	call	_xatoi	;wreg free
  2937  000D42  5012               	movf	?_xatoi^0,w,c
  2938  000D44  1013               	iorwf	(?_xatoi+1)^0,w,c
  2939  000D46  A4D8               	btfss	status,2,c
  2940  000D48  EFA8  F006         	goto	u9961
  2941  000D4C  EFAA  F006         	goto	u9960
  2942  000D50                     u9961:
  2943  000D50  EFB3  F006         	goto	l7811
  2944  000D54                     u9960:
  2945  000D54                     
  2946                           ;main.c: 320:                 {;main.c: 321:                     printf("seek pointer is
      +                           invalid\r\n");
  2947  000D54  0EDE               	movlw	low STR_14
  2948  000D56  0100               	movlb	0	; () banked
  2949  000D58  6F86               	movwf	printf@fmt& (0+255),b
  2950  000D5A  0E7C               	movlw	high STR_14
  2951  000D5C  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2952  000D5E  EC1D  F02B         	call	_printf	;wreg free
  2953                           
  2954                           ;main.c: 322:                     break;
  2955  000D62  EFFD  F003         	goto	l7661
  2956  000D66                     l7811:
  2957                           
  2958                           ;main.c: 325:     res = pf_lseek(p1);
  2959  000D66  C164  F0C0         	movff	main@p1,pf_lseek@ofs
  2960  000D6A  C165  F0C1         	movff	main@p1+1,pf_lseek@ofs+1
  2961  000D6E  C166  F0C2         	movff	main@p1+2,pf_lseek@ofs+2
  2962  000D72  C167  F0C3         	movff	main@p1+3,pf_lseek@ofs+3
  2963  000D76  ECE5  F00A         	call	_pf_lseek	;wreg free
  2964  000D7A  0101               	movlb	1	; () banked
  2965  000D7C  6F94               	movwf	main@res& (0+255),b
  2966                           
  2967                           ;main.c: 326:                 printf("\t");
  2968  000D7E  0E56               	movlw	low (STR_8+14)
  2969  000D80  0100               	movlb	0	; () banked
  2970  000D82  6F86               	movwf	printf@fmt& (0+255),b
  2971  000D84  0E7D               	movlw	high (STR_8+14)
  2972  000D86  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2973  000D88  EC1D  F02B         	call	_printf	;wreg free
  2974                           
  2975                           ;main.c: 327:     put_rc(res);
  2976  000D8C  0101               	movlb	1	; () banked
  2977  000D8E  5194               	movf	main@res& (0+255),w,b
  2978  000D90  EC82  F028         	call	_put_rc
  2979  000D94                     
  2980                           ;main.c: 328:     if (res == FR_OK)
  2981  000D94  0101               	movlb	1	; () banked
  2982  000D96  5194               	movf	main@res& (0+255),w,b
  2983  000D98  A4D8               	btfss	status,2,c
  2984  000D9A  EFD1  F006         	goto	u9971
  2985  000D9E  EFD3  F006         	goto	u9970
  2986  000DA2                     u9971:
  2987  000DA2  EFFD  F003         	goto	l7661
  2988  000DA6                     u9970:
  2989  000DA6                     
  2990                           ; BSR set to: 1
  2991                           ;main.c: 329:      printf("\tfptr = %lu(0x%lX)\r\n", fs.fptr, fs.fptr);
  2992  000DA6  0E0D               	movlw	low STR_16
  2993  000DA8  0100               	movlb	0	; () banked
  2994  000DAA  6F86               	movwf	printf@fmt& (0+255),b
  2995  000DAC  0E7D               	movlw	high STR_16
  2996  000DAE  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2997  000DB0  C1AB  F088         	movff	main@fs+22,?_printf+2
  2998  000DB4  C1AC  F089         	movff	main@fs+23,?_printf+3
  2999  000DB8  C1AD  F08A         	movff	main@fs+24,?_printf+4
  3000  000DBC  C1AE  F08B         	movff	main@fs+25,?_printf+5
  3001  000DC0  C1AB  F08C         	movff	main@fs+22,?_printf+6
  3002  000DC4  C1AC  F08D         	movff	main@fs+23,?_printf+7
  3003  000DC8  C1AD  F08E         	movff	main@fs+24,?_printf+8
  3004  000DCC  C1AE  F08F         	movff	main@fs+25,?_printf+9
  3005  000DD0  EC1D  F02B         	call	_printf	;wreg free
  3006  000DD4  EFFD  F003         	goto	l7661
  3007  000DD8                     l7817:
  3008                           
  3009                           ; BSR set to: 1
  3010                           ;main.c: 334:                 printf("\tDirectory listing\r\n");
  3011  000DD8  0E22               	movlw	low STR_17
  3012  000DDA  0100               	movlb	0	; () banked
  3013  000DDC  6F86               	movwf	printf@fmt& (0+255),b
  3014  000DDE  0E7D               	movlw	high STR_17
  3015  000DE0  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3016  000DE2  EC1D  F02B         	call	_printf	;wreg free
  3017                           
  3018                           ;main.c: 336:     while (*ptr == ' ')
  3019  000DE6  EFF8  F006         	goto	l7821
  3020  000DEA                     l7819:
  3021                           
  3022                           ;main.c: 337:                     ptr++;
  3023  000DEA  0101               	movlb	1	; () banked
  3024  000DEC  4B92               	infsnz	main@ptr& (0+255),f,b
  3025  000DEE  2B93               	incf	(main@ptr+1)& (0+255),f,b
  3026  000DF0                     l7821:
  3027                           
  3028                           ;main.c: 336:     while (*ptr == ' ')
  3029  000DF0  C192  FFD9         	movff	main@ptr,fsr2l
  3030  000DF4  C193  FFDA         	movff	main@ptr+1,fsr2h
  3031  000DF8  0E20               	movlw	32
  3032  000DFA  18DE               	xorwf	postinc2,w,c
  3033  000DFC  B4D8               	btfsc	status,2,c
  3034  000DFE  EF03  F007         	goto	u9981
  3035  000E02  EF05  F007         	goto	u9980
  3036  000E06                     u9981:
  3037  000E06  EFF5  F006         	goto	l7819
  3038  000E0A                     u9980:
  3039  000E0A                     
  3040                           ;main.c: 338:     res = pf_opendir(&dir, ptr);
  3041  000E0A  0E80               	movlw	low main@dir
  3042  000E0C  0100               	movlb	0	; () banked
  3043  000E0E  6FE1               	movwf	pf_opendir@dj& (0+255),b
  3044  000E10  0E01               	movlw	high main@dir
  3045  000E12  6FE2               	movwf	(pf_opendir@dj+1)& (0+255),b
  3046  000E14  C192  F0E3         	movff	main@ptr,pf_opendir@path
  3047  000E18  C193  F0E4         	movff	main@ptr+1,pf_opendir@path+1
  3048  000E1C  EC8E  F024         	call	_pf_opendir	;wreg free
  3049  000E20  0101               	movlb	1	; () banked
  3050  000E22  6F94               	movwf	main@res& (0+255),b
  3051  000E24                     
  3052                           ; BSR set to: 1
  3053                           ;main.c: 339:     if (res)
  3054  000E24  5194               	movf	main@res& (0+255),w,b
  3055  000E26  B4D8               	btfsc	status,2,c
  3056  000E28  EF18  F007         	goto	u9991
  3057  000E2C  EF1A  F007         	goto	u9990
  3058  000E30                     u9991:
  3059  000E30  EF1F  F007         	goto	l7829
  3060  000E34                     u9990:
  3061  000E34                     
  3062                           ; BSR set to: 1
  3063                           ;main.c: 340:                 {;main.c: 341:                     put_rc(res);
  3064  000E34  5194               	movf	main@res& (0+255),w,b
  3065  000E36  EC82  F028         	call	_put_rc
  3066                           
  3067                           ;main.c: 342:                     break;
  3068  000E3A  EFFD  F003         	goto	l7661
  3069  000E3E                     l7829:
  3070                           
  3071                           ; BSR set to: 1
  3072                           ;main.c: 344:     s1 = 0;
  3073  000E3E  0E00               	movlw	0
  3074  000E40  6F91               	movwf	(main@s1+1)& (0+255),b
  3075  000E42  0E00               	movlw	0
  3076  000E44  6F90               	movwf	main@s1& (0+255),b
  3077  000E46                     l7831:
  3078                           
  3079                           ; BSR set to: 1
  3080                           ;main.c: 346:                 {;main.c: 347:      res = pf_readdir(&dir, &fno);
  3081  000E46  0E80               	movlw	low main@dir
  3082  000E48  0100               	movlb	0	; () banked
  3083  000E4A  6FDC               	movwf	pf_readdir@dj& (0+255),b
  3084  000E4C  0E01               	movlw	high main@dir
  3085  000E4E  6FDD               	movwf	(pf_readdir@dj+1)& (0+255),b
  3086  000E50  0E6A               	movlw	low main@fno
  3087  000E52  6FDE               	movwf	pf_readdir@fno& (0+255),b
  3088  000E54  0E01               	movlw	high main@fno
  3089  000E56  6FDF               	movwf	(pf_readdir@fno+1)& (0+255),b
  3090  000E58  EC1C  F024         	call	_pf_readdir	;wreg free
  3091  000E5C  0101               	movlb	1	; () banked
  3092  000E5E  6F94               	movwf	main@res& (0+255),b
  3093  000E60                     
  3094                           ; BSR set to: 1
  3095                           ;main.c: 348:      if (res != FR_OK)
  3096  000E60  5194               	movf	main@res& (0+255),w,b
  3097  000E62  B4D8               	btfsc	status,2,c
  3098  000E64  EF36  F007         	goto	u10001
  3099  000E68  EF38  F007         	goto	u10000
  3100  000E6C                     u10001:
  3101  000E6C  EF3D  F007         	goto	l7837
  3102  000E70                     u10000:
  3103  000E70                     
  3104                           ; BSR set to: 1
  3105                           ;main.c: 349:                     {;main.c: 350:                         put_rc(res);
  3106  000E70  5194               	movf	main@res& (0+255),w,b
  3107  000E72  EC82  F028         	call	_put_rc
  3108                           
  3109                           ;main.c: 351:                         break;
  3110  000E76  EF73  F007         	goto	l7847
  3111  000E7A                     l7837:
  3112                           
  3113                           ; BSR set to: 1
  3114                           ;main.c: 353:      if (!fno.fname[0])
  3115  000E7A  5173               	movf	(main@fno+9)& (0+255),w,b
  3116  000E7C  A4D8               	btfss	status,2,c
  3117  000E7E  EF43  F007         	goto	u10011
  3118  000E82  EF45  F007         	goto	u10010
  3119  000E86                     u10011:
  3120  000E86  EF47  F007         	goto	l164
  3121  000E8A                     u10010:
  3122  000E8A  EF73  F007         	goto	l7847
  3123  000E8E                     l164:
  3124                           
  3125                           ; BSR set to: 1
  3126                           ;main.c: 355:      if (fno.fattrib & 0x10)
  3127  000E8E  A972               	btfss	(main@fno+8)& (0+255),4,b
  3128  000E90  EF4C  F007         	goto	u10021
  3129  000E94  EF4E  F007         	goto	u10020
  3130  000E98                     u10021:
  3131  000E98  EF5B  F007         	goto	l7843
  3132  000E9C                     u10020:
  3133  000E9C                     
  3134                           ; BSR set to: 1
  3135                           ;main.c: 356:       printf("\t   <DIR>   %s\r\n", fno.fname);
  3136  000E9C  0E37               	movlw	low STR_18
  3137  000E9E  0100               	movlb	0	; () banked
  3138  000EA0  6F86               	movwf	printf@fmt& (0+255),b
  3139  000EA2  0E7D               	movlw	high STR_18
  3140  000EA4  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3141  000EA6  0E73               	movlw	low (main@fno+9)
  3142  000EA8  6F88               	movwf	(?_printf+2)& (0+255),b
  3143  000EAA  0E01               	movlw	high (main@fno+9)
  3144  000EAC  6F89               	movwf	(?_printf+3)& (0+255),b
  3145  000EAE  EC1D  F02B         	call	_printf	;wreg free
  3146  000EB2  EF6E  F007         	goto	l7845
  3147  000EB6                     l7843:
  3148                           
  3149                           ; BSR set to: 1
  3150                           ;main.c: 358:       printf("\t%9lu  %s\r\n", fno.fsize, fno.fname);
  3151  000EB6  0E82               	movlw	low STR_19
  3152  000EB8  0100               	movlb	0	; () banked
  3153  000EBA  6F86               	movwf	printf@fmt& (0+255),b
  3154  000EBC  0E7D               	movlw	high STR_19
  3155  000EBE  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3156  000EC0  C16A  F088         	movff	main@fno,?_printf+2
  3157  000EC4  C16B  F089         	movff	main@fno+1,?_printf+3
  3158  000EC8  C16C  F08A         	movff	main@fno+2,?_printf+4
  3159  000ECC  C16D  F08B         	movff	main@fno+3,?_printf+5
  3160  000ED0  0E73               	movlw	low (main@fno+9)
  3161  000ED2  6F8C               	movwf	(?_printf+6)& (0+255),b
  3162  000ED4  0E01               	movlw	high (main@fno+9)
  3163  000ED6  6F8D               	movwf	(?_printf+7)& (0+255),b
  3164  000ED8  EC1D  F02B         	call	_printf	;wreg free
  3165  000EDC                     l7845:
  3166                           
  3167                           ;main.c: 359:      s1++;
  3168  000EDC  0101               	movlb	1	; () banked
  3169  000EDE  4B90               	infsnz	main@s1& (0+255),f,b
  3170  000EE0  2B91               	incf	(main@s1+1)& (0+255),f,b
  3171                           
  3172                           ;main.c: 360:     }
  3173  000EE2  EF23  F007         	goto	l7831
  3174  000EE6                     l7847:
  3175                           
  3176                           ;main.c: 361:     printf("\t%u item(s)\r\n", s1);
  3177  000EE6  0E66               	movlw	low STR_20
  3178  000EE8  0100               	movlb	0	; () banked
  3179  000EEA  6F86               	movwf	printf@fmt& (0+255),b
  3180  000EEC  0E7D               	movlw	high STR_20
  3181  000EEE  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3182  000EF0  C190  F088         	movff	main@s1,?_printf+2
  3183  000EF4  C191  F089         	movff	main@s1+1,?_printf+3
  3184  000EF8  EC1D  F02B         	call	_printf	;wreg free
  3185                           
  3186                           ;main.c: 362:     break;
  3187  000EFC  EFFD  F003         	goto	l7661
  3188  000F00                     l7851:
  3189                           
  3190                           ; BSR set to: 1
  3191  000F00  C192  FFD9         	movff	main@ptr,fsr2l
  3192  000F04  C193  FFDA         	movff	main@ptr+1,fsr2h
  3193  000F08  4B92               	infsnz	main@ptr& (0+255),f,b
  3194  000F0A  2B93               	incf	(main@ptr+1)& (0+255),f,b
  3195  000F0C  50DF               	movf	indf2,w,c
  3196  000F0E  6F55               	movwf	??_main& (0+255),b
  3197  000F10  6B56               	clrf	(??_main+1)& (0+255),b
  3198                           
  3199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3200                           ; Switch size 1, requested type "simple"
  3201                           ; Number of cases is 1, Range of values is 0 to 0
  3202                           ; switch strategies available:
  3203                           ; Name         Instructions Cycles
  3204                           ; simple_byte            4     3 (average)
  3205                           ;	Chosen strategy is simple_byte
  3206  000F12  5156               	movf	(??_main+1)& (0+255),w,b
  3207  000F14  0A00               	xorlw	0	; case 0
  3208  000F16  B4D8               	btfsc	status,2,c
  3209  000F18  EF90  F007         	goto	l8057
  3210  000F1C  EFFD  F003         	goto	l7661
  3211  000F20                     l8057:
  3212                           
  3213                           ; BSR set to: 1
  3214                           ; Switch size 1, requested type "simple"
  3215                           ; Number of cases is 7, Range of values is 100 to 116
  3216                           ; switch strategies available:
  3217                           ; Name         Instructions Cycles
  3218                           ; simple_byte           22    12 (average)
  3219                           ;	Chosen strategy is simple_byte
  3220  000F20  5155               	movf	??_main& (0+255),w,b
  3221  000F22  0A64               	xorlw	100	; case 100
  3222  000F24  B4D8               	btfsc	status,2,c
  3223  000F26  EF53  F005         	goto	l7729
  3224  000F2A  0A01               	xorlw	1	; case 101
  3225  000F2C  B4D8               	btfsc	status,2,c
  3226  000F2E  EF8A  F006         	goto	l7805
  3227  000F32  0A0C               	xorlw	12	; case 105
  3228  000F34  B4D8               	btfsc	status,2,c
  3229  000F36  EF03  F005         	goto	l7711
  3230  000F3A  0A05               	xorlw	5	; case 108
  3231  000F3C  B4D8               	btfsc	status,2,c
  3232  000F3E  EFEC  F006         	goto	l7817
  3233  000F42  0A03               	xorlw	3	; case 111
  3234  000F44  B4D8               	btfsc	status,2,c
  3235  000F46  EF20  F005         	goto	l7717
  3236  000F4A  0A1C               	xorlw	28	; case 115
  3237  000F4C  B4D8               	btfsc	status,2,c
  3238  000F4E  EFDE  F005         	goto	l7767
  3239  000F52  0A07               	xorlw	7	; case 116
  3240  000F54  B4D8               	btfsc	status,2,c
  3241  000F56  EF5E  F006         	goto	l7795
  3242  000F5A  EFFD  F003         	goto	l7661
  3243  000F5E                     l7855:
  3244                           
  3245                           ; BSR set to: 1
  3246  000F5E  C192  FFD9         	movff	main@ptr,fsr2l
  3247  000F62  C193  FFDA         	movff	main@ptr+1,fsr2h
  3248  000F66  4B92               	infsnz	main@ptr& (0+255),f,b
  3249  000F68  2B93               	incf	(main@ptr+1)& (0+255),f,b
  3250  000F6A  50DF               	movf	indf2,w,c
  3251  000F6C  6F55               	movwf	??_main& (0+255),b
  3252  000F6E  6B56               	clrf	(??_main+1)& (0+255),b
  3253                           
  3254                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3255                           ; Switch size 1, requested type "simple"
  3256                           ; Number of cases is 1, Range of values is 0 to 0
  3257                           ; switch strategies available:
  3258                           ; Name         Instructions Cycles
  3259                           ; simple_byte            4     3 (average)
  3260                           ;	Chosen strategy is simple_byte
  3261  000F70  5156               	movf	(??_main+1)& (0+255),w,b
  3262  000F72  0A00               	xorlw	0	; case 0
  3263  000F74  B4D8               	btfsc	status,2,c
  3264  000F76  EFBF  F007         	goto	l8059
  3265  000F7A  EFFD  F003         	goto	l7661
  3266  000F7E                     l8059:
  3267                           
  3268                           ; BSR set to: 1
  3269                           ; Switch size 1, requested type "simple"
  3270                           ; Number of cases is 2, Range of values is 100 to 102
  3271                           ; switch strategies available:
  3272                           ; Name         Instructions Cycles
  3273                           ; simple_byte            7     4 (average)
  3274                           ;	Chosen strategy is simple_byte
  3275  000F7E  5155               	movf	??_main& (0+255),w,b
  3276  000F80  0A64               	xorlw	100	; case 100
  3277  000F82  B4D8               	btfsc	status,2,c
  3278  000F84  EFE8  F004         	goto	l7709
  3279  000F88  0A02               	xorlw	2	; case 102
  3280  000F8A  B4D8               	btfsc	status,2,c
  3281  000F8C  EF80  F007         	goto	l7851
  3282  000F90  EFFD  F003         	goto	l7661
  3283  000F94  EF07  F000         	goto	start
  3284  000F98                     __end_of_main:
  3285                           	callstack 0
  3286                           
  3287 ;; *************** function _xatoi *****************
  3288 ;; Defined at:
  3289 ;;		line 255 in file "uart.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  str             2   17[COMRAM] PTR PTR unsigned char 
  3292 ;;		 -> main@ptr(2), 
  3293 ;;  res             2   19[COMRAM] PTR long 
  3294 ;;		 -> main@p2(4), main@p1(4), 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  val             4   25[COMRAM] unsigned long 
  3297 ;;  c               1   29[COMRAM] unsigned char 
  3298 ;;  r               1   24[COMRAM] unsigned char 
  3299 ;;  s               1   23[COMRAM] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  2   17[COMRAM] int 
  3302 ;; Registers used:
  3303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3309 ;;      Params:         4       0       0       0       0       0       0
  3310 ;;      Locals:         7       0       0       0       0       0       0
  3311 ;;      Temps:          2       0       0       0       0       0       0
  3312 ;;      Totals:        13       0       0       0       0       0       0
  3313 ;;Total ram usage:       13 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 2
  3316 ;; This function calls:
  3317 ;;		___lmul
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text1
  3324  00240E                     __ptext1:
  3325                           	callstack 0
  3326  00240E                     _xatoi:
  3327                           	callstack 28
  3328  00240E                     
  3329                           ;uart.c: 256:  char **str,;uart.c: 257:  long *res;uart.c: 259: {;uart.c: 260:  unsigned
      +                           long val;;uart.c: 261:  unsigned char c, r, s = 0;
  3330  00240E  0E00               	movlw	0
  3331  002410  6E18               	movwf	xatoi@s^0,c
  3332  002412                     
  3333                           ;uart.c: 263:  *res = 0;
  3334  002412  C014  FFD9         	movff	xatoi@res,fsr2l
  3335  002416  C015  FFDA         	movff	xatoi@res+1,fsr2h
  3336  00241A  6ADE               	clrf	postinc2,c
  3337  00241C  6ADE               	clrf	postinc2,c
  3338  00241E  6ADE               	clrf	postinc2,c
  3339  002420  6ADD               	clrf	postdec2,c
  3340                           
  3341                           ;uart.c: 265:  while ((c = **str) == ' ') (*str)++;
  3342  002422  EF1A  F012         	goto	l497
  3343  002426                     l5387:
  3344  002426  C012  FFD9         	movff	xatoi@str,fsr2l
  3345  00242A  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3346  00242E  2ADE               	incf	postinc2,f,c
  3347  002430  0E00               	movlw	0
  3348  002432  22DD               	addwfc	postdec2,f,c
  3349  002434                     l497:
  3350  002434  C012  FFD9         	movff	xatoi@str,fsr2l
  3351  002438  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3352  00243C  CFDE F016          	movff	postinc2,??_xatoi
  3353  002440  CFDD F017          	movff	postdec2,??_xatoi+1
  3354  002444  C016  FFD9         	movff	??_xatoi,fsr2l
  3355  002448  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3356  00244C  50DF               	movf	indf2,w,c
  3357  00244E  6E1E               	movwf	xatoi@c^0,c
  3358  002450  0E20               	movlw	32
  3359  002452  181E               	xorwf	xatoi@c^0,w,c
  3360  002454  B4D8               	btfsc	status,2,c
  3361  002456  EF2F  F012         	goto	u6191
  3362  00245A  EF31  F012         	goto	u6190
  3363  00245E                     u6191:
  3364  00245E  EF13  F012         	goto	l5387
  3365  002462                     u6190:
  3366  002462                     
  3367                           ;uart.c: 267:  if (c == '-') {
  3368  002462  0E2D               	movlw	45
  3369  002464  181E               	xorwf	xatoi@c^0,w,c
  3370  002466  A4D8               	btfss	status,2,c
  3371  002468  EF38  F012         	goto	u6201
  3372  00246C  EF3A  F012         	goto	u6200
  3373  002470                     u6201:
  3374  002470  EF4D  F012         	goto	l5395
  3375  002474                     u6200:
  3376  002474                     
  3377                           ;uart.c: 268:   s = 1;
  3378  002474  0E01               	movlw	1
  3379  002476  6E18               	movwf	xatoi@s^0,c
  3380  002478                     
  3381                           ;uart.c: 269:   c = *(++(*str));
  3382  002478  C012  FFD9         	movff	xatoi@str,fsr2l
  3383  00247C  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3384  002480  2ADE               	incf	postinc2,f,c
  3385  002482  0E00               	movlw	0
  3386  002484  22DD               	addwfc	postdec2,f,c
  3387  002486  CFDE F016          	movff	postinc2,??_xatoi
  3388  00248A  CFDD F017          	movff	postdec2,??_xatoi+1
  3389  00248E  C016  FFD9         	movff	??_xatoi,fsr2l
  3390  002492  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3391  002496  50DF               	movf	indf2,w,c
  3392  002498  6E1E               	movwf	xatoi@c^0,c
  3393  00249A                     l5395:
  3394                           
  3395                           ;uart.c: 272:  if (c == '0') {
  3396  00249A  0E30               	movlw	48
  3397  00249C  181E               	xorwf	xatoi@c^0,w,c
  3398  00249E  A4D8               	btfss	status,2,c
  3399  0024A0  EF54  F012         	goto	u6211
  3400  0024A4  EF56  F012         	goto	u6210
  3401  0024A8                     u6211:
  3402  0024A8  EFBF  F012         	goto	l5425
  3403  0024AC                     u6210:
  3404  0024AC                     
  3405                           ;uart.c: 273:   c = *(++(*str));
  3406  0024AC  C012  FFD9         	movff	xatoi@str,fsr2l
  3407  0024B0  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3408  0024B4  2ADE               	incf	postinc2,f,c
  3409  0024B6  0E00               	movlw	0
  3410  0024B8  22DD               	addwfc	postdec2,f,c
  3411  0024BA  CFDE F016          	movff	postinc2,??_xatoi
  3412  0024BE  CFDD F017          	movff	postdec2,??_xatoi+1
  3413  0024C2  C016  FFD9         	movff	??_xatoi,fsr2l
  3414  0024C6  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3415  0024CA  50DF               	movf	indf2,w,c
  3416  0024CC  6E1E               	movwf	xatoi@c^0,c
  3417                           
  3418                           ;uart.c: 274:   switch (c) {
  3419  0024CE  EFAA  F012         	goto	l5423
  3420  0024D2                     l5399:
  3421                           
  3422                           ;uart.c: 276:    r = 16; c = *(++(*str));
  3423  0024D2  0E10               	movlw	16
  3424  0024D4  6E19               	movwf	xatoi@r^0,c
  3425  0024D6                     l5401:
  3426  0024D6  C012  FFD9         	movff	xatoi@str,fsr2l
  3427  0024DA  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3428  0024DE  2ADE               	incf	postinc2,f,c
  3429  0024E0  0E00               	movlw	0
  3430  0024E2  22DD               	addwfc	postdec2,f,c
  3431  0024E4  CFDE F016          	movff	postinc2,??_xatoi
  3432  0024E8  CFDD F017          	movff	postdec2,??_xatoi+1
  3433  0024EC  C016  FFD9         	movff	??_xatoi,fsr2l
  3434  0024F0  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3435  0024F4  50DF               	movf	indf2,w,c
  3436  0024F6  6E1E               	movwf	xatoi@c^0,c
  3437                           
  3438                           ;uart.c: 277:    break;
  3439  0024F8  EFD3  F012         	goto	l512
  3440  0024FC                     l5403:
  3441                           
  3442                           ;uart.c: 279:    r = 2; c = *(++(*str));
  3443  0024FC  0E02               	movlw	2
  3444  0024FE  6E19               	movwf	xatoi@r^0,c
  3445  002500  EF6B  F012         	goto	l5401
  3446  002504                     l5407:
  3447                           
  3448                           ;uart.c: 282:    if (c <= ' ') return 1;
  3449  002504  0E21               	movlw	33
  3450  002506  601E               	cpfslt	xatoi@c^0,c
  3451  002508  EF88  F012         	goto	u6221
  3452  00250C  EF8A  F012         	goto	u6220
  3453  002510                     u6221:
  3454  002510  EF90  F012         	goto	l5413
  3455  002514                     u6220:
  3456  002514                     l5409:
  3457  002514  0E00               	movlw	0
  3458  002516  6E13               	movwf	(?_xatoi+1)^0,c
  3459  002518  0E01               	movlw	1
  3460  00251A  6E12               	movwf	?_xatoi^0,c
  3461  00251C  EF5B  F013         	goto	l508
  3462  002520                     l5413:
  3463                           
  3464                           ;uart.c: 283:    if (c < '0' || c > '9') return 0;
  3465  002520  0E2F               	movlw	47
  3466  002522  641E               	cpfsgt	xatoi@c^0,c
  3467  002524  EF96  F012         	goto	u6231
  3468  002528  EF98  F012         	goto	u6230
  3469  00252C                     u6231:
  3470  00252C  EFA0  F012         	goto	l5417
  3471  002530                     u6230:
  3472  002530  0E39               	movlw	57
  3473  002532  641E               	cpfsgt	xatoi@c^0,c
  3474  002534  EF9E  F012         	goto	u6241
  3475  002538  EFA0  F012         	goto	u6240
  3476  00253C                     u6241:
  3477  00253C  EFA6  F012         	goto	l5421
  3478  002540                     u6240:
  3479  002540                     l5417:
  3480  002540  0E00               	movlw	0
  3481  002542  6E13               	movwf	(?_xatoi+1)^0,c
  3482  002544  0E00               	movlw	0
  3483  002546  6E12               	movwf	?_xatoi^0,c
  3484  002548  EF5B  F013         	goto	l508
  3485  00254C                     l5421:
  3486                           
  3487                           ;uart.c: 284:    r = 8;
  3488  00254C  0E08               	movlw	8
  3489  00254E  6E19               	movwf	xatoi@r^0,c
  3490                           
  3491                           ;uart.c: 285:   }
  3492  002550  EFD3  F012         	goto	l512
  3493  002554                     l5423:
  3494  002554  501E               	movf	xatoi@c^0,w,c
  3495  002556  6E16               	movwf	??_xatoi^0,c
  3496  002558  6A17               	clrf	(??_xatoi+1)^0,c
  3497                           
  3498                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3499                           ; Switch size 1, requested type "simple"
  3500                           ; Number of cases is 1, Range of values is 0 to 0
  3501                           ; switch strategies available:
  3502                           ; Name         Instructions Cycles
  3503                           ; simple_byte            4     3 (average)
  3504                           ;	Chosen strategy is simple_byte
  3505  00255A  5017               	movf	(??_xatoi+1)^0,w,c
  3506  00255C  0A00               	xorlw	0	; case 0
  3507  00255E  B4D8               	btfsc	status,2,c
  3508  002560  EFB4  F012         	goto	l8061
  3509  002564  EF82  F012         	goto	l5407
  3510  002568                     l8061:
  3511                           
  3512                           ; Switch size 1, requested type "simple"
  3513                           ; Number of cases is 2, Range of values is 98 to 120
  3514                           ; switch strategies available:
  3515                           ; Name         Instructions Cycles
  3516                           ; simple_byte            7     4 (average)
  3517                           ;	Chosen strategy is simple_byte
  3518  002568  5016               	movf	??_xatoi^0,w,c
  3519  00256A  0A62               	xorlw	98	; case 98
  3520  00256C  B4D8               	btfsc	status,2,c
  3521  00256E  EF7E  F012         	goto	l5403
  3522  002572  0A1A               	xorlw	26	; case 120
  3523  002574  B4D8               	btfsc	status,2,c
  3524  002576  EF69  F012         	goto	l5399
  3525  00257A  EF82  F012         	goto	l5407
  3526  00257E                     l5425:
  3527                           
  3528                           ;uart.c: 287:   if (c < '0' || c > '9') return 0;
  3529  00257E  0E2F               	movlw	47
  3530  002580  641E               	cpfsgt	xatoi@c^0,c
  3531  002582  EFC5  F012         	goto	u6251
  3532  002586  EFC7  F012         	goto	u6250
  3533  00258A                     u6251:
  3534  00258A  EFA0  F012         	goto	l5417
  3535  00258E                     u6250:
  3536  00258E  0E39               	movlw	57
  3537  002590  641E               	cpfsgt	xatoi@c^0,c
  3538  002592  EFCD  F012         	goto	u6261
  3539  002596  EFCF  F012         	goto	u6260
  3540  00259A                     u6261:
  3541  00259A  EFD1  F012         	goto	l5433
  3542  00259E                     u6260:
  3543  00259E  EFA0  F012         	goto	l5417
  3544  0025A2                     l5433:
  3545                           
  3546                           ;uart.c: 288:   r = 10;
  3547  0025A2  0E0A               	movlw	10
  3548  0025A4  6E19               	movwf	xatoi@r^0,c
  3549  0025A6                     l512:
  3550                           
  3551                           ;uart.c: 291:  val = 0;
  3552  0025A6  0E00               	movlw	0
  3553  0025A8  6E1A               	movwf	xatoi@val^0,c
  3554  0025AA  0E00               	movlw	0
  3555  0025AC  6E1B               	movwf	(xatoi@val+1)^0,c
  3556  0025AE  0E00               	movlw	0
  3557  0025B0  6E1C               	movwf	(xatoi@val+2)^0,c
  3558  0025B2  0E00               	movlw	0
  3559  0025B4  6E1D               	movwf	(xatoi@val+3)^0,c
  3560                           
  3561                           ;uart.c: 292:  while (c > ' ') {
  3562  0025B6  EF34  F013         	goto	l5455
  3563  0025BA                     l5435:
  3564                           
  3565                           ;uart.c: 293:   if (c >= 'a')
  3566  0025BA  0E60               	movlw	96
  3567  0025BC  641E               	cpfsgt	xatoi@c^0,c
  3568  0025BE  EFE3  F012         	goto	u6271
  3569  0025C2  EFE5  F012         	goto	u6270
  3570  0025C6                     u6271:
  3571  0025C6  EFE7  F012         	goto	l518
  3572  0025CA                     u6270:
  3573  0025CA                     
  3574                           ;uart.c: 294:             c -= 0x20;
  3575  0025CA  0E20               	movlw	32
  3576  0025CC  5E1E               	subwf	xatoi@c^0,f,c
  3577  0025CE                     l518:
  3578                           
  3579                           ;uart.c: 295:   c -= '0';
  3580  0025CE  0E30               	movlw	48
  3581  0025D0  5E1E               	subwf	xatoi@c^0,f,c
  3582                           
  3583                           ;uart.c: 296:   if (c >= 17) {
  3584  0025D2  0E10               	movlw	16
  3585  0025D4  641E               	cpfsgt	xatoi@c^0,c
  3586  0025D6  EFEF  F012         	goto	u6281
  3587  0025DA  EFF1  F012         	goto	u6280
  3588  0025DE                     u6281:
  3589  0025DE  EFFD  F012         	goto	l5445
  3590  0025E2                     u6280:
  3591  0025E2                     
  3592                           ;uart.c: 297:    c -= 7;
  3593  0025E2  0E07               	movlw	7
  3594  0025E4  5E1E               	subwf	xatoi@c^0,f,c
  3595                           
  3596                           ;uart.c: 298:    if (c <= 9) return 0;
  3597  0025E6  0E0A               	movlw	10
  3598  0025E8  601E               	cpfslt	xatoi@c^0,c
  3599  0025EA  EFF9  F012         	goto	u6291
  3600  0025EE  EFFB  F012         	goto	u6290
  3601  0025F2                     u6291:
  3602  0025F2  EFFD  F012         	goto	l5445
  3603  0025F6                     u6290:
  3604  0025F6  EFA0  F012         	goto	l5417
  3605  0025FA                     l5445:
  3606                           
  3607                           ;uart.c: 300:   if (c >= r) return 0;
  3608  0025FA  5019               	movf	xatoi@r^0,w,c
  3609  0025FC  5C1E               	subwf	xatoi@c^0,w,c
  3610  0025FE  A0D8               	btfss	status,0,c
  3611  002600  EF04  F013         	goto	u6301
  3612  002604  EF06  F013         	goto	u6300
  3613  002608                     u6301:
  3614  002608  EF08  F013         	goto	l5451
  3615  00260C                     u6300:
  3616  00260C  EFA0  F012         	goto	l5417
  3617  002610                     l5451:
  3618                           
  3619                           ;uart.c: 301:   val = val * r + c;
  3620  002610  5019               	movf	xatoi@r^0,w,c
  3621  002612  6E06               	movwf	___lmul@multiplier^0,c
  3622  002614  6A07               	clrf	(___lmul@multiplier+1)^0,c
  3623  002616  6A08               	clrf	(___lmul@multiplier+2)^0,c
  3624  002618  6A09               	clrf	(___lmul@multiplier+3)^0,c
  3625  00261A  C01A  F00A         	movff	xatoi@val,___lmul@multiplicand
  3626  00261E  C01B  F00B         	movff	xatoi@val+1,___lmul@multiplicand+1
  3627  002622  C01C  F00C         	movff	xatoi@val+2,___lmul@multiplicand+2
  3628  002626  C01D  F00D         	movff	xatoi@val+3,___lmul@multiplicand+3
  3629  00262A  EC39  F029         	call	___lmul	;wreg free
  3630  00262E  501E               	movf	xatoi@c^0,w,c
  3631  002630  2406               	addwf	?___lmul^0,w,c
  3632  002632  6E1A               	movwf	xatoi@val^0,c
  3633  002634  0E00               	movlw	0
  3634  002636  2007               	addwfc	(?___lmul+1)^0,w,c
  3635  002638  6E1B               	movwf	(xatoi@val+1)^0,c
  3636  00263A  0E00               	movlw	0
  3637  00263C  2008               	addwfc	(?___lmul+2)^0,w,c
  3638  00263E  6E1C               	movwf	(xatoi@val+2)^0,c
  3639  002640  0E00               	movlw	0
  3640  002642  2009               	addwfc	(?___lmul+3)^0,w,c
  3641  002644  6E1D               	movwf	(xatoi@val+3)^0,c
  3642  002646                     
  3643                           ;uart.c: 302:   c = *(++(*str));
  3644  002646  C012  FFD9         	movff	xatoi@str,fsr2l
  3645  00264A  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3646  00264E  2ADE               	incf	postinc2,f,c
  3647  002650  0E00               	movlw	0
  3648  002652  22DD               	addwfc	postdec2,f,c
  3649  002654  CFDE F016          	movff	postinc2,??_xatoi
  3650  002658  CFDD F017          	movff	postdec2,??_xatoi+1
  3651  00265C  C016  FFD9         	movff	??_xatoi,fsr2l
  3652  002660  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3653  002664  50DF               	movf	indf2,w,c
  3654  002666  6E1E               	movwf	xatoi@c^0,c
  3655  002668                     l5455:
  3656                           
  3657                           ;uart.c: 292:  while (c > ' ') {
  3658  002668  0E21               	movlw	33
  3659  00266A  601E               	cpfslt	xatoi@c^0,c
  3660  00266C  EF3A  F013         	goto	u6311
  3661  002670  EF3C  F013         	goto	u6310
  3662  002674                     u6311:
  3663  002674  EFDD  F012         	goto	l5435
  3664  002678                     u6310:
  3665  002678                     
  3666                           ;uart.c: 305:  if (s) val = 0 - val;
  3667  002678  5018               	movf	xatoi@s^0,w,c
  3668  00267A  B4D8               	btfsc	status,2,c
  3669  00267C  EF42  F013         	goto	u6321
  3670  002680  EF44  F013         	goto	u6320
  3671  002684                     u6321:
  3672  002684  EF4D  F013         	goto	l5461
  3673  002688                     u6320:
  3674  002688  6C1A               	negf	xatoi@val^0,c
  3675  00268A  1E1B               	comf	(xatoi@val+1)^0,f,c
  3676  00268C  B0D8               	btfsc	status,0,c
  3677  00268E  2A1B               	incf	(xatoi@val+1)^0,f,c
  3678  002690  1E1C               	comf	(xatoi@val+2)^0,f,c
  3679  002692  B0D8               	btfsc	status,0,c
  3680  002694  2A1C               	incf	(xatoi@val+2)^0,f,c
  3681  002696  0E00               	movlw	0
  3682  002698  561D               	subfwb	(xatoi@val+3)^0,f,c
  3683  00269A                     l5461:
  3684                           
  3685                           ;uart.c: 307:  *res = val;
  3686  00269A  C014  FFD9         	movff	xatoi@res,fsr2l
  3687  00269E  C015  FFDA         	movff	xatoi@res+1,fsr2h
  3688  0026A2  C01A  FFDE         	movff	xatoi@val,postinc2
  3689  0026A6  C01B  FFDE         	movff	xatoi@val+1,postinc2
  3690  0026AA  C01C  FFDE         	movff	xatoi@val+2,postinc2
  3691  0026AE  C01D  FFDE         	movff	xatoi@val+3,postinc2
  3692  0026B2  EF8A  F012         	goto	l5409
  3693  0026B6                     l508:
  3694  0026B6  0012               	return		;funcret
  3695  0026B8                     __end_of_xatoi:
  3696                           	callstack 0
  3697                           
  3698 ;; *************** function _uart_init *****************
  3699 ;; Defined at:
  3700 ;;		line 149 in file "uart.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;		None
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;		None
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg, status,2
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3714 ;;      Params:         0       0       0       0       0       0       0
  3715 ;;      Locals:         0       0       0       0       0       0       0
  3716 ;;      Temps:          0       0       0       0       0       0       0
  3717 ;;      Totals:         0       0       0       0       0       0       0
  3718 ;;Total ram usage:        0 bytes
  3719 ;; Hardware stack levels used: 1
  3720 ;; Hardware stack levels required when called: 1
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_main
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text2
  3729  00533E                     __ptext2:
  3730                           	callstack 0
  3731  00533E                     _uart_init:
  3732                           	callstack 29
  3733  00533E                     
  3734                           ;uart.c: 152:  RCIE = 0;
  3735  00533E  9A9D               	bcf	3997,5,c	;volatile
  3736                           
  3737                           ;uart.c: 153:  TXIE = 0;
  3738  005340  989D               	bcf	3997,4,c	;volatile
  3739  005342                     
  3740                           ;uart.c: 156:     TXSTA = 0x24;
  3741  005342  0E24               	movlw	36
  3742  005344  6EAC               	movwf	172,c	;volatile
  3743                           
  3744                           ;uart.c: 167:     RCSTA = 0x90;
  3745  005346  0E90               	movlw	144
  3746  005348  6EAB               	movwf	171,c	;volatile
  3747                           
  3748                           ;uart.c: 178:     SPBRG = 129;
  3749  00534A  0E81               	movlw	129
  3750  00534C  6EAF               	movwf	175,c	;volatile
  3751                           
  3752                           ;uart.c: 181:  TxFifo.ri = 0; TxFifo.wi = 0; TxFifo.ct = 0;
  3753  00534E  0E00               	movlw	0
  3754  005350  0104               	movlb	4	; () banked
  3755  005352  6F01               	movwf	(_TxFifo+1)& (0+255),b	;volatile
  3756  005354  0E00               	movlw	0
  3757  005356  6F00               	movwf	_TxFifo& (0+255),b	;volatile
  3758  005358  0E00               	movlw	0
  3759  00535A  6F03               	movwf	(_TxFifo+3)& (0+255),b	;volatile
  3760  00535C  0E00               	movlw	0
  3761  00535E  6F02               	movwf	(_TxFifo+2)& (0+255),b	;volatile
  3762  005360  0E00               	movlw	0
  3763  005362  6F05               	movwf	(_TxFifo+5)& (0+255),b	;volatile
  3764  005364  0E00               	movlw	0
  3765  005366  6F04               	movwf	(_TxFifo+4)& (0+255),b	;volatile
  3766                           
  3767                           ;uart.c: 182:  RxFifo.ri = 0; RxFifo.wi = 0; RxFifo.ct = 0;
  3768  005368  0E00               	movlw	0
  3769  00536A  0102               	movlb	2	; () banked
  3770  00536C  6F01               	movwf	(_RxFifo+1)& (0+255),b	;volatile
  3771  00536E  0E00               	movlw	0
  3772  005370  6F00               	movwf	_RxFifo& (0+255),b	;volatile
  3773  005372  0E00               	movlw	0
  3774  005374  6F03               	movwf	(_RxFifo+3)& (0+255),b	;volatile
  3775  005376  0E00               	movlw	0
  3776  005378  6F02               	movwf	(_RxFifo+2)& (0+255),b	;volatile
  3777  00537A  0E00               	movlw	0
  3778  00537C  6F05               	movwf	(_RxFifo+5)& (0+255),b	;volatile
  3779  00537E  0E00               	movlw	0
  3780  005380  6F04               	movwf	(_RxFifo+4)& (0+255),b	;volatile
  3781                           
  3782                           ;uart.c: 183:  TxRun = 0;
  3783  005382  0E00               	movlw	0
  3784  005384  0100               	movlb	0	; () banked
  3785  005386  6FFC               	movwf	(_TxRun+1)& (0+255),b	;volatile
  3786  005388  0E00               	movlw	0
  3787  00538A  6FFB               	movwf	_TxRun& (0+255),b	;volatile
  3788  00538C                     
  3789                           ; BSR set to: 0
  3790                           ;uart.c: 186:     RCIP = 1;
  3791  00538C  8A9F               	bsf	3999,5,c	;volatile
  3792  00538E                     
  3793                           ; BSR set to: 0
  3794                           ;uart.c: 187:     TXIP = 0;
  3795  00538E  989F               	bcf	3999,4,c	;volatile
  3796  005390                     
  3797                           ; BSR set to: 0
  3798                           ;uart.c: 189:     RCIF = 0;
  3799  005390  9A9E               	bcf	3998,5,c	;volatile
  3800  005392                     
  3801                           ; BSR set to: 0
  3802                           ;uart.c: 190:     TXIF = 0;
  3803  005392  989E               	bcf	3998,4,c	;volatile
  3804  005394                     
  3805                           ; BSR set to: 0
  3806                           ;uart.c: 192:  RCIE = 1;
  3807  005394  8A9D               	bsf	3997,5,c	;volatile
  3808  005396                     
  3809                           ; BSR set to: 0
  3810                           ;uart.c: 195:     GIE = 0x01;
  3811  005396  8EF2               	bsf	4082,7,c	;volatile
  3812  005398                     
  3813                           ; BSR set to: 0
  3814                           ;uart.c: 196:     PEIE = 0x01;
  3815  005398  8CF2               	bsf	4082,6,c	;volatile
  3816  00539A                     
  3817                           ; BSR set to: 0
  3818  00539A  0012               	return		;funcret
  3819  00539C                     __end_of_uart_init:
  3820                           	callstack 0
  3821                           
  3822 ;; *************** function _uart_gets *****************
  3823 ;; Defined at:
  3824 ;;		line 96 in file "uart.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  buff            2   16[BANK0 ] PTR unsigned char 
  3827 ;;		 -> Line(128), 
  3828 ;;  len             2   18[BANK0 ] int 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  c               2   27[BANK0 ] int 
  3831 ;;  i               2   25[BANK0 ] int 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  2   16[BANK0 ] int 
  3834 ;; Registers used:
  3835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3841 ;;      Params:         0       4       0       0       0       0       0
  3842 ;;      Locals:         0       4       0       0       0       0       0
  3843 ;;      Temps:          0       5       0       0       0       0       0
  3844 ;;      Totals:         0      13       0       0       0       0       0
  3845 ;;Total ram usage:       13 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 9
  3848 ;; This function calls:
  3849 ;;		_memset
  3850 ;;		_printf
  3851 ;; This function is called by:
  3852 ;;		_main
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text3
  3857  0043EE                     __ptext3:
  3858                           	callstack 0
  3859  0043EE                     _uart_gets:
  3860                           	callstack 21
  3861  0043EE                     
  3862                           ;uart.c: 97:  char* buff,;uart.c: 98:  int len;uart.c: 100: {;uart.c: 101:  int c, i;;ua
      +                          rt.c: 103:  i = 0;
  3863  0043EE  0E00               	movlw	0
  3864  0043F0  0100               	movlb	0	; () banked
  3865  0043F2  6F9A               	movwf	(uart_gets@i+1)& (0+255),b
  3866  0043F4  0E00               	movlw	0
  3867  0043F6  6F99               	movwf	uart_gets@i& (0+255),b
  3868  0043F8                     l7213:
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;uart.c: 105:   c = RxFifo.buff[i];
  3872  0043F8  0E06               	movlw	low (_RxFifo+6)
  3873  0043FA  2599               	addwf	uart_gets@i& (0+255),w,b
  3874  0043FC  6ED9               	movwf	fsr2l,c
  3875  0043FE  0E02               	movlw	high (_RxFifo+6)
  3876  004400  219A               	addwfc	(uart_gets@i+1)& (0+255),w,b
  3877  004402  6EDA               	movwf	fsr2h,c
  3878  004404  50DF               	movf	indf2,w,c
  3879  004406  6F94               	movwf	??_uart_gets& (0+255),b
  3880  004408  5194               	movf	??_uart_gets& (0+255),w,b
  3881  00440A  6F9B               	movwf	uart_gets@c& (0+255),b
  3882  00440C  6B9C               	clrf	(uart_gets@c+1)& (0+255),b
  3883  00440E                     
  3884                           ; BSR set to: 0
  3885                           ;uart.c: 106:   if (!c) continue;
  3886  00440E  519B               	movf	uart_gets@c& (0+255),w,b
  3887  004410  119C               	iorwf	(uart_gets@c+1)& (0+255),w,b
  3888  004412  A4D8               	btfss	status,2,c
  3889  004414  EF0E  F022         	goto	u9101
  3890  004418  EF10  F022         	goto	u9100
  3891  00441C                     u9101:
  3892  00441C  EF12  F022         	goto	l7219
  3893  004420                     u9100:
  3894  004420  EFFC  F021         	goto	l7213
  3895  004424                     l7219:
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;uart.c: 107:   if (c == '\r') break;
  3899  004424  0E0D               	movlw	13
  3900  004426  199B               	xorwf	uart_gets@c& (0+255),w,b
  3901  004428  119C               	iorwf	(uart_gets@c+1)& (0+255),w,b
  3902  00442A  A4D8               	btfss	status,2,c
  3903  00442C  EF1A  F022         	goto	u9111
  3904  004430  EF1C  F022         	goto	u9110
  3905  004434                     u9111:
  3906  004434  EF1E  F022         	goto	l7223
  3907  004438                     u9110:
  3908  004438  EF70  F022         	goto	l7243
  3909  00443C                     l7223:
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;uart.c: 108:   if (c == '\b' && i) {
  3913  00443C  0E08               	movlw	8
  3914  00443E  199B               	xorwf	uart_gets@c& (0+255),w,b
  3915  004440  119C               	iorwf	(uart_gets@c+1)& (0+255),w,b
  3916  004442  A4D8               	btfss	status,2,c
  3917  004444  EF26  F022         	goto	u9121
  3918  004448  EF28  F022         	goto	u9120
  3919  00444C                     u9121:
  3920  00444C  EF3E  F022         	goto	l7233
  3921  004450                     u9120:
  3922  004450                     
  3923                           ; BSR set to: 0
  3924  004450  5199               	movf	uart_gets@i& (0+255),w,b
  3925  004452  119A               	iorwf	(uart_gets@i+1)& (0+255),w,b
  3926  004454  B4D8               	btfsc	status,2,c
  3927  004456  EF2F  F022         	goto	u9131
  3928  00445A  EF31  F022         	goto	u9130
  3929  00445E                     u9131:
  3930  00445E  EF3E  F022         	goto	l7233
  3931  004462                     u9130:
  3932  004462                     
  3933                           ; BSR set to: 0
  3934                           ;uart.c: 109:             RxFifo.buff[i] = '0';
  3935  004462  0E06               	movlw	low (_RxFifo+6)
  3936  004464  2599               	addwf	uart_gets@i& (0+255),w,b
  3937  004466  6ED9               	movwf	fsr2l,c
  3938  004468  0E02               	movlw	high (_RxFifo+6)
  3939  00446A  219A               	addwfc	(uart_gets@i+1)& (0+255),w,b
  3940  00446C  6EDA               	movwf	fsr2h,c
  3941  00446E  0E30               	movlw	48
  3942  004470  6EDF               	movwf	indf2,c
  3943  004472                     
  3944                           ; BSR set to: 0
  3945                           ;uart.c: 110:    i--;
  3946  004472  0799               	decf	uart_gets@i& (0+255),f,b
  3947  004474  A0D8               	btfss	status,0,c
  3948  004476  079A               	decf	(uart_gets@i+1)& (0+255),f,b
  3949                           
  3950                           ;uart.c: 111:    if (0)
  3951  004478  EFFC  F021         	goto	l7213
  3952  00447C                     l7233:
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;uart.c: 115:   if (c >= ' ' && i < len - 1) {
  3956  00447C  519C               	movf	(uart_gets@c+1)& (0+255),w,b
  3957  00447E  E109               	bnz	u9140
  3958  004480  0E20               	movlw	32
  3959  004482  5D9B               	subwf	uart_gets@c& (0+255),w,b
  3960  004484  A0D8               	btfss	status,0,c
  3961  004486  EF47  F022         	goto	u9141
  3962  00448A  EF49  F022         	goto	u9140
  3963  00448E                     u9141:
  3964  00448E  EFFC  F021         	goto	l7213
  3965  004492                     u9140:
  3966  004492                     
  3967                           ; BSR set to: 0
  3968  004492  0EFF               	movlw	255
  3969  004494  6F94               	movwf	??_uart_gets& (0+255),b
  3970  004496  0EFF               	movlw	255
  3971  004498  6F95               	movwf	(??_uart_gets+1)& (0+255),b
  3972  00449A  C092  F096         	movff	uart_gets@len,??_uart_gets+2
  3973  00449E  C093  F097         	movff	uart_gets@len+1,??_uart_gets+3
  3974  0044A2  5194               	movf	??_uart_gets& (0+255),w,b
  3975  0044A4  2796               	addwf	(??_uart_gets+2)& (0+255),f,b
  3976  0044A6  5195               	movf	(??_uart_gets+1)& (0+255),w,b
  3977  0044A8  2397               	addwfc	(??_uart_gets+3)& (0+255),f,b
  3978  0044AA  5196               	movf	(??_uart_gets+2)& (0+255),w,b
  3979  0044AC  5D99               	subwf	uart_gets@i& (0+255),w,b
  3980  0044AE  519A               	movf	(uart_gets@i+1)& (0+255),w,b
  3981  0044B0  0A80               	xorlw	128
  3982  0044B2  6F98               	movwf	(??_uart_gets+4)& (0+255),b
  3983  0044B4  5197               	movf	(??_uart_gets+3)& (0+255),w,b
  3984  0044B6  0A80               	xorlw	128
  3985  0044B8  5998               	subwfb	(??_uart_gets+4)& (0+255),w,b
  3986  0044BA  B0D8               	btfsc	status,0,c
  3987  0044BC  EF62  F022         	goto	u9151
  3988  0044C0  EF64  F022         	goto	u9150
  3989  0044C4                     u9151:
  3990  0044C4  EFFC  F021         	goto	l7213
  3991  0044C8                     u9150:
  3992  0044C8                     
  3993                           ; BSR set to: 0
  3994                           ;uart.c: 116:    buff[i++] = c;
  3995  0044C8  5199               	movf	uart_gets@i& (0+255),w,b
  3996  0044CA  2590               	addwf	uart_gets@buff& (0+255),w,b
  3997  0044CC  6ED9               	movwf	fsr2l,c
  3998  0044CE  519A               	movf	(uart_gets@i+1)& (0+255),w,b
  3999  0044D0  2191               	addwfc	(uart_gets@buff+1)& (0+255),w,b
  4000  0044D2  6EDA               	movwf	fsr2h,c
  4001  0044D4  C09B  FFDF         	movff	uart_gets@c,indf2
  4002  0044D8                     
  4003                           ; BSR set to: 0
  4004  0044D8  4B99               	infsnz	uart_gets@i& (0+255),f,b
  4005  0044DA  2B9A               	incf	(uart_gets@i+1)& (0+255),f,b
  4006                           
  4007                           ;uart.c: 117:    if (0)
  4008  0044DC  EFFC  F021         	goto	l7213
  4009  0044E0                     l7243:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;uart.c: 121:  buff[i] = 0;
  4013  0044E0  5199               	movf	uart_gets@i& (0+255),w,b
  4014  0044E2  2590               	addwf	uart_gets@buff& (0+255),w,b
  4015  0044E4  6ED9               	movwf	fsr2l,c
  4016  0044E6  519A               	movf	(uart_gets@i+1)& (0+255),w,b
  4017  0044E8  2191               	addwfc	(uart_gets@buff+1)& (0+255),w,b
  4018  0044EA  6EDA               	movwf	fsr2h,c
  4019  0044EC  0E00               	movlw	0
  4020  0044EE  6EDF               	movwf	indf2,c
  4021  0044F0                     
  4022                           ; BSR set to: 0
  4023                           ;uart.c: 125:     memset(RxFifo.buff, 0x00, sizeof(RxFifo.buff));
  4024  0044F0  0E06               	movlw	low (_RxFifo+6)
  4025  0044F2  6E06               	movwf	memset@dest^0,c
  4026  0044F4  0E02               	movlw	high (_RxFifo+6)
  4027  0044F6  6E07               	movwf	(memset@dest+1)^0,c
  4028  0044F8  0E00               	movlw	0
  4029  0044FA  6E09               	movwf	(memset@c+1)^0,c
  4030  0044FC  0E00               	movlw	0
  4031  0044FE  6E08               	movwf	memset@c^0,c
  4032  004500  0E00               	movlw	0
  4033  004502  6E0B               	movwf	(memset@n+1)^0,c
  4034  004504  0E80               	movlw	128
  4035  004506  6E0A               	movwf	memset@n^0,c
  4036  004508  ECB9  F01D         	call	_memset	;wreg free
  4037  00450C                     
  4038                           ;uart.c: 126:     RxFifo.wi = 0;
  4039  00450C  0E00               	movlw	0
  4040  00450E  0102               	movlb	2	; () banked
  4041  004510  6F03               	movwf	(_RxFifo+3)& (0+255),b	;volatile
  4042  004512  0E00               	movlw	0
  4043  004514  6F02               	movwf	(_RxFifo+2)& (0+255),b	;volatile
  4044  004516                     
  4045                           ; BSR set to: 2
  4046                           ;uart.c: 127:     RxFifo.ct = 0;
  4047  004516  0E00               	movlw	0
  4048  004518  6F05               	movwf	(_RxFifo+5)& (0+255),b	;volatile
  4049  00451A  0E00               	movlw	0
  4050  00451C  6F04               	movwf	(_RxFifo+4)& (0+255),b	;volatile
  4051  00451E                     
  4052                           ; BSR set to: 2
  4053  00451E  0012               	return		;funcret
  4054  004520                     __end_of_uart_gets:
  4055                           	callstack 0
  4056                           
  4057 ;; *************** function _memset *****************
  4058 ;; Defined at:
  4059 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memset.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  dest            2    5[COMRAM] PTR void 
  4062 ;;		 -> RxFifo.buff(128), RxFifo(134), 
  4063 ;;  c               2    7[COMRAM] int 
  4064 ;;  n               2    9[COMRAM] unsigned int 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  s               2   15[COMRAM] PTR unsigned char 
  4067 ;;		 -> RxFifo.buff(128), RxFifo(134), 
  4068 ;;  k               2   13[COMRAM] unsigned int 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  2    5[COMRAM] PTR void 
  4071 ;; Registers used:
  4072 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4078 ;;      Params:         6       0       0       0       0       0       0
  4079 ;;      Locals:         4       0       0       0       0       0       0
  4080 ;;      Temps:          2       0       0       0       0       0       0
  4081 ;;      Totals:        12       0       0       0       0       0       0
  4082 ;;Total ram usage:       12 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; Hardware stack levels required when called: 1
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_uart_gets
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text4
  4093  003B72                     __ptext4:
  4094                           	callstack 0
  4095  003B72                     _memset:
  4096                           	callstack 28
  4097  003B72  C006  F010         	movff	memset@dest,memset@s
  4098  003B76  C007  F011         	movff	memset@dest+1,memset@s+1
  4099  003B7A  500A               	movf	memset@n^0,w,c
  4100  003B7C  100B               	iorwf	(memset@n+1)^0,w,c
  4101  003B7E  A4D8               	btfss	status,2,c
  4102  003B80  EFC4  F01D         	goto	u6021
  4103  003B84  EFC6  F01D         	goto	u6020
  4104  003B88                     u6021:
  4105  003B88  EFC8  F01D         	goto	l5243
  4106  003B8C                     u6020:
  4107  003B8C  EF73  F01E         	goto	l1310
  4108  003B90                     l5243:
  4109  003B90  C010  FFD9         	movff	memset@s,fsr2l
  4110  003B94  C011  FFDA         	movff	memset@s+1,fsr2h
  4111  003B98  C008  FFDF         	movff	memset@c,indf2
  4112  003B9C  500A               	movf	memset@n^0,w,c
  4113  003B9E  2410               	addwf	memset@s^0,w,c
  4114  003BA0  6E0C               	movwf	??_memset^0,c
  4115  003BA2  500B               	movf	(memset@n+1)^0,w,c
  4116  003BA4  2011               	addwfc	(memset@s+1)^0,w,c
  4117  003BA6  6E0D               	movwf	(??_memset+1)^0,c
  4118  003BA8  0EFF               	movlw	255
  4119  003BAA  240C               	addwf	??_memset^0,w,c
  4120  003BAC  6ED9               	movwf	fsr2l,c
  4121  003BAE  0EFF               	movlw	255
  4122  003BB0  200D               	addwfc	(??_memset+1)^0,w,c
  4123  003BB2  6EDA               	movwf	fsr2h,c
  4124  003BB4  C008  FFDF         	movff	memset@c,indf2
  4125  003BB8  500B               	movf	(memset@n+1)^0,w,c
  4126  003BBA  E107               	bnz	u6031
  4127  003BBC  0E03               	movlw	3
  4128  003BBE  5C0A               	subwf	memset@n^0,w,c
  4129  003BC0  B0D8               	btfsc	status,0,c
  4130  003BC2  EFE5  F01D         	goto	u6031
  4131  003BC6  EFE7  F01D         	goto	u6030
  4132  003BCA                     u6031:
  4133  003BCA  EFE9  F01D         	goto	l5249
  4134  003BCE                     u6030:
  4135  003BCE  EF73  F01E         	goto	l1310
  4136  003BD2                     l5249:
  4137  003BD2  EE20 F001          	lfsr	2,1
  4138  003BD6  5010               	movf	memset@s^0,w,c
  4139  003BD8  26D9               	addwf	fsr2l,f,c
  4140  003BDA  5011               	movf	(memset@s+1)^0,w,c
  4141  003BDC  22DA               	addwfc	fsr2h,f,c
  4142  003BDE  C008  FFDF         	movff	memset@c,indf2
  4143  003BE2  EE20 F002          	lfsr	2,2
  4144  003BE6  5010               	movf	memset@s^0,w,c
  4145  003BE8  26D9               	addwf	fsr2l,f,c
  4146  003BEA  5011               	movf	(memset@s+1)^0,w,c
  4147  003BEC  22DA               	addwfc	fsr2h,f,c
  4148  003BEE  C008  FFDF         	movff	memset@c,indf2
  4149  003BF2  500A               	movf	memset@n^0,w,c
  4150  003BF4  2410               	addwf	memset@s^0,w,c
  4151  003BF6  6E0C               	movwf	??_memset^0,c
  4152  003BF8  500B               	movf	(memset@n+1)^0,w,c
  4153  003BFA  2011               	addwfc	(memset@s+1)^0,w,c
  4154  003BFC  6E0D               	movwf	(??_memset+1)^0,c
  4155  003BFE  0EFE               	movlw	254
  4156  003C00  240C               	addwf	??_memset^0,w,c
  4157  003C02  6ED9               	movwf	fsr2l,c
  4158  003C04  0EFF               	movlw	255
  4159  003C06  200D               	addwfc	(??_memset+1)^0,w,c
  4160  003C08  6EDA               	movwf	fsr2h,c
  4161  003C0A  C008  FFDF         	movff	memset@c,indf2
  4162  003C0E  500A               	movf	memset@n^0,w,c
  4163  003C10  2410               	addwf	memset@s^0,w,c
  4164  003C12  6E0C               	movwf	??_memset^0,c
  4165  003C14  500B               	movf	(memset@n+1)^0,w,c
  4166  003C16  2011               	addwfc	(memset@s+1)^0,w,c
  4167  003C18  6E0D               	movwf	(??_memset+1)^0,c
  4168  003C1A  0EFD               	movlw	253
  4169  003C1C  240C               	addwf	??_memset^0,w,c
  4170  003C1E  6ED9               	movwf	fsr2l,c
  4171  003C20  0EFF               	movlw	255
  4172  003C22  200D               	addwfc	(??_memset+1)^0,w,c
  4173  003C24  6EDA               	movwf	fsr2h,c
  4174  003C26  C008  FFDF         	movff	memset@c,indf2
  4175  003C2A  500B               	movf	(memset@n+1)^0,w,c
  4176  003C2C  E107               	bnz	u6041
  4177  003C2E  0E07               	movlw	7
  4178  003C30  5C0A               	subwf	memset@n^0,w,c
  4179  003C32  B0D8               	btfsc	status,0,c
  4180  003C34  EF1E  F01E         	goto	u6041
  4181  003C38  EF20  F01E         	goto	u6040
  4182  003C3C                     u6041:
  4183  003C3C  EF22  F01E         	goto	l5255
  4184  003C40                     u6040:
  4185  003C40  EF73  F01E         	goto	l1310
  4186  003C44                     l5255:
  4187  003C44  EE20 F003          	lfsr	2,3
  4188  003C48  5010               	movf	memset@s^0,w,c
  4189  003C4A  26D9               	addwf	fsr2l,f,c
  4190  003C4C  5011               	movf	(memset@s+1)^0,w,c
  4191  003C4E  22DA               	addwfc	fsr2h,f,c
  4192  003C50  C008  FFDF         	movff	memset@c,indf2
  4193  003C54  500A               	movf	memset@n^0,w,c
  4194  003C56  2410               	addwf	memset@s^0,w,c
  4195  003C58  6E0C               	movwf	??_memset^0,c
  4196  003C5A  500B               	movf	(memset@n+1)^0,w,c
  4197  003C5C  2011               	addwfc	(memset@s+1)^0,w,c
  4198  003C5E  6E0D               	movwf	(??_memset+1)^0,c
  4199  003C60  0EFC               	movlw	252
  4200  003C62  240C               	addwf	??_memset^0,w,c
  4201  003C64  6ED9               	movwf	fsr2l,c
  4202  003C66  0EFF               	movlw	255
  4203  003C68  200D               	addwfc	(??_memset+1)^0,w,c
  4204  003C6A  6EDA               	movwf	fsr2h,c
  4205  003C6C  C008  FFDF         	movff	memset@c,indf2
  4206  003C70  500B               	movf	(memset@n+1)^0,w,c
  4207  003C72  E107               	bnz	u6051
  4208  003C74  0E09               	movlw	9
  4209  003C76  5C0A               	subwf	memset@n^0,w,c
  4210  003C78  B0D8               	btfsc	status,0,c
  4211  003C7A  EF41  F01E         	goto	u6051
  4212  003C7E  EF43  F01E         	goto	u6050
  4213  003C82                     u6051:
  4214  003C82  EF45  F01E         	goto	l5261
  4215  003C86                     u6050:
  4216  003C86  EF73  F01E         	goto	l1310
  4217  003C8A                     l5261:
  4218  003C8A  C010  F00C         	movff	memset@s,??_memset
  4219  003C8E  C011  F00D         	movff	memset@s+1,??_memset+1
  4220  003C92  1E0C               	comf	??_memset^0,f,c
  4221  003C94  1E0D               	comf	(??_memset+1)^0,f,c
  4222  003C96  4A0C               	infsnz	??_memset^0,f,c
  4223  003C98  2A0D               	incf	(??_memset+1)^0,f,c
  4224  003C9A  0E03               	movlw	3
  4225  003C9C  140C               	andwf	??_memset^0,w,c
  4226  003C9E  6E0E               	movwf	memset@k^0,c
  4227  003CA0  6A0F               	clrf	(memset@k+1)^0,c
  4228  003CA2  500E               	movf	memset@k^0,w,c
  4229  003CA4  2610               	addwf	memset@s^0,f,c
  4230  003CA6  500F               	movf	(memset@k+1)^0,w,c
  4231  003CA8  2211               	addwfc	(memset@s+1)^0,f,c
  4232  003CAA  500E               	movf	memset@k^0,w,c
  4233  003CAC  5E0A               	subwf	memset@n^0,f,c
  4234  003CAE  500F               	movf	(memset@k+1)^0,w,c
  4235  003CB0  5A0B               	subwfb	(memset@n+1)^0,f,c
  4236  003CB2  0EFC               	movlw	252
  4237  003CB4  160A               	andwf	memset@n^0,f,c
  4238  003CB6  0EFF               	movlw	255
  4239  003CB8  160B               	andwf	(memset@n+1)^0,f,c
  4240  003CBA  EF6A  F01E         	goto	l5269
  4241  003CBE                     l5263:
  4242  003CBE  C010  FFD9         	movff	memset@s,fsr2l
  4243  003CC2  C011  FFDA         	movff	memset@s+1,fsr2h
  4244  003CC6  C008  FFDF         	movff	memset@c,indf2
  4245  003CCA  060A               	decf	memset@n^0,f,c
  4246  003CCC  A0D8               	btfss	status,0,c
  4247  003CCE  060B               	decf	(memset@n+1)^0,f,c
  4248  003CD0  4A10               	infsnz	memset@s^0,f,c
  4249  003CD2  2A11               	incf	(memset@s+1)^0,f,c
  4250  003CD4                     l5269:
  4251  003CD4  500A               	movf	memset@n^0,w,c
  4252  003CD6  100B               	iorwf	(memset@n+1)^0,w,c
  4253  003CD8  A4D8               	btfss	status,2,c
  4254  003CDA  EF71  F01E         	goto	u6061
  4255  003CDE  EF73  F01E         	goto	u6060
  4256  003CE2                     u6061:
  4257  003CE2  EF5F  F01E         	goto	l5263
  4258  003CE6                     u6060:
  4259  003CE6                     l1310:
  4260  003CE6  0012               	return		;funcret
  4261  003CE8                     __end_of_memset:
  4262                           	callstack 0
  4263                           
  4264 ;; *************** function _pwm_stop *****************
  4265 ;; Defined at:
  4266 ;;		line 59 in file "./pwm.h"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      void 
  4273 ;; Registers used:
  4274 ;;		None
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4280 ;;      Params:         0       0       0       0       0       0       0
  4281 ;;      Locals:         0       0       0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0
  4283 ;;      Totals:         0       0       0       0       0       0       0
  4284 ;;Total ram usage:        0 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; Hardware stack levels required when called: 1
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_main
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text5
  4295  005752                     __ptext5:
  4296                           	callstack 0
  4297  005752                     _pwm_stop:
  4298                           	callstack 29
  4299  005752                     
  4300                           ;./pwm.h: 61:     TMR2ON = 0;
  4301  005752  94CA               	bcf	4042,2,c	;volatile
  4302  005754  0012               	return		;funcret
  4303  005756                     __end_of_pwm_stop:
  4304                           	callstack 0
  4305                           
  4306 ;; *************** function _pwm_start *****************
  4307 ;; Defined at:
  4308 ;;		line 54 in file "./pwm.h"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		None
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4322 ;;      Params:         0       0       0       0       0       0       0
  4323 ;;      Locals:         0       0       0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0
  4325 ;;      Totals:         0       0       0       0       0       0       0
  4326 ;;Total ram usage:        0 bytes
  4327 ;; Hardware stack levels used: 1
  4328 ;; Hardware stack levels required when called: 1
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_main
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text6
  4337  005756                     __ptext6:
  4338                           	callstack 0
  4339  005756                     _pwm_start:
  4340                           	callstack 29
  4341  005756                     
  4342                           ;./pwm.h: 56:     TMR2ON = 1;
  4343  005756  84CA               	bsf	4042,2,c	;volatile
  4344  005758  0012               	return		;funcret
  4345  00575A                     __end_of_pwm_start:
  4346                           	callstack 0
  4347                           
  4348 ;; *************** function _pwm_setDuty *****************
  4349 ;; Defined at:
  4350 ;;		line 47 in file "./pwm.h"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  dutycycle       2    5[COMRAM] unsigned int 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4364 ;;      Params:         2       0       0       0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0       0       0
  4366 ;;      Temps:          2       0       0       0       0       0       0
  4367 ;;      Totals:         4       0       0       0       0       0       0
  4368 ;;Total ram usage:        4 bytes
  4369 ;; Hardware stack levels used: 1
  4370 ;; Hardware stack levels required when called: 1
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_main
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           	psect	text7
  4379  005662                     __ptext7:
  4380                           	callstack 0
  4381  005662                     _pwm_setDuty:
  4382                           	callstack 29
  4383  005662                     
  4384                           ;./pwm.h: 47: void pwm_setDuty(unsigned int dutycycle);./pwm.h: 48: {;./pwm.h: 49:     C
      +                          CPR1L = dutycycle>>2;
  4385  005662  C006  F008         	movff	pwm_setDuty@dutycycle,??_pwm_setDuty
  4386  005666  C007  F009         	movff	pwm_setDuty@dutycycle+1,??_pwm_setDuty+1
  4387  00566A  90D8               	bcf	status,0,c
  4388  00566C  3209               	rrcf	(??_pwm_setDuty+1)^0,f,c
  4389  00566E  3208               	rrcf	??_pwm_setDuty^0,f,c
  4390  005670  90D8               	bcf	status,0,c
  4391  005672  3209               	rrcf	(??_pwm_setDuty+1)^0,f,c
  4392  005674  3208               	rrcf	??_pwm_setDuty^0,f,c
  4393  005676  5008               	movf	??_pwm_setDuty^0,w,c
  4394  005678  6EBE               	movwf	190,c	;volatile
  4395                           
  4396                           ;./pwm.h: 50:     CCP1CON &= 0xCF;
  4397  00567A  0ECF               	movlw	207
  4398  00567C  16BD               	andwf	189,f,c	;volatile
  4399                           
  4400                           ;./pwm.h: 51:     CCP1CON |= ((dutycycle<<4) & 0x30);
  4401  00567E  3806               	swapf	pwm_setDuty@dutycycle^0,w,c	;volatile
  4402  005680  0BF0               	andlw	240
  4403  005682  0B30               	andlw	48
  4404  005684  12BD               	iorwf	189,f,c	;volatile
  4405  005686  0012               	return		;funcret
  4406  005688                     __end_of_pwm_setDuty:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function _pwm_Init *****************
  4410 ;; Defined at:
  4411 ;;		line 19 in file "./pwm.h"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  period          1    wreg     unsigned char 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  period          1    5[COMRAM] unsigned char 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      void 
  4418 ;; Registers used:
  4419 ;;		wreg, status,2
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4425 ;;      Params:         0       0       0       0       0       0       0
  4426 ;;      Locals:         1       0       0       0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0
  4428 ;;      Totals:         1       0       0       0       0       0       0
  4429 ;;Total ram usage:        1 bytes
  4430 ;; Hardware stack levels used: 1
  4431 ;; Hardware stack levels required when called: 1
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_main
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text8
  4440  0056E2                     __ptext8:
  4441                           	callstack 0
  4442  0056E2                     _pwm_Init:
  4443                           	callstack 29
  4444                           
  4445                           ;incstack = 0
  4446                           ;pwm_Init@period stored from wreg
  4447  0056E2  6E06               	movwf	pwm_Init@period^0,c
  4448  0056E4                     
  4449                           ;./pwm.h: 21:     TRISC = 0;
  4450  0056E4  0E00               	movlw	0
  4451  0056E6  6E94               	movwf	148,c	;volatile
  4452                           
  4453                           ;./pwm.h: 22:     LATC = 0;
  4454  0056E8  0E00               	movlw	0
  4455  0056EA  6E8B               	movwf	139,c	;volatile
  4456                           
  4457                           ;./pwm.h: 25:     CCP1CON = 0X3C;
  4458  0056EC  0E3C               	movlw	60
  4459  0056EE  6EBD               	movwf	189,c	;volatile
  4460  0056F0                     
  4461                           ;./pwm.h: 35:     PR2 = period;
  4462  0056F0  C006  FFCB         	movff	pwm_Init@period,4043	;volatile
  4463  0056F4                     
  4464                           ;./pwm.h: 37:     T2CON=0x04;
  4465  0056F4  0E04               	movlw	4
  4466  0056F6  6ECA               	movwf	202,c	;volatile
  4467  0056F8  0012               	return		;funcret
  4468  0056FA                     __end_of_pwm_Init:
  4469                           	callstack 0
  4470                           
  4471 ;; *************** function _put_rc *****************
  4472 ;; Defined at:
  4473 ;;		line 27 in file "main.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  rc              1    wreg     enum E3114
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  rc              1   17[BANK0 ] enum E3114
  4478 ;;  p               2   18[BANK0 ] PTR const unsigned char 
  4479 ;;		 -> put_rc@str(69), 
  4480 ;;  i               1   16[BANK0 ] enum E3114
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4490 ;;      Params:         0       0       0       0       0       0       0
  4491 ;;      Locals:         0       4       0       0       0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0
  4493 ;;      Totals:         0       4       0       0       0       0       0
  4494 ;;Total ram usage:        4 bytes
  4495 ;; Hardware stack levels used: 1
  4496 ;; Hardware stack levels required when called: 9
  4497 ;; This function calls:
  4498 ;;		_printf
  4499 ;; This function is called by:
  4500 ;;		_main
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           	psect	text9
  4505  005104                     __ptext9:
  4506                           	callstack 0
  4507  005104                     _put_rc:
  4508                           	callstack 21
  4509                           
  4510                           ;incstack = 0
  4511                           ;put_rc@rc stored from wreg
  4512  005104  0100               	movlb	0	; () banked
  4513  005106  6F91               	movwf	put_rc@rc& (0+255),b
  4514  005108                     
  4515                           ;main.c: 27: void put_rc (FRESULT rc);main.c: 28: {;main.c: 29:  const char *p;;main.c: 
      +                          30:  FRESULT i;;main.c: 31:  static const char str[] =;main.c: 34:  for (p = str, i = 0;
      +                           i != rc && *p; i++) {
  4516  005108  0E0D               	movlw	low put_rc@str
  4517  00510A  0100               	movlb	0	; () banked
  4518  00510C  6F92               	movwf	put_rc@p& (0+255),b
  4519  00510E  0E7C               	movlw	high put_rc@str
  4520  005110  6F93               	movwf	(put_rc@p+1)& (0+255),b
  4521  005112  0E00               	movlw	0
  4522  005114  6F90               	movwf	put_rc@i& (0+255),b
  4523  005116  EF9E  F028         	goto	l7203
  4524  00511A                     l7199:
  4525                           
  4526                           ; BSR set to: 0
  4527  00511A  C092  FFF6         	movff	put_rc@p,tblptrl
  4528  00511E  C093  FFF7         	movff	put_rc@p+1,tblptrh
  4529  005122  4B92               	infsnz	put_rc@p& (0+255),f,b
  4530  005124  2B93               	incf	(put_rc@p+1)& (0+255),f,b
  4531  005126                     	if	0	;tblptru may be non-zero
  4532  005126                     	endif
  4533  005126                     	if	0	;tblptru may be non-zero
  4534  005126                     	endif
  4535  005126  0008               	tblrd		*
  4536  005128  50F5               	movf	tablat,w,c
  4537  00512A  0900               	iorlw	0
  4538  00512C  A4D8               	btfss	status,2,c
  4539  00512E  EF9B  F028         	goto	u9071
  4540  005132  EF9D  F028         	goto	u9070
  4541  005136                     u9071:
  4542  005136  EF8D  F028         	goto	l7199
  4543  00513A                     u9070:
  4544  00513A                     
  4545                           ; BSR set to: 0
  4546                           ;main.c: 36:  }
  4547  00513A  2B90               	incf	put_rc@i& (0+255),f,b
  4548  00513C                     l7203:
  4549                           
  4550                           ; BSR set to: 0
  4551  00513C  5191               	movf	put_rc@rc& (0+255),w,b
  4552  00513E  1990               	xorwf	put_rc@i& (0+255),w,b
  4553  005140  B4D8               	btfsc	status,2,c
  4554  005142  EFA5  F028         	goto	u9081
  4555  005146  EFA7  F028         	goto	u9080
  4556  00514A                     u9081:
  4557  00514A  EFB5  F028         	goto	l7207
  4558  00514E                     u9080:
  4559  00514E                     
  4560                           ; BSR set to: 0
  4561  00514E  C092  FFF6         	movff	put_rc@p,tblptrl
  4562  005152  C093  FFF7         	movff	put_rc@p+1,tblptrh
  4563  005156                     	if	0	;tblptru may be non-zero
  4564  005156                     	endif
  4565  005156                     	if	0	;tblptru may be non-zero
  4566  005156                     	endif
  4567  005156  0008               	tblrd		*
  4568  005158  50F5               	movf	tablat,w,c
  4569  00515A  0900               	iorlw	0
  4570  00515C  A4D8               	btfss	status,2,c
  4571  00515E  EFB3  F028         	goto	u9091
  4572  005162  EFB5  F028         	goto	u9090
  4573  005166                     u9091:
  4574  005166  EF8D  F028         	goto	l7199
  4575  00516A                     u9090:
  4576  00516A                     l7207:
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;main.c: 37:  printf("rc=%u FR_%s\r\n", rc, p);
  4580  00516A  0E74               	movlw	low STR_1
  4581  00516C  6F86               	movwf	printf@fmt& (0+255),b
  4582  00516E  0E7D               	movlw	high STR_1
  4583  005170  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4584  005172  C091  F088         	movff	put_rc@rc,?_printf+2
  4585  005176  6B89               	clrf	(?_printf+3)& (0+255),b
  4586  005178  C092  F08A         	movff	put_rc@p,?_printf+4
  4587  00517C  C093  F08B         	movff	put_rc@p+1,?_printf+5
  4588  005180  EC1D  F02B         	call	_printf	;wreg free
  4589  005184  0012               	return		;funcret
  4590  005186                     __end_of_put_rc:
  4591                           	callstack 0
  4592                           
  4593 ;; *************** function _put_dump *****************
  4594 ;; Defined at:
  4595 ;;		line 203 in file "uart.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  buff            2   16[BANK0 ] PTR const void 
  4598 ;;		 -> Line(128), 
  4599 ;;  addr            4   18[BANK0 ] unsigned long 
  4600 ;;  len             2   22[BANK0 ] int 
  4601 ;;  width           2   24[BANK0 ] int 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  i               2   36[BANK0 ] int 
  4604 ;;  bp              2   34[BANK0 ] PTR const unsigned char 
  4605 ;;		 -> Line(128), 
  4606 ;;  lp              2   30[BANK0 ] PTR const unsigned long 
  4607 ;;		 -> Line(128), 
  4608 ;;  sp              2   28[BANK0 ] PTR const unsigned short
  4609 ;;		 -> Line(128), 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4619 ;;      Params:         0      10       0       0       0       0       0
  4620 ;;      Locals:         0      10       0       0       0       0       0
  4621 ;;      Temps:          0       2       0       0       0       0       0
  4622 ;;      Totals:         0      22       0       0       0       0       0
  4623 ;;Total ram usage:       22 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; Hardware stack levels required when called: 9
  4626 ;; This function calls:
  4627 ;;		_printf
  4628 ;; This function is called by:
  4629 ;;		_main
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text10
  4634  002DCC                     __ptext10:
  4635                           	callstack 0
  4636  002DCC                     _put_dump:
  4637                           	callstack 21
  4638  002DCC                     
  4639                           ;uart.c: 204:  const void* buff,;uart.c: 205:  unsigned long addr,;uart.c: 206:  int len
      +                          ,;uart.c: 207:  int width;uart.c: 209: {;uart.c: 210:  int i;;uart.c: 211:  const unsign
      +                          ed char *bp;;uart.c: 212:  const unsigned short *sp;;uart.c: 213:  const unsigned long *
      +                          lp;;uart.c: 215:  printf("addr: %08lX |", addr);
  4640  002DCC  0E58               	movlw	low STR_24
  4641  002DCE  0100               	movlb	0	; () banked
  4642  002DD0  6F86               	movwf	printf@fmt& (0+255),b
  4643  002DD2  0E7D               	movlw	high STR_24
  4644  002DD4  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4645  002DD6  C092  F088         	movff	put_dump@addr,?_printf+2
  4646  002DDA  C093  F089         	movff	put_dump@addr+1,?_printf+3
  4647  002DDE  C094  F08A         	movff	put_dump@addr+2,?_printf+4
  4648  002DE2  C095  F08B         	movff	put_dump@addr+3,?_printf+5
  4649  002DE6  EC1D  F02B         	call	_printf	;wreg free
  4650                           
  4651                           ;uart.c: 217:  switch (width) {
  4652  002DEA  EFCA  F017         	goto	l7303
  4653  002DEE                     l7257:
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;uart.c: 219:   bp = buff;
  4657  002DEE  C090  F0A2         	movff	put_dump@buff,put_dump@bp
  4658  002DF2  C091  F0A3         	movff	put_dump@buff+1,put_dump@bp+1
  4659  002DF6                     
  4660                           ; BSR set to: 0
  4661                           ;uart.c: 220:   for (i = 0; i < len; i++)
  4662  002DF6  0E00               	movlw	0
  4663  002DF8  6FA5               	movwf	(put_dump@i+1)& (0+255),b
  4664  002DFA  0E00               	movlw	0
  4665  002DFC  6FA4               	movwf	put_dump@i& (0+255),b
  4666  002DFE  EF15  F017         	goto	l7265
  4667  002E02                     l7261:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;uart.c: 221:    printf(" %02X", bp[i]);
  4671  002E02  0E9D               	movlw	low STR_25
  4672  002E04  6F86               	movwf	printf@fmt& (0+255),b
  4673  002E06  0E7D               	movlw	high STR_25
  4674  002E08  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4675  002E0A  51A4               	movf	put_dump@i& (0+255),w,b
  4676  002E0C  25A2               	addwf	put_dump@bp& (0+255),w,b
  4677  002E0E  6ED9               	movwf	fsr2l,c
  4678  002E10  51A5               	movf	(put_dump@i+1)& (0+255),w,b
  4679  002E12  21A3               	addwfc	(put_dump@bp+1)& (0+255),w,b
  4680  002E14  6EDA               	movwf	fsr2h,c
  4681  002E16  50DF               	movf	indf2,w,c
  4682  002E18  6F9A               	movwf	??_put_dump& (0+255),b
  4683  002E1A  519A               	movf	??_put_dump& (0+255),w,b
  4684  002E1C  6F88               	movwf	(?_printf+2)& (0+255),b
  4685  002E1E  6B89               	clrf	(?_printf+3)& (0+255),b
  4686  002E20  EC1D  F02B         	call	_printf	;wreg free
  4687  002E24  0100               	movlb	0	; () banked
  4688  002E26  4BA4               	infsnz	put_dump@i& (0+255),f,b
  4689  002E28  2BA5               	incf	(put_dump@i+1)& (0+255),f,b
  4690  002E2A                     l7265:
  4691                           
  4692                           ; BSR set to: 0
  4693  002E2A  5196               	movf	put_dump@len& (0+255),w,b
  4694  002E2C  5DA4               	subwf	put_dump@i& (0+255),w,b
  4695  002E2E  51A5               	movf	(put_dump@i+1)& (0+255),w,b
  4696  002E30  0A80               	xorlw	128
  4697  002E32  6F9A               	movwf	??_put_dump& (0+255),b
  4698  002E34  5197               	movf	(put_dump@len+1)& (0+255),w,b
  4699  002E36  0A80               	xorlw	128
  4700  002E38  599A               	subwfb	??_put_dump& (0+255),w,b
  4701  002E3A  A0D8               	btfss	status,0,c
  4702  002E3C  EF22  F017         	goto	u9161
  4703  002E40  EF24  F017         	goto	u9160
  4704  002E44                     u9161:
  4705  002E44  EF01  F017         	goto	l7261
  4706  002E48                     u9160:
  4707  002E48                     
  4708                           ; BSR set to: 0
  4709                           ;uart.c: 222:   printf(" ");
  4710  002E48  0EBB               	movlw	low STR_26
  4711  002E4A  6F86               	movwf	printf@fmt& (0+255),b
  4712  002E4C  0E7D               	movlw	high STR_26
  4713  002E4E  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4714  002E50  EC1D  F02B         	call	_printf	;wreg free
  4715  002E54                     
  4716                           ;uart.c: 223:   for (i = 0; i < len; i++)
  4717  002E54  0E00               	movlw	0
  4718  002E56  0100               	movlb	0	; () banked
  4719  002E58  6FA5               	movwf	(put_dump@i+1)& (0+255),b
  4720  002E5A  0E00               	movlw	0
  4721  002E5C  6FA4               	movwf	put_dump@i& (0+255),b
  4722  002E5E  EF6B  F017         	goto	l7283
  4723  002E62                     l7271:
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;uart.c: 224:    printf("%c", (bp[i] >= ' ' && bp[i] <= '~') ? bp[i] : '.');
  4727  002E62  51A4               	movf	put_dump@i& (0+255),w,b
  4728  002E64  25A2               	addwf	put_dump@bp& (0+255),w,b
  4729  002E66  6ED9               	movwf	fsr2l,c
  4730  002E68  51A5               	movf	(put_dump@i+1)& (0+255),w,b
  4731  002E6A  21A3               	addwfc	(put_dump@bp+1)& (0+255),w,b
  4732  002E6C  6EDA               	movwf	fsr2h,c
  4733  002E6E  0E1F               	movlw	31
  4734  002E70  64DF               	cpfsgt	indf2,c
  4735  002E72  EF3D  F017         	goto	u9171
  4736  002E76  EF3F  F017         	goto	u9170
  4737  002E7A                     u9171:
  4738  002E7A  EF4D  F017         	goto	l7275
  4739  002E7E                     u9170:
  4740  002E7E                     
  4741                           ; BSR set to: 0
  4742  002E7E  51A4               	movf	put_dump@i& (0+255),w,b
  4743  002E80  25A2               	addwf	put_dump@bp& (0+255),w,b
  4744  002E82  6ED9               	movwf	fsr2l,c
  4745  002E84  51A5               	movf	(put_dump@i+1)& (0+255),w,b
  4746  002E86  21A3               	addwfc	(put_dump@bp+1)& (0+255),w,b
  4747  002E88  6EDA               	movwf	fsr2h,c
  4748  002E8A  0E7E               	movlw	126
  4749  002E8C  64DF               	cpfsgt	indf2,c
  4750  002E8E  EF4B  F017         	goto	u9181
  4751  002E92  EF4D  F017         	goto	u9180
  4752  002E96                     u9181:
  4753  002E96  EF53  F017         	goto	l7277
  4754  002E9A                     u9180:
  4755  002E9A                     l7275:
  4756                           
  4757                           ; BSR set to: 0
  4758  002E9A  0E00               	movlw	0
  4759  002E9C  6FA1               	movwf	(_put_dump$1127+1)& (0+255),b
  4760  002E9E  0E2E               	movlw	46
  4761  002EA0  6FA0               	movwf	_put_dump$1127& (0+255),b
  4762  002EA2  EF5E  F017         	goto	l7279
  4763  002EA6                     l7277:
  4764                           
  4765                           ; BSR set to: 0
  4766  002EA6  51A4               	movf	put_dump@i& (0+255),w,b
  4767  002EA8  25A2               	addwf	put_dump@bp& (0+255),w,b
  4768  002EAA  6ED9               	movwf	fsr2l,c
  4769  002EAC  51A5               	movf	(put_dump@i+1)& (0+255),w,b
  4770  002EAE  21A3               	addwfc	(put_dump@bp+1)& (0+255),w,b
  4771  002EB0  6EDA               	movwf	fsr2h,c
  4772  002EB2  50DF               	movf	indf2,w,c
  4773  002EB4  6F9A               	movwf	??_put_dump& (0+255),b
  4774  002EB6  519A               	movf	??_put_dump& (0+255),w,b
  4775  002EB8  6FA0               	movwf	_put_dump$1127& (0+255),b
  4776  002EBA  6BA1               	clrf	(_put_dump$1127+1)& (0+255),b
  4777  002EBC                     l7279:
  4778                           
  4779                           ; BSR set to: 0
  4780  002EBC  0EB8               	movlw	low STR_21
  4781  002EBE  6F86               	movwf	printf@fmt& (0+255),b
  4782  002EC0  0E7D               	movlw	high STR_21
  4783  002EC2  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4784  002EC4  C0A0  F088         	movff	_put_dump$1127,?_printf+2
  4785  002EC8  C0A1  F089         	movff	_put_dump$1127+1,?_printf+3
  4786  002ECC  EC1D  F02B         	call	_printf	;wreg free
  4787  002ED0  0100               	movlb	0	; () banked
  4788  002ED2  4BA4               	infsnz	put_dump@i& (0+255),f,b
  4789  002ED4  2BA5               	incf	(put_dump@i+1)& (0+255),f,b
  4790  002ED6                     l7283:
  4791                           
  4792                           ; BSR set to: 0
  4793  002ED6  5196               	movf	put_dump@len& (0+255),w,b
  4794  002ED8  5DA4               	subwf	put_dump@i& (0+255),w,b
  4795  002EDA  51A5               	movf	(put_dump@i+1)& (0+255),w,b
  4796  002EDC  0A80               	xorlw	128
  4797  002EDE  6F9A               	movwf	??_put_dump& (0+255),b
  4798  002EE0  5197               	movf	(put_dump@len+1)& (0+255),w,b
  4799  002EE2  0A80               	xorlw	128
  4800  002EE4  599A               	subwfb	??_put_dump& (0+255),w,b
  4801  002EE6  A0D8               	btfss	status,0,c
  4802  002EE8  EF78  F017         	goto	u9191
  4803  002EEC  EF7A  F017         	goto	u9190
  4804  002EF0                     u9191:
  4805  002EF0  EF31  F017         	goto	l7271
  4806  002EF4                     u9190:
  4807  002EF4  EFE5  F017         	goto	l7305
  4808  002EF8                     l7285:
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;uart.c: 227:   sp = buff;
  4812  002EF8  C090  F09C         	movff	put_dump@buff,put_dump@sp
  4813  002EFC  C091  F09D         	movff	put_dump@buff+1,put_dump@sp+1
  4814  002F00                     l7287:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;uart.c: 229:    printf(" %04X", *sp++);
  4818  002F00  0EA3               	movlw	low STR_28
  4819  002F02  6F86               	movwf	printf@fmt& (0+255),b
  4820  002F04  0E7D               	movlw	high STR_28
  4821  002F06  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4822  002F08  C09C  FFD9         	movff	put_dump@sp,fsr2l
  4823  002F0C  C09D  FFDA         	movff	put_dump@sp+1,fsr2h
  4824  002F10  CFDE F088          	movff	postinc2,?_printf+2
  4825  002F14  CFDD F089          	movff	postdec2,?_printf+3
  4826  002F18  EC1D  F02B         	call	_printf	;wreg free
  4827  002F1C  0E02               	movlw	2
  4828  002F1E  0100               	movlb	0	; () banked
  4829  002F20  279C               	addwf	put_dump@sp& (0+255),f,b
  4830  002F22  0E00               	movlw	0
  4831  002F24  239D               	addwfc	(put_dump@sp+1)& (0+255),f,b
  4832  002F26                     
  4833                           ; BSR set to: 0
  4834  002F26  0796               	decf	put_dump@len& (0+255),f,b
  4835  002F28  A0D8               	btfss	status,0,c
  4836  002F2A  0797               	decf	(put_dump@len+1)& (0+255),f,b
  4837  002F2C  5196               	movf	put_dump@len& (0+255),w,b
  4838  002F2E  1197               	iorwf	(put_dump@len+1)& (0+255),w,b
  4839  002F30  A4D8               	btfss	status,2,c
  4840  002F32  EF9D  F017         	goto	u9201
  4841  002F36  EF9F  F017         	goto	u9200
  4842  002F3A                     u9201:
  4843  002F3A  EF80  F017         	goto	l7287
  4844  002F3E                     u9200:
  4845  002F3E  EFE5  F017         	goto	l7305
  4846  002F42                     l7293:
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;uart.c: 233:   lp = buff;
  4850  002F42  C090  F09E         	movff	put_dump@buff,put_dump@lp
  4851  002F46  C091  F09F         	movff	put_dump@buff+1,put_dump@lp+1
  4852  002F4A                     l7295:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;uart.c: 235:    printf(" %08LX", *lp++);
  4856  002F4A  0E96               	movlw	low STR_29
  4857  002F4C  6F86               	movwf	printf@fmt& (0+255),b
  4858  002F4E  0E7D               	movlw	high STR_29
  4859  002F50  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4860  002F52  C09E  FFD9         	movff	put_dump@lp,fsr2l
  4861  002F56  C09F  FFDA         	movff	put_dump@lp+1,fsr2h
  4862  002F5A  CFDE F088          	movff	postinc2,?_printf+2
  4863  002F5E  CFDE F089          	movff	postinc2,?_printf+3
  4864  002F62  CFDE F08A          	movff	postinc2,?_printf+4
  4865  002F66  CFDE F08B          	movff	postinc2,?_printf+5
  4866  002F6A  EC1D  F02B         	call	_printf	;wreg free
  4867  002F6E  0E04               	movlw	4
  4868  002F70  0100               	movlb	0	; () banked
  4869  002F72  279E               	addwf	put_dump@lp& (0+255),f,b
  4870  002F74  0E00               	movlw	0
  4871  002F76  239F               	addwfc	(put_dump@lp+1)& (0+255),f,b
  4872  002F78                     
  4873                           ; BSR set to: 0
  4874  002F78  0796               	decf	put_dump@len& (0+255),f,b
  4875  002F7A  A0D8               	btfss	status,0,c
  4876  002F7C  0797               	decf	(put_dump@len+1)& (0+255),f,b
  4877  002F7E  5196               	movf	put_dump@len& (0+255),w,b
  4878  002F80  1197               	iorwf	(put_dump@len+1)& (0+255),w,b
  4879  002F82  A4D8               	btfss	status,2,c
  4880  002F84  EFC6  F017         	goto	u9211
  4881  002F88  EFC8  F017         	goto	u9210
  4882  002F8C                     u9211:
  4883  002F8C  EFA5  F017         	goto	l7295
  4884  002F90                     u9210:
  4885  002F90  EFE5  F017         	goto	l7305
  4886  002F94                     l7303:
  4887  002F94  C098  F09A         	movff	put_dump@width,??_put_dump
  4888  002F98  C099  F09B         	movff	put_dump@width+1,??_put_dump+1
  4889                           
  4890                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4891                           ; Switch size 1, requested type "simple"
  4892                           ; Number of cases is 1, Range of values is 0 to 0
  4893                           ; switch strategies available:
  4894                           ; Name         Instructions Cycles
  4895                           ; simple_byte            4     3 (average)
  4896                           ;	Chosen strategy is simple_byte
  4897  002F9C  0100               	movlb	0	; () banked
  4898  002F9E  519B               	movf	(??_put_dump+1)& (0+255),w,b
  4899  002FA0  0A00               	xorlw	0	; case 0
  4900  002FA2  B4D8               	btfsc	status,2,c
  4901  002FA4  EFD6  F017         	goto	l8063
  4902  002FA8  EFE5  F017         	goto	l7305
  4903  002FAC                     l8063:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ; Switch size 1, requested type "simple"
  4907                           ; Number of cases is 3, Range of values is 1 to 4
  4908                           ; switch strategies available:
  4909                           ; Name         Instructions Cycles
  4910                           ; simple_byte           10     6 (average)
  4911                           ;	Chosen strategy is simple_byte
  4912  002FAC  519A               	movf	??_put_dump& (0+255),w,b
  4913  002FAE  0A01               	xorlw	1	; case 1
  4914  002FB0  B4D8               	btfsc	status,2,c
  4915  002FB2  EFF7  F016         	goto	l7257
  4916  002FB6  0A03               	xorlw	3	; case 2
  4917  002FB8  B4D8               	btfsc	status,2,c
  4918  002FBA  EF7C  F017         	goto	l7285
  4919  002FBE  0A06               	xorlw	6	; case 4
  4920  002FC0  B4D8               	btfsc	status,2,c
  4921  002FC2  EFA1  F017         	goto	l7293
  4922  002FC6  EFE5  F017         	goto	l7305
  4923  002FCA                     l7305:
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;uart.c: 240:  printf("\r\n");
  4927  002FCA  0E1F               	movlw	low (STR_16+18)
  4928  002FCC  6F86               	movwf	printf@fmt& (0+255),b
  4929  002FCE  0E7D               	movlw	high (STR_16+18)
  4930  002FD0  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4931  002FD2  EC1D  F02B         	call	_printf	;wreg free
  4932  002FD6  0012               	return		;funcret
  4933  002FD8                     __end_of_put_dump:
  4934                           	callstack 0
  4935                           
  4936 ;; *************** function _put_drc *****************
  4937 ;; Defined at:
  4938 ;;		line 40 in file "main.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  res             1    wreg     unsigned char 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  res             1   16[BANK0 ] unsigned char 
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  1    wreg      void 
  4945 ;; Registers used:
  4946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4952 ;;      Params:         0       0       0       0       0       0       0
  4953 ;;      Locals:         0       1       0       0       0       0       0
  4954 ;;      Temps:          0       0       0       0       0       0       0
  4955 ;;      Totals:         0       1       0       0       0       0       0
  4956 ;;Total ram usage:        1 bytes
  4957 ;; Hardware stack levels used: 1
  4958 ;; Hardware stack levels required when called: 9
  4959 ;; This function calls:
  4960 ;;		_printf
  4961 ;; This function is called by:
  4962 ;;		_main
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text11
  4967  0056AE                     __ptext11:
  4968                           	callstack 0
  4969  0056AE                     _put_drc:
  4970                           	callstack 21
  4971                           
  4972                           ;incstack = 0
  4973                           ;put_drc@res stored from wreg
  4974  0056AE  0100               	movlb	0	; () banked
  4975  0056B0  6F90               	movwf	put_drc@res& (0+255),b
  4976  0056B2                     
  4977                           ;main.c: 40: void put_drc (BYTE res);main.c: 41: {;main.c: 42:  printf("rc=%d\r\n", res)
      +                          ;
  4978  0056B2  0E8E               	movlw	low STR_2
  4979  0056B4  0100               	movlb	0	; () banked
  4980  0056B6  6F86               	movwf	printf@fmt& (0+255),b
  4981  0056B8  0E7D               	movlw	high STR_2
  4982  0056BA  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4983  0056BC  C090  F088         	movff	put_drc@res,?_printf+2
  4984  0056C0  6B89               	clrf	(?_printf+3)& (0+255),b
  4985  0056C2  EC1D  F02B         	call	_printf	;wreg free
  4986  0056C6  0012               	return		;funcret
  4987  0056C8                     __end_of_put_drc:
  4988                           	callstack 0
  4989                           
  4990 ;; *************** function _pf_readdir *****************
  4991 ;; Defined at:
  4992 ;;		line 1088 in file "pff.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  dj              2   92[BANK0 ] PTR struct .
  4995 ;;		 -> main@dir(16), 
  4996 ;;  fno             2   94[BANK0 ] PTR struct .
  4997 ;;		 -> main@fno(22), 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  dir            32    0[BANK1 ] unsigned char [32]
  5000 ;;  sp             12   32[BANK1 ] unsigned char [12]
  5001 ;;  fs              2   44[BANK1 ] PTR struct .
  5002 ;;		 -> NULL(0), main@fs(42), 
  5003 ;;  res             1   46[BANK1 ] enum E2600
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      enum E3114
  5006 ;; Registers used:
  5007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5013 ;;      Params:         0       4       0       0       0       0       0
  5014 ;;      Locals:         0       0      47       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0
  5016 ;;      Totals:         0       4      47       0       0       0       0
  5017 ;;Total ram usage:       51 bytes
  5018 ;; Hardware stack levels used: 1
  5019 ;; Hardware stack levels required when called: 13
  5020 ;; This function calls:
  5021 ;;		_dir_next
  5022 ;;		_dir_read
  5023 ;;		_dir_rewind
  5024 ;;		_get_fileinfo
  5025 ;; This function is called by:
  5026 ;;		_main
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           	psect	text12
  5031  004838                     __ptext12:
  5032                           	callstack 0
  5033  004838                     _pf_readdir:
  5034                           	callstack 17
  5035  004838                     
  5036                           ;pff.c: 1089:  DIR *dj,;pff.c: 1090:  FILINFO *fno;pff.c: 1092: {;pff.c: 1093:  FRESULT 
      +                          res;;pff.c: 1094:  BYTE sp[12], dir[32];;pff.c: 1095:  FATFS *fs = FatFs;
  5037  004838  C0FD  F12C         	movff	_FatFs,pf_readdir@fs
  5038  00483C  C0FE  F12D         	movff	_FatFs+1,pf_readdir@fs+1
  5039                           
  5040                           ;pff.c: 1098:  if (!fs) {
  5041  004840  0101               	movlb	1	; () banked
  5042  004842  512C               	movf	pf_readdir@fs& (0+255),w,b
  5043  004844  112D               	iorwf	(pf_readdir@fs+1)& (0+255),w,b
  5044  004846  A4D8               	btfss	status,2,c
  5045  004848  EF28  F024         	goto	u9691
  5046  00484C  EF2A  F024         	goto	u9690
  5047  004850                     u9691:
  5048  004850  EF2E  F024         	goto	l7631
  5049  004854                     u9690:
  5050  004854                     
  5051                           ; BSR set to: 1
  5052                           ;pff.c: 1099:   res = FR_NOT_ENABLED;
  5053  004854  0E05               	movlw	5
  5054  004856  6F2E               	movwf	pf_readdir@res& (0+255),b
  5055                           
  5056                           ;pff.c: 1100:  } else {
  5057  004858  EF8C  F024         	goto	l389
  5058  00485C                     l7631:
  5059                           
  5060                           ; BSR set to: 1
  5061                           ;pff.c: 1101:   dj->fn = sp;
  5062  00485C  0100               	movlb	0	; () banked
  5063  00485E  EE20 F002          	lfsr	2,2
  5064  004862  51DC               	movf	pf_readdir@dj& (0+255),w,b
  5065  004864  26D9               	addwf	fsr2l,f,c
  5066  004866  51DD               	movf	(pf_readdir@dj+1)& (0+255),w,b
  5067  004868  22DA               	addwfc	fsr2h,f,c
  5068  00486A  0E20               	movlw	low pf_readdir@sp
  5069  00486C  6EDE               	movwf	postinc2,c
  5070  00486E  0E01               	movlw	high pf_readdir@sp
  5071  004870  6EDD               	movwf	postdec2,c
  5072  004872                     
  5073                           ; BSR set to: 0
  5074                           ;pff.c: 1102:   if (!fno) {
  5075  004872  51DE               	movf	pf_readdir@fno& (0+255),w,b
  5076  004874  11DF               	iorwf	(pf_readdir@fno+1)& (0+255),w,b
  5077  004876  A4D8               	btfss	status,2,c
  5078  004878  EF40  F024         	goto	u9701
  5079  00487C  EF42  F024         	goto	u9700
  5080  004880                     u9701:
  5081  004880  EF4C  F024         	goto	l7637
  5082  004884                     u9700:
  5083  004884                     
  5084                           ; BSR set to: 0
  5085                           ;pff.c: 1103:    res = dir_rewind(dj);
  5086  004884  C0DC  F01D         	movff	pf_readdir@dj,dir_rewind@dj
  5087  004888  C0DD  F01E         	movff	pf_readdir@dj+1,dir_rewind@dj+1
  5088  00488C  EC1E  F023         	call	_dir_rewind	;wreg free
  5089  004890  0101               	movlb	1	; () banked
  5090  004892  6F2E               	movwf	pf_readdir@res& (0+255),b
  5091                           
  5092                           ;pff.c: 1104:   } else {
  5093  004894  EF8C  F024         	goto	l389
  5094  004898                     l7637:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;pff.c: 1105:    res = dir_read(dj, dir);
  5098  004898  C0DC  F0D1         	movff	pf_readdir@dj,dir_read@dj
  5099  00489C  C0DD  F0D2         	movff	pf_readdir@dj+1,dir_read@dj+1
  5100  0048A0  0E00               	movlw	low pf_readdir@dir
  5101  0048A2  6FD3               	movwf	dir_read@dir& (0+255),b
  5102  0048A4  0E01               	movlw	high pf_readdir@dir
  5103  0048A6  6FD4               	movwf	(dir_read@dir+1)& (0+255),b
  5104  0048A8  EC2F  F01F         	call	_dir_read	;wreg free
  5105  0048AC  0101               	movlb	1	; () banked
  5106  0048AE  6F2E               	movwf	pf_readdir@res& (0+255),b
  5107  0048B0                     
  5108                           ; BSR set to: 1
  5109                           ;pff.c: 1106:    if (res == FR_NO_FILE) res = FR_OK;
  5110  0048B0  0E03               	movlw	3
  5111  0048B2  192E               	xorwf	pf_readdir@res& (0+255),w,b
  5112  0048B4  A4D8               	btfss	status,2,c
  5113  0048B6  EF5F  F024         	goto	u9711
  5114  0048BA  EF61  F024         	goto	u9710
  5115  0048BE                     u9711:
  5116  0048BE  EF63  F024         	goto	l392
  5117  0048C2                     u9710:
  5118  0048C2                     
  5119                           ; BSR set to: 1
  5120  0048C2  0E00               	movlw	0
  5121  0048C4  6F2E               	movwf	pf_readdir@res& (0+255),b
  5122  0048C6                     l392:
  5123                           
  5124                           ; BSR set to: 1
  5125                           ;pff.c: 1107:    if (res == FR_OK) {
  5126  0048C6  512E               	movf	pf_readdir@res& (0+255),w,b
  5127  0048C8  A4D8               	btfss	status,2,c
  5128  0048CA  EF69  F024         	goto	u9721
  5129  0048CE  EF6B  F024         	goto	u9720
  5130  0048D2                     u9721:
  5131  0048D2  EF8C  F024         	goto	l389
  5132  0048D6                     u9720:
  5133  0048D6                     
  5134                           ; BSR set to: 1
  5135                           ;pff.c: 1108:     get_fileinfo(dj, dir, fno);
  5136  0048D6  C0DC  F006         	movff	pf_readdir@dj,get_fileinfo@dj
  5137  0048DA  C0DD  F007         	movff	pf_readdir@dj+1,get_fileinfo@dj+1
  5138  0048DE  0E00               	movlw	low pf_readdir@dir
  5139  0048E0  6E08               	movwf	get_fileinfo@dir^0,c
  5140  0048E2  0E01               	movlw	high pf_readdir@dir
  5141  0048E4  6E09               	movwf	(get_fileinfo@dir+1)^0,c
  5142  0048E6  C0DE  F00A         	movff	pf_readdir@fno,get_fileinfo@fno
  5143  0048EA  C0DF  F00B         	movff	pf_readdir@fno+1,get_fileinfo@fno+1
  5144  0048EE  EC5C  F013         	call	_get_fileinfo	;wreg free
  5145  0048F2                     
  5146                           ;pff.c: 1109:     res = dir_next(dj);
  5147  0048F2  C0DC  F0C0         	movff	pf_readdir@dj,dir_next@dj
  5148  0048F6  C0DD  F0C1         	movff	pf_readdir@dj+1,dir_next@dj+1
  5149  0048FA  ECDD  F015         	call	_dir_next	;wreg free
  5150  0048FE  0101               	movlb	1	; () banked
  5151  004900  6F2E               	movwf	pf_readdir@res& (0+255),b
  5152  004902                     
  5153                           ; BSR set to: 1
  5154                           ;pff.c: 1110:     if (res == FR_NO_FILE) res = FR_OK;
  5155  004902  0E03               	movlw	3
  5156  004904  192E               	xorwf	pf_readdir@res& (0+255),w,b
  5157  004906  A4D8               	btfss	status,2,c
  5158  004908  EF88  F024         	goto	u9731
  5159  00490C  EF8A  F024         	goto	u9730
  5160  004910                     u9731:
  5161  004910  EF8C  F024         	goto	l389
  5162  004914                     u9730:
  5163  004914                     
  5164                           ; BSR set to: 1
  5165  004914  0E00               	movlw	0
  5166  004916  6F2E               	movwf	pf_readdir@res& (0+255),b
  5167  004918                     l389:
  5168                           
  5169                           ; BSR set to: 1
  5170                           ;pff.c: 1115:  return res;
  5171  004918  512E               	movf	pf_readdir@res& (0+255),w,b
  5172  00491A                     
  5173                           ; BSR set to: 1
  5174  00491A  0012               	return		;funcret
  5175  00491C                     __end_of_pf_readdir:
  5176                           	callstack 0
  5177                           
  5178 ;; *************** function _get_fileinfo *****************
  5179 ;; Defined at:
  5180 ;;		line 634 in file "pff.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  dj              2    5[COMRAM] PTR struct .
  5183 ;;		 -> main@dir(16), 
  5184 ;;  dir             2    7[COMRAM] PTR unsigned char 
  5185 ;;		 -> pf_readdir@dir(32), 
  5186 ;;  fno             2    9[COMRAM] PTR struct .
  5187 ;;		 -> main@fno(22), 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  p               2   37[COMRAM] PTR unsigned char 
  5190 ;;		 -> fno.fname(13), main@fno(22), 
  5191 ;;  i               1   40[COMRAM] unsigned char 
  5192 ;;  c               1   39[COMRAM] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5202 ;;      Params:         6       0       0       0       0       0       0
  5203 ;;      Locals:         4       0       0       0       0       0       0
  5204 ;;      Temps:         26       0       0       0       0       0       0
  5205 ;;      Totals:        36       0       0       0       0       0       0
  5206 ;;Total ram usage:       36 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; Hardware stack levels required when called: 1
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_pf_readdir
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text13
  5217  0026B8                     __ptext13:
  5218                           	callstack 0
  5219  0026B8                     _get_fileinfo:
  5220                           	callstack 28
  5221  0026B8                     
  5222                           ;pff.c: 635:  DIR *dj,;pff.c: 636:  BYTE *dir,;pff.c: 637:  FILINFO *fno;pff.c: 639: {;p
      +                          ff.c: 640:  BYTE i, c;;pff.c: 641:  char *p;;pff.c: 644:  p = fno->fname;
  5223  0026B8  0E09               	movlw	9
  5224  0026BA  240A               	addwf	get_fileinfo@fno^0,w,c
  5225  0026BC  6E26               	movwf	get_fileinfo@p^0,c
  5226  0026BE  0E00               	movlw	0
  5227  0026C0  200B               	addwfc	(get_fileinfo@fno+1)^0,w,c
  5228  0026C2  6E27               	movwf	(get_fileinfo@p+1)^0,c
  5229  0026C4                     
  5230                           ;pff.c: 645:  if (dj->sect) {
  5231  0026C4  EE20 F00C          	lfsr	2,12
  5232  0026C8  5006               	movf	get_fileinfo@dj^0,w,c
  5233  0026CA  26D9               	addwf	fsr2l,f,c
  5234  0026CC  5007               	movf	(get_fileinfo@dj+1)^0,w,c
  5235  0026CE  22DA               	addwfc	fsr2h,f,c
  5236  0026D0  50DE               	movf	postinc2,w,c
  5237  0026D2  10DE               	iorwf	postinc2,w,c
  5238  0026D4  10DE               	iorwf	postinc2,w,c
  5239  0026D6  10DE               	iorwf	postinc2,w,c
  5240  0026D8  B4D8               	btfsc	status,2,c
  5241  0026DA  EF71  F013         	goto	u5841
  5242  0026DE  EF73  F013         	goto	u5840
  5243  0026E2                     u5841:
  5244  0026E2  EF96  F014         	goto	l5161
  5245  0026E6                     u5840:
  5246  0026E6                     
  5247                           ;pff.c: 646:   for (i = 0; i < 8; i++) {
  5248  0026E6  0E00               	movlw	0
  5249  0026E8  6E29               	movwf	get_fileinfo@i^0,c
  5250  0026EA                     l5109:
  5251                           
  5252                           ;pff.c: 647:    c = dir[i];
  5253  0026EA  5029               	movf	get_fileinfo@i^0,w,c
  5254  0026EC  2408               	addwf	get_fileinfo@dir^0,w,c
  5255  0026EE  6ED9               	movwf	fsr2l,c
  5256  0026F0  0E00               	movlw	0
  5257  0026F2  2009               	addwfc	(get_fileinfo@dir+1)^0,w,c
  5258  0026F4  6EDA               	movwf	fsr2h,c
  5259  0026F6  50DF               	movf	indf2,w,c
  5260  0026F8  6E28               	movwf	get_fileinfo@c^0,c
  5261  0026FA                     
  5262                           ;pff.c: 648:    if (c == ' ') break;
  5263  0026FA  0E20               	movlw	32
  5264  0026FC  1828               	xorwf	get_fileinfo@c^0,w,c
  5265  0026FE  A4D8               	btfss	status,2,c
  5266  002700  EF84  F013         	goto	u5851
  5267  002704  EF86  F013         	goto	u5850
  5268  002708                     u5851:
  5269  002708  EF88  F013         	goto	l5115
  5270  00270C                     u5850:
  5271  00270C  EFA4  F013         	goto	l5127
  5272  002710                     l5115:
  5273                           
  5274                           ;pff.c: 649:    if (c == 0x05) c = 0xE5;
  5275  002710  0E05               	movlw	5
  5276  002712  1828               	xorwf	get_fileinfo@c^0,w,c
  5277  002714  A4D8               	btfss	status,2,c
  5278  002716  EF8F  F013         	goto	u5861
  5279  00271A  EF91  F013         	goto	u5860
  5280  00271E                     u5861:
  5281  00271E  EF93  F013         	goto	l5119
  5282  002722                     u5860:
  5283  002722  0EE5               	movlw	229
  5284  002724  6E28               	movwf	get_fileinfo@c^0,c
  5285  002726                     l5119:
  5286                           
  5287                           ;pff.c: 650:    *p++ = c;
  5288  002726  C026  FFD9         	movff	get_fileinfo@p,fsr2l
  5289  00272A  C027  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5290  00272E  C028  FFDF         	movff	get_fileinfo@c,indf2
  5291  002732  4A26               	infsnz	get_fileinfo@p^0,f,c
  5292  002734  2A27               	incf	(get_fileinfo@p+1)^0,f,c
  5293  002736                     
  5294                           ;pff.c: 651:   }
  5295  002736  2A29               	incf	get_fileinfo@i^0,f,c
  5296  002738  0E07               	movlw	7
  5297  00273A  6429               	cpfsgt	get_fileinfo@i^0,c
  5298  00273C  EFA2  F013         	goto	u5871
  5299  002740  EFA4  F013         	goto	u5870
  5300  002744                     u5871:
  5301  002744  EF75  F013         	goto	l5109
  5302  002748                     u5870:
  5303  002748                     l5127:
  5304                           
  5305                           ;pff.c: 652:   if (dir[8] != ' ') {
  5306  002748  EE20 F008          	lfsr	2,8
  5307  00274C  5008               	movf	get_fileinfo@dir^0,w,c
  5308  00274E  26D9               	addwf	fsr2l,f,c
  5309  002750  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5310  002752  22DA               	addwfc	fsr2h,f,c
  5311  002754  0E20               	movlw	32
  5312  002756  18DE               	xorwf	postinc2,w,c
  5313  002758  B4D8               	btfsc	status,2,c
  5314  00275A  EFB1  F013         	goto	u5881
  5315  00275E  EFB3  F013         	goto	u5880
  5316  002762                     u5881:
  5317  002762  EFE1  F013         	goto	l5153
  5318  002766                     u5880:
  5319  002766                     
  5320                           ;pff.c: 653:    *p++ = '.';
  5321  002766  C026  FFD9         	movff	get_fileinfo@p,fsr2l
  5322  00276A  C027  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5323  00276E  0E2E               	movlw	46
  5324  002770  6EDF               	movwf	indf2,c
  5325  002772  4A26               	infsnz	get_fileinfo@p^0,f,c
  5326  002774  2A27               	incf	(get_fileinfo@p+1)^0,f,c
  5327  002776                     
  5328                           ;pff.c: 654:    for (i = 8; i < 11; i++) {
  5329  002776  0E08               	movlw	8
  5330  002778  6E29               	movwf	get_fileinfo@i^0,c
  5331  00277A                     l5139:
  5332                           
  5333                           ;pff.c: 655:     c = dir[i];
  5334  00277A  5029               	movf	get_fileinfo@i^0,w,c
  5335  00277C  2408               	addwf	get_fileinfo@dir^0,w,c
  5336  00277E  6ED9               	movwf	fsr2l,c
  5337  002780  0E00               	movlw	0
  5338  002782  2009               	addwfc	(get_fileinfo@dir+1)^0,w,c
  5339  002784  6EDA               	movwf	fsr2h,c
  5340  002786  50DF               	movf	indf2,w,c
  5341  002788  6E28               	movwf	get_fileinfo@c^0,c
  5342  00278A                     
  5343                           ;pff.c: 656:     if (c == ' ') break;
  5344  00278A  0E20               	movlw	32
  5345  00278C  1828               	xorwf	get_fileinfo@c^0,w,c
  5346  00278E  A4D8               	btfss	status,2,c
  5347  002790  EFCC  F013         	goto	u5891
  5348  002794  EFCE  F013         	goto	u5890
  5349  002798                     u5891:
  5350  002798  EFD0  F013         	goto	l5145
  5351  00279C                     u5890:
  5352  00279C  EFE1  F013         	goto	l5153
  5353  0027A0                     l5145:
  5354                           
  5355                           ;pff.c: 657:     *p++ = c;
  5356  0027A0  C026  FFD9         	movff	get_fileinfo@p,fsr2l
  5357  0027A4  C027  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5358  0027A8  C028  FFDF         	movff	get_fileinfo@c,indf2
  5359  0027AC  4A26               	infsnz	get_fileinfo@p^0,f,c
  5360  0027AE  2A27               	incf	(get_fileinfo@p+1)^0,f,c
  5361  0027B0                     
  5362                           ;pff.c: 658:    }
  5363  0027B0  2A29               	incf	get_fileinfo@i^0,f,c
  5364  0027B2  0E0A               	movlw	10
  5365  0027B4  6429               	cpfsgt	get_fileinfo@i^0,c
  5366  0027B6  EFDF  F013         	goto	u5901
  5367  0027BA  EFE1  F013         	goto	u5900
  5368  0027BE                     u5901:
  5369  0027BE  EFBD  F013         	goto	l5139
  5370  0027C2                     u5900:
  5371  0027C2                     l5153:
  5372                           
  5373                           ;pff.c: 660:   fno->fattrib = dir[11];
  5374  0027C2  EE20 F00B          	lfsr	2,11
  5375  0027C6  5008               	movf	get_fileinfo@dir^0,w,c
  5376  0027C8  26D9               	addwf	fsr2l,f,c
  5377  0027CA  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5378  0027CC  22DA               	addwfc	fsr2h,f,c
  5379  0027CE  EE10 F008          	lfsr	1,8
  5380  0027D2  500A               	movf	get_fileinfo@fno^0,w,c
  5381  0027D4  26E1               	addwf	fsr1l,f,c
  5382  0027D6  500B               	movf	(get_fileinfo@fno+1)^0,w,c
  5383  0027D8  22E2               	addwfc	fsr1h,f,c
  5384  0027DA  CFDF FFE7          	movff	indf2,indf1
  5385  0027DE                     
  5386                           ;pff.c: 661:   fno->fsize = (DWORD)(((DWORD)*((BYTE*)(dir+28)+3)<<24)|((DWORD)*((BYTE*)(
      +                          dir+28)+2)<<16)|((WORD)*((BYTE*)(dir+28)+1)<<8)|*(BYTE*)(dir+28));
  5387  0027DE  EE20 F01D          	lfsr	2,29
  5388  0027E2  5008               	movf	get_fileinfo@dir^0,w,c
  5389  0027E4  26D9               	addwf	fsr2l,f,c
  5390  0027E6  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5391  0027E8  22DA               	addwfc	fsr2h,f,c
  5392  0027EA  50DF               	movf	indf2,w,c
  5393  0027EC  6E0C               	movwf	??_get_fileinfo^0,c
  5394  0027EE  500C               	movf	??_get_fileinfo^0,w,c
  5395  0027F0  6E0E               	movwf	(??_get_fileinfo+2)^0,c
  5396  0027F2  6A0D               	clrf	(??_get_fileinfo+1)^0,c
  5397  0027F4  EE20 F01E          	lfsr	2,30
  5398  0027F8  5008               	movf	get_fileinfo@dir^0,w,c
  5399  0027FA  26D9               	addwf	fsr2l,f,c
  5400  0027FC  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5401  0027FE  22DA               	addwfc	fsr2h,f,c
  5402  002800  50DF               	movf	indf2,w,c
  5403  002802  6E0F               	movwf	(??_get_fileinfo+3)^0,c
  5404  002804  C00F  F010         	movff	??_get_fileinfo+3,??_get_fileinfo+4
  5405  002808  6A11               	clrf	(??_get_fileinfo+5)^0,c
  5406  00280A  6A12               	clrf	(??_get_fileinfo+6)^0,c
  5407  00280C  6A13               	clrf	(??_get_fileinfo+7)^0,c
  5408  00280E  C011  F013         	movff	??_get_fileinfo+5,??_get_fileinfo+7
  5409  002812  C010  F012         	movff	??_get_fileinfo+4,??_get_fileinfo+6
  5410  002816  6A11               	clrf	(??_get_fileinfo+5)^0,c
  5411  002818  6A10               	clrf	(??_get_fileinfo+4)^0,c
  5412  00281A  EE20 F01F          	lfsr	2,31
  5413  00281E  5008               	movf	get_fileinfo@dir^0,w,c
  5414  002820  26D9               	addwf	fsr2l,f,c
  5415  002822  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5416  002824  22DA               	addwfc	fsr2h,f,c
  5417  002826  50DF               	movf	indf2,w,c
  5418  002828  6E14               	movwf	(??_get_fileinfo+8)^0,c
  5419  00282A  C014  F015         	movff	??_get_fileinfo+8,??_get_fileinfo+9
  5420  00282E  6A16               	clrf	(??_get_fileinfo+10)^0,c
  5421  002830  6A17               	clrf	(??_get_fileinfo+11)^0,c
  5422  002832  6A18               	clrf	(??_get_fileinfo+12)^0,c
  5423  002834  C015  F018         	movff	??_get_fileinfo+9,??_get_fileinfo+12
  5424  002838  6A17               	clrf	(??_get_fileinfo+11)^0,c
  5425  00283A  6A16               	clrf	(??_get_fileinfo+10)^0,c
  5426  00283C  6A15               	clrf	(??_get_fileinfo+9)^0,c
  5427  00283E  5010               	movf	(??_get_fileinfo+4)^0,w,c
  5428  002840  1015               	iorwf	(??_get_fileinfo+9)^0,w,c
  5429  002842  6E19               	movwf	(??_get_fileinfo+13)^0,c
  5430  002844  5011               	movf	(??_get_fileinfo+5)^0,w,c
  5431  002846  1016               	iorwf	(??_get_fileinfo+10)^0,w,c
  5432  002848  6E1A               	movwf	(??_get_fileinfo+14)^0,c
  5433  00284A  5012               	movf	(??_get_fileinfo+6)^0,w,c
  5434  00284C  1017               	iorwf	(??_get_fileinfo+11)^0,w,c
  5435  00284E  6E1B               	movwf	(??_get_fileinfo+15)^0,c
  5436  002850  5013               	movf	(??_get_fileinfo+7)^0,w,c
  5437  002852  1018               	iorwf	(??_get_fileinfo+12)^0,w,c
  5438  002854  6E1C               	movwf	(??_get_fileinfo+16)^0,c
  5439  002856  500D               	movf	(??_get_fileinfo+1)^0,w,c
  5440  002858  1019               	iorwf	(??_get_fileinfo+13)^0,w,c
  5441  00285A  6E1D               	movwf	(??_get_fileinfo+17)^0,c
  5442  00285C  500E               	movf	(??_get_fileinfo+2)^0,w,c
  5443  00285E  101A               	iorwf	(??_get_fileinfo+14)^0,w,c
  5444  002860  6E1E               	movwf	(??_get_fileinfo+18)^0,c
  5445  002862  0E00               	movlw	0
  5446  002864  101B               	iorwf	(??_get_fileinfo+15)^0,w,c
  5447  002866  6E1F               	movwf	(??_get_fileinfo+19)^0,c
  5448  002868  0E00               	movlw	0
  5449  00286A  101C               	iorwf	(??_get_fileinfo+16)^0,w,c
  5450  00286C  6E20               	movwf	(??_get_fileinfo+20)^0,c
  5451  00286E  EE20 F01C          	lfsr	2,28
  5452  002872  5008               	movf	get_fileinfo@dir^0,w,c
  5453  002874  26D9               	addwf	fsr2l,f,c
  5454  002876  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5455  002878  22DA               	addwfc	fsr2h,f,c
  5456  00287A  50DF               	movf	indf2,w,c
  5457  00287C  6E21               	movwf	(??_get_fileinfo+21)^0,c
  5458  00287E  5021               	movf	(??_get_fileinfo+21)^0,w,c
  5459  002880  101D               	iorwf	(??_get_fileinfo+17)^0,w,c
  5460  002882  6E22               	movwf	(??_get_fileinfo+22)^0,c
  5461  002884  501E               	movf	(??_get_fileinfo+18)^0,w,c
  5462  002886  6E23               	movwf	(??_get_fileinfo+23)^0,c
  5463  002888  501F               	movf	(??_get_fileinfo+19)^0,w,c
  5464  00288A  6E24               	movwf	(??_get_fileinfo+24)^0,c
  5465  00288C  5020               	movf	(??_get_fileinfo+20)^0,w,c
  5466  00288E  6E25               	movwf	(??_get_fileinfo+25)^0,c
  5467  002890  C00A  FFD9         	movff	get_fileinfo@fno,fsr2l
  5468  002894  C00B  FFDA         	movff	get_fileinfo@fno+1,fsr2h
  5469  002898  C022  FFDE         	movff	??_get_fileinfo+22,postinc2
  5470  00289C  C023  FFDE         	movff	??_get_fileinfo+23,postinc2
  5471  0028A0  C024  FFDE         	movff	??_get_fileinfo+24,postinc2
  5472  0028A4  C025  FFDE         	movff	??_get_fileinfo+25,postinc2
  5473  0028A8                     
  5474                           ;pff.c: 662:   fno->fdate = (WORD)(((WORD)*((BYTE*)(dir+24)+1)<<8)|(WORD)*(BYTE*)(dir+24
      +                          ));
  5475  0028A8  EE20 F019          	lfsr	2,25
  5476  0028AC  5008               	movf	get_fileinfo@dir^0,w,c
  5477  0028AE  26D9               	addwf	fsr2l,f,c
  5478  0028B0  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5479  0028B2  22DA               	addwfc	fsr2h,f,c
  5480  0028B4  50DF               	movf	indf2,w,c
  5481  0028B6  6E0C               	movwf	??_get_fileinfo^0,c
  5482  0028B8  500C               	movf	??_get_fileinfo^0,w,c
  5483  0028BA  6E0E               	movwf	(??_get_fileinfo+2)^0,c
  5484  0028BC  6A0D               	clrf	(??_get_fileinfo+1)^0,c
  5485  0028BE  EE20 F018          	lfsr	2,24
  5486  0028C2  5008               	movf	get_fileinfo@dir^0,w,c
  5487  0028C4  26D9               	addwf	fsr2l,f,c
  5488  0028C6  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5489  0028C8  22DA               	addwfc	fsr2h,f,c
  5490  0028CA  50DF               	movf	indf2,w,c
  5491  0028CC  6E0F               	movwf	(??_get_fileinfo+3)^0,c
  5492  0028CE  500F               	movf	(??_get_fileinfo+3)^0,w,c
  5493  0028D0  120D               	iorwf	(??_get_fileinfo+1)^0,f,c
  5494  0028D2  0E00               	movlw	0
  5495  0028D4  120E               	iorwf	(??_get_fileinfo+2)^0,f,c
  5496  0028D6  EE20 F004          	lfsr	2,4
  5497  0028DA  500A               	movf	get_fileinfo@fno^0,w,c
  5498  0028DC  26D9               	addwf	fsr2l,f,c
  5499  0028DE  500B               	movf	(get_fileinfo@fno+1)^0,w,c
  5500  0028E0  22DA               	addwfc	fsr2h,f,c
  5501  0028E2  C00D  FFDE         	movff	??_get_fileinfo+1,postinc2
  5502  0028E6  C00E  FFDD         	movff	??_get_fileinfo+2,postdec2
  5503  0028EA                     
  5504                           ;pff.c: 663:   fno->ftime = (WORD)(((WORD)*((BYTE*)(dir+22)+1)<<8)|(WORD)*(BYTE*)(dir+22
      +                          ));
  5505  0028EA  EE20 F017          	lfsr	2,23
  5506  0028EE  5008               	movf	get_fileinfo@dir^0,w,c
  5507  0028F0  26D9               	addwf	fsr2l,f,c
  5508  0028F2  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5509  0028F4  22DA               	addwfc	fsr2h,f,c
  5510  0028F6  50DF               	movf	indf2,w,c
  5511  0028F8  6E0C               	movwf	??_get_fileinfo^0,c
  5512  0028FA  500C               	movf	??_get_fileinfo^0,w,c
  5513  0028FC  6E0E               	movwf	(??_get_fileinfo+2)^0,c
  5514  0028FE  6A0D               	clrf	(??_get_fileinfo+1)^0,c
  5515  002900  EE20 F016          	lfsr	2,22
  5516  002904  5008               	movf	get_fileinfo@dir^0,w,c
  5517  002906  26D9               	addwf	fsr2l,f,c
  5518  002908  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5519  00290A  22DA               	addwfc	fsr2h,f,c
  5520  00290C  50DF               	movf	indf2,w,c
  5521  00290E  6E0F               	movwf	(??_get_fileinfo+3)^0,c
  5522  002910  500F               	movf	(??_get_fileinfo+3)^0,w,c
  5523  002912  120D               	iorwf	(??_get_fileinfo+1)^0,f,c
  5524  002914  0E00               	movlw	0
  5525  002916  120E               	iorwf	(??_get_fileinfo+2)^0,f,c
  5526  002918  EE20 F006          	lfsr	2,6
  5527  00291C  500A               	movf	get_fileinfo@fno^0,w,c
  5528  00291E  26D9               	addwf	fsr2l,f,c
  5529  002920  500B               	movf	(get_fileinfo@fno+1)^0,w,c
  5530  002922  22DA               	addwfc	fsr2h,f,c
  5531  002924  C00D  FFDE         	movff	??_get_fileinfo+1,postinc2
  5532  002928  C00E  FFDD         	movff	??_get_fileinfo+2,postdec2
  5533  00292C                     l5161:
  5534                           
  5535                           ;pff.c: 665:  *p = 0;
  5536  00292C  C026  FFD9         	movff	get_fileinfo@p,fsr2l
  5537  002930  C027  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5538  002934  0E00               	movlw	0
  5539  002936  6EDF               	movwf	indf2,c
  5540  002938  0012               	return		;funcret
  5541  00293A                     __end_of_get_fileinfo:
  5542                           	callstack 0
  5543                           
  5544 ;; *************** function _dir_read *****************
  5545 ;; Defined at:
  5546 ;;		line 540 in file "pff.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  dj              2   81[BANK0 ] PTR struct .
  5549 ;;		 -> main@dir(16), 
  5550 ;;  dir             2   83[BANK0 ] PTR unsigned char 
  5551 ;;		 -> pf_readdir@dir(32), 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  res             1   91[BANK0 ] enum E2600
  5554 ;;  c               1   90[BANK0 ] unsigned char 
  5555 ;;  a               1   89[BANK0 ] unsigned char 
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      enum E2600
  5558 ;; Registers used:
  5559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5565 ;;      Params:         0       4       0       0       0       0       0
  5566 ;;      Locals:         0       3       0       0       0       0       0
  5567 ;;      Temps:          0       4       0       0       0       0       0
  5568 ;;      Totals:         0      11       0       0       0       0       0
  5569 ;;Total ram usage:       11 bytes
  5570 ;; Hardware stack levels used: 1
  5571 ;; Hardware stack levels required when called: 12
  5572 ;; This function calls:
  5573 ;;		_dir_next
  5574 ;;		_disk_readp
  5575 ;; This function is called by:
  5576 ;;		_pf_readdir
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text14
  5581  003E5E                     __ptext14:
  5582                           	callstack 0
  5583  003E5E                     _dir_read:
  5584                           	callstack 17
  5585  003E5E                     
  5586                           ;pff.c: 541:  DIR *dj,;pff.c: 542:  BYTE *dir;pff.c: 544: {;pff.c: 545:  FRESULT res;;pf
      +                          f.c: 546:  BYTE a, c;;pff.c: 549:  res = FR_NO_FILE;
  5587  003E5E  0E03               	movlw	3
  5588  003E60  0100               	movlb	0	; () banked
  5589  003E62  6FDB               	movwf	dir_read@res& (0+255),b
  5590                           
  5591                           ;pff.c: 550:  while (dj->sect) {
  5592  003E64  EFC1  F01F         	goto	l7111
  5593  003E68                     l7083:
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;pff.c: 551:   res = disk_readp(dir, dj->sect, (dj->index % 16) * 32, 32)
  5597  003E68  C0D3  F090         	movff	dir_read@dir,disk_readp@buff
  5598  003E6C  C0D4  F091         	movff	dir_read@dir+1,disk_readp@buff+1
  5599  003E70  EE20 F00C          	lfsr	2,12
  5600  003E74  51D1               	movf	dir_read@dj& (0+255),w,b
  5601  003E76  26D9               	addwf	fsr2l,f,c
  5602  003E78  51D2               	movf	(dir_read@dj+1)& (0+255),w,b
  5603  003E7A  22DA               	addwfc	fsr2h,f,c
  5604  003E7C  CFDE F092          	movff	postinc2,disk_readp@sector
  5605  003E80  CFDE F093          	movff	postinc2,disk_readp@sector+1
  5606  003E84  CFDE F094          	movff	postinc2,disk_readp@sector+2
  5607  003E88  CFDE F095          	movff	postinc2,disk_readp@sector+3
  5608  003E8C  C0D1  FFD9         	movff	dir_read@dj,fsr2l
  5609  003E90  C0D2  FFDA         	movff	dir_read@dj+1,fsr2h
  5610  003E94  CFDE F0D5          	movff	postinc2,??_dir_read
  5611  003E98  CFDD F0D6          	movff	postdec2,??_dir_read+1
  5612  003E9C  0E0F               	movlw	15
  5613  003E9E  17D5               	andwf	??_dir_read& (0+255),f,b
  5614  003EA0  0E00               	movlw	0
  5615  003EA2  17D6               	andwf	(??_dir_read+1)& (0+255),f,b
  5616  003EA4  0E05               	movlw	5
  5617  003EA6                     u8855:
  5618  003EA6  90D8               	bcf	status,0,c
  5619  003EA8  37D5               	rlcf	??_dir_read& (0+255),f,b
  5620  003EAA  37D6               	rlcf	(??_dir_read+1)& (0+255),f,b
  5621  003EAC  2EE8               	decfsz	wreg,f,c
  5622  003EAE  EF53  F01F         	goto	u8855
  5623  003EB2  C0D5  F096         	movff	??_dir_read,disk_readp@offset
  5624  003EB6  C0D6  F097         	movff	??_dir_read+1,disk_readp@offset+1
  5625  003EBA  0E00               	movlw	0
  5626  003EBC  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  5627  003EBE  0E20               	movlw	32
  5628  003EC0  6F98               	movwf	disk_readp@count& (0+255),b
  5629  003EC2  EC65  F01B         	call	_disk_readp	;wreg free
  5630  003EC6  0900               	iorlw	0
  5631  003EC8  A4D8               	btfss	status,2,c
  5632  003ECA  EF69  F01F         	goto	u8861
  5633  003ECE  EF6C  F01F         	goto	u8860
  5634  003ED2                     u8861:
  5635  003ED2  0E01               	movlw	1
  5636  003ED4  EF6D  F01F         	goto	u8870
  5637  003ED8                     u8860:
  5638  003ED8  0E00               	movlw	0
  5639  003EDA                     u8870:
  5640  003EDA  0100               	movlb	0	; () banked
  5641  003EDC  6FDB               	movwf	dir_read@res& (0+255),b
  5642  003EDE                     
  5643                           ; BSR set to: 0
  5644                           ;pff.c: 553:   if (res != FR_OK) break;
  5645  003EDE  51DB               	movf	dir_read@res& (0+255),w,b
  5646  003EE0  B4D8               	btfsc	status,2,c
  5647  003EE2  EF75  F01F         	goto	u8881
  5648  003EE6  EF77  F01F         	goto	u8880
  5649  003EEA                     u8881:
  5650  003EEA  EF79  F01F         	goto	l7089
  5651  003EEE                     u8880:
  5652  003EEE  EFD2  F01F         	goto	l7113
  5653  003EF2                     l7089:
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;pff.c: 554:   c = dir[0];
  5657  003EF2  C0D3  FFD9         	movff	dir_read@dir,fsr2l
  5658  003EF6  C0D4  FFDA         	movff	dir_read@dir+1,fsr2h
  5659  003EFA  50DF               	movf	indf2,w,c
  5660  003EFC  6FDA               	movwf	dir_read@c& (0+255),b
  5661  003EFE                     
  5662                           ; BSR set to: 0
  5663                           ;pff.c: 555:   if (c == 0) { res = FR_NO_FILE; break; }
  5664  003EFE  51DA               	movf	dir_read@c& (0+255),w,b
  5665  003F00  A4D8               	btfss	status,2,c
  5666  003F02  EF85  F01F         	goto	u8891
  5667  003F06  EF87  F01F         	goto	u8890
  5668  003F0A                     u8891:
  5669  003F0A  EF8B  F01F         	goto	l7095
  5670  003F0E                     u8890:
  5671  003F0E                     
  5672                           ; BSR set to: 0
  5673  003F0E  0E03               	movlw	3
  5674  003F10  6FDB               	movwf	dir_read@res& (0+255),b
  5675  003F12  EFD2  F01F         	goto	l7113
  5676  003F16                     l7095:
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;pff.c: 556:   a = dir[11] & 0x3F;
  5680  003F16  EE20 F00B          	lfsr	2,11
  5681  003F1A  51D3               	movf	dir_read@dir& (0+255),w,b
  5682  003F1C  26D9               	addwf	fsr2l,f,c
  5683  003F1E  51D4               	movf	(dir_read@dir+1)& (0+255),w,b
  5684  003F20  22DA               	addwfc	fsr2h,f,c
  5685  003F22  50DF               	movf	indf2,w,c
  5686  003F24  0B3F               	andlw	63
  5687  003F26  6FD9               	movwf	dir_read@a& (0+255),b
  5688  003F28                     
  5689                           ; BSR set to: 0
  5690                           ;pff.c: 557:   if (c != 0xE5 && c != '.' && !(a & 0x08))
  5691  003F28  0EE5               	movlw	229
  5692  003F2A  19DA               	xorwf	dir_read@c& (0+255),w,b
  5693  003F2C  B4D8               	btfsc	status,2,c
  5694  003F2E  EF9B  F01F         	goto	u8901
  5695  003F32  EF9D  F01F         	goto	u8900
  5696  003F36                     u8901:
  5697  003F36  EFAF  F01F         	goto	l7105
  5698  003F3A                     u8900:
  5699  003F3A                     
  5700                           ; BSR set to: 0
  5701  003F3A  0E2E               	movlw	46
  5702  003F3C  19DA               	xorwf	dir_read@c& (0+255),w,b
  5703  003F3E  B4D8               	btfsc	status,2,c
  5704  003F40  EFA4  F01F         	goto	u8911
  5705  003F44  EFA6  F01F         	goto	u8910
  5706  003F48                     u8911:
  5707  003F48  EFAF  F01F         	goto	l7105
  5708  003F4C                     u8910:
  5709  003F4C                     
  5710                           ; BSR set to: 0
  5711  003F4C  B7D9               	btfsc	dir_read@a& (0+255),3,b
  5712  003F4E  EFAB  F01F         	goto	u8921
  5713  003F52  EFAD  F01F         	goto	u8920
  5714  003F56                     u8921:
  5715  003F56  EFAF  F01F         	goto	l7105
  5716  003F5A                     u8920:
  5717  003F5A  EFD2  F01F         	goto	l7113
  5718  003F5E                     l7105:
  5719                           
  5720                           ; BSR set to: 0
  5721                           ;pff.c: 559:   res = dir_next(dj);
  5722  003F5E  C0D1  F0C0         	movff	dir_read@dj,dir_next@dj
  5723  003F62  C0D2  F0C1         	movff	dir_read@dj+1,dir_next@dj+1
  5724  003F66  ECDD  F015         	call	_dir_next	;wreg free
  5725  003F6A  0100               	movlb	0	; () banked
  5726  003F6C  6FDB               	movwf	dir_read@res& (0+255),b
  5727  003F6E                     
  5728                           ; BSR set to: 0
  5729                           ;pff.c: 560:   if (res != FR_OK) break;
  5730  003F6E  51DB               	movf	dir_read@res& (0+255),w,b
  5731  003F70  B4D8               	btfsc	status,2,c
  5732  003F72  EFBD  F01F         	goto	u8931
  5733  003F76  EFBF  F01F         	goto	u8930
  5734  003F7A                     u8931:
  5735  003F7A  EFC1  F01F         	goto	l7111
  5736  003F7E                     u8930:
  5737  003F7E  EFD2  F01F         	goto	l7113
  5738  003F82                     l7111:
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;pff.c: 550:  while (dj->sect) {
  5742  003F82  EE20 F00C          	lfsr	2,12
  5743  003F86  51D1               	movf	dir_read@dj& (0+255),w,b
  5744  003F88  26D9               	addwf	fsr2l,f,c
  5745  003F8A  51D2               	movf	(dir_read@dj+1)& (0+255),w,b
  5746  003F8C  22DA               	addwfc	fsr2h,f,c
  5747  003F8E  50DE               	movf	postinc2,w,c
  5748  003F90  10DE               	iorwf	postinc2,w,c
  5749  003F92  10DE               	iorwf	postinc2,w,c
  5750  003F94  10DE               	iorwf	postinc2,w,c
  5751  003F96  A4D8               	btfss	status,2,c
  5752  003F98  EFD0  F01F         	goto	u8941
  5753  003F9C  EFD2  F01F         	goto	u8940
  5754  003FA0                     u8941:
  5755  003FA0  EF34  F01F         	goto	l7083
  5756  003FA4                     u8940:
  5757  003FA4                     l7113:
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;pff.c: 563:  if (res != FR_OK) dj->sect = 0;
  5761  003FA4  51DB               	movf	dir_read@res& (0+255),w,b
  5762  003FA6  B4D8               	btfsc	status,2,c
  5763  003FA8  EFD8  F01F         	goto	u8951
  5764  003FAC  EFDA  F01F         	goto	u8950
  5765  003FB0                     u8951:
  5766  003FB0  EFE4  F01F         	goto	l7117
  5767  003FB4                     u8950:
  5768  003FB4                     
  5769                           ; BSR set to: 0
  5770  003FB4  EE20 F00C          	lfsr	2,12
  5771  003FB8  51D1               	movf	dir_read@dj& (0+255),w,b
  5772  003FBA  26D9               	addwf	fsr2l,f,c
  5773  003FBC  51D2               	movf	(dir_read@dj+1)& (0+255),w,b
  5774  003FBE  22DA               	addwfc	fsr2h,f,c
  5775  003FC0  6ADE               	clrf	postinc2,c
  5776  003FC2  6ADE               	clrf	postinc2,c
  5777  003FC4  6ADE               	clrf	postinc2,c
  5778  003FC6  6ADD               	clrf	postdec2,c
  5779  003FC8                     l7117:
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;pff.c: 565:  return res;
  5783  003FC8  51DB               	movf	dir_read@res& (0+255),w,b
  5784  003FCA                     
  5785                           ; BSR set to: 0
  5786  003FCA  0012               	return		;funcret
  5787  003FCC                     __end_of_dir_read:
  5788                           	callstack 0
  5789                           
  5790 ;; *************** function _pf_read *****************
  5791 ;; Defined at:
  5792 ;;		line 863 in file "pff.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  buff            2   64[BANK0 ] PTR void 
  5795 ;;		 -> NULL(0), Line(128), 
  5796 ;;  btr             2   66[BANK0 ] unsigned int 
  5797 ;;  br              2   68[BANK0 ] PTR unsigned int 
  5798 ;;		 -> main@s1(2), 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  clst            4   91[BANK0 ] unsigned long 
  5801 ;;  remain          4   87[BANK0 ] unsigned long 
  5802 ;;  sect            4   83[BANK0 ] unsigned long 
  5803 ;;  fs              2   98[BANK0 ] PTR struct .
  5804 ;;		 -> NULL(0), main@fs(42), 
  5805 ;;  rcnt            2   96[BANK0 ] unsigned int 
  5806 ;;  rbuff           2   79[BANK0 ] PTR unsigned char 
  5807 ;;		 -> NULL(0), Line(128), 
  5808 ;;  cs              1   95[BANK0 ] unsigned char 
  5809 ;;  dr              1   78[BANK0 ] enum E2630
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      enum E3114
  5812 ;; Registers used:
  5813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5819 ;;      Params:         0       6       0       0       0       0       0
  5820 ;;      Locals:         0      22       0       0       0       0       0
  5821 ;;      Temps:          0       8       0       0       0       0       0
  5822 ;;      Totals:         0      36       0       0       0       0       0
  5823 ;;Total ram usage:       36 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; Hardware stack levels required when called: 11
  5826 ;; This function calls:
  5827 ;;		_clust2sect
  5828 ;;		_disk_readp
  5829 ;;		_get_fat
  5830 ;; This function is called by:
  5831 ;;		_main
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           	psect	text15
  5836  001A5A                     __ptext15:
  5837                           	callstack 0
  5838  001A5A                     _pf_read:
  5839                           	callstack 19
  5840  001A5A                     
  5841                           ;pff.c: 864:  void* buff,;pff.c: 865:  UINT btr,;pff.c: 866:  UINT* br;pff.c: 868: {;pff
      +                          .c: 869:  DRESULT dr;;pff.c: 870:  DWORD clst;;pff.c: 871:  DWORD sect, remain;;pff.c: 8
      +                          72:  UINT rcnt;;pff.c: 873:  BYTE cs, *rbuff = buff;
  5842  001A5A  C0C0  F0CF         	movff	pf_read@buff,pf_read@rbuff
  5843  001A5E  C0C1  F0D0         	movff	pf_read@buff+1,pf_read@rbuff+1
  5844                           
  5845                           ;pff.c: 874:  FATFS *fs = FatFs;
  5846  001A62  C0FD  F0E2         	movff	_FatFs,pf_read@fs
  5847  001A66  C0FE  F0E3         	movff	_FatFs+1,pf_read@fs+1
  5848  001A6A                     
  5849                           ;pff.c: 876:  *br = 0;
  5850  001A6A  C0C4  FFD9         	movff	pf_read@br,fsr2l
  5851  001A6E  C0C5  FFDA         	movff	pf_read@br+1,fsr2h
  5852  001A72  0E00               	movlw	0
  5853  001A74  6EDE               	movwf	postinc2,c
  5854  001A76  0E00               	movlw	0
  5855  001A78  6EDD               	movwf	postdec2,c
  5856  001A7A                     
  5857                           ;pff.c: 877:  if (!fs) return FR_NOT_ENABLED;
  5858  001A7A  0100               	movlb	0	; () banked
  5859  001A7C  51E2               	movf	pf_read@fs& (0+255),w,b
  5860  001A7E  11E3               	iorwf	(pf_read@fs+1)& (0+255),w,b
  5861  001A80  A4D8               	btfss	status,2,c
  5862  001A82  EF45  F00D         	goto	u9391
  5863  001A86  EF47  F00D         	goto	u9390
  5864  001A8A                     u9391:
  5865  001A8A  EF4A  F00D         	goto	l7459
  5866  001A8E                     u9390:
  5867  001A8E                     
  5868                           ; BSR set to: 0
  5869  001A8E  0E05               	movlw	5
  5870  001A90  EF2D  F00F         	goto	l342
  5871  001A94                     l7459:
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;pff.c: 878:  if (!(fs->flag & 0x01))
  5875  001A94  EE20 F001          	lfsr	2,1
  5876  001A98  51E2               	movf	pf_read@fs& (0+255),w,b
  5877  001A9A  26D9               	addwf	fsr2l,f,c
  5878  001A9C  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  5879  001A9E  22DA               	addwfc	fsr2h,f,c
  5880  001AA0  B0DF               	btfsc	indf2,0,c
  5881  001AA2  EF55  F00D         	goto	u9401
  5882  001AA6  EF57  F00D         	goto	u9400
  5883  001AAA                     u9401:
  5884  001AAA  EF5A  F00D         	goto	l7465
  5885  001AAE                     u9400:
  5886  001AAE                     
  5887                           ; BSR set to: 0
  5888                           ;pff.c: 879:   return FR_NOT_OPENED;
  5889  001AAE  0E04               	movlw	4
  5890  001AB0  EF2D  F00F         	goto	l342
  5891  001AB4                     l7465:
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;pff.c: 881:  remain = fs->fsize - fs->fptr;
  5895  001AB4  EE20 F016          	lfsr	2,22
  5896  001AB8  51E2               	movf	pf_read@fs& (0+255),w,b
  5897  001ABA  26D9               	addwf	fsr2l,f,c
  5898  001ABC  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  5899  001ABE  22DA               	addwfc	fsr2h,f,c
  5900  001AC0  CFDE F0C6          	movff	postinc2,??_pf_read
  5901  001AC4  CFDE F0C7          	movff	postinc2,??_pf_read+1
  5902  001AC8  CFDE F0C8          	movff	postinc2,??_pf_read+2
  5903  001ACC  CFDE F0C9          	movff	postinc2,??_pf_read+3
  5904  001AD0  EE20 F01A          	lfsr	2,26
  5905  001AD4  51E2               	movf	pf_read@fs& (0+255),w,b
  5906  001AD6  26D9               	addwf	fsr2l,f,c
  5907  001AD8  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  5908  001ADA  22DA               	addwfc	fsr2h,f,c
  5909  001ADC  CFDE F0CA          	movff	postinc2,??_pf_read+4
  5910  001AE0  CFDE F0CB          	movff	postinc2,??_pf_read+5
  5911  001AE4  CFDE F0CC          	movff	postinc2,??_pf_read+6
  5912  001AE8  CFDE F0CD          	movff	postinc2,??_pf_read+7
  5913  001AEC  51C6               	movf	??_pf_read& (0+255),w,b
  5914  001AEE  5DCA               	subwf	(??_pf_read+4)& (0+255),w,b
  5915  001AF0  6FD7               	movwf	pf_read@remain& (0+255),b
  5916  001AF2  51C7               	movf	(??_pf_read+1)& (0+255),w,b
  5917  001AF4  59CB               	subwfb	(??_pf_read+5)& (0+255),w,b
  5918  001AF6  6FD8               	movwf	(pf_read@remain+1)& (0+255),b
  5919  001AF8  51C8               	movf	(??_pf_read+2)& (0+255),w,b
  5920  001AFA  59CC               	subwfb	(??_pf_read+6)& (0+255),w,b
  5921  001AFC  6FD9               	movwf	(pf_read@remain+2)& (0+255),b
  5922  001AFE  51C9               	movf	(??_pf_read+3)& (0+255),w,b
  5923  001B00  59CD               	subwfb	(??_pf_read+7)& (0+255),w,b
  5924  001B02  6FDA               	movwf	(pf_read@remain+3)& (0+255),b
  5925  001B04                     
  5926                           ; BSR set to: 0
  5927                           ;pff.c: 882:  if (btr > remain) btr = (UINT)remain;
  5928  001B04  51C2               	movf	pf_read@btr& (0+255),w,b
  5929  001B06  6FC6               	movwf	??_pf_read& (0+255),b
  5930  001B08  51C3               	movf	(pf_read@btr+1)& (0+255),w,b
  5931  001B0A  6FC7               	movwf	(??_pf_read+1)& (0+255),b
  5932  001B0C  6BC8               	clrf	(??_pf_read+2)& (0+255),b
  5933  001B0E  6BC9               	clrf	(??_pf_read+3)& (0+255),b
  5934  001B10  51C6               	movf	??_pf_read& (0+255),w,b
  5935  001B12  5DD7               	subwf	pf_read@remain& (0+255),w,b
  5936  001B14  51C7               	movf	(??_pf_read+1)& (0+255),w,b
  5937  001B16  59D8               	subwfb	(pf_read@remain+1)& (0+255),w,b
  5938  001B18  51C8               	movf	(??_pf_read+2)& (0+255),w,b
  5939  001B1A  59D9               	subwfb	(pf_read@remain+2)& (0+255),w,b
  5940  001B1C  51C9               	movf	(??_pf_read+3)& (0+255),w,b
  5941  001B1E  59DA               	subwfb	(pf_read@remain+3)& (0+255),w,b
  5942  001B20  B0D8               	btfsc	status,0,c
  5943  001B22  EF95  F00D         	goto	u9411
  5944  001B26  EF97  F00D         	goto	u9410
  5945  001B2A                     u9411:
  5946  001B2A  EF23  F00F         	goto	l7533
  5947  001B2E                     u9410:
  5948  001B2E                     
  5949                           ; BSR set to: 0
  5950  001B2E  C0D7  F0C2         	movff	pf_read@remain,pf_read@btr
  5951  001B32  C0D8  F0C3         	movff	pf_read@remain+1,pf_read@btr+1
  5952  001B36  EF23  F00F         	goto	l7533
  5953  001B3A                     l7471:
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;pff.c: 885:   if ((fs->fptr % 512) == 0) {
  5957  001B3A  EE20 F016          	lfsr	2,22
  5958  001B3E  51E2               	movf	pf_read@fs& (0+255),w,b
  5959  001B40  26D9               	addwf	fsr2l,f,c
  5960  001B42  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  5961  001B44  22DA               	addwfc	fsr2h,f,c
  5962  001B46  0EFF               	movlw	255
  5963  001B48  14DE               	andwf	postinc2,w,c
  5964  001B4A  6FC6               	movwf	??_pf_read& (0+255),b
  5965  001B4C  0E01               	movlw	1
  5966  001B4E  14DE               	andwf	postinc2,w,c
  5967  001B50  6FC7               	movwf	(??_pf_read+1)& (0+255),b
  5968  001B52  0E00               	movlw	0
  5969  001B54  14DE               	andwf	postinc2,w,c
  5970  001B56  6FC8               	movwf	(??_pf_read+2)& (0+255),b
  5971  001B58  0E00               	movlw	0
  5972  001B5A  14DE               	andwf	postinc2,w,c
  5973  001B5C  6FC9               	movwf	(??_pf_read+3)& (0+255),b
  5974  001B5E  51C6               	movf	??_pf_read& (0+255),w,b
  5975  001B60  11C7               	iorwf	(??_pf_read+1)& (0+255),w,b
  5976  001B62  11C8               	iorwf	(??_pf_read+2)& (0+255),w,b
  5977  001B64  11C9               	iorwf	(??_pf_read+3)& (0+255),w,b
  5978  001B66  A4D8               	btfss	status,2,c
  5979  001B68  EFB8  F00D         	goto	u9421
  5980  001B6C  EFBA  F00D         	goto	u9420
  5981  001B70                     u9421:
  5982  001B70  EF8E  F00E         	goto	l347
  5983  001B74                     u9420:
  5984  001B74                     
  5985                           ; BSR set to: 0
  5986                           ;pff.c: 886:    cs = (BYTE)(fs->fptr / 512 & (fs->csize - 1));
  5987  001B74  EE20 F016          	lfsr	2,22
  5988  001B78  51E2               	movf	pf_read@fs& (0+255),w,b
  5989  001B7A  26D9               	addwf	fsr2l,f,c
  5990  001B7C  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  5991  001B7E  22DA               	addwfc	fsr2h,f,c
  5992  001B80  CFDE F0C6          	movff	postinc2,??_pf_read
  5993  001B84  CFDE F0C7          	movff	postinc2,??_pf_read+1
  5994  001B88  CFDE F0C8          	movff	postinc2,??_pf_read+2
  5995  001B8C  CFDE F0C9          	movff	postinc2,??_pf_read+3
  5996  001B90  0E0A               	movlw	10
  5997  001B92  EFD0  F00D         	goto	u9430
  5998  001B96                     u9435:
  5999  001B96  90D8               	bcf	status,0,c
  6000  001B98  33C9               	rrcf	(??_pf_read+3)& (0+255),f,b
  6001  001B9A  33C8               	rrcf	(??_pf_read+2)& (0+255),f,b
  6002  001B9C  33C7               	rrcf	(??_pf_read+1)& (0+255),f,b
  6003  001B9E  33C6               	rrcf	??_pf_read& (0+255),f,b
  6004  001BA0                     u9430:
  6005  001BA0  2EE8               	decfsz	wreg,f,c
  6006  001BA2  EFCB  F00D         	goto	u9435
  6007  001BA6  EE20 F002          	lfsr	2,2
  6008  001BAA  51E2               	movf	pf_read@fs& (0+255),w,b
  6009  001BAC  26D9               	addwf	fsr2l,f,c
  6010  001BAE  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6011  001BB0  22DA               	addwfc	fsr2h,f,c
  6012  001BB2  50DF               	movf	indf2,w,c
  6013  001BB4  6FCA               	movwf	(??_pf_read+4)& (0+255),b
  6014  001BB6  05CA               	decf	(??_pf_read+4)& (0+255),w,b
  6015  001BB8  15C6               	andwf	??_pf_read& (0+255),w,b
  6016  001BBA  6FDF               	movwf	pf_read@cs& (0+255),b
  6017  001BBC                     
  6018                           ; BSR set to: 0
  6019                           ;pff.c: 887:    if (!cs) {
  6020  001BBC  51DF               	movf	pf_read@cs& (0+255),w,b
  6021  001BBE  A4D8               	btfss	status,2,c
  6022  001BC0  EFE4  F00D         	goto	u9441
  6023  001BC4  EFE6  F00D         	goto	u9440
  6024  001BC8                     u9441:
  6025  001BC8  EF46  F00E         	goto	l7493
  6026  001BCC                     u9440:
  6027  001BCC                     
  6028                           ; BSR set to: 0
  6029                           ;pff.c: 888:     if (fs->fptr == 0)
  6030  001BCC  EE20 F016          	lfsr	2,22
  6031  001BD0  51E2               	movf	pf_read@fs& (0+255),w,b
  6032  001BD2  26D9               	addwf	fsr2l,f,c
  6033  001BD4  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6034  001BD6  22DA               	addwfc	fsr2h,f,c
  6035  001BD8  50DE               	movf	postinc2,w,c
  6036  001BDA  10DE               	iorwf	postinc2,w,c
  6037  001BDC  10DE               	iorwf	postinc2,w,c
  6038  001BDE  10DE               	iorwf	postinc2,w,c
  6039  001BE0  A4D8               	btfss	status,2,c
  6040  001BE2  EFF5  F00D         	goto	u9451
  6041  001BE6  EFF7  F00D         	goto	u9450
  6042  001BEA                     u9451:
  6043  001BEA  EF07  F00E         	goto	l7481
  6044  001BEE                     u9450:
  6045  001BEE                     
  6046                           ; BSR set to: 0
  6047                           ;pff.c: 889:      clst = fs->org_clust;
  6048  001BEE  EE20 F01E          	lfsr	2,30
  6049  001BF2  51E2               	movf	pf_read@fs& (0+255),w,b
  6050  001BF4  26D9               	addwf	fsr2l,f,c
  6051  001BF6  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6052  001BF8  22DA               	addwfc	fsr2h,f,c
  6053  001BFA  CFDE F0DB          	movff	postinc2,pf_read@clst
  6054  001BFE  CFDE F0DC          	movff	postinc2,pf_read@clst+1
  6055  001C02  CFDE F0DD          	movff	postinc2,pf_read@clst+2
  6056  001C06  CFDE F0DE          	movff	postinc2,pf_read@clst+3
  6057  001C0A  EF1F  F00E         	goto	l7483
  6058  001C0E                     l7481:
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;pff.c: 891:      clst = get_fat(fs->curr_clust);
  6062  001C0E  EE20 F022          	lfsr	2,34
  6063  001C12  51E2               	movf	pf_read@fs& (0+255),w,b
  6064  001C14  26D9               	addwf	fsr2l,f,c
  6065  001C16  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6066  001C18  22DA               	addwfc	fsr2h,f,c
  6067  001C1A  CFDE F0A0          	movff	postinc2,get_fat@clst
  6068  001C1E  CFDE F0A1          	movff	postinc2,get_fat@clst+1
  6069  001C22  CFDE F0A2          	movff	postinc2,get_fat@clst+2
  6070  001C26  CFDE F0A3          	movff	postinc2,get_fat@clst+3
  6071  001C2A  ECEC  F018         	call	_get_fat	;wreg free
  6072  001C2E  C0A0  F0DB         	movff	?_get_fat,pf_read@clst
  6073  001C32  C0A1  F0DC         	movff	?_get_fat+1,pf_read@clst+1
  6074  001C36  C0A2  F0DD         	movff	?_get_fat+2,pf_read@clst+2
  6075  001C3A  C0A3  F0DE         	movff	?_get_fat+3,pf_read@clst+3
  6076  001C3E                     l7483:
  6077                           
  6078                           ;pff.c: 892:     if (clst <= 1)
  6079  001C3E  0100               	movlb	0	; () banked
  6080  001C40  51DE               	movf	(pf_read@clst+3)& (0+255),w,b
  6081  001C42  11DD               	iorwf	(pf_read@clst+2)& (0+255),w,b
  6082  001C44  11DC               	iorwf	(pf_read@clst+1)& (0+255),w,b
  6083  001C46  E107               	bnz	u9461
  6084  001C48  0E02               	movlw	2
  6085  001C4A  5DDB               	subwf	pf_read@clst& (0+255),w,b
  6086  001C4C  B0D8               	btfsc	status,0,c
  6087  001C4E  EF2B  F00E         	goto	u9461
  6088  001C52  EF2D  F00E         	goto	u9460
  6089  001C56                     u9461:
  6090  001C56  EF38  F00E         	goto	l7491
  6091  001C5A                     u9460:
  6092  001C5A                     
  6093                           ; BSR set to: 0
  6094                           ;pff.c: 893:                     {fs->flag = 0; return FR_DISK_ERR;};
  6095  001C5A  EE20 F001          	lfsr	2,1
  6096  001C5E  51E2               	movf	pf_read@fs& (0+255),w,b
  6097  001C60  26D9               	addwf	fsr2l,f,c
  6098  001C62  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6099  001C64  22DA               	addwfc	fsr2h,f,c
  6100  001C66  0E00               	movlw	0
  6101  001C68  6EDF               	movwf	indf2,c
  6102  001C6A                     l7487:
  6103                           
  6104                           ; BSR set to: 0
  6105  001C6A  0E01               	movlw	1
  6106  001C6C  EF2D  F00F         	goto	l342
  6107  001C70                     l7491:
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;pff.c: 894:     fs->curr_clust = clst;
  6111  001C70  EE20 F022          	lfsr	2,34
  6112  001C74  51E2               	movf	pf_read@fs& (0+255),w,b
  6113  001C76  26D9               	addwf	fsr2l,f,c
  6114  001C78  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6115  001C7A  22DA               	addwfc	fsr2h,f,c
  6116  001C7C  C0DB  FFDE         	movff	pf_read@clst,postinc2
  6117  001C80  C0DC  FFDE         	movff	pf_read@clst+1,postinc2
  6118  001C84  C0DD  FFDE         	movff	pf_read@clst+2,postinc2
  6119  001C88  C0DE  FFDE         	movff	pf_read@clst+3,postinc2
  6120  001C8C                     l7493:
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;pff.c: 896:    sect = clust2sect(fs->curr_clust);
  6124  001C8C  EE20 F022          	lfsr	2,34
  6125  001C90  51E2               	movf	pf_read@fs& (0+255),w,b
  6126  001C92  26D9               	addwf	fsr2l,f,c
  6127  001C94  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6128  001C96  22DA               	addwfc	fsr2h,f,c
  6129  001C98  CFDE F012          	movff	postinc2,clust2sect@clst
  6130  001C9C  CFDE F013          	movff	postinc2,clust2sect@clst+1
  6131  001CA0  CFDE F014          	movff	postinc2,clust2sect@clst+2
  6132  001CA4  CFDE F015          	movff	postinc2,clust2sect@clst+3
  6133  001CA8  ECD5  F025         	call	_clust2sect	;wreg free
  6134  001CAC  C012  F0D3         	movff	?_clust2sect,pf_read@sect
  6135  001CB0  C013  F0D4         	movff	?_clust2sect+1,pf_read@sect+1
  6136  001CB4  C014  F0D5         	movff	?_clust2sect+2,pf_read@sect+2
  6137  001CB8  C015  F0D6         	movff	?_clust2sect+3,pf_read@sect+3
  6138  001CBC                     
  6139                           ;pff.c: 897:    if (!sect) {fs->flag = 0; return FR_DISK_ERR;};
  6140  001CBC  0100               	movlb	0	; () banked
  6141  001CBE  51D3               	movf	pf_read@sect& (0+255),w,b
  6142  001CC0  11D4               	iorwf	(pf_read@sect+1)& (0+255),w,b
  6143  001CC2  11D5               	iorwf	(pf_read@sect+2)& (0+255),w,b
  6144  001CC4  11D6               	iorwf	(pf_read@sect+3)& (0+255),w,b
  6145  001CC6  A4D8               	btfss	status,2,c
  6146  001CC8  EF68  F00E         	goto	u9471
  6147  001CCC  EF6A  F00E         	goto	u9470
  6148  001CD0                     u9471:
  6149  001CD0  EF74  F00E         	goto	l7503
  6150  001CD4                     u9470:
  6151  001CD4                     
  6152                           ; BSR set to: 0
  6153  001CD4  EE20 F001          	lfsr	2,1
  6154  001CD8  51E2               	movf	pf_read@fs& (0+255),w,b
  6155  001CDA  26D9               	addwf	fsr2l,f,c
  6156  001CDC  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6157  001CDE  22DA               	addwfc	fsr2h,f,c
  6158  001CE0  0E00               	movlw	0
  6159  001CE2  6EDF               	movwf	indf2,c
  6160  001CE4  EF35  F00E         	goto	l7487
  6161  001CE8                     l7503:
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;pff.c: 898:    fs->dsect = sect + cs;
  6165  001CE8  51DF               	movf	pf_read@cs& (0+255),w,b
  6166  001CEA  25D3               	addwf	pf_read@sect& (0+255),w,b
  6167  001CEC  6FC6               	movwf	??_pf_read& (0+255),b
  6168  001CEE  0E00               	movlw	0
  6169  001CF0  21D4               	addwfc	(pf_read@sect+1)& (0+255),w,b
  6170  001CF2  6FC7               	movwf	(??_pf_read+1)& (0+255),b
  6171  001CF4  0E00               	movlw	0
  6172  001CF6  21D5               	addwfc	(pf_read@sect+2)& (0+255),w,b
  6173  001CF8  6FC8               	movwf	(??_pf_read+2)& (0+255),b
  6174  001CFA  0E00               	movlw	0
  6175  001CFC  21D6               	addwfc	(pf_read@sect+3)& (0+255),w,b
  6176  001CFE  6FC9               	movwf	(??_pf_read+3)& (0+255),b
  6177  001D00  EE20 F026          	lfsr	2,38
  6178  001D04  51E2               	movf	pf_read@fs& (0+255),w,b
  6179  001D06  26D9               	addwf	fsr2l,f,c
  6180  001D08  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6181  001D0A  22DA               	addwfc	fsr2h,f,c
  6182  001D0C  C0C6  FFDE         	movff	??_pf_read,postinc2
  6183  001D10  C0C7  FFDE         	movff	??_pf_read+1,postinc2
  6184  001D14  C0C8  FFDE         	movff	??_pf_read+2,postinc2
  6185  001D18  C0C9  FFDE         	movff	??_pf_read+3,postinc2
  6186  001D1C                     l347:
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;pff.c: 900:   rcnt = 512 - (UINT)fs->fptr % 512;
  6190  001D1C  0EFF               	movlw	255
  6191  001D1E  6FC6               	movwf	??_pf_read& (0+255),b
  6192  001D20  0E01               	movlw	1
  6193  001D22  6FC7               	movwf	(??_pf_read+1)& (0+255),b
  6194  001D24  EE20 F016          	lfsr	2,22
  6195  001D28  51E2               	movf	pf_read@fs& (0+255),w,b
  6196  001D2A  26D9               	addwf	fsr2l,f,c
  6197  001D2C  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6198  001D2E  22DA               	addwfc	fsr2h,f,c
  6199  001D30  CFDE F0C8          	movff	postinc2,??_pf_read+2
  6200  001D34  CFDD F0C9          	movff	postdec2,??_pf_read+3
  6201  001D38  51C6               	movf	??_pf_read& (0+255),w,b
  6202  001D3A  17C8               	andwf	(??_pf_read+2)& (0+255),f,b
  6203  001D3C  51C7               	movf	(??_pf_read+1)& (0+255),w,b
  6204  001D3E  17C9               	andwf	(??_pf_read+3)& (0+255),f,b
  6205  001D40  51C8               	movf	(??_pf_read+2)& (0+255),w,b
  6206  001D42  0800               	sublw	0
  6207  001D44  6FE0               	movwf	pf_read@rcnt& (0+255),b
  6208  001D46  51C9               	movf	(??_pf_read+3)& (0+255),w,b
  6209  001D48  A0D8               	btfss	status,0,c
  6210  001D4A  2AE8               	incf	wreg,f,c
  6211  001D4C  0802               	sublw	2
  6212  001D4E  6FE1               	movwf	(pf_read@rcnt+1)& (0+255),b
  6213  001D50                     
  6214                           ; BSR set to: 0
  6215                           ;pff.c: 901:   if (rcnt > btr)
  6216  001D50  51E0               	movf	pf_read@rcnt& (0+255),w,b
  6217  001D52  5DC2               	subwf	pf_read@btr& (0+255),w,b
  6218  001D54  51E1               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6219  001D56  59C3               	subwfb	(pf_read@btr+1)& (0+255),w,b
  6220  001D58  B0D8               	btfsc	status,0,c
  6221  001D5A  EFB1  F00E         	goto	u9481
  6222  001D5E  EFB3  F00E         	goto	u9480
  6223  001D62                     u9481:
  6224  001D62  EFB7  F00E         	goto	l7509
  6225  001D66                     u9480:
  6226  001D66                     
  6227                           ; BSR set to: 0
  6228                           ;pff.c: 902:             rcnt = btr;
  6229  001D66  C0C2  F0E0         	movff	pf_read@btr,pf_read@rcnt
  6230  001D6A  C0C3  F0E1         	movff	pf_read@btr+1,pf_read@rcnt+1
  6231  001D6E                     l7509:
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;pff.c: 903:   dr = disk_readp(!buff ? 0 : rbuff, fs->dsect, (UINT)fs->fptr % 512, rcnt)
      +                          ;
  6235  001D6E  51C0               	movf	pf_read@buff& (0+255),w,b
  6236  001D70  11C1               	iorwf	(pf_read@buff+1)& (0+255),w,b
  6237  001D72  B4D8               	btfsc	status,2,c
  6238  001D74  EFBE  F00E         	goto	u9491
  6239  001D78  EFC0  F00E         	goto	u9490
  6240  001D7C                     u9491:
  6241  001D7C  EFC6  F00E         	goto	l7513
  6242  001D80                     u9490:
  6243  001D80                     
  6244                           ; BSR set to: 0
  6245  001D80  C0CF  F0D1         	movff	pf_read@rbuff,_pf_read$894
  6246  001D84  C0D0  F0D2         	movff	pf_read@rbuff+1,_pf_read$894+1
  6247  001D88  EFCA  F00E         	goto	l7515
  6248  001D8C                     l7513:
  6249                           
  6250                           ; BSR set to: 0
  6251  001D8C  0E00               	movlw	0
  6252  001D8E  6FD1               	movwf	_pf_read$894& (0+255),b
  6253  001D90  0E00               	movlw	0
  6254  001D92  6FD2               	movwf	(_pf_read$894+1)& (0+255),b
  6255  001D94                     l7515:
  6256                           
  6257                           ; BSR set to: 0
  6258  001D94  C0D1  F090         	movff	_pf_read$894,disk_readp@buff
  6259  001D98  C0D2  F091         	movff	_pf_read$894+1,disk_readp@buff+1
  6260  001D9C  EE20 F026          	lfsr	2,38
  6261  001DA0  51E2               	movf	pf_read@fs& (0+255),w,b
  6262  001DA2  26D9               	addwf	fsr2l,f,c
  6263  001DA4  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6264  001DA6  22DA               	addwfc	fsr2h,f,c
  6265  001DA8  CFDE F092          	movff	postinc2,disk_readp@sector
  6266  001DAC  CFDE F093          	movff	postinc2,disk_readp@sector+1
  6267  001DB0  CFDE F094          	movff	postinc2,disk_readp@sector+2
  6268  001DB4  CFDE F095          	movff	postinc2,disk_readp@sector+3
  6269  001DB8  EE20 F016          	lfsr	2,22
  6270  001DBC  51E2               	movf	pf_read@fs& (0+255),w,b
  6271  001DBE  26D9               	addwf	fsr2l,f,c
  6272  001DC0  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6273  001DC2  22DA               	addwfc	fsr2h,f,c
  6274  001DC4  CFDE F0C6          	movff	postinc2,??_pf_read
  6275  001DC8  CFDD F0C7          	movff	postdec2,??_pf_read+1
  6276  001DCC  0EFF               	movlw	255
  6277  001DCE  15C6               	andwf	??_pf_read& (0+255),w,b
  6278  001DD0  6F96               	movwf	disk_readp@offset& (0+255),b
  6279  001DD2  0E01               	movlw	1
  6280  001DD4  15C7               	andwf	(??_pf_read+1)& (0+255),w,b
  6281  001DD6  6F97               	movwf	(disk_readp@offset+1)& (0+255),b
  6282  001DD8  C0E0  F098         	movff	pf_read@rcnt,disk_readp@count
  6283  001DDC  C0E1  F099         	movff	pf_read@rcnt+1,disk_readp@count+1
  6284  001DE0  EC65  F01B         	call	_disk_readp	;wreg free
  6285  001DE4  0100               	movlb	0	; () banked
  6286  001DE6  6FCE               	movwf	pf_read@dr& (0+255),b
  6287  001DE8                     
  6288                           ; BSR set to: 0
  6289                           ;pff.c: 904:   if (dr)
  6290  001DE8  51CE               	movf	pf_read@dr& (0+255),w,b
  6291  001DEA  B4D8               	btfsc	status,2,c
  6292  001DEC  EFFA  F00E         	goto	u9501
  6293  001DF0  EFFC  F00E         	goto	u9500
  6294  001DF4                     u9501:
  6295  001DF4  EF06  F00F         	goto	l7525
  6296  001DF8                     u9500:
  6297  001DF8                     
  6298                           ; BSR set to: 0
  6299                           ;pff.c: 905:             {fs->flag = 0; return FR_DISK_ERR;};
  6300  001DF8  EE20 F001          	lfsr	2,1
  6301  001DFC  51E2               	movf	pf_read@fs& (0+255),w,b
  6302  001DFE  26D9               	addwf	fsr2l,f,c
  6303  001E00  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6304  001E02  22DA               	addwfc	fsr2h,f,c
  6305  001E04  0E00               	movlw	0
  6306  001E06  6EDF               	movwf	indf2,c
  6307  001E08  EF35  F00E         	goto	l7487
  6308  001E0C                     l7525:
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;pff.c: 907:   fs->fptr += rcnt; rbuff += rcnt;
  6312  001E0C  EE20 F016          	lfsr	2,22
  6313  001E10  51E2               	movf	pf_read@fs& (0+255),w,b
  6314  001E12  26D9               	addwf	fsr2l,f,c
  6315  001E14  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6316  001E16  22DA               	addwfc	fsr2h,f,c
  6317  001E18  51E0               	movf	pf_read@rcnt& (0+255),w,b
  6318  001E1A  26DE               	addwf	postinc2,f,c
  6319  001E1C  51E1               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6320  001E1E  22DE               	addwfc	postinc2,f,c
  6321  001E20  0E00               	movlw	0
  6322  001E22  22DE               	addwfc	postinc2,f,c
  6323  001E24  22DE               	addwfc	postinc2,f,c
  6324  001E26                     
  6325                           ; BSR set to: 0
  6326  001E26  51E0               	movf	pf_read@rcnt& (0+255),w,b
  6327  001E28  27CF               	addwf	pf_read@rbuff& (0+255),f,b
  6328  001E2A  51E1               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6329  001E2C  23D0               	addwfc	(pf_read@rbuff+1)& (0+255),f,b
  6330  001E2E                     
  6331                           ; BSR set to: 0
  6332                           ;pff.c: 909:         btr -= rcnt;
  6333  001E2E  51E0               	movf	pf_read@rcnt& (0+255),w,b
  6334  001E30  5FC2               	subwf	pf_read@btr& (0+255),f,b
  6335  001E32  51E1               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6336  001E34  5BC3               	subwfb	(pf_read@btr+1)& (0+255),f,b
  6337  001E36                     
  6338                           ; BSR set to: 0
  6339                           ;pff.c: 910:         *br += rcnt;
  6340  001E36  C0C4  FFD9         	movff	pf_read@br,fsr2l
  6341  001E3A  C0C5  FFDA         	movff	pf_read@br+1,fsr2h
  6342  001E3E  51E0               	movf	pf_read@rcnt& (0+255),w,b
  6343  001E40  26DE               	addwf	postinc2,f,c
  6344  001E42  51E1               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6345  001E44  22DD               	addwfc	postdec2,f,c
  6346  001E46                     l7533:
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;pff.c: 884:  while (btr) {
  6350  001E46  51C2               	movf	pf_read@btr& (0+255),w,b
  6351  001E48  11C3               	iorwf	(pf_read@btr+1)& (0+255),w,b
  6352  001E4A  A4D8               	btfss	status,2,c
  6353  001E4C  EF2A  F00F         	goto	u9511
  6354  001E50  EF2C  F00F         	goto	u9510
  6355  001E54                     u9511:
  6356  001E54  EF9D  F00D         	goto	l7471
  6357  001E58                     u9510:
  6358  001E58                     
  6359                           ; BSR set to: 0
  6360                           ;pff.c: 913:  return FR_OK;
  6361  001E58  0E00               	movlw	0
  6362  001E5A                     l342:
  6363                           
  6364                           ; BSR set to: 0
  6365  001E5A  0012               	return		;funcret
  6366  001E5C                     __end_of_pf_read:
  6367                           	callstack 0
  6368                           
  6369 ;; *************** function _pf_opendir *****************
  6370 ;; Defined at:
  6371 ;;		line 1051 in file "pff.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;  dj              2   97[BANK0 ] PTR struct .
  6374 ;;		 -> main@dir(16), 
  6375 ;;  path            2   99[BANK0 ] PTR const unsigned char 
  6376 ;;		 -> Line(128), 
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  dir            32    0[BANK1 ] unsigned char [32]
  6379 ;;  sp             12   32[BANK1 ] unsigned char [12]
  6380 ;;  fs              2   44[BANK1 ] PTR struct .
  6381 ;;		 -> NULL(0), main@fs(42), 
  6382 ;;  res             1   46[BANK1 ] enum E2600
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  1    wreg      enum E3114
  6385 ;; Registers used:
  6386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6392 ;;      Params:         0       4       0       0       0       0       0
  6393 ;;      Locals:         0       0      47       0       0       0       0
  6394 ;;      Temps:          0       0       0       0       0       0       0
  6395 ;;      Totals:         0       4      47       0       0       0       0
  6396 ;;Total ram usage:       51 bytes
  6397 ;; Hardware stack levels used: 1
  6398 ;; Hardware stack levels required when called: 14
  6399 ;; This function calls:
  6400 ;;		_dir_rewind
  6401 ;;		_follow_path
  6402 ;;		_get_clust
  6403 ;; This function is called by:
  6404 ;;		_main
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408                           	psect	text16
  6409  00491C                     __ptext16:
  6410                           	callstack 0
  6411  00491C                     _pf_opendir:
  6412                           	callstack 16
  6413  00491C                     
  6414                           ;pff.c: 1052:  DIR *dj,;pff.c: 1053:  const char *path;pff.c: 1055: {;pff.c: 1056:  FRES
      +                          ULT res;;pff.c: 1057:  BYTE sp[12], dir[32];;pff.c: 1058:  FATFS *fs = FatFs;
  6415  00491C  C0FD  F12C         	movff	_FatFs,pf_opendir@fs
  6416  004920  C0FE  F12D         	movff	_FatFs+1,pf_opendir@fs+1
  6417                           
  6418                           ;pff.c: 1061:  if (!fs) {
  6419  004924  0101               	movlb	1	; () banked
  6420  004926  512C               	movf	pf_opendir@fs& (0+255),w,b
  6421  004928  112D               	iorwf	(pf_opendir@fs+1)& (0+255),w,b
  6422  00492A  A4D8               	btfss	status,2,c
  6423  00492C  EF9A  F024         	goto	u9641
  6424  004930  EF9C  F024         	goto	u9640
  6425  004934                     u9641:
  6426  004934  EFA0  F024         	goto	l7607
  6427  004938                     u9640:
  6428  004938                     
  6429                           ; BSR set to: 1
  6430                           ;pff.c: 1062:   res = FR_NOT_ENABLED;
  6431  004938  0E05               	movlw	5
  6432  00493A  6F2E               	movwf	pf_opendir@res& (0+255),b
  6433                           
  6434                           ;pff.c: 1063:  } else {
  6435  00493C  EFFC  F024         	goto	l7623
  6436  004940                     l7607:
  6437                           
  6438                           ; BSR set to: 1
  6439                           ;pff.c: 1064:   dj->fn = sp;
  6440  004940  0100               	movlb	0	; () banked
  6441  004942  EE20 F002          	lfsr	2,2
  6442  004946  51E1               	movf	pf_opendir@dj& (0+255),w,b
  6443  004948  26D9               	addwf	fsr2l,f,c
  6444  00494A  51E2               	movf	(pf_opendir@dj+1)& (0+255),w,b
  6445  00494C  22DA               	addwfc	fsr2h,f,c
  6446  00494E  0E20               	movlw	low pf_opendir@sp
  6447  004950  6EDE               	movwf	postinc2,c
  6448  004952  0E01               	movlw	high pf_opendir@sp
  6449  004954  6EDD               	movwf	postdec2,c
  6450  004956                     
  6451                           ; BSR set to: 0
  6452                           ;pff.c: 1065:   res = follow_path(dj, dir, path);
  6453  004956  C0E1  F0D9         	movff	pf_opendir@dj,follow_path@dj
  6454  00495A  C0E2  F0DA         	movff	pf_opendir@dj+1,follow_path@dj+1
  6455  00495E  0E00               	movlw	low pf_opendir@dir
  6456  004960  6FDB               	movwf	follow_path@dir& (0+255),b
  6457  004962  0E01               	movlw	high pf_opendir@dir
  6458  004964  6FDC               	movwf	(follow_path@dir+1)& (0+255),b
  6459  004966  C0E3  F0DD         	movff	pf_opendir@path,follow_path@path
  6460  00496A  C0E4  F0DE         	movff	pf_opendir@path+1,follow_path@path+1
  6461  00496E  ECE6  F01F         	call	_follow_path	;wreg free
  6462  004972  0101               	movlb	1	; () banked
  6463  004974  6F2E               	movwf	pf_opendir@res& (0+255),b
  6464  004976                     
  6465                           ; BSR set to: 1
  6466                           ;pff.c: 1066:   if (res == FR_OK) {
  6467  004976  512E               	movf	pf_opendir@res& (0+255),w,b
  6468  004978  A4D8               	btfss	status,2,c
  6469  00497A  EFC1  F024         	goto	u9651
  6470  00497E  EFC3  F024         	goto	u9650
  6471  004982                     u9651:
  6472  004982  EFFC  F024         	goto	l7623
  6473  004986                     u9650:
  6474  004986                     
  6475                           ; BSR set to: 1
  6476                           ;pff.c: 1067:    if (dir[0]) {
  6477  004986  5100               	movf	pf_opendir@dir& (0+255),w,b
  6478  004988  B4D8               	btfsc	status,2,c
  6479  00498A  EFC9  F024         	goto	u9661
  6480  00498E  EFCB  F024         	goto	u9660
  6481  004992                     u9661:
  6482  004992  EFEB  F024         	goto	l381
  6483  004996                     u9660:
  6484  004996                     
  6485                           ; BSR set to: 1
  6486                           ;pff.c: 1068:     if (dir[11] & 0x10)
  6487  004996  A90B               	btfss	(pf_opendir@dir+11)& (0+255),4,b
  6488  004998  EFD0  F024         	goto	u9671
  6489  00499C  EFD2  F024         	goto	u9670
  6490  0049A0                     u9671:
  6491  0049A0  EFE9  F024         	goto	l7619
  6492  0049A4                     u9670:
  6493  0049A4                     
  6494                           ; BSR set to: 1
  6495                           ;pff.c: 1069:      dj->sclust = get_clust(dir);
  6496  0049A4  0E00               	movlw	low pf_opendir@dir
  6497  0049A6  6E06               	movwf	get_clust@dir^0,c
  6498  0049A8  0E01               	movlw	high pf_opendir@dir
  6499  0049AA  6E07               	movwf	(get_clust@dir+1)^0,c
  6500  0049AC  ECA4  F027         	call	_get_clust	;wreg free
  6501  0049B0  0100               	movlb	0	; () banked
  6502  0049B2  EE20 F004          	lfsr	2,4
  6503  0049B6  51E1               	movf	pf_opendir@dj& (0+255),w,b
  6504  0049B8  26D9               	addwf	fsr2l,f,c
  6505  0049BA  51E2               	movf	(pf_opendir@dj+1)& (0+255),w,b
  6506  0049BC  22DA               	addwfc	fsr2h,f,c
  6507  0049BE  C006  FFDE         	movff	?_get_clust,postinc2
  6508  0049C2  C007  FFDE         	movff	?_get_clust+1,postinc2
  6509  0049C6  C008  FFDE         	movff	?_get_clust+2,postinc2
  6510  0049CA  C009  FFDE         	movff	?_get_clust+3,postinc2
  6511  0049CE  EFEB  F024         	goto	l381
  6512  0049D2                     l7619:
  6513                           
  6514                           ; BSR set to: 1
  6515                           ;pff.c: 1071:      res = FR_NO_FILE;
  6516  0049D2  0E03               	movlw	3
  6517  0049D4  6F2E               	movwf	pf_opendir@res& (0+255),b
  6518  0049D6                     l381:
  6519                           
  6520                           ;pff.c: 1073:    if (res == FR_OK)
  6521  0049D6  0101               	movlb	1	; () banked
  6522  0049D8  512E               	movf	pf_opendir@res& (0+255),w,b
  6523  0049DA  A4D8               	btfss	status,2,c
  6524  0049DC  EFF2  F024         	goto	u9681
  6525  0049E0  EFF4  F024         	goto	u9680
  6526  0049E4                     u9681:
  6527  0049E4  EFFC  F024         	goto	l7623
  6528  0049E8                     u9680:
  6529  0049E8                     
  6530                           ; BSR set to: 1
  6531                           ;pff.c: 1074:     res = dir_rewind(dj);
  6532  0049E8  C0E1  F01D         	movff	pf_opendir@dj,dir_rewind@dj
  6533  0049EC  C0E2  F01E         	movff	pf_opendir@dj+1,dir_rewind@dj+1
  6534  0049F0  EC1E  F023         	call	_dir_rewind	;wreg free
  6535  0049F4  0101               	movlb	1	; () banked
  6536  0049F6  6F2E               	movwf	pf_opendir@res& (0+255),b
  6537  0049F8                     l7623:
  6538                           
  6539                           ; BSR set to: 1
  6540                           ;pff.c: 1078:  return res;
  6541  0049F8  512E               	movf	pf_opendir@res& (0+255),w,b
  6542  0049FA                     
  6543                           ; BSR set to: 1
  6544  0049FA  0012               	return		;funcret
  6545  0049FC                     __end_of_pf_opendir:
  6546                           	callstack 0
  6547                           
  6548 ;; *************** function _pf_open *****************
  6549 ;; Defined at:
  6550 ;;		line 826 in file "pff.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  path            2   97[BANK0 ] PTR const unsigned char 
  6553 ;;		 -> Line(128), 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  dir            32   34[BANK1 ] unsigned char [32]
  6556 ;;  dj             16   69[BANK1 ] struct .
  6557 ;;  sp             12   22[BANK1 ] unsigned char [12]
  6558 ;;  fs              2   67[BANK1 ] PTR struct .
  6559 ;;		 -> NULL(0), main@fs(42), 
  6560 ;;  res             1   66[BANK1 ] enum E2600
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  1    wreg      enum E3114
  6563 ;; Registers used:
  6564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6570 ;;      Params:         0       2       0       0       0       0       0
  6571 ;;      Locals:         0       0      63       0       0       0       0
  6572 ;;      Temps:          0       0      22       0       0       0       0
  6573 ;;      Totals:         0       2      85       0       0       0       0
  6574 ;;Total ram usage:       87 bytes
  6575 ;; Hardware stack levels used: 1
  6576 ;; Hardware stack levels required when called: 14
  6577 ;; This function calls:
  6578 ;;		_follow_path
  6579 ;;		_get_clust
  6580 ;; This function is called by:
  6581 ;;		_main
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text17
  6586  003CE8                     __ptext17:
  6587                           	callstack 0
  6588  003CE8                     _pf_open:
  6589                           	callstack 16
  6590  003CE8                     
  6591                           ;pff.c: 827:  const char *path;pff.c: 829: {;pff.c: 830:  FRESULT res;;pff.c: 831:  DIR 
      +                          dj;;pff.c: 832:  BYTE sp[12], dir[32];;pff.c: 833:  FATFS *fs = FatFs;
  6592  003CE8  C0FD  F143         	movff	_FatFs,pf_open@fs
  6593  003CEC  C0FE  F144         	movff	_FatFs+1,pf_open@fs+1
  6594                           
  6595                           ;pff.c: 836:  if (!fs)
  6596  003CF0  0101               	movlb	1	; () banked
  6597  003CF2  5143               	movf	pf_open@fs& (0+255),w,b
  6598  003CF4  1144               	iorwf	(pf_open@fs+1)& (0+255),w,b
  6599  003CF6  A4D8               	btfss	status,2,c
  6600  003CF8  EF80  F01E         	goto	u9351
  6601  003CFC  EF82  F01E         	goto	u9350
  6602  003D00                     u9351:
  6603  003D00  EF85  F01E         	goto	l7417
  6604  003D04                     u9350:
  6605  003D04                     
  6606                           ; BSR set to: 1
  6607                           ;pff.c: 837:         return FR_NOT_ENABLED;
  6608  003D04  0E05               	movlw	5
  6609  003D06  EF2E  F01F         	goto	l334
  6610  003D0A                     l7417:
  6611                           
  6612                           ; BSR set to: 1
  6613                           ;pff.c: 839:  fs->flag = 0;
  6614  003D0A  EE20 F001          	lfsr	2,1
  6615  003D0E  5143               	movf	pf_open@fs& (0+255),w,b
  6616  003D10  26D9               	addwf	fsr2l,f,c
  6617  003D12  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6618  003D14  22DA               	addwfc	fsr2h,f,c
  6619  003D16  0E00               	movlw	0
  6620  003D18  6EDF               	movwf	indf2,c
  6621  003D1A                     
  6622                           ; BSR set to: 1
  6623                           ;pff.c: 840:  dj.fn = sp;
  6624  003D1A  0E16               	movlw	low pf_open@sp
  6625  003D1C  6F47               	movwf	(pf_open@dj+2)& (0+255),b
  6626  003D1E  0E01               	movlw	high pf_open@sp
  6627  003D20  6F48               	movwf	(pf_open@dj+3)& (0+255),b
  6628  003D22                     
  6629                           ; BSR set to: 1
  6630                           ;pff.c: 841:  res = follow_path(&dj, dir, path);
  6631  003D22  0E45               	movlw	low pf_open@dj
  6632  003D24  0100               	movlb	0	; () banked
  6633  003D26  6FD9               	movwf	follow_path@dj& (0+255),b
  6634  003D28  0E01               	movlw	high pf_open@dj
  6635  003D2A  6FDA               	movwf	(follow_path@dj+1)& (0+255),b
  6636  003D2C  0E22               	movlw	low pf_open@dir
  6637  003D2E  6FDB               	movwf	follow_path@dir& (0+255),b
  6638  003D30  0E01               	movlw	high pf_open@dir
  6639  003D32  6FDC               	movwf	(follow_path@dir+1)& (0+255),b
  6640  003D34  C0E1  F0DD         	movff	pf_open@path,follow_path@path
  6641  003D38  C0E2  F0DE         	movff	pf_open@path+1,follow_path@path+1
  6642  003D3C  ECE6  F01F         	call	_follow_path	;wreg free
  6643  003D40  0101               	movlb	1	; () banked
  6644  003D42  6F42               	movwf	pf_open@res& (0+255),b
  6645  003D44                     
  6646                           ; BSR set to: 1
  6647                           ;pff.c: 842:  if (res != FR_OK)
  6648  003D44  5142               	movf	pf_open@res& (0+255),w,b
  6649  003D46  B4D8               	btfsc	status,2,c
  6650  003D48  EFA8  F01E         	goto	u9361
  6651  003D4C  EFAA  F01E         	goto	u9360
  6652  003D50                     u9361:
  6653  003D50  EFAD  F01E         	goto	l7429
  6654  003D54                     u9360:
  6655  003D54                     
  6656                           ; BSR set to: 1
  6657                           ;pff.c: 843:         return res;
  6658  003D54  5142               	movf	pf_open@res& (0+255),w,b
  6659  003D56  EF2E  F01F         	goto	l334
  6660  003D5A                     l7429:
  6661                           
  6662                           ; BSR set to: 1
  6663                           ;pff.c: 844:  if (!dir[0] || (dir[11] & 0x10))
  6664  003D5A  5122               	movf	pf_open@dir& (0+255),w,b
  6665  003D5C  B4D8               	btfsc	status,2,c
  6666  003D5E  EFB3  F01E         	goto	u9371
  6667  003D62  EFB5  F01E         	goto	u9370
  6668  003D66                     u9371:
  6669  003D66  EFBC  F01E         	goto	l7433
  6670  003D6A                     u9370:
  6671  003D6A                     
  6672                           ; BSR set to: 1
  6673  003D6A  A92D               	btfss	(pf_open@dir+11)& (0+255),4,b
  6674  003D6C  EFBA  F01E         	goto	u9381
  6675  003D70  EFBC  F01E         	goto	u9380
  6676  003D74                     u9381:
  6677  003D74  EFBF  F01E         	goto	l7437
  6678  003D78                     u9380:
  6679  003D78                     l7433:
  6680                           
  6681                           ; BSR set to: 1
  6682                           ;pff.c: 845:   return FR_NO_FILE;
  6683  003D78  0E03               	movlw	3
  6684  003D7A  EF2E  F01F         	goto	l334
  6685  003D7E                     l7437:
  6686                           
  6687                           ; BSR set to: 1
  6688                           ;pff.c: 847:  fs->org_clust = get_clust(dir);
  6689  003D7E  0E22               	movlw	low pf_open@dir
  6690  003D80  6E06               	movwf	get_clust@dir^0,c
  6691  003D82  0E01               	movlw	high pf_open@dir
  6692  003D84  6E07               	movwf	(get_clust@dir+1)^0,c
  6693  003D86  ECA4  F027         	call	_get_clust	;wreg free
  6694  003D8A  0101               	movlb	1	; () banked
  6695  003D8C  EE20 F01E          	lfsr	2,30
  6696  003D90  5143               	movf	pf_open@fs& (0+255),w,b
  6697  003D92  26D9               	addwf	fsr2l,f,c
  6698  003D94  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6699  003D96  22DA               	addwfc	fsr2h,f,c
  6700  003D98  C006  FFDE         	movff	?_get_clust,postinc2
  6701  003D9C  C007  FFDE         	movff	?_get_clust+1,postinc2
  6702  003DA0  C008  FFDE         	movff	?_get_clust+2,postinc2
  6703  003DA4  C009  FFDE         	movff	?_get_clust+3,postinc2
  6704  003DA8                     
  6705                           ; BSR set to: 1
  6706                           ;pff.c: 848:  fs->fsize = (DWORD)(((DWORD)*((BYTE*)(dir+28)+3)<<24)|((DWORD)*((BYTE*)(di
      +                          r+28)+2)<<16)|((WORD)*((BYTE*)(dir+28)+1)<<8)|*(BYTE*)(dir+28));
  6707  003DA8  513F               	movf	(pf_open@dir+29)& (0+255),w,b
  6708  003DAA  6F01               	movwf	(??_pf_open+1)& (0+255),b
  6709  003DAC  6B00               	clrf	??_pf_open& (0+255),b
  6710  003DAE  C140  F102         	movff	pf_open@dir+30,??_pf_open+2
  6711  003DB2  6B03               	clrf	(??_pf_open+3)& (0+255),b
  6712  003DB4  6B04               	clrf	(??_pf_open+4)& (0+255),b
  6713  003DB6  6B05               	clrf	(??_pf_open+5)& (0+255),b
  6714  003DB8  C103  F105         	movff	??_pf_open+3,??_pf_open+5
  6715  003DBC  C102  F104         	movff	??_pf_open+2,??_pf_open+4
  6716  003DC0  6B03               	clrf	(??_pf_open+3)& (0+255),b
  6717  003DC2  6B02               	clrf	(??_pf_open+2)& (0+255),b
  6718  003DC4  C141  F106         	movff	pf_open@dir+31,??_pf_open+6
  6719  003DC8  6B07               	clrf	(??_pf_open+7)& (0+255),b
  6720  003DCA  6B08               	clrf	(??_pf_open+8)& (0+255),b
  6721  003DCC  6B09               	clrf	(??_pf_open+9)& (0+255),b
  6722  003DCE  C106  F109         	movff	??_pf_open+6,??_pf_open+9
  6723  003DD2  6B08               	clrf	(??_pf_open+8)& (0+255),b
  6724  003DD4  6B07               	clrf	(??_pf_open+7)& (0+255),b
  6725  003DD6  6B06               	clrf	(??_pf_open+6)& (0+255),b
  6726  003DD8  5102               	movf	(??_pf_open+2)& (0+255),w,b
  6727  003DDA  1106               	iorwf	(??_pf_open+6)& (0+255),w,b
  6728  003DDC  6F0A               	movwf	(??_pf_open+10)& (0+255),b
  6729  003DDE  5103               	movf	(??_pf_open+3)& (0+255),w,b
  6730  003DE0  1107               	iorwf	(??_pf_open+7)& (0+255),w,b
  6731  003DE2  6F0B               	movwf	(??_pf_open+11)& (0+255),b
  6732  003DE4  5104               	movf	(??_pf_open+4)& (0+255),w,b
  6733  003DE6  1108               	iorwf	(??_pf_open+8)& (0+255),w,b
  6734  003DE8  6F0C               	movwf	(??_pf_open+12)& (0+255),b
  6735  003DEA  5105               	movf	(??_pf_open+5)& (0+255),w,b
  6736  003DEC  1109               	iorwf	(??_pf_open+9)& (0+255),w,b
  6737  003DEE  6F0D               	movwf	(??_pf_open+13)& (0+255),b
  6738  003DF0  5100               	movf	??_pf_open& (0+255),w,b
  6739  003DF2  110A               	iorwf	(??_pf_open+10)& (0+255),w,b
  6740  003DF4  6F0E               	movwf	(??_pf_open+14)& (0+255),b
  6741  003DF6  5101               	movf	(??_pf_open+1)& (0+255),w,b
  6742  003DF8  110B               	iorwf	(??_pf_open+11)& (0+255),w,b
  6743  003DFA  6F0F               	movwf	(??_pf_open+15)& (0+255),b
  6744  003DFC  0E00               	movlw	0
  6745  003DFE  110C               	iorwf	(??_pf_open+12)& (0+255),w,b
  6746  003E00  6F10               	movwf	(??_pf_open+16)& (0+255),b
  6747  003E02  0E00               	movlw	0
  6748  003E04  110D               	iorwf	(??_pf_open+13)& (0+255),w,b
  6749  003E06  6F11               	movwf	(??_pf_open+17)& (0+255),b
  6750  003E08  513E               	movf	(pf_open@dir+28)& (0+255),w,b
  6751  003E0A  110E               	iorwf	(??_pf_open+14)& (0+255),w,b
  6752  003E0C  6F12               	movwf	(??_pf_open+18)& (0+255),b
  6753  003E0E  510F               	movf	(??_pf_open+15)& (0+255),w,b
  6754  003E10  6F13               	movwf	(??_pf_open+19)& (0+255),b
  6755  003E12  5110               	movf	(??_pf_open+16)& (0+255),w,b
  6756  003E14  6F14               	movwf	(??_pf_open+20)& (0+255),b
  6757  003E16  5111               	movf	(??_pf_open+17)& (0+255),w,b
  6758  003E18  6F15               	movwf	(??_pf_open+21)& (0+255),b
  6759  003E1A  EE20 F01A          	lfsr	2,26
  6760  003E1E  5143               	movf	pf_open@fs& (0+255),w,b
  6761  003E20  26D9               	addwf	fsr2l,f,c
  6762  003E22  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6763  003E24  22DA               	addwfc	fsr2h,f,c
  6764  003E26  C112  FFDE         	movff	??_pf_open+18,postinc2
  6765  003E2A  C113  FFDE         	movff	??_pf_open+19,postinc2
  6766  003E2E  C114  FFDE         	movff	??_pf_open+20,postinc2
  6767  003E32  C115  FFDE         	movff	??_pf_open+21,postinc2
  6768  003E36                     
  6769                           ; BSR set to: 1
  6770                           ;pff.c: 849:  fs->fptr = 0;
  6771  003E36  EE20 F016          	lfsr	2,22
  6772  003E3A  5143               	movf	pf_open@fs& (0+255),w,b
  6773  003E3C  26D9               	addwf	fsr2l,f,c
  6774  003E3E  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6775  003E40  22DA               	addwfc	fsr2h,f,c
  6776  003E42  6ADE               	clrf	postinc2,c
  6777  003E44  6ADE               	clrf	postinc2,c
  6778  003E46  6ADE               	clrf	postinc2,c
  6779  003E48  6ADD               	clrf	postdec2,c
  6780  003E4A                     
  6781                           ; BSR set to: 1
  6782                           ;pff.c: 850:  fs->flag = 0x01;
  6783  003E4A  EE20 F001          	lfsr	2,1
  6784  003E4E  5143               	movf	pf_open@fs& (0+255),w,b
  6785  003E50  26D9               	addwf	fsr2l,f,c
  6786  003E52  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6787  003E54  22DA               	addwfc	fsr2h,f,c
  6788  003E56  0E01               	movlw	1
  6789  003E58  6EDF               	movwf	indf2,c
  6790  003E5A                     
  6791                           ; BSR set to: 1
  6792                           ;pff.c: 852:  return FR_OK;
  6793  003E5A  0E00               	movlw	0
  6794  003E5C                     l334:
  6795                           
  6796                           ; BSR set to: 1
  6797  003E5C  0012               	return		;funcret
  6798  003E5E                     __end_of_pf_open:
  6799                           	callstack 0
  6800                           
  6801 ;; *************** function _follow_path *****************
  6802 ;; Defined at:
  6803 ;;		line 676 in file "pff.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  dj              2   89[BANK0 ] PTR struct .
  6806 ;;		 -> pf_open@dj(16), main@dir(16), 
  6807 ;;  dir             2   91[BANK0 ] PTR unsigned char 
  6808 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  6809 ;;  path            2   93[BANK0 ] PTR const unsigned char 
  6810 ;;		 -> Line(128), 
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;  res             1   96[BANK0 ] enum E2600
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  1    wreg      enum E2600
  6815 ;; Registers used:
  6816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6822 ;;      Params:         0       6       0       0       0       0       0
  6823 ;;      Locals:         0       1       0       0       0       0       0
  6824 ;;      Temps:          0       1       0       0       0       0       0
  6825 ;;      Totals:         0       8       0       0       0       0       0
  6826 ;;Total ram usage:        8 bytes
  6827 ;; Hardware stack levels used: 1
  6828 ;; Hardware stack levels required when called: 13
  6829 ;; This function calls:
  6830 ;;		_create_name
  6831 ;;		_dir_find
  6832 ;;		_dir_rewind
  6833 ;;		_get_clust
  6834 ;; This function is called by:
  6835 ;;		_pf_open
  6836 ;;		_pf_opendir
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text18
  6841  003FCC                     __ptext18:
  6842                           	callstack 0
  6843  003FCC                     _follow_path:
  6844                           	callstack 16
  6845  003FCC                     
  6846                           ;pff.c: 677:  DIR *dj,;pff.c: 678:  BYTE *dir,;pff.c: 679:  const char *path;pff.c: 681:
      +                           {;pff.c: 682:  FRESULT res;;pff.c: 685:  while (*path == ' ') path++;
  6847  003FCC  EFEB  F01F         	goto	l7125
  6848  003FD0                     l7123:
  6849  003FD0  0100               	movlb	0	; () banked
  6850  003FD2  4BDD               	infsnz	follow_path@path& (0+255),f,b
  6851  003FD4  2BDE               	incf	(follow_path@path+1)& (0+255),f,b
  6852  003FD6                     l7125:
  6853  003FD6  C0DD  FFD9         	movff	follow_path@path,fsr2l
  6854  003FDA  C0DE  FFDA         	movff	follow_path@path+1,fsr2h
  6855  003FDE  0E20               	movlw	32
  6856  003FE0  18DE               	xorwf	postinc2,w,c
  6857  003FE2  B4D8               	btfsc	status,2,c
  6858  003FE4  EFF6  F01F         	goto	u8961
  6859  003FE8  EFF8  F01F         	goto	u8960
  6860  003FEC                     u8961:
  6861  003FEC  EFE8  F01F         	goto	l7123
  6862  003FF0                     u8960:
  6863  003FF0                     
  6864                           ;pff.c: 686:  if (*path == '/') path++;
  6865  003FF0  C0DD  FFD9         	movff	follow_path@path,fsr2l
  6866  003FF4  C0DE  FFDA         	movff	follow_path@path+1,fsr2h
  6867  003FF8  0E2F               	movlw	47
  6868  003FFA  18DE               	xorwf	postinc2,w,c
  6869  003FFC  A4D8               	btfss	status,2,c
  6870  003FFE  EF03  F020         	goto	u8971
  6871  004002  EF05  F020         	goto	u8970
  6872  004006                     u8971:
  6873  004006  EF08  F020         	goto	l7131
  6874  00400A                     u8970:
  6875  00400A  0100               	movlb	0	; () banked
  6876  00400C  4BDD               	infsnz	follow_path@path& (0+255),f,b
  6877  00400E  2BDE               	incf	(follow_path@path+1)& (0+255),f,b
  6878  004010                     l7131:
  6879                           
  6880                           ;pff.c: 687:  dj->sclust = 0;
  6881  004010  0100               	movlb	0	; () banked
  6882  004012  EE20 F004          	lfsr	2,4
  6883  004016  51D9               	movf	follow_path@dj& (0+255),w,b
  6884  004018  26D9               	addwf	fsr2l,f,c
  6885  00401A  51DA               	movf	(follow_path@dj+1)& (0+255),w,b
  6886  00401C  22DA               	addwfc	fsr2h,f,c
  6887  00401E  6ADE               	clrf	postinc2,c
  6888  004020  6ADE               	clrf	postinc2,c
  6889  004022  6ADE               	clrf	postinc2,c
  6890  004024  6ADD               	clrf	postdec2,c
  6891  004026                     
  6892                           ; BSR set to: 0
  6893                           ;pff.c: 689:  if ((BYTE)*path < ' ') {
  6894  004026  C0DD  FFD9         	movff	follow_path@path,fsr2l
  6895  00402A  C0DE  FFDA         	movff	follow_path@path+1,fsr2h
  6896  00402E  0E20               	movlw	32
  6897  004030  60DF               	cpfslt	indf2,c
  6898  004032  EF1D  F020         	goto	u8981
  6899  004036  EF1F  F020         	goto	u8980
  6900  00403A                     u8981:
  6901  00403A  EF2F  F020         	goto	l7139
  6902  00403E                     u8980:
  6903  00403E                     
  6904                           ; BSR set to: 0
  6905                           ;pff.c: 690:   res = dir_rewind(dj);
  6906  00403E  C0D9  F01D         	movff	follow_path@dj,dir_rewind@dj
  6907  004042  C0DA  F01E         	movff	follow_path@dj+1,dir_rewind@dj+1
  6908  004046  EC1E  F023         	call	_dir_rewind	;wreg free
  6909  00404A  0100               	movlb	0	; () banked
  6910  00404C  6FE0               	movwf	follow_path@res& (0+255),b
  6911  00404E                     
  6912                           ; BSR set to: 0
  6913                           ;pff.c: 691:   dir[0] = 0;
  6914  00404E  C0DB  FFD9         	movff	follow_path@dir,fsr2l
  6915  004052  C0DC  FFDA         	movff	follow_path@dir+1,fsr2h
  6916  004056  0E00               	movlw	0
  6917  004058  6EDF               	movwf	indf2,c
  6918                           
  6919                           ;pff.c: 693:  } else {
  6920  00405A  EF99  F020         	goto	l7161
  6921  00405E                     l7139:
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;pff.c: 695:    res = create_name(dj, &path);
  6925  00405E  C0D9  F00E         	movff	follow_path@dj,create_name@dj
  6926  004062  C0DA  F00F         	movff	follow_path@dj+1,create_name@dj+1
  6927  004066  0EDD               	movlw	low follow_path@path
  6928  004068  6E10               	movwf	create_name@path^0,c
  6929  00406A  0E00               	movlw	high follow_path@path
  6930  00406C  6E11               	movwf	(create_name@path+1)^0,c
  6931  00406E  ECCD  F019         	call	_create_name	;wreg free
  6932  004072  0100               	movlb	0	; () banked
  6933  004074  6FE0               	movwf	follow_path@res& (0+255),b
  6934  004076                     
  6935                           ; BSR set to: 0
  6936                           ;pff.c: 696:    if (res != FR_OK) break;
  6937  004076  51E0               	movf	follow_path@res& (0+255),w,b
  6938  004078  B4D8               	btfsc	status,2,c
  6939  00407A  EF41  F020         	goto	u8991
  6940  00407E  EF43  F020         	goto	u8990
  6941  004082                     u8991:
  6942  004082  EF45  F020         	goto	l7145
  6943  004086                     u8990:
  6944  004086  EF99  F020         	goto	l7161
  6945  00408A                     l7145:
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;pff.c: 697:    res = dir_find(dj, dir);
  6949  00408A  C0D9  F0D1         	movff	follow_path@dj,dir_find@dj
  6950  00408E  C0DA  F0D2         	movff	follow_path@dj+1,dir_find@dj+1
  6951  004092  C0DB  F0D3         	movff	follow_path@dir,dir_find@dir
  6952  004096  C0DC  F0D4         	movff	follow_path@dir+1,dir_find@dir+1
  6953  00409A  EC4D  F021         	call	_dir_find	;wreg free
  6954  00409E  0100               	movlb	0	; () banked
  6955  0040A0  6FE0               	movwf	follow_path@res& (0+255),b
  6956  0040A2                     
  6957                           ; BSR set to: 0
  6958                           ;pff.c: 698:    if (res != FR_OK) break;
  6959  0040A2  51E0               	movf	follow_path@res& (0+255),w,b
  6960  0040A4  B4D8               	btfsc	status,2,c
  6961  0040A6  EF57  F020         	goto	u9001
  6962  0040AA  EF59  F020         	goto	u9000
  6963  0040AE                     u9001:
  6964  0040AE  EF5B  F020         	goto	l7151
  6965  0040B2                     u9000:
  6966  0040B2  EF99  F020         	goto	l7161
  6967  0040B6                     l7151:
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;pff.c: 699:    if (dj->fn[11]) break;
  6971  0040B6  EE20 F002          	lfsr	2,2
  6972  0040BA  51D9               	movf	follow_path@dj& (0+255),w,b
  6973  0040BC  26D9               	addwf	fsr2l,f,c
  6974  0040BE  51DA               	movf	(follow_path@dj+1)& (0+255),w,b
  6975  0040C0  22DA               	addwfc	fsr2h,f,c
  6976  0040C2  EE10 F00B          	lfsr	1,11
  6977  0040C6  50DE               	movf	postinc2,w,c
  6978  0040C8  26E1               	addwf	fsr1l,f,c
  6979  0040CA  50DD               	movf	postdec2,w,c
  6980  0040CC  22E2               	addwfc	fsr1h,f,c
  6981  0040CE  50E7               	movf	indf1,w,c
  6982  0040D0  B4D8               	btfsc	status,2,c
  6983  0040D2  EF6D  F020         	goto	u9011
  6984  0040D6  EF6F  F020         	goto	u9010
  6985  0040DA                     u9011:
  6986  0040DA  EF71  F020         	goto	l7155
  6987  0040DE                     u9010:
  6988  0040DE  EF99  F020         	goto	l7161
  6989  0040E2                     l7155:
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;pff.c: 700:    if (!(dir[11] & 0x10)) {
  6993  0040E2  EE20 F00B          	lfsr	2,11
  6994  0040E6  51DB               	movf	follow_path@dir& (0+255),w,b
  6995  0040E8  26D9               	addwf	fsr2l,f,c
  6996  0040EA  51DC               	movf	(follow_path@dir+1)& (0+255),w,b
  6997  0040EC  22DA               	addwfc	fsr2h,f,c
  6998  0040EE  B8DF               	btfsc	indf2,4,c
  6999  0040F0  EF7C  F020         	goto	u9021
  7000  0040F4  EF7E  F020         	goto	u9020
  7001  0040F8                     u9021:
  7002  0040F8  EF82  F020         	goto	l7159
  7003  0040FC                     u9020:
  7004  0040FC                     
  7005                           ; BSR set to: 0
  7006                           ;pff.c: 701:     res = FR_NO_FILE; break;
  7007  0040FC  0E03               	movlw	3
  7008  0040FE  6FE0               	movwf	follow_path@res& (0+255),b
  7009  004100  EF99  F020         	goto	l7161
  7010  004104                     l7159:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;pff.c: 703:    dj->sclust = get_clust(dir);
  7014  004104  C0DB  F006         	movff	follow_path@dir,get_clust@dir
  7015  004108  C0DC  F007         	movff	follow_path@dir+1,get_clust@dir+1
  7016  00410C  ECA4  F027         	call	_get_clust	;wreg free
  7017  004110  0100               	movlb	0	; () banked
  7018  004112  EE20 F004          	lfsr	2,4
  7019  004116  51D9               	movf	follow_path@dj& (0+255),w,b
  7020  004118  26D9               	addwf	fsr2l,f,c
  7021  00411A  51DA               	movf	(follow_path@dj+1)& (0+255),w,b
  7022  00411C  22DA               	addwfc	fsr2h,f,c
  7023  00411E  C006  FFDE         	movff	?_get_clust,postinc2
  7024  004122  C007  FFDE         	movff	?_get_clust+1,postinc2
  7025  004126  C008  FFDE         	movff	?_get_clust+2,postinc2
  7026  00412A  C009  FFDE         	movff	?_get_clust+3,postinc2
  7027                           
  7028                           ;pff.c: 704:   }
  7029  00412E  EF2F  F020         	goto	l7139
  7030  004132                     l7161:
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;pff.c: 707:  return res;
  7034  004132  51E0               	movf	follow_path@res& (0+255),w,b
  7035  004134                     
  7036                           ; BSR set to: 0
  7037  004134  0012               	return		;funcret
  7038  004136                     __end_of_follow_path:
  7039                           	callstack 0
  7040                           
  7041 ;; *************** function _get_clust *****************
  7042 ;; Defined at:
  7043 ;;		line 410 in file "pff.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  dir             2    5[COMRAM] PTR unsigned char 
  7046 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  clst            4   17[COMRAM] unsigned long 
  7049 ;;  fs              2    0        PTR struct .
  7050 ;;		 -> NULL(0), main@fs(42), 
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  4    5[COMRAM] unsigned long 
  7053 ;; Registers used:
  7054 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7060 ;;      Params:         4       0       0       0       0       0       0
  7061 ;;      Locals:         4       0       0       0       0       0       0
  7062 ;;      Temps:          8       0       0       0       0       0       0
  7063 ;;      Totals:        16       0       0       0       0       0       0
  7064 ;;Total ram usage:       16 bytes
  7065 ;; Hardware stack levels used: 1
  7066 ;; Hardware stack levels required when called: 1
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_follow_path
  7071 ;;		_pf_open
  7072 ;;		_pf_opendir
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text19
  7077  004F48                     __ptext19:
  7078                           	callstack 0
  7079  004F48                     _get_clust:
  7080                           	callstack 28
  7081  004F48                     
  7082                           ;pff.c: 419:   clst = (WORD)(((WORD)*((BYTE*)(dir+20)+1)<<8)|(WORD)*(BYTE*)(dir+20));
  7083  004F48  EE20 F015          	lfsr	2,21
  7084  004F4C  5006               	movf	get_clust@dir^0,w,c
  7085  004F4E  26D9               	addwf	fsr2l,f,c
  7086  004F50  5007               	movf	(get_clust@dir+1)^0,w,c
  7087  004F52  22DA               	addwfc	fsr2h,f,c
  7088  004F54  50DF               	movf	indf2,w,c
  7089  004F56  6E0A               	movwf	??_get_clust^0,c
  7090  004F58  500A               	movf	??_get_clust^0,w,c
  7091  004F5A  6E0C               	movwf	(??_get_clust+2)^0,c
  7092  004F5C  6A0B               	clrf	(??_get_clust+1)^0,c
  7093  004F5E  EE20 F014          	lfsr	2,20
  7094  004F62  5006               	movf	get_clust@dir^0,w,c
  7095  004F64  26D9               	addwf	fsr2l,f,c
  7096  004F66  5007               	movf	(get_clust@dir+1)^0,w,c
  7097  004F68  22DA               	addwfc	fsr2h,f,c
  7098  004F6A  50DF               	movf	indf2,w,c
  7099  004F6C  6E0D               	movwf	(??_get_clust+3)^0,c
  7100  004F6E  500D               	movf	(??_get_clust+3)^0,w,c
  7101  004F70  120B               	iorwf	(??_get_clust+1)^0,f,c
  7102  004F72  0E00               	movlw	0
  7103  004F74  120C               	iorwf	(??_get_clust+2)^0,f,c
  7104  004F76  C00B  F012         	movff	??_get_clust+1,get_clust@clst
  7105  004F7A  C00C  F013         	movff	??_get_clust+2,get_clust@clst+1
  7106  004F7E  6A14               	clrf	(get_clust@clst+2)^0,c
  7107  004F80  6A15               	clrf	(get_clust@clst+3)^0,c
  7108  004F82                     
  7109                           ;pff.c: 420:   clst <<= 16;
  7110  004F82  0E10               	movlw	16
  7111  004F84                     u5335:
  7112  004F84  90D8               	bcf	status,0,c
  7113  004F86  3612               	rlcf	get_clust@clst^0,f,c
  7114  004F88  3613               	rlcf	(get_clust@clst+1)^0,f,c
  7115  004F8A  3614               	rlcf	(get_clust@clst+2)^0,f,c
  7116  004F8C  3615               	rlcf	(get_clust@clst+3)^0,f,c
  7117  004F8E  2EE8               	decfsz	wreg,f,c
  7118  004F90  EFC2  F027         	goto	u5335
  7119  004F94                     
  7120                           ;pff.c: 422:  clst |= (WORD)(((WORD)*((BYTE*)(dir+26)+1)<<8)|(WORD)*(BYTE*)(dir+26));
  7121  004F94  EE20 F01B          	lfsr	2,27
  7122  004F98  5006               	movf	get_clust@dir^0,w,c
  7123  004F9A  26D9               	addwf	fsr2l,f,c
  7124  004F9C  5007               	movf	(get_clust@dir+1)^0,w,c
  7125  004F9E  22DA               	addwfc	fsr2h,f,c
  7126  004FA0  50DF               	movf	indf2,w,c
  7127  004FA2  6E0A               	movwf	??_get_clust^0,c
  7128  004FA4  500A               	movf	??_get_clust^0,w,c
  7129  004FA6  6E0C               	movwf	(??_get_clust+2)^0,c
  7130  004FA8  6A0B               	clrf	(??_get_clust+1)^0,c
  7131  004FAA  EE20 F01A          	lfsr	2,26
  7132  004FAE  5006               	movf	get_clust@dir^0,w,c
  7133  004FB0  26D9               	addwf	fsr2l,f,c
  7134  004FB2  5007               	movf	(get_clust@dir+1)^0,w,c
  7135  004FB4  22DA               	addwfc	fsr2h,f,c
  7136  004FB6  50DF               	movf	indf2,w,c
  7137  004FB8  6E0D               	movwf	(??_get_clust+3)^0,c
  7138  004FBA  500D               	movf	(??_get_clust+3)^0,w,c
  7139  004FBC  100B               	iorwf	(??_get_clust+1)^0,w,c
  7140  004FBE  6E0E               	movwf	(??_get_clust+4)^0,c
  7141  004FC0  500C               	movf	(??_get_clust+2)^0,w,c
  7142  004FC2  6E0F               	movwf	(??_get_clust+5)^0,c
  7143  004FC4  6A10               	clrf	(??_get_clust+6)^0,c
  7144  004FC6  6A11               	clrf	(??_get_clust+7)^0,c
  7145  004FC8  500E               	movf	(??_get_clust+4)^0,w,c
  7146  004FCA  1212               	iorwf	get_clust@clst^0,f,c
  7147  004FCC  500F               	movf	(??_get_clust+5)^0,w,c
  7148  004FCE  1213               	iorwf	(get_clust@clst+1)^0,f,c
  7149  004FD0  5010               	movf	(??_get_clust+6)^0,w,c
  7150  004FD2  1214               	iorwf	(get_clust@clst+2)^0,f,c
  7151  004FD4  5011               	movf	(??_get_clust+7)^0,w,c
  7152  004FD6  1215               	iorwf	(get_clust@clst+3)^0,f,c
  7153  004FD8                     
  7154                           ;pff.c: 424:  return clst;
  7155  004FD8  C012  F006         	movff	get_clust@clst,?_get_clust
  7156  004FDC  C013  F007         	movff	get_clust@clst+1,?_get_clust+1
  7157  004FE0  C014  F008         	movff	get_clust@clst+2,?_get_clust+2
  7158  004FE4  C015  F009         	movff	get_clust@clst+3,?_get_clust+3
  7159  004FE8  0012               	return		;funcret
  7160  004FEA                     __end_of_get_clust:
  7161                           	callstack 0
  7162                           
  7163 ;; *************** function _dir_find *****************
  7164 ;; Defined at:
  7165 ;;		line 506 in file "pff.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  dj              2   81[BANK0 ] PTR struct .
  7168 ;;		 -> pf_open@dj(16), main@dir(16), 
  7169 ;;  dir             2   83[BANK0 ] PTR unsigned char 
  7170 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  res             1   88[BANK0 ] enum E2600
  7173 ;;  c               1   87[BANK0 ] unsigned char 
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1    wreg      enum E2600
  7176 ;; Registers used:
  7177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7183 ;;      Params:         0       4       0       0       0       0       0
  7184 ;;      Locals:         0       2       0       0       0       0       0
  7185 ;;      Temps:          0       2       0       0       0       0       0
  7186 ;;      Totals:         0       8       0       0       0       0       0
  7187 ;;Total ram usage:        8 bytes
  7188 ;; Hardware stack levels used: 1
  7189 ;; Hardware stack levels required when called: 12
  7190 ;; This function calls:
  7191 ;;		_dir_next
  7192 ;;		_dir_rewind
  7193 ;;		_disk_readp
  7194 ;;		_mem_cmp
  7195 ;; This function is called by:
  7196 ;;		_follow_path
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           	psect	text20
  7201  00429A                     __ptext20:
  7202                           	callstack 0
  7203  00429A                     _dir_find:
  7204                           	callstack 16
  7205  00429A                     
  7206                           ;pff.c: 507:  DIR *dj,;pff.c: 508:  BYTE *dir;pff.c: 510: {;pff.c: 511:  FRESULT res;;pf
      +                          f.c: 512:  BYTE c;;pff.c: 515:  res = dir_rewind(dj);
  7207  00429A  C0D1  F01D         	movff	dir_find@dj,dir_rewind@dj
  7208  00429E  C0D2  F01E         	movff	dir_find@dj+1,dir_rewind@dj+1
  7209  0042A2  EC1E  F023         	call	_dir_rewind	;wreg free
  7210  0042A6  0100               	movlb	0	; () banked
  7211  0042A8  6FD8               	movwf	dir_find@res& (0+255),b
  7212  0042AA                     
  7213                           ; BSR set to: 0
  7214                           ;pff.c: 516:  if (res != FR_OK) return res;
  7215  0042AA  51D8               	movf	dir_find@res& (0+255),w,b
  7216  0042AC  B4D8               	btfsc	status,2,c
  7217  0042AE  EF5B  F021         	goto	u8761
  7218  0042B2  EF5D  F021         	goto	u8760
  7219  0042B6                     u8761:
  7220  0042B6  EF61  F021         	goto	l7055
  7221  0042BA                     u8760:
  7222  0042BA                     l7051:
  7223  0042BA  0100               	movlb	0	; () banked
  7224  0042BC  51D8               	movf	dir_find@res& (0+255),w,b
  7225  0042BE  EFF6  F021         	goto	l238
  7226  0042C2                     l7055:
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;pff.c: 519:   res = disk_readp(dir, dj->sect, (dj->index % 16) * 32, 32)
  7230  0042C2  C0D3  F090         	movff	dir_find@dir,disk_readp@buff
  7231  0042C6  C0D4  F091         	movff	dir_find@dir+1,disk_readp@buff+1
  7232  0042CA  EE20 F00C          	lfsr	2,12
  7233  0042CE  51D1               	movf	dir_find@dj& (0+255),w,b
  7234  0042D0  26D9               	addwf	fsr2l,f,c
  7235  0042D2  51D2               	movf	(dir_find@dj+1)& (0+255),w,b
  7236  0042D4  22DA               	addwfc	fsr2h,f,c
  7237  0042D6  CFDE F092          	movff	postinc2,disk_readp@sector
  7238  0042DA  CFDE F093          	movff	postinc2,disk_readp@sector+1
  7239  0042DE  CFDE F094          	movff	postinc2,disk_readp@sector+2
  7240  0042E2  CFDE F095          	movff	postinc2,disk_readp@sector+3
  7241  0042E6  C0D1  FFD9         	movff	dir_find@dj,fsr2l
  7242  0042EA  C0D2  FFDA         	movff	dir_find@dj+1,fsr2h
  7243  0042EE  CFDE F0D5          	movff	postinc2,??_dir_find
  7244  0042F2  CFDD F0D6          	movff	postdec2,??_dir_find+1
  7245  0042F6  0E0F               	movlw	15
  7246  0042F8  17D5               	andwf	??_dir_find& (0+255),f,b
  7247  0042FA  0E00               	movlw	0
  7248  0042FC  17D6               	andwf	(??_dir_find+1)& (0+255),f,b
  7249  0042FE  0E05               	movlw	5
  7250  004300                     u8775:
  7251  004300  90D8               	bcf	status,0,c
  7252  004302  37D5               	rlcf	??_dir_find& (0+255),f,b
  7253  004304  37D6               	rlcf	(??_dir_find+1)& (0+255),f,b
  7254  004306  2EE8               	decfsz	wreg,f,c
  7255  004308  EF80  F021         	goto	u8775
  7256  00430C  C0D5  F096         	movff	??_dir_find,disk_readp@offset
  7257  004310  C0D6  F097         	movff	??_dir_find+1,disk_readp@offset+1
  7258  004314  0E00               	movlw	0
  7259  004316  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  7260  004318  0E20               	movlw	32
  7261  00431A  6F98               	movwf	disk_readp@count& (0+255),b
  7262  00431C  EC65  F01B         	call	_disk_readp	;wreg free
  7263  004320  0900               	iorlw	0
  7264  004322  A4D8               	btfss	status,2,c
  7265  004324  EF96  F021         	goto	u8781
  7266  004328  EF99  F021         	goto	u8780
  7267  00432C                     u8781:
  7268  00432C  0E01               	movlw	1
  7269  00432E  EF9A  F021         	goto	u8790
  7270  004332                     u8780:
  7271  004332  0E00               	movlw	0
  7272  004334                     u8790:
  7273  004334  0100               	movlb	0	; () banked
  7274  004336  6FD8               	movwf	dir_find@res& (0+255),b
  7275  004338                     
  7276                           ; BSR set to: 0
  7277                           ;pff.c: 521:   if (res != FR_OK) break;
  7278  004338  51D8               	movf	dir_find@res& (0+255),w,b
  7279  00433A  B4D8               	btfsc	status,2,c
  7280  00433C  EFA2  F021         	goto	u8801
  7281  004340  EFA4  F021         	goto	u8800
  7282  004344                     u8801:
  7283  004344  EFA6  F021         	goto	l7061
  7284  004348                     u8800:
  7285  004348  EF5D  F021         	goto	l7051
  7286  00434C                     l7061:
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;pff.c: 522:   c = dir[0];
  7290  00434C  C0D3  FFD9         	movff	dir_find@dir,fsr2l
  7291  004350  C0D4  FFDA         	movff	dir_find@dir+1,fsr2h
  7292  004354  50DF               	movf	indf2,w,c
  7293  004356  6FD7               	movwf	dir_find@c& (0+255),b
  7294  004358                     
  7295                           ; BSR set to: 0
  7296                           ;pff.c: 523:   if (c == 0) { res = FR_NO_FILE; break; }
  7297  004358  51D7               	movf	dir_find@c& (0+255),w,b
  7298  00435A  A4D8               	btfss	status,2,c
  7299  00435C  EFB2  F021         	goto	u8811
  7300  004360  EFB4  F021         	goto	u8810
  7301  004364                     u8811:
  7302  004364  EFB8  F021         	goto	l7067
  7303  004368                     u8810:
  7304  004368                     
  7305                           ; BSR set to: 0
  7306  004368  0E03               	movlw	3
  7307  00436A  6FD8               	movwf	dir_find@res& (0+255),b
  7308  00436C  EF5D  F021         	goto	l7051
  7309  004370                     l7067:
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;pff.c: 524:   if (!(dir[11] & 0x08) && !mem_cmp(dir, dj->fn, 11))
  7313  004370  EE20 F00B          	lfsr	2,11
  7314  004374  51D3               	movf	dir_find@dir& (0+255),w,b
  7315  004376  26D9               	addwf	fsr2l,f,c
  7316  004378  51D4               	movf	(dir_find@dir+1)& (0+255),w,b
  7317  00437A  22DA               	addwfc	fsr2h,f,c
  7318  00437C  B6DF               	btfsc	indf2,3,c
  7319  00437E  EFC3  F021         	goto	u8821
  7320  004382  EFC5  F021         	goto	u8820
  7321  004386                     u8821:
  7322  004386  EFE4  F021         	goto	l7073
  7323  00438A                     u8820:
  7324  00438A                     
  7325                           ; BSR set to: 0
  7326  00438A  C0D3  F006         	movff	dir_find@dir,mem_cmp@dst
  7327  00438E  C0D4  F007         	movff	dir_find@dir+1,mem_cmp@dst+1
  7328  004392  EE20 F002          	lfsr	2,2
  7329  004396  51D1               	movf	dir_find@dj& (0+255),w,b
  7330  004398  26D9               	addwf	fsr2l,f,c
  7331  00439A  51D2               	movf	(dir_find@dj+1)& (0+255),w,b
  7332  00439C  22DA               	addwfc	fsr2h,f,c
  7333  00439E  CFDE F008          	movff	postinc2,mem_cmp@src
  7334  0043A2  CFDD F009          	movff	postdec2,mem_cmp@src+1
  7335  0043A6  0E00               	movlw	0
  7336  0043A8  6E0B               	movwf	(mem_cmp@cnt+1)^0,c
  7337  0043AA  0E0B               	movlw	11
  7338  0043AC  6E0A               	movwf	mem_cmp@cnt^0,c
  7339  0043AE  ECC3  F028         	call	_mem_cmp	;wreg free
  7340  0043B2  5006               	movf	?_mem_cmp^0,w,c
  7341  0043B4  1007               	iorwf	(?_mem_cmp+1)^0,w,c
  7342  0043B6  A4D8               	btfss	status,2,c
  7343  0043B8  EFE0  F021         	goto	u8831
  7344  0043BC  EFE2  F021         	goto	u8830
  7345  0043C0                     u8831:
  7346  0043C0  EFE4  F021         	goto	l7073
  7347  0043C4                     u8830:
  7348  0043C4  EF5D  F021         	goto	l7051
  7349  0043C8                     l7073:
  7350                           
  7351                           ;pff.c: 526:   res = dir_next(dj);
  7352  0043C8  C0D1  F0C0         	movff	dir_find@dj,dir_next@dj
  7353  0043CC  C0D2  F0C1         	movff	dir_find@dj+1,dir_next@dj+1
  7354  0043D0  ECDD  F015         	call	_dir_next	;wreg free
  7355  0043D4  0100               	movlb	0	; () banked
  7356  0043D6  6FD8               	movwf	dir_find@res& (0+255),b
  7357  0043D8                     
  7358                           ; BSR set to: 0
  7359                           ;pff.c: 527:  } while (res == FR_OK);
  7360  0043D8  51D8               	movf	dir_find@res& (0+255),w,b
  7361  0043DA  B4D8               	btfsc	status,2,c
  7362  0043DC  EFF2  F021         	goto	u8841
  7363  0043E0  EFF4  F021         	goto	u8840
  7364  0043E4                     u8841:
  7365  0043E4  EF61  F021         	goto	l7055
  7366  0043E8                     u8840:
  7367  0043E8  EF5D  F021         	goto	l7051
  7368  0043EC                     l238:
  7369                           
  7370                           ; BSR set to: 0
  7371  0043EC  0012               	return		;funcret
  7372  0043EE                     __end_of_dir_find:
  7373                           	callstack 0
  7374                           
  7375 ;; *************** function _mem_cmp *****************
  7376 ;; Defined at:
  7377 ;;		line 332 in file "pff.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  dst             2    5[COMRAM] PTR const void 
  7380 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  7381 ;;  src             2    7[COMRAM] PTR const void 
  7382 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  7383 ;;  cnt             2    9[COMRAM] int 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  r               2   17[COMRAM] int 
  7386 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7387 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  7388 ;;  d               2   13[COMRAM] PTR const unsigned char 
  7389 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  2    5[COMRAM] int 
  7392 ;; Registers used:
  7393 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7399 ;;      Params:         6       0       0       0       0       0       0
  7400 ;;      Locals:         6       0       0       0       0       0       0
  7401 ;;      Temps:          2       0       0       0       0       0       0
  7402 ;;      Totals:        14       0       0       0       0       0       0
  7403 ;;Total ram usage:       14 bytes
  7404 ;; Hardware stack levels used: 1
  7405 ;; Hardware stack levels required when called: 1
  7406 ;; This function calls:
  7407 ;;		Nothing
  7408 ;; This function is called by:
  7409 ;;		_dir_find
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413                           	psect	text21
  7414  005186                     __ptext21:
  7415                           	callstack 0
  7416  005186                     _mem_cmp:
  7417                           	callstack 26
  7418  005186                     
  7419                           ;pff.c: 333:  const char *d = (const char *)dst, *s = (const char *)src;
  7420  005186  C006  F00E         	movff	mem_cmp@dst,mem_cmp@d
  7421  00518A  C007  F00F         	movff	mem_cmp@dst+1,mem_cmp@d+1
  7422  00518E  C008  F010         	movff	mem_cmp@src,mem_cmp@s
  7423  005192  C009  F011         	movff	mem_cmp@src+1,mem_cmp@s+1
  7424  005196                     
  7425                           ;pff.c: 334:  int r = 0;
  7426  005196  0E00               	movlw	0
  7427  005198  6E13               	movwf	(mem_cmp@r+1)^0,c
  7428  00519A  0E00               	movlw	0
  7429  00519C  6E12               	movwf	mem_cmp@r^0,c
  7430  00519E                     l4763:
  7431  00519E  060A               	decf	mem_cmp@cnt^0,f,c
  7432  0051A0  A0D8               	btfss	status,0,c
  7433  0051A2  060B               	decf	(mem_cmp@cnt+1)^0,f,c
  7434  0051A4  280A               	incf	mem_cmp@cnt^0,w,c
  7435  0051A6  E108               	bnz	u5190
  7436  0051A8  280B               	incf	(mem_cmp@cnt+1)^0,w,c
  7437  0051AA  B4D8               	btfsc	status,2,c
  7438  0051AC  EFDA  F028         	goto	u5191
  7439  0051B0  EFDC  F028         	goto	u5190
  7440  0051B4                     u5191:
  7441  0051B4  EFFB  F028         	goto	l187
  7442  0051B8                     u5190:
  7443  0051B8  C00E  FFD9         	movff	mem_cmp@d,fsr2l
  7444  0051BC  C00F  FFDA         	movff	mem_cmp@d+1,fsr2h
  7445  0051C0  4A0E               	infsnz	mem_cmp@d^0,f,c
  7446  0051C2  2A0F               	incf	(mem_cmp@d+1)^0,f,c
  7447  0051C4  50DF               	movf	indf2,w,c
  7448  0051C6  6E0C               	movwf	??_mem_cmp^0,c
  7449  0051C8  C010  FFD9         	movff	mem_cmp@s,fsr2l
  7450  0051CC  C011  FFDA         	movff	mem_cmp@s+1,fsr2h
  7451  0051D0  4A10               	infsnz	mem_cmp@s^0,f,c
  7452  0051D2  2A11               	incf	(mem_cmp@s+1)^0,f,c
  7453  0051D4  50DF               	movf	indf2,w,c
  7454  0051D6  6E0D               	movwf	(??_mem_cmp+1)^0,c
  7455  0051D8  500D               	movf	(??_mem_cmp+1)^0,w,c
  7456  0051DA  5C0C               	subwf	??_mem_cmp^0,w,c
  7457  0051DC  6E12               	movwf	mem_cmp@r^0,c
  7458  0051DE  6A13               	clrf	(mem_cmp@r+1)^0,c
  7459  0051E0  A0D8               	btfss	status,0,c
  7460  0051E2  0613               	decf	(mem_cmp@r+1)^0,f,c
  7461  0051E4  5012               	movf	mem_cmp@r^0,w,c
  7462  0051E6  1013               	iorwf	(mem_cmp@r+1)^0,w,c
  7463  0051E8  B4D8               	btfsc	status,2,c
  7464  0051EA  EFF9  F028         	goto	u5201
  7465  0051EE  EFFB  F028         	goto	u5200
  7466  0051F2                     u5201:
  7467  0051F2  EFCF  F028         	goto	l4763
  7468  0051F6                     u5200:
  7469  0051F6                     l187:
  7470                           
  7471                           ;pff.c: 336:  return r;
  7472  0051F6  C012  F006         	movff	mem_cmp@r,?_mem_cmp
  7473  0051FA  C013  F007         	movff	mem_cmp@r+1,?_mem_cmp+1
  7474  0051FE  0012               	return		;funcret
  7475  005200                     __end_of_mem_cmp:
  7476                           	callstack 0
  7477                           
  7478 ;; *************** function _dir_rewind *****************
  7479 ;; Defined at:
  7480 ;;		line 433 in file "pff.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;  dj              2   28[COMRAM] PTR struct .
  7483 ;;		 -> pf_open@dj(16), main@dir(16), 
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;  clst            4   40[COMRAM] unsigned long 
  7486 ;;  fs              2   38[COMRAM] PTR struct .
  7487 ;;		 -> NULL(0), main@fs(42), 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  1    wreg      enum E2600
  7490 ;; Registers used:
  7491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7497 ;;      Params:         2       0       0       0       0       0       0
  7498 ;;      Locals:        10       0       0       0       0       0       0
  7499 ;;      Temps:          4       0       0       0       0       0       0
  7500 ;;      Totals:        16       0       0       0       0       0       0
  7501 ;;Total ram usage:       16 bytes
  7502 ;; Hardware stack levels used: 1
  7503 ;; Hardware stack levels required when called: 3
  7504 ;; This function calls:
  7505 ;;		_clust2sect
  7506 ;; This function is called by:
  7507 ;;		_dir_find
  7508 ;;		_follow_path
  7509 ;;		_pf_opendir
  7510 ;;		_pf_readdir
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text22
  7515  00463C                     __ptext22:
  7516                           	callstack 0
  7517  00463C                     _dir_rewind:
  7518                           	callstack 26
  7519  00463C                     
  7520                           ;pff.c: 434:  DIR *dj;pff.c: 436: {;pff.c: 437:  DWORD clst;;pff.c: 438:  FATFS *fs = Fa
      +                          tFs;
  7521  00463C  C0FD  F027         	movff	_FatFs,dir_rewind@fs
  7522  004640  C0FE  F028         	movff	_FatFs+1,dir_rewind@fs+1
  7523  004644                     
  7524                           ;pff.c: 441:  dj->index = 0;
  7525  004644  C01D  FFD9         	movff	dir_rewind@dj,fsr2l
  7526  004648  C01E  FFDA         	movff	dir_rewind@dj+1,fsr2h
  7527  00464C  0E00               	movlw	0
  7528  00464E  6EDE               	movwf	postinc2,c
  7529  004650  0E00               	movlw	0
  7530  004652  6EDD               	movwf	postdec2,c
  7531  004654                     
  7532                           ;pff.c: 442:  clst = dj->sclust;
  7533  004654  EE20 F004          	lfsr	2,4
  7534  004658  501D               	movf	dir_rewind@dj^0,w,c
  7535  00465A  26D9               	addwf	fsr2l,f,c
  7536  00465C  501E               	movf	(dir_rewind@dj+1)^0,w,c
  7537  00465E  22DA               	addwfc	fsr2h,f,c
  7538  004660  CFDE F029          	movff	postinc2,dir_rewind@clst
  7539  004664  CFDE F02A          	movff	postinc2,dir_rewind@clst+1
  7540  004668  CFDE F02B          	movff	postinc2,dir_rewind@clst+2
  7541  00466C  CFDE F02C          	movff	postinc2,dir_rewind@clst+3
  7542  004670                     
  7543                           ;pff.c: 443:  if (clst == 1 || clst >= fs->n_fatent)
  7544  004670  0429               	decf	dir_rewind@clst^0,w,c
  7545  004672  102A               	iorwf	(dir_rewind@clst+1)^0,w,c
  7546  004674  102B               	iorwf	(dir_rewind@clst+2)^0,w,c
  7547  004676  102C               	iorwf	(dir_rewind@clst+3)^0,w,c
  7548  004678  B4D8               	btfsc	status,2,c
  7549  00467A  EF41  F023         	goto	u5211
  7550  00467E  EF43  F023         	goto	u5210
  7551  004682                     u5211:
  7552  004682  EF58  F023         	goto	l4777
  7553  004686                     u5210:
  7554  004686  EE20 F006          	lfsr	2,6
  7555  00468A  5027               	movf	dir_rewind@fs^0,w,c
  7556  00468C  26D9               	addwf	fsr2l,f,c
  7557  00468E  5028               	movf	(dir_rewind@fs+1)^0,w,c
  7558  004690  22DA               	addwfc	fsr2h,f,c
  7559  004692  50DE               	movf	postinc2,w,c
  7560  004694  5C29               	subwf	dir_rewind@clst^0,w,c
  7561  004696  50DE               	movf	postinc2,w,c
  7562  004698  582A               	subwfb	(dir_rewind@clst+1)^0,w,c
  7563  00469A  50DE               	movf	postinc2,w,c
  7564  00469C  582B               	subwfb	(dir_rewind@clst+2)^0,w,c
  7565  00469E  50DE               	movf	postinc2,w,c
  7566  0046A0  582C               	subwfb	(dir_rewind@clst+3)^0,w,c
  7567  0046A2  A0D8               	btfss	status,0,c
  7568  0046A4  EF56  F023         	goto	u5221
  7569  0046A8  EF58  F023         	goto	u5220
  7570  0046AC                     u5221:
  7571  0046AC  EF5B  F023         	goto	l4781
  7572  0046B0                     u5220:
  7573  0046B0                     l4777:
  7574                           
  7575                           ;pff.c: 444:   return FR_DISK_ERR;
  7576  0046B0  0E01               	movlw	1
  7577  0046B2  EFA3  F023         	goto	l214
  7578  0046B6                     l4781:
  7579  0046B6  5029               	movf	dir_rewind@clst^0,w,c
  7580  0046B8  102A               	iorwf	(dir_rewind@clst+1)^0,w,c
  7581  0046BA  102B               	iorwf	(dir_rewind@clst+2)^0,w,c
  7582  0046BC  102C               	iorwf	(dir_rewind@clst+3)^0,w,c
  7583  0046BE  A4D8               	btfss	status,2,c
  7584  0046C0  EF64  F023         	goto	u5231
  7585  0046C4  EF66  F023         	goto	u5230
  7586  0046C8                     u5231:
  7587  0046C8  EF74  F023         	goto	l215
  7588  0046CC                     u5230:
  7589  0046CC                     
  7590                           ;pff.c: 446:   clst = (DWORD)fs->dirbase;
  7591  0046CC  EE20 F00E          	lfsr	2,14
  7592  0046D0  5027               	movf	dir_rewind@fs^0,w,c
  7593  0046D2  26D9               	addwf	fsr2l,f,c
  7594  0046D4  5028               	movf	(dir_rewind@fs+1)^0,w,c
  7595  0046D6  22DA               	addwfc	fsr2h,f,c
  7596  0046D8  CFDE F029          	movff	postinc2,dir_rewind@clst
  7597  0046DC  CFDE F02A          	movff	postinc2,dir_rewind@clst+1
  7598  0046E0  CFDE F02B          	movff	postinc2,dir_rewind@clst+2
  7599  0046E4  CFDE F02C          	movff	postinc2,dir_rewind@clst+3
  7600  0046E8                     l215:
  7601                           
  7602                           ;pff.c: 447:  dj->clust = clst;
  7603  0046E8  EE20 F008          	lfsr	2,8
  7604  0046EC  501D               	movf	dir_rewind@dj^0,w,c
  7605  0046EE  26D9               	addwf	fsr2l,f,c
  7606  0046F0  501E               	movf	(dir_rewind@dj+1)^0,w,c
  7607  0046F2  22DA               	addwfc	fsr2h,f,c
  7608  0046F4  C029  FFDE         	movff	dir_rewind@clst,postinc2
  7609  0046F8  C02A  FFDE         	movff	dir_rewind@clst+1,postinc2
  7610  0046FC  C02B  FFDE         	movff	dir_rewind@clst+2,postinc2
  7611  004700  C02C  FFDE         	movff	dir_rewind@clst+3,postinc2
  7612  004704  C029  F012         	movff	dir_rewind@clst,clust2sect@clst
  7613  004708  C02A  F013         	movff	dir_rewind@clst+1,clust2sect@clst+1
  7614  00470C  C02B  F014         	movff	dir_rewind@clst+2,clust2sect@clst+2
  7615  004710  C02C  F015         	movff	dir_rewind@clst+3,clust2sect@clst+3
  7616  004714  ECD5  F025         	call	_clust2sect	;wreg free
  7617  004718  C012  F023         	movff	?_clust2sect,_dir_rewind$703
  7618  00471C  C013  F024         	movff	?_clust2sect+1,_dir_rewind$703+1
  7619  004720  C014  F025         	movff	?_clust2sect+2,_dir_rewind$703+2
  7620  004724  C015  F026         	movff	?_clust2sect+3,_dir_rewind$703+3
  7621  004728  EE20 F00C          	lfsr	2,12
  7622  00472C  501D               	movf	dir_rewind@dj^0,w,c
  7623  00472E  26D9               	addwf	fsr2l,f,c
  7624  004730  501E               	movf	(dir_rewind@dj+1)^0,w,c
  7625  004732  22DA               	addwfc	fsr2h,f,c
  7626  004734  C023  FFDE         	movff	_dir_rewind$703,postinc2
  7627  004738  C024  FFDE         	movff	_dir_rewind$703+1,postinc2
  7628  00473C  C025  FFDE         	movff	_dir_rewind$703+2,postinc2
  7629  004740  C026  FFDE         	movff	_dir_rewind$703+3,postinc2
  7630  004744                     
  7631                           ;pff.c: 450:  return FR_OK;
  7632  004744  0E00               	movlw	0
  7633  004746                     l214:
  7634  004746  0012               	return		;funcret
  7635  004748                     __end_of_dir_rewind:
  7636                           	callstack 0
  7637                           
  7638 ;; *************** function _dir_next *****************
  7639 ;; Defined at:
  7640 ;;		line 461 in file "pff.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  dj              2   64[BANK0 ] PTR struct .
  7643 ;;		 -> pf_open@dj(16), main@dir(16), 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  clst            4   75[BANK0 ] unsigned long 
  7646 ;;  i               2   79[BANK0 ] unsigned short 
  7647 ;;  fs              2   73[BANK0 ] PTR struct .
  7648 ;;		 -> NULL(0), main@fs(42), 
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  1    wreg      enum E2600
  7651 ;; Registers used:
  7652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7658 ;;      Params:         0       2       0       0       0       0       0
  7659 ;;      Locals:         0       8       0       0       0       0       0
  7660 ;;      Temps:          0       7       0       0       0       0       0
  7661 ;;      Totals:         0      17       0       0       0       0       0
  7662 ;;Total ram usage:       17 bytes
  7663 ;; Hardware stack levels used: 1
  7664 ;; Hardware stack levels required when called: 11
  7665 ;; This function calls:
  7666 ;;		_clust2sect
  7667 ;;		_get_fat
  7668 ;; This function is called by:
  7669 ;;		_dir_find
  7670 ;;		_dir_read
  7671 ;;		_pf_readdir
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           	psect	text23
  7676  002BBA                     __ptext23:
  7677                           	callstack 0
  7678  002BBA                     _dir_next:
  7679                           	callstack 17
  7680  002BBA                     
  7681                           ;pff.c: 462:  DIR *dj;pff.c: 464: {;pff.c: 465:  DWORD clst;;pff.c: 466:  WORD i;;pff.c:
      +                           467:  FATFS *fs = FatFs;
  7682  002BBA  C0FD  F0C9         	movff	_FatFs,dir_next@fs
  7683  002BBE  C0FE  F0CA         	movff	_FatFs+1,dir_next@fs+1
  7684  002BC2                     
  7685                           ;pff.c: 470:  i = dj->index + 1;
  7686  002BC2  C0C0  FFD9         	movff	dir_next@dj,fsr2l
  7687  002BC6  C0C1  FFDA         	movff	dir_next@dj+1,fsr2h
  7688  002BCA  CFDE F0C2          	movff	postinc2,??_dir_next
  7689  002BCE  CFDD F0C3          	movff	postdec2,??_dir_next+1
  7690  002BD2  0E01               	movlw	1
  7691  002BD4  0100               	movlb	0	; () banked
  7692  002BD6  25C2               	addwf	??_dir_next& (0+255),w,b
  7693  002BD8  6FCF               	movwf	dir_next@i& (0+255),b
  7694  002BDA  0E00               	movlw	0
  7695  002BDC  21C3               	addwfc	(??_dir_next+1)& (0+255),w,b
  7696  002BDE  6FD0               	movwf	(dir_next@i+1)& (0+255),b
  7697  002BE0                     
  7698                           ; BSR set to: 0
  7699                           ;pff.c: 471:  if (!i || !dj->sect)
  7700  002BE0  51CF               	movf	dir_next@i& (0+255),w,b
  7701  002BE2  11D0               	iorwf	(dir_next@i+1)& (0+255),w,b
  7702  002BE4  B4D8               	btfsc	status,2,c
  7703  002BE6  EFF7  F015         	goto	u8671
  7704  002BEA  EFF9  F015         	goto	u8670
  7705  002BEE                     u8671:
  7706  002BEE  EF0A  F016         	goto	l7007
  7707  002BF2                     u8670:
  7708  002BF2                     
  7709                           ; BSR set to: 0
  7710  002BF2  EE20 F00C          	lfsr	2,12
  7711  002BF6  51C0               	movf	dir_next@dj& (0+255),w,b
  7712  002BF8  26D9               	addwf	fsr2l,f,c
  7713  002BFA  51C1               	movf	(dir_next@dj+1)& (0+255),w,b
  7714  002BFC  22DA               	addwfc	fsr2h,f,c
  7715  002BFE  50DE               	movf	postinc2,w,c
  7716  002C00  10DE               	iorwf	postinc2,w,c
  7717  002C02  10DE               	iorwf	postinc2,w,c
  7718  002C04  10DE               	iorwf	postinc2,w,c
  7719  002C06  A4D8               	btfss	status,2,c
  7720  002C08  EF08  F016         	goto	u8681
  7721  002C0C  EF0A  F016         	goto	u8680
  7722  002C10                     u8681:
  7723  002C10  EF0D  F016         	goto	l7011
  7724  002C14                     u8680:
  7725  002C14                     l7007:
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;pff.c: 472:   return FR_NO_FILE;
  7729  002C14  0E03               	movlw	3
  7730  002C16  EFE5  F016         	goto	l227
  7731  002C1A                     l7011:
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;pff.c: 474:  if (!(i % 16)) {
  7735  002C1A  0E0F               	movlw	15
  7736  002C1C  15CF               	andwf	dir_next@i& (0+255),w,b
  7737  002C1E  6FC2               	movwf	??_dir_next& (0+255),b
  7738  002C20  0E00               	movlw	0
  7739  002C22  15D0               	andwf	(dir_next@i+1)& (0+255),w,b
  7740  002C24  6FC3               	movwf	(??_dir_next+1)& (0+255),b
  7741  002C26  51C2               	movf	??_dir_next& (0+255),w,b
  7742  002C28  11C3               	iorwf	(??_dir_next+1)& (0+255),w,b
  7743  002C2A  A4D8               	btfss	status,2,c
  7744  002C2C  EF1A  F016         	goto	u8691
  7745  002C30  EF1C  F016         	goto	u8690
  7746  002C34                     u8691:
  7747  002C34  EFDC  F016         	goto	l7041
  7748  002C38                     u8690:
  7749  002C38                     
  7750                           ; BSR set to: 0
  7751                           ;pff.c: 475:   dj->sect++;
  7752  002C38  EE20 F00C          	lfsr	2,12
  7753  002C3C  51C0               	movf	dir_next@dj& (0+255),w,b
  7754  002C3E  26D9               	addwf	fsr2l,f,c
  7755  002C40  51C1               	movf	(dir_next@dj+1)& (0+255),w,b
  7756  002C42  22DA               	addwfc	fsr2h,f,c
  7757  002C44  2ADE               	incf	postinc2,f,c
  7758  002C46  0E00               	movlw	0
  7759  002C48  22DE               	addwfc	postinc2,f,c
  7760  002C4A  22DE               	addwfc	postinc2,f,c
  7761  002C4C  22DE               	addwfc	postinc2,f,c
  7762                           
  7763                           ;pff.c: 477:   if (dj->clust == 0) {
  7764  002C4E  EE20 F008          	lfsr	2,8
  7765  002C52  51C0               	movf	dir_next@dj& (0+255),w,b
  7766  002C54  26D9               	addwf	fsr2l,f,c
  7767  002C56  51C1               	movf	(dir_next@dj+1)& (0+255),w,b
  7768  002C58  22DA               	addwfc	fsr2h,f,c
  7769  002C5A  50DE               	movf	postinc2,w,c
  7770  002C5C  10DE               	iorwf	postinc2,w,c
  7771  002C5E  10DE               	iorwf	postinc2,w,c
  7772  002C60  10DE               	iorwf	postinc2,w,c
  7773  002C62  A4D8               	btfss	status,2,c
  7774  002C64  EF36  F016         	goto	u8701
  7775  002C68  EF38  F016         	goto	u8700
  7776  002C6C                     u8701:
  7777  002C6C  EF4B  F016         	goto	l7021
  7778  002C70                     u8700:
  7779  002C70                     
  7780                           ; BSR set to: 0
  7781                           ;pff.c: 478:    if (i >= fs->n_rootdir)
  7782  002C70  EE20 F004          	lfsr	2,4
  7783  002C74  51C9               	movf	dir_next@fs& (0+255),w,b
  7784  002C76  26D9               	addwf	fsr2l,f,c
  7785  002C78  51CA               	movf	(dir_next@fs+1)& (0+255),w,b
  7786  002C7A  22DA               	addwfc	fsr2h,f,c
  7787  002C7C  50DE               	movf	postinc2,w,c
  7788  002C7E  5DCF               	subwf	dir_next@i& (0+255),w,b
  7789  002C80  50DE               	movf	postinc2,w,c
  7790  002C82  59D0               	subwfb	(dir_next@i+1)& (0+255),w,b
  7791  002C84  A0D8               	btfss	status,0,c
  7792  002C86  EF47  F016         	goto	u8711
  7793  002C8A  EF49  F016         	goto	u8710
  7794  002C8E                     u8711:
  7795  002C8E  EFDC  F016         	goto	l7041
  7796  002C92                     u8710:
  7797  002C92  EF0A  F016         	goto	l7007
  7798  002C96                     l7021:
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;pff.c: 482:    if (((i / 16) & (fs->csize - 1)) == 0) {
  7802  002C96  C0CF  F0C2         	movff	dir_next@i,??_dir_next
  7803  002C9A  C0D0  F0C3         	movff	dir_next@i+1,??_dir_next+1
  7804  002C9E  0E04               	movlw	4
  7805  002CA0  6FC4               	movwf	(??_dir_next+2)& (0+255),b
  7806  002CA2                     u8725:
  7807  002CA2  90D8               	bcf	status,0,c
  7808  002CA4  33C3               	rrcf	(??_dir_next+1)& (0+255),f,b
  7809  002CA6  33C2               	rrcf	??_dir_next& (0+255),f,b
  7810  002CA8  2FC4               	decfsz	(??_dir_next+2)& (0+255),f,b
  7811  002CAA  EF51  F016         	goto	u8725
  7812  002CAE  0EFF               	movlw	255
  7813  002CB0  6FC5               	movwf	(??_dir_next+3)& (0+255),b
  7814  002CB2  0EFF               	movlw	255
  7815  002CB4  6FC6               	movwf	(??_dir_next+4)& (0+255),b
  7816  002CB6  EE20 F002          	lfsr	2,2
  7817  002CBA  51C9               	movf	dir_next@fs& (0+255),w,b
  7818  002CBC  26D9               	addwf	fsr2l,f,c
  7819  002CBE  51CA               	movf	(dir_next@fs+1)& (0+255),w,b
  7820  002CC0  22DA               	addwfc	fsr2h,f,c
  7821  002CC2  50DF               	movf	indf2,w,c
  7822  002CC4  6FC7               	movwf	(??_dir_next+5)& (0+255),b
  7823  002CC6  6BC8               	clrf	(??_dir_next+6)& (0+255),b
  7824  002CC8  51C5               	movf	(??_dir_next+3)& (0+255),w,b
  7825  002CCA  27C7               	addwf	(??_dir_next+5)& (0+255),f,b
  7826  002CCC  51C6               	movf	(??_dir_next+4)& (0+255),w,b
  7827  002CCE  23C8               	addwfc	(??_dir_next+6)& (0+255),f,b
  7828  002CD0  51C2               	movf	??_dir_next& (0+255),w,b
  7829  002CD2  17C7               	andwf	(??_dir_next+5)& (0+255),f,b
  7830  002CD4  51C3               	movf	(??_dir_next+1)& (0+255),w,b
  7831  002CD6  17C8               	andwf	(??_dir_next+6)& (0+255),f,b
  7832  002CD8  51C7               	movf	(??_dir_next+5)& (0+255),w,b
  7833  002CDA  11C8               	iorwf	(??_dir_next+6)& (0+255),w,b
  7834  002CDC  A4D8               	btfss	status,2,c
  7835  002CDE  EF73  F016         	goto	u8731
  7836  002CE2  EF75  F016         	goto	u8730
  7837  002CE6                     u8731:
  7838  002CE6  EFDC  F016         	goto	l7041
  7839  002CEA                     u8730:
  7840  002CEA                     
  7841                           ; BSR set to: 0
  7842                           ;pff.c: 483:     clst = get_fat(dj->clust);
  7843  002CEA  EE20 F008          	lfsr	2,8
  7844  002CEE  51C0               	movf	dir_next@dj& (0+255),w,b
  7845  002CF0  26D9               	addwf	fsr2l,f,c
  7846  002CF2  51C1               	movf	(dir_next@dj+1)& (0+255),w,b
  7847  002CF4  22DA               	addwfc	fsr2h,f,c
  7848  002CF6  CFDE F0A0          	movff	postinc2,get_fat@clst
  7849  002CFA  CFDE F0A1          	movff	postinc2,get_fat@clst+1
  7850  002CFE  CFDE F0A2          	movff	postinc2,get_fat@clst+2
  7851  002D02  CFDE F0A3          	movff	postinc2,get_fat@clst+3
  7852  002D06  ECEC  F018         	call	_get_fat	;wreg free
  7853  002D0A  C0A0  F0CB         	movff	?_get_fat,dir_next@clst
  7854  002D0E  C0A1  F0CC         	movff	?_get_fat+1,dir_next@clst+1
  7855  002D12  C0A2  F0CD         	movff	?_get_fat+2,dir_next@clst+2
  7856  002D16  C0A3  F0CE         	movff	?_get_fat+3,dir_next@clst+3
  7857  002D1A                     
  7858                           ;pff.c: 484:     if (clst <= 1) return FR_DISK_ERR;
  7859  002D1A  0100               	movlb	0	; () banked
  7860  002D1C  51CE               	movf	(dir_next@clst+3)& (0+255),w,b
  7861  002D1E  11CD               	iorwf	(dir_next@clst+2)& (0+255),w,b
  7862  002D20  11CC               	iorwf	(dir_next@clst+1)& (0+255),w,b
  7863  002D22  E107               	bnz	u8741
  7864  002D24  0E02               	movlw	2
  7865  002D26  5DCB               	subwf	dir_next@clst& (0+255),w,b
  7866  002D28  B0D8               	btfsc	status,0,c
  7867  002D2A  EF99  F016         	goto	u8741
  7868  002D2E  EF9B  F016         	goto	u8740
  7869  002D32                     u8741:
  7870  002D32  EF9E  F016         	goto	l7031
  7871  002D36                     u8740:
  7872  002D36                     
  7873                           ; BSR set to: 0
  7874  002D36  0E01               	movlw	1
  7875  002D38  EFE5  F016         	goto	l227
  7876  002D3C                     l7031:
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;pff.c: 485:     if (clst >= fs->n_fatent)
  7880  002D3C  EE20 F006          	lfsr	2,6
  7881  002D40  51C9               	movf	dir_next@fs& (0+255),w,b
  7882  002D42  26D9               	addwf	fsr2l,f,c
  7883  002D44  51CA               	movf	(dir_next@fs+1)& (0+255),w,b
  7884  002D46  22DA               	addwfc	fsr2h,f,c
  7885  002D48  50DE               	movf	postinc2,w,c
  7886  002D4A  5DCB               	subwf	dir_next@clst& (0+255),w,b
  7887  002D4C  50DE               	movf	postinc2,w,c
  7888  002D4E  59CC               	subwfb	(dir_next@clst+1)& (0+255),w,b
  7889  002D50  50DE               	movf	postinc2,w,c
  7890  002D52  59CD               	subwfb	(dir_next@clst+2)& (0+255),w,b
  7891  002D54  50DE               	movf	postinc2,w,c
  7892  002D56  59CE               	subwfb	(dir_next@clst+3)& (0+255),w,b
  7893  002D58  A0D8               	btfss	status,0,c
  7894  002D5A  EFB1  F016         	goto	u8751
  7895  002D5E  EFB3  F016         	goto	u8750
  7896  002D62                     u8751:
  7897  002D62  EFB5  F016         	goto	l7037
  7898  002D66                     u8750:
  7899  002D66  EF0A  F016         	goto	l7007
  7900  002D6A                     l7037:
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;pff.c: 487:     dj->clust = clst;
  7904  002D6A  EE20 F008          	lfsr	2,8
  7905  002D6E  51C0               	movf	dir_next@dj& (0+255),w,b
  7906  002D70  26D9               	addwf	fsr2l,f,c
  7907  002D72  51C1               	movf	(dir_next@dj+1)& (0+255),w,b
  7908  002D74  22DA               	addwfc	fsr2h,f,c
  7909  002D76  C0CB  FFDE         	movff	dir_next@clst,postinc2
  7910  002D7A  C0CC  FFDE         	movff	dir_next@clst+1,postinc2
  7911  002D7E  C0CD  FFDE         	movff	dir_next@clst+2,postinc2
  7912  002D82  C0CE  FFDE         	movff	dir_next@clst+3,postinc2
  7913  002D86                     
  7914                           ; BSR set to: 0
  7915                           ;pff.c: 488:     dj->sect = clust2sect(clst);
  7916  002D86  C0CB  F012         	movff	dir_next@clst,clust2sect@clst
  7917  002D8A  C0CC  F013         	movff	dir_next@clst+1,clust2sect@clst+1
  7918  002D8E  C0CD  F014         	movff	dir_next@clst+2,clust2sect@clst+2
  7919  002D92  C0CE  F015         	movff	dir_next@clst+3,clust2sect@clst+3
  7920  002D96  ECD5  F025         	call	_clust2sect	;wreg free
  7921  002D9A  0100               	movlb	0	; () banked
  7922  002D9C  EE20 F00C          	lfsr	2,12
  7923  002DA0  51C0               	movf	dir_next@dj& (0+255),w,b
  7924  002DA2  26D9               	addwf	fsr2l,f,c
  7925  002DA4  51C1               	movf	(dir_next@dj+1)& (0+255),w,b
  7926  002DA6  22DA               	addwfc	fsr2h,f,c
  7927  002DA8  C012  FFDE         	movff	?_clust2sect,postinc2
  7928  002DAC  C013  FFDE         	movff	?_clust2sect+1,postinc2
  7929  002DB0  C014  FFDE         	movff	?_clust2sect+2,postinc2
  7930  002DB4  C015  FFDE         	movff	?_clust2sect+3,postinc2
  7931  002DB8                     l7041:
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;pff.c: 493:  dj->index = i;
  7935  002DB8  C0C0  FFD9         	movff	dir_next@dj,fsr2l
  7936  002DBC  C0C1  FFDA         	movff	dir_next@dj+1,fsr2h
  7937  002DC0  C0CF  FFDE         	movff	dir_next@i,postinc2
  7938  002DC4  C0D0  FFDD         	movff	dir_next@i+1,postdec2
  7939  002DC8                     
  7940                           ; BSR set to: 0
  7941                           ;pff.c: 495:  return FR_OK;
  7942  002DC8  0E00               	movlw	0
  7943  002DCA                     l227:
  7944                           
  7945                           ; BSR set to: 0
  7946  002DCA  0012               	return		;funcret
  7947  002DCC                     __end_of_dir_next:
  7948                           	callstack 0
  7949                           
  7950 ;; *************** function _create_name *****************
  7951 ;; Defined at:
  7952 ;;		line 577 in file "pff.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;  dj              2   13[COMRAM] PTR struct .
  7955 ;;		 -> pf_open@dj(16), main@dir(16), 
  7956 ;;  path            2   15[COMRAM] PTR PTR const unsigned c
  7957 ;;		 -> follow_path@path(2), 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  d               1    0        unsigned char 
  7960 ;;  sfn             2   25[COMRAM] PTR unsigned char 
  7961 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  7962 ;;  p               2   21[COMRAM] PTR const unsigned char 
  7963 ;;		 -> Line(128), 
  7964 ;;  c               1   28[COMRAM] unsigned char 
  7965 ;;  i               1   27[COMRAM] unsigned char 
  7966 ;;  si              1   24[COMRAM] unsigned char 
  7967 ;;  ni              1   23[COMRAM] unsigned char 
  7968 ;; Return value:  Size  Location     Type
  7969 ;;                  1    wreg      enum E2600
  7970 ;; Registers used:
  7971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7972 ;; Tracked objects:
  7973 ;;		On entry : 0/0
  7974 ;;		On exit  : 0/0
  7975 ;;		Unchanged: 0/0
  7976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7977 ;;      Params:         4       0       0       0       0       0       0
  7978 ;;      Locals:         8       0       0       0       0       0       0
  7979 ;;      Temps:          4       0       0       0       0       0       0
  7980 ;;      Totals:        16       0       0       0       0       0       0
  7981 ;;Total ram usage:       16 bytes
  7982 ;; Hardware stack levels used: 1
  7983 ;; Hardware stack levels required when called: 2
  7984 ;; This function calls:
  7985 ;;		_mem_set
  7986 ;; This function is called by:
  7987 ;;		_follow_path
  7988 ;; This function uses a non-reentrant model
  7989 ;;
  7990                           
  7991                           	psect	text24
  7992  00339A                     __ptext24:
  7993                           	callstack 0
  7994  00339A                     _create_name:
  7995                           	callstack 26
  7996  00339A                     
  7997                           ;pff.c: 578:  DIR *dj,;pff.c: 579:  const char **path;pff.c: 581: {;pff.c: 582:  BYTE c,
      +                           ni, si, i, *sfn;;pff.c: 583:  const char *p;;pff.c: 586:  static const BYTE cvt[] = {0x
      +                          80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x90,0x92,
      +                          0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, 0x41,0x49,0x4F,0x
      +                          55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,0xB3,0xB4,
      +                          0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x
      +                          C6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,
      +                          0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, 0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0x
      +                          E9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,
      +                          0xFB,0xFC,0xFD,0xFE,0xFF};
  7998  00339A  EE20 F002          	lfsr	2,2
  7999  00339E  500E               	movf	create_name@dj^0,w,c
  8000  0033A0  26D9               	addwf	fsr2l,f,c
  8001  0033A2  500F               	movf	(create_name@dj+1)^0,w,c
  8002  0033A4  22DA               	addwfc	fsr2h,f,c
  8003  0033A6  CFDE F01A          	movff	postinc2,create_name@sfn
  8004  0033AA  CFDD F01B          	movff	postdec2,create_name@sfn+1
  8005  0033AE                     
  8006                           ;pff.c: 592:  mem_set(sfn, ' ', 11);
  8007  0033AE  C01A  F006         	movff	create_name@sfn,mem_set@dst
  8008  0033B2  C01B  F007         	movff	create_name@sfn+1,mem_set@dst+1
  8009  0033B6  0E00               	movlw	0
  8010  0033B8  6E09               	movwf	(mem_set@val+1)^0,c
  8011  0033BA  0E20               	movlw	32
  8012  0033BC  6E08               	movwf	mem_set@val^0,c
  8013  0033BE  0E00               	movlw	0
  8014  0033C0  6E0B               	movwf	(mem_set@cnt+1)^0,c
  8015  0033C2  0E0B               	movlw	11
  8016  0033C4  6E0A               	movwf	mem_set@cnt^0,c
  8017  0033C6  ECAD  F02A         	call	_mem_set	;wreg free
  8018  0033CA                     
  8019                           ;pff.c: 593:  si = i = 0; ni = 8;
  8020  0033CA  0E00               	movlw	0
  8021  0033CC  6E1C               	movwf	create_name@i^0,c
  8022  0033CE  C01C  F019         	movff	create_name@i,create_name@si
  8023  0033D2  0E08               	movlw	8
  8024  0033D4  6E18               	movwf	create_name@ni^0,c
  8025  0033D6                     
  8026                           ;pff.c: 594:  p = *path;
  8027  0033D6  C010  FFD9         	movff	create_name@path,fsr2l
  8028  0033DA  C011  FFDA         	movff	create_name@path+1,fsr2h
  8029  0033DE  CFDE F016          	movff	postinc2,create_name@p
  8030  0033E2  CFDD F017          	movff	postdec2,create_name@p+1
  8031  0033E6                     l4909:
  8032                           
  8033                           ;pff.c: 596:   c = p[si++];
  8034  0033E6  5019               	movf	create_name@si^0,w,c
  8035  0033E8  2416               	addwf	create_name@p^0,w,c
  8036  0033EA  6ED9               	movwf	fsr2l,c
  8037  0033EC  0E00               	movlw	0
  8038  0033EE  2017               	addwfc	(create_name@p+1)^0,w,c
  8039  0033F0  6EDA               	movwf	fsr2h,c
  8040  0033F2  50DF               	movf	indf2,w,c
  8041  0033F4  6E1D               	movwf	create_name@c^0,c
  8042  0033F6  2A19               	incf	create_name@si^0,f,c
  8043  0033F8                     
  8044                           ;pff.c: 597:   if (c <= ' ' || c == '/') break;
  8045  0033F8  0E20               	movlw	32
  8046  0033FA  641D               	cpfsgt	create_name@c^0,c
  8047  0033FC  EF02  F01A         	goto	u5431
  8048  003400  EF04  F01A         	goto	u5430
  8049  003404                     u5431:
  8050  003404  EF78  F01A         	goto	l4953
  8051  003408                     u5430:
  8052  003408  0E2F               	movlw	47
  8053  00340A  181D               	xorwf	create_name@c^0,w,c
  8054  00340C  A4D8               	btfss	status,2,c
  8055  00340E  EF0B  F01A         	goto	u5441
  8056  003412  EF0D  F01A         	goto	u5440
  8057  003416                     u5441:
  8058  003416  EF0F  F01A         	goto	l4917
  8059  00341A                     u5440:
  8060  00341A  EF78  F01A         	goto	l4953
  8061  00341E                     l4917:
  8062                           
  8063                           ;pff.c: 598:   if (c == '.' || i >= ni) {
  8064  00341E  0E2E               	movlw	46
  8065  003420  181D               	xorwf	create_name@c^0,w,c
  8066  003422  B4D8               	btfsc	status,2,c
  8067  003424  EF16  F01A         	goto	u5451
  8068  003428  EF18  F01A         	goto	u5450
  8069  00342C                     u5451:
  8070  00342C  EF21  F01A         	goto	l4921
  8071  003430                     u5450:
  8072  003430  5018               	movf	create_name@ni^0,w,c
  8073  003432  5C1C               	subwf	create_name@i^0,w,c
  8074  003434  A0D8               	btfss	status,0,c
  8075  003436  EF1F  F01A         	goto	u5461
  8076  00343A  EF21  F01A         	goto	u5460
  8077  00343E                     u5461:
  8078  00343E  EF3B  F01A         	goto	l4927
  8079  003442                     u5460:
  8080  003442                     l4921:
  8081                           
  8082                           ;pff.c: 599:    if (ni != 8 || c != '.') break;
  8083  003442  0E08               	movlw	8
  8084  003444  1818               	xorwf	create_name@ni^0,w,c
  8085  003446  A4D8               	btfss	status,2,c
  8086  003448  EF28  F01A         	goto	u5471
  8087  00344C  EF2A  F01A         	goto	u5470
  8088  003450                     u5471:
  8089  003450  EF78  F01A         	goto	l4953
  8090  003454                     u5470:
  8091  003454  0E2E               	movlw	46
  8092  003456  181D               	xorwf	create_name@c^0,w,c
  8093  003458  B4D8               	btfsc	status,2,c
  8094  00345A  EF31  F01A         	goto	u5481
  8095  00345E  EF33  F01A         	goto	u5480
  8096  003462                     u5481:
  8097  003462  EF35  F01A         	goto	l4925
  8098  003466                     u5480:
  8099  003466  EF78  F01A         	goto	l4953
  8100  00346A                     l4925:
  8101                           
  8102                           ;pff.c: 600:    i = 8; ni = 11;
  8103  00346A  0E08               	movlw	8
  8104  00346C  6E1C               	movwf	create_name@i^0,c
  8105  00346E  0E0B               	movlw	11
  8106  003470  6E18               	movwf	create_name@ni^0,c
  8107                           
  8108                           ;pff.c: 601:    continue;
  8109  003472  EFF3  F019         	goto	l4909
  8110  003476                     l4927:
  8111                           
  8112                           ;pff.c: 605:   if (c >= 0x80)
  8113  003476  0E7F               	movlw	127
  8114  003478  641D               	cpfsgt	create_name@c^0,c
  8115  00347A  EF41  F01A         	goto	u5491
  8116  00347E  EF43  F01A         	goto	u5490
  8117  003482                     u5491:
  8118  003482  EF5C  F01A         	goto	l4943
  8119  003486                     u5490:
  8120  003486                     
  8121                           ;pff.c: 606:    c = cvt[c - 0x80];
  8122  003486  0E80               	movlw	128
  8123  003488  6E12               	movwf	??_create_name^0,c
  8124  00348A  0EFF               	movlw	255
  8125  00348C  6E13               	movwf	(??_create_name+1)^0,c
  8126  00348E  501D               	movf	create_name@c^0,w,c
  8127  003490  6E14               	movwf	(??_create_name+2)^0,c
  8128  003492  6A15               	clrf	(??_create_name+3)^0,c
  8129  003494  5012               	movf	??_create_name^0,w,c
  8130  003496  2614               	addwf	(??_create_name+2)^0,f,c
  8131  003498  5013               	movf	(??_create_name+1)^0,w,c
  8132  00349A  2215               	addwfc	(??_create_name+3)^0,f,c
  8133  00349C  0E8D               	movlw	low create_name@cvt
  8134  00349E  2414               	addwf	(??_create_name+2)^0,w,c
  8135  0034A0  6EF6               	movwf	tblptrl,c
  8136  0034A2  0E7B               	movlw	high create_name@cvt
  8137  0034A4  2015               	addwfc	(??_create_name+3)^0,w,c
  8138  0034A6  6EF7               	movwf	tblptrh,c
  8139  0034A8                     	if	0	;There are less than 3 active tblptr bytes
  8140  0034A8                     	endif
  8141  0034A8  0008               	tblrd		*
  8142  0034AA  CFF5 F01D          	movff	tablat,create_name@c
  8143  0034AE  EF5C  F01A         	goto	l4943
  8144  0034B2                     l4941:
  8145  0034B2  2A1C               	incf	create_name@i^0,f,c
  8146                           
  8147                           ;pff.c: 612:   } else
  8148  0034B4  EFF3  F019         	goto	l4909
  8149  0034B8                     l4943:
  8150  0034B8  0E60               	movlw	96
  8151  0034BA  641D               	cpfsgt	create_name@c^0,c
  8152  0034BC  EF62  F01A         	goto	u5501
  8153  0034C0  EF64  F01A         	goto	u5500
  8154  0034C4                     u5501:
  8155  0034C4  EF6E  F01A         	goto	l4949
  8156  0034C8                     u5500:
  8157  0034C8  0E7B               	movlw	123
  8158  0034CA  601D               	cpfslt	create_name@c^0,c
  8159  0034CC  EF6A  F01A         	goto	u5511
  8160  0034D0  EF6C  F01A         	goto	u5510
  8161  0034D4                     u5511:
  8162  0034D4  EF6E  F01A         	goto	l4949
  8163  0034D8                     u5510:
  8164  0034D8  0E20               	movlw	32
  8165  0034DA  5E1D               	subwf	create_name@c^0,f,c
  8166  0034DC                     l4949:
  8167                           
  8168                           ;pff.c: 616:    sfn[i++] = c;
  8169  0034DC  501C               	movf	create_name@i^0,w,c
  8170  0034DE  241A               	addwf	create_name@sfn^0,w,c
  8171  0034E0  6ED9               	movwf	fsr2l,c
  8172  0034E2  0E00               	movlw	0
  8173  0034E4  201B               	addwfc	(create_name@sfn+1)^0,w,c
  8174  0034E6  6EDA               	movwf	fsr2h,c
  8175  0034E8  C01D  FFDF         	movff	create_name@c,indf2
  8176  0034EC  EF59  F01A         	goto	l4941
  8177  0034F0                     l4953:
  8178                           
  8179                           ;pff.c: 619:  *path = &p[si];
  8180  0034F0  5019               	movf	create_name@si^0,w,c
  8181  0034F2  2416               	addwf	create_name@p^0,w,c
  8182  0034F4  6E12               	movwf	??_create_name^0,c
  8183  0034F6  0E00               	movlw	0
  8184  0034F8  2017               	addwfc	(create_name@p+1)^0,w,c
  8185  0034FA  6E13               	movwf	(??_create_name+1)^0,c
  8186  0034FC  C010  FFD9         	movff	create_name@path,fsr2l
  8187  003500  C011  FFDA         	movff	create_name@path+1,fsr2h
  8188  003504  C012  FFDE         	movff	??_create_name,postinc2
  8189  003508  C013  FFDD         	movff	??_create_name+1,postdec2
  8190                           
  8191                           ;pff.c: 621:  sfn[11] = (c <= ' ') ? 1 : 0;
  8192  00350C  EE20 F00B          	lfsr	2,11
  8193  003510  501A               	movf	create_name@sfn^0,w,c
  8194  003512  26D9               	addwf	fsr2l,f,c
  8195  003514  501B               	movf	(create_name@sfn+1)^0,w,c
  8196  003516  22DA               	addwfc	fsr2h,f,c
  8197  003518  0E20               	movlw	32
  8198  00351A  641D               	cpfsgt	create_name@c^0,c
  8199  00351C  EF92  F01A         	goto	u5521
  8200  003520  EF95  F01A         	goto	u5520
  8201  003524                     u5521:
  8202  003524  0E01               	movlw	1
  8203  003526  EF96  F01A         	goto	u5530
  8204  00352A                     u5520:
  8205  00352A  0E00               	movlw	0
  8206  00352C                     u5530:
  8207  00352C  6EDF               	movwf	indf2,c
  8208  00352E                     
  8209                           ;pff.c: 623:  return FR_OK;
  8210  00352E  0E00               	movlw	0
  8211  003530  0012               	return		;funcret
  8212  003532                     __end_of_create_name:
  8213                           	callstack 0
  8214                           
  8215 ;; *************** function _mem_set *****************
  8216 ;; Defined at:
  8217 ;;		line 325 in file "pff.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;  dst             2    5[COMRAM] PTR void 
  8220 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  8221 ;;  val             2    7[COMRAM] int 
  8222 ;;  cnt             2    9[COMRAM] int 
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;  d               2   11[COMRAM] PTR unsigned char 
  8225 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      void 
  8228 ;; Registers used:
  8229 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8235 ;;      Params:         6       0       0       0       0       0       0
  8236 ;;      Locals:         2       0       0       0       0       0       0
  8237 ;;      Temps:          0       0       0       0       0       0       0
  8238 ;;      Totals:         8       0       0       0       0       0       0
  8239 ;;Total ram usage:        8 bytes
  8240 ;; Hardware stack levels used: 1
  8241 ;; Hardware stack levels required when called: 1
  8242 ;; This function calls:
  8243 ;;		Nothing
  8244 ;; This function is called by:
  8245 ;;		_create_name
  8246 ;; This function uses a non-reentrant model
  8247 ;;
  8248                           
  8249                           	psect	text25
  8250  00555A                     __ptext25:
  8251                           	callstack 0
  8252  00555A                     _mem_set:
  8253                           	callstack 26
  8254  00555A                     
  8255                           ;pff.c: 326:  char *d = (char*)dst;
  8256  00555A  C006  F00C         	movff	mem_set@dst,mem_set@d
  8257  00555E  C007  F00D         	movff	mem_set@dst+1,mem_set@d+1
  8258                           
  8259                           ;pff.c: 327:  while (cnt--) *d++ = (char)val;
  8260  005562  EFBB  F02A         	goto	l4757
  8261  005566                     l4753:
  8262  005566  C00C  FFD9         	movff	mem_set@d,fsr2l
  8263  00556A  C00D  FFDA         	movff	mem_set@d+1,fsr2h
  8264  00556E  C008  FFDF         	movff	mem_set@val,indf2
  8265  005572  4A0C               	infsnz	mem_set@d^0,f,c
  8266  005574  2A0D               	incf	(mem_set@d+1)^0,f,c
  8267  005576                     l4757:
  8268  005576  060A               	decf	mem_set@cnt^0,f,c
  8269  005578  A0D8               	btfss	status,0,c
  8270  00557A  060B               	decf	(mem_set@cnt+1)^0,f,c
  8271  00557C  280A               	incf	mem_set@cnt^0,w,c
  8272  00557E  E106               	bnz	u5181
  8273  005580  280B               	incf	(mem_set@cnt+1)^0,w,c
  8274  005582  A4D8               	btfss	status,2,c
  8275  005584  EFC6  F02A         	goto	u5181
  8276  005588  EFC8  F02A         	goto	u5180
  8277  00558C                     u5181:
  8278  00558C  EFB3  F02A         	goto	l4753
  8279  005590                     u5180:
  8280  005590  0012               	return		;funcret
  8281  005592                     __end_of_mem_set:
  8282                           	callstack 0
  8283                           
  8284 ;; *************** function _pf_mount *****************
  8285 ;; Defined at:
  8286 ;;		line 750 in file "pff.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  fs              2   42[BANK0 ] PTR struct .
  8289 ;;		 -> main@fs(42), 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;  buf            36   66[BANK0 ] unsigned char [36]
  8292 ;;  fsize           4  114[BANK0 ] unsigned long 
  8293 ;;  bsect           4  110[BANK0 ] unsigned long 
  8294 ;;  mclst           4  106[BANK0 ] unsigned long 
  8295 ;;  tsect           4  102[BANK0 ] unsigned long 
  8296 ;;  fmt             1  118[BANK0 ] unsigned char 
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  1    wreg      enum E3114
  8299 ;; Registers used:
  8300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8306 ;;      Params:         0       2       0       0       0       0       0
  8307 ;;      Locals:         0      53       0       0       0       0       0
  8308 ;;      Temps:          0      22       0       0       0       0       0
  8309 ;;      Totals:         0      77       0       0       0       0       0
  8310 ;;Total ram usage:       77 bytes
  8311 ;; Hardware stack levels used: 1
  8312 ;; Hardware stack levels required when called: 11
  8313 ;; This function calls:
  8314 ;;		___lldiv
  8315 ;;		___lmul
  8316 ;;		_check_fs
  8317 ;;		_disk_initialize
  8318 ;;		_disk_readp
  8319 ;; This function is called by:
  8320 ;;		_main
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text26
  8325  000F98                     __ptext26:
  8326                           	callstack 0
  8327  000F98                     _pf_mount:
  8328                           	callstack 19
  8329  000F98                     
  8330                           ;pff.c: 751:  FATFS *fs;pff.c: 753: {;pff.c: 754:  BYTE fmt, buf[36];;pff.c: 755:  DWORD
      +                           bsect, fsize, tsect, mclst;;pff.c: 758:  FatFs = 0;
  8331  000F98  0E00               	movlw	0
  8332  000F9A  0100               	movlb	0	; () banked
  8333  000F9C  6FFD               	movwf	_FatFs& (0+255),b
  8334  000F9E  0E00               	movlw	0
  8335  000FA0  6FFE               	movwf	(_FatFs+1)& (0+255),b
  8336  000FA2                     
  8337                           ; BSR set to: 0
  8338                           ;pff.c: 760:  if (disk_initialize() & 0x01)
  8339  000FA2  EC9D  F014         	call	_disk_initialize	;wreg free
  8340  000FA6  0100               	movlb	0	; () banked
  8341  000FA8  6FAC               	movwf	??_pf_mount& (0+255),b
  8342  000FAA  A1AC               	btfss	??_pf_mount& (0+255),0,b
  8343  000FAC  EFDA  F007         	goto	u9221
  8344  000FB0  EFDC  F007         	goto	u9220
  8345  000FB4                     u9221:
  8346  000FB4  EFDF  F007         	goto	l7321
  8347  000FB8                     u9220:
  8348  000FB8                     
  8349                           ; BSR set to: 0
  8350                           ;pff.c: 761:   return FR_NOT_READY;
  8351  000FB8  0E02               	movlw	2
  8352  000FBA  EFE4  F00A         	goto	l313
  8353  000FBE                     l7321:
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;pff.c: 764:  bsect = 0;
  8357  000FBE  0E00               	movlw	0
  8358  000FC0  6FEE               	movwf	pf_mount@bsect& (0+255),b
  8359  000FC2  0E00               	movlw	0
  8360  000FC4  6FEF               	movwf	(pf_mount@bsect+1)& (0+255),b
  8361  000FC6  0E00               	movlw	0
  8362  000FC8  6FF0               	movwf	(pf_mount@bsect+2)& (0+255),b
  8363  000FCA  0E00               	movlw	0
  8364  000FCC  6FF1               	movwf	(pf_mount@bsect+3)& (0+255),b
  8365  000FCE                     
  8366                           ; BSR set to: 0
  8367                           ;pff.c: 765:  fmt = check_fs(buf, bsect);
  8368  000FCE  0EC2               	movlw	low pf_mount@buf
  8369  000FD0  6FA0               	movwf	check_fs@buf& (0+255),b
  8370  000FD2  0E00               	movlw	high pf_mount@buf
  8371  000FD4  6FA1               	movwf	(check_fs@buf+1)& (0+255),b
  8372  000FD6  0E00               	movlw	0
  8373  000FD8  6FA2               	movwf	check_fs@sect& (0+255),b
  8374  000FDA  0E00               	movlw	0
  8375  000FDC  6FA3               	movwf	(check_fs@sect+1)& (0+255),b
  8376  000FDE  0E00               	movlw	0
  8377  000FE0  6FA4               	movwf	(check_fs@sect+2)& (0+255),b
  8378  000FE2  0E00               	movlw	0
  8379  000FE4  6FA5               	movwf	(check_fs@sect+3)& (0+255),b
  8380  000FE6  EC90  F022         	call	_check_fs	;wreg free
  8381  000FEA  0100               	movlb	0	; () banked
  8382  000FEC  6FF6               	movwf	pf_mount@fmt& (0+255),b
  8383  000FEE                     
  8384                           ; BSR set to: 0
  8385                           ;pff.c: 766:  if (fmt == 1) {
  8386  000FEE  05F6               	decf	pf_mount@fmt& (0+255),w,b
  8387  000FF0  A4D8               	btfss	status,2,c
  8388  000FF2  EFFD  F007         	goto	u9231
  8389  000FF6  EFFF  F007         	goto	u9230
  8390  000FFA                     u9231:
  8391  000FFA  EF74  F008         	goto	l7337
  8392  000FFE                     u9230:
  8393  000FFE                     
  8394                           ; BSR set to: 0
  8395                           ;pff.c: 768:   if (disk_readp(buf, bsect, 446, 16)) {
  8396  000FFE  0EC2               	movlw	low pf_mount@buf
  8397  001000  6F90               	movwf	disk_readp@buff& (0+255),b
  8398  001002  0E00               	movlw	high pf_mount@buf
  8399  001004  6F91               	movwf	(disk_readp@buff+1)& (0+255),b
  8400  001006  0E00               	movlw	0
  8401  001008  6F92               	movwf	disk_readp@sector& (0+255),b
  8402  00100A  0E00               	movlw	0
  8403  00100C  6F93               	movwf	(disk_readp@sector+1)& (0+255),b
  8404  00100E  0E00               	movlw	0
  8405  001010  6F94               	movwf	(disk_readp@sector+2)& (0+255),b
  8406  001012  0E00               	movlw	0
  8407  001014  6F95               	movwf	(disk_readp@sector+3)& (0+255),b
  8408  001016  0E01               	movlw	1
  8409  001018  6F97               	movwf	(disk_readp@offset+1)& (0+255),b
  8410  00101A  0EBE               	movlw	190
  8411  00101C  6F96               	movwf	disk_readp@offset& (0+255),b
  8412  00101E  0E00               	movlw	0
  8413  001020  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  8414  001022  0E10               	movlw	16
  8415  001024  6F98               	movwf	disk_readp@count& (0+255),b
  8416  001026  EC65  F01B         	call	_disk_readp	;wreg free
  8417  00102A  0900               	iorlw	0
  8418  00102C  B4D8               	btfsc	status,2,c
  8419  00102E  EF1B  F008         	goto	u9241
  8420  001032  EF1D  F008         	goto	u9240
  8421  001036                     u9241:
  8422  001036  EF22  F008         	goto	l7331
  8423  00103A                     u9240:
  8424  00103A                     
  8425                           ;pff.c: 769:    fmt = 3;
  8426  00103A  0E03               	movlw	3
  8427  00103C  0100               	movlb	0	; () banked
  8428  00103E  6FF6               	movwf	pf_mount@fmt& (0+255),b
  8429                           
  8430                           ;pff.c: 770:   } else {
  8431  001040  EF74  F008         	goto	l7337
  8432  001044                     l7331:
  8433                           
  8434                           ;pff.c: 771:    if (buf[4]) {
  8435  001044  0100               	movlb	0	; () banked
  8436  001046  51C6               	movf	(pf_mount@buf+4)& (0+255),w,b
  8437  001048  B4D8               	btfsc	status,2,c
  8438  00104A  EF29  F008         	goto	u9251
  8439  00104E  EF2B  F008         	goto	u9250
  8440  001052                     u9251:
  8441  001052  EF74  F008         	goto	l7337
  8442  001056                     u9250:
  8443  001056                     
  8444                           ; BSR set to: 0
  8445                           ;pff.c: 772:     bsect = (DWORD)(((DWORD)*((BYTE*)(&buf[8])+3)<<24)|((DWORD)*((BYTE*)(&b
      +                          uf[8])+2)<<16)|((WORD)*((BYTE*)(&buf[8])+1)<<8)|*(BYTE*)(&buf[8]));
  8446  001056  51CB               	movf	(pf_mount@buf+9)& (0+255),w,b
  8447  001058  6FAD               	movwf	(??_pf_mount+1)& (0+255),b
  8448  00105A  6BAC               	clrf	??_pf_mount& (0+255),b
  8449  00105C  C0CC  F0AE         	movff	pf_mount@buf+10,??_pf_mount+2
  8450  001060  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8451  001062  6BB0               	clrf	(??_pf_mount+4)& (0+255),b
  8452  001064  6BB1               	clrf	(??_pf_mount+5)& (0+255),b
  8453  001066  C0AF  F0B1         	movff	??_pf_mount+3,??_pf_mount+5
  8454  00106A  C0AE  F0B0         	movff	??_pf_mount+2,??_pf_mount+4
  8455  00106E  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8456  001070  6BAE               	clrf	(??_pf_mount+2)& (0+255),b
  8457  001072  C0CD  F0B2         	movff	pf_mount@buf+11,??_pf_mount+6
  8458  001076  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8459  001078  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8460  00107A  6BB5               	clrf	(??_pf_mount+9)& (0+255),b
  8461  00107C  C0B2  F0B5         	movff	??_pf_mount+6,??_pf_mount+9
  8462  001080  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8463  001082  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8464  001084  6BB2               	clrf	(??_pf_mount+6)& (0+255),b
  8465  001086  51AE               	movf	(??_pf_mount+2)& (0+255),w,b
  8466  001088  11B2               	iorwf	(??_pf_mount+6)& (0+255),w,b
  8467  00108A  6FB6               	movwf	(??_pf_mount+10)& (0+255),b
  8468  00108C  51AF               	movf	(??_pf_mount+3)& (0+255),w,b
  8469  00108E  11B3               	iorwf	(??_pf_mount+7)& (0+255),w,b
  8470  001090  6FB7               	movwf	(??_pf_mount+11)& (0+255),b
  8471  001092  51B0               	movf	(??_pf_mount+4)& (0+255),w,b
  8472  001094  11B4               	iorwf	(??_pf_mount+8)& (0+255),w,b
  8473  001096  6FB8               	movwf	(??_pf_mount+12)& (0+255),b
  8474  001098  51B1               	movf	(??_pf_mount+5)& (0+255),w,b
  8475  00109A  11B5               	iorwf	(??_pf_mount+9)& (0+255),w,b
  8476  00109C  6FB9               	movwf	(??_pf_mount+13)& (0+255),b
  8477  00109E  51AC               	movf	??_pf_mount& (0+255),w,b
  8478  0010A0  11B6               	iorwf	(??_pf_mount+10)& (0+255),w,b
  8479  0010A2  6FBA               	movwf	(??_pf_mount+14)& (0+255),b
  8480  0010A4  51AD               	movf	(??_pf_mount+1)& (0+255),w,b
  8481  0010A6  11B7               	iorwf	(??_pf_mount+11)& (0+255),w,b
  8482  0010A8  6FBB               	movwf	(??_pf_mount+15)& (0+255),b
  8483  0010AA  0E00               	movlw	0
  8484  0010AC  11B8               	iorwf	(??_pf_mount+12)& (0+255),w,b
  8485  0010AE  6FBC               	movwf	(??_pf_mount+16)& (0+255),b
  8486  0010B0  0E00               	movlw	0
  8487  0010B2  11B9               	iorwf	(??_pf_mount+13)& (0+255),w,b
  8488  0010B4  6FBD               	movwf	(??_pf_mount+17)& (0+255),b
  8489  0010B6  51CA               	movf	(pf_mount@buf+8)& (0+255),w,b
  8490  0010B8  11BA               	iorwf	(??_pf_mount+14)& (0+255),w,b
  8491  0010BA  6FEE               	movwf	pf_mount@bsect& (0+255),b
  8492  0010BC  51BB               	movf	(??_pf_mount+15)& (0+255),w,b
  8493  0010BE  6FEF               	movwf	(pf_mount@bsect+1)& (0+255),b
  8494  0010C0  51BC               	movf	(??_pf_mount+16)& (0+255),w,b
  8495  0010C2  6FF0               	movwf	(pf_mount@bsect+2)& (0+255),b
  8496  0010C4  51BD               	movf	(??_pf_mount+17)& (0+255),w,b
  8497  0010C6  6FF1               	movwf	(pf_mount@bsect+3)& (0+255),b
  8498  0010C8                     
  8499                           ; BSR set to: 0
  8500                           ;pff.c: 773:     fmt = check_fs(buf, bsect);
  8501  0010C8  0EC2               	movlw	low pf_mount@buf
  8502  0010CA  6FA0               	movwf	check_fs@buf& (0+255),b
  8503  0010CC  0E00               	movlw	high pf_mount@buf
  8504  0010CE  6FA1               	movwf	(check_fs@buf+1)& (0+255),b
  8505  0010D0  C0EE  F0A2         	movff	pf_mount@bsect,check_fs@sect
  8506  0010D4  C0EF  F0A3         	movff	pf_mount@bsect+1,check_fs@sect+1
  8507  0010D8  C0F0  F0A4         	movff	pf_mount@bsect+2,check_fs@sect+2
  8508  0010DC  C0F1  F0A5         	movff	pf_mount@bsect+3,check_fs@sect+3
  8509  0010E0  EC90  F022         	call	_check_fs	;wreg free
  8510  0010E4  0100               	movlb	0	; () banked
  8511  0010E6  6FF6               	movwf	pf_mount@fmt& (0+255),b
  8512  0010E8                     l7337:
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;pff.c: 777:  if (fmt == 3) return FR_DISK_ERR;
  8516  0010E8  0E03               	movlw	3
  8517  0010EA  19F6               	xorwf	pf_mount@fmt& (0+255),w,b
  8518  0010EC  A4D8               	btfss	status,2,c
  8519  0010EE  EF7B  F008         	goto	u9261
  8520  0010F2  EF7D  F008         	goto	u9260
  8521  0010F6                     u9261:
  8522  0010F6  EF80  F008         	goto	l7343
  8523  0010FA                     u9260:
  8524  0010FA                     l7339:
  8525  0010FA  0E01               	movlw	1
  8526  0010FC  EFE4  F00A         	goto	l313
  8527  001100                     l7343:
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;pff.c: 778:  if (fmt) return FR_NO_FILESYSTEM;
  8531  001100  51F6               	movf	pf_mount@fmt& (0+255),w,b
  8532  001102  B4D8               	btfsc	status,2,c
  8533  001104  EF86  F008         	goto	u9271
  8534  001108  EF88  F008         	goto	u9270
  8535  00110C                     u9271:
  8536  00110C  EF8B  F008         	goto	l7349
  8537  001110                     u9270:
  8538  001110                     l7345:
  8539                           
  8540                           ; BSR set to: 0
  8541  001110  0E06               	movlw	6
  8542  001112  EFE4  F00A         	goto	l313
  8543  001116                     l7349:
  8544                           
  8545                           ; BSR set to: 0
  8546                           ;pff.c: 781:  if (disk_readp(buf, bsect, 13, sizeof (buf))) return FR_DISK_ERR;
  8547  001116  0EC2               	movlw	low pf_mount@buf
  8548  001118  6F90               	movwf	disk_readp@buff& (0+255),b
  8549  00111A  0E00               	movlw	high pf_mount@buf
  8550  00111C  6F91               	movwf	(disk_readp@buff+1)& (0+255),b
  8551  00111E  C0EE  F092         	movff	pf_mount@bsect,disk_readp@sector
  8552  001122  C0EF  F093         	movff	pf_mount@bsect+1,disk_readp@sector+1
  8553  001126  C0F0  F094         	movff	pf_mount@bsect+2,disk_readp@sector+2
  8554  00112A  C0F1  F095         	movff	pf_mount@bsect+3,disk_readp@sector+3
  8555  00112E  0E00               	movlw	0
  8556  001130  6F97               	movwf	(disk_readp@offset+1)& (0+255),b
  8557  001132  0E0D               	movlw	13
  8558  001134  6F96               	movwf	disk_readp@offset& (0+255),b
  8559  001136  0E00               	movlw	0
  8560  001138  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  8561  00113A  0E24               	movlw	36
  8562  00113C  6F98               	movwf	disk_readp@count& (0+255),b
  8563  00113E  EC65  F01B         	call	_disk_readp	;wreg free
  8564  001142  0900               	iorlw	0
  8565  001144  B4D8               	btfsc	status,2,c
  8566  001146  EFA7  F008         	goto	u9281
  8567  00114A  EFA9  F008         	goto	u9280
  8568  00114E                     u9281:
  8569  00114E  EFAB  F008         	goto	l7355
  8570  001152                     u9280:
  8571  001152  EF7D  F008         	goto	l7339
  8572  001156                     l7355:
  8573                           
  8574                           ;pff.c: 783:  fsize = (WORD)(((WORD)*((BYTE*)(buf+22 -13)+1)<<8)|(WORD)*(BYTE*)(buf+22 -
      +                          13));
  8575  001156  0100               	movlb	0	; () banked
  8576  001158  51CB               	movf	(pf_mount@buf+9)& (0+255),w,b
  8577  00115A  C0CC  F0AC         	movff	pf_mount@buf+10,??_pf_mount
  8578  00115E  6BAD               	clrf	(??_pf_mount+1)& (0+255),b
  8579  001160  C0AC  F0AD         	movff	??_pf_mount,??_pf_mount+1
  8580  001164  6BAC               	clrf	??_pf_mount& (0+255),b
  8581  001166  13AC               	iorwf	??_pf_mount& (0+255),f,b
  8582  001168  0E00               	movlw	0
  8583  00116A  13AD               	iorwf	(??_pf_mount+1)& (0+255),f,b
  8584  00116C  C0AC  F0F2         	movff	??_pf_mount,pf_mount@fsize
  8585  001170  C0AD  F0F3         	movff	??_pf_mount+1,pf_mount@fsize+1
  8586  001174  6BF4               	clrf	(pf_mount@fsize+2)& (0+255),b
  8587  001176  6BF5               	clrf	(pf_mount@fsize+3)& (0+255),b
  8588                           
  8589                           ;pff.c: 784:  if (!fsize) fsize = (DWORD)(((DWORD)*((BYTE*)(buf+36 -13)+3)<<24)|((DWORD)
      +                          *((BYTE*)(buf+36 -13)+2)<<16)|((WORD)*((BYTE*)(buf+36 -13)+1)<<8)|*(BYTE*)(buf+36 -13));
  8590  001178  51F2               	movf	pf_mount@fsize& (0+255),w,b
  8591  00117A  11F3               	iorwf	(pf_mount@fsize+1)& (0+255),w,b
  8592  00117C  11F4               	iorwf	(pf_mount@fsize+2)& (0+255),w,b
  8593  00117E  11F5               	iorwf	(pf_mount@fsize+3)& (0+255),w,b
  8594  001180  A4D8               	btfss	status,2,c
  8595  001182  EFC5  F008         	goto	u9291
  8596  001186  EFC7  F008         	goto	u9290
  8597  00118A                     u9291:
  8598  00118A  EF00  F009         	goto	l7359
  8599  00118E                     u9290:
  8600  00118E                     
  8601                           ; BSR set to: 0
  8602  00118E  51DA               	movf	(pf_mount@buf+24)& (0+255),w,b
  8603  001190  6FAD               	movwf	(??_pf_mount+1)& (0+255),b
  8604  001192  6BAC               	clrf	??_pf_mount& (0+255),b
  8605  001194  C0DB  F0AE         	movff	pf_mount@buf+25,??_pf_mount+2
  8606  001198  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8607  00119A  6BB0               	clrf	(??_pf_mount+4)& (0+255),b
  8608  00119C  6BB1               	clrf	(??_pf_mount+5)& (0+255),b
  8609  00119E  C0AF  F0B1         	movff	??_pf_mount+3,??_pf_mount+5
  8610  0011A2  C0AE  F0B0         	movff	??_pf_mount+2,??_pf_mount+4
  8611  0011A6  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8612  0011A8  6BAE               	clrf	(??_pf_mount+2)& (0+255),b
  8613  0011AA  C0DC  F0B2         	movff	pf_mount@buf+26,??_pf_mount+6
  8614  0011AE  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8615  0011B0  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8616  0011B2  6BB5               	clrf	(??_pf_mount+9)& (0+255),b
  8617  0011B4  C0B2  F0B5         	movff	??_pf_mount+6,??_pf_mount+9
  8618  0011B8  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8619  0011BA  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8620  0011BC  6BB2               	clrf	(??_pf_mount+6)& (0+255),b
  8621  0011BE  51AE               	movf	(??_pf_mount+2)& (0+255),w,b
  8622  0011C0  11B2               	iorwf	(??_pf_mount+6)& (0+255),w,b
  8623  0011C2  6FB6               	movwf	(??_pf_mount+10)& (0+255),b
  8624  0011C4  51AF               	movf	(??_pf_mount+3)& (0+255),w,b
  8625  0011C6  11B3               	iorwf	(??_pf_mount+7)& (0+255),w,b
  8626  0011C8  6FB7               	movwf	(??_pf_mount+11)& (0+255),b
  8627  0011CA  51B0               	movf	(??_pf_mount+4)& (0+255),w,b
  8628  0011CC  11B4               	iorwf	(??_pf_mount+8)& (0+255),w,b
  8629  0011CE  6FB8               	movwf	(??_pf_mount+12)& (0+255),b
  8630  0011D0  51B1               	movf	(??_pf_mount+5)& (0+255),w,b
  8631  0011D2  11B5               	iorwf	(??_pf_mount+9)& (0+255),w,b
  8632  0011D4  6FB9               	movwf	(??_pf_mount+13)& (0+255),b
  8633  0011D6  51AC               	movf	??_pf_mount& (0+255),w,b
  8634  0011D8  11B6               	iorwf	(??_pf_mount+10)& (0+255),w,b
  8635  0011DA  6FBA               	movwf	(??_pf_mount+14)& (0+255),b
  8636  0011DC  51AD               	movf	(??_pf_mount+1)& (0+255),w,b
  8637  0011DE  11B7               	iorwf	(??_pf_mount+11)& (0+255),w,b
  8638  0011E0  6FBB               	movwf	(??_pf_mount+15)& (0+255),b
  8639  0011E2  0E00               	movlw	0
  8640  0011E4  11B8               	iorwf	(??_pf_mount+12)& (0+255),w,b
  8641  0011E6  6FBC               	movwf	(??_pf_mount+16)& (0+255),b
  8642  0011E8  0E00               	movlw	0
  8643  0011EA  11B9               	iorwf	(??_pf_mount+13)& (0+255),w,b
  8644  0011EC  6FBD               	movwf	(??_pf_mount+17)& (0+255),b
  8645  0011EE  51D9               	movf	(pf_mount@buf+23)& (0+255),w,b
  8646  0011F0  11BA               	iorwf	(??_pf_mount+14)& (0+255),w,b
  8647  0011F2  6FF2               	movwf	pf_mount@fsize& (0+255),b
  8648  0011F4  51BB               	movf	(??_pf_mount+15)& (0+255),w,b
  8649  0011F6  6FF3               	movwf	(pf_mount@fsize+1)& (0+255),b
  8650  0011F8  51BC               	movf	(??_pf_mount+16)& (0+255),w,b
  8651  0011FA  6FF4               	movwf	(pf_mount@fsize+2)& (0+255),b
  8652  0011FC  51BD               	movf	(??_pf_mount+17)& (0+255),w,b
  8653  0011FE  6FF5               	movwf	(pf_mount@fsize+3)& (0+255),b
  8654  001200                     l7359:
  8655                           
  8656                           ; BSR set to: 0
  8657                           ;pff.c: 786:  fsize *= buf[16 -13];
  8658  001200  C0F2  F006         	movff	pf_mount@fsize,___lmul@multiplier
  8659  001204  C0F3  F007         	movff	pf_mount@fsize+1,___lmul@multiplier+1
  8660  001208  C0F4  F008         	movff	pf_mount@fsize+2,___lmul@multiplier+2
  8661  00120C  C0F5  F009         	movff	pf_mount@fsize+3,___lmul@multiplier+3
  8662  001210  51C5               	movf	(pf_mount@buf+3)& (0+255),w,b
  8663  001212  6E0A               	movwf	___lmul@multiplicand^0,c
  8664  001214  6A0B               	clrf	(___lmul@multiplicand+1)^0,c
  8665  001216  6A0C               	clrf	(___lmul@multiplicand+2)^0,c
  8666  001218  6A0D               	clrf	(___lmul@multiplicand+3)^0,c
  8667  00121A  EC39  F029         	call	___lmul	;wreg free
  8668  00121E  C006  F0F2         	movff	?___lmul,pf_mount@fsize
  8669  001222  C007  F0F3         	movff	?___lmul+1,pf_mount@fsize+1
  8670  001226  C008  F0F4         	movff	?___lmul+2,pf_mount@fsize+2
  8671  00122A  C009  F0F5         	movff	?___lmul+3,pf_mount@fsize+3
  8672  00122E                     
  8673                           ;pff.c: 787:  fs->fatbase = bsect + (WORD)(((WORD)*((BYTE*)(buf+14 -13)+1)<<8)|(WORD)*(B
      +                          YTE*)(buf+14 -13));
  8674  00122E  0100               	movlb	0	; () banked
  8675  001230  51C3               	movf	(pf_mount@buf+1)& (0+255),w,b
  8676  001232  C0C4  F0AC         	movff	pf_mount@buf+2,??_pf_mount
  8677  001236  6BAD               	clrf	(??_pf_mount+1)& (0+255),b
  8678  001238  C0AC  F0AD         	movff	??_pf_mount,??_pf_mount+1
  8679  00123C  6BAC               	clrf	??_pf_mount& (0+255),b
  8680  00123E  13AC               	iorwf	??_pf_mount& (0+255),f,b
  8681  001240  0E00               	movlw	0
  8682  001242  13AD               	iorwf	(??_pf_mount+1)& (0+255),f,b
  8683  001244  51AC               	movf	??_pf_mount& (0+255),w,b
  8684  001246  25EE               	addwf	pf_mount@bsect& (0+255),w,b
  8685  001248  6FAE               	movwf	(??_pf_mount+2)& (0+255),b
  8686  00124A  51AD               	movf	(??_pf_mount+1)& (0+255),w,b
  8687  00124C  21EF               	addwfc	(pf_mount@bsect+1)& (0+255),w,b
  8688  00124E  6FAF               	movwf	(??_pf_mount+3)& (0+255),b
  8689  001250  0E00               	movlw	0
  8690  001252  21F0               	addwfc	(pf_mount@bsect+2)& (0+255),w,b
  8691  001254  6FB0               	movwf	(??_pf_mount+4)& (0+255),b
  8692  001256  0E00               	movlw	0
  8693  001258  21F1               	addwfc	(pf_mount@bsect+3)& (0+255),w,b
  8694  00125A  6FB1               	movwf	(??_pf_mount+5)& (0+255),b
  8695  00125C  EE20 F00A          	lfsr	2,10
  8696  001260  51AA               	movf	pf_mount@fs& (0+255),w,b
  8697  001262  26D9               	addwf	fsr2l,f,c
  8698  001264  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  8699  001266  22DA               	addwfc	fsr2h,f,c
  8700  001268  C0AE  FFDE         	movff	??_pf_mount+2,postinc2
  8701  00126C  C0AF  FFDE         	movff	??_pf_mount+3,postinc2
  8702  001270  C0B0  FFDE         	movff	??_pf_mount+4,postinc2
  8703  001274  C0B1  FFDE         	movff	??_pf_mount+5,postinc2
  8704  001278                     
  8705                           ; BSR set to: 0
  8706                           ;pff.c: 788:  fs->csize = buf[13 -13];
  8707  001278  EE20 F002          	lfsr	2,2
  8708  00127C  51AA               	movf	pf_mount@fs& (0+255),w,b
  8709  00127E  26D9               	addwf	fsr2l,f,c
  8710  001280  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  8711  001282  22DA               	addwfc	fsr2h,f,c
  8712  001284  C0C2  FFDF         	movff	pf_mount@buf,indf2
  8713  001288                     
  8714                           ; BSR set to: 0
  8715                           ;pff.c: 789:  fs->n_rootdir = (WORD)(((WORD)*((BYTE*)(buf+17 -13)+1)<<8)|(WORD)*(BYTE*)(
      +                          buf+17 -13));
  8716  001288  51C6               	movf	(pf_mount@buf+4)& (0+255),w,b
  8717  00128A  C0C7  F0AC         	movff	pf_mount@buf+5,??_pf_mount
  8718  00128E  6BAD               	clrf	(??_pf_mount+1)& (0+255),b
  8719  001290  C0AC  F0AD         	movff	??_pf_mount,??_pf_mount+1
  8720  001294  6BAC               	clrf	??_pf_mount& (0+255),b
  8721  001296  13AC               	iorwf	??_pf_mount& (0+255),f,b
  8722  001298  0E00               	movlw	0
  8723  00129A  13AD               	iorwf	(??_pf_mount+1)& (0+255),f,b
  8724  00129C  EE20 F004          	lfsr	2,4
  8725  0012A0  51AA               	movf	pf_mount@fs& (0+255),w,b
  8726  0012A2  26D9               	addwf	fsr2l,f,c
  8727  0012A4  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  8728  0012A6  22DA               	addwfc	fsr2h,f,c
  8729  0012A8  C0AC  FFDE         	movff	??_pf_mount,postinc2
  8730  0012AC  C0AD  FFDD         	movff	??_pf_mount+1,postdec2
  8731  0012B0                     
  8732                           ; BSR set to: 0
  8733                           ;pff.c: 790:  tsect = (WORD)(((WORD)*((BYTE*)(buf+19 -13)+1)<<8)|(WORD)*(BYTE*)(buf+19 -
      +                          13));
  8734  0012B0  51C8               	movf	(pf_mount@buf+6)& (0+255),w,b
  8735  0012B2  C0C9  F0AC         	movff	pf_mount@buf+7,??_pf_mount
  8736  0012B6  6BAD               	clrf	(??_pf_mount+1)& (0+255),b
  8737  0012B8  C0AC  F0AD         	movff	??_pf_mount,??_pf_mount+1
  8738  0012BC  6BAC               	clrf	??_pf_mount& (0+255),b
  8739  0012BE  13AC               	iorwf	??_pf_mount& (0+255),f,b
  8740  0012C0  0E00               	movlw	0
  8741  0012C2  13AD               	iorwf	(??_pf_mount+1)& (0+255),f,b
  8742  0012C4  C0AC  F0E6         	movff	??_pf_mount,pf_mount@tsect
  8743  0012C8  C0AD  F0E7         	movff	??_pf_mount+1,pf_mount@tsect+1
  8744  0012CC  6BE8               	clrf	(pf_mount@tsect+2)& (0+255),b
  8745  0012CE  6BE9               	clrf	(pf_mount@tsect+3)& (0+255),b
  8746  0012D0                     
  8747                           ; BSR set to: 0
  8748                           ;pff.c: 791:  if (!tsect) tsect = (DWORD)(((DWORD)*((BYTE*)(buf+32 -13)+3)<<24)|((DWORD)
      +                          *((BYTE*)(buf+32 -13)+2)<<16)|((WORD)*((BYTE*)(buf+32 -13)+1)<<8)|*(BYTE*)(buf+32 -13));
  8749  0012D0  51E6               	movf	pf_mount@tsect& (0+255),w,b
  8750  0012D2  11E7               	iorwf	(pf_mount@tsect+1)& (0+255),w,b
  8751  0012D4  11E8               	iorwf	(pf_mount@tsect+2)& (0+255),w,b
  8752  0012D6  11E9               	iorwf	(pf_mount@tsect+3)& (0+255),w,b
  8753  0012D8  A4D8               	btfss	status,2,c
  8754  0012DA  EF71  F009         	goto	u9301
  8755  0012DE  EF73  F009         	goto	u9300
  8756  0012E2                     u9301:
  8757  0012E2  EFAC  F009         	goto	l7373
  8758  0012E6                     u9300:
  8759  0012E6                     
  8760                           ; BSR set to: 0
  8761  0012E6  51D6               	movf	(pf_mount@buf+20)& (0+255),w,b
  8762  0012E8  6FAD               	movwf	(??_pf_mount+1)& (0+255),b
  8763  0012EA  6BAC               	clrf	??_pf_mount& (0+255),b
  8764  0012EC  C0D7  F0AE         	movff	pf_mount@buf+21,??_pf_mount+2
  8765  0012F0  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8766  0012F2  6BB0               	clrf	(??_pf_mount+4)& (0+255),b
  8767  0012F4  6BB1               	clrf	(??_pf_mount+5)& (0+255),b
  8768  0012F6  C0AF  F0B1         	movff	??_pf_mount+3,??_pf_mount+5
  8769  0012FA  C0AE  F0B0         	movff	??_pf_mount+2,??_pf_mount+4
  8770  0012FE  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8771  001300  6BAE               	clrf	(??_pf_mount+2)& (0+255),b
  8772  001302  C0D8  F0B2         	movff	pf_mount@buf+22,??_pf_mount+6
  8773  001306  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8774  001308  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8775  00130A  6BB5               	clrf	(??_pf_mount+9)& (0+255),b
  8776  00130C  C0B2  F0B5         	movff	??_pf_mount+6,??_pf_mount+9
  8777  001310  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8778  001312  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8779  001314  6BB2               	clrf	(??_pf_mount+6)& (0+255),b
  8780  001316  51AE               	movf	(??_pf_mount+2)& (0+255),w,b
  8781  001318  11B2               	iorwf	(??_pf_mount+6)& (0+255),w,b
  8782  00131A  6FB6               	movwf	(??_pf_mount+10)& (0+255),b
  8783  00131C  51AF               	movf	(??_pf_mount+3)& (0+255),w,b
  8784  00131E  11B3               	iorwf	(??_pf_mount+7)& (0+255),w,b
  8785  001320  6FB7               	movwf	(??_pf_mount+11)& (0+255),b
  8786  001322  51B0               	movf	(??_pf_mount+4)& (0+255),w,b
  8787  001324  11B4               	iorwf	(??_pf_mount+8)& (0+255),w,b
  8788  001326  6FB8               	movwf	(??_pf_mount+12)& (0+255),b
  8789  001328  51B1               	movf	(??_pf_mount+5)& (0+255),w,b
  8790  00132A  11B5               	iorwf	(??_pf_mount+9)& (0+255),w,b
  8791  00132C  6FB9               	movwf	(??_pf_mount+13)& (0+255),b
  8792  00132E  51AC               	movf	??_pf_mount& (0+255),w,b
  8793  001330  11B6               	iorwf	(??_pf_mount+10)& (0+255),w,b
  8794  001332  6FBA               	movwf	(??_pf_mount+14)& (0+255),b
  8795  001334  51AD               	movf	(??_pf_mount+1)& (0+255),w,b
  8796  001336  11B7               	iorwf	(??_pf_mount+11)& (0+255),w,b
  8797  001338  6FBB               	movwf	(??_pf_mount+15)& (0+255),b
  8798  00133A  0E00               	movlw	0
  8799  00133C  11B8               	iorwf	(??_pf_mount+12)& (0+255),w,b
  8800  00133E  6FBC               	movwf	(??_pf_mount+16)& (0+255),b
  8801  001340  0E00               	movlw	0
  8802  001342  11B9               	iorwf	(??_pf_mount+13)& (0+255),w,b
  8803  001344  6FBD               	movwf	(??_pf_mount+17)& (0+255),b
  8804  001346  51D5               	movf	(pf_mount@buf+19)& (0+255),w,b
  8805  001348  11BA               	iorwf	(??_pf_mount+14)& (0+255),w,b
  8806  00134A  6FE6               	movwf	pf_mount@tsect& (0+255),b
  8807  00134C  51BB               	movf	(??_pf_mount+15)& (0+255),w,b
  8808  00134E  6FE7               	movwf	(pf_mount@tsect+1)& (0+255),b
  8809  001350  51BC               	movf	(??_pf_mount+16)& (0+255),w,b
  8810  001352  6FE8               	movwf	(pf_mount@tsect+2)& (0+255),b
  8811  001354  51BD               	movf	(??_pf_mount+17)& (0+255),w,b
  8812  001356  6FE9               	movwf	(pf_mount@tsect+3)& (0+255),b
  8813  001358                     l7373:
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;pff.c: 792:  mclst = (tsect
  8817  001358  EE20 F004          	lfsr	2,4
  8818  00135C  51AA               	movf	pf_mount@fs& (0+255),w,b
  8819  00135E  26D9               	addwf	fsr2l,f,c
  8820  001360  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  8821  001362  22DA               	addwfc	fsr2h,f,c
  8822  001364  CFDE F0AC          	movff	postinc2,??_pf_mount
  8823  001368  CFDD F0AD          	movff	postdec2,??_pf_mount+1
  8824  00136C  0E04               	movlw	4
  8825  00136E  6FAE               	movwf	(??_pf_mount+2)& (0+255),b
  8826  001370                     u9315:
  8827  001370  90D8               	bcf	status,0,c
  8828  001372  33AD               	rrcf	(??_pf_mount+1)& (0+255),f,b
  8829  001374  33AC               	rrcf	??_pf_mount& (0+255),f,b
  8830  001376  2FAE               	decfsz	(??_pf_mount+2)& (0+255),f,b
  8831  001378  EFB8  F009         	goto	u9315
  8832  00137C  51AC               	movf	??_pf_mount& (0+255),w,b
  8833  00137E  6FAF               	movwf	(??_pf_mount+3)& (0+255),b
  8834  001380  51AD               	movf	(??_pf_mount+1)& (0+255),w,b
  8835  001382  6FB0               	movwf	(??_pf_mount+4)& (0+255),b
  8836  001384  6BB1               	clrf	(??_pf_mount+5)& (0+255),b
  8837  001386  6BB2               	clrf	(??_pf_mount+6)& (0+255),b
  8838  001388  51C3               	movf	(pf_mount@buf+1)& (0+255),w,b
  8839  00138A  C0C4  F0B3         	movff	pf_mount@buf+2,??_pf_mount+7
  8840  00138E  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8841  001390  C0B3  F0B4         	movff	??_pf_mount+7,??_pf_mount+8
  8842  001394  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8843  001396  11B3               	iorwf	(??_pf_mount+7)& (0+255),w,b
  8844  001398  6FB5               	movwf	(??_pf_mount+9)& (0+255),b
  8845  00139A  51B4               	movf	(??_pf_mount+8)& (0+255),w,b
  8846  00139C  6FB6               	movwf	(??_pf_mount+10)& (0+255),b
  8847  00139E  6BB7               	clrf	(??_pf_mount+11)& (0+255),b
  8848  0013A0  6BB8               	clrf	(??_pf_mount+12)& (0+255),b
  8849  0013A2  1FB5               	comf	(??_pf_mount+9)& (0+255),f,b
  8850  0013A4  1FB6               	comf	(??_pf_mount+10)& (0+255),f,b
  8851  0013A6  1FB7               	comf	(??_pf_mount+11)& (0+255),f,b
  8852  0013A8  1FB8               	comf	(??_pf_mount+12)& (0+255),f,b
  8853  0013AA  2BB5               	incf	(??_pf_mount+9)& (0+255),f,b
  8854  0013AC  0E00               	movlw	0
  8855  0013AE  23B6               	addwfc	(??_pf_mount+10)& (0+255),f,b
  8856  0013B0  23B7               	addwfc	(??_pf_mount+11)& (0+255),f,b
  8857  0013B2  23B8               	addwfc	(??_pf_mount+12)& (0+255),f,b
  8858  0013B4  51F2               	movf	pf_mount@fsize& (0+255),w,b
  8859  0013B6  5DB5               	subwf	(??_pf_mount+9)& (0+255),w,b
  8860  0013B8  6FB9               	movwf	(??_pf_mount+13)& (0+255),b
  8861  0013BA  51F3               	movf	(pf_mount@fsize+1)& (0+255),w,b
  8862  0013BC  59B6               	subwfb	(??_pf_mount+10)& (0+255),w,b
  8863  0013BE  6FBA               	movwf	(??_pf_mount+14)& (0+255),b
  8864  0013C0  51F4               	movf	(pf_mount@fsize+2)& (0+255),w,b
  8865  0013C2  59B7               	subwfb	(??_pf_mount+11)& (0+255),w,b
  8866  0013C4  6FBB               	movwf	(??_pf_mount+15)& (0+255),b
  8867  0013C6  51F5               	movf	(pf_mount@fsize+3)& (0+255),w,b
  8868  0013C8  59B8               	subwfb	(??_pf_mount+12)& (0+255),w,b
  8869  0013CA  6FBC               	movwf	(??_pf_mount+16)& (0+255),b
  8870  0013CC  51AF               	movf	(??_pf_mount+3)& (0+255),w,b
  8871  0013CE  5DB9               	subwf	(??_pf_mount+13)& (0+255),w,b
  8872  0013D0  6FBD               	movwf	(??_pf_mount+17)& (0+255),b
  8873  0013D2  51B0               	movf	(??_pf_mount+4)& (0+255),w,b
  8874  0013D4  59BA               	subwfb	(??_pf_mount+14)& (0+255),w,b
  8875  0013D6  6FBE               	movwf	(??_pf_mount+18)& (0+255),b
  8876  0013D8  51B1               	movf	(??_pf_mount+5)& (0+255),w,b
  8877  0013DA  59BB               	subwfb	(??_pf_mount+15)& (0+255),w,b
  8878  0013DC  6FBF               	movwf	(??_pf_mount+19)& (0+255),b
  8879  0013DE  51B2               	movf	(??_pf_mount+6)& (0+255),w,b
  8880  0013E0  59BC               	subwfb	(??_pf_mount+16)& (0+255),w,b
  8881  0013E2  6FC0               	movwf	(??_pf_mount+20)& (0+255),b
  8882  0013E4  51E6               	movf	pf_mount@tsect& (0+255),w,b
  8883  0013E6  25BD               	addwf	(??_pf_mount+17)& (0+255),w,b
  8884  0013E8  6E06               	movwf	___lldiv@dividend^0,c
  8885  0013EA  51E7               	movf	(pf_mount@tsect+1)& (0+255),w,b
  8886  0013EC  21BE               	addwfc	(??_pf_mount+18)& (0+255),w,b
  8887  0013EE  6E07               	movwf	(___lldiv@dividend+1)^0,c
  8888  0013F0  51E8               	movf	(pf_mount@tsect+2)& (0+255),w,b
  8889  0013F2  21BF               	addwfc	(??_pf_mount+19)& (0+255),w,b
  8890  0013F4  6E08               	movwf	(___lldiv@dividend+2)^0,c
  8891  0013F6  51E9               	movf	(pf_mount@tsect+3)& (0+255),w,b
  8892  0013F8  21C0               	addwfc	(??_pf_mount+20)& (0+255),w,b
  8893  0013FA  6E09               	movwf	(___lldiv@dividend+3)^0,c
  8894  0013FC  EE20 F002          	lfsr	2,2
  8895  001400  51AA               	movf	pf_mount@fs& (0+255),w,b
  8896  001402  26D9               	addwf	fsr2l,f,c
  8897  001404  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  8898  001406  22DA               	addwfc	fsr2h,f,c
  8899  001408  50DF               	movf	indf2,w,c
  8900  00140A  6FC1               	movwf	(??_pf_mount+21)& (0+255),b
  8901  00140C  51C1               	movf	(??_pf_mount+21)& (0+255),w,b
  8902  00140E  6E0A               	movwf	___lldiv@divisor^0,c
  8903  001410  6A0B               	clrf	(___lldiv@divisor+1)^0,c
  8904  001412  6A0C               	clrf	(___lldiv@divisor+2)^0,c
  8905  001414  6A0D               	clrf	(___lldiv@divisor+3)^0,c
  8906  001416  EC52  F027         	call	___lldiv	;wreg free
  8907  00141A  0E02               	movlw	2
  8908  00141C  2406               	addwf	?___lldiv^0,w,c
  8909  00141E  0100               	movlb	0	; () banked
  8910  001420  6FEA               	movwf	pf_mount@mclst& (0+255),b
  8911  001422  0E00               	movlw	0
  8912  001424  2007               	addwfc	(?___lldiv+1)^0,w,c
  8913  001426  6FEB               	movwf	(pf_mount@mclst+1)& (0+255),b
  8914  001428  0E00               	movlw	0
  8915  00142A  2008               	addwfc	(?___lldiv+2)^0,w,c
  8916  00142C  6FEC               	movwf	(pf_mount@mclst+2)& (0+255),b
  8917  00142E  0E00               	movlw	0
  8918  001430  2009               	addwfc	(?___lldiv+3)^0,w,c
  8919  001432  6FED               	movwf	(pf_mount@mclst+3)& (0+255),b
  8920  001434                     
  8921                           ; BSR set to: 0
  8922                           ;pff.c: 795:  fs->n_fatent = (DWORD)mclst;
  8923  001434  EE20 F006          	lfsr	2,6
  8924  001438  51AA               	movf	pf_mount@fs& (0+255),w,b
  8925  00143A  26D9               	addwf	fsr2l,f,c
  8926  00143C  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  8927  00143E  22DA               	addwfc	fsr2h,f,c
  8928  001440  C0EA  FFDE         	movff	pf_mount@mclst,postinc2
  8929  001444  C0EB  FFDE         	movff	pf_mount@mclst+1,postinc2
  8930  001448  C0EC  FFDE         	movff	pf_mount@mclst+2,postinc2
  8931  00144C  C0ED  FFDE         	movff	pf_mount@mclst+3,postinc2
  8932  001450                     
  8933                           ; BSR set to: 0
  8934                           ;pff.c: 797:  fmt = 0;
  8935  001450  0E00               	movlw	0
  8936  001452  6FF6               	movwf	pf_mount@fmt& (0+255),b
  8937  001454                     
  8938                           ; BSR set to: 0
  8939  001454  51ED               	movf	(pf_mount@mclst+3)& (0+255),w,b
  8940  001456  11EC               	iorwf	(pf_mount@mclst+2)& (0+255),w,b
  8941  001458  E10B               	bnz	u9320
  8942  00145A  0EF7               	movlw	247
  8943  00145C  5DEA               	subwf	pf_mount@mclst& (0+255),w,b
  8944  00145E  0EFF               	movlw	255
  8945  001460  59EB               	subwfb	(pf_mount@mclst+1)& (0+255),w,b
  8946  001462  A0D8               	btfss	status,0,c
  8947  001464  EF36  F00A         	goto	u9321
  8948  001468  EF38  F00A         	goto	u9320
  8949  00146C                     u9321:
  8950  00146C  EF3A  F00A         	goto	l325
  8951  001470                     u9320:
  8952  001470                     
  8953                           ; BSR set to: 0
  8954                           ;pff.c: 803:   fmt = 3;
  8955  001470  0E03               	movlw	3
  8956  001472  6FF6               	movwf	pf_mount@fmt& (0+255),b
  8957  001474                     l325:
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;pff.c: 804:  if (!fmt) return FR_NO_FILESYSTEM;
  8961  001474  51F6               	movf	pf_mount@fmt& (0+255),w,b
  8962  001476  A4D8               	btfss	status,2,c
  8963  001478  EF40  F00A         	goto	u9331
  8964  00147C  EF42  F00A         	goto	u9330
  8965  001480                     u9331:
  8966  001480  EF44  F00A         	goto	l7397
  8967  001484                     u9330:
  8968  001484  EF88  F008         	goto	l7345
  8969  001488                     l7397:
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;pff.c: 805:  fs->fs_type = fmt;
  8973  001488  C0AA  FFD9         	movff	pf_mount@fs,fsr2l
  8974  00148C  C0AB  FFDA         	movff	pf_mount@fs+1,fsr2h
  8975  001490  C0F6  FFDF         	movff	pf_mount@fmt,indf2
  8976  001494                     
  8977                           ; BSR set to: 0
  8978                           ;pff.c: 808:   fs->dirbase = (DWORD)(((DWORD)*((BYTE*)(buf+(44 -13))+3)<<24)|((DWORD)*((
      +                          BYTE*)(buf+(44 -13))+2)<<16)|((WORD)*((BYTE*)(buf+(44 -13))+1)<<8)|*(BYTE*)(buf+(44 -13)
      +                          ));
  8979  001494  51E2               	movf	(pf_mount@buf+32)& (0+255),w,b
  8980  001496  6FAD               	movwf	(??_pf_mount+1)& (0+255),b
  8981  001498  6BAC               	clrf	??_pf_mount& (0+255),b
  8982  00149A  C0E3  F0AE         	movff	pf_mount@buf+33,??_pf_mount+2
  8983  00149E  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8984  0014A0  6BB0               	clrf	(??_pf_mount+4)& (0+255),b
  8985  0014A2  6BB1               	clrf	(??_pf_mount+5)& (0+255),b
  8986  0014A4  C0AF  F0B1         	movff	??_pf_mount+3,??_pf_mount+5
  8987  0014A8  C0AE  F0B0         	movff	??_pf_mount+2,??_pf_mount+4
  8988  0014AC  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8989  0014AE  6BAE               	clrf	(??_pf_mount+2)& (0+255),b
  8990  0014B0  C0E4  F0B2         	movff	pf_mount@buf+34,??_pf_mount+6
  8991  0014B4  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8992  0014B6  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8993  0014B8  6BB5               	clrf	(??_pf_mount+9)& (0+255),b
  8994  0014BA  C0B2  F0B5         	movff	??_pf_mount+6,??_pf_mount+9
  8995  0014BE  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8996  0014C0  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8997  0014C2  6BB2               	clrf	(??_pf_mount+6)& (0+255),b
  8998  0014C4  51AE               	movf	(??_pf_mount+2)& (0+255),w,b
  8999  0014C6  11B2               	iorwf	(??_pf_mount+6)& (0+255),w,b
  9000  0014C8  6FB6               	movwf	(??_pf_mount+10)& (0+255),b
  9001  0014CA  51AF               	movf	(??_pf_mount+3)& (0+255),w,b
  9002  0014CC  11B3               	iorwf	(??_pf_mount+7)& (0+255),w,b
  9003  0014CE  6FB7               	movwf	(??_pf_mount+11)& (0+255),b
  9004  0014D0  51B0               	movf	(??_pf_mount+4)& (0+255),w,b
  9005  0014D2  11B4               	iorwf	(??_pf_mount+8)& (0+255),w,b
  9006  0014D4  6FB8               	movwf	(??_pf_mount+12)& (0+255),b
  9007  0014D6  51B1               	movf	(??_pf_mount+5)& (0+255),w,b
  9008  0014D8  11B5               	iorwf	(??_pf_mount+9)& (0+255),w,b
  9009  0014DA  6FB9               	movwf	(??_pf_mount+13)& (0+255),b
  9010  0014DC  51AC               	movf	??_pf_mount& (0+255),w,b
  9011  0014DE  11B6               	iorwf	(??_pf_mount+10)& (0+255),w,b
  9012  0014E0  6FBA               	movwf	(??_pf_mount+14)& (0+255),b
  9013  0014E2  51AD               	movf	(??_pf_mount+1)& (0+255),w,b
  9014  0014E4  11B7               	iorwf	(??_pf_mount+11)& (0+255),w,b
  9015  0014E6  6FBB               	movwf	(??_pf_mount+15)& (0+255),b
  9016  0014E8  0E00               	movlw	0
  9017  0014EA  11B8               	iorwf	(??_pf_mount+12)& (0+255),w,b
  9018  0014EC  6FBC               	movwf	(??_pf_mount+16)& (0+255),b
  9019  0014EE  0E00               	movlw	0
  9020  0014F0  11B9               	iorwf	(??_pf_mount+13)& (0+255),w,b
  9021  0014F2  6FBD               	movwf	(??_pf_mount+17)& (0+255),b
  9022  0014F4  51E1               	movf	(pf_mount@buf+31)& (0+255),w,b
  9023  0014F6  11BA               	iorwf	(??_pf_mount+14)& (0+255),w,b
  9024  0014F8  6FBE               	movwf	(??_pf_mount+18)& (0+255),b
  9025  0014FA  51BB               	movf	(??_pf_mount+15)& (0+255),w,b
  9026  0014FC  6FBF               	movwf	(??_pf_mount+19)& (0+255),b
  9027  0014FE  51BC               	movf	(??_pf_mount+16)& (0+255),w,b
  9028  001500  6FC0               	movwf	(??_pf_mount+20)& (0+255),b
  9029  001502  51BD               	movf	(??_pf_mount+17)& (0+255),w,b
  9030  001504  6FC1               	movwf	(??_pf_mount+21)& (0+255),b
  9031  001506  EE20 F00E          	lfsr	2,14
  9032  00150A  51AA               	movf	pf_mount@fs& (0+255),w,b
  9033  00150C  26D9               	addwf	fsr2l,f,c
  9034  00150E  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  9035  001510  22DA               	addwfc	fsr2h,f,c
  9036  001512  C0BE  FFDE         	movff	??_pf_mount+18,postinc2
  9037  001516  C0BF  FFDE         	movff	??_pf_mount+19,postinc2
  9038  00151A  C0C0  FFDE         	movff	??_pf_mount+20,postinc2
  9039  00151E  C0C1  FFDE         	movff	??_pf_mount+21,postinc2
  9040  001522                     
  9041                           ; BSR set to: 0
  9042                           ;pff.c: 811:  fs->database = fs->fatbase + fsize + fs->n_rootdir / 16;
  9043  001522  EE20 F00A          	lfsr	2,10
  9044  001526  51AA               	movf	pf_mount@fs& (0+255),w,b
  9045  001528  26D9               	addwf	fsr2l,f,c
  9046  00152A  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  9047  00152C  22DA               	addwfc	fsr2h,f,c
  9048  00152E  CFDE F0AC          	movff	postinc2,??_pf_mount
  9049  001532  CFDE F0AD          	movff	postinc2,??_pf_mount+1
  9050  001536  CFDE F0AE          	movff	postinc2,??_pf_mount+2
  9051  00153A  CFDE F0AF          	movff	postinc2,??_pf_mount+3
  9052  00153E  EE20 F004          	lfsr	2,4
  9053  001542  51AA               	movf	pf_mount@fs& (0+255),w,b
  9054  001544  26D9               	addwf	fsr2l,f,c
  9055  001546  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  9056  001548  22DA               	addwfc	fsr2h,f,c
  9057  00154A  CFDE F0B0          	movff	postinc2,??_pf_mount+4
  9058  00154E  CFDD F0B1          	movff	postdec2,??_pf_mount+5
  9059  001552  0E04               	movlw	4
  9060  001554  6FB2               	movwf	(??_pf_mount+6)& (0+255),b
  9061  001556                     u9345:
  9062  001556  90D8               	bcf	status,0,c
  9063  001558  33B1               	rrcf	(??_pf_mount+5)& (0+255),f,b
  9064  00155A  33B0               	rrcf	(??_pf_mount+4)& (0+255),f,b
  9065  00155C  2FB2               	decfsz	(??_pf_mount+6)& (0+255),f,b
  9066  00155E  EFAB  F00A         	goto	u9345
  9067  001562  51B0               	movf	(??_pf_mount+4)& (0+255),w,b
  9068  001564  25AC               	addwf	??_pf_mount& (0+255),w,b
  9069  001566  6FB3               	movwf	(??_pf_mount+7)& (0+255),b
  9070  001568  51B1               	movf	(??_pf_mount+5)& (0+255),w,b
  9071  00156A  21AD               	addwfc	(??_pf_mount+1)& (0+255),w,b
  9072  00156C  6FB4               	movwf	(??_pf_mount+8)& (0+255),b
  9073  00156E  0E00               	movlw	0
  9074  001570  21AE               	addwfc	(??_pf_mount+2)& (0+255),w,b
  9075  001572  6FB5               	movwf	(??_pf_mount+9)& (0+255),b
  9076  001574  0E00               	movlw	0
  9077  001576  21AF               	addwfc	(??_pf_mount+3)& (0+255),w,b
  9078  001578  6FB6               	movwf	(??_pf_mount+10)& (0+255),b
  9079  00157A  51F2               	movf	pf_mount@fsize& (0+255),w,b
  9080  00157C  25B3               	addwf	(??_pf_mount+7)& (0+255),w,b
  9081  00157E  6FB7               	movwf	(??_pf_mount+11)& (0+255),b
  9082  001580  51F3               	movf	(pf_mount@fsize+1)& (0+255),w,b
  9083  001582  21B4               	addwfc	(??_pf_mount+8)& (0+255),w,b
  9084  001584  6FB8               	movwf	(??_pf_mount+12)& (0+255),b
  9085  001586  51F4               	movf	(pf_mount@fsize+2)& (0+255),w,b
  9086  001588  21B5               	addwfc	(??_pf_mount+9)& (0+255),w,b
  9087  00158A  6FB9               	movwf	(??_pf_mount+13)& (0+255),b
  9088  00158C  51F5               	movf	(pf_mount@fsize+3)& (0+255),w,b
  9089  00158E  21B6               	addwfc	(??_pf_mount+10)& (0+255),w,b
  9090  001590  6FBA               	movwf	(??_pf_mount+14)& (0+255),b
  9091  001592  EE20 F012          	lfsr	2,18
  9092  001596  51AA               	movf	pf_mount@fs& (0+255),w,b
  9093  001598  26D9               	addwf	fsr2l,f,c
  9094  00159A  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  9095  00159C  22DA               	addwfc	fsr2h,f,c
  9096  00159E  C0B7  FFDE         	movff	??_pf_mount+11,postinc2
  9097  0015A2  C0B8  FFDE         	movff	??_pf_mount+12,postinc2
  9098  0015A6  C0B9  FFDE         	movff	??_pf_mount+13,postinc2
  9099  0015AA  C0BA  FFDE         	movff	??_pf_mount+14,postinc2
  9100                           
  9101                           ;pff.c: 813:  fs->flag = 0;
  9102  0015AE  EE20 F001          	lfsr	2,1
  9103  0015B2  51AA               	movf	pf_mount@fs& (0+255),w,b
  9104  0015B4  26D9               	addwf	fsr2l,f,c
  9105  0015B6  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  9106  0015B8  22DA               	addwfc	fsr2h,f,c
  9107  0015BA  0E00               	movlw	0
  9108  0015BC  6EDF               	movwf	indf2,c
  9109  0015BE                     
  9110                           ; BSR set to: 0
  9111                           ;pff.c: 814:  FatFs = fs;
  9112  0015BE  C0AA  F0FD         	movff	pf_mount@fs,_FatFs
  9113  0015C2  C0AB  F0FE         	movff	pf_mount@fs+1,_FatFs+1
  9114  0015C6                     
  9115                           ; BSR set to: 0
  9116                           ;pff.c: 816:  return FR_OK;
  9117  0015C6  0E00               	movlw	0
  9118  0015C8                     l313:
  9119  0015C8  0012               	return		;funcret
  9120  0015CA                     __end_of_pf_mount:
  9121                           	callstack 0
  9122                           
  9123 ;; *************** function _disk_initialize *****************
  9124 ;; Defined at:
  9125 ;;		line 172 in file "pic_mmcp.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;		None
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;  ocr             4   21[COMRAM] unsigned char [4]
  9130 ;;  tmr             2   29[COMRAM] unsigned int 
  9131 ;;  n               1   31[COMRAM] unsigned char 
  9132 ;;  ty              1   28[COMRAM] unsigned char 
  9133 ;;  cmd             1   27[COMRAM] unsigned char 
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  1    wreg      unsigned char 
  9136 ;; Registers used:
  9137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9143 ;;      Params:         0       0       0       0       0       0       0
  9144 ;;      Locals:        11       0       0       0       0       0       0
  9145 ;;      Temps:          1       0       0       0       0       0       0
  9146 ;;      Totals:        12       0       0       0       0       0       0
  9147 ;;Total ram usage:       12 bytes
  9148 ;; Hardware stack levels used: 1
  9149 ;; Hardware stack levels required when called: 4
  9150 ;; This function calls:
  9151 ;;		_dly_100us
  9152 ;;		_init_spi
  9153 ;;		_rcv_spi
  9154 ;;		_send_cmd
  9155 ;; This function is called by:
  9156 ;;		_main
  9157 ;;		_pf_mount
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text27
  9162  00293A                     __ptext27:
  9163                           	callstack 0
  9164  00293A                     _disk_initialize:
  9165                           	callstack 25
  9166  00293A                     
  9167                           ;pic_mmcp.c: 174:  BYTE n, cmd, ty, ocr[4];;pic_mmcp.c: 175:  UINT tmr;;pic_mmcp.c: 182:
      +                            init_spi();
  9168  00293A  EC9B  F02B         	call	_init_spi	;wreg free
  9169  00293E                     
  9170                           ;pic_mmcp.c: 183:  LATAbits.LA5 = 1;
  9171  00293E  8A89               	bsf	137,5,c	;volatile
  9172  002940                     
  9173                           ;pic_mmcp.c: 184:  for (n = 10; n; n--)
  9174  002940  0E0A               	movlw	10
  9175  002942  6E20               	movwf	disk_initialize@n^0,c
  9176  002944  EFA7  F014         	goto	l4973
  9177  002948                     l4969:
  9178                           
  9179                           ;pic_mmcp.c: 185:         rcv_spi();
  9180  002948  EC7D  F02B         	call	_rcv_spi	;wreg free
  9181  00294C  0620               	decf	disk_initialize@n^0,f,c
  9182  00294E                     l4973:
  9183  00294E  5020               	movf	disk_initialize@n^0,w,c
  9184  002950  A4D8               	btfss	status,2,c
  9185  002952  EFAD  F014         	goto	u5541
  9186  002956  EFAF  F014         	goto	u5540
  9187  00295A                     u5541:
  9188  00295A  EFA4  F014         	goto	l4969
  9189  00295E                     u5540:
  9190  00295E                     
  9191                           ;pic_mmcp.c: 187:  ty = 0;
  9192  00295E  0E00               	movlw	0
  9193  002960  6E1D               	movwf	disk_initialize@ty^0,c
  9194  002962                     
  9195                           ;pic_mmcp.c: 188:  if (send_cmd((0x40+0), 0) == 1) {
  9196  002962  0E00               	movlw	0
  9197  002964  6E0E               	movwf	send_cmd@arg^0,c
  9198  002966  0E00               	movlw	0
  9199  002968  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9200  00296A  0E00               	movlw	0
  9201  00296C  6E10               	movwf	(send_cmd@arg+2)^0,c
  9202  00296E  0E00               	movlw	0
  9203  002970  6E11               	movwf	(send_cmd@arg+3)^0,c
  9204  002972  0E40               	movlw	64
  9205  002974  EC3C  F026         	call	_send_cmd
  9206  002978  06E8               	decf	wreg,f,c
  9207  00297A  A4D8               	btfss	status,2,c
  9208  00297C  EFC2  F014         	goto	u5551
  9209  002980  EFC4  F014         	goto	u5550
  9210  002984                     u5551:
  9211  002984  EFCD  F015         	goto	l5049
  9212  002988                     u5550:
  9213  002988                     
  9214                           ;pic_mmcp.c: 189:   if (send_cmd((0x40+8), 0x1AA) == 1) {
  9215  002988  0EAA               	movlw	170
  9216  00298A  6E0E               	movwf	send_cmd@arg^0,c
  9217  00298C  0E01               	movlw	1
  9218  00298E  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9219  002990  0E00               	movlw	0
  9220  002992  6E10               	movwf	(send_cmd@arg+2)^0,c
  9221  002994  0E00               	movlw	0
  9222  002996  6E11               	movwf	(send_cmd@arg+3)^0,c
  9223  002998  0E48               	movlw	72
  9224  00299A  EC3C  F026         	call	_send_cmd
  9225  00299E  06E8               	decf	wreg,f,c
  9226  0029A0  A4D8               	btfss	status,2,c
  9227  0029A2  EFD5  F014         	goto	u5561
  9228  0029A6  EFD7  F014         	goto	u5560
  9229  0029AA                     u5561:
  9230  0029AA  EF68  F015         	goto	l5029
  9231  0029AE                     u5560:
  9232  0029AE                     
  9233                           ;pic_mmcp.c: 190:    for (n = 0; n < 4; n++)
  9234  0029AE  0E00               	movlw	0
  9235  0029B0  6E20               	movwf	disk_initialize@n^0,c
  9236  0029B2                     l4987:
  9237                           
  9238                           ;pic_mmcp.c: 191:                 ocr[n] = rcv_spi();
  9239  0029B2  0E16               	movlw	low disk_initialize@ocr
  9240  0029B4  2420               	addwf	disk_initialize@n^0,w,c
  9241  0029B6  6ED9               	movwf	fsr2l,c
  9242  0029B8  6ADA               	clrf	fsr2h,c
  9243  0029BA  0E00               	movlw	high disk_initialize@ocr
  9244  0029BC  22DA               	addwfc	fsr2h,f,c
  9245  0029BE  EC7D  F02B         	call	_rcv_spi	;wreg free
  9246  0029C2  6EDF               	movwf	indf2,c
  9247  0029C4  2A20               	incf	disk_initialize@n^0,f,c
  9248  0029C6  0E03               	movlw	3
  9249  0029C8  6420               	cpfsgt	disk_initialize@n^0,c
  9250  0029CA  EFE9  F014         	goto	u5571
  9251  0029CE  EFEB  F014         	goto	u5570
  9252  0029D2                     u5571:
  9253  0029D2  EFD9  F014         	goto	l4987
  9254  0029D6                     u5570:
  9255  0029D6                     
  9256                           ;pic_mmcp.c: 192:    if (ocr[2] == 0x01 && ocr[3] == 0xAA) {
  9257  0029D6  0418               	decf	(disk_initialize@ocr+2)^0,w,c
  9258  0029D8  A4D8               	btfss	status,2,c
  9259  0029DA  EFF1  F014         	goto	u5581
  9260  0029DE  EFF3  F014         	goto	u5580
  9261  0029E2                     u5581:
  9262  0029E2  EFCD  F015         	goto	l5049
  9263  0029E6                     u5580:
  9264  0029E6  0EAA               	movlw	170
  9265  0029E8  1819               	xorwf	(disk_initialize@ocr+3)^0,w,c
  9266  0029EA  A4D8               	btfss	status,2,c
  9267  0029EC  EFFA  F014         	goto	u5591
  9268  0029F0  EFFC  F014         	goto	u5590
  9269  0029F4                     u5591:
  9270  0029F4  EFCD  F015         	goto	l5049
  9271  0029F8                     u5590:
  9272  0029F8                     
  9273                           ;pic_mmcp.c: 193:     for (tmr = 10000; tmr && send_cmd((0xC0+41), 1UL << 30); tmr--)
  9274  0029F8  0E27               	movlw	39
  9275  0029FA  6E1F               	movwf	(disk_initialize@tmr+1)^0,c
  9276  0029FC  0E10               	movlw	16
  9277  0029FE  6E1E               	movwf	disk_initialize@tmr^0,c
  9278  002A00  EF07  F015         	goto	l5003
  9279  002A04                     l4999:
  9280                           
  9281                           ;pic_mmcp.c: 194:                     dly_100us();
  9282  002A04  ECA0  F02B         	call	_dly_100us	;wreg free
  9283  002A08  061E               	decf	disk_initialize@tmr^0,f,c
  9284  002A0A  A0D8               	btfss	status,0,c
  9285  002A0C  061F               	decf	(disk_initialize@tmr+1)^0,f,c
  9286  002A0E                     l5003:
  9287  002A0E  501E               	movf	disk_initialize@tmr^0,w,c
  9288  002A10  101F               	iorwf	(disk_initialize@tmr+1)^0,w,c
  9289  002A12  B4D8               	btfsc	status,2,c
  9290  002A14  EF0E  F015         	goto	u5601
  9291  002A18  EF10  F015         	goto	u5600
  9292  002A1C                     u5601:
  9293  002A1C  EF23  F015         	goto	l5007
  9294  002A20                     u5600:
  9295  002A20  0E00               	movlw	0
  9296  002A22  6E0E               	movwf	send_cmd@arg^0,c
  9297  002A24  0E00               	movlw	0
  9298  002A26  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9299  002A28  0E00               	movlw	0
  9300  002A2A  6E10               	movwf	(send_cmd@arg+2)^0,c
  9301  002A2C  0E40               	movlw	64
  9302  002A2E  6E11               	movwf	(send_cmd@arg+3)^0,c
  9303  002A30  0EE9               	movlw	233
  9304  002A32  EC3C  F026         	call	_send_cmd
  9305  002A36  0900               	iorlw	0
  9306  002A38  A4D8               	btfss	status,2,c
  9307  002A3A  EF21  F015         	goto	u5611
  9308  002A3E  EF23  F015         	goto	u5610
  9309  002A42                     u5611:
  9310  002A42  EF02  F015         	goto	l4999
  9311  002A46                     u5610:
  9312  002A46                     l5007:
  9313                           
  9314                           ;pic_mmcp.c: 195:     if (tmr && send_cmd((0x40+58), 0) == 0) {
  9315  002A46  501E               	movf	disk_initialize@tmr^0,w,c
  9316  002A48  101F               	iorwf	(disk_initialize@tmr+1)^0,w,c
  9317  002A4A  B4D8               	btfsc	status,2,c
  9318  002A4C  EF2A  F015         	goto	u5621
  9319  002A50  EF2C  F015         	goto	u5620
  9320  002A54                     u5621:
  9321  002A54  EFCD  F015         	goto	l600
  9322  002A58                     u5620:
  9323  002A58  0E00               	movlw	0
  9324  002A5A  6E0E               	movwf	send_cmd@arg^0,c
  9325  002A5C  0E00               	movlw	0
  9326  002A5E  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9327  002A60  0E00               	movlw	0
  9328  002A62  6E10               	movwf	(send_cmd@arg+2)^0,c
  9329  002A64  0E00               	movlw	0
  9330  002A66  6E11               	movwf	(send_cmd@arg+3)^0,c
  9331  002A68  0E7A               	movlw	122
  9332  002A6A  EC3C  F026         	call	_send_cmd
  9333  002A6E  0900               	iorlw	0
  9334  002A70  A4D8               	btfss	status,2,c
  9335  002A72  EF3D  F015         	goto	u5631
  9336  002A76  EF3F  F015         	goto	u5630
  9337  002A7A                     u5631:
  9338  002A7A  EFCD  F015         	goto	l600
  9339  002A7E                     u5630:
  9340  002A7E                     
  9341                           ;pic_mmcp.c: 196:      for (n = 0; n < 4; n++)
  9342  002A7E  0E00               	movlw	0
  9343  002A80  6E20               	movwf	disk_initialize@n^0,c
  9344  002A82                     l5017:
  9345                           
  9346                           ;pic_mmcp.c: 197:                         ocr[n] = rcv_spi();
  9347  002A82  0E16               	movlw	low disk_initialize@ocr
  9348  002A84  2420               	addwf	disk_initialize@n^0,w,c
  9349  002A86  6ED9               	movwf	fsr2l,c
  9350  002A88  6ADA               	clrf	fsr2h,c
  9351  002A8A  0E00               	movlw	high disk_initialize@ocr
  9352  002A8C  22DA               	addwfc	fsr2h,f,c
  9353  002A8E  EC7D  F02B         	call	_rcv_spi	;wreg free
  9354  002A92  6EDF               	movwf	indf2,c
  9355  002A94  2A20               	incf	disk_initialize@n^0,f,c
  9356  002A96  0E03               	movlw	3
  9357  002A98  6420               	cpfsgt	disk_initialize@n^0,c
  9358  002A9A  EF51  F015         	goto	u5641
  9359  002A9E  EF53  F015         	goto	u5640
  9360  002AA2                     u5641:
  9361  002AA2  EF41  F015         	goto	l5017
  9362  002AA6                     u5640:
  9363  002AA6                     
  9364                           ;pic_mmcp.c: 198:      ty = (ocr[0] & 0x40) ? 0x04 | 0x08 : 0x04;
  9365  002AA6  BC16               	btfsc	disk_initialize@ocr^0,6,c
  9366  002AA8  EF58  F015         	goto	u5651
  9367  002AAC  EF5A  F015         	goto	u5650
  9368  002AB0                     u5651:
  9369  002AB0  EF60  F015         	goto	l5025
  9370  002AB4                     u5650:
  9371  002AB4  0E00               	movlw	0
  9372  002AB6  6E1B               	movwf	(_disk_initialize$1200+1)^0,c
  9373  002AB8  0E04               	movlw	4
  9374  002ABA  6E1A               	movwf	_disk_initialize$1200^0,c
  9375  002ABC  EF64  F015         	goto	l5027
  9376  002AC0                     l5025:
  9377  002AC0  0E00               	movlw	0
  9378  002AC2  6E1B               	movwf	(_disk_initialize$1200+1)^0,c
  9379  002AC4  0E0C               	movlw	12
  9380  002AC6  6E1A               	movwf	_disk_initialize$1200^0,c
  9381  002AC8                     l5027:
  9382  002AC8  C01A  F01D         	movff	_disk_initialize$1200,disk_initialize@ty
  9383  002ACC  EFCD  F015         	goto	l5049
  9384  002AD0                     l5029:
  9385                           
  9386                           ;pic_mmcp.c: 202:    if (send_cmd((0xC0+41), 0) <= 1) {
  9387  002AD0  0E00               	movlw	0
  9388  002AD2  6E0E               	movwf	send_cmd@arg^0,c
  9389  002AD4  0E00               	movlw	0
  9390  002AD6  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9391  002AD8  0E00               	movlw	0
  9392  002ADA  6E10               	movwf	(send_cmd@arg+2)^0,c
  9393  002ADC  0E00               	movlw	0
  9394  002ADE  6E11               	movwf	(send_cmd@arg+3)^0,c
  9395  002AE0  0EE9               	movlw	233
  9396  002AE2  EC3C  F026         	call	_send_cmd
  9397  002AE6  6E15               	movwf	??_disk_initialize^0,c
  9398  002AE8  0E02               	movlw	2
  9399  002AEA  6015               	cpfslt	??_disk_initialize^0,c
  9400  002AEC  EF7A  F015         	goto	u5661
  9401  002AF0  EF7C  F015         	goto	u5660
  9402  002AF4                     u5661:
  9403  002AF4  EF82  F015         	goto	l5033
  9404  002AF8                     u5660:
  9405  002AF8                     
  9406                           ;pic_mmcp.c: 203:     ty = 0x02; cmd = (0xC0+41);
  9407  002AF8  0E02               	movlw	2
  9408  002AFA  6E1D               	movwf	disk_initialize@ty^0,c
  9409  002AFC  0EE9               	movlw	233
  9410  002AFE  6E1C               	movwf	disk_initialize@cmd^0,c
  9411                           
  9412                           ;pic_mmcp.c: 204:    } else {
  9413  002B00  EF86  F015         	goto	l602
  9414  002B04                     l5033:
  9415                           
  9416                           ;pic_mmcp.c: 205:     ty = 0x01; cmd = (0x40+1);
  9417  002B04  0E01               	movlw	1
  9418  002B06  6E1D               	movwf	disk_initialize@ty^0,c
  9419  002B08  0E41               	movlw	65
  9420  002B0A  6E1C               	movwf	disk_initialize@cmd^0,c
  9421  002B0C                     l602:
  9422                           
  9423                           ;pic_mmcp.c: 207:    for (tmr = 10000; tmr && send_cmd(cmd, 0); tmr--)
  9424  002B0C  0E27               	movlw	39
  9425  002B0E  6E1F               	movwf	(disk_initialize@tmr+1)^0,c
  9426  002B10  0E10               	movlw	16
  9427  002B12  6E1E               	movwf	disk_initialize@tmr^0,c
  9428  002B14  EF91  F015         	goto	l5039
  9429  002B18                     l5035:
  9430                           
  9431                           ;pic_mmcp.c: 208:                 dly_100us();
  9432  002B18  ECA0  F02B         	call	_dly_100us	;wreg free
  9433  002B1C  061E               	decf	disk_initialize@tmr^0,f,c
  9434  002B1E  A0D8               	btfss	status,0,c
  9435  002B20  061F               	decf	(disk_initialize@tmr+1)^0,f,c
  9436  002B22                     l5039:
  9437  002B22  501E               	movf	disk_initialize@tmr^0,w,c
  9438  002B24  101F               	iorwf	(disk_initialize@tmr+1)^0,w,c
  9439  002B26  B4D8               	btfsc	status,2,c
  9440  002B28  EF98  F015         	goto	u5671
  9441  002B2C  EF9A  F015         	goto	u5670
  9442  002B30                     u5671:
  9443  002B30  EFAD  F015         	goto	l5043
  9444  002B34                     u5670:
  9445  002B34  0E00               	movlw	0
  9446  002B36  6E0E               	movwf	send_cmd@arg^0,c
  9447  002B38  0E00               	movlw	0
  9448  002B3A  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9449  002B3C  0E00               	movlw	0
  9450  002B3E  6E10               	movwf	(send_cmd@arg+2)^0,c
  9451  002B40  0E00               	movlw	0
  9452  002B42  6E11               	movwf	(send_cmd@arg+3)^0,c
  9453  002B44  501C               	movf	disk_initialize@cmd^0,w,c
  9454  002B46  EC3C  F026         	call	_send_cmd
  9455  002B4A  0900               	iorlw	0
  9456  002B4C  A4D8               	btfss	status,2,c
  9457  002B4E  EFAB  F015         	goto	u5681
  9458  002B52  EFAD  F015         	goto	u5680
  9459  002B56                     u5681:
  9460  002B56  EF8C  F015         	goto	l5035
  9461  002B5A                     u5680:
  9462  002B5A                     l5043:
  9463                           
  9464                           ;pic_mmcp.c: 209:    if (!tmr || send_cmd((0x40+16), 512) != 0)
  9465  002B5A  501E               	movf	disk_initialize@tmr^0,w,c
  9466  002B5C  101F               	iorwf	(disk_initialize@tmr+1)^0,w,c
  9467  002B5E  B4D8               	btfsc	status,2,c
  9468  002B60  EFB4  F015         	goto	u5691
  9469  002B64  EFB6  F015         	goto	u5690
  9470  002B68                     u5691:
  9471  002B68  EFC9  F015         	goto	l5047
  9472  002B6C                     u5690:
  9473  002B6C  0E00               	movlw	0
  9474  002B6E  6E0E               	movwf	send_cmd@arg^0,c
  9475  002B70  0E02               	movlw	2
  9476  002B72  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9477  002B74  0E00               	movlw	0
  9478  002B76  6E10               	movwf	(send_cmd@arg+2)^0,c
  9479  002B78  0E00               	movlw	0
  9480  002B7A  6E11               	movwf	(send_cmd@arg+3)^0,c
  9481  002B7C  0E50               	movlw	80
  9482  002B7E  EC3C  F026         	call	_send_cmd
  9483  002B82  0900               	iorlw	0
  9484  002B84  B4D8               	btfsc	status,2,c
  9485  002B86  EFC7  F015         	goto	u5701
  9486  002B8A  EFC9  F015         	goto	u5700
  9487  002B8E                     u5701:
  9488  002B8E  EFCD  F015         	goto	l5049
  9489  002B92                     u5700:
  9490  002B92                     l5047:
  9491                           
  9492                           ;pic_mmcp.c: 210:     ty = 0;
  9493  002B92  0E00               	movlw	0
  9494  002B94  6E1D               	movwf	disk_initialize@ty^0,c
  9495  002B96  EFCD  F015         	goto	l5049
  9496  002B9A                     l600:
  9497  002B9A                     l5049:
  9498                           
  9499                           ;pic_mmcp.c: 213:  CardType = ty;
  9500  002B9A  C01D  F0FF         	movff	disk_initialize@ty,_CardType
  9501  002B9E                     
  9502                           ;pic_mmcp.c: 214:  LATAbits.LA5 = 1;
  9503  002B9E  8A89               	bsf	137,5,c	;volatile
  9504  002BA0                     
  9505                           ;pic_mmcp.c: 215:  rcv_spi();
  9506  002BA0  EC7D  F02B         	call	_rcv_spi	;wreg free
  9507  002BA4                     
  9508                           ;pic_mmcp.c: 217:  return ty ? 0 : 0x01;
  9509  002BA4  501D               	movf	disk_initialize@ty^0,w,c
  9510  002BA6  B4D8               	btfsc	status,2,c
  9511  002BA8  EFD8  F015         	goto	u5711
  9512  002BAC  EFDB  F015         	goto	u5710
  9513  002BB0                     u5711:
  9514  002BB0  0E01               	movlw	1
  9515  002BB2  EFDC  F015         	goto	u5720
  9516  002BB6                     u5710:
  9517  002BB6  0E00               	movlw	0
  9518  002BB8                     u5720:
  9519  002BB8  0012               	return		;funcret
  9520  002BBA                     __end_of_disk_initialize:
  9521                           	callstack 0
  9522                           
  9523 ;; *************** function _init_spi *****************
  9524 ;; Defined at:
  9525 ;;		line 22 in file "pic_mmcp.c"
  9526 ;; Parameters:    Size  Location     Type
  9527 ;;		None
  9528 ;; Auto vars:     Size  Location     Type
  9529 ;;		None
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  1    wreg      void 
  9532 ;; Registers used:
  9533 ;;		wreg, status,2
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9539 ;;      Params:         0       0       0       0       0       0       0
  9540 ;;      Locals:         0       0       0       0       0       0       0
  9541 ;;      Temps:          0       0       0       0       0       0       0
  9542 ;;      Totals:         0       0       0       0       0       0       0
  9543 ;;Total ram usage:        0 bytes
  9544 ;; Hardware stack levels used: 1
  9545 ;; Hardware stack levels required when called: 1
  9546 ;; This function calls:
  9547 ;;		Nothing
  9548 ;; This function is called by:
  9549 ;;		_disk_initialize
  9550 ;; This function uses a non-reentrant model
  9551 ;;
  9552                           
  9553                           	psect	text28
  9554  005736                     __ptext28:
  9555                           	callstack 0
  9556  005736                     _init_spi:
  9557                           	callstack 27
  9558  005736                     
  9559                           ;pic_mmcp.c: 24:     SSPCON1 = 0x31;
  9560  005736  0E31               	movlw	49
  9561  005738  6EC6               	movwf	198,c	;volatile
  9562                           
  9563                           ;pic_mmcp.c: 32:     SSPSTAT = 0x80;
  9564  00573A  0E80               	movlw	128
  9565  00573C  6EC7               	movwf	199,c	;volatile
  9566  00573E  0012               	return		;funcret
  9567  005740                     __end_of_init_spi:
  9568                           	callstack 0
  9569                           
  9570 ;; *************** function _dly_100us *****************
  9571 ;; Defined at:
  9572 ;;		line 40 in file "pic_mmcp.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;		None
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;		None
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  1    wreg      void 
  9579 ;; Registers used:
  9580 ;;		wreg
  9581 ;; Tracked objects:
  9582 ;;		On entry : 0/0
  9583 ;;		On exit  : 0/0
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9586 ;;      Params:         0       0       0       0       0       0       0
  9587 ;;      Locals:         0       0       0       0       0       0       0
  9588 ;;      Temps:          0       0       0       0       0       0       0
  9589 ;;      Totals:         0       0       0       0       0       0       0
  9590 ;;Total ram usage:        0 bytes
  9591 ;; Hardware stack levels used: 1
  9592 ;; Hardware stack levels required when called: 1
  9593 ;; This function calls:
  9594 ;;		Nothing
  9595 ;; This function is called by:
  9596 ;;		_disk_initialize
  9597 ;; This function uses a non-reentrant model
  9598 ;;
  9599                           
  9600                           	psect	text29
  9601  005740                     __ptext29:
  9602                           	callstack 0
  9603  005740                     _dly_100us:
  9604                           	callstack 27
  9605  005740                     
  9606                           ;pic_mmcp.c: 42:     _delay((unsigned long)((100)*(40000000/4000000.0)));
  9607  005740  0EC8               	movlw	200
  9608  005742                     u10047:
  9609  005742  D000               	nop2	
  9610  005744  2EE8               	decfsz	wreg,f,c
  9611  005746  D7FD               	bra	u10047
  9612  005748  0012               	return		;funcret
  9613  00574A                     __end_of_dly_100us:
  9614                           	callstack 0
  9615                           
  9616 ;; *************** function _check_fs *****************
  9617 ;; Defined at:
  9618 ;;		line 718 in file "pff.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;  buf             2   32[BANK0 ] PTR unsigned char 
  9621 ;;		 -> pf_mount@buf(36), 
  9622 ;;  sect            4   34[BANK0 ] unsigned long 
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;		None
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  1    wreg      unsigned char 
  9627 ;; Registers used:
  9628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9634 ;;      Params:         0       6       0       0       0       0       0
  9635 ;;      Locals:         0       0       0       0       0       0       0
  9636 ;;      Temps:          0       4       0       0       0       0       0
  9637 ;;      Totals:         0      10       0       0       0       0       0
  9638 ;;Total ram usage:       10 bytes
  9639 ;; Hardware stack levels used: 1
  9640 ;; Hardware stack levels required when called: 10
  9641 ;; This function calls:
  9642 ;;		_disk_readp
  9643 ;; This function is called by:
  9644 ;;		_pf_mount
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           	psect	text30
  9649  004520                     __ptext30:
  9650                           	callstack 0
  9651  004520                     _check_fs:
  9652                           	callstack 19
  9653  004520                     
  9654                           ;pff.c: 719:  BYTE *buf,;pff.c: 720:  DWORD sect;pff.c: 722: {;pff.c: 723:  if (disk_rea
      +                          dp(buf, sect, 510, 2))
  9655  004520  C0A0  F090         	movff	check_fs@buf,disk_readp@buff
  9656  004524  C0A1  F091         	movff	check_fs@buf+1,disk_readp@buff+1
  9657  004528  C0A2  F092         	movff	check_fs@sect,disk_readp@sector
  9658  00452C  C0A3  F093         	movff	check_fs@sect+1,disk_readp@sector+1
  9659  004530  C0A4  F094         	movff	check_fs@sect+2,disk_readp@sector+2
  9660  004534  C0A5  F095         	movff	check_fs@sect+3,disk_readp@sector+3
  9661  004538  0E01               	movlw	1
  9662  00453A  0100               	movlb	0	; () banked
  9663  00453C  6F97               	movwf	(disk_readp@offset+1)& (0+255),b
  9664  00453E  0EFE               	movlw	254
  9665  004540  6F96               	movwf	disk_readp@offset& (0+255),b
  9666  004542  0E00               	movlw	0
  9667  004544  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  9668  004546  0E02               	movlw	2
  9669  004548  6F98               	movwf	disk_readp@count& (0+255),b
  9670  00454A  EC65  F01B         	call	_disk_readp	;wreg free
  9671  00454E  0900               	iorlw	0
  9672  004550  B4D8               	btfsc	status,2,c
  9673  004552  EFAD  F022         	goto	u9031
  9674  004556  EFAF  F022         	goto	u9030
  9675  00455A                     u9031:
  9676  00455A  EFB2  F022         	goto	l7171
  9677  00455E                     u9030:
  9678  00455E                     
  9679                           ;pff.c: 724:   return 3;
  9680  00455E  0E03               	movlw	3
  9681  004560  EF1D  F023         	goto	l306
  9682  004564                     l7171:
  9683                           
  9684                           ;pff.c: 725:  if ((WORD)(((WORD)*((BYTE*)(buf)+1)<<8)|(WORD)*(BYTE*)(buf)) != 0xAA55)
  9685  004564  0100               	movlb	0	; () banked
  9686  004566  EE20 F001          	lfsr	2,1
  9687  00456A  51A0               	movf	check_fs@buf& (0+255),w,b
  9688  00456C  26D9               	addwf	fsr2l,f,c
  9689  00456E  51A1               	movf	(check_fs@buf+1)& (0+255),w,b
  9690  004570  22DA               	addwfc	fsr2h,f,c
  9691  004572  50DF               	movf	indf2,w,c
  9692  004574  6FA6               	movwf	??_check_fs& (0+255),b
  9693  004576  51A6               	movf	??_check_fs& (0+255),w,b
  9694  004578  6FA8               	movwf	(??_check_fs+2)& (0+255),b
  9695  00457A  6BA7               	clrf	(??_check_fs+1)& (0+255),b
  9696  00457C  C0A0  FFD9         	movff	check_fs@buf,fsr2l
  9697  004580  C0A1  FFDA         	movff	check_fs@buf+1,fsr2h
  9698  004584  50DF               	movf	indf2,w,c
  9699  004586  6FA9               	movwf	(??_check_fs+3)& (0+255),b
  9700  004588  51A9               	movf	(??_check_fs+3)& (0+255),w,b
  9701  00458A  13A7               	iorwf	(??_check_fs+1)& (0+255),f,b
  9702  00458C  0E00               	movlw	0
  9703  00458E  13A8               	iorwf	(??_check_fs+2)& (0+255),f,b
  9704  004590  0E55               	movlw	85
  9705  004592  19A7               	xorwf	(??_check_fs+1)& (0+255),w,b
  9706  004594  E109               	bnz	u9040
  9707  004596  0EAA               	movlw	170
  9708  004598  19A8               	xorwf	(??_check_fs+2)& (0+255),w,b
  9709  00459A  B4D8               	btfsc	status,2,c
  9710  00459C  EFD2  F022         	goto	u9041
  9711  0045A0  EFD4  F022         	goto	u9040
  9712  0045A4                     u9041:
  9713  0045A4  EFDA  F022         	goto	l7185
  9714  0045A8                     u9040:
  9715  0045A8                     
  9716                           ; BSR set to: 0
  9717                           ;pff.c: 726:   return 2;
  9718  0045A8  0E02               	movlw	2
  9719  0045AA  EF1D  F023         	goto	l306
  9720  0045AE                     l7181:
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;pff.c: 729:   return 0;
  9724  0045AE  0E00               	movlw	0
  9725  0045B0  EF1D  F023         	goto	l306
  9726  0045B4                     l7185:
  9727                           
  9728                           ; BSR set to: 0
  9729  0045B4  C0A0  F090         	movff	check_fs@buf,disk_readp@buff
  9730  0045B8  C0A1  F091         	movff	check_fs@buf+1,disk_readp@buff+1
  9731  0045BC  C0A2  F092         	movff	check_fs@sect,disk_readp@sector
  9732  0045C0  C0A3  F093         	movff	check_fs@sect+1,disk_readp@sector+1
  9733  0045C4  C0A4  F094         	movff	check_fs@sect+2,disk_readp@sector+2
  9734  0045C8  C0A5  F095         	movff	check_fs@sect+3,disk_readp@sector+3
  9735  0045CC  0E00               	movlw	0
  9736  0045CE  6F97               	movwf	(disk_readp@offset+1)& (0+255),b
  9737  0045D0  0E52               	movlw	82
  9738  0045D2  6F96               	movwf	disk_readp@offset& (0+255),b
  9739  0045D4  0E00               	movlw	0
  9740  0045D6  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  9741  0045D8  0E02               	movlw	2
  9742  0045DA  6F98               	movwf	disk_readp@count& (0+255),b
  9743  0045DC  EC65  F01B         	call	_disk_readp	;wreg free
  9744  0045E0  0900               	iorlw	0
  9745  0045E2  A4D8               	btfss	status,2,c
  9746  0045E4  EFF6  F022         	goto	u9051
  9747  0045E8  EFF8  F022         	goto	u9050
  9748  0045EC                     u9051:
  9749  0045EC  EF1C  F023         	goto	l7193
  9750  0045F0                     u9050:
  9751  0045F0  0100               	movlb	0	; () banked
  9752  0045F2  EE20 F001          	lfsr	2,1
  9753  0045F6  51A0               	movf	check_fs@buf& (0+255),w,b
  9754  0045F8  26D9               	addwf	fsr2l,f,c
  9755  0045FA  51A1               	movf	(check_fs@buf+1)& (0+255),w,b
  9756  0045FC  22DA               	addwfc	fsr2h,f,c
  9757  0045FE  50DF               	movf	indf2,w,c
  9758  004600  6FA6               	movwf	??_check_fs& (0+255),b
  9759  004602  51A6               	movf	??_check_fs& (0+255),w,b
  9760  004604  6FA8               	movwf	(??_check_fs+2)& (0+255),b
  9761  004606  6BA7               	clrf	(??_check_fs+1)& (0+255),b
  9762  004608  C0A0  FFD9         	movff	check_fs@buf,fsr2l
  9763  00460C  C0A1  FFDA         	movff	check_fs@buf+1,fsr2h
  9764  004610  50DF               	movf	indf2,w,c
  9765  004612  6FA9               	movwf	(??_check_fs+3)& (0+255),b
  9766  004614  51A9               	movf	(??_check_fs+3)& (0+255),w,b
  9767  004616  13A7               	iorwf	(??_check_fs+1)& (0+255),f,b
  9768  004618  0E00               	movlw	0
  9769  00461A  13A8               	iorwf	(??_check_fs+2)& (0+255),f,b
  9770  00461C  0E46               	movlw	70
  9771  00461E  19A7               	xorwf	(??_check_fs+1)& (0+255),w,b
  9772  004620  E107               	bnz	u9061
  9773  004622  0E41               	movlw	65
  9774  004624  19A8               	xorwf	(??_check_fs+2)& (0+255),w,b
  9775  004626  A4D8               	btfss	status,2,c
  9776  004628  EF18  F023         	goto	u9061
  9777  00462C  EF1A  F023         	goto	u9060
  9778  004630                     u9061:
  9779  004630  EF1C  F023         	goto	l7193
  9780  004634                     u9060:
  9781  004634  EFD7  F022         	goto	l7181
  9782  004638                     l7193:
  9783                           
  9784                           ;pff.c: 732:  return 1;
  9785  004638  0E01               	movlw	1
  9786  00463A                     l306:
  9787  00463A  0012               	return		;funcret
  9788  00463C                     __end_of_check_fs:
  9789                           	callstack 0
  9790                           
  9791 ;; *************** function _pf_lseek *****************
  9792 ;; Defined at:
  9793 ;;		line 1000 in file "pff.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;  ofs             4   64[BANK0 ] unsigned long 
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;  clst            4   97[BANK0 ] unsigned long 
  9798 ;;  bcs             4   93[BANK0 ] unsigned long 
  9799 ;;  ifptr           4   89[BANK0 ] unsigned long 
  9800 ;;  sect            4   85[BANK0 ] unsigned long 
  9801 ;;  fs              2  101[BANK0 ] PTR struct .
  9802 ;;		 -> NULL(0), main@fs(42), 
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  1    wreg      enum E3114
  9805 ;; Registers used:
  9806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9812 ;;      Params:         0       4       0       0       0       0       0
  9813 ;;      Locals:         0      18       0       0       0       0       0
  9814 ;;      Temps:          0      17       0       0       0       0       0
  9815 ;;      Totals:         0      39       0       0       0       0       0
  9816 ;;Total ram usage:       39 bytes
  9817 ;; Hardware stack levels used: 1
  9818 ;; Hardware stack levels required when called: 11
  9819 ;; This function calls:
  9820 ;;		___lldiv
  9821 ;;		_clust2sect
  9822 ;;		_get_fat
  9823 ;; This function is called by:
  9824 ;;		_main
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827                           
  9828                           	psect	text31
  9829  0015CA                     __ptext31:
  9830                           	callstack 0
  9831  0015CA                     _pf_lseek:
  9832                           	callstack 19
  9833  0015CA                     
  9834                           ;pff.c: 1001:  DWORD ofs;pff.c: 1003: {;pff.c: 1004:  DWORD clst;;pff.c: 1005:  DWORD bc
      +                          s, sect, ifptr;;pff.c: 1006:  FATFS *fs = FatFs;
  9835  0015CA  C0FD  F0E5         	movff	_FatFs,pf_lseek@fs
  9836  0015CE  C0FE  F0E6         	movff	_FatFs+1,pf_lseek@fs+1
  9837                           
  9838                           ;pff.c: 1009:  if (!fs) return FR_NOT_ENABLED;
  9839  0015D2  0100               	movlb	0	; () banked
  9840  0015D4  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9841  0015D6  11E6               	iorwf	(pf_lseek@fs+1)& (0+255),w,b
  9842  0015D8  A4D8               	btfss	status,2,c
  9843  0015DA  EFF1  F00A         	goto	u9521
  9844  0015DE  EFF3  F00A         	goto	u9520
  9845  0015E2                     u9521:
  9846  0015E2  EFF6  F00A         	goto	l7545
  9847  0015E6                     u9520:
  9848  0015E6                     
  9849                           ; BSR set to: 0
  9850  0015E6  0E05               	movlw	5
  9851  0015E8  EF2C  F00D         	goto	l363
  9852  0015EC                     l7545:
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;pff.c: 1010:  if (!(fs->flag & 0x01))
  9856  0015EC  EE20 F001          	lfsr	2,1
  9857  0015F0  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9858  0015F2  26D9               	addwf	fsr2l,f,c
  9859  0015F4  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
  9860  0015F6  22DA               	addwfc	fsr2h,f,c
  9861  0015F8  B0DF               	btfsc	indf2,0,c
  9862  0015FA  EF01  F00B         	goto	u9531
  9863  0015FE  EF03  F00B         	goto	u9530
  9864  001602                     u9531:
  9865  001602  EF06  F00B         	goto	l7551
  9866  001606                     u9530:
  9867  001606                     
  9868                           ; BSR set to: 0
  9869                           ;pff.c: 1011:    return FR_NOT_OPENED;
  9870  001606  0E04               	movlw	4
  9871  001608  EF2C  F00D         	goto	l363
  9872  00160C                     l7551:
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;pff.c: 1013:  if (ofs > fs->fsize) ofs = fs->fsize;
  9876  00160C  EE20 F01A          	lfsr	2,26
  9877  001610  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9878  001612  26D9               	addwf	fsr2l,f,c
  9879  001614  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
  9880  001616  22DA               	addwfc	fsr2h,f,c
  9881  001618  51C0               	movf	pf_lseek@ofs& (0+255),w,b
  9882  00161A  5CDE               	subwf	postinc2,w,c
  9883  00161C  51C1               	movf	(pf_lseek@ofs+1)& (0+255),w,b
  9884  00161E  58DE               	subwfb	postinc2,w,c
  9885  001620  51C2               	movf	(pf_lseek@ofs+2)& (0+255),w,b
  9886  001622  58DE               	subwfb	postinc2,w,c
  9887  001624  51C3               	movf	(pf_lseek@ofs+3)& (0+255),w,b
  9888  001626  58DE               	subwfb	postinc2,w,c
  9889  001628  B0D8               	btfsc	status,0,c
  9890  00162A  EF19  F00B         	goto	u9541
  9891  00162E  EF1B  F00B         	goto	u9540
  9892  001632                     u9541:
  9893  001632  EF29  F00B         	goto	l365
  9894  001636                     u9540:
  9895  001636                     
  9896                           ; BSR set to: 0
  9897  001636  EE20 F01A          	lfsr	2,26
  9898  00163A  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9899  00163C  26D9               	addwf	fsr2l,f,c
  9900  00163E  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
  9901  001640  22DA               	addwfc	fsr2h,f,c
  9902  001642  CFDE F0C0          	movff	postinc2,pf_lseek@ofs
  9903  001646  CFDE F0C1          	movff	postinc2,pf_lseek@ofs+1
  9904  00164A  CFDE F0C2          	movff	postinc2,pf_lseek@ofs+2
  9905  00164E  CFDE F0C3          	movff	postinc2,pf_lseek@ofs+3
  9906  001652                     l365:
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;pff.c: 1014:  ifptr = fs->fptr;
  9910  001652  EE20 F016          	lfsr	2,22
  9911  001656  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9912  001658  26D9               	addwf	fsr2l,f,c
  9913  00165A  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
  9914  00165C  22DA               	addwfc	fsr2h,f,c
  9915  00165E  CFDE F0D9          	movff	postinc2,pf_lseek@ifptr
  9916  001662  CFDE F0DA          	movff	postinc2,pf_lseek@ifptr+1
  9917  001666  CFDE F0DB          	movff	postinc2,pf_lseek@ifptr+2
  9918  00166A  CFDE F0DC          	movff	postinc2,pf_lseek@ifptr+3
  9919                           
  9920                           ;pff.c: 1015:  fs->fptr = 0;
  9921  00166E  EE20 F016          	lfsr	2,22
  9922  001672  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9923  001674  26D9               	addwf	fsr2l,f,c
  9924  001676  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
  9925  001678  22DA               	addwfc	fsr2h,f,c
  9926  00167A  6ADE               	clrf	postinc2,c
  9927  00167C  6ADE               	clrf	postinc2,c
  9928  00167E  6ADE               	clrf	postinc2,c
  9929  001680  6ADD               	clrf	postdec2,c
  9930  001682                     
  9931                           ; BSR set to: 0
  9932                           ;pff.c: 1016:  if (ofs > 0) {
  9933  001682  51C0               	movf	pf_lseek@ofs& (0+255),w,b
  9934  001684  11C1               	iorwf	(pf_lseek@ofs+1)& (0+255),w,b
  9935  001686  11C2               	iorwf	(pf_lseek@ofs+2)& (0+255),w,b
  9936  001688  11C3               	iorwf	(pf_lseek@ofs+3)& (0+255),w,b
  9937  00168A  B4D8               	btfsc	status,2,c
  9938  00168C  EF4A  F00B         	goto	u9551
  9939  001690  EF4C  F00B         	goto	u9550
  9940  001694                     u9551:
  9941  001694  EF2B  F00D         	goto	l7599
  9942  001698                     u9550:
  9943  001698                     
  9944                           ; BSR set to: 0
  9945                           ;pff.c: 1017:   bcs = (DWORD)fs->csize * 512;
  9946  001698  EE20 F002          	lfsr	2,2
  9947  00169C  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9948  00169E  26D9               	addwf	fsr2l,f,c
  9949  0016A0  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
  9950  0016A2  22DA               	addwfc	fsr2h,f,c
  9951  0016A4  50DF               	movf	indf2,w,c
  9952  0016A6  6FC4               	movwf	??_pf_lseek& (0+255),b
  9953  0016A8  C0C4  F0C5         	movff	??_pf_lseek,??_pf_lseek+1
  9954  0016AC  6BC6               	clrf	(??_pf_lseek+2)& (0+255),b
  9955  0016AE  6BC7               	clrf	(??_pf_lseek+3)& (0+255),b
  9956  0016B0  6BC8               	clrf	(??_pf_lseek+4)& (0+255),b
  9957  0016B2  0E09               	movlw	9
  9958  0016B4                     u9565:
  9959  0016B4  90D8               	bcf	status,0,c
  9960  0016B6  37C5               	rlcf	(??_pf_lseek+1)& (0+255),f,b
  9961  0016B8  37C6               	rlcf	(??_pf_lseek+2)& (0+255),f,b
  9962  0016BA  37C7               	rlcf	(??_pf_lseek+3)& (0+255),f,b
  9963  0016BC  37C8               	rlcf	(??_pf_lseek+4)& (0+255),f,b
  9964  0016BE  2EE8               	decfsz	wreg,f,c
  9965  0016C0  EF5A  F00B         	goto	u9565
  9966  0016C4  C0C5  F0DD         	movff	??_pf_lseek+1,pf_lseek@bcs
  9967  0016C8  C0C6  F0DE         	movff	??_pf_lseek+2,pf_lseek@bcs+1
  9968  0016CC  C0C7  F0DF         	movff	??_pf_lseek+3,pf_lseek@bcs+2
  9969  0016D0  C0C8  F0E0         	movff	??_pf_lseek+4,pf_lseek@bcs+3
  9970  0016D4                     
  9971                           ; BSR set to: 0
  9972                           ;pff.c: 1018:   if (ifptr > 0 &&
  9973  0016D4  51D9               	movf	pf_lseek@ifptr& (0+255),w,b
  9974  0016D6  11DA               	iorwf	(pf_lseek@ifptr+1)& (0+255),w,b
  9975  0016D8  11DB               	iorwf	(pf_lseek@ifptr+2)& (0+255),w,b
  9976  0016DA  11DC               	iorwf	(pf_lseek@ifptr+3)& (0+255),w,b
  9977  0016DC  B4D8               	btfsc	status,2,c
  9978  0016DE  EF73  F00B         	goto	u9571
  9979  0016E2  EF75  F00B         	goto	u9570
  9980  0016E6                     u9571:
  9981  0016E6  EF12  F00C         	goto	l7565
  9982  0016EA                     u9570:
  9983  0016EA                     
  9984                           ; BSR set to: 0
  9985  0016EA  0EFF               	movlw	255
  9986  0016EC  25C0               	addwf	pf_lseek@ofs& (0+255),w,b
  9987  0016EE  6E06               	movwf	___lldiv@dividend^0,c
  9988  0016F0  0EFF               	movlw	255
  9989  0016F2  21C1               	addwfc	(pf_lseek@ofs+1)& (0+255),w,b
  9990  0016F4  6E07               	movwf	(___lldiv@dividend+1)^0,c
  9991  0016F6  0EFF               	movlw	255
  9992  0016F8  21C2               	addwfc	(pf_lseek@ofs+2)& (0+255),w,b
  9993  0016FA  6E08               	movwf	(___lldiv@dividend+2)^0,c
  9994  0016FC  0EFF               	movlw	255
  9995  0016FE  21C3               	addwfc	(pf_lseek@ofs+3)& (0+255),w,b
  9996  001700  6E09               	movwf	(___lldiv@dividend+3)^0,c
  9997  001702  C0DD  F00A         	movff	pf_lseek@bcs,___lldiv@divisor
  9998  001706  C0DE  F00B         	movff	pf_lseek@bcs+1,___lldiv@divisor+1
  9999  00170A  C0DF  F00C         	movff	pf_lseek@bcs+2,___lldiv@divisor+2
 10000  00170E  C0E0  F00D         	movff	pf_lseek@bcs+3,___lldiv@divisor+3
 10001  001712  EC52  F027         	call	___lldiv	;wreg free
 10002  001716  C006  F0C4         	movff	?___lldiv,??_pf_lseek
 10003  00171A  C007  F0C5         	movff	?___lldiv+1,??_pf_lseek+1
 10004  00171E  C008  F0C6         	movff	?___lldiv+2,??_pf_lseek+2
 10005  001722  C009  F0C7         	movff	?___lldiv+3,??_pf_lseek+3
 10006  001726  0EFF               	movlw	255
 10007  001728  0100               	movlb	0	; () banked
 10008  00172A  25D9               	addwf	pf_lseek@ifptr& (0+255),w,b
 10009  00172C  6E06               	movwf	___lldiv@dividend^0,c
 10010  00172E  0EFF               	movlw	255
 10011  001730  21DA               	addwfc	(pf_lseek@ifptr+1)& (0+255),w,b
 10012  001732  6E07               	movwf	(___lldiv@dividend+1)^0,c
 10013  001734  0EFF               	movlw	255
 10014  001736  21DB               	addwfc	(pf_lseek@ifptr+2)& (0+255),w,b
 10015  001738  6E08               	movwf	(___lldiv@dividend+2)^0,c
 10016  00173A  0EFF               	movlw	255
 10017  00173C  21DC               	addwfc	(pf_lseek@ifptr+3)& (0+255),w,b
 10018  00173E  6E09               	movwf	(___lldiv@dividend+3)^0,c
 10019  001740  C0DD  F00A         	movff	pf_lseek@bcs,___lldiv@divisor
 10020  001744  C0DE  F00B         	movff	pf_lseek@bcs+1,___lldiv@divisor+1
 10021  001748  C0DF  F00C         	movff	pf_lseek@bcs+2,___lldiv@divisor+2
 10022  00174C  C0E0  F00D         	movff	pf_lseek@bcs+3,___lldiv@divisor+3
 10023  001750  EC52  F027         	call	___lldiv	;wreg free
 10024  001754  5006               	movf	?___lldiv^0,w,c
 10025  001756  0100               	movlb	0	; () banked
 10026  001758  5DC4               	subwf	??_pf_lseek& (0+255),w,b
 10027  00175A  5007               	movf	(?___lldiv+1)^0,w,c
 10028  00175C  59C5               	subwfb	(??_pf_lseek+1)& (0+255),w,b
 10029  00175E  5008               	movf	(?___lldiv+2)^0,w,c
 10030  001760  59C6               	subwfb	(??_pf_lseek+2)& (0+255),w,b
 10031  001762  5009               	movf	(?___lldiv+3)^0,w,c
 10032  001764  59C7               	subwfb	(??_pf_lseek+3)& (0+255),w,b
 10033  001766  A0D8               	btfss	status,0,c
 10034  001768  EFB8  F00B         	goto	u9581
 10035  00176C  EFBA  F00B         	goto	u9580
 10036  001770                     u9581:
 10037  001770  EF12  F00C         	goto	l7565
 10038  001774                     u9580:
 10039  001774                     
 10040                           ; BSR set to: 0
 10041                           ;pff.c: 1019:    (ofs - 1) / bcs >= (ifptr - 1) / bcs) {;pff.c: 1020:    fs->fptr = (ifp
      +                          tr - 1) & ~(bcs - 1);
 10042  001774  0EFF               	movlw	255
 10043  001776  25DD               	addwf	pf_lseek@bcs& (0+255),w,b
 10044  001778  6FC4               	movwf	??_pf_lseek& (0+255),b
 10045  00177A  0EFF               	movlw	255
 10046  00177C  21DE               	addwfc	(pf_lseek@bcs+1)& (0+255),w,b
 10047  00177E  6FC5               	movwf	(??_pf_lseek+1)& (0+255),b
 10048  001780  0EFF               	movlw	255
 10049  001782  21DF               	addwfc	(pf_lseek@bcs+2)& (0+255),w,b
 10050  001784  6FC6               	movwf	(??_pf_lseek+2)& (0+255),b
 10051  001786  0EFF               	movlw	255
 10052  001788  21E0               	addwfc	(pf_lseek@bcs+3)& (0+255),w,b
 10053  00178A  6FC7               	movwf	(??_pf_lseek+3)& (0+255),b
 10054  00178C  1DC4               	comf	??_pf_lseek& (0+255),w,b
 10055  00178E  6FC8               	movwf	(??_pf_lseek+4)& (0+255),b
 10056  001790  1DC5               	comf	(??_pf_lseek+1)& (0+255),w,b
 10057  001792  6FC9               	movwf	(??_pf_lseek+5)& (0+255),b
 10058  001794  1DC6               	comf	(??_pf_lseek+2)& (0+255),w,b
 10059  001796  6FCA               	movwf	(??_pf_lseek+6)& (0+255),b
 10060  001798  1DC7               	comf	(??_pf_lseek+3)& (0+255),w,b
 10061  00179A  6FCB               	movwf	(??_pf_lseek+7)& (0+255),b
 10062  00179C  0EFF               	movlw	255
 10063  00179E  25D9               	addwf	pf_lseek@ifptr& (0+255),w,b
 10064  0017A0  6FCC               	movwf	(??_pf_lseek+8)& (0+255),b
 10065  0017A2  0EFF               	movlw	255
 10066  0017A4  21DA               	addwfc	(pf_lseek@ifptr+1)& (0+255),w,b
 10067  0017A6  6FCD               	movwf	(??_pf_lseek+9)& (0+255),b
 10068  0017A8  0EFF               	movlw	255
 10069  0017AA  21DB               	addwfc	(pf_lseek@ifptr+2)& (0+255),w,b
 10070  0017AC  6FCE               	movwf	(??_pf_lseek+10)& (0+255),b
 10071  0017AE  0EFF               	movlw	255
 10072  0017B0  21DC               	addwfc	(pf_lseek@ifptr+3)& (0+255),w,b
 10073  0017B2  6FCF               	movwf	(??_pf_lseek+11)& (0+255),b
 10074  0017B4  51C8               	movf	(??_pf_lseek+4)& (0+255),w,b
 10075  0017B6  15CC               	andwf	(??_pf_lseek+8)& (0+255),w,b
 10076  0017B8  6FD0               	movwf	(??_pf_lseek+12)& (0+255),b
 10077  0017BA  51C9               	movf	(??_pf_lseek+5)& (0+255),w,b
 10078  0017BC  15CD               	andwf	(??_pf_lseek+9)& (0+255),w,b
 10079  0017BE  6FD1               	movwf	(??_pf_lseek+13)& (0+255),b
 10080  0017C0  51CA               	movf	(??_pf_lseek+6)& (0+255),w,b
 10081  0017C2  15CE               	andwf	(??_pf_lseek+10)& (0+255),w,b
 10082  0017C4  6FD2               	movwf	(??_pf_lseek+14)& (0+255),b
 10083  0017C6  51CB               	movf	(??_pf_lseek+7)& (0+255),w,b
 10084  0017C8  15CF               	andwf	(??_pf_lseek+11)& (0+255),w,b
 10085  0017CA  6FD3               	movwf	(??_pf_lseek+15)& (0+255),b
 10086  0017CC  EE20 F016          	lfsr	2,22
 10087  0017D0  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10088  0017D2  26D9               	addwf	fsr2l,f,c
 10089  0017D4  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10090  0017D6  22DA               	addwfc	fsr2h,f,c
 10091  0017D8  C0D0  FFDE         	movff	??_pf_lseek+12,postinc2
 10092  0017DC  C0D1  FFDE         	movff	??_pf_lseek+13,postinc2
 10093  0017E0  C0D2  FFDE         	movff	??_pf_lseek+14,postinc2
 10094  0017E4  C0D3  FFDE         	movff	??_pf_lseek+15,postinc2
 10095                           
 10096                           ;pff.c: 1021:    ofs -= fs->fptr;
 10097  0017E8  EE20 F016          	lfsr	2,22
 10098  0017EC  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10099  0017EE  26D9               	addwf	fsr2l,f,c
 10100  0017F0  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10101  0017F2  22DA               	addwfc	fsr2h,f,c
 10102  0017F4  50DE               	movf	postinc2,w,c
 10103  0017F6  5FC0               	subwf	pf_lseek@ofs& (0+255),f,b
 10104  0017F8  50DE               	movf	postinc2,w,c
 10105  0017FA  5BC1               	subwfb	(pf_lseek@ofs+1)& (0+255),f,b
 10106  0017FC  50DE               	movf	postinc2,w,c
 10107  0017FE  5BC2               	subwfb	(pf_lseek@ofs+2)& (0+255),f,b
 10108  001800  50DD               	movf	postdec2,w,c
 10109  001802  5BC3               	subwfb	(pf_lseek@ofs+3)& (0+255),f,b
 10110                           
 10111                           ;pff.c: 1022:    clst = fs->curr_clust;
 10112  001804  EE20 F022          	lfsr	2,34
 10113  001808  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10114  00180A  26D9               	addwf	fsr2l,f,c
 10115  00180C  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10116  00180E  22DA               	addwfc	fsr2h,f,c
 10117  001810  CFDE F0E1          	movff	postinc2,pf_lseek@clst
 10118  001814  CFDE F0E2          	movff	postinc2,pf_lseek@clst+1
 10119  001818  CFDE F0E3          	movff	postinc2,pf_lseek@clst+2
 10120  00181C  CFDE F0E4          	movff	postinc2,pf_lseek@clst+3
 10121                           
 10122                           ;pff.c: 1023:   } else {
 10123  001820  EF94  F00C         	goto	l7583
 10124  001824                     l7565:
 10125                           
 10126                           ; BSR set to: 0
 10127                           ;pff.c: 1024:    clst = fs->org_clust;
 10128  001824  EE20 F01E          	lfsr	2,30
 10129  001828  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10130  00182A  26D9               	addwf	fsr2l,f,c
 10131  00182C  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10132  00182E  22DA               	addwfc	fsr2h,f,c
 10133  001830  CFDE F0E1          	movff	postinc2,pf_lseek@clst
 10134  001834  CFDE F0E2          	movff	postinc2,pf_lseek@clst+1
 10135  001838  CFDE F0E3          	movff	postinc2,pf_lseek@clst+2
 10136  00183C  CFDE F0E4          	movff	postinc2,pf_lseek@clst+3
 10137                           
 10138                           ;pff.c: 1025:    fs->curr_clust = clst;
 10139  001840  EE20 F022          	lfsr	2,34
 10140  001844  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10141  001846  26D9               	addwf	fsr2l,f,c
 10142  001848  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10143  00184A  22DA               	addwfc	fsr2h,f,c
 10144  00184C  C0E1  FFDE         	movff	pf_lseek@clst,postinc2
 10145  001850  C0E2  FFDE         	movff	pf_lseek@clst+1,postinc2
 10146  001854  C0E3  FFDE         	movff	pf_lseek@clst+2,postinc2
 10147  001858  C0E4  FFDE         	movff	pf_lseek@clst+3,postinc2
 10148  00185C  EF94  F00C         	goto	l7583
 10149  001860                     l7567:
 10150                           
 10151                           ; BSR set to: 0
 10152                           ;pff.c: 1028:    clst = get_fat(clst);
 10153  001860  C0E1  F0A0         	movff	pf_lseek@clst,get_fat@clst
 10154  001864  C0E2  F0A1         	movff	pf_lseek@clst+1,get_fat@clst+1
 10155  001868  C0E3  F0A2         	movff	pf_lseek@clst+2,get_fat@clst+2
 10156  00186C  C0E4  F0A3         	movff	pf_lseek@clst+3,get_fat@clst+3
 10157  001870  ECEC  F018         	call	_get_fat	;wreg free
 10158  001874  C0A0  F0E1         	movff	?_get_fat,pf_lseek@clst
 10159  001878  C0A1  F0E2         	movff	?_get_fat+1,pf_lseek@clst+1
 10160  00187C  C0A2  F0E3         	movff	?_get_fat+2,pf_lseek@clst+2
 10161  001880  C0A3  F0E4         	movff	?_get_fat+3,pf_lseek@clst+3
 10162  001884                     
 10163                           ;pff.c: 1029:    if (clst <= 1 || clst >= fs->n_fatent) {fs->flag = 0; return FR_DISK_ER
      +                          R;};
 10164  001884  0100               	movlb	0	; () banked
 10165  001886  51E4               	movf	(pf_lseek@clst+3)& (0+255),w,b
 10166  001888  11E3               	iorwf	(pf_lseek@clst+2)& (0+255),w,b
 10167  00188A  11E2               	iorwf	(pf_lseek@clst+1)& (0+255),w,b
 10168  00188C  E109               	bnz	u9590
 10169  00188E  0E02               	movlw	2
 10170  001890  5DE1               	subwf	pf_lseek@clst& (0+255),w,b
 10171  001892  A0D8               	btfss	status,0,c
 10172  001894  EF4E  F00C         	goto	u9591
 10173  001898  EF50  F00C         	goto	u9590
 10174  00189C                     u9591:
 10175  00189C  EF65  F00C         	goto	l7573
 10176  0018A0                     u9590:
 10177  0018A0                     
 10178                           ; BSR set to: 0
 10179  0018A0  EE20 F006          	lfsr	2,6
 10180  0018A4  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10181  0018A6  26D9               	addwf	fsr2l,f,c
 10182  0018A8  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10183  0018AA  22DA               	addwfc	fsr2h,f,c
 10184  0018AC  50DE               	movf	postinc2,w,c
 10185  0018AE  5DE1               	subwf	pf_lseek@clst& (0+255),w,b
 10186  0018B0  50DE               	movf	postinc2,w,c
 10187  0018B2  59E2               	subwfb	(pf_lseek@clst+1)& (0+255),w,b
 10188  0018B4  50DE               	movf	postinc2,w,c
 10189  0018B6  59E3               	subwfb	(pf_lseek@clst+2)& (0+255),w,b
 10190  0018B8  50DE               	movf	postinc2,w,c
 10191  0018BA  59E4               	subwfb	(pf_lseek@clst+3)& (0+255),w,b
 10192  0018BC  A0D8               	btfss	status,0,c
 10193  0018BE  EF63  F00C         	goto	u9601
 10194  0018C2  EF65  F00C         	goto	u9600
 10195  0018C6                     u9601:
 10196  0018C6  EF70  F00C         	goto	l7579
 10197  0018CA                     u9600:
 10198  0018CA                     l7573:
 10199                           
 10200                           ; BSR set to: 0
 10201  0018CA  EE20 F001          	lfsr	2,1
 10202  0018CE  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10203  0018D0  26D9               	addwf	fsr2l,f,c
 10204  0018D2  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10205  0018D4  22DA               	addwfc	fsr2h,f,c
 10206  0018D6  0E00               	movlw	0
 10207  0018D8  6EDF               	movwf	indf2,c
 10208  0018DA                     l7575:
 10209                           
 10210                           ; BSR set to: 0
 10211  0018DA  0E01               	movlw	1
 10212  0018DC  EF2C  F00D         	goto	l363
 10213  0018E0                     l7579:
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;pff.c: 1030:    fs->curr_clust = clst;
 10217  0018E0  EE20 F022          	lfsr	2,34
 10218  0018E4  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10219  0018E6  26D9               	addwf	fsr2l,f,c
 10220  0018E8  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10221  0018EA  22DA               	addwfc	fsr2h,f,c
 10222  0018EC  C0E1  FFDE         	movff	pf_lseek@clst,postinc2
 10223  0018F0  C0E2  FFDE         	movff	pf_lseek@clst+1,postinc2
 10224  0018F4  C0E3  FFDE         	movff	pf_lseek@clst+2,postinc2
 10225  0018F8  C0E4  FFDE         	movff	pf_lseek@clst+3,postinc2
 10226                           
 10227                           ;pff.c: 1031:    fs->fptr += bcs;
 10228  0018FC  EE20 F016          	lfsr	2,22
 10229  001900  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10230  001902  26D9               	addwf	fsr2l,f,c
 10231  001904  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10232  001906  22DA               	addwfc	fsr2h,f,c
 10233  001908  51DD               	movf	pf_lseek@bcs& (0+255),w,b
 10234  00190A  26DE               	addwf	postinc2,f,c
 10235  00190C  51DE               	movf	(pf_lseek@bcs+1)& (0+255),w,b
 10236  00190E  22DE               	addwfc	postinc2,f,c
 10237  001910  51DF               	movf	(pf_lseek@bcs+2)& (0+255),w,b
 10238  001912  22DE               	addwfc	postinc2,f,c
 10239  001914  51E0               	movf	(pf_lseek@bcs+3)& (0+255),w,b
 10240  001916  22DE               	addwfc	postinc2,f,c
 10241  001918                     
 10242                           ; BSR set to: 0
 10243                           ;pff.c: 1032:    ofs -= bcs;
 10244  001918  51DD               	movf	pf_lseek@bcs& (0+255),w,b
 10245  00191A  5FC0               	subwf	pf_lseek@ofs& (0+255),f,b
 10246  00191C  51DE               	movf	(pf_lseek@bcs+1)& (0+255),w,b
 10247  00191E  5BC1               	subwfb	(pf_lseek@ofs+1)& (0+255),f,b
 10248  001920  51DF               	movf	(pf_lseek@bcs+2)& (0+255),w,b
 10249  001922  5BC2               	subwfb	(pf_lseek@ofs+2)& (0+255),f,b
 10250  001924  51E0               	movf	(pf_lseek@bcs+3)& (0+255),w,b
 10251  001926  5BC3               	subwfb	(pf_lseek@ofs+3)& (0+255),f,b
 10252  001928                     l7583:
 10253                           
 10254                           ; BSR set to: 0
 10255                           ;pff.c: 1027:   while (ofs > bcs) {
 10256  001928  51C0               	movf	pf_lseek@ofs& (0+255),w,b
 10257  00192A  5DDD               	subwf	pf_lseek@bcs& (0+255),w,b
 10258  00192C  51C1               	movf	(pf_lseek@ofs+1)& (0+255),w,b
 10259  00192E  59DE               	subwfb	(pf_lseek@bcs+1)& (0+255),w,b
 10260  001930  51C2               	movf	(pf_lseek@ofs+2)& (0+255),w,b
 10261  001932  59DF               	subwfb	(pf_lseek@bcs+2)& (0+255),w,b
 10262  001934  51C3               	movf	(pf_lseek@ofs+3)& (0+255),w,b
 10263  001936  59E0               	subwfb	(pf_lseek@bcs+3)& (0+255),w,b
 10264  001938  A0D8               	btfss	status,0,c
 10265  00193A  EFA1  F00C         	goto	u9611
 10266  00193E  EFA3  F00C         	goto	u9610
 10267  001942                     u9611:
 10268  001942  EF30  F00C         	goto	l7567
 10269  001946                     u9610:
 10270  001946                     
 10271                           ; BSR set to: 0
 10272                           ;pff.c: 1034:   fs->fptr += ofs;
 10273  001946  EE20 F016          	lfsr	2,22
 10274  00194A  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10275  00194C  26D9               	addwf	fsr2l,f,c
 10276  00194E  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10277  001950  22DA               	addwfc	fsr2h,f,c
 10278  001952  51C0               	movf	pf_lseek@ofs& (0+255),w,b
 10279  001954  26DE               	addwf	postinc2,f,c
 10280  001956  51C1               	movf	(pf_lseek@ofs+1)& (0+255),w,b
 10281  001958  22DE               	addwfc	postinc2,f,c
 10282  00195A  51C2               	movf	(pf_lseek@ofs+2)& (0+255),w,b
 10283  00195C  22DE               	addwfc	postinc2,f,c
 10284  00195E  51C3               	movf	(pf_lseek@ofs+3)& (0+255),w,b
 10285  001960  22DE               	addwfc	postinc2,f,c
 10286  001962                     
 10287                           ; BSR set to: 0
 10288                           ;pff.c: 1035:   sect = clust2sect(clst);
 10289  001962  C0E1  F012         	movff	pf_lseek@clst,clust2sect@clst
 10290  001966  C0E2  F013         	movff	pf_lseek@clst+1,clust2sect@clst+1
 10291  00196A  C0E3  F014         	movff	pf_lseek@clst+2,clust2sect@clst+2
 10292  00196E  C0E4  F015         	movff	pf_lseek@clst+3,clust2sect@clst+3
 10293  001972  ECD5  F025         	call	_clust2sect	;wreg free
 10294  001976  C012  F0D5         	movff	?_clust2sect,pf_lseek@sect
 10295  00197A  C013  F0D6         	movff	?_clust2sect+1,pf_lseek@sect+1
 10296  00197E  C014  F0D7         	movff	?_clust2sect+2,pf_lseek@sect+2
 10297  001982  C015  F0D8         	movff	?_clust2sect+3,pf_lseek@sect+3
 10298  001986                     
 10299                           ;pff.c: 1036:   if (!sect) {fs->flag = 0; return FR_DISK_ERR;};
 10300  001986  0100               	movlb	0	; () banked
 10301  001988  51D5               	movf	pf_lseek@sect& (0+255),w,b
 10302  00198A  11D6               	iorwf	(pf_lseek@sect+1)& (0+255),w,b
 10303  00198C  11D7               	iorwf	(pf_lseek@sect+2)& (0+255),w,b
 10304  00198E  11D8               	iorwf	(pf_lseek@sect+3)& (0+255),w,b
 10305  001990  A4D8               	btfss	status,2,c
 10306  001992  EFCD  F00C         	goto	u9621
 10307  001996  EFCF  F00C         	goto	u9620
 10308  00199A                     u9621:
 10309  00199A  EFD9  F00C         	goto	l7597
 10310  00199E                     u9620:
 10311  00199E                     
 10312                           ; BSR set to: 0
 10313  00199E  EE20 F001          	lfsr	2,1
 10314  0019A2  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10315  0019A4  26D9               	addwf	fsr2l,f,c
 10316  0019A6  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10317  0019A8  22DA               	addwfc	fsr2h,f,c
 10318  0019AA  0E00               	movlw	0
 10319  0019AC  6EDF               	movwf	indf2,c
 10320  0019AE  EF6D  F00C         	goto	l7575
 10321  0019B2                     l7597:
 10322                           
 10323                           ; BSR set to: 0
 10324                           ;pff.c: 1037:   fs->dsect = sect + (fs->fptr / 512 & (fs->csize - 1));
 10325  0019B2  EE20 F002          	lfsr	2,2
 10326  0019B6  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10327  0019B8  26D9               	addwf	fsr2l,f,c
 10328  0019BA  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10329  0019BC  22DA               	addwfc	fsr2h,f,c
 10330  0019BE  50DF               	movf	indf2,w,c
 10331  0019C0  6FC4               	movwf	??_pf_lseek& (0+255),b
 10332  0019C2  0EFF               	movlw	255
 10333  0019C4  25C4               	addwf	??_pf_lseek& (0+255),w,b
 10334  0019C6  6FC5               	movwf	(??_pf_lseek+1)& (0+255),b
 10335  0019C8  6BC6               	clrf	(??_pf_lseek+2)& (0+255),b
 10336  0019CA  0EFF               	movlw	255
 10337  0019CC  23C6               	addwfc	(??_pf_lseek+2)& (0+255),f,b
 10338  0019CE  6BC7               	clrf	(??_pf_lseek+3)& (0+255),b
 10339  0019D0  BFC6               	btfsc	(??_pf_lseek+2)& (0+255),7,b
 10340  0019D2  07C7               	decf	(??_pf_lseek+3)& (0+255),f,b
 10341  0019D4  51C7               	movf	(??_pf_lseek+3)& (0+255),w,b
 10342  0019D6  6FC8               	movwf	(??_pf_lseek+4)& (0+255),b
 10343  0019D8  EE20 F016          	lfsr	2,22
 10344  0019DC  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10345  0019DE  26D9               	addwf	fsr2l,f,c
 10346  0019E0  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10347  0019E2  22DA               	addwfc	fsr2h,f,c
 10348  0019E4  CFDE F0C9          	movff	postinc2,??_pf_lseek+5
 10349  0019E8  CFDE F0CA          	movff	postinc2,??_pf_lseek+6
 10350  0019EC  CFDE F0CB          	movff	postinc2,??_pf_lseek+7
 10351  0019F0  CFDE F0CC          	movff	postinc2,??_pf_lseek+8
 10352  0019F4  0E0A               	movlw	10
 10353  0019F6  EF02  F00D         	goto	u9630
 10354  0019FA                     u9635:
 10355  0019FA  90D8               	bcf	status,0,c
 10356  0019FC  33CC               	rrcf	(??_pf_lseek+8)& (0+255),f,b
 10357  0019FE  33CB               	rrcf	(??_pf_lseek+7)& (0+255),f,b
 10358  001A00  33CA               	rrcf	(??_pf_lseek+6)& (0+255),f,b
 10359  001A02  33C9               	rrcf	(??_pf_lseek+5)& (0+255),f,b
 10360  001A04                     u9630:
 10361  001A04  2EE8               	decfsz	wreg,f,c
 10362  001A06  EFFD  F00C         	goto	u9635
 10363  001A0A  51C5               	movf	(??_pf_lseek+1)& (0+255),w,b
 10364  001A0C  15C9               	andwf	(??_pf_lseek+5)& (0+255),w,b
 10365  001A0E  6FCD               	movwf	(??_pf_lseek+9)& (0+255),b
 10366  001A10  51C6               	movf	(??_pf_lseek+2)& (0+255),w,b
 10367  001A12  15CA               	andwf	(??_pf_lseek+6)& (0+255),w,b
 10368  001A14  6FCE               	movwf	(??_pf_lseek+10)& (0+255),b
 10369  001A16  51C7               	movf	(??_pf_lseek+3)& (0+255),w,b
 10370  001A18  15CB               	andwf	(??_pf_lseek+7)& (0+255),w,b
 10371  001A1A  6FCF               	movwf	(??_pf_lseek+11)& (0+255),b
 10372  001A1C  51C8               	movf	(??_pf_lseek+4)& (0+255),w,b
 10373  001A1E  15CC               	andwf	(??_pf_lseek+8)& (0+255),w,b
 10374  001A20  6FD0               	movwf	(??_pf_lseek+12)& (0+255),b
 10375  001A22  51D5               	movf	pf_lseek@sect& (0+255),w,b
 10376  001A24  25CD               	addwf	(??_pf_lseek+9)& (0+255),w,b
 10377  001A26  6FD1               	movwf	(??_pf_lseek+13)& (0+255),b
 10378  001A28  51D6               	movf	(pf_lseek@sect+1)& (0+255),w,b
 10379  001A2A  21CE               	addwfc	(??_pf_lseek+10)& (0+255),w,b
 10380  001A2C  6FD2               	movwf	(??_pf_lseek+14)& (0+255),b
 10381  001A2E  51D7               	movf	(pf_lseek@sect+2)& (0+255),w,b
 10382  001A30  21CF               	addwfc	(??_pf_lseek+11)& (0+255),w,b
 10383  001A32  6FD3               	movwf	(??_pf_lseek+15)& (0+255),b
 10384  001A34  51D8               	movf	(pf_lseek@sect+3)& (0+255),w,b
 10385  001A36  21D0               	addwfc	(??_pf_lseek+12)& (0+255),w,b
 10386  001A38  6FD4               	movwf	(??_pf_lseek+16)& (0+255),b
 10387  001A3A  EE20 F026          	lfsr	2,38
 10388  001A3E  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10389  001A40  26D9               	addwf	fsr2l,f,c
 10390  001A42  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10391  001A44  22DA               	addwfc	fsr2h,f,c
 10392  001A46  C0D1  FFDE         	movff	??_pf_lseek+13,postinc2
 10393  001A4A  C0D2  FFDE         	movff	??_pf_lseek+14,postinc2
 10394  001A4E  C0D3  FFDE         	movff	??_pf_lseek+15,postinc2
 10395  001A52  C0D4  FFDE         	movff	??_pf_lseek+16,postinc2
 10396  001A56                     l7599:
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;pff.c: 1040:  return FR_OK;
 10400  001A56  0E00               	movlw	0
 10401  001A58                     l363:
 10402                           
 10403                           ; BSR set to: 0
 10404  001A58  0012               	return		;funcret
 10405  001A5A                     __end_of_pf_lseek:
 10406                           	callstack 0
 10407                           
 10408 ;; *************** function _get_fat *****************
 10409 ;; Defined at:
 10410 ;;		line 346 in file "pff.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;  clst            4   32[BANK0 ] unsigned long 
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;  buf             4   58[BANK0 ] unsigned char [4]
 10415 ;;  fs              2   62[BANK0 ] PTR struct .
 10416 ;;		 -> NULL(0), main@fs(42), 
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  4   32[BANK0 ] unsigned long 
 10419 ;; Registers used:
 10420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10426 ;;      Params:         0       4       0       0       0       0       0
 10427 ;;      Locals:         0       6       0       0       0       0       0
 10428 ;;      Temps:          0      22       0       0       0       0       0
 10429 ;;      Totals:         0      32       0       0       0       0       0
 10430 ;;Total ram usage:       32 bytes
 10431 ;; Hardware stack levels used: 1
 10432 ;; Hardware stack levels required when called: 10
 10433 ;; This function calls:
 10434 ;;		_disk_readp
 10435 ;; This function is called by:
 10436 ;;		_dir_next
 10437 ;;		_pf_read
 10438 ;;		_pf_lseek
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           	psect	text32
 10443  0031D8                     __ptext32:
 10444                           	callstack 0
 10445  0031D8                     _get_fat:
 10446                           	callstack 17
 10447  0031D8                     
 10448                           ;pff.c: 347:  DWORD clst;pff.c: 349: {;pff.c: 350:  BYTE buf[4];;pff.c: 351:  FATFS *fs 
      +                          = FatFs;
 10449  0031D8  C0FD  F0BE         	movff	_FatFs,get_fat@fs
 10450  0031DC  C0FE  F0BF         	movff	_FatFs+1,get_fat@fs+1
 10451                           
 10452                           ;pff.c: 353:  if (clst < 2 || clst >= fs->n_fatent)
 10453  0031E0  0100               	movlb	0	; () banked
 10454  0031E2  51A3               	movf	(get_fat@clst+3)& (0+255),w,b
 10455  0031E4  11A2               	iorwf	(get_fat@clst+2)& (0+255),w,b
 10456  0031E6  11A1               	iorwf	(get_fat@clst+1)& (0+255),w,b
 10457  0031E8  E109               	bnz	u8630
 10458  0031EA  0E02               	movlw	2
 10459  0031EC  5DA0               	subwf	get_fat@clst& (0+255),w,b
 10460  0031EE  A0D8               	btfss	status,0,c
 10461  0031F0  EFFC  F018         	goto	u8631
 10462  0031F4  EFFE  F018         	goto	u8630
 10463  0031F8                     u8631:
 10464  0031F8  EF13  F019         	goto	l6975
 10465  0031FC                     u8630:
 10466  0031FC                     
 10467                           ; BSR set to: 0
 10468  0031FC  EE20 F006          	lfsr	2,6
 10469  003200  51BE               	movf	get_fat@fs& (0+255),w,b
 10470  003202  26D9               	addwf	fsr2l,f,c
 10471  003204  51BF               	movf	(get_fat@fs+1)& (0+255),w,b
 10472  003206  22DA               	addwfc	fsr2h,f,c
 10473  003208  50DE               	movf	postinc2,w,c
 10474  00320A  5DA0               	subwf	get_fat@clst& (0+255),w,b
 10475  00320C  50DE               	movf	postinc2,w,c
 10476  00320E  59A1               	subwfb	(get_fat@clst+1)& (0+255),w,b
 10477  003210  50DE               	movf	postinc2,w,c
 10478  003212  59A2               	subwfb	(get_fat@clst+2)& (0+255),w,b
 10479  003214  50DE               	movf	postinc2,w,c
 10480  003216  59A3               	subwfb	(get_fat@clst+3)& (0+255),w,b
 10481  003218  A0D8               	btfss	status,0,c
 10482  00321A  EF11  F019         	goto	u8641
 10483  00321E  EF13  F019         	goto	u8640
 10484  003222                     u8641:
 10485  003222  EFB7  F019         	goto	l6989
 10486  003226                     u8640:
 10487  003226                     l6975:
 10488                           
 10489                           ;pff.c: 354:   return 1;
 10490  003226  0E01               	movlw	1
 10491  003228  0100               	movlb	0	; () banked
 10492  00322A  6FA0               	movwf	?_get_fat& (0+255),b
 10493  00322C  0E00               	movlw	0
 10494  00322E  6FA1               	movwf	(?_get_fat+1)& (0+255),b
 10495  003230  0E00               	movlw	0
 10496  003232  6FA2               	movwf	(?_get_fat+2)& (0+255),b
 10497  003234  0E00               	movlw	0
 10498  003236  6FA3               	movwf	(?_get_fat+3)& (0+255),b
 10499  003238  EFCC  F019         	goto	l194
 10500  00323C                     l6979:
 10501                           
 10502                           ; BSR set to: 0
 10503                           ;pff.c: 380:   if (disk_readp(buf, fs->fatbase + clst / 128, ((UINT)clst % 128) * 4, 4))
      +                           break;
 10504  00323C  0EBA               	movlw	low get_fat@buf
 10505  00323E  6F90               	movwf	disk_readp@buff& (0+255),b
 10506  003240  0E00               	movlw	high get_fat@buf
 10507  003242  6F91               	movwf	(disk_readp@buff+1)& (0+255),b
 10508  003244  EE20 F00A          	lfsr	2,10
 10509  003248  51BE               	movf	get_fat@fs& (0+255),w,b
 10510  00324A  26D9               	addwf	fsr2l,f,c
 10511  00324C  51BF               	movf	(get_fat@fs+1)& (0+255),w,b
 10512  00324E  22DA               	addwfc	fsr2h,f,c
 10513  003250  CFDE F0A4          	movff	postinc2,??_get_fat
 10514  003254  CFDE F0A5          	movff	postinc2,??_get_fat+1
 10515  003258  CFDE F0A6          	movff	postinc2,??_get_fat+2
 10516  00325C  CFDE F0A7          	movff	postinc2,??_get_fat+3
 10517  003260  C0A0  F0A8         	movff	get_fat@clst,??_get_fat+4
 10518  003264  C0A1  F0A9         	movff	get_fat@clst+1,??_get_fat+5
 10519  003268  C0A2  F0AA         	movff	get_fat@clst+2,??_get_fat+6
 10520  00326C  C0A3  F0AB         	movff	get_fat@clst+3,??_get_fat+7
 10521  003270  0E08               	movlw	8
 10522  003272  EF40  F019         	goto	u8650
 10523  003276                     u8655:
 10524  003276  90D8               	bcf	status,0,c
 10525  003278  33AB               	rrcf	(??_get_fat+7)& (0+255),f,b
 10526  00327A  33AA               	rrcf	(??_get_fat+6)& (0+255),f,b
 10527  00327C  33A9               	rrcf	(??_get_fat+5)& (0+255),f,b
 10528  00327E  33A8               	rrcf	(??_get_fat+4)& (0+255),f,b
 10529  003280                     u8650:
 10530  003280  2EE8               	decfsz	wreg,f,c
 10531  003282  EF3B  F019         	goto	u8655
 10532  003286  51A4               	movf	??_get_fat& (0+255),w,b
 10533  003288  25A8               	addwf	(??_get_fat+4)& (0+255),w,b
 10534  00328A  6F92               	movwf	disk_readp@sector& (0+255),b
 10535  00328C  51A5               	movf	(??_get_fat+1)& (0+255),w,b
 10536  00328E  21A9               	addwfc	(??_get_fat+5)& (0+255),w,b
 10537  003290  6F93               	movwf	(disk_readp@sector+1)& (0+255),b
 10538  003292  51A6               	movf	(??_get_fat+2)& (0+255),w,b
 10539  003294  21AA               	addwfc	(??_get_fat+6)& (0+255),w,b
 10540  003296  6F94               	movwf	(disk_readp@sector+2)& (0+255),b
 10541  003298  51A7               	movf	(??_get_fat+3)& (0+255),w,b
 10542  00329A  21AB               	addwfc	(??_get_fat+7)& (0+255),w,b
 10543  00329C  6F95               	movwf	(disk_readp@sector+3)& (0+255),b
 10544  00329E  0E7F               	movlw	127
 10545  0032A0  15A0               	andwf	get_fat@clst& (0+255),w,b
 10546  0032A2  6FAC               	movwf	(??_get_fat+8)& (0+255),b
 10547  0032A4  0E00               	movlw	0
 10548  0032A6  15A1               	andwf	(get_fat@clst+1)& (0+255),w,b
 10549  0032A8  6FAD               	movwf	(??_get_fat+9)& (0+255),b
 10550  0032AA  90D8               	bcf	status,0,c
 10551  0032AC  37AC               	rlcf	(??_get_fat+8)& (0+255),f,b
 10552  0032AE  37AD               	rlcf	(??_get_fat+9)& (0+255),f,b
 10553  0032B0  90D8               	bcf	status,0,c
 10554  0032B2  37AC               	rlcf	(??_get_fat+8)& (0+255),f,b
 10555  0032B4  37AD               	rlcf	(??_get_fat+9)& (0+255),f,b
 10556  0032B6  C0AC  F096         	movff	??_get_fat+8,disk_readp@offset
 10557  0032BA  C0AD  F097         	movff	??_get_fat+9,disk_readp@offset+1
 10558  0032BE  0E00               	movlw	0
 10559  0032C0  6F99               	movwf	(disk_readp@count+1)& (0+255),b
 10560  0032C2  0E04               	movlw	4
 10561  0032C4  6F98               	movwf	disk_readp@count& (0+255),b
 10562  0032C6  EC65  F01B         	call	_disk_readp	;wreg free
 10563  0032CA  0900               	iorlw	0
 10564  0032CC  B4D8               	btfsc	status,2,c
 10565  0032CE  EF6B  F019         	goto	u8661
 10566  0032D2  EF6D  F019         	goto	u8660
 10567  0032D6                     u8661:
 10568  0032D6  EF6F  F019         	goto	l6983
 10569  0032DA                     u8660:
 10570  0032DA  EF13  F019         	goto	l6975
 10571  0032DE                     l6983:
 10572                           
 10573                           ;pff.c: 381:   return (DWORD)(((DWORD)*((BYTE*)(buf)+3)<<24)|((DWORD)*((BYTE*)(buf)+2)<<
      +                          16)|((WORD)*((BYTE*)(buf)+1)<<8)|*(BYTE*)(buf)) & 0x0FFFFFFF;
 10574  0032DE  0100               	movlb	0	; () banked
 10575  0032E0  51BB               	movf	(get_fat@buf+1)& (0+255),w,b
 10576  0032E2  6FA5               	movwf	(??_get_fat+1)& (0+255),b
 10577  0032E4  6BA4               	clrf	??_get_fat& (0+255),b
 10578  0032E6  C0BC  F0A6         	movff	get_fat@buf+2,??_get_fat+2
 10579  0032EA  6BA7               	clrf	(??_get_fat+3)& (0+255),b
 10580  0032EC  6BA8               	clrf	(??_get_fat+4)& (0+255),b
 10581  0032EE  6BA9               	clrf	(??_get_fat+5)& (0+255),b
 10582  0032F0  C0A7  F0A9         	movff	??_get_fat+3,??_get_fat+5
 10583  0032F4  C0A6  F0A8         	movff	??_get_fat+2,??_get_fat+4
 10584  0032F8  6BA7               	clrf	(??_get_fat+3)& (0+255),b
 10585  0032FA  6BA6               	clrf	(??_get_fat+2)& (0+255),b
 10586  0032FC  C0BD  F0AA         	movff	get_fat@buf+3,??_get_fat+6
 10587  003300  6BAB               	clrf	(??_get_fat+7)& (0+255),b
 10588  003302  6BAC               	clrf	(??_get_fat+8)& (0+255),b
 10589  003304  6BAD               	clrf	(??_get_fat+9)& (0+255),b
 10590  003306  C0AA  F0AD         	movff	??_get_fat+6,??_get_fat+9
 10591  00330A  6BAC               	clrf	(??_get_fat+8)& (0+255),b
 10592  00330C  6BAB               	clrf	(??_get_fat+7)& (0+255),b
 10593  00330E  6BAA               	clrf	(??_get_fat+6)& (0+255),b
 10594  003310  51A6               	movf	(??_get_fat+2)& (0+255),w,b
 10595  003312  11AA               	iorwf	(??_get_fat+6)& (0+255),w,b
 10596  003314  6FAE               	movwf	(??_get_fat+10)& (0+255),b
 10597  003316  51A7               	movf	(??_get_fat+3)& (0+255),w,b
 10598  003318  11AB               	iorwf	(??_get_fat+7)& (0+255),w,b
 10599  00331A  6FAF               	movwf	(??_get_fat+11)& (0+255),b
 10600  00331C  51A8               	movf	(??_get_fat+4)& (0+255),w,b
 10601  00331E  11AC               	iorwf	(??_get_fat+8)& (0+255),w,b
 10602  003320  6FB0               	movwf	(??_get_fat+12)& (0+255),b
 10603  003322  51A9               	movf	(??_get_fat+5)& (0+255),w,b
 10604  003324  11AD               	iorwf	(??_get_fat+9)& (0+255),w,b
 10605  003326  6FB1               	movwf	(??_get_fat+13)& (0+255),b
 10606  003328  51A4               	movf	??_get_fat& (0+255),w,b
 10607  00332A  11AE               	iorwf	(??_get_fat+10)& (0+255),w,b
 10608  00332C  6FB2               	movwf	(??_get_fat+14)& (0+255),b
 10609  00332E  51A5               	movf	(??_get_fat+1)& (0+255),w,b
 10610  003330  11AF               	iorwf	(??_get_fat+11)& (0+255),w,b
 10611  003332  6FB3               	movwf	(??_get_fat+15)& (0+255),b
 10612  003334  0E00               	movlw	0
 10613  003336  11B0               	iorwf	(??_get_fat+12)& (0+255),w,b
 10614  003338  6FB4               	movwf	(??_get_fat+16)& (0+255),b
 10615  00333A  0E00               	movlw	0
 10616  00333C  11B1               	iorwf	(??_get_fat+13)& (0+255),w,b
 10617  00333E  6FB5               	movwf	(??_get_fat+17)& (0+255),b
 10618  003340  51BA               	movf	get_fat@buf& (0+255),w,b
 10619  003342  11B2               	iorwf	(??_get_fat+14)& (0+255),w,b
 10620  003344  6FB6               	movwf	(??_get_fat+18)& (0+255),b
 10621  003346  51B3               	movf	(??_get_fat+15)& (0+255),w,b
 10622  003348  6FB7               	movwf	(??_get_fat+19)& (0+255),b
 10623  00334A  51B4               	movf	(??_get_fat+16)& (0+255),w,b
 10624  00334C  6FB8               	movwf	(??_get_fat+20)& (0+255),b
 10625  00334E  51B5               	movf	(??_get_fat+17)& (0+255),w,b
 10626  003350  6FB9               	movwf	(??_get_fat+21)& (0+255),b
 10627  003352  0EFF               	movlw	255
 10628  003354  15B6               	andwf	(??_get_fat+18)& (0+255),w,b
 10629  003356  6FA0               	movwf	?_get_fat& (0+255),b
 10630  003358  0EFF               	movlw	255
 10631  00335A  15B7               	andwf	(??_get_fat+19)& (0+255),w,b
 10632  00335C  6FA1               	movwf	(?_get_fat+1)& (0+255),b
 10633  00335E  0EFF               	movlw	255
 10634  003360  15B8               	andwf	(??_get_fat+20)& (0+255),w,b
 10635  003362  6FA2               	movwf	(?_get_fat+2)& (0+255),b
 10636  003364  0E0F               	movlw	15
 10637  003366  15B9               	andwf	(??_get_fat+21)& (0+255),w,b
 10638  003368  6FA3               	movwf	(?_get_fat+3)& (0+255),b
 10639  00336A  EFCC  F019         	goto	l194
 10640  00336E                     l6989:
 10641                           
 10642                           ; BSR set to: 0
 10643  00336E  C0BE  FFD9         	movff	get_fat@fs,fsr2l
 10644  003372  C0BF  FFDA         	movff	get_fat@fs+1,fsr2h
 10645  003376  50DF               	movf	indf2,w,c
 10646  003378  6FA4               	movwf	??_get_fat& (0+255),b
 10647  00337A  6BA5               	clrf	(??_get_fat+1)& (0+255),b
 10648                           
 10649                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10650                           ; Switch size 1, requested type "simple"
 10651                           ; Number of cases is 1, Range of values is 0 to 0
 10652                           ; switch strategies available:
 10653                           ; Name         Instructions Cycles
 10654                           ; simple_byte            4     3 (average)
 10655                           ;	Chosen strategy is simple_byte
 10656  00337C  51A5               	movf	(??_get_fat+1)& (0+255),w,b
 10657  00337E  0A00               	xorlw	0	; case 0
 10658  003380  B4D8               	btfsc	status,2,c
 10659  003382  EFC5  F019         	goto	l8065
 10660  003386  EF13  F019         	goto	l6975
 10661  00338A                     l8065:
 10662                           
 10663                           ; BSR set to: 0
 10664                           ; Switch size 1, requested type "simple"
 10665                           ; Number of cases is 1, Range of values is 3 to 3
 10666                           ; switch strategies available:
 10667                           ; Name         Instructions Cycles
 10668                           ; simple_byte            4     3 (average)
 10669                           ;	Chosen strategy is simple_byte
 10670  00338A  51A4               	movf	??_get_fat& (0+255),w,b
 10671  00338C  0A03               	xorlw	3	; case 3
 10672  00338E  B4D8               	btfsc	status,2,c
 10673  003390  EF1E  F019         	goto	l6979
 10674  003394  EF13  F019         	goto	l6975
 10675  003398                     l194:
 10676                           
 10677                           ; BSR set to: 0
 10678  003398  0012               	return		;funcret
 10679  00339A                     __end_of_get_fat:
 10680                           	callstack 0
 10681                           
 10682 ;; *************** function _disk_readp *****************
 10683 ;; Defined at:
 10684 ;;		line 224 in file "pic_mmcp.c"
 10685 ;; Parameters:    Size  Location     Type
 10686 ;;  buff            2   16[BANK0 ] PTR unsigned char 
 10687 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), pf_mount@buf(36), 
 10688 ;;		 -> get_fat@buf(4), NULL(0), Line(128), 
 10689 ;;  sector          4   18[BANK0 ] unsigned long 
 10690 ;;  offset          2   22[BANK0 ] unsigned int 
 10691 ;;  count           2   24[BANK0 ] unsigned int 
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;  bc              2   30[BANK0 ] unsigned int 
 10694 ;;  rc              1   29[BANK0 ] unsigned char 
 10695 ;;  res             1   28[BANK0 ] enum E74
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  1    wreg      enum E3069
 10698 ;; Registers used:
 10699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10705 ;;      Params:         0      10       0       0       0       0       0
 10706 ;;      Locals:         0       4       0       0       0       0       0
 10707 ;;      Temps:          0       2       0       0       0       0       0
 10708 ;;      Totals:         0      16       0       0       0       0       0
 10709 ;;Total ram usage:       16 bytes
 10710 ;; Hardware stack levels used: 1
 10711 ;; Hardware stack levels required when called: 9
 10712 ;; This function calls:
 10713 ;;		_printf
 10714 ;;		_rcv_spi
 10715 ;;		_send_cmd
 10716 ;; This function is called by:
 10717 ;;		_main
 10718 ;;		_get_fat
 10719 ;;		_dir_find
 10720 ;;		_dir_read
 10721 ;;		_check_fs
 10722 ;;		_pf_mount
 10723 ;;		_pf_read
 10724 ;; This function uses a non-reentrant model
 10725 ;;
 10726                           
 10727                           	psect	text33
 10728  0036CA                     __ptext33:
 10729                           	callstack 0
 10730  0036CA                     _disk_readp:
 10731                           	callstack 19
 10732  0036CA                     
 10733                           ;pic_mmcp.c: 225:  BYTE *buff,;pic_mmcp.c: 226:  DWORD sector,;pic_mmcp.c: 227:  UINT of
      +                          fset,;pic_mmcp.c: 228:  UINT count;pic_mmcp.c: 230: {;pic_mmcp.c: 231:  DRESULT res;;pic
      +                          _mmcp.c: 232:  BYTE rc;;pic_mmcp.c: 233:  UINT bc;;pic_mmcp.c: 236:  if (!(CardType & 0x
      +                          08)) sector *= 512;
 10734  0036CA  0100               	movlb	0	; () banked
 10735  0036CC  B7FF               	btfsc	_CardType& (0+255),3,b
 10736  0036CE  EF6B  F01B         	goto	u8511
 10737  0036D2  EF6D  F01B         	goto	u8510
 10738  0036D6                     u8511:
 10739  0036D6  EF76  F01B         	goto	l6925
 10740  0036DA                     u8510:
 10741  0036DA                     
 10742                           ; BSR set to: 0
 10743  0036DA  0E09               	movlw	9
 10744  0036DC                     u8525:
 10745  0036DC  90D8               	bcf	status,0,c
 10746  0036DE  3792               	rlcf	disk_readp@sector& (0+255),f,b
 10747  0036E0  3793               	rlcf	(disk_readp@sector+1)& (0+255),f,b
 10748  0036E2  3794               	rlcf	(disk_readp@sector+2)& (0+255),f,b
 10749  0036E4  3795               	rlcf	(disk_readp@sector+3)& (0+255),f,b
 10750  0036E6  2EE8               	decfsz	wreg,f,c
 10751  0036E8  EF6E  F01B         	goto	u8525
 10752  0036EC                     l6925:
 10753                           
 10754                           ; BSR set to: 0
 10755                           ;pic_mmcp.c: 238:  res = RES_ERROR;
 10756  0036EC  0E01               	movlw	1
 10757  0036EE  6F9C               	movwf	disk_readp@res& (0+255),b
 10758  0036F0                     
 10759                           ; BSR set to: 0
 10760                           ;pic_mmcp.c: 239:  if (send_cmd((0x40+17), sector) == 0) {
 10761  0036F0  C092  F00E         	movff	disk_readp@sector,send_cmd@arg
 10762  0036F4  C093  F00F         	movff	disk_readp@sector+1,send_cmd@arg+1
 10763  0036F8  C094  F010         	movff	disk_readp@sector+2,send_cmd@arg+2
 10764  0036FC  C095  F011         	movff	disk_readp@sector+3,send_cmd@arg+3
 10765  003700  0E51               	movlw	81
 10766  003702  EC3C  F026         	call	_send_cmd
 10767  003706  0900               	iorlw	0
 10768  003708  A4D8               	btfss	status,2,c
 10769  00370A  EF89  F01B         	goto	u8531
 10770  00370E  EF8B  F01B         	goto	u8530
 10771  003712                     u8531:
 10772  003712  EF27  F01C         	goto	l6963
 10773  003716                     u8530:
 10774  003716                     
 10775                           ;pic_mmcp.c: 241:   bc = 40000;
 10776  003716  0E9C               	movlw	156
 10777  003718  0100               	movlb	0	; () banked
 10778  00371A  6F9F               	movwf	(disk_readp@bc+1)& (0+255),b
 10779  00371C  0E40               	movlw	64
 10780  00371E  6F9E               	movwf	disk_readp@bc& (0+255),b
 10781  003720                     l6931:
 10782                           
 10783                           ; BSR set to: 0
 10784                           ;pic_mmcp.c: 243:    rc = rcv_spi();
 10785  003720  EC7D  F02B         	call	_rcv_spi	;wreg free
 10786  003724  0100               	movlb	0	; () banked
 10787  003726  6F9D               	movwf	disk_readp@rc& (0+255),b
 10788  003728                     
 10789                           ; BSR set to: 0
 10790                           ;pic_mmcp.c: 244:   } while (rc == 0xFF && --bc);
 10791  003728  299D               	incf	disk_readp@rc& (0+255),w,b
 10792  00372A  A4D8               	btfss	status,2,c
 10793  00372C  EF9A  F01B         	goto	u8541
 10794  003730  EF9C  F01B         	goto	u8540
 10795  003734                     u8541:
 10796  003734  EFA8  F01B         	goto	l6937
 10797  003738                     u8540:
 10798  003738                     
 10799                           ; BSR set to: 0
 10800  003738  079E               	decf	disk_readp@bc& (0+255),f,b
 10801  00373A  A0D8               	btfss	status,0,c
 10802  00373C  079F               	decf	(disk_readp@bc+1)& (0+255),f,b
 10803  00373E  519E               	movf	disk_readp@bc& (0+255),w,b
 10804  003740  119F               	iorwf	(disk_readp@bc+1)& (0+255),w,b
 10805  003742  A4D8               	btfss	status,2,c
 10806  003744  EFA6  F01B         	goto	u8551
 10807  003748  EFA8  F01B         	goto	u8550
 10808  00374C                     u8551:
 10809  00374C  EF90  F01B         	goto	l6931
 10810  003750                     u8550:
 10811  003750                     l6937:
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;pic_mmcp.c: 246:   if (rc == 0xFE) {
 10815  003750  0EFE               	movlw	254
 10816  003752  199D               	xorwf	disk_readp@rc& (0+255),w,b
 10817  003754  A4D8               	btfss	status,2,c
 10818  003756  EFAF  F01B         	goto	u8561
 10819  00375A  EFB1  F01B         	goto	u8560
 10820  00375E                     u8561:
 10821  00375E  EF27  F01C         	goto	l6963
 10822  003762                     u8560:
 10823  003762                     
 10824                           ; BSR set to: 0
 10825                           ;pic_mmcp.c: 247:    bc = 514 - offset - count;
 10826  003762  C096  F09A         	movff	disk_readp@offset,??_disk_readp
 10827  003766  C097  F09B         	movff	disk_readp@offset+1,??_disk_readp+1
 10828  00376A  1F9A               	comf	??_disk_readp& (0+255),f,b
 10829  00376C  1F9B               	comf	(??_disk_readp+1)& (0+255),f,b
 10830  00376E  4B9A               	infsnz	??_disk_readp& (0+255),f,b
 10831  003770  2B9B               	incf	(??_disk_readp+1)& (0+255),f,b
 10832  003772  5198               	movf	disk_readp@count& (0+255),w,b
 10833  003774  5F9A               	subwf	??_disk_readp& (0+255),f,b
 10834  003776  5199               	movf	(disk_readp@count+1)& (0+255),w,b
 10835  003778  5B9B               	subwfb	(??_disk_readp+1)& (0+255),f,b
 10836  00377A  0E02               	movlw	2
 10837  00377C  259A               	addwf	??_disk_readp& (0+255),w,b
 10838  00377E  6F9E               	movwf	disk_readp@bc& (0+255),b
 10839  003780  0E02               	movlw	2
 10840  003782  219B               	addwfc	(??_disk_readp+1)& (0+255),w,b
 10841  003784  6F9F               	movwf	(disk_readp@bc+1)& (0+255),b
 10842                           
 10843                           ;pic_mmcp.c: 250:    if (offset) {
 10844  003786  5196               	movf	disk_readp@offset& (0+255),w,b
 10845  003788  1197               	iorwf	(disk_readp@offset+1)& (0+255),w,b
 10846  00378A  B4D8               	btfsc	status,2,c
 10847  00378C  EFCA  F01B         	goto	u8571
 10848  003790  EFCC  F01B         	goto	u8570
 10849  003794                     u8571:
 10850  003794  EFDB  F01B         	goto	l6945
 10851  003798                     u8570:
 10852  003798                     l6941:
 10853                           
 10854                           ; BSR set to: 0
 10855  003798  EC7D  F02B         	call	_rcv_spi	;wreg free
 10856  00379C  0100               	movlb	0	; () banked
 10857  00379E  0796               	decf	disk_readp@offset& (0+255),f,b
 10858  0037A0  A0D8               	btfss	status,0,c
 10859  0037A2  0797               	decf	(disk_readp@offset+1)& (0+255),f,b
 10860  0037A4  5196               	movf	disk_readp@offset& (0+255),w,b
 10861  0037A6  1197               	iorwf	(disk_readp@offset+1)& (0+255),w,b
 10862  0037A8  A4D8               	btfss	status,2,c
 10863  0037AA  EFD9  F01B         	goto	u8581
 10864  0037AE  EFDB  F01B         	goto	u8580
 10865  0037B2                     u8581:
 10866  0037B2  EFCC  F01B         	goto	l6941
 10867  0037B6                     u8580:
 10868  0037B6                     l6945:
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;pic_mmcp.c: 255:    if (buff) {
 10872  0037B6  5190               	movf	disk_readp@buff& (0+255),w,b
 10873  0037B8  1191               	iorwf	(disk_readp@buff+1)& (0+255),w,b
 10874  0037BA  B4D8               	btfsc	status,2,c
 10875  0037BC  EFE2  F01B         	goto	u8591
 10876  0037C0  EFE4  F01B         	goto	u8590
 10877  0037C4                     u8591:
 10878  0037C4  EFFC  F01B         	goto	l6953
 10879  0037C8                     u8590:
 10880  0037C8                     l6947:
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;pic_mmcp.c: 257:      *buff++ = rcv_spi();
 10884  0037C8  EC7D  F02B         	call	_rcv_spi	;wreg free
 10885  0037CC  C090  FFD9         	movff	disk_readp@buff,fsr2l
 10886  0037D0  C091  FFDA         	movff	disk_readp@buff+1,fsr2h
 10887  0037D4  6EDF               	movwf	indf2,c
 10888  0037D6  0100               	movlb	0	; () banked
 10889  0037D8  4B90               	infsnz	disk_readp@buff& (0+255),f,b
 10890  0037DA  2B91               	incf	(disk_readp@buff+1)& (0+255),f,b
 10891  0037DC                     
 10892                           ; BSR set to: 0
 10893                           ;pic_mmcp.c: 258:     } while (--count);
 10894  0037DC  0798               	decf	disk_readp@count& (0+255),f,b
 10895  0037DE  A0D8               	btfss	status,0,c
 10896  0037E0  0799               	decf	(disk_readp@count+1)& (0+255),f,b
 10897  0037E2  5198               	movf	disk_readp@count& (0+255),w,b
 10898  0037E4  1199               	iorwf	(disk_readp@count+1)& (0+255),w,b
 10899  0037E6  A4D8               	btfss	status,2,c
 10900  0037E8  EFF8  F01B         	goto	u8601
 10901  0037EC  EFFA  F01B         	goto	u8600
 10902  0037F0                     u8601:
 10903  0037F0  EFE4  F01B         	goto	l6947
 10904  0037F4                     u8600:
 10905  0037F4  EF16  F01C         	goto	l6957
 10906  0037F8                     l6953:
 10907                           
 10908                           ; BSR set to: 0
 10909                           ;pic_mmcp.c: 261:      printf("%c", rcv_spi());
 10910  0037F8  0EB8               	movlw	low STR_21
 10911  0037FA  6F86               	movwf	printf@fmt& (0+255),b
 10912  0037FC  0E7D               	movlw	high STR_21
 10913  0037FE  6F87               	movwf	(printf@fmt+1)& (0+255),b
 10914  003800  EC7D  F02B         	call	_rcv_spi	;wreg free
 10915  003804  0100               	movlb	0	; () banked
 10916  003806  6F9A               	movwf	??_disk_readp& (0+255),b
 10917  003808  519A               	movf	??_disk_readp& (0+255),w,b
 10918  00380A  6F88               	movwf	(?_printf+2)& (0+255),b
 10919  00380C  6B89               	clrf	(?_printf+3)& (0+255),b
 10920  00380E  EC1D  F02B         	call	_printf	;wreg free
 10921  003812                     
 10922                           ;pic_mmcp.c: 262:     } while (--count);
 10923  003812  0100               	movlb	0	; () banked
 10924  003814  0798               	decf	disk_readp@count& (0+255),f,b
 10925  003816  A0D8               	btfss	status,0,c
 10926  003818  0799               	decf	(disk_readp@count+1)& (0+255),f,b
 10927  00381A  5198               	movf	disk_readp@count& (0+255),w,b
 10928  00381C  1199               	iorwf	(disk_readp@count+1)& (0+255),w,b
 10929  00381E  A4D8               	btfss	status,2,c
 10930  003820  EF14  F01C         	goto	u8611
 10931  003824  EF16  F01C         	goto	u8610
 10932  003828                     u8611:
 10933  003828  EFFC  F01B         	goto	l6953
 10934  00382C                     u8610:
 10935  00382C                     l6957:
 10936                           
 10937                           ; BSR set to: 0
 10938  00382C  EC7D  F02B         	call	_rcv_spi	;wreg free
 10939  003830  0100               	movlb	0	; () banked
 10940  003832  079E               	decf	disk_readp@bc& (0+255),f,b
 10941  003834  A0D8               	btfss	status,0,c
 10942  003836  079F               	decf	(disk_readp@bc+1)& (0+255),f,b
 10943  003838  519E               	movf	disk_readp@bc& (0+255),w,b
 10944  00383A  119F               	iorwf	(disk_readp@bc+1)& (0+255),w,b
 10945  00383C  A4D8               	btfss	status,2,c
 10946  00383E  EF23  F01C         	goto	u8621
 10947  003842  EF25  F01C         	goto	u8620
 10948  003846                     u8621:
 10949  003846  EF16  F01C         	goto	l6957
 10950  00384A                     u8620:
 10951  00384A                     
 10952                           ; BSR set to: 0
 10953                           ;pic_mmcp.c: 268:    res = RES_OK;
 10954  00384A  0E00               	movlw	0
 10955  00384C  6F9C               	movwf	disk_readp@res& (0+255),b
 10956  00384E                     l6963:
 10957                           
 10958                           ;pic_mmcp.c: 272:  LATAbits.LA5 = 1;
 10959  00384E  8A89               	bsf	137,5,c	;volatile
 10960  003850                     
 10961                           ;pic_mmcp.c: 273:  rcv_spi();
 10962  003850  EC7D  F02B         	call	_rcv_spi	;wreg free
 10963  003854                     
 10964                           ;pic_mmcp.c: 275:  return res;
 10965  003854  0100               	movlb	0	; () banked
 10966  003856  519C               	movf	disk_readp@res& (0+255),w,b
 10967  003858                     
 10968                           ; BSR set to: 0
 10969  003858  0012               	return		;funcret
 10970  00385A                     __end_of_disk_readp:
 10971                           	callstack 0
 10972                           
 10973 ;; *************** function _send_cmd *****************
 10974 ;; Defined at:
 10975 ;;		line 122 in file "pic_mmcp.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;  cmd             1    wreg     unsigned char 
 10978 ;;  arg             4   13[COMRAM] unsigned long 
 10979 ;; Auto vars:     Size  Location     Type
 10980 ;;  cmd             1   18[COMRAM] unsigned char 
 10981 ;;  res             1   19[COMRAM] unsigned char 
 10982 ;;  n               1   17[COMRAM] unsigned char 
 10983 ;; Return value:  Size  Location     Type
 10984 ;;                  1    wreg      unsigned char 
 10985 ;; Registers used:
 10986 ;;		wreg, status,2, status,0, cstack
 10987 ;; Tracked objects:
 10988 ;;		On entry : 0/0
 10989 ;;		On exit  : 0/0
 10990 ;;		Unchanged: 0/0
 10991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10992 ;;      Params:         4       0       0       0       0       0       0
 10993 ;;      Locals:         3       0       0       0       0       0       0
 10994 ;;      Temps:          0       0       0       0       0       0       0
 10995 ;;      Totals:         7       0       0       0       0       0       0
 10996 ;;Total ram usage:        7 bytes
 10997 ;; Hardware stack levels used: 1
 10998 ;; Hardware stack levels required when called: 3
 10999 ;; This function calls:
 11000 ;;		_rcv_spi
 11001 ;;		_send_cmd2
 11002 ;;		_xmit_spi
 11003 ;; This function is called by:
 11004 ;;		_disk_initialize
 11005 ;;		_disk_readp
 11006 ;; This function uses a non-reentrant model
 11007 ;;
 11008                           
 11009                           	psect	text34
 11010  004C78                     __ptext34:
 11011                           	callstack 0
 11012  004C78                     _send_cmd:
 11013                           	callstack 24
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;incstack = 0
 11017                           ;send_cmd@cmd stored from wreg
 11018  004C78  6E13               	movwf	send_cmd@cmd^0,c
 11019  004C7A                     
 11020                           ;pic_mmcp.c: 123:  BYTE cmd,;pic_mmcp.c: 124:  DWORD arg;pic_mmcp.c: 126: {;pic_mmcp.c: 
      +                          127:  BYTE n, res;;pic_mmcp.c: 129:  if (cmd & 0x80) {
 11021  004C7A  AE13               	btfss	send_cmd@cmd^0,7,c
 11022  004C7C  EF42  F026         	goto	u4941
 11023  004C80  EF44  F026         	goto	u4940
 11024  004C84                     u4941:
 11025  004C84  EF5C  F026         	goto	l569
 11026  004C88                     u4940:
 11027  004C88                     
 11028                           ;pic_mmcp.c: 130:   cmd &= 0x7F;
 11029  004C88  9E13               	bcf	send_cmd@cmd^0,7,c
 11030  004C8A                     
 11031                           ;pic_mmcp.c: 131:   res = send_cmd2((0x40+55), 0);
 11032  004C8A  0E00               	movlw	0
 11033  004C8C  6E07               	movwf	send_cmd2@arg^0,c
 11034  004C8E  0E00               	movlw	0
 11035  004C90  6E08               	movwf	(send_cmd2@arg+1)^0,c
 11036  004C92  0E00               	movlw	0
 11037  004C94  6E09               	movwf	(send_cmd2@arg+2)^0,c
 11038  004C96  0E00               	movlw	0
 11039  004C98  6E0A               	movwf	(send_cmd2@arg+3)^0,c
 11040  004C9A  0E77               	movlw	119
 11041  004C9C  EC40  F028         	call	_send_cmd2
 11042  004CA0  6E14               	movwf	send_cmd@res^0,c
 11043  004CA2                     
 11044                           ;pic_mmcp.c: 132:   if (res > 1)
 11045  004CA2  0E01               	movlw	1
 11046  004CA4  6414               	cpfsgt	send_cmd@res^0,c
 11047  004CA6  EF57  F026         	goto	u4951
 11048  004CAA  EF59  F026         	goto	u4950
 11049  004CAE                     u4951:
 11050  004CAE  EF5C  F026         	goto	l569
 11051  004CB2                     u4950:
 11052  004CB2                     l4621:
 11053                           
 11054                           ;pic_mmcp.c: 133:             return res;
 11055  004CB2  5014               	movf	send_cmd@res^0,w,c
 11056  004CB4  EF9D  F026         	goto	l571
 11057  004CB8                     l569:
 11058                           
 11059                           ;pic_mmcp.c: 137:  LATAbits.LA5 = 1;
 11060  004CB8  8A89               	bsf	137,5,c	;volatile
 11061  004CBA                     
 11062                           ;pic_mmcp.c: 138:  rcv_spi();
 11063  004CBA  EC7D  F02B         	call	_rcv_spi	;wreg free
 11064  004CBE                     
 11065                           ;pic_mmcp.c: 139:  LATAbits.LA5 = 0;
 11066  004CBE  9A89               	bcf	137,5,c	;volatile
 11067                           
 11068                           ;pic_mmcp.c: 140:  rcv_spi();
 11069  004CC0  EC7D  F02B         	call	_rcv_spi	;wreg free
 11070                           
 11071                           ;pic_mmcp.c: 143:  xmit_spi(cmd);
 11072  004CC4  5013               	movf	send_cmd@cmd^0,w,c
 11073  004CC6  EC64  F02B         	call	_xmit_spi
 11074                           
 11075                           ;pic_mmcp.c: 144:  xmit_spi((BYTE)(arg >> 24));
 11076  004CCA  5011               	movf	(send_cmd@arg+3)^0,w,c
 11077  004CCC  EC64  F02B         	call	_xmit_spi
 11078                           
 11079                           ;pic_mmcp.c: 145:  xmit_spi((BYTE)(arg >> 16));
 11080  004CD0  5010               	movf	(send_cmd@arg+2)^0,w,c
 11081  004CD2  EC64  F02B         	call	_xmit_spi
 11082                           
 11083                           ;pic_mmcp.c: 146:  xmit_spi((BYTE)(arg >> 8));
 11084  004CD6  500F               	movf	(send_cmd@arg+1)^0,w,c
 11085  004CD8  EC64  F02B         	call	_xmit_spi
 11086                           
 11087                           ;pic_mmcp.c: 147:  xmit_spi((BYTE)arg);
 11088  004CDC  500E               	movf	send_cmd@arg^0,w,c
 11089  004CDE  EC64  F02B         	call	_xmit_spi
 11090  004CE2                     
 11091                           ;pic_mmcp.c: 148:  n = 0x01;
 11092  004CE2  0E01               	movlw	1
 11093  004CE4  6E12               	movwf	send_cmd@n^0,c
 11094  004CE6                     
 11095                           ;pic_mmcp.c: 149:  if (cmd == (0x40+0)) n = 0x95;
 11096  004CE6  0E40               	movlw	64
 11097  004CE8  1813               	xorwf	send_cmd@cmd^0,w,c
 11098  004CEA  A4D8               	btfss	status,2,c
 11099  004CEC  EF7A  F026         	goto	u4961
 11100  004CF0  EF7C  F026         	goto	u4960
 11101  004CF4                     u4961:
 11102  004CF4  EF7E  F026         	goto	l4635
 11103  004CF8                     u4960:
 11104  004CF8  0E95               	movlw	149
 11105  004CFA  6E12               	movwf	send_cmd@n^0,c
 11106  004CFC                     l4635:
 11107                           
 11108                           ;pic_mmcp.c: 150:  if (cmd == (0x40+8)) n = 0x87;
 11109  004CFC  0E48               	movlw	72
 11110  004CFE  1813               	xorwf	send_cmd@cmd^0,w,c
 11111  004D00  A4D8               	btfss	status,2,c
 11112  004D02  EF85  F026         	goto	u4971
 11113  004D06  EF87  F026         	goto	u4970
 11114  004D0A                     u4971:
 11115  004D0A  EF89  F026         	goto	l4639
 11116  004D0E                     u4970:
 11117  004D0E  0E87               	movlw	135
 11118  004D10  6E12               	movwf	send_cmd@n^0,c
 11119  004D12                     l4639:
 11120                           
 11121                           ;pic_mmcp.c: 151:  xmit_spi(n);
 11122  004D12  5012               	movf	send_cmd@n^0,w,c
 11123  004D14  EC64  F02B         	call	_xmit_spi
 11124  004D18                     
 11125                           ;pic_mmcp.c: 154:  n = 10;
 11126  004D18  0E0A               	movlw	10
 11127  004D1A  6E12               	movwf	send_cmd@n^0,c
 11128  004D1C                     l574:
 11129                           
 11130                           ;pic_mmcp.c: 156:   res = rcv_spi();
 11131  004D1C  EC7D  F02B         	call	_rcv_spi	;wreg free
 11132  004D20  6E14               	movwf	send_cmd@res^0,c
 11133  004D22                     
 11134                           ;pic_mmcp.c: 157:  } while ((res & 0x80) && --n);
 11135  004D22  AE14               	btfss	send_cmd@res^0,7,c
 11136  004D24  EF96  F026         	goto	u4981
 11137  004D28  EF98  F026         	goto	u4980
 11138  004D2C                     u4981:
 11139  004D2C  EF59  F026         	goto	l4621
 11140  004D30                     u4980:
 11141  004D30  2E12               	decfsz	send_cmd@n^0,f,c
 11142  004D32  EF8E  F026         	goto	l574
 11143  004D36  EF59  F026         	goto	l4621
 11144  004D3A                     l571:
 11145  004D3A  0012               	return		;funcret
 11146  004D3C                     __end_of_send_cmd:
 11147                           	callstack 0
 11148                           
 11149 ;; *************** function _send_cmd2 *****************
 11150 ;; Defined at:
 11151 ;;		line 89 in file "pic_mmcp.c"
 11152 ;; Parameters:    Size  Location     Type
 11153 ;;  cmd             1    wreg     unsigned char 
 11154 ;;  arg             4    6[COMRAM] unsigned long 
 11155 ;; Auto vars:     Size  Location     Type
 11156 ;;  cmd             1   11[COMRAM] unsigned char 
 11157 ;;  n               1   12[COMRAM] unsigned char 
 11158 ;;  res             1   10[COMRAM] unsigned char 
 11159 ;; Return value:  Size  Location     Type
 11160 ;;                  1    wreg      unsigned char 
 11161 ;; Registers used:
 11162 ;;		wreg, status,2, status,0, cstack
 11163 ;; Tracked objects:
 11164 ;;		On entry : 0/0
 11165 ;;		On exit  : 0/0
 11166 ;;		Unchanged: 0/0
 11167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11168 ;;      Params:         4       0       0       0       0       0       0
 11169 ;;      Locals:         3       0       0       0       0       0       0
 11170 ;;      Temps:          0       0       0       0       0       0       0
 11171 ;;      Totals:         7       0       0       0       0       0       0
 11172 ;;Total ram usage:        7 bytes
 11173 ;; Hardware stack levels used: 1
 11174 ;; Hardware stack levels required when called: 2
 11175 ;; This function calls:
 11176 ;;		_rcv_spi
 11177 ;;		_xmit_spi
 11178 ;; This function is called by:
 11179 ;;		_send_cmd
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           	psect	text35
 11184  005080                     __ptext35:
 11185                           	callstack 0
 11186  005080                     _send_cmd2:
 11187                           	callstack 24
 11188                           
 11189                           ;incstack = 0
 11190                           ;send_cmd2@cmd stored from wreg
 11191  005080  6E0C               	movwf	send_cmd2@cmd^0,c
 11192  005082                     
 11193                           ;pic_mmcp.c: 90:  BYTE cmd,;pic_mmcp.c: 91:  DWORD arg;pic_mmcp.c: 93: {;pic_mmcp.c: 94:
      +                            BYTE n, res;;pic_mmcp.c: 97:  LATAbits.LA5 = 1;
 11194  005082  8A89               	bsf	137,5,c	;volatile
 11195  005084                     
 11196                           ;pic_mmcp.c: 98:  rcv_spi();
 11197  005084  EC7D  F02B         	call	_rcv_spi	;wreg free
 11198  005088                     
 11199                           ;pic_mmcp.c: 99:  LATAbits.LA5 = 0;
 11200  005088  9A89               	bcf	137,5,c	;volatile
 11201                           
 11202                           ;pic_mmcp.c: 100:  rcv_spi();
 11203  00508A  EC7D  F02B         	call	_rcv_spi	;wreg free
 11204                           
 11205                           ;pic_mmcp.c: 103:  xmit_spi(cmd);
 11206  00508E  500C               	movf	send_cmd2@cmd^0,w,c
 11207  005090  EC64  F02B         	call	_xmit_spi
 11208                           
 11209                           ;pic_mmcp.c: 104:  xmit_spi((BYTE)(arg >> 24));
 11210  005094  500A               	movf	(send_cmd2@arg+3)^0,w,c
 11211  005096  EC64  F02B         	call	_xmit_spi
 11212                           
 11213                           ;pic_mmcp.c: 105:  xmit_spi((BYTE)(arg >> 16));
 11214  00509A  5009               	movf	(send_cmd2@arg+2)^0,w,c
 11215  00509C  EC64  F02B         	call	_xmit_spi
 11216                           
 11217                           ;pic_mmcp.c: 106:  xmit_spi((BYTE)(arg >> 8));
 11218  0050A0  5008               	movf	(send_cmd2@arg+1)^0,w,c
 11219  0050A2  EC64  F02B         	call	_xmit_spi
 11220                           
 11221                           ;pic_mmcp.c: 107:  xmit_spi((BYTE)arg);
 11222  0050A6  5007               	movf	send_cmd2@arg^0,w,c
 11223  0050A8  EC64  F02B         	call	_xmit_spi
 11224  0050AC                     
 11225                           ;pic_mmcp.c: 108:  n = 0x01;
 11226  0050AC  0E01               	movlw	1
 11227  0050AE  6E0D               	movwf	send_cmd2@n^0,c
 11228  0050B0                     
 11229                           ;pic_mmcp.c: 109:  if (cmd == (0x40+0)) n = 0x95;
 11230  0050B0  0E40               	movlw	64
 11231  0050B2  180C               	xorwf	send_cmd2@cmd^0,w,c
 11232  0050B4  A4D8               	btfss	status,2,c
 11233  0050B6  EF5F  F028         	goto	u4901
 11234  0050BA  EF61  F028         	goto	u4900
 11235  0050BE                     u4901:
 11236  0050BE  EF63  F028         	goto	l4583
 11237  0050C2                     u4900:
 11238  0050C2  0E95               	movlw	149
 11239  0050C4  6E0D               	movwf	send_cmd2@n^0,c
 11240  0050C6                     l4583:
 11241                           
 11242                           ;pic_mmcp.c: 110:  if (cmd == (0x40+8)) n = 0x87;
 11243  0050C6  0E48               	movlw	72
 11244  0050C8  180C               	xorwf	send_cmd2@cmd^0,w,c
 11245  0050CA  A4D8               	btfss	status,2,c
 11246  0050CC  EF6A  F028         	goto	u4911
 11247  0050D0  EF6C  F028         	goto	u4910
 11248  0050D4                     u4911:
 11249  0050D4  EF6E  F028         	goto	l4587
 11250  0050D8                     u4910:
 11251  0050D8  0E87               	movlw	135
 11252  0050DA  6E0D               	movwf	send_cmd2@n^0,c
 11253  0050DC                     l4587:
 11254                           
 11255                           ;pic_mmcp.c: 111:  xmit_spi(n);
 11256  0050DC  500D               	movf	send_cmd2@n^0,w,c
 11257  0050DE  EC64  F02B         	call	_xmit_spi
 11258  0050E2                     
 11259                           ;pic_mmcp.c: 114:  n = 10;
 11260  0050E2  0E0A               	movlw	10
 11261  0050E4  6E0D               	movwf	send_cmd2@n^0,c
 11262  0050E6                     l562:
 11263                           
 11264                           ;pic_mmcp.c: 116:   res = rcv_spi();
 11265  0050E6  EC7D  F02B         	call	_rcv_spi	;wreg free
 11266  0050EA  6E0B               	movwf	send_cmd2@res^0,c
 11267  0050EC                     
 11268                           ;pic_mmcp.c: 117:  } while ((res & 0x80) && --n);
 11269  0050EC  AE0B               	btfss	send_cmd2@res^0,7,c
 11270  0050EE  EF7B  F028         	goto	u4921
 11271  0050F2  EF7D  F028         	goto	u4920
 11272  0050F6                     u4921:
 11273  0050F6  EF80  F028         	goto	l4595
 11274  0050FA                     u4920:
 11275  0050FA  2E0D               	decfsz	send_cmd2@n^0,f,c
 11276  0050FC  EF73  F028         	goto	l562
 11277  005100                     l4595:
 11278                           
 11279                           ;pic_mmcp.c: 119:  return res;
 11280  005100  500B               	movf	send_cmd2@res^0,w,c
 11281  005102  0012               	return		;funcret
 11282  005104                     __end_of_send_cmd2:
 11283                           	callstack 0
 11284                           
 11285 ;; *************** function _xmit_spi *****************
 11286 ;; Defined at:
 11287 ;;		line 45 in file "pic_mmcp.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;  d               1    wreg     unsigned char 
 11290 ;; Auto vars:     Size  Location     Type
 11291 ;;  d               1    5[COMRAM] unsigned char 
 11292 ;; Return value:  Size  Location     Type
 11293 ;;                  1    wreg      void 
 11294 ;; Registers used:
 11295 ;;		wreg
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11301 ;;      Params:         0       0       0       0       0       0       0
 11302 ;;      Locals:         1       0       0       0       0       0       0
 11303 ;;      Temps:          0       0       0       0       0       0       0
 11304 ;;      Totals:         1       0       0       0       0       0       0
 11305 ;;Total ram usage:        1 bytes
 11306 ;; Hardware stack levels used: 1
 11307 ;; Hardware stack levels required when called: 1
 11308 ;; This function calls:
 11309 ;;		Nothing
 11310 ;; This function is called by:
 11311 ;;		_send_cmd2
 11312 ;;		_send_cmd
 11313 ;; This function uses a non-reentrant model
 11314 ;;
 11315                           
 11316                           	psect	text36
 11317  0056C8                     __ptext36:
 11318                           	callstack 0
 11319  0056C8                     _xmit_spi:
 11320                           	callstack 25
 11321                           
 11322                           ;incstack = 0
 11323                           ;xmit_spi@d stored from wreg
 11324  0056C8  6E06               	movwf	xmit_spi@d^0,c
 11325  0056CA                     
 11326                           ;pic_mmcp.c: 45: void xmit_spi (BYTE d);pic_mmcp.c: 46: {;pic_mmcp.c: 47:  SSPBUF = d;
 11327  0056CA  C006  FFC9         	movff	xmit_spi@d,4041	;volatile
 11328  0056CE                     l546:
 11329  0056CE  A69E               	btfss	3998,3,c	;volatile
 11330  0056D0  EF6C  F02B         	goto	u4701
 11331  0056D4  EF6E  F02B         	goto	u4700
 11332  0056D8                     u4701:
 11333  0056D8  EF67  F02B         	goto	l546
 11334  0056DC                     u4700:
 11335  0056DC                     
 11336                           ;pic_mmcp.c: 49:     SSPIF = 0;
 11337  0056DC  969E               	bcf	3998,3,c	;volatile
 11338                           
 11339                           ;pic_mmcp.c: 50:  SSPBUF;
 11340  0056DE  50C9               	movf	201,w,c	;volatile
 11341  0056E0  0012               	return		;funcret
 11342  0056E2                     __end_of_xmit_spi:
 11343                           	callstack 0
 11344                           
 11345 ;; *************** function _rcv_spi *****************
 11346 ;; Defined at:
 11347 ;;		line 53 in file "pic_mmcp.c"
 11348 ;; Parameters:    Size  Location     Type
 11349 ;;		None
 11350 ;; Auto vars:     Size  Location     Type
 11351 ;;		None
 11352 ;; Return value:  Size  Location     Type
 11353 ;;                  1    wreg      unsigned char 
 11354 ;; Registers used:
 11355 ;;		wreg, status,2
 11356 ;; Tracked objects:
 11357 ;;		On entry : 0/0
 11358 ;;		On exit  : 0/0
 11359 ;;		Unchanged: 0/0
 11360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11361 ;;      Params:         0       0       0       0       0       0       0
 11362 ;;      Locals:         0       0       0       0       0       0       0
 11363 ;;      Temps:          0       0       0       0       0       0       0
 11364 ;;      Totals:         0       0       0       0       0       0       0
 11365 ;;Total ram usage:        0 bytes
 11366 ;; Hardware stack levels used: 1
 11367 ;; Hardware stack levels required when called: 1
 11368 ;; This function calls:
 11369 ;;		Nothing
 11370 ;; This function is called by:
 11371 ;;		_send_cmd2
 11372 ;;		_send_cmd
 11373 ;;		_disk_initialize
 11374 ;;		_disk_readp
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           	psect	text37
 11379  0056FA                     __ptext37:
 11380                           	callstack 0
 11381  0056FA                     _rcv_spi:
 11382                           	callstack 24
 11383  0056FA                     
 11384                           ;pic_mmcp.c: 55:     SSPBUF = 0xff;
 11385  0056FA  68C9               	setf	201,c	;volatile
 11386  0056FC                     l552:
 11387  0056FC  A69E               	btfss	3998,3,c	;volatile
 11388  0056FE  EF83  F02B         	goto	u4711
 11389  005702  EF85  F02B         	goto	u4710
 11390  005706                     u4711:
 11391  005706  EF7E  F02B         	goto	l552
 11392  00570A                     u4710:
 11393  00570A                     
 11394                           ;pic_mmcp.c: 57:     SSPIF = 0;
 11395  00570A  969E               	bcf	3998,3,c	;volatile
 11396  00570C                     
 11397                           ;pic_mmcp.c: 58:  return SSPBUF;
 11398  00570C  50C9               	movf	201,w,c	;volatile
 11399  00570E  0012               	return		;funcret
 11400  005710                     __end_of_rcv_spi:
 11401                           	callstack 0
 11402                           
 11403 ;; *************** function _printf *****************
 11404 ;; Defined at:
 11405 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;  fmt             2    6[BANK0 ] PTR const unsigned char 
 11408 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 11409 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 11410 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 11411 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 11412 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 11413 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 11414 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 11415 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 11416 ;; Auto vars:     Size  Location     Type
 11417 ;;  ap              2  115[COMRAM] PTR void [1]
 11418 ;;		 -> ?_printf(2), 
 11419 ;;  ret             2    0        int 
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  2    6[BANK0 ] int 
 11422 ;; Registers used:
 11423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11424 ;; Tracked objects:
 11425 ;;		On entry : 0/0
 11426 ;;		On exit  : 0/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11429 ;;      Params:         0      10       0       0       0       0       0
 11430 ;;      Locals:         2       0       0       0       0       0       0
 11431 ;;      Temps:          0       0       0       0       0       0       0
 11432 ;;      Totals:         2      10       0       0       0       0       0
 11433 ;;Total ram usage:       12 bytes
 11434 ;; Hardware stack levels used: 1
 11435 ;; Hardware stack levels required when called: 8
 11436 ;; This function calls:
 11437 ;;		_vfprintf
 11438 ;; This function is called by:
 11439 ;;		_put_rc
 11440 ;;		_put_drc
 11441 ;;		_main
 11442 ;;		_uart_gets
 11443 ;;		_put_dump
 11444 ;;		_disk_readp
 11445 ;; This function uses a non-reentrant model
 11446 ;;
 11447                           
 11448                           	psect	text38
 11449  00563A                     __ptext38:
 11450                           	callstack 0
 11451  00563A                     _printf:
 11452                           	callstack 21
 11453  00563A  0E88               	movlw	low (?_printf+2)
 11454  00563C  6E74               	movwf	printf@ap^0,c
 11455  00563E  0E00               	movlw	high (?_printf+2)
 11456  005640  6E75               	movwf	(printf@ap+1)^0,c
 11457  005642  0E00               	movlw	0
 11458  005644  0100               	movlb	0	; () banked
 11459  005646  6F80               	movwf	vfprintf@fp& (0+255),b
 11460  005648  0E00               	movlw	0
 11461  00564A  6F81               	movwf	(vfprintf@fp+1)& (0+255),b
 11462  00564C  C086  F082         	movff	printf@fmt,vfprintf@fmt
 11463  005650  C087  F083         	movff	printf@fmt+1,vfprintf@fmt+1
 11464  005654  0E74               	movlw	low printf@ap
 11465  005656  6F84               	movwf	vfprintf@ap& (0+255),b
 11466  005658  0E00               	movlw	high printf@ap
 11467  00565A  6F85               	movwf	(vfprintf@ap+1)& (0+255),b
 11468  00565C  EC6E  F029         	call	_vfprintf	;wreg free
 11469  005660  0012               	return		;funcret
 11470  005662                     __end_of_printf:
 11471                           	callstack 0
 11472                           
 11473 ;; *************** function _vfprintf *****************
 11474 ;; Defined at:
 11475 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 11478 ;;		 -> NULL(0), 
 11479 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 11480 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 11481 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 11482 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 11483 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 11484 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 11485 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 11486 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 11487 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 11488 ;;  ap              2    4[BANK0 ] PTR PTR void 
 11489 ;;		 -> printf@ap(2), 
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;  cfmt            2  113[COMRAM] PTR unsigned char 
 11492 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 11493 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 11494 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 11495 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 11496 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 11497 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 11498 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 11499 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 11500 ;; Return value:  Size  Location     Type
 11501 ;;                  2    0[BANK0 ] int 
 11502 ;; Registers used:
 11503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11504 ;; Tracked objects:
 11505 ;;		On entry : 0/0
 11506 ;;		On exit  : 0/0
 11507 ;;		Unchanged: 0/0
 11508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11509 ;;      Params:         0       6       0       0       0       0       0
 11510 ;;      Locals:         2       0       0       0       0       0       0
 11511 ;;      Temps:          0       0       0       0       0       0       0
 11512 ;;      Totals:         2       6       0       0       0       0       0
 11513 ;;Total ram usage:        8 bytes
 11514 ;; Hardware stack levels used: 1
 11515 ;; Hardware stack levels required when called: 7
 11516 ;; This function calls:
 11517 ;;		_vfpfcnvrt
 11518 ;; This function is called by:
 11519 ;;		_printf
 11520 ;; This function uses a non-reentrant model
 11521 ;;
 11522                           
 11523                           	psect	text39
 11524  0052DC                     __ptext39:
 11525                           	callstack 0
 11526  0052DC                     _vfprintf:
 11527                           	callstack 21
 11528  0052DC                     
 11529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 11530  0052DC  C082  F072         	movff	vfprintf@fmt,vfprintf@cfmt
 11531  0052E0  C083  F073         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 11532  0052E4                     
 11533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 11534  0052E4  0E00               	movlw	0
 11535  0052E6  0100               	movlb	0	; () banked
 11536  0052E8  6FF8               	movwf	(_nout+1)& (0+255),b
 11537  0052EA  0E00               	movlw	0
 11538  0052EC  6FF7               	movwf	_nout& (0+255),b
 11539                           
 11540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11541  0052EE  EF8C  F029         	goto	l6913
 11542  0052F2                     l6911:
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 11546  0052F2  C080  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
 11547  0052F6  C081  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 11548  0052FA  0E72               	movlw	low vfprintf@cfmt
 11549  0052FC  6E4B               	movwf	vfpfcnvrt@fmt^0,c
 11550  0052FE  0E00               	movlw	high vfprintf@cfmt
 11551  005300  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
 11552  005302  C084  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
 11553  005306  C085  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 11554  00530A  EC09  F000         	call	_vfpfcnvrt	;wreg free
 11555  00530E  5049               	movf	?_vfpfcnvrt^0,w,c
 11556  005310  0100               	movlb	0	; () banked
 11557  005312  27F7               	addwf	_nout& (0+255),f,b
 11558  005314  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
 11559  005316  23F8               	addwfc	(_nout+1)& (0+255),f,b
 11560  005318                     l6913:
 11561                           
 11562                           ; BSR set to: 0
 11563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11564  005318  C072  FFF6         	movff	vfprintf@cfmt,tblptrl
 11565  00531C  C073  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 11566  005320                     	if	0	;tblptru may be non-zero
 11567  005320                     	endif
 11568  005320                     	if	0	;tblptru may be non-zero
 11569  005320                     	endif
 11570  005320  0008               	tblrd		*
 11571  005322  50F5               	movf	tablat,w,c
 11572  005324  0900               	iorlw	0
 11573  005326  A4D8               	btfss	status,2,c
 11574  005328  EF98  F029         	goto	u8501
 11575  00532C  EF9A  F029         	goto	u8500
 11576  005330                     u8501:
 11577  005330  EF79  F029         	goto	l6911
 11578  005334                     u8500:
 11579  005334                     
 11580                           ; BSR set to: 0
 11581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 11582  005334  C0F7  F080         	movff	_nout,?_vfprintf
 11583  005338  C0F8  F081         	movff	_nout+1,?_vfprintf+1
 11584  00533C                     
 11585                           ; BSR set to: 0
 11586  00533C  0012               	return		;funcret
 11587  00533E                     __end_of_vfprintf:
 11588                           	callstack 0
 11589                           
 11590 ;; *************** function _vfpfcnvrt *****************
 11591 ;; Defined at:
 11592 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 11593 ;; Parameters:    Size  Location     Type
 11594 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
 11595 ;;		 -> NULL(0), 
 11596 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
 11597 ;;		 -> vfprintf@cfmt(2), 
 11598 ;;  ap              2   76[COMRAM] PTR PTR void 
 11599 ;;		 -> printf@ap(2), 
 11600 ;; Auto vars:     Size  Location     Type
 11601 ;;  llu             8  105[COMRAM] unsigned long long 
 11602 ;;  ll              8   96[COMRAM] long long 
 11603 ;;  f               4    0        long long 
 11604 ;;  vp              3    0        PTR void 
 11605 ;;  ct              3    0        unsigned char [3]
 11606 ;;  cp              2   92[COMRAM] PTR unsigned char 
 11607 ;;		 -> ?_printf(2), main@fno(22), put_rc@str(69), 
 11608 ;;  i               2    0        int 
 11609 ;;  done            2    0        int 
 11610 ;;  c               1  104[COMRAM] unsigned char 
 11611 ;; Return value:  Size  Location     Type
 11612 ;;                  2   72[COMRAM] int 
 11613 ;; Registers used:
 11614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11615 ;; Tracked objects:
 11616 ;;		On entry : 0/0
 11617 ;;		On exit  : 0/0
 11618 ;;		Unchanged: 0/0
 11619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11620 ;;      Params:         6       0       0       0       0       0       0
 11621 ;;      Locals:        21       0       0       0       0       0       0
 11622 ;;      Temps:         14       0       0       0       0       0       0
 11623 ;;      Totals:        41       0       0       0       0       0       0
 11624 ;;Total ram usage:       41 bytes
 11625 ;; Hardware stack levels used: 1
 11626 ;; Hardware stack levels required when called: 6
 11627 ;; This function calls:
 11628 ;;		_atoi
 11629 ;;		_dtoa
 11630 ;;		_fputc
 11631 ;;		_isdigit
 11632 ;;		_stoa
 11633 ;;		_strncmp
 11634 ;;		_utoa
 11635 ;;		_xtoa
 11636 ;; This function is called by:
 11637 ;;		_vfprintf
 11638 ;; This function uses a non-reentrant model
 11639 ;;
 11640                           
 11641                           	psect	text40
 11642  000012                     __ptext40:
 11643                           	callstack 0
 11644  000012                     _vfpfcnvrt:
 11645                           	callstack 21
 11646  000012                     
 11647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 11648  000012  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11649  000016  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11650  00001A  CFDE FFF6          	movff	postinc2,tblptrl
 11651  00001E  CFDD FFF7          	movff	postdec2,tblptrh
 11652  000022                     	if	0	;tblptru may be non-zero
 11653  000022                     	endif
 11654  000022                     	if	0	;tblptru may be non-zero
 11655  000022                     	endif
 11656  000022  0008               	tblrd		*
 11657  000024  50F5               	movf	tablat,w,c
 11658  000026  0A25               	xorlw	37
 11659  000028  A4D8               	btfss	status,2,c
 11660  00002A  EF19  F000         	goto	u8321
 11661  00002E  EF1B  F000         	goto	u8320
 11662  000032                     u8321:
 11663  000032  EFD0  F003         	goto	l6899
 11664  000036                     u8320:
 11665  000036                     
 11666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 11667  000036  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11668  00003A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11669  00003E  2ADE               	incf	postinc2,f,c
 11670  000040  0E00               	movlw	0
 11671  000042  22DD               	addwfc	postdec2,f,c
 11672  000044                     
 11673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 11674  000044  0E00               	movlw	0
 11675  000046  0100               	movlb	0	; () banked
 11676  000048  6FFA               	movwf	(_width+1)& (0+255),b
 11677  00004A  0E00               	movlw	0
 11678  00004C  6FF9               	movwf	_width& (0+255),b
 11679  00004E  C0F9  F078         	movff	_width,_flags
 11680  000052  C0FA  F079         	movff	_width+1,_flags+1
 11681  000056                     
 11682                           ; BSR set to: 0
 11683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 11684  000056  6876               	setf	_prec^0,c
 11685  000058  6877               	setf	(_prec+1)^0,c
 11686  00005A                     
 11687                           ; BSR set to: 0
 11688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
 11689  00005A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11690  00005E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11691  000062  CFDE FFF6          	movff	postinc2,tblptrl
 11692  000066  CFDD FFF7          	movff	postdec2,tblptrh
 11693  00006A                     	if	0	;tblptru may be non-zero
 11694  00006A                     	endif
 11695  00006A                     	if	0	;tblptru may be non-zero
 11696  00006A                     	endif
 11697  00006A  0008               	tblrd		*
 11698  00006C  50F5               	movf	tablat,w,c
 11699  00006E  0A2A               	xorlw	42
 11700  000070  A4D8               	btfss	status,2,c
 11701  000072  EF3D  F000         	goto	u8331
 11702  000076  EF3F  F000         	goto	u8330
 11703  00007A                     u8331:
 11704  00007A  EF68  F000         	goto	l6801
 11705  00007E                     u8330:
 11706  00007E                     
 11707                           ; BSR set to: 0
 11708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
 11709  00007E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11710  000082  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11711  000086  2ADE               	incf	postinc2,f,c
 11712  000088  0E00               	movlw	0
 11713  00008A  22DD               	addwfc	postdec2,f,c
 11714                           
 11715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
 11716  00008C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11717  000090  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11718  000094  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11719  000098  0E02               	movlw	2
 11720  00009A  26DE               	addwf	postinc2,f,c
 11721  00009C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11722  0000A0  0E00               	movlw	0
 11723  0000A2  22DD               	addwfc	postdec2,f,c
 11724  0000A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11725  0000A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11726  0000AC  CFDE F0F9          	movff	postinc2,_width
 11727  0000B0  CFDD F0FA          	movff	postdec2,_width+1
 11728  0000B4                     
 11729                           ; BSR set to: 0
 11730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
 11731  0000B4  BFFA               	btfsc	(_width+1)& (0+255),7,b
 11732  0000B6  EF61  F000         	goto	u8340
 11733  0000BA  EF5F  F000         	goto	u8341
 11734  0000BE                     u8341:
 11735  0000BE  EFAB  F000         	goto	l6811
 11736  0000C2                     u8340:
 11737  0000C2                     
 11738                           ; BSR set to: 0
 11739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
 11740  0000C2  8078               	bsf	_flags^0,0,c
 11741                           
 11742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
 11743  0000C4  6DF9               	negf	_width& (0+255),b
 11744  0000C6  1FFA               	comf	(_width+1)& (0+255),f,b
 11745  0000C8  B0D8               	btfsc	status,0,c
 11746  0000CA  2BFA               	incf	(_width+1)& (0+255),f,b
 11747  0000CC  EFAB  F000         	goto	l6811
 11748  0000D0                     l6801:
 11749                           
 11750                           ; BSR set to: 0
 11751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
 11752  0000D0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11753  0000D4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11754  0000D8  CFDE F00D          	movff	postinc2,atoi@s
 11755  0000DC  CFDD F00E          	movff	postdec2,atoi@s+1
 11756  0000E0  EC2D  F01C         	call	_atoi	;wreg free
 11757  0000E4  C00D  F0F9         	movff	?_atoi,_width
 11758  0000E8  C00E  F0FA         	movff	?_atoi+1,_width+1
 11759                           
 11760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11761  0000EC  EF7F  F000         	goto	l6805
 11762  0000F0                     l6803:
 11763                           
 11764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
 11765  0000F0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11766  0000F4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11767  0000F8  2ADE               	incf	postinc2,f,c
 11768  0000FA  0E00               	movlw	0
 11769  0000FC  22DD               	addwfc	postdec2,f,c
 11770  0000FE                     l6805:
 11771  0000FE  0ED0               	movlw	208
 11772  000100  6E4F               	movwf	??_vfpfcnvrt^0,c
 11773  000102  0EFF               	movlw	255
 11774  000104  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
 11775  000106  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11776  00010A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11777  00010E  CFDE FFF6          	movff	postinc2,tblptrl
 11778  000112  CFDD FFF7          	movff	postdec2,tblptrh
 11779  000116                     	if	0	;tblptru may be non-zero
 11780  000116                     	endif
 11781  000116                     	if	0	;tblptru may be non-zero
 11782  000116                     	endif
 11783  000116  0008               	tblrd		*
 11784  000118  50F5               	movf	tablat,w,c
 11785  00011A  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
 11786  00011C  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
 11787  00011E  504F               	movf	??_vfpfcnvrt^0,w,c
 11788  000120  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
 11789  000122  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 11790  000124  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 11791  000126  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 11792  000128  E10A               	bnz	u8350
 11793  00012A  0E0A               	movlw	10
 11794  00012C  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
 11795  00012E  A0D8               	btfss	status,0,c
 11796  000130  EF9C  F000         	goto	u8351
 11797  000134  EF9F  F000         	goto	u8350
 11798  000138                     u8351:
 11799  000138  0E01               	movlw	1
 11800  00013A  EFA0  F000         	goto	u8360
 11801  00013E                     u8350:
 11802  00013E  0E00               	movlw	0
 11803  000140                     u8360:
 11804  000140  6E5F               	movwf	_vfpfcnvrt$1796^0,c
 11805  000142  6A60               	clrf	(_vfpfcnvrt$1796+1)^0,c
 11806  000144  505F               	movf	_vfpfcnvrt$1796^0,w,c
 11807  000146  1060               	iorwf	(_vfpfcnvrt$1796+1)^0,w,c
 11808  000148  A4D8               	btfss	status,2,c
 11809  00014A  EFA9  F000         	goto	u8371
 11810  00014E  EFAB  F000         	goto	u8370
 11811  000152                     u8371:
 11812  000152  EF78  F000         	goto	l6803
 11813  000156                     u8370:
 11814  000156                     l6811:
 11815                           
 11816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 11817  000156  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11818  00015A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11819  00015E  CFDE FFF6          	movff	postinc2,tblptrl
 11820  000162  CFDD FFF7          	movff	postdec2,tblptrh
 11821  000166                     	if	0	;tblptru may be non-zero
 11822  000166                     	endif
 11823  000166                     	if	0	;tblptru may be non-zero
 11824  000166                     	endif
 11825  000166  0008               	tblrd		*
 11826  000168  50F5               	movf	tablat,w,c
 11827  00016A  0A64               	xorlw	100
 11828  00016C  B4D8               	btfsc	status,2,c
 11829  00016E  EFBB  F000         	goto	u8381
 11830  000172  EFBD  F000         	goto	u8380
 11831  000176                     u8381:
 11832  000176  EFCF  F000         	goto	l6815
 11833  00017A                     u8380:
 11834  00017A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11835  00017E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11836  000182  CFDE FFF6          	movff	postinc2,tblptrl
 11837  000186  CFDD FFF7          	movff	postdec2,tblptrh
 11838  00018A                     	if	0	;tblptru may be non-zero
 11839  00018A                     	endif
 11840  00018A                     	if	0	;tblptru may be non-zero
 11841  00018A                     	endif
 11842  00018A  0008               	tblrd		*
 11843  00018C  50F5               	movf	tablat,w,c
 11844  00018E  0A69               	xorlw	105
 11845  000190  A4D8               	btfss	status,2,c
 11846  000192  EFCD  F000         	goto	u8391
 11847  000196  EFCF  F000         	goto	u8390
 11848  00019A                     u8391:
 11849  00019A  EF0F  F001         	goto	l6821
 11850  00019E                     u8390:
 11851  00019E                     l6815:
 11852                           
 11853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 11854  00019E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11855  0001A2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11856  0001A6  2ADE               	incf	postinc2,f,c
 11857  0001A8  0E00               	movlw	0
 11858  0001AA  22DD               	addwfc	postdec2,f,c
 11859                           
 11860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 11861  0001AC  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11862  0001B0  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11863  0001B4  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11864  0001B8  0E02               	movlw	2
 11865  0001BA  26DE               	addwf	postinc2,f,c
 11866  0001BC  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11867  0001C0  0E00               	movlw	0
 11868  0001C2  22DD               	addwfc	postdec2,f,c
 11869  0001C4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11870  0001C8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11871  0001CC  CFDE F061          	movff	postinc2,vfpfcnvrt@ll
 11872  0001D0  CFDD F062          	movff	postdec2,vfpfcnvrt@ll+1
 11873  0001D4  0E00               	movlw	0
 11874  0001D6  BE62               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 11875  0001D8  0EFF               	movlw	-1
 11876  0001DA  6E63               	movwf	(vfpfcnvrt@ll+2)^0,c
 11877  0001DC  6E64               	movwf	(vfpfcnvrt@ll+3)^0,c
 11878  0001DE  6E65               	movwf	(vfpfcnvrt@ll+4)^0,c
 11879  0001E0  6E66               	movwf	(vfpfcnvrt@ll+5)^0,c
 11880  0001E2  6E67               	movwf	(vfpfcnvrt@ll+6)^0,c
 11881  0001E4  6E68               	movwf	(vfpfcnvrt@ll+7)^0,c
 11882  0001E6                     
 11883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 11884  0001E6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 11885  0001EA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11886  0001EE  C061  F024         	movff	vfpfcnvrt@ll,dtoa@d
 11887  0001F2  C062  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 11888  0001F6  C063  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 11889  0001FA  C064  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 11890  0001FE  C065  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11891  000202  C066  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11892  000206  C067  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11893  00020A  C068  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11894  00020E  EC2E  F00F         	call	_dtoa	;wreg free
 11895  000212  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 11896  000216  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 11897  00021A  EFEB  F003         	goto	l1478
 11898  00021E                     l6821:
 11899                           
 11900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
 11901  00021E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11902  000222  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11903  000226  CFDE F006          	movff	postinc2,strncmp@_l
 11904  00022A  CFDD F007          	movff	postdec2,strncmp@_l+1
 11905  00022E  0EAC               	movlw	low STR_32
 11906  000230  6E08               	movwf	strncmp@_r^0,c
 11907  000232  0E7D               	movlw	high STR_32
 11908  000234  6E09               	movwf	(strncmp@_r+1)^0,c
 11909  000236  0E00               	movlw	0
 11910  000238  6E0B               	movwf	(strncmp@n+1)^0,c
 11911  00023A  0E02               	movlw	2
 11912  00023C  6E0A               	movwf	strncmp@n^0,c
 11913  00023E  ECFE  F024         	call	_strncmp	;wreg free
 11914  000242  5006               	movf	?_strncmp^0,w,c
 11915  000244  1007               	iorwf	(?_strncmp+1)^0,w,c
 11916  000246  B4D8               	btfsc	status,2,c
 11917  000248  EF28  F001         	goto	u8401
 11918  00024C  EF2A  F001         	goto	u8400
 11919  000250                     u8401:
 11920  000250  EF45  F001         	goto	l6825
 11921  000254                     u8400:
 11922  000254  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11923  000258  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11924  00025C  CFDE F006          	movff	postinc2,strncmp@_l
 11925  000260  CFDD F007          	movff	postdec2,strncmp@_l+1
 11926  000264  0EAF               	movlw	low STR_36
 11927  000266  6E08               	movwf	strncmp@_r^0,c
 11928  000268  0E7D               	movlw	high STR_36
 11929  00026A  6E09               	movwf	(strncmp@_r+1)^0,c
 11930  00026C  0E00               	movlw	0
 11931  00026E  6E0B               	movwf	(strncmp@n+1)^0,c
 11932  000270  0E02               	movlw	2
 11933  000272  6E0A               	movwf	strncmp@n^0,c
 11934  000274  ECFE  F024         	call	_strncmp	;wreg free
 11935  000278  5006               	movf	?_strncmp^0,w,c
 11936  00027A  1007               	iorwf	(?_strncmp+1)^0,w,c
 11937  00027C  A4D8               	btfss	status,2,c
 11938  00027E  EF43  F001         	goto	u8411
 11939  000282  EF45  F001         	goto	u8410
 11940  000286                     u8411:
 11941  000286  EFA2  F001         	goto	l6831
 11942  00028A                     u8410:
 11943  00028A                     l6825:
 11944                           
 11945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
 11946  00028A  0E02               	movlw	2
 11947  00028C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11948  000290  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11949  000294  26DE               	addwf	postinc2,f,c
 11950  000296  0E00               	movlw	0
 11951  000298  22DD               	addwfc	postdec2,f,c
 11952                           
 11953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 11954  00029A  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11955  00029E  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11956  0002A2  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11957  0002A6  0E04               	movlw	4
 11958  0002A8  26DE               	addwf	postinc2,f,c
 11959  0002AA  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11960  0002AE  0E00               	movlw	0
 11961  0002B0  22DD               	addwfc	postdec2,f,c
 11962  0002B2  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11963  0002B6  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11964  0002BA  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 11965  0002BE  CFDE F052          	movff	postinc2,??_vfpfcnvrt+3
 11966  0002C2  CFDE F053          	movff	postinc2,??_vfpfcnvrt+4
 11967  0002C6  CFDE F054          	movff	postinc2,??_vfpfcnvrt+5
 11968  0002CA  C051  F055         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
 11969  0002CE  C052  F056         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
 11970  0002D2  C053  F057         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
 11971  0002D6  C054  F058         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
 11972  0002DA  6A59               	clrf	(??_vfpfcnvrt+10)^0,c
 11973  0002DC  BE58               	btfsc	(??_vfpfcnvrt+9)^0,7,c
 11974  0002DE  6859               	setf	(??_vfpfcnvrt+10)^0,c
 11975  0002E0  C059  F05A         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
 11976  0002E4  C059  F05B         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
 11977  0002E8  C059  F05C         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
 11978  0002EC  C055  F061         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
 11979  0002F0  C056  F062         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
 11980  0002F4  C057  F063         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
 11981  0002F8  C058  F064         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
 11982  0002FC  C059  F065         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
 11983  000300  C05A  F066         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
 11984  000304  C05B  F067         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
 11985  000308  C05C  F068         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
 11986  00030C                     
 11987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
 11988  00030C  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 11989  000310  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11990  000314  C061  F024         	movff	vfpfcnvrt@ll,dtoa@d
 11991  000318  C062  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 11992  00031C  C063  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 11993  000320  C064  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 11994  000324  C065  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11995  000328  C066  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11996  00032C  C067  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11997  000330  C068  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11998  000334  EC2E  F00F         	call	_dtoa	;wreg free
 11999  000338  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 12000  00033C  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12001  000340  EFEB  F003         	goto	l1478
 12002  000344                     l6831:
 12003                           
 12004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
 12005  000344  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12006  000348  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12007  00034C  CFDE FFF6          	movff	postinc2,tblptrl
 12008  000350  CFDD FFF7          	movff	postdec2,tblptrh
 12009  000354                     	if	0	;tblptru may be non-zero
 12010  000354                     	endif
 12011  000354                     	if	0	;tblptru may be non-zero
 12012  000354                     	endif
 12013  000354  0008               	tblrd		*
 12014  000356  50F5               	movf	tablat,w,c
 12015  000358  0A73               	xorlw	115
 12016  00035A  A4D8               	btfss	status,2,c
 12017  00035C  EFB2  F001         	goto	u8421
 12018  000360  EFB4  F001         	goto	u8420
 12019  000364                     u8421:
 12020  000364  EFDF  F001         	goto	l6839
 12021  000368                     u8420:
 12022  000368                     
 12023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
 12024  000368  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12025  00036C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12026  000370  2ADE               	incf	postinc2,f,c
 12027  000372  0E00               	movlw	0
 12028  000374  22DD               	addwfc	postdec2,f,c
 12029                           
 12030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 12031  000376  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12032  00037A  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12033  00037E  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12034  000382  0E02               	movlw	2
 12035  000384  26DE               	addwf	postinc2,f,c
 12036  000386  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12037  00038A  0E00               	movlw	0
 12038  00038C  22DD               	addwfc	postdec2,f,c
 12039  00038E  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12040  000392  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12041  000396  CFDE F05D          	movff	postinc2,vfpfcnvrt@cp
 12042  00039A  CFDD F05E          	movff	postdec2,vfpfcnvrt@cp+1
 12043  00039E                     
 12044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
 12045  00039E  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
 12046  0003A2  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 12047  0003A6  C05D  F012         	movff	vfpfcnvrt@cp,stoa@s
 12048  0003AA  C05E  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
 12049  0003AE  EC99  F01A         	call	_stoa	;wreg free
 12050  0003B2  C010  F049         	movff	?_stoa,?_vfpfcnvrt
 12051  0003B6  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
 12052  0003BA  EFEB  F003         	goto	l1478
 12053  0003BE                     l6839:
 12054                           
 12055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
 12056  0003BE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12057  0003C2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12058  0003C6  CFDE FFF6          	movff	postinc2,tblptrl
 12059  0003CA  CFDD FFF7          	movff	postdec2,tblptrh
 12060  0003CE                     	if	0	;tblptru may be non-zero
 12061  0003CE                     	endif
 12062  0003CE                     	if	0	;tblptru may be non-zero
 12063  0003CE                     	endif
 12064  0003CE  0008               	tblrd		*
 12065  0003D0  50F5               	movf	tablat,w,c
 12066  0003D2  0A75               	xorlw	117
 12067  0003D4  A4D8               	btfss	status,2,c
 12068  0003D6  EFEF  F001         	goto	u8431
 12069  0003DA  EFF1  F001         	goto	u8430
 12070  0003DE                     u8431:
 12071  0003DE  EF32  F002         	goto	l6847
 12072  0003E2                     u8430:
 12073  0003E2                     
 12074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
 12075  0003E2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12076  0003E6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12077  0003EA  2ADE               	incf	postinc2,f,c
 12078  0003EC  0E00               	movlw	0
 12079  0003EE  22DD               	addwfc	postdec2,f,c
 12080                           
 12081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 12082  0003F0  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12083  0003F4  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12084  0003F8  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12085  0003FC  0E02               	movlw	2
 12086  0003FE  26DE               	addwf	postinc2,f,c
 12087  000400  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12088  000404  0E00               	movlw	0
 12089  000406  22DD               	addwfc	postdec2,f,c
 12090  000408  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12091  00040C  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12092  000410  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12093  000414  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 12094  000418  C051  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 12095  00041C  C052  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 12096  000420  6A6C               	clrf	(vfpfcnvrt@llu+2)^0,c
 12097  000422  6A6D               	clrf	(vfpfcnvrt@llu+3)^0,c
 12098  000424  6A6E               	clrf	(vfpfcnvrt@llu+4)^0,c
 12099  000426  6A6F               	clrf	(vfpfcnvrt@llu+5)^0,c
 12100  000428  6A70               	clrf	(vfpfcnvrt@llu+6)^0,c
 12101  00042A  6A71               	clrf	(vfpfcnvrt@llu+7)^0,c
 12102  00042C                     
 12103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
 12104  00042C  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 12105  000430  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 12106  000434  C06A  F024         	movff	vfpfcnvrt@llu,utoa@d
 12107  000438  C06B  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 12108  00043C  C06C  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 12109  000440  C06D  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 12110  000444  C06E  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 12111  000448  C06F  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 12112  00044C  C070  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 12113  000450  C071  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 12114  000454  ECEC  F017         	call	_utoa	;wreg free
 12115  000458  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 12116  00045C  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 12117  000460  EFEB  F003         	goto	l1478
 12118  000464                     l6847:
 12119                           
 12120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12121  000464  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12122  000468  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12123  00046C  CFDE F006          	movff	postinc2,strncmp@_l
 12124  000470  CFDD F007          	movff	postdec2,strncmp@_l+1
 12125  000474  0EB2               	movlw	low STR_41
 12126  000476  6E08               	movwf	strncmp@_r^0,c
 12127  000478  0E7D               	movlw	high STR_41
 12128  00047A  6E09               	movwf	(strncmp@_r+1)^0,c
 12129  00047C  0E00               	movlw	0
 12130  00047E  6E0B               	movwf	(strncmp@n+1)^0,c
 12131  000480  0E02               	movlw	2
 12132  000482  6E0A               	movwf	strncmp@n^0,c
 12133  000484  ECFE  F024         	call	_strncmp	;wreg free
 12134  000488  5006               	movf	?_strncmp^0,w,c
 12135  00048A  1007               	iorwf	(?_strncmp+1)^0,w,c
 12136  00048C  A4D8               	btfss	status,2,c
 12137  00048E  EF4B  F002         	goto	u8441
 12138  000492  EF4D  F002         	goto	u8440
 12139  000496                     u8441:
 12140  000496  EF95  F002         	goto	l6855
 12141  00049A                     u8440:
 12142  00049A                     
 12143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 12144  00049A  0E02               	movlw	2
 12145  00049C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12146  0004A0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12147  0004A4  26DE               	addwf	postinc2,f,c
 12148  0004A6  0E00               	movlw	0
 12149  0004A8  22DD               	addwfc	postdec2,f,c
 12150                           
 12151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
 12152  0004AA  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12153  0004AE  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12154  0004B2  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12155  0004B6  0E04               	movlw	4
 12156  0004B8  26DE               	addwf	postinc2,f,c
 12157  0004BA  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12158  0004BE  0E00               	movlw	0
 12159  0004C0  22DD               	addwfc	postdec2,f,c
 12160  0004C2  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12161  0004C6  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12162  0004CA  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12163  0004CE  CFDE F052          	movff	postinc2,??_vfpfcnvrt+3
 12164  0004D2  CFDE F053          	movff	postinc2,??_vfpfcnvrt+4
 12165  0004D6  CFDE F054          	movff	postinc2,??_vfpfcnvrt+5
 12166  0004DA  5051               	movf	(??_vfpfcnvrt+2)^0,w,c
 12167  0004DC  6E6A               	movwf	vfpfcnvrt@llu^0,c
 12168  0004DE  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 12169  0004E0  6E6B               	movwf	(vfpfcnvrt@llu+1)^0,c
 12170  0004E2  5053               	movf	(??_vfpfcnvrt+4)^0,w,c
 12171  0004E4  6E6C               	movwf	(vfpfcnvrt@llu+2)^0,c
 12172  0004E6  5054               	movf	(??_vfpfcnvrt+5)^0,w,c
 12173  0004E8  6E6D               	movwf	(vfpfcnvrt@llu+3)^0,c
 12174  0004EA  6A6E               	clrf	(vfpfcnvrt@llu+4)^0,c
 12175  0004EC  6A6F               	clrf	(vfpfcnvrt@llu+5)^0,c
 12176  0004EE  6A70               	clrf	(vfpfcnvrt@llu+6)^0,c
 12177  0004F0  6A71               	clrf	(vfpfcnvrt@llu+7)^0,c
 12178  0004F2                     
 12179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1219:            
      +                           return utoa(fp, llu);
 12180  0004F2  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 12181  0004F6  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 12182  0004FA  C06A  F024         	movff	vfpfcnvrt@llu,utoa@d
 12183  0004FE  C06B  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 12184  000502  C06C  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 12185  000506  C06D  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 12186  00050A  C06E  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 12187  00050E  C06F  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 12188  000512  C070  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 12189  000516  C071  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 12190  00051A  ECEC  F017         	call	_utoa	;wreg free
 12191  00051E  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 12192  000522  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 12193  000526  EFEB  F003         	goto	l1478
 12194  00052A                     l6855:
 12195                           
 12196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 12197  00052A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12198  00052E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12199  000532  CFDE FFF6          	movff	postinc2,tblptrl
 12200  000536  CFDD FFF7          	movff	postdec2,tblptrh
 12201  00053A                     	if	0	;tblptru may be non-zero
 12202  00053A                     	endif
 12203  00053A                     	if	0	;tblptru may be non-zero
 12204  00053A                     	endif
 12205  00053A  0008               	tblrd		*
 12206  00053C  50F5               	movf	tablat,w,c
 12207  00053E  0A78               	xorlw	120
 12208  000540  B4D8               	btfsc	status,2,c
 12209  000542  EFA5  F002         	goto	u8451
 12210  000546  EFA7  F002         	goto	u8450
 12211  00054A                     u8451:
 12212  00054A  EFB9  F002         	goto	l6859
 12213  00054E                     u8450:
 12214  00054E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12215  000552  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12216  000556  CFDE FFF6          	movff	postinc2,tblptrl
 12217  00055A  CFDD FFF7          	movff	postdec2,tblptrh
 12218  00055E                     	if	0	;tblptru may be non-zero
 12219  00055E                     	endif
 12220  00055E                     	if	0	;tblptru may be non-zero
 12221  00055E                     	endif
 12222  00055E  0008               	tblrd		*
 12223  000560  50F5               	movf	tablat,w,c
 12224  000562  0A58               	xorlw	88
 12225  000564  A4D8               	btfss	status,2,c
 12226  000566  EFB7  F002         	goto	u8461
 12227  00056A  EFB9  F002         	goto	u8460
 12228  00056E                     u8461:
 12229  00056E  EF07  F003         	goto	l6869
 12230  000572                     u8460:
 12231  000572                     l6859:
 12232                           
 12233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
 12234  000572  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12235  000576  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12236  00057A  CFDE FFF6          	movff	postinc2,tblptrl
 12237  00057E  CFDD FFF7          	movff	postdec2,tblptrh
 12238  000582                     	if	0	;tblptru may be non-zero
 12239  000582                     	endif
 12240  000582                     	if	0	;tblptru may be non-zero
 12241  000582                     	endif
 12242  000582  0008               	tblrd		*
 12243  000584  CFF5 F069          	movff	tablat,vfpfcnvrt@c
 12244  000588                     
 12245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
 12246  000588  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12247  00058C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12248  000590  2ADE               	incf	postinc2,f,c
 12249  000592  0E00               	movlw	0
 12250  000594  22DD               	addwfc	postdec2,f,c
 12251  000596                     
 12252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 12253  000596  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12254  00059A  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12255  00059E  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12256  0005A2  0E02               	movlw	2
 12257  0005A4  26DE               	addwf	postinc2,f,c
 12258  0005A6  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12259  0005AA  0E00               	movlw	0
 12260  0005AC  22DD               	addwfc	postdec2,f,c
 12261  0005AE  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12262  0005B2  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12263  0005B6  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12264  0005BA  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 12265  0005BE  C051  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 12266  0005C2  C052  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 12267  0005C6  6A6C               	clrf	(vfpfcnvrt@llu+2)^0,c
 12268  0005C8  6A6D               	clrf	(vfpfcnvrt@llu+3)^0,c
 12269  0005CA  6A6E               	clrf	(vfpfcnvrt@llu+4)^0,c
 12270  0005CC  6A6F               	clrf	(vfpfcnvrt@llu+5)^0,c
 12271  0005CE  6A70               	clrf	(vfpfcnvrt@llu+6)^0,c
 12272  0005D0  6A71               	clrf	(vfpfcnvrt@llu+7)^0,c
 12273  0005D2                     
 12274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
 12275  0005D2  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 12276  0005D6  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 12277  0005DA  C06A  F024         	movff	vfpfcnvrt@llu,xtoa@d
 12278  0005DE  C06B  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 12279  0005E2  C06C  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 12280  0005E6  C06D  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 12281  0005EA  C06E  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 12282  0005EE  C06F  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 12283  0005F2  C070  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 12284  0005F6  C071  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 12285  0005FA  C069  F02C         	movff	vfpfcnvrt@c,xtoa@x
 12286  0005FE  EC9D  F010         	call	_xtoa	;wreg free
 12287  000602  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 12288  000606  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 12289  00060A  EFEB  F003         	goto	l1478
 12290  00060E                     l6869:
 12291                           
 12292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1307:         if 
      +                          (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((size
      +                          of("lX")/sizeof("lX"[0]))-1))) {
 12293  00060E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12294  000612  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12295  000616  CFDE F006          	movff	postinc2,strncmp@_l
 12296  00061A  CFDD F007          	movff	postdec2,strncmp@_l+1
 12297  00061E  0EB5               	movlw	low STR_46
 12298  000620  6E08               	movwf	strncmp@_r^0,c
 12299  000622  0E7D               	movlw	high STR_46
 12300  000624  6E09               	movwf	(strncmp@_r+1)^0,c
 12301  000626  0E00               	movlw	0
 12302  000628  6E0B               	movwf	(strncmp@n+1)^0,c
 12303  00062A  0E02               	movlw	2
 12304  00062C  6E0A               	movwf	strncmp@n^0,c
 12305  00062E  ECFE  F024         	call	_strncmp	;wreg free
 12306  000632  5006               	movf	?_strncmp^0,w,c
 12307  000634  1007               	iorwf	(?_strncmp+1)^0,w,c
 12308  000636  B4D8               	btfsc	status,2,c
 12309  000638  EF20  F003         	goto	u8471
 12310  00063C  EF22  F003         	goto	u8470
 12311  000640                     u8471:
 12312  000640  EF3D  F003         	goto	l6873
 12313  000644                     u8470:
 12314  000644  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12315  000648  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12316  00064C  CFDE F006          	movff	postinc2,strncmp@_l
 12317  000650  CFDD F007          	movff	postdec2,strncmp@_l+1
 12318  000654  0EA9               	movlw	low STR_50
 12319  000656  6E08               	movwf	strncmp@_r^0,c
 12320  000658  0E7D               	movlw	high STR_50
 12321  00065A  6E09               	movwf	(strncmp@_r+1)^0,c
 12322  00065C  0E00               	movlw	0
 12323  00065E  6E0B               	movwf	(strncmp@n+1)^0,c
 12324  000660  0E02               	movlw	2
 12325  000662  6E0A               	movwf	strncmp@n^0,c
 12326  000664  ECFE  F024         	call	_strncmp	;wreg free
 12327  000668  5006               	movf	?_strncmp^0,w,c
 12328  00066A  1007               	iorwf	(?_strncmp+1)^0,w,c
 12329  00066C  A4D8               	btfss	status,2,c
 12330  00066E  EF3B  F003         	goto	u8481
 12331  000672  EF3D  F003         	goto	u8480
 12332  000676                     u8481:
 12333  000676  EF9A  F003         	goto	l6883
 12334  00067A                     u8480:
 12335  00067A                     l6873:
 12336                           
 12337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1308: ;C:\Program
      +                           Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1310:             c = (*fmt)
      +                          [1];
 12338  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12339  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12340  000682  CFDE F04F          	movff	postinc2,??_vfpfcnvrt
 12341  000686  CFDD F050          	movff	postdec2,??_vfpfcnvrt+1
 12342  00068A  0E01               	movlw	1
 12343  00068C  264F               	addwf	??_vfpfcnvrt^0,f,c
 12344  00068E  0E00               	movlw	0
 12345  000690  2250               	addwfc	(??_vfpfcnvrt+1)^0,f,c
 12346  000692  C04F  FFF6         	movff	??_vfpfcnvrt,tblptrl
 12347  000696  C050  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 12348  00069A                     	if	0	;tblptru may be non-zero
 12349  00069A                     	endif
 12350  00069A                     	if	0	;tblptru may be non-zero
 12351  00069A                     	endif
 12352  00069A  0008               	tblrd		*
 12353  00069C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
 12354  0006A0                     
 12355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1311:            
      +                           *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 12356  0006A0  0E02               	movlw	2
 12357  0006A2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12358  0006A6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12359  0006AA  26DE               	addwf	postinc2,f,c
 12360  0006AC  0E00               	movlw	0
 12361  0006AE  22DD               	addwfc	postdec2,f,c
 12362  0006B0                     
 12363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1312:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
 12364  0006B0  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12365  0006B4  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12366  0006B8  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12367  0006BC  0E04               	movlw	4
 12368  0006BE  26DE               	addwf	postinc2,f,c
 12369  0006C0  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12370  0006C4  0E00               	movlw	0
 12371  0006C6  22DD               	addwfc	postdec2,f,c
 12372  0006C8  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12373  0006CC  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12374  0006D0  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12375  0006D4  CFDE F052          	movff	postinc2,??_vfpfcnvrt+3
 12376  0006D8  CFDE F053          	movff	postinc2,??_vfpfcnvrt+4
 12377  0006DC  CFDE F054          	movff	postinc2,??_vfpfcnvrt+5
 12378  0006E0  5051               	movf	(??_vfpfcnvrt+2)^0,w,c
 12379  0006E2  6E6A               	movwf	vfpfcnvrt@llu^0,c
 12380  0006E4  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 12381  0006E6  6E6B               	movwf	(vfpfcnvrt@llu+1)^0,c
 12382  0006E8  5053               	movf	(??_vfpfcnvrt+4)^0,w,c
 12383  0006EA  6E6C               	movwf	(vfpfcnvrt@llu+2)^0,c
 12384  0006EC  5054               	movf	(??_vfpfcnvrt+5)^0,w,c
 12385  0006EE  6E6D               	movwf	(vfpfcnvrt@llu+3)^0,c
 12386  0006F0  6A6E               	clrf	(vfpfcnvrt@llu+4)^0,c
 12387  0006F2  6A6F               	clrf	(vfpfcnvrt@llu+5)^0,c
 12388  0006F4  6A70               	clrf	(vfpfcnvrt@llu+6)^0,c
 12389  0006F6  6A71               	clrf	(vfpfcnvrt@llu+7)^0,c
 12390  0006F8                     
 12391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1314:            
      +                           return xtoa(fp, llu, c);
 12392  0006F8  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 12393  0006FC  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 12394  000700  C06A  F024         	movff	vfpfcnvrt@llu,xtoa@d
 12395  000704  C06B  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 12396  000708  C06C  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 12397  00070C  C06D  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 12398  000710  C06E  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 12399  000714  C06F  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 12400  000718  C070  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 12401  00071C  C071  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 12402  000720  C069  F02C         	movff	vfpfcnvrt@c,xtoa@x
 12403  000724  EC9D  F010         	call	_xtoa	;wreg free
 12404  000728  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 12405  00072C  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 12406  000730  EFEB  F003         	goto	l1478
 12407  000734                     l6883:
 12408                           
 12409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 12410  000734  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12411  000738  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12412  00073C  CFDE FFF6          	movff	postinc2,tblptrl
 12413  000740  CFDD FFF7          	movff	postdec2,tblptrh
 12414  000744                     	if	0	;tblptru may be non-zero
 12415  000744                     	endif
 12416  000744                     	if	0	;tblptru may be non-zero
 12417  000744                     	endif
 12418  000744  0008               	tblrd		*
 12419  000746  50F5               	movf	tablat,w,c
 12420  000748  0A25               	xorlw	37
 12421  00074A  A4D8               	btfss	status,2,c
 12422  00074C  EFAA  F003         	goto	u8491
 12423  000750  EFAC  F003         	goto	u8490
 12424  000754                     u8491:
 12425  000754  EFC3  F003         	goto	l6893
 12426  000758                     u8490:
 12427  000758                     
 12428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 12429  000758  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12430  00075C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12431  000760  2ADE               	incf	postinc2,f,c
 12432  000762  0E00               	movlw	0
 12433  000764  22DD               	addwfc	postdec2,f,c
 12434  000766                     
 12435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 12436  000766  0E00               	movlw	0
 12437  000768  6E08               	movwf	(fputc@c+1)^0,c
 12438  00076A  0E25               	movlw	37
 12439  00076C  6E07               	movwf	fputc@c^0,c
 12440  00076E  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 12441  000772  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12442  000776  ECF5  F027         	call	_fputc	;wreg free
 12443  00077A                     l6889:
 12444                           
 12445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12446  00077A  0E00               	movlw	0
 12447  00077C  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 12448  00077E  0E01               	movlw	1
 12449  000780  6E49               	movwf	?_vfpfcnvrt^0,c
 12450  000782  EFEB  F003         	goto	l1478
 12451  000786                     l6893:
 12452                           
 12453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12454  000786  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12455  00078A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12456  00078E  2ADE               	incf	postinc2,f,c
 12457  000790  0E00               	movlw	0
 12458  000792  22DD               	addwfc	postdec2,f,c
 12459  000794                     
 12460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12461  000794  0E00               	movlw	0
 12462  000796  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 12463  000798  0E00               	movlw	0
 12464  00079A  6E49               	movwf	?_vfpfcnvrt^0,c
 12465  00079C  EFEB  F003         	goto	l1478
 12466  0007A0                     l6899:
 12467                           
 12468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12469  0007A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12470  0007A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12471  0007A8  CFDE FFF6          	movff	postinc2,tblptrl
 12472  0007AC  CFDD FFF7          	movff	postdec2,tblptrh
 12473  0007B0                     	if	0	;tblptru may be non-zero
 12474  0007B0                     	endif
 12475  0007B0                     	if	0	;tblptru may be non-zero
 12476  0007B0                     	endif
 12477  0007B0  0008               	tblrd		*
 12478  0007B2  50F5               	movf	tablat,w,c
 12479  0007B4  6E07               	movwf	fputc@c^0,c
 12480  0007B6  6A08               	clrf	(fputc@c+1)^0,c
 12481  0007B8  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 12482  0007BC  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12483  0007C0  ECF5  F027         	call	_fputc	;wreg free
 12484  0007C4                     
 12485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12486  0007C4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12487  0007C8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12488  0007CC  2ADE               	incf	postinc2,f,c
 12489  0007CE  0E00               	movlw	0
 12490  0007D0  22DD               	addwfc	postdec2,f,c
 12491  0007D2  EFBD  F003         	goto	l6889
 12492  0007D6                     l1478:
 12493  0007D6  0012               	return		;funcret
 12494  0007D8                     __end_of_vfpfcnvrt:
 12495                           	callstack 0
 12496                           
 12497 ;; *************** function _xtoa *****************
 12498 ;; Defined at:
 12499 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 12500 ;; Parameters:    Size  Location     Type
 12501 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 12502 ;;		 -> NULL(0), 
 12503 ;;  d               8   35[COMRAM] unsigned long long 
 12504 ;;  x               1   43[COMRAM] unsigned char 
 12505 ;; Auto vars:     Size  Location     Type
 12506 ;;  n               8   60[COMRAM] unsigned long long 
 12507 ;;  c               2   70[COMRAM] int 
 12508 ;;  i               2   68[COMRAM] int 
 12509 ;;  w               2   58[COMRAM] int 
 12510 ;;  p               2   56[COMRAM] int 
 12511 ;; Return value:  Size  Location     Type
 12512 ;;                  2   33[COMRAM] int 
 12513 ;; Registers used:
 12514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12515 ;; Tracked objects:
 12516 ;;		On entry : 0/0
 12517 ;;		On exit  : 0/0
 12518 ;;		Unchanged: 0/0
 12519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12520 ;;      Params:        11       0       0       0       0       0       0
 12521 ;;      Locals:        20       0       0       0       0       0       0
 12522 ;;      Temps:          8       0       0       0       0       0       0
 12523 ;;      Totals:        39       0       0       0       0       0       0
 12524 ;;Total ram usage:       39 bytes
 12525 ;; Hardware stack levels used: 1
 12526 ;; Hardware stack levels required when called: 5
 12527 ;; This function calls:
 12528 ;;		_isalpha
 12529 ;;		_isupper
 12530 ;;		_pad
 12531 ;;		_toupper
 12532 ;; This function is called by:
 12533 ;;		_vfpfcnvrt
 12534 ;; This function uses a non-reentrant model
 12535 ;;
 12536                           
 12537                           	psect	text41
 12538  00213A                     __ptext41:
 12539                           	callstack 0
 12540  00213A                     _xtoa:
 12541                           	callstack 21
 12542  00213A                     
 12543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
 12544  00213A  BE77               	btfsc	(_prec+1)^0,7,c
 12545  00213C  EFA2  F010         	goto	u8031
 12546  002140  EFA4  F010         	goto	u8030
 12547  002144                     u8031:
 12548  002144  EFA5  F010         	goto	l6661
 12549  002148                     u8030:
 12550  002148                     
 12551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
 12552  002148  9278               	bcf	_flags^0,1,c
 12553  00214A                     l6661:
 12554                           
 12555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
 12556  00214A  BE77               	btfsc	(_prec+1)^0,7,c
 12557  00214C  EFB2  F010         	goto	u8040
 12558  002150  5077               	movf	(_prec+1)^0,w,c
 12559  002152  E106               	bnz	u8041
 12560  002154  0476               	decf	_prec^0,w,c
 12561  002156  B0D8               	btfsc	status,0,c
 12562  002158  EFB0  F010         	goto	u8041
 12563  00215C  EFB2  F010         	goto	u8040
 12564  002160                     u8041:
 12565  002160  EFB8  F010         	goto	l1436
 12566  002164                     u8040:
 12567  002164  0E00               	movlw	0
 12568  002166  6E3A               	movwf	(xtoa@p+1)^0,c
 12569  002168  0E01               	movlw	1
 12570  00216A  6E39               	movwf	xtoa@p^0,c
 12571  00216C  EFBC  F010         	goto	l1438
 12572  002170                     l1436:
 12573  002170  C076  F039         	movff	_prec,xtoa@p
 12574  002174  C077  F03A         	movff	_prec+1,xtoa@p+1
 12575  002178                     l1438:
 12576                           
 12577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
 12578  002178  C0F9  F03B         	movff	_width,xtoa@w
 12579  00217C  C0FA  F03C         	movff	_width+1,xtoa@w+1
 12580                           
 12581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
 12582  002180  A878               	btfss	_flags^0,4,c
 12583  002182  EFC5  F010         	goto	u8051
 12584  002186  EFC7  F010         	goto	u8050
 12585  00218A                     u8051:
 12586  00218A  EFCB  F010         	goto	l6667
 12587  00218E                     u8050:
 12588  00218E                     
 12589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
 12590  00218E  0EFE               	movlw	254
 12591  002190  263B               	addwf	xtoa@w^0,f,c
 12592  002192  0EFF               	movlw	255
 12593  002194  223C               	addwfc	(xtoa@w+1)^0,f,c
 12594  002196                     l6667:
 12595                           
 12596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
 12597  002196  C024  F03D         	movff	xtoa@d,xtoa@n
 12598  00219A  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 12599  00219E  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 12600  0021A2  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 12601  0021A6  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 12602  0021AA  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 12603  0021AE  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 12604  0021B2  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 12605  0021B6                     
 12606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
 12607  0021B6  0E00               	movlw	0
 12608  0021B8  6E46               	movwf	(xtoa@i+1)^0,c
 12609  0021BA  0E1F               	movlw	31
 12610  0021BC  6E45               	movwf	xtoa@i^0,c
 12611  0021BE                     
 12612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
 12613  0021BE  0E00               	movlw	0
 12614  0021C0  0101               	movlb	1	; () banked
 12615  0021C2  6FE0               	movwf	(_dbuf+31)& (0+255),b
 12616                           
 12617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12618  0021C4  EF97  F011         	goto	l6703
 12619  0021C8                     l6673:
 12620                           
 12621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
 12622  0021C8  0645               	decf	xtoa@i^0,f,c
 12623  0021CA  A0D8               	btfss	status,0,c
 12624  0021CC  0646               	decf	(xtoa@i+1)^0,f,c
 12625  0021CE                     
 12626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
 12627  0021CE  0E0F               	movlw	15
 12628  0021D0  143D               	andwf	xtoa@n^0,w,c
 12629  0021D2  6E47               	movwf	xtoa@c^0,c
 12630  0021D4  6A48               	clrf	(xtoa@c+1)^0,c
 12631  0021D6                     
 12632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
 12633  0021D6  BE48               	btfsc	(xtoa@c+1)^0,7,c
 12634  0021D8  EFF7  F010         	goto	u8061
 12635  0021DC  5048               	movf	(xtoa@c+1)^0,w,c
 12636  0021DE  E109               	bnz	u8060
 12637  0021E0  0E0A               	movlw	10
 12638  0021E2  5C47               	subwf	xtoa@c^0,w,c
 12639  0021E4  A0D8               	btfss	status,0,c
 12640  0021E6  EFF7  F010         	goto	u8061
 12641  0021EA  EFF9  F010         	goto	u8060
 12642  0021EE                     u8061:
 12643  0021EE  EF01  F011         	goto	l6681
 12644  0021F2                     u8060:
 12645  0021F2  0E57               	movlw	87
 12646  0021F4  2447               	addwf	xtoa@c^0,w,c
 12647  0021F6  6E47               	movwf	xtoa@c^0,c
 12648  0021F8  0E00               	movlw	0
 12649  0021FA  2048               	addwfc	(xtoa@c+1)^0,w,c
 12650  0021FC  6E48               	movwf	(xtoa@c+1)^0,c
 12651  0021FE  EF07  F011         	goto	l1445
 12652  002202                     l6681:
 12653  002202  0E30               	movlw	48
 12654  002204  2447               	addwf	xtoa@c^0,w,c
 12655  002206  6E47               	movwf	xtoa@c^0,c
 12656  002208  0E00               	movlw	0
 12657  00220A  2048               	addwfc	(xtoa@c+1)^0,w,c
 12658  00220C  6E48               	movwf	(xtoa@c+1)^0,c
 12659  00220E                     l1445:
 12660  00220E  0EBF               	movlw	191
 12661  002210  6E2D               	movwf	??_xtoa^0,c
 12662  002212  0EFF               	movlw	255
 12663  002214  6E2E               	movwf	(??_xtoa+1)^0,c
 12664  002216  502C               	movf	xtoa@x^0,w,c
 12665  002218  6E2F               	movwf	(??_xtoa+2)^0,c
 12666  00221A  6A30               	clrf	(??_xtoa+3)^0,c
 12667  00221C  502D               	movf	??_xtoa^0,w,c
 12668  00221E  262F               	addwf	(??_xtoa+2)^0,f,c
 12669  002220  502E               	movf	(??_xtoa+1)^0,w,c
 12670  002222  2230               	addwfc	(??_xtoa+3)^0,f,c
 12671  002224  5030               	movf	(??_xtoa+3)^0,w,c
 12672  002226  E10A               	bnz	u8070
 12673  002228  0E1A               	movlw	26
 12674  00222A  5C2F               	subwf	(??_xtoa+2)^0,w,c
 12675  00222C  A0D8               	btfss	status,0,c
 12676  00222E  EF1B  F011         	goto	u8071
 12677  002232  EF1E  F011         	goto	u8070
 12678  002236                     u8071:
 12679  002236  0E01               	movlw	1
 12680  002238  EF1F  F011         	goto	u8080
 12681  00223C                     u8070:
 12682  00223C  0E00               	movlw	0
 12683  00223E                     u8080:
 12684  00223E  6E35               	movwf	_xtoa$1781^0,c
 12685  002240  6A36               	clrf	(_xtoa$1781+1)^0,c
 12686  002242  5035               	movf	_xtoa$1781^0,w,c
 12687  002244  1036               	iorwf	(_xtoa$1781+1)^0,w,c
 12688  002246  B4D8               	btfsc	status,2,c
 12689  002248  EF28  F011         	goto	u8091
 12690  00224C  EF2A  F011         	goto	u8090
 12691  002250                     u8091:
 12692  002250  EF5A  F011         	goto	l6695
 12693  002254                     u8090:
 12694  002254  0E9F               	movlw	159
 12695  002256  6E2D               	movwf	??_xtoa^0,c
 12696  002258  0EFF               	movlw	255
 12697  00225A  6E2E               	movwf	(??_xtoa+1)^0,c
 12698  00225C  0E20               	movlw	32
 12699  00225E  1047               	iorwf	xtoa@c^0,w,c
 12700  002260  6E2F               	movwf	(??_xtoa+2)^0,c
 12701  002262  0E00               	movlw	0
 12702  002264  1048               	iorwf	(xtoa@c+1)^0,w,c
 12703  002266  6E30               	movwf	(??_xtoa+3)^0,c
 12704  002268  502D               	movf	??_xtoa^0,w,c
 12705  00226A  262F               	addwf	(??_xtoa+2)^0,f,c
 12706  00226C  502E               	movf	(??_xtoa+1)^0,w,c
 12707  00226E  2230               	addwfc	(??_xtoa+3)^0,f,c
 12708  002270  5030               	movf	(??_xtoa+3)^0,w,c
 12709  002272  E10A               	bnz	u8100
 12710  002274  0E1A               	movlw	26
 12711  002276  5C2F               	subwf	(??_xtoa+2)^0,w,c
 12712  002278  A0D8               	btfss	status,0,c
 12713  00227A  EF41  F011         	goto	u8101
 12714  00227E  EF44  F011         	goto	u8100
 12715  002282                     u8101:
 12716  002282  0E01               	movlw	1
 12717  002284  EF45  F011         	goto	u8110
 12718  002288                     u8100:
 12719  002288  0E00               	movlw	0
 12720  00228A                     u8110:
 12721  00228A  6E37               	movwf	_xtoa$1782^0,c
 12722  00228C  6A38               	clrf	(_xtoa$1782+1)^0,c
 12723  00228E  5037               	movf	_xtoa$1782^0,w,c
 12724  002290  1038               	iorwf	(_xtoa$1782+1)^0,w,c
 12725  002292  B4D8               	btfsc	status,2,c
 12726  002294  EF4E  F011         	goto	u8121
 12727  002298  EF50  F011         	goto	u8120
 12728  00229C                     u8121:
 12729  00229C  EF5A  F011         	goto	l6695
 12730  0022A0                     u8120:
 12731  0022A0                     
 12732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
 12733  0022A0  C047  F00C         	movff	xtoa@c,toupper@c
 12734  0022A4  C048  F00D         	movff	xtoa@c+1,toupper@c+1
 12735  0022A8  ECCE  F029         	call	_toupper	;wreg free
 12736  0022AC  C00C  F047         	movff	?_toupper,xtoa@c
 12737  0022B0  C00D  F048         	movff	?_toupper+1,xtoa@c+1
 12738  0022B4                     l6695:
 12739                           
 12740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
 12741  0022B4  0EC1               	movlw	low _dbuf
 12742  0022B6  2445               	addwf	xtoa@i^0,w,c
 12743  0022B8  6ED9               	movwf	fsr2l,c
 12744  0022BA  0E01               	movlw	high _dbuf
 12745  0022BC  2046               	addwfc	(xtoa@i+1)^0,w,c
 12746  0022BE  6EDA               	movwf	fsr2h,c
 12747  0022C0  C047  FFDF         	movff	xtoa@c,indf2
 12748  0022C4                     
 12749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
 12750  0022C4  0639               	decf	xtoa@p^0,f,c
 12751  0022C6  A0D8               	btfss	status,0,c
 12752  0022C8  063A               	decf	(xtoa@p+1)^0,f,c
 12753  0022CA                     
 12754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
 12755  0022CA  063B               	decf	xtoa@w^0,f,c
 12756  0022CC  A0D8               	btfss	status,0,c
 12757  0022CE  063C               	decf	(xtoa@w+1)^0,f,c
 12758  0022D0                     
 12759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
 12760  0022D0  C03D  F02D         	movff	xtoa@n,??_xtoa
 12761  0022D4  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 12762  0022D8  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 12763  0022DC  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 12764  0022E0  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 12765  0022E4  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 12766  0022E8  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 12767  0022EC  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 12768  0022F0  0E05               	movlw	5
 12769  0022F2  EF84  F011         	goto	u8130
 12770  0022F6                     u8135:
 12771  0022F6  90D8               	bcf	status,0,c
 12772  0022F8  3234               	rrcf	(??_xtoa+7)^0,f,c
 12773  0022FA  3233               	rrcf	(??_xtoa+6)^0,f,c
 12774  0022FC  3232               	rrcf	(??_xtoa+5)^0,f,c
 12775  0022FE  3231               	rrcf	(??_xtoa+4)^0,f,c
 12776  002300  3230               	rrcf	(??_xtoa+3)^0,f,c
 12777  002302  322F               	rrcf	(??_xtoa+2)^0,f,c
 12778  002304  322E               	rrcf	(??_xtoa+1)^0,f,c
 12779  002306  322D               	rrcf	??_xtoa^0,f,c
 12780  002308                     u8130:
 12781  002308  2EE8               	decfsz	wreg,f,c
 12782  00230A  EF7B  F011         	goto	u8135
 12783  00230E  C02D  F03D         	movff	??_xtoa,xtoa@n
 12784  002312  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 12785  002316  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 12786  00231A  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 12787  00231E  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 12788  002322  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 12789  002326  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 12790  00232A  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 12791  00232E                     l6703:
 12792                           
 12793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12794  00232E  BE46               	btfsc	(xtoa@i+1)^0,7,c
 12795  002330  EFA3  F011         	goto	u8141
 12796  002334  5046               	movf	(xtoa@i+1)^0,w,c
 12797  002336  E109               	bnz	u8140
 12798  002338  0E02               	movlw	2
 12799  00233A  5C45               	subwf	xtoa@i^0,w,c
 12800  00233C  A0D8               	btfss	status,0,c
 12801  00233E  EFA3  F011         	goto	u8141
 12802  002342  EFA5  F011         	goto	u8140
 12803  002346                     u8141:
 12804  002346  EFD5  F011         	goto	l1459
 12805  00234A                     u8140:
 12806  00234A  503D               	movf	xtoa@n^0,w,c
 12807  00234C  103E               	iorwf	(xtoa@n+1)^0,w,c
 12808  00234E  103F               	iorwf	(xtoa@n+2)^0,w,c
 12809  002350  1040               	iorwf	(xtoa@n+3)^0,w,c
 12810  002352  1041               	iorwf	(xtoa@n+4)^0,w,c
 12811  002354  1042               	iorwf	(xtoa@n+5)^0,w,c
 12812  002356  1043               	iorwf	(xtoa@n+6)^0,w,c
 12813  002358  1044               	iorwf	(xtoa@n+7)^0,w,c
 12814  00235A  A4D8               	btfss	status,2,c
 12815  00235C  EFB2  F011         	goto	u8151
 12816  002360  EFB4  F011         	goto	u8150
 12817  002364                     u8151:
 12818  002364  EFE4  F010         	goto	l6673
 12819  002368                     u8150:
 12820  002368  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 12821  00236A  EFC1  F011         	goto	u8160
 12822  00236E  503A               	movf	(xtoa@p+1)^0,w,c
 12823  002370  E106               	bnz	u8161
 12824  002372  0439               	decf	xtoa@p^0,w,c
 12825  002374  B0D8               	btfsc	status,0,c
 12826  002376  EFBF  F011         	goto	u8161
 12827  00237A  EFC1  F011         	goto	u8160
 12828  00237E                     u8161:
 12829  00237E  EFE4  F010         	goto	l6673
 12830  002382                     u8160:
 12831  002382  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 12832  002384  EFCC  F011         	goto	u8171
 12833  002388  503C               	movf	(xtoa@w+1)^0,w,c
 12834  00238A  E108               	bnz	u8170
 12835  00238C  043B               	decf	xtoa@w^0,w,c
 12836  00238E  A0D8               	btfss	status,0,c
 12837  002390  EFCC  F011         	goto	u8171
 12838  002394  EFCE  F011         	goto	u8170
 12839  002398                     u8171:
 12840  002398  EFD5  F011         	goto	l1459
 12841  00239C                     u8170:
 12842  00239C  B278               	btfsc	_flags^0,1,c
 12843  00239E  EFD3  F011         	goto	u8181
 12844  0023A2  EFD5  F011         	goto	u8180
 12845  0023A6                     u8181:
 12846  0023A6  EFE4  F010         	goto	l6673
 12847  0023AA                     u8180:
 12848  0023AA                     l1459:
 12849                           
 12850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
 12851  0023AA  A878               	btfss	_flags^0,4,c
 12852  0023AC  EFDA  F011         	goto	u8191
 12853  0023B0  EFDC  F011         	goto	u8190
 12854  0023B4                     u8191:
 12855  0023B4  EFF2  F011         	goto	l6719
 12856  0023B8                     u8190:
 12857  0023B8                     
 12858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
 12859  0023B8  0645               	decf	xtoa@i^0,f,c
 12860  0023BA  A0D8               	btfss	status,0,c
 12861  0023BC  0646               	decf	(xtoa@i+1)^0,f,c
 12862  0023BE                     
 12863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
 12864  0023BE  0EC1               	movlw	low _dbuf
 12865  0023C0  2445               	addwf	xtoa@i^0,w,c
 12866  0023C2  6ED9               	movwf	fsr2l,c
 12867  0023C4  0E01               	movlw	high _dbuf
 12868  0023C6  2046               	addwfc	(xtoa@i+1)^0,w,c
 12869  0023C8  6EDA               	movwf	fsr2h,c
 12870  0023CA  C02C  FFDF         	movff	xtoa@x,indf2
 12871  0023CE                     
 12872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
 12873  0023CE  0645               	decf	xtoa@i^0,f,c
 12874  0023D0  A0D8               	btfss	status,0,c
 12875  0023D2  0646               	decf	(xtoa@i+1)^0,f,c
 12876                           
 12877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
 12878  0023D4  0EC1               	movlw	low _dbuf
 12879  0023D6  2445               	addwf	xtoa@i^0,w,c
 12880  0023D8  6ED9               	movwf	fsr2l,c
 12881  0023DA  0E01               	movlw	high _dbuf
 12882  0023DC  2046               	addwfc	(xtoa@i+1)^0,w,c
 12883  0023DE  6EDA               	movwf	fsr2h,c
 12884  0023E0  0E30               	movlw	48
 12885  0023E2  6EDF               	movwf	indf2,c
 12886  0023E4                     l6719:
 12887                           
 12888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
 12889  0023E4  C022  F017         	movff	xtoa@fp,pad@fp
 12890  0023E8  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 12891  0023EC  0EC1               	movlw	low _dbuf
 12892  0023EE  2445               	addwf	xtoa@i^0,w,c
 12893  0023F0  6E19               	movwf	pad@buf^0,c
 12894  0023F2  0E01               	movlw	high _dbuf
 12895  0023F4  2046               	addwfc	(xtoa@i+1)^0,w,c
 12896  0023F6  6E1A               	movwf	(pad@buf+1)^0,c
 12897  0023F8  C03B  F01B         	movff	xtoa@w,pad@p
 12898  0023FC  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 12899  002400  EC9E  F026         	call	_pad	;wreg free
 12900  002404  C017  F022         	movff	?_pad,?_xtoa
 12901  002408  C018  F023         	movff	?_pad+1,?_xtoa+1
 12902  00240C  0012               	return		;funcret
 12903  00240E                     __end_of_xtoa:
 12904                           	callstack 0
 12905                           
 12906 ;; *************** function _toupper *****************
 12907 ;; Defined at:
 12908 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
 12909 ;; Parameters:    Size  Location     Type
 12910 ;;  c               2   11[COMRAM] int 
 12911 ;; Auto vars:     Size  Location     Type
 12912 ;;		None
 12913 ;; Return value:  Size  Location     Type
 12914 ;;                  2   11[COMRAM] int 
 12915 ;; Registers used:
 12916 ;;		wreg, status,2, status,0
 12917 ;; Tracked objects:
 12918 ;;		On entry : 0/0
 12919 ;;		On exit  : 0/0
 12920 ;;		Unchanged: 0/0
 12921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12922 ;;      Params:         2       0       0       0       0       0       0
 12923 ;;      Locals:         2       0       0       0       0       0       0
 12924 ;;      Temps:          4       0       0       0       0       0       0
 12925 ;;      Totals:         8       0       0       0       0       0       0
 12926 ;;Total ram usage:        8 bytes
 12927 ;; Hardware stack levels used: 1
 12928 ;; Hardware stack levels required when called: 2
 12929 ;; This function calls:
 12930 ;;		_islower
 12931 ;; This function is called by:
 12932 ;;		_xtoa
 12933 ;; This function uses a non-reentrant model
 12934 ;;
 12935                           
 12936                           	psect	text42
 12937  00539C                     __ptext42:
 12938                           	callstack 0
 12939  00539C                     _toupper:
 12940                           	callstack 23
 12941  00539C  0E9F               	movlw	159
 12942  00539E  6E0E               	movwf	??_toupper^0,c
 12943  0053A0  0EFF               	movlw	255
 12944  0053A2  6E0F               	movwf	(??_toupper+1)^0,c
 12945  0053A4  C00C  F010         	movff	toupper@c,??_toupper+2
 12946  0053A8  C00D  F011         	movff	toupper@c+1,??_toupper+3
 12947  0053AC  500E               	movf	??_toupper^0,w,c
 12948  0053AE  2610               	addwf	(??_toupper+2)^0,f,c
 12949  0053B0  500F               	movf	(??_toupper+1)^0,w,c
 12950  0053B2  2211               	addwfc	(??_toupper+3)^0,f,c
 12951  0053B4  5011               	movf	(??_toupper+3)^0,w,c
 12952  0053B6  E10A               	bnz	u7640
 12953  0053B8  0E1A               	movlw	26
 12954  0053BA  5C10               	subwf	(??_toupper+2)^0,w,c
 12955  0053BC  A0D8               	btfss	status,0,c
 12956  0053BE  EFE3  F029         	goto	u7641
 12957  0053C2  EFE6  F029         	goto	u7640
 12958  0053C6                     u7641:
 12959  0053C6  0E01               	movlw	1
 12960  0053C8  EFE7  F029         	goto	u7650
 12961  0053CC                     u7640:
 12962  0053CC  0E00               	movlw	0
 12963  0053CE                     u7650:
 12964  0053CE  6E12               	movwf	_toupper$1924^0,c
 12965  0053D0  6A13               	clrf	(_toupper$1924+1)^0,c
 12966  0053D2  5012               	movf	_toupper$1924^0,w,c
 12967  0053D4  1013               	iorwf	(_toupper$1924+1)^0,w,c
 12968  0053D6  B4D8               	btfsc	status,2,c
 12969  0053D8  EFF0  F029         	goto	u7661
 12970  0053DC  EFF2  F029         	goto	u7660
 12971  0053E0                     u7661:
 12972  0053E0  EFF8  F029         	goto	l1601
 12973  0053E4                     u7660:
 12974  0053E4  0E5F               	movlw	95
 12975  0053E6  140C               	andwf	toupper@c^0,w,c
 12976  0053E8  6E0C               	movwf	?_toupper^0,c
 12977  0053EA  6A0D               	clrf	(?_toupper+1)^0,c
 12978  0053EC  EFFC  F029         	goto	l1606
 12979  0053F0                     l1601:
 12980  0053F0  C00C  F00C         	movff	toupper@c,?_toupper
 12981  0053F4  C00D  F00D         	movff	toupper@c+1,?_toupper+1
 12982  0053F8                     l1606:
 12983  0053F8  0012               	return		;funcret
 12984  0053FA                     __end_of_toupper:
 12985                           	callstack 0
 12986                           
 12987 ;; *************** function _islower *****************
 12988 ;; Defined at:
 12989 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
 12990 ;; Parameters:    Size  Location     Type
 12991 ;;  c               2    5[COMRAM] int 
 12992 ;; Auto vars:     Size  Location     Type
 12993 ;;		None
 12994 ;; Return value:  Size  Location     Type
 12995 ;;                  2    5[COMRAM] int 
 12996 ;; Registers used:
 12997 ;;		wreg, status,2, status,0
 12998 ;; Tracked objects:
 12999 ;;		On entry : 0/0
 13000 ;;		On exit  : 0/0
 13001 ;;		Unchanged: 0/0
 13002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13003 ;;      Params:         2       0       0       0       0       0       0
 13004 ;;      Locals:         0       0       0       0       0       0       0
 13005 ;;      Temps:          4       0       0       0       0       0       0
 13006 ;;      Totals:         6       0       0       0       0       0       0
 13007 ;;Total ram usage:        6 bytes
 13008 ;; Hardware stack levels used: 1
 13009 ;; Hardware stack levels required when called: 1
 13010 ;; This function calls:
 13011 ;;		Nothing
 13012 ;; This function is called by:
 13013 ;;		_toupper
 13014 ;; This function uses a non-reentrant model
 13015 ;;
 13016                           
 13017                           	psect	text43
 13018  005592                     __ptext43:
 13019                           	callstack 0
 13020  005592                     _islower:
 13021                           	callstack 23
 13022  005592  0E9F               	movlw	159
 13023  005594  6E08               	movwf	??_islower^0,c
 13024  005596  0EFF               	movlw	255
 13025  005598  6E09               	movwf	(??_islower+1)^0,c
 13026  00559A  C006  F00A         	movff	islower@c,??_islower+2
 13027  00559E  C007  F00B         	movff	islower@c+1,??_islower+3
 13028  0055A2  5008               	movf	??_islower^0,w,c
 13029  0055A4  260A               	addwf	(??_islower+2)^0,f,c
 13030  0055A6  5009               	movf	(??_islower+1)^0,w,c
 13031  0055A8  220B               	addwfc	(??_islower+3)^0,f,c
 13032  0055AA  500B               	movf	(??_islower+3)^0,w,c
 13033  0055AC  E10A               	bnz	u7330
 13034  0055AE  0E1A               	movlw	26
 13035  0055B0  5C0A               	subwf	(??_islower+2)^0,w,c
 13036  0055B2  A0D8               	btfss	status,0,c
 13037  0055B4  EFDE  F02A         	goto	u7331
 13038  0055B8  EFE1  F02A         	goto	u7330
 13039  0055BC                     u7331:
 13040  0055BC  0E01               	movlw	1
 13041  0055BE  EFE2  F02A         	goto	u7340
 13042  0055C2                     u7330:
 13043  0055C2  0E00               	movlw	0
 13044  0055C4                     u7340:
 13045  0055C4  6E06               	movwf	?_islower^0,c
 13046  0055C6  6A07               	clrf	(?_islower+1)^0,c
 13047  0055C8  0012               	return		;funcret
 13048  0055CA                     __end_of_islower:
 13049                           	callstack 0
 13050                           
 13051 ;; *************** function _isupper *****************
 13052 ;; Defined at:
 13053 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;  c               2    5[COMRAM] int 
 13056 ;; Auto vars:     Size  Location     Type
 13057 ;;		None
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  2    5[COMRAM] int 
 13060 ;; Registers used:
 13061 ;;		wreg, status,2, status,0
 13062 ;; Tracked objects:
 13063 ;;		On entry : 0/0
 13064 ;;		On exit  : 0/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13067 ;;      Params:         2       0       0       0       0       0       0
 13068 ;;      Locals:         0       0       0       0       0       0       0
 13069 ;;      Temps:          4       0       0       0       0       0       0
 13070 ;;      Totals:         6       0       0       0       0       0       0
 13071 ;;Total ram usage:        6 bytes
 13072 ;; Hardware stack levels used: 1
 13073 ;; Hardware stack levels required when called: 1
 13074 ;; This function calls:
 13075 ;;		Nothing
 13076 ;; This function is called by:
 13077 ;;		_xtoa
 13078 ;; This function uses a non-reentrant model
 13079 ;;
 13080                           
 13081                           	psect	text44
 13082  0055CA                     __ptext44:
 13083                           	callstack 0
 13084  0055CA                     _isupper:
 13085                           	callstack 24
 13086  0055CA  0EBF               	movlw	191
 13087  0055CC  6E08               	movwf	??_isupper^0,c
 13088  0055CE  0EFF               	movlw	255
 13089  0055D0  6E09               	movwf	(??_isupper+1)^0,c
 13090  0055D2  C006  F00A         	movff	isupper@c,??_isupper+2
 13091  0055D6  C007  F00B         	movff	isupper@c+1,??_isupper+3
 13092  0055DA  5008               	movf	??_isupper^0,w,c
 13093  0055DC  260A               	addwf	(??_isupper+2)^0,f,c
 13094  0055DE  5009               	movf	(??_isupper+1)^0,w,c
 13095  0055E0  220B               	addwfc	(??_isupper+3)^0,f,c
 13096  0055E2  500B               	movf	(??_isupper+3)^0,w,c
 13097  0055E4  E10A               	bnz	u7600
 13098  0055E6  0E1A               	movlw	26
 13099  0055E8  5C0A               	subwf	(??_isupper+2)^0,w,c
 13100  0055EA  A0D8               	btfss	status,0,c
 13101  0055EC  EFFA  F02A         	goto	u7601
 13102  0055F0  EFFD  F02A         	goto	u7600
 13103  0055F4                     u7601:
 13104  0055F4  0E01               	movlw	1
 13105  0055F6  EFFE  F02A         	goto	u7610
 13106  0055FA                     u7600:
 13107  0055FA  0E00               	movlw	0
 13108  0055FC                     u7610:
 13109  0055FC  6E06               	movwf	?_isupper^0,c
 13110  0055FE  6A07               	clrf	(?_isupper+1)^0,c
 13111  005600  0012               	return		;funcret
 13112  005602                     __end_of_isupper:
 13113                           	callstack 0
 13114                           
 13115 ;; *************** function _isalpha *****************
 13116 ;; Defined at:
 13117 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
 13118 ;; Parameters:    Size  Location     Type
 13119 ;;  c               2    5[COMRAM] int 
 13120 ;; Auto vars:     Size  Location     Type
 13121 ;;		None
 13122 ;; Return value:  Size  Location     Type
 13123 ;;                  2    5[COMRAM] int 
 13124 ;; Registers used:
 13125 ;;		wreg, status,2, status,0
 13126 ;; Tracked objects:
 13127 ;;		On entry : 0/0
 13128 ;;		On exit  : 0/0
 13129 ;;		Unchanged: 0/0
 13130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13131 ;;      Params:         2       0       0       0       0       0       0
 13132 ;;      Locals:         0       0       0       0       0       0       0
 13133 ;;      Temps:          4       0       0       0       0       0       0
 13134 ;;      Totals:         6       0       0       0       0       0       0
 13135 ;;Total ram usage:        6 bytes
 13136 ;; Hardware stack levels used: 1
 13137 ;; Hardware stack levels required when called: 1
 13138 ;; This function calls:
 13139 ;;		Nothing
 13140 ;; This function is called by:
 13141 ;;		_xtoa
 13142 ;; This function uses a non-reentrant model
 13143 ;;
 13144                           
 13145                           	psect	text45
 13146  00551E                     __ptext45:
 13147                           	callstack 0
 13148  00551E                     _isalpha:
 13149                           	callstack 24
 13150  00551E  0E9F               	movlw	159
 13151  005520  6E08               	movwf	??_isalpha^0,c
 13152  005522  0EFF               	movlw	255
 13153  005524  6E09               	movwf	(??_isalpha+1)^0,c
 13154  005526  0E20               	movlw	32
 13155  005528  1006               	iorwf	isalpha@c^0,w,c
 13156  00552A  6E0A               	movwf	(??_isalpha+2)^0,c
 13157  00552C  0E00               	movlw	0
 13158  00552E  1007               	iorwf	(isalpha@c+1)^0,w,c
 13159  005530  6E0B               	movwf	(??_isalpha+3)^0,c
 13160  005532  5008               	movf	??_isalpha^0,w,c
 13161  005534  260A               	addwf	(??_isalpha+2)^0,f,c
 13162  005536  5009               	movf	(??_isalpha+1)^0,w,c
 13163  005538  220B               	addwfc	(??_isalpha+3)^0,f,c
 13164  00553A  500B               	movf	(??_isalpha+3)^0,w,c
 13165  00553C  E10A               	bnz	u7620
 13166  00553E  0E1A               	movlw	26
 13167  005540  5C0A               	subwf	(??_isalpha+2)^0,w,c
 13168  005542  A0D8               	btfss	status,0,c
 13169  005544  EFA6  F02A         	goto	u7621
 13170  005548  EFA9  F02A         	goto	u7620
 13171  00554C                     u7621:
 13172  00554C  0E01               	movlw	1
 13173  00554E  EFAA  F02A         	goto	u7630
 13174  005552                     u7620:
 13175  005552  0E00               	movlw	0
 13176  005554                     u7630:
 13177  005554  6E06               	movwf	?_isalpha^0,c
 13178  005556  6A07               	clrf	(?_isalpha+1)^0,c
 13179  005558  0012               	return		;funcret
 13180  00555A                     __end_of_isalpha:
 13181                           	callstack 0
 13182                           
 13183 ;; *************** function _utoa *****************
 13184 ;; Defined at:
 13185 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 13186 ;; Parameters:    Size  Location     Type
 13187 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 13188 ;;		 -> NULL(0), 
 13189 ;;  d               8   35[COMRAM] unsigned long long 
 13190 ;; Auto vars:     Size  Location     Type
 13191 ;;  n               8   55[COMRAM] unsigned long long 
 13192 ;;  i               2   63[COMRAM] int 
 13193 ;;  w               2   53[COMRAM] int 
 13194 ;;  p               2   51[COMRAM] int 
 13195 ;; Return value:  Size  Location     Type
 13196 ;;                  2   33[COMRAM] int 
 13197 ;; Registers used:
 13198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13199 ;; Tracked objects:
 13200 ;;		On entry : 0/0
 13201 ;;		On exit  : 0/0
 13202 ;;		Unchanged: 0/0
 13203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13204 ;;      Params:        10       0       0       0       0       0       0
 13205 ;;      Locals:        14       0       0       0       0       0       0
 13206 ;;      Temps:          8       0       0       0       0       0       0
 13207 ;;      Totals:        32       0       0       0       0       0       0
 13208 ;;Total ram usage:       32 bytes
 13209 ;; Hardware stack levels used: 1
 13210 ;; Hardware stack levels required when called: 5
 13211 ;; This function calls:
 13212 ;;		___lodiv
 13213 ;;		___lomod
 13214 ;;		_pad
 13215 ;; This function is called by:
 13216 ;;		_vfpfcnvrt
 13217 ;; This function uses a non-reentrant model
 13218 ;;
 13219                           
 13220                           	psect	text46
 13221  002FD8                     __ptext46:
 13222                           	callstack 0
 13223  002FD8                     _utoa:
 13224                           	callstack 21
 13225  002FD8                     
 13226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
 13227  002FD8  BE77               	btfsc	(_prec+1)^0,7,c
 13228  002FDA  EFF1  F017         	goto	u7961
 13229  002FDE  EFF3  F017         	goto	u7960
 13230  002FE2                     u7961:
 13231  002FE2  EFF4  F017         	goto	l6625
 13232  002FE6                     u7960:
 13233  002FE6                     
 13234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
 13235  002FE6  9278               	bcf	_flags^0,1,c
 13236  002FE8                     l6625:
 13237                           
 13238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
 13239  002FE8  BE77               	btfsc	(_prec+1)^0,7,c
 13240  002FEA  EF01  F018         	goto	u7970
 13241  002FEE  5077               	movf	(_prec+1)^0,w,c
 13242  002FF0  E106               	bnz	u7971
 13243  002FF2  0476               	decf	_prec^0,w,c
 13244  002FF4  B0D8               	btfsc	status,0,c
 13245  002FF6  EFFF  F017         	goto	u7971
 13246  002FFA  EF01  F018         	goto	u7970
 13247  002FFE                     u7971:
 13248  002FFE  EF07  F018         	goto	l1421
 13249  003002                     u7970:
 13250  003002  0E00               	movlw	0
 13251  003004  6E35               	movwf	(utoa@p+1)^0,c
 13252  003006  0E01               	movlw	1
 13253  003008  6E34               	movwf	utoa@p^0,c
 13254  00300A  EF0B  F018         	goto	l1423
 13255  00300E                     l1421:
 13256  00300E  C076  F034         	movff	_prec,utoa@p
 13257  003012  C077  F035         	movff	_prec+1,utoa@p+1
 13258  003016                     l1423:
 13259                           
 13260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
 13261  003016  C0F9  F036         	movff	_width,utoa@w
 13262  00301A  C0FA  F037         	movff	_width+1,utoa@w+1
 13263                           
 13264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
 13265  00301E  C024  F038         	movff	utoa@d,utoa@n
 13266  003022  C025  F039         	movff	utoa@d+1,utoa@n+1
 13267  003026  C026  F03A         	movff	utoa@d+2,utoa@n+2
 13268  00302A  C027  F03B         	movff	utoa@d+3,utoa@n+3
 13269  00302E  C028  F03C         	movff	utoa@d+4,utoa@n+4
 13270  003032  C029  F03D         	movff	utoa@d+5,utoa@n+5
 13271  003036  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 13272  00303A  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 13273  00303E                     
 13274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
 13275  00303E  0E00               	movlw	0
 13276  003040  6E41               	movwf	(utoa@i+1)^0,c
 13277  003042  0E1F               	movlw	31
 13278  003044  6E40               	movwf	utoa@i^0,c
 13279  003046                     
 13280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
 13281  003046  0E00               	movlw	0
 13282  003048  0101               	movlb	1	; () banked
 13283  00304A  6FE0               	movwf	(_dbuf+31)& (0+255),b
 13284                           
 13285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13286  00304C  EF9E  F018         	goto	l6643
 13287  003050                     l6633:
 13288                           
 13289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
 13290  003050  0640               	decf	utoa@i^0,f,c
 13291  003052  A0D8               	btfss	status,0,c
 13292  003054  0641               	decf	(utoa@i+1)^0,f,c
 13293  003056                     
 13294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
 13295  003056  0EC1               	movlw	low _dbuf
 13296  003058  2440               	addwf	utoa@i^0,w,c
 13297  00305A  6ED9               	movwf	fsr2l,c
 13298  00305C  0E01               	movlw	high _dbuf
 13299  00305E  2041               	addwfc	(utoa@i+1)^0,w,c
 13300  003060  6EDA               	movwf	fsr2h,c
 13301  003062  C038  F006         	movff	utoa@n,___lomod@dividend
 13302  003066  C039  F007         	movff	utoa@n+1,___lomod@dividend+1
 13303  00306A  C03A  F008         	movff	utoa@n+2,___lomod@dividend+2
 13304  00306E  C03B  F009         	movff	utoa@n+3,___lomod@dividend+3
 13305  003072  C03C  F00A         	movff	utoa@n+4,___lomod@dividend+4
 13306  003076  C03D  F00B         	movff	utoa@n+5,___lomod@dividend+5
 13307  00307A  C03E  F00C         	movff	utoa@n+6,___lomod@dividend+6
 13308  00307E  C03F  F00D         	movff	utoa@n+7,___lomod@dividend+7
 13309  003082  0E0A               	movlw	10
 13310  003084  6E0E               	movwf	___lomod@divisor^0,c
 13311  003086  0E00               	movlw	0
 13312  003088  6E0F               	movwf	(___lomod@divisor+1)^0,c
 13313  00308A  0E00               	movlw	0
 13314  00308C  6E10               	movwf	(___lomod@divisor+2)^0,c
 13315  00308E  0E00               	movlw	0
 13316  003090  6E11               	movwf	(___lomod@divisor+3)^0,c
 13317  003092  0E00               	movlw	0
 13318  003094  6E12               	movwf	(___lomod@divisor+4)^0,c
 13319  003096  0E00               	movlw	0
 13320  003098  6E13               	movwf	(___lomod@divisor+5)^0,c
 13321  00309A  0E00               	movlw	0
 13322  00309C  6E14               	movwf	(___lomod@divisor+6)^0,c
 13323  00309E  0E00               	movlw	0
 13324  0030A0  6E15               	movwf	(___lomod@divisor+7)^0,c
 13325  0030A2  EC6D  F025         	call	___lomod	;wreg free
 13326  0030A6  C006  F02C         	movff	?___lomod,??_utoa
 13327  0030AA  C007  F02D         	movff	?___lomod+1,??_utoa+1
 13328  0030AE  C008  F02E         	movff	?___lomod+2,??_utoa+2
 13329  0030B2  C009  F02F         	movff	?___lomod+3,??_utoa+3
 13330  0030B6  C00A  F030         	movff	?___lomod+4,??_utoa+4
 13331  0030BA  C00B  F031         	movff	?___lomod+5,??_utoa+5
 13332  0030BE  C00C  F032         	movff	?___lomod+6,??_utoa+6
 13333  0030C2  C00D  F033         	movff	?___lomod+7,??_utoa+7
 13334  0030C6  502C               	movf	??_utoa^0,w,c
 13335  0030C8  0F30               	addlw	48
 13336  0030CA  6EDF               	movwf	indf2,c
 13337  0030CC                     
 13338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
 13339  0030CC  0634               	decf	utoa@p^0,f,c
 13340  0030CE  A0D8               	btfss	status,0,c
 13341  0030D0  0635               	decf	(utoa@p+1)^0,f,c
 13342  0030D2                     
 13343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
 13344  0030D2  0636               	decf	utoa@w^0,f,c
 13345  0030D4  A0D8               	btfss	status,0,c
 13346  0030D6  0637               	decf	(utoa@w+1)^0,f,c
 13347  0030D8                     
 13348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
 13349  0030D8  C038  F006         	movff	utoa@n,___lodiv@dividend
 13350  0030DC  C039  F007         	movff	utoa@n+1,___lodiv@dividend+1
 13351  0030E0  C03A  F008         	movff	utoa@n+2,___lodiv@dividend+2
 13352  0030E4  C03B  F009         	movff	utoa@n+3,___lodiv@dividend+3
 13353  0030E8  C03C  F00A         	movff	utoa@n+4,___lodiv@dividend+4
 13354  0030EC  C03D  F00B         	movff	utoa@n+5,___lodiv@dividend+5
 13355  0030F0  C03E  F00C         	movff	utoa@n+6,___lodiv@dividend+6
 13356  0030F4  C03F  F00D         	movff	utoa@n+7,___lodiv@dividend+7
 13357  0030F8  0E0A               	movlw	10
 13358  0030FA  6E0E               	movwf	___lodiv@divisor^0,c
 13359  0030FC  0E00               	movlw	0
 13360  0030FE  6E0F               	movwf	(___lodiv@divisor+1)^0,c
 13361  003100  0E00               	movlw	0
 13362  003102  6E10               	movwf	(___lodiv@divisor+2)^0,c
 13363  003104  0E00               	movlw	0
 13364  003106  6E11               	movwf	(___lodiv@divisor+3)^0,c
 13365  003108  0E00               	movlw	0
 13366  00310A  6E12               	movwf	(___lodiv@divisor+4)^0,c
 13367  00310C  0E00               	movlw	0
 13368  00310E  6E13               	movwf	(___lodiv@divisor+5)^0,c
 13369  003110  0E00               	movlw	0
 13370  003112  6E14               	movwf	(___lodiv@divisor+6)^0,c
 13371  003114  0E00               	movlw	0
 13372  003116  6E15               	movwf	(___lodiv@divisor+7)^0,c
 13373  003118  ECA4  F023         	call	___lodiv	;wreg free
 13374  00311C  C006  F038         	movff	?___lodiv,utoa@n
 13375  003120  C007  F039         	movff	?___lodiv+1,utoa@n+1
 13376  003124  C008  F03A         	movff	?___lodiv+2,utoa@n+2
 13377  003128  C009  F03B         	movff	?___lodiv+3,utoa@n+3
 13378  00312C  C00A  F03C         	movff	?___lodiv+4,utoa@n+4
 13379  003130  C00B  F03D         	movff	?___lodiv+5,utoa@n+5
 13380  003134  C00C  F03E         	movff	?___lodiv+6,utoa@n+6
 13381  003138  C00D  F03F         	movff	?___lodiv+7,utoa@n+7
 13382  00313C                     l6643:
 13383                           
 13384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13385  00313C  5040               	movf	utoa@i^0,w,c
 13386  00313E  1041               	iorwf	(utoa@i+1)^0,w,c
 13387  003140  B4D8               	btfsc	status,2,c
 13388  003142  EFA5  F018         	goto	u7981
 13389  003146  EFA7  F018         	goto	u7980
 13390  00314A                     u7981:
 13391  00314A  EFD7  F018         	goto	l6653
 13392  00314E                     u7980:
 13393  00314E  5038               	movf	utoa@n^0,w,c
 13394  003150  1039               	iorwf	(utoa@n+1)^0,w,c
 13395  003152  103A               	iorwf	(utoa@n+2)^0,w,c
 13396  003154  103B               	iorwf	(utoa@n+3)^0,w,c
 13397  003156  103C               	iorwf	(utoa@n+4)^0,w,c
 13398  003158  103D               	iorwf	(utoa@n+5)^0,w,c
 13399  00315A  103E               	iorwf	(utoa@n+6)^0,w,c
 13400  00315C  103F               	iorwf	(utoa@n+7)^0,w,c
 13401  00315E  A4D8               	btfss	status,2,c
 13402  003160  EFB4  F018         	goto	u7991
 13403  003164  EFB6  F018         	goto	u7990
 13404  003168                     u7991:
 13405  003168  EF28  F018         	goto	l6633
 13406  00316C                     u7990:
 13407  00316C  BE35               	btfsc	(utoa@p+1)^0,7,c
 13408  00316E  EFC3  F018         	goto	u8000
 13409  003172  5035               	movf	(utoa@p+1)^0,w,c
 13410  003174  E106               	bnz	u8001
 13411  003176  0434               	decf	utoa@p^0,w,c
 13412  003178  B0D8               	btfsc	status,0,c
 13413  00317A  EFC1  F018         	goto	u8001
 13414  00317E  EFC3  F018         	goto	u8000
 13415  003182                     u8001:
 13416  003182  EF28  F018         	goto	l6633
 13417  003186                     u8000:
 13418  003186  BE37               	btfsc	(utoa@w+1)^0,7,c
 13419  003188  EFCE  F018         	goto	u8011
 13420  00318C  5037               	movf	(utoa@w+1)^0,w,c
 13421  00318E  E108               	bnz	u8010
 13422  003190  0436               	decf	utoa@w^0,w,c
 13423  003192  A0D8               	btfss	status,0,c
 13424  003194  EFCE  F018         	goto	u8011
 13425  003198  EFD0  F018         	goto	u8010
 13426  00319C                     u8011:
 13427  00319C  EFD7  F018         	goto	l6653
 13428  0031A0                     u8010:
 13429  0031A0  B278               	btfsc	_flags^0,1,c
 13430  0031A2  EFD5  F018         	goto	u8021
 13431  0031A6  EFD7  F018         	goto	u8020
 13432  0031AA                     u8021:
 13433  0031AA  EF28  F018         	goto	l6633
 13434  0031AE                     u8020:
 13435  0031AE                     l6653:
 13436                           
 13437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
 13438  0031AE  C022  F017         	movff	utoa@fp,pad@fp
 13439  0031B2  C023  F018         	movff	utoa@fp+1,pad@fp+1
 13440  0031B6  0EC1               	movlw	low _dbuf
 13441  0031B8  2440               	addwf	utoa@i^0,w,c
 13442  0031BA  6E19               	movwf	pad@buf^0,c
 13443  0031BC  0E01               	movlw	high _dbuf
 13444  0031BE  2041               	addwfc	(utoa@i+1)^0,w,c
 13445  0031C0  6E1A               	movwf	(pad@buf+1)^0,c
 13446  0031C2  C036  F01B         	movff	utoa@w,pad@p
 13447  0031C6  C037  F01C         	movff	utoa@w+1,pad@p+1
 13448  0031CA  EC9E  F026         	call	_pad	;wreg free
 13449  0031CE  C017  F022         	movff	?_pad,?_utoa
 13450  0031D2  C018  F023         	movff	?_pad+1,?_utoa+1
 13451  0031D6  0012               	return		;funcret
 13452  0031D8                     __end_of_utoa:
 13453                           	callstack 0
 13454                           
 13455 ;; *************** function ___lomod *****************
 13456 ;; Defined at:
 13457 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
 13458 ;; Parameters:    Size  Location     Type
 13459 ;;  dividend        8    5[COMRAM] unsigned long long 
 13460 ;;  divisor         8   13[COMRAM] unsigned long long 
 13461 ;; Auto vars:     Size  Location     Type
 13462 ;;  counter         1   21[COMRAM] unsigned char 
 13463 ;; Return value:  Size  Location     Type
 13464 ;;                  8    5[COMRAM] unsigned long long 
 13465 ;; Registers used:
 13466 ;;		wreg, status,2, status,0
 13467 ;; Tracked objects:
 13468 ;;		On entry : 0/0
 13469 ;;		On exit  : 0/0
 13470 ;;		Unchanged: 0/0
 13471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13472 ;;      Params:        16       0       0       0       0       0       0
 13473 ;;      Locals:         1       0       0       0       0       0       0
 13474 ;;      Temps:          0       0       0       0       0       0       0
 13475 ;;      Totals:        17       0       0       0       0       0       0
 13476 ;;Total ram usage:       17 bytes
 13477 ;; Hardware stack levels used: 1
 13478 ;; Hardware stack levels required when called: 1
 13479 ;; This function calls:
 13480 ;;		Nothing
 13481 ;; This function is called by:
 13482 ;;		_utoa
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486                           	psect	text47
 13487  004ADA                     __ptext47:
 13488                           	callstack 0
 13489  004ADA                     ___lomod:
 13490                           	callstack 24
 13491  004ADA  500E               	movf	___lomod@divisor^0,w,c
 13492  004ADC  100F               	iorwf	(___lomod@divisor+1)^0,w,c
 13493  004ADE  1010               	iorwf	(___lomod@divisor+2)^0,w,c
 13494  004AE0  1011               	iorwf	(___lomod@divisor+3)^0,w,c
 13495  004AE2  1012               	iorwf	(___lomod@divisor+4)^0,w,c
 13496  004AE4  1013               	iorwf	(___lomod@divisor+5)^0,w,c
 13497  004AE6  1014               	iorwf	(___lomod@divisor+6)^0,w,c
 13498  004AE8  1015               	iorwf	(___lomod@divisor+7)^0,w,c
 13499  004AEA  B4D8               	btfsc	status,2,c
 13500  004AEC  EF7A  F025         	goto	u7521
 13501  004AF0  EF7C  F025         	goto	u7520
 13502  004AF4                     u7521:
 13503  004AF4  EFC4  F025         	goto	l1083
 13504  004AF8                     u7520:
 13505  004AF8  0E01               	movlw	1
 13506  004AFA  6E16               	movwf	___lomod@counter^0,c
 13507  004AFC  EF8A  F025         	goto	l6447
 13508  004B00                     l6445:
 13509  004B00  90D8               	bcf	status,0,c
 13510  004B02  360E               	rlcf	___lomod@divisor^0,f,c
 13511  004B04  360F               	rlcf	(___lomod@divisor+1)^0,f,c
 13512  004B06  3610               	rlcf	(___lomod@divisor+2)^0,f,c
 13513  004B08  3611               	rlcf	(___lomod@divisor+3)^0,f,c
 13514  004B0A  3612               	rlcf	(___lomod@divisor+4)^0,f,c
 13515  004B0C  3613               	rlcf	(___lomod@divisor+5)^0,f,c
 13516  004B0E  3614               	rlcf	(___lomod@divisor+6)^0,f,c
 13517  004B10  3615               	rlcf	(___lomod@divisor+7)^0,f,c
 13518  004B12  2A16               	incf	___lomod@counter^0,f,c
 13519  004B14                     l6447:
 13520  004B14  AE15               	btfss	(___lomod@divisor+7)^0,7,c
 13521  004B16  EF8F  F025         	goto	u7531
 13522  004B1A  EF91  F025         	goto	u7530
 13523  004B1E                     u7531:
 13524  004B1E  EF80  F025         	goto	l6445
 13525  004B22                     u7530:
 13526  004B22                     l6449:
 13527  004B22  500E               	movf	___lomod@divisor^0,w,c
 13528  004B24  5C06               	subwf	___lomod@dividend^0,w,c
 13529  004B26  500F               	movf	(___lomod@divisor+1)^0,w,c
 13530  004B28  5807               	subwfb	(___lomod@dividend+1)^0,w,c
 13531  004B2A  5010               	movf	(___lomod@divisor+2)^0,w,c
 13532  004B2C  5808               	subwfb	(___lomod@dividend+2)^0,w,c
 13533  004B2E  5011               	movf	(___lomod@divisor+3)^0,w,c
 13534  004B30  5809               	subwfb	(___lomod@dividend+3)^0,w,c
 13535  004B32  5012               	movf	(___lomod@divisor+4)^0,w,c
 13536  004B34  580A               	subwfb	(___lomod@dividend+4)^0,w,c
 13537  004B36  5013               	movf	(___lomod@divisor+5)^0,w,c
 13538  004B38  580B               	subwfb	(___lomod@dividend+5)^0,w,c
 13539  004B3A  5014               	movf	(___lomod@divisor+6)^0,w,c
 13540  004B3C  580C               	subwfb	(___lomod@dividend+6)^0,w,c
 13541  004B3E  5015               	movf	(___lomod@divisor+7)^0,w,c
 13542  004B40  580D               	subwfb	(___lomod@dividend+7)^0,w,c
 13543  004B42  A0D8               	btfss	status,0,c
 13544  004B44  EFA6  F025         	goto	u7541
 13545  004B48  EFA8  F025         	goto	u7540
 13546  004B4C                     u7541:
 13547  004B4C  EFB8  F025         	goto	l6453
 13548  004B50                     u7540:
 13549  004B50  500E               	movf	___lomod@divisor^0,w,c
 13550  004B52  5E06               	subwf	___lomod@dividend^0,f,c
 13551  004B54  500F               	movf	(___lomod@divisor+1)^0,w,c
 13552  004B56  5A07               	subwfb	(___lomod@dividend+1)^0,f,c
 13553  004B58  5010               	movf	(___lomod@divisor+2)^0,w,c
 13554  004B5A  5A08               	subwfb	(___lomod@dividend+2)^0,f,c
 13555  004B5C  5011               	movf	(___lomod@divisor+3)^0,w,c
 13556  004B5E  5A09               	subwfb	(___lomod@dividend+3)^0,f,c
 13557  004B60  5012               	movf	(___lomod@divisor+4)^0,w,c
 13558  004B62  5A0A               	subwfb	(___lomod@dividend+4)^0,f,c
 13559  004B64  5013               	movf	(___lomod@divisor+5)^0,w,c
 13560  004B66  5A0B               	subwfb	(___lomod@dividend+5)^0,f,c
 13561  004B68  5014               	movf	(___lomod@divisor+6)^0,w,c
 13562  004B6A  5A0C               	subwfb	(___lomod@dividend+6)^0,f,c
 13563  004B6C  5015               	movf	(___lomod@divisor+7)^0,w,c
 13564  004B6E  5A0D               	subwfb	(___lomod@dividend+7)^0,f,c
 13565  004B70                     l6453:
 13566  004B70  90D8               	bcf	status,0,c
 13567  004B72  3215               	rrcf	(___lomod@divisor+7)^0,f,c
 13568  004B74  3214               	rrcf	(___lomod@divisor+6)^0,f,c
 13569  004B76  3213               	rrcf	(___lomod@divisor+5)^0,f,c
 13570  004B78  3212               	rrcf	(___lomod@divisor+4)^0,f,c
 13571  004B7A  3211               	rrcf	(___lomod@divisor+3)^0,f,c
 13572  004B7C  3210               	rrcf	(___lomod@divisor+2)^0,f,c
 13573  004B7E  320F               	rrcf	(___lomod@divisor+1)^0,f,c
 13574  004B80  320E               	rrcf	___lomod@divisor^0,f,c
 13575  004B82  2E16               	decfsz	___lomod@counter^0,f,c
 13576  004B84  EF91  F025         	goto	l6449
 13577  004B88                     l1083:
 13578  004B88  C006  F006         	movff	___lomod@dividend,?___lomod
 13579  004B8C  C007  F007         	movff	___lomod@dividend+1,?___lomod+1
 13580  004B90  C008  F008         	movff	___lomod@dividend+2,?___lomod+2
 13581  004B94  C009  F009         	movff	___lomod@dividend+3,?___lomod+3
 13582  004B98  C00A  F00A         	movff	___lomod@dividend+4,?___lomod+4
 13583  004B9C  C00B  F00B         	movff	___lomod@dividend+5,?___lomod+5
 13584  004BA0  C00C  F00C         	movff	___lomod@dividend+6,?___lomod+6
 13585  004BA4  C00D  F00D         	movff	___lomod@dividend+7,?___lomod+7
 13586  004BA8  0012               	return		;funcret
 13587  004BAA                     __end_of___lomod:
 13588                           	callstack 0
 13589                           
 13590 ;; *************** function ___lodiv *****************
 13591 ;; Defined at:
 13592 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
 13593 ;; Parameters:    Size  Location     Type
 13594 ;;  dividend        8    5[COMRAM] unsigned long long 
 13595 ;;  divisor         8   13[COMRAM] unsigned long long 
 13596 ;; Auto vars:     Size  Location     Type
 13597 ;;  quotient        8   21[COMRAM] unsigned long long 
 13598 ;;  counter         1   29[COMRAM] unsigned char 
 13599 ;; Return value:  Size  Location     Type
 13600 ;;                  8    5[COMRAM] unsigned long long 
 13601 ;; Registers used:
 13602 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13603 ;; Tracked objects:
 13604 ;;		On entry : 0/0
 13605 ;;		On exit  : 0/0
 13606 ;;		Unchanged: 0/0
 13607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13608 ;;      Params:        16       0       0       0       0       0       0
 13609 ;;      Locals:         9       0       0       0       0       0       0
 13610 ;;      Temps:          0       0       0       0       0       0       0
 13611 ;;      Totals:        25       0       0       0       0       0       0
 13612 ;;Total ram usage:       25 bytes
 13613 ;; Hardware stack levels used: 1
 13614 ;; Hardware stack levels required when called: 1
 13615 ;; This function calls:
 13616 ;;		Nothing
 13617 ;; This function is called by:
 13618 ;;		_utoa
 13619 ;; This function uses a non-reentrant model
 13620 ;;
 13621                           
 13622                           	psect	text48
 13623  004748                     __ptext48:
 13624                           	callstack 0
 13625  004748                     ___lodiv:
 13626                           	callstack 24
 13627  004748  EE20  F016         	lfsr	2,___lodiv@quotient
 13628  00474C  0E07               	movlw	7
 13629  00474E                     u7481:
 13630  00474E  6ADE               	clrf	postinc2,c
 13631  004750  06E8               	decf	wreg,f,c
 13632  004752  E2FD               	bc	u7481
 13633  004754  500E               	movf	___lodiv@divisor^0,w,c
 13634  004756  100F               	iorwf	(___lodiv@divisor+1)^0,w,c
 13635  004758  1010               	iorwf	(___lodiv@divisor+2)^0,w,c
 13636  00475A  1011               	iorwf	(___lodiv@divisor+3)^0,w,c
 13637  00475C  1012               	iorwf	(___lodiv@divisor+4)^0,w,c
 13638  00475E  1013               	iorwf	(___lodiv@divisor+5)^0,w,c
 13639  004760  1014               	iorwf	(___lodiv@divisor+6)^0,w,c
 13640  004762  1015               	iorwf	(___lodiv@divisor+7)^0,w,c
 13641  004764  B4D8               	btfsc	status,2,c
 13642  004766  EFB7  F023         	goto	u7491
 13643  00476A  EFB9  F023         	goto	u7490
 13644  00476E                     u7491:
 13645  00476E  EF0B  F024         	goto	l1073
 13646  004772                     u7490:
 13647  004772  0E01               	movlw	1
 13648  004774  6E1E               	movwf	___lodiv@counter^0,c
 13649  004776  EFC7  F023         	goto	l6427
 13650  00477A                     l6425:
 13651  00477A  90D8               	bcf	status,0,c
 13652  00477C  360E               	rlcf	___lodiv@divisor^0,f,c
 13653  00477E  360F               	rlcf	(___lodiv@divisor+1)^0,f,c
 13654  004780  3610               	rlcf	(___lodiv@divisor+2)^0,f,c
 13655  004782  3611               	rlcf	(___lodiv@divisor+3)^0,f,c
 13656  004784  3612               	rlcf	(___lodiv@divisor+4)^0,f,c
 13657  004786  3613               	rlcf	(___lodiv@divisor+5)^0,f,c
 13658  004788  3614               	rlcf	(___lodiv@divisor+6)^0,f,c
 13659  00478A  3615               	rlcf	(___lodiv@divisor+7)^0,f,c
 13660  00478C  2A1E               	incf	___lodiv@counter^0,f,c
 13661  00478E                     l6427:
 13662  00478E  AE15               	btfss	(___lodiv@divisor+7)^0,7,c
 13663  004790  EFCC  F023         	goto	u7501
 13664  004794  EFCE  F023         	goto	u7500
 13665  004798                     u7501:
 13666  004798  EFBD  F023         	goto	l6425
 13667  00479C                     u7500:
 13668  00479C                     l6429:
 13669  00479C  90D8               	bcf	status,0,c
 13670  00479E  3616               	rlcf	___lodiv@quotient^0,f,c
 13671  0047A0  3617               	rlcf	(___lodiv@quotient+1)^0,f,c
 13672  0047A2  3618               	rlcf	(___lodiv@quotient+2)^0,f,c
 13673  0047A4  3619               	rlcf	(___lodiv@quotient+3)^0,f,c
 13674  0047A6  361A               	rlcf	(___lodiv@quotient+4)^0,f,c
 13675  0047A8  361B               	rlcf	(___lodiv@quotient+5)^0,f,c
 13676  0047AA  361C               	rlcf	(___lodiv@quotient+6)^0,f,c
 13677  0047AC  361D               	rlcf	(___lodiv@quotient+7)^0,f,c
 13678  0047AE  500E               	movf	___lodiv@divisor^0,w,c
 13679  0047B0  5C06               	subwf	___lodiv@dividend^0,w,c
 13680  0047B2  500F               	movf	(___lodiv@divisor+1)^0,w,c
 13681  0047B4  5807               	subwfb	(___lodiv@dividend+1)^0,w,c
 13682  0047B6  5010               	movf	(___lodiv@divisor+2)^0,w,c
 13683  0047B8  5808               	subwfb	(___lodiv@dividend+2)^0,w,c
 13684  0047BA  5011               	movf	(___lodiv@divisor+3)^0,w,c
 13685  0047BC  5809               	subwfb	(___lodiv@dividend+3)^0,w,c
 13686  0047BE  5012               	movf	(___lodiv@divisor+4)^0,w,c
 13687  0047C0  580A               	subwfb	(___lodiv@dividend+4)^0,w,c
 13688  0047C2  5013               	movf	(___lodiv@divisor+5)^0,w,c
 13689  0047C4  580B               	subwfb	(___lodiv@dividend+5)^0,w,c
 13690  0047C6  5014               	movf	(___lodiv@divisor+6)^0,w,c
 13691  0047C8  580C               	subwfb	(___lodiv@dividend+6)^0,w,c
 13692  0047CA  5015               	movf	(___lodiv@divisor+7)^0,w,c
 13693  0047CC  580D               	subwfb	(___lodiv@dividend+7)^0,w,c
 13694  0047CE  A0D8               	btfss	status,0,c
 13695  0047D0  EFEC  F023         	goto	u7511
 13696  0047D4  EFEE  F023         	goto	u7510
 13697  0047D8                     u7511:
 13698  0047D8  EFFF  F023         	goto	l6437
 13699  0047DC                     u7510:
 13700  0047DC  500E               	movf	___lodiv@divisor^0,w,c
 13701  0047DE  5E06               	subwf	___lodiv@dividend^0,f,c
 13702  0047E0  500F               	movf	(___lodiv@divisor+1)^0,w,c
 13703  0047E2  5A07               	subwfb	(___lodiv@dividend+1)^0,f,c
 13704  0047E4  5010               	movf	(___lodiv@divisor+2)^0,w,c
 13705  0047E6  5A08               	subwfb	(___lodiv@dividend+2)^0,f,c
 13706  0047E8  5011               	movf	(___lodiv@divisor+3)^0,w,c
 13707  0047EA  5A09               	subwfb	(___lodiv@dividend+3)^0,f,c
 13708  0047EC  5012               	movf	(___lodiv@divisor+4)^0,w,c
 13709  0047EE  5A0A               	subwfb	(___lodiv@dividend+4)^0,f,c
 13710  0047F0  5013               	movf	(___lodiv@divisor+5)^0,w,c
 13711  0047F2  5A0B               	subwfb	(___lodiv@dividend+5)^0,f,c
 13712  0047F4  5014               	movf	(___lodiv@divisor+6)^0,w,c
 13713  0047F6  5A0C               	subwfb	(___lodiv@dividend+6)^0,f,c
 13714  0047F8  5015               	movf	(___lodiv@divisor+7)^0,w,c
 13715  0047FA  5A0D               	subwfb	(___lodiv@dividend+7)^0,f,c
 13716  0047FC  8016               	bsf	___lodiv@quotient^0,0,c
 13717  0047FE                     l6437:
 13718  0047FE  90D8               	bcf	status,0,c
 13719  004800  3215               	rrcf	(___lodiv@divisor+7)^0,f,c
 13720  004802  3214               	rrcf	(___lodiv@divisor+6)^0,f,c
 13721  004804  3213               	rrcf	(___lodiv@divisor+5)^0,f,c
 13722  004806  3212               	rrcf	(___lodiv@divisor+4)^0,f,c
 13723  004808  3211               	rrcf	(___lodiv@divisor+3)^0,f,c
 13724  00480A  3210               	rrcf	(___lodiv@divisor+2)^0,f,c
 13725  00480C  320F               	rrcf	(___lodiv@divisor+1)^0,f,c
 13726  00480E  320E               	rrcf	___lodiv@divisor^0,f,c
 13727  004810  2E1E               	decfsz	___lodiv@counter^0,f,c
 13728  004812  EFCE  F023         	goto	l6429
 13729  004816                     l1073:
 13730  004816  C016  F006         	movff	___lodiv@quotient,?___lodiv
 13731  00481A  C017  F007         	movff	___lodiv@quotient+1,?___lodiv+1
 13732  00481E  C018  F008         	movff	___lodiv@quotient+2,?___lodiv+2
 13733  004822  C019  F009         	movff	___lodiv@quotient+3,?___lodiv+3
 13734  004826  C01A  F00A         	movff	___lodiv@quotient+4,?___lodiv+4
 13735  00482A  C01B  F00B         	movff	___lodiv@quotient+5,?___lodiv+5
 13736  00482E  C01C  F00C         	movff	___lodiv@quotient+6,?___lodiv+6
 13737  004832  C01D  F00D         	movff	___lodiv@quotient+7,?___lodiv+7
 13738  004836  0012               	return		;funcret
 13739  004838                     __end_of___lodiv:
 13740                           	callstack 0
 13741                           
 13742 ;; *************** function _strncmp *****************
 13743 ;; Defined at:
 13744 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
 13745 ;; Parameters:    Size  Location     Type
 13746 ;;  _l              2    5[COMRAM] PTR const unsigned char 
 13747 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 13748 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 13749 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 13750 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 13751 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 13752 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 13753 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 13754 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 13755 ;;  _r              2    7[COMRAM] PTR const unsigned char 
 13756 ;;		 -> STR_52(3), STR_48(3), STR_43(3), STR_38(3), 
 13757 ;;		 -> STR_34(3), 
 13758 ;;  n               2    9[COMRAM] unsigned int 
 13759 ;; Auto vars:     Size  Location     Type
 13760 ;;  r               2   14[COMRAM] PTR const unsigned char 
 13761 ;;		 -> STR_52(3), STR_48(3), STR_43(3), STR_38(3), 
 13762 ;;		 -> STR_34(3), 
 13763 ;;  l               2   12[COMRAM] PTR const unsigned char 
 13764 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 13765 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 13766 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 13767 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 13768 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 13769 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 13770 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 13771 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 13772 ;; Return value:  Size  Location     Type
 13773 ;;                  2    5[COMRAM] int 
 13774 ;; Registers used:
 13775 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 13776 ;; Tracked objects:
 13777 ;;		On entry : 0/0
 13778 ;;		On exit  : 0/0
 13779 ;;		Unchanged: 0/0
 13780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13781 ;;      Params:         6       0       0       0       0       0       0
 13782 ;;      Locals:         4       0       0       0       0       0       0
 13783 ;;      Temps:          1       0       0       0       0       0       0
 13784 ;;      Totals:        11       0       0       0       0       0       0
 13785 ;;Total ram usage:       11 bytes
 13786 ;; Hardware stack levels used: 1
 13787 ;; Hardware stack levels required when called: 1
 13788 ;; This function calls:
 13789 ;;		Nothing
 13790 ;; This function is called by:
 13791 ;;		_vfpfcnvrt
 13792 ;; This function uses a non-reentrant model
 13793 ;;
 13794                           
 13795                           	psect	text49
 13796  0049FC                     __ptext49:
 13797                           	callstack 0
 13798  0049FC                     _strncmp:
 13799                           	callstack 25
 13800  0049FC  C006  F00D         	movff	strncmp@_l,strncmp@l
 13801  004A00  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
 13802  004A04  C008  F00F         	movff	strncmp@_r,strncmp@r
 13803  004A08  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
 13804  004A0C  060A               	decf	strncmp@n^0,f,c
 13805  004A0E  A0D8               	btfss	status,0,c
 13806  004A10  060B               	decf	(strncmp@n+1)^0,f,c
 13807  004A12  280A               	incf	strncmp@n^0,w,c
 13808  004A14  E106               	bnz	u8271
 13809  004A16  280B               	incf	(strncmp@n+1)^0,w,c
 13810  004A18  A4D8               	btfss	status,2,c
 13811  004A1A  EF11  F025         	goto	u8271
 13812  004A1E  EF13  F025         	goto	u8270
 13813  004A22                     u8271:
 13814  004A22  EF20  F025         	goto	l6773
 13815  004A26                     u8270:
 13816  004A26  0E00               	movlw	0
 13817  004A28  6E07               	movwf	(?_strncmp+1)^0,c
 13818  004A2A  0E00               	movlw	0
 13819  004A2C  6E06               	movwf	?_strncmp^0,c
 13820  004A2E  EF6C  F025         	goto	l1591
 13821  004A32                     l6771:
 13822  004A32  4A0D               	infsnz	strncmp@l^0,f,c
 13823  004A34  2A0E               	incf	(strncmp@l+1)^0,f,c
 13824  004A36  4A0F               	infsnz	strncmp@r^0,f,c
 13825  004A38  2A10               	incf	(strncmp@r+1)^0,f,c
 13826  004A3A  060A               	decf	strncmp@n^0,f,c
 13827  004A3C  A0D8               	btfss	status,0,c
 13828  004A3E  060B               	decf	(strncmp@n+1)^0,f,c
 13829  004A40                     l6773:
 13830  004A40  C00D  FFF6         	movff	strncmp@l,tblptrl
 13831  004A44  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 13832  004A48                     	if	0	;tblptru may be non-zero
 13833  004A48                     	endif
 13834  004A48                     	if	0	;tblptru may be non-zero
 13835  004A48                     	endif
 13836  004A48  0008               	tblrd		*
 13837  004A4A  50F5               	movf	tablat,w,c
 13838  004A4C  0900               	iorlw	0
 13839  004A4E  B4D8               	btfsc	status,2,c
 13840  004A50  EF2C  F025         	goto	u8281
 13841  004A54  EF2E  F025         	goto	u8280
 13842  004A58                     u8281:
 13843  004A58  EF5A  F025         	goto	l6781
 13844  004A5C                     u8280:
 13845  004A5C  C00F  FFF6         	movff	strncmp@r,tblptrl
 13846  004A60  C010  FFF7         	movff	strncmp@r+1,tblptrh
 13847  004A64                     	if	0	;tblptru may be non-zero
 13848  004A64                     	endif
 13849  004A64                     	if	0	;tblptru may be non-zero
 13850  004A64                     	endif
 13851  004A64  0008               	tblrd		*
 13852  004A66  50F5               	movf	tablat,w,c
 13853  004A68  0900               	iorlw	0
 13854  004A6A  B4D8               	btfsc	status,2,c
 13855  004A6C  EF3A  F025         	goto	u8291
 13856  004A70  EF3C  F025         	goto	u8290
 13857  004A74                     u8291:
 13858  004A74  EF5A  F025         	goto	l6781
 13859  004A78                     u8290:
 13860  004A78  500A               	movf	strncmp@n^0,w,c
 13861  004A7A  100B               	iorwf	(strncmp@n+1)^0,w,c
 13862  004A7C  B4D8               	btfsc	status,2,c
 13863  004A7E  EF43  F025         	goto	u8301
 13864  004A82  EF45  F025         	goto	u8300
 13865  004A86                     u8301:
 13866  004A86  EF5A  F025         	goto	l6781
 13867  004A8A                     u8300:
 13868  004A8A  C00D  FFF6         	movff	strncmp@l,tblptrl
 13869  004A8E  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 13870  004A92                     	if	0	;tblptru may be non-zero
 13871  004A92                     	endif
 13872  004A92                     	if	0	;tblptru may be non-zero
 13873  004A92                     	endif
 13874  004A92  0008               	tblrd		*
 13875  004A94  CFF5 F00C          	movff	tablat,??_strncmp
 13876  004A98  C00F  FFF6         	movff	strncmp@r,tblptrl
 13877  004A9C  C010  FFF7         	movff	strncmp@r+1,tblptrh
 13878  004AA0                     	if	0	;tblptru may be non-zero
 13879  004AA0                     	endif
 13880  004AA0                     	if	0	;tblptru may be non-zero
 13881  004AA0                     	endif
 13882  004AA0  0008               	tblrd		*
 13883  004AA2  50F5               	movf	tablat,w,c
 13884  004AA4  180C               	xorwf	??_strncmp^0,w,c
 13885  004AA6  B4D8               	btfsc	status,2,c
 13886  004AA8  EF58  F025         	goto	u8311
 13887  004AAC  EF5A  F025         	goto	u8310
 13888  004AB0                     u8311:
 13889  004AB0  EF19  F025         	goto	l6771
 13890  004AB4                     u8310:
 13891  004AB4                     l6781:
 13892  004AB4  C00D  FFF6         	movff	strncmp@l,tblptrl
 13893  004AB8  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 13894  004ABC                     	if	0	;tblptru may be non-zero
 13895  004ABC                     	endif
 13896  004ABC                     	if	0	;tblptru may be non-zero
 13897  004ABC                     	endif
 13898  004ABC  0008               	tblrd		*
 13899  004ABE  CFF5 F00C          	movff	tablat,??_strncmp
 13900  004AC2  C00F  FFF6         	movff	strncmp@r,tblptrl
 13901  004AC6  C010  FFF7         	movff	strncmp@r+1,tblptrh
 13902  004ACA                     	if	0	;tblptru may be non-zero
 13903  004ACA                     	endif
 13904  004ACA                     	if	0	;tblptru may be non-zero
 13905  004ACA                     	endif
 13906  004ACA  0008               	tblrd		*
 13907  004ACC  50F5               	movf	tablat,w,c
 13908  004ACE  5C0C               	subwf	??_strncmp^0,w,c
 13909  004AD0  6E06               	movwf	?_strncmp^0,c
 13910  004AD2  6A07               	clrf	(?_strncmp+1)^0,c
 13911  004AD4  A0D8               	btfss	status,0,c
 13912  004AD6  0607               	decf	(?_strncmp+1)^0,f,c
 13913  004AD8                     l1591:
 13914  004AD8  0012               	return		;funcret
 13915  004ADA                     __end_of_strncmp:
 13916                           	callstack 0
 13917                           
 13918 ;; *************** function _stoa *****************
 13919 ;; Defined at:
 13920 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 13921 ;; Parameters:    Size  Location     Type
 13922 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 13923 ;;		 -> NULL(0), 
 13924 ;;  s               2   17[COMRAM] PTR unsigned char 
 13925 ;;		 -> ?_printf(2), main@fno(22), put_rc@str(69), 
 13926 ;; Auto vars:     Size  Location     Type
 13927 ;;  nuls            7   20[COMRAM] unsigned char [7]
 13928 ;;  l               2   35[COMRAM] int 
 13929 ;;  p               2   33[COMRAM] int 
 13930 ;;  cp              2   31[COMRAM] PTR unsigned char 
 13931 ;;		 -> stoa@nuls(7), ?_printf(2), main@fno(22), put_rc@str(69), 
 13932 ;;  w               2   29[COMRAM] int 
 13933 ;;  i               2   27[COMRAM] int 
 13934 ;; Return value:  Size  Location     Type
 13935 ;;                  2   15[COMRAM] int 
 13936 ;; Registers used:
 13937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13938 ;; Tracked objects:
 13939 ;;		On entry : 0/0
 13940 ;;		On exit  : 0/0
 13941 ;;		Unchanged: 0/0
 13942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13943 ;;      Params:         4       0       0       0       0       0       0
 13944 ;;      Locals:        17       0       0       0       0       0       0
 13945 ;;      Temps:          1       0       0       0       0       0       0
 13946 ;;      Totals:        22       0       0       0       0       0       0
 13947 ;;Total ram usage:       22 bytes
 13948 ;; Hardware stack levels used: 1
 13949 ;; Hardware stack levels required when called: 3
 13950 ;; This function calls:
 13951 ;;		_fputc
 13952 ;;		_strlen
 13953 ;; This function is called by:
 13954 ;;		_vfpfcnvrt
 13955 ;; This function uses a non-reentrant model
 13956 ;;
 13957                           
 13958                           	psect	text50
 13959  003532                     __ptext50:
 13960                           	callstack 0
 13961  003532                     _stoa:
 13962                           	callstack 23
 13963  003532                     
 13964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
 13965  003532  EE21  F0E1         	lfsr	2,stoa@F1141
 13966  003536  EE10  F015         	lfsr	1,stoa@nuls
 13967  00353A  0E06               	movlw	6
 13968  00353C                     u7861:
 13969  00353C  CFDB FFE3          	movff	plusw2,plusw1
 13970  003540  06E8               	decf	wreg,f,c
 13971  003542  E2FC               	bc	u7861
 13972  003544                     
 13973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
 13974  003544  C012  F020         	movff	stoa@s,stoa@cp
 13975  003548  C013  F021         	movff	stoa@s+1,stoa@cp+1
 13976  00354C                     
 13977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
 13978  00354C  5020               	movf	stoa@cp^0,w,c
 13979  00354E  1021               	iorwf	(stoa@cp+1)^0,w,c
 13980  003550  A4D8               	btfss	status,2,c
 13981  003552  EFAD  F01A         	goto	u7871
 13982  003556  EFAF  F01A         	goto	u7870
 13983  00355A                     u7871:
 13984  00355A  EFB3  F01A         	goto	l6587
 13985  00355E                     u7870:
 13986  00355E                     
 13987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
 13988  00355E  0E15               	movlw	low stoa@nuls
 13989  003560  6E20               	movwf	stoa@cp^0,c
 13990  003562  0E00               	movlw	high stoa@nuls
 13991  003564  6E21               	movwf	(stoa@cp+1)^0,c
 13992  003566                     l6587:
 13993                           
 13994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
 13995  003566  C020  F006         	movff	stoa@cp,strlen@s
 13996  00356A  C021  F007         	movff	stoa@cp+1,strlen@s+1
 13997  00356E  EC26  F02A         	call	_strlen	;wreg free
 13998  003572  C006  F024         	movff	?_strlen,stoa@l
 13999  003576  C007  F025         	movff	?_strlen+1,stoa@l+1
 14000  00357A                     
 14001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
 14002  00357A  C076  F022         	movff	_prec,stoa@p
 14003  00357E  C077  F023         	movff	_prec+1,stoa@p+1
 14004  003582                     
 14005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
 14006  003582  BE23               	btfsc	(stoa@p+1)^0,7,c
 14007  003584  EFC6  F01A         	goto	u7881
 14008  003588  EFC8  F01A         	goto	u7880
 14009  00358C                     u7881:
 14010  00358C  EFDD  F01A         	goto	l1402
 14011  003590                     u7880:
 14012  003590  5024               	movf	stoa@l^0,w,c
 14013  003592  5C22               	subwf	stoa@p^0,w,c
 14014  003594  5023               	movf	(stoa@p+1)^0,w,c
 14015  003596  0A80               	xorlw	128
 14016  003598  6E14               	movwf	??_stoa^0,c
 14017  00359A  5025               	movf	(stoa@l+1)^0,w,c
 14018  00359C  0A80               	xorlw	128
 14019  00359E  5814               	subwfb	??_stoa^0,w,c
 14020  0035A0  A0D8               	btfss	status,0,c
 14021  0035A2  EFD5  F01A         	goto	u7891
 14022  0035A6  EFD7  F01A         	goto	u7890
 14023  0035AA                     u7891:
 14024  0035AA  EFD9  F01A         	goto	l1400
 14025  0035AE                     u7890:
 14026  0035AE  EFDD  F01A         	goto	l1402
 14027  0035B2                     l1400:
 14028  0035B2  C022  F024         	movff	stoa@p,stoa@l
 14029  0035B6  C023  F025         	movff	stoa@p+1,stoa@l+1
 14030  0035BA                     l1402:
 14031                           
 14032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
 14033  0035BA  C024  F022         	movff	stoa@l,stoa@p
 14034  0035BE  C025  F023         	movff	stoa@l+1,stoa@p+1
 14035                           
 14036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
 14037  0035C2  C0F9  F01E         	movff	_width,stoa@w
 14038  0035C6  C0FA  F01F         	movff	_width+1,stoa@w+1
 14039                           
 14040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
 14041  0035CA  B078               	btfsc	_flags^0,0,c
 14042  0035CC  EFEA  F01A         	goto	u7901
 14043  0035D0  EFEC  F01A         	goto	u7900
 14044  0035D4                     u7901:
 14045  0035D4  EF09  F01B         	goto	l6603
 14046  0035D8                     u7900:
 14047  0035D8  EFFA  F01A         	goto	l6601
 14048  0035DC                     l6597:
 14049                           
 14050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
 14051  0035DC  0E00               	movlw	0
 14052  0035DE  6E08               	movwf	(fputc@c+1)^0,c
 14053  0035E0  0E20               	movlw	32
 14054  0035E2  6E07               	movwf	fputc@c^0,c
 14055  0035E4  C010  F009         	movff	stoa@fp,fputc@fp
 14056  0035E8  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 14057  0035EC  ECF5  F027         	call	_fputc	;wreg free
 14058  0035F0                     
 14059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
 14060  0035F0  4A24               	infsnz	stoa@l^0,f,c
 14061  0035F2  2A25               	incf	(stoa@l+1)^0,f,c
 14062  0035F4                     l6601:
 14063                           
 14064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
 14065  0035F4  501E               	movf	stoa@w^0,w,c
 14066  0035F6  5C24               	subwf	stoa@l^0,w,c
 14067  0035F8  5025               	movf	(stoa@l+1)^0,w,c
 14068  0035FA  0A80               	xorlw	128
 14069  0035FC  6E14               	movwf	??_stoa^0,c
 14070  0035FE  501F               	movf	(stoa@w+1)^0,w,c
 14071  003600  0A80               	xorlw	128
 14072  003602  5814               	subwfb	??_stoa^0,w,c
 14073  003604  A0D8               	btfss	status,0,c
 14074  003606  EF07  F01B         	goto	u7911
 14075  00360A  EF09  F01B         	goto	u7910
 14076  00360E                     u7911:
 14077  00360E  EFEE  F01A         	goto	l6597
 14078  003612                     u7910:
 14079  003612                     l6603:
 14080                           
 14081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
 14082  003612  0E00               	movlw	0
 14083  003614  6E1D               	movwf	(stoa@i+1)^0,c
 14084  003616  0E00               	movlw	0
 14085  003618  6E1C               	movwf	stoa@i^0,c
 14086                           
 14087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
 14088  00361A  EF2D  F01B         	goto	l6611
 14089  00361E                     l6605:
 14090                           
 14091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
 14092  00361E  C020  FFF6         	movff	stoa@cp,tblptrl
 14093  003622  C021  FFF7         	movff	stoa@cp+1,tblptrh
 14094  003626  6AF8               	clrf	tblptru,c
 14095  003628  0E05               	movlw	(high __ramtop+-1)
 14096  00362A  64F7               	cpfsgt	tblptrh,c
 14097  00362C  D003               	bra	u7927
 14098  00362E  0008               	tblrd		*
 14099  003630  50F5               	movf	tablat,w,c
 14100  003632  D005               	bra	u7920
 14101  003634                     u7927:
 14102  003634  CFF6 FFE1          	movff	tblptrl,fsr1l
 14103  003638  CFF7 FFE2          	movff	tblptrh,fsr1h
 14104  00363C  50E7               	movf	indf1,w,c
 14105  00363E                     u7920:
 14106  00363E  6E14               	movwf	??_stoa^0,c
 14107  003640  5014               	movf	??_stoa^0,w,c
 14108  003642  6E07               	movwf	fputc@c^0,c
 14109  003644  6A08               	clrf	(fputc@c+1)^0,c
 14110  003646  C010  F009         	movff	stoa@fp,fputc@fp
 14111  00364A  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 14112  00364E  ECF5  F027         	call	_fputc	;wreg free
 14113  003652                     
 14114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
 14115  003652  4A20               	infsnz	stoa@cp^0,f,c
 14116  003654  2A21               	incf	(stoa@cp+1)^0,f,c
 14117  003656                     
 14118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
 14119  003656  4A1C               	infsnz	stoa@i^0,f,c
 14120  003658  2A1D               	incf	(stoa@i+1)^0,f,c
 14121  00365A                     l6611:
 14122                           
 14123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
 14124  00365A  5022               	movf	stoa@p^0,w,c
 14125  00365C  5C1C               	subwf	stoa@i^0,w,c
 14126  00365E  501D               	movf	(stoa@i+1)^0,w,c
 14127  003660  0A80               	xorlw	128
 14128  003662  6E14               	movwf	??_stoa^0,c
 14129  003664  5023               	movf	(stoa@p+1)^0,w,c
 14130  003666  0A80               	xorlw	128
 14131  003668  5814               	subwfb	??_stoa^0,w,c
 14132  00366A  A0D8               	btfss	status,0,c
 14133  00366C  EF3A  F01B         	goto	u7931
 14134  003670  EF3C  F01B         	goto	u7930
 14135  003674                     u7931:
 14136  003674  EF0F  F01B         	goto	l6605
 14137  003678                     u7930:
 14138  003678                     
 14139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
 14140  003678  A078               	btfss	_flags^0,0,c
 14141  00367A  EF41  F01B         	goto	u7941
 14142  00367E  EF43  F01B         	goto	u7940
 14143  003682                     u7941:
 14144  003682  EF60  F01B         	goto	l1412
 14145  003686                     u7940:
 14146  003686  EF51  F01B         	goto	l6619
 14147  00368A                     l6615:
 14148                           
 14149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
 14150  00368A  0E00               	movlw	0
 14151  00368C  6E08               	movwf	(fputc@c+1)^0,c
 14152  00368E  0E20               	movlw	32
 14153  003690  6E07               	movwf	fputc@c^0,c
 14154  003692  C010  F009         	movff	stoa@fp,fputc@fp
 14155  003696  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 14156  00369A  ECF5  F027         	call	_fputc	;wreg free
 14157  00369E                     
 14158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
 14159  00369E  4A24               	infsnz	stoa@l^0,f,c
 14160  0036A0  2A25               	incf	(stoa@l+1)^0,f,c
 14161  0036A2                     l6619:
 14162                           
 14163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
 14164  0036A2  501E               	movf	stoa@w^0,w,c
 14165  0036A4  5C24               	subwf	stoa@l^0,w,c
 14166  0036A6  5025               	movf	(stoa@l+1)^0,w,c
 14167  0036A8  0A80               	xorlw	128
 14168  0036AA  6E14               	movwf	??_stoa^0,c
 14169  0036AC  501F               	movf	(stoa@w+1)^0,w,c
 14170  0036AE  0A80               	xorlw	128
 14171  0036B0  5814               	subwfb	??_stoa^0,w,c
 14172  0036B2  A0D8               	btfss	status,0,c
 14173  0036B4  EF5E  F01B         	goto	u7951
 14174  0036B8  EF60  F01B         	goto	u7950
 14175  0036BC                     u7951:
 14176  0036BC  EF45  F01B         	goto	l6615
 14177  0036C0                     u7950:
 14178  0036C0                     l1412:
 14179                           
 14180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
 14181  0036C0  C024  F010         	movff	stoa@l,?_stoa
 14182  0036C4  C025  F011         	movff	stoa@l+1,?_stoa+1
 14183  0036C8  0012               	return		;funcret
 14184  0036CA                     __end_of_stoa:
 14185                           	callstack 0
 14186                           
 14187 ;; *************** function _dtoa *****************
 14188 ;; Defined at:
 14189 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 14190 ;; Parameters:    Size  Location     Type
 14191 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 14192 ;;		 -> NULL(0), 
 14193 ;;  d               8   35[COMRAM] long long 
 14194 ;; Auto vars:     Size  Location     Type
 14195 ;;  n               8   59[COMRAM] long long 
 14196 ;;  i               2   67[COMRAM] int 
 14197 ;;  s               2   57[COMRAM] int 
 14198 ;;  w               2   55[COMRAM] int 
 14199 ;;  p               2   53[COMRAM] int 
 14200 ;; Return value:  Size  Location     Type
 14201 ;;                  2   33[COMRAM] int 
 14202 ;; Registers used:
 14203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14204 ;; Tracked objects:
 14205 ;;		On entry : 0/0
 14206 ;;		On exit  : 0/0
 14207 ;;		Unchanged: 0/0
 14208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14209 ;;      Params:        10       0       0       0       0       0       0
 14210 ;;      Locals:        18       0       0       0       0       0       0
 14211 ;;      Temps:          8       0       0       0       0       0       0
 14212 ;;      Totals:        36       0       0       0       0       0       0
 14213 ;;Total ram usage:       36 bytes
 14214 ;; Hardware stack levels used: 1
 14215 ;; Hardware stack levels required when called: 5
 14216 ;; This function calls:
 14217 ;;		___aodiv
 14218 ;;		___aomod
 14219 ;;		_abs
 14220 ;;		_pad
 14221 ;; This function is called by:
 14222 ;;		_vfpfcnvrt
 14223 ;; This function uses a non-reentrant model
 14224 ;;
 14225                           
 14226                           	psect	text51
 14227  001E5C                     __ptext51:
 14228                           	callstack 0
 14229  001E5C                     _dtoa:
 14230                           	callstack 21
 14231  001E5C                     
 14232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 14233  001E5C  C024  F03C         	movff	dtoa@d,dtoa@n
 14234  001E60  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 14235  001E64  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 14236  001E68  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 14237  001E6C  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 14238  001E70  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 14239  001E74  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 14240  001E78  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 14241  001E7C                     
 14242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 14243  001E7C  BE43               	btfsc	(dtoa@n+7)^0,7,c
 14244  001E7E  EF43  F00F         	goto	u7711
 14245  001E82  EF46  F00F         	goto	u7710
 14246  001E86                     u7711:
 14247  001E86  0E01               	movlw	1
 14248  001E88  EF47  F00F         	goto	u7720
 14249  001E8C                     u7710:
 14250  001E8C  0E00               	movlw	0
 14251  001E8E                     u7720:
 14252  001E8E  6E3A               	movwf	dtoa@s^0,c
 14253  001E90  6A3B               	clrf	(dtoa@s+1)^0,c
 14254                           
 14255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 14256  001E92  503A               	movf	dtoa@s^0,w,c
 14257  001E94  103B               	iorwf	(dtoa@s+1)^0,w,c
 14258  001E96  B4D8               	btfsc	status,2,c
 14259  001E98  EF50  F00F         	goto	u7731
 14260  001E9C  EF52  F00F         	goto	u7730
 14261  001EA0                     u7731:
 14262  001EA0  EF62  F00F         	goto	l6523
 14263  001EA4                     u7730:
 14264  001EA4                     
 14265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 14266  001EA4  1E43               	comf	(dtoa@n+7)^0,f,c
 14267  001EA6  1E42               	comf	(dtoa@n+6)^0,f,c
 14268  001EA8  1E41               	comf	(dtoa@n+5)^0,f,c
 14269  001EAA  1E40               	comf	(dtoa@n+4)^0,f,c
 14270  001EAC  1E3F               	comf	(dtoa@n+3)^0,f,c
 14271  001EAE  1E3E               	comf	(dtoa@n+2)^0,f,c
 14272  001EB0  1E3D               	comf	(dtoa@n+1)^0,f,c
 14273  001EB2  6C3C               	negf	dtoa@n^0,c
 14274  001EB4  0E00               	movlw	0
 14275  001EB6  223D               	addwfc	(dtoa@n+1)^0,f,c
 14276  001EB8  223E               	addwfc	(dtoa@n+2)^0,f,c
 14277  001EBA  223F               	addwfc	(dtoa@n+3)^0,f,c
 14278  001EBC  2240               	addwfc	(dtoa@n+4)^0,f,c
 14279  001EBE  2241               	addwfc	(dtoa@n+5)^0,f,c
 14280  001EC0  2242               	addwfc	(dtoa@n+6)^0,f,c
 14281  001EC2  2243               	addwfc	(dtoa@n+7)^0,f,c
 14282  001EC4                     l6523:
 14283                           
 14284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 14285  001EC4  BE77               	btfsc	(_prec+1)^0,7,c
 14286  001EC6  EF67  F00F         	goto	u7741
 14287  001ECA  EF69  F00F         	goto	u7740
 14288  001ECE                     u7741:
 14289  001ECE  EF6A  F00F         	goto	l6527
 14290  001ED2                     u7740:
 14291  001ED2                     
 14292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 14293  001ED2  9278               	bcf	_flags^0,1,c
 14294  001ED4                     l6527:
 14295                           
 14296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 14297  001ED4  BE77               	btfsc	(_prec+1)^0,7,c
 14298  001ED6  EF77  F00F         	goto	u7750
 14299  001EDA  5077               	movf	(_prec+1)^0,w,c
 14300  001EDC  E106               	bnz	u7751
 14301  001EDE  0476               	decf	_prec^0,w,c
 14302  001EE0  B0D8               	btfsc	status,0,c
 14303  001EE2  EF75  F00F         	goto	u7751
 14304  001EE6  EF77  F00F         	goto	u7750
 14305  001EEA                     u7751:
 14306  001EEA  EF7D  F00F         	goto	l1373
 14307  001EEE                     u7750:
 14308  001EEE  0E00               	movlw	0
 14309  001EF0  6E37               	movwf	(dtoa@p+1)^0,c
 14310  001EF2  0E01               	movlw	1
 14311  001EF4  6E36               	movwf	dtoa@p^0,c
 14312  001EF6  EF81  F00F         	goto	l1375
 14313  001EFA                     l1373:
 14314  001EFA  C076  F036         	movff	_prec,dtoa@p
 14315  001EFE  C077  F037         	movff	_prec+1,dtoa@p+1
 14316  001F02                     l1375:
 14317                           
 14318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 14319  001F02  C0F9  F038         	movff	_width,dtoa@w
 14320  001F06  C0FA  F039         	movff	_width+1,dtoa@w+1
 14321  001F0A                     
 14322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 14323  001F0A  503A               	movf	dtoa@s^0,w,c
 14324  001F0C  103B               	iorwf	(dtoa@s+1)^0,w,c
 14325  001F0E  A4D8               	btfss	status,2,c
 14326  001F10  EF8C  F00F         	goto	u7761
 14327  001F14  EF8E  F00F         	goto	u7760
 14328  001F18                     u7761:
 14329  001F18  EF95  F00F         	goto	l6535
 14330  001F1C                     u7760:
 14331  001F1C  A478               	btfss	_flags^0,2,c
 14332  001F1E  EF93  F00F         	goto	u7771
 14333  001F22  EF95  F00F         	goto	u7770
 14334  001F26                     u7771:
 14335  001F26  EF98  F00F         	goto	l6537
 14336  001F2A                     u7770:
 14337  001F2A                     l6535:
 14338                           
 14339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 14340  001F2A  0638               	decf	dtoa@w^0,f,c
 14341  001F2C  A0D8               	btfss	status,0,c
 14342  001F2E  0639               	decf	(dtoa@w+1)^0,f,c
 14343  001F30                     l6537:
 14344                           
 14345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 14346  001F30  0E00               	movlw	0
 14347  001F32  6E45               	movwf	(dtoa@i+1)^0,c
 14348  001F34  0E1F               	movlw	31
 14349  001F36  6E44               	movwf	dtoa@i^0,c
 14350  001F38                     
 14351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 14352  001F38  0E00               	movlw	0
 14353  001F3A  0101               	movlb	1	; () banked
 14354  001F3C  6FE0               	movwf	(_dbuf+31)& (0+255),b
 14355                           
 14356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14357  001F3E  EF1D  F010         	goto	l6551
 14358  001F42                     l6541:
 14359                           
 14360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 14361  001F42  0644               	decf	dtoa@i^0,f,c
 14362  001F44  A0D8               	btfss	status,0,c
 14363  001F46  0645               	decf	(dtoa@i+1)^0,f,c
 14364  001F48                     
 14365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 14366  001F48  0EC1               	movlw	low _dbuf
 14367  001F4A  2444               	addwf	dtoa@i^0,w,c
 14368  001F4C  6ED9               	movwf	fsr2l,c
 14369  001F4E  0E01               	movlw	high _dbuf
 14370  001F50  2045               	addwfc	(dtoa@i+1)^0,w,c
 14371  001F52  6EDA               	movwf	fsr2h,c
 14372  001F54  C03C  F006         	movff	dtoa@n,___aomod@dividend
 14373  001F58  C03D  F007         	movff	dtoa@n+1,___aomod@dividend+1
 14374  001F5C  C03E  F008         	movff	dtoa@n+2,___aomod@dividend+2
 14375  001F60  C03F  F009         	movff	dtoa@n+3,___aomod@dividend+3
 14376  001F64  C040  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 14377  001F68  C041  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 14378  001F6C  C042  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 14379  001F70  C043  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 14380  001F74  0E0A               	movlw	10
 14381  001F76  6E0E               	movwf	___aomod@divisor^0,c
 14382  001F78  0E00               	movlw	0
 14383  001F7A  6E0F               	movwf	(___aomod@divisor+1)^0,c
 14384  001F7C  0E00               	movlw	0
 14385  001F7E  6E10               	movwf	(___aomod@divisor+2)^0,c
 14386  001F80  0E00               	movlw	0
 14387  001F82  6E11               	movwf	(___aomod@divisor+3)^0,c
 14388  001F84  0E00               	movlw	0
 14389  001F86  6E12               	movwf	(___aomod@divisor+4)^0,c
 14390  001F88  0E00               	movlw	0
 14391  001F8A  6E13               	movwf	(___aomod@divisor+5)^0,c
 14392  001F8C  0E00               	movlw	0
 14393  001F8E  6E14               	movwf	(___aomod@divisor+6)^0,c
 14394  001F90  0E00               	movlw	0
 14395  001F92  6E15               	movwf	(___aomod@divisor+7)^0,c
 14396  001F94  EC9B  F020         	call	___aomod	;wreg free
 14397  001F98  C006  F02C         	movff	?___aomod,??_dtoa
 14398  001F9C  C007  F02D         	movff	?___aomod+1,??_dtoa+1
 14399  001FA0  C008  F02E         	movff	?___aomod+2,??_dtoa+2
 14400  001FA4  C009  F02F         	movff	?___aomod+3,??_dtoa+3
 14401  001FA8  C00A  F030         	movff	?___aomod+4,??_dtoa+4
 14402  001FAC  C00B  F031         	movff	?___aomod+5,??_dtoa+5
 14403  001FB0  C00C  F032         	movff	?___aomod+6,??_dtoa+6
 14404  001FB4  C00D  F033         	movff	?___aomod+7,??_dtoa+7
 14405  001FB8  C02C  F018         	movff	??_dtoa,abs@a
 14406  001FBC  C02E  F019         	movff	??_dtoa+2,abs@a+1
 14407  001FC0  EC6F  F02A         	call	_abs	;wreg free
 14408  001FC4  5018               	movf	?_abs^0,w,c
 14409  001FC6  0F30               	addlw	48
 14410  001FC8  6EDF               	movwf	indf2,c
 14411  001FCA                     
 14412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 14413  001FCA  0636               	decf	dtoa@p^0,f,c
 14414  001FCC  A0D8               	btfss	status,0,c
 14415  001FCE  0637               	decf	(dtoa@p+1)^0,f,c
 14416  001FD0                     
 14417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 14418  001FD0  0638               	decf	dtoa@w^0,f,c
 14419  001FD2  A0D8               	btfss	status,0,c
 14420  001FD4  0639               	decf	(dtoa@w+1)^0,f,c
 14421  001FD6                     
 14422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 14423  001FD6  C03C  F006         	movff	dtoa@n,___aodiv@dividend
 14424  001FDA  C03D  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 14425  001FDE  C03E  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 14426  001FE2  C03F  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 14427  001FE6  C040  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 14428  001FEA  C041  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 14429  001FEE  C042  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 14430  001FF2  C043  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 14431  001FF6  0E0A               	movlw	10
 14432  001FF8  6E0E               	movwf	___aodiv@divisor^0,c
 14433  001FFA  0E00               	movlw	0
 14434  001FFC  6E0F               	movwf	(___aodiv@divisor+1)^0,c
 14435  001FFE  0E00               	movlw	0
 14436  002000  6E10               	movwf	(___aodiv@divisor+2)^0,c
 14437  002002  0E00               	movlw	0
 14438  002004  6E11               	movwf	(___aodiv@divisor+3)^0,c
 14439  002006  0E00               	movlw	0
 14440  002008  6E12               	movwf	(___aodiv@divisor+4)^0,c
 14441  00200A  0E00               	movlw	0
 14442  00200C  6E13               	movwf	(___aodiv@divisor+5)^0,c
 14443  00200E  0E00               	movlw	0
 14444  002010  6E14               	movwf	(___aodiv@divisor+6)^0,c
 14445  002012  0E00               	movlw	0
 14446  002014  6E15               	movwf	(___aodiv@divisor+7)^0,c
 14447  002016  ECF5  F01C         	call	___aodiv	;wreg free
 14448  00201A  C006  F03C         	movff	?___aodiv,dtoa@n
 14449  00201E  C007  F03D         	movff	?___aodiv+1,dtoa@n+1
 14450  002022  C008  F03E         	movff	?___aodiv+2,dtoa@n+2
 14451  002026  C009  F03F         	movff	?___aodiv+3,dtoa@n+3
 14452  00202A  C00A  F040         	movff	?___aodiv+4,dtoa@n+4
 14453  00202E  C00B  F041         	movff	?___aodiv+5,dtoa@n+5
 14454  002032  C00C  F042         	movff	?___aodiv+6,dtoa@n+6
 14455  002036  C00D  F043         	movff	?___aodiv+7,dtoa@n+7
 14456  00203A                     l6551:
 14457                           
 14458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14459  00203A  BE45               	btfsc	(dtoa@i+1)^0,7,c
 14460  00203C  EF28  F010         	goto	u7781
 14461  002040  5045               	movf	(dtoa@i+1)^0,w,c
 14462  002042  E108               	bnz	u7780
 14463  002044  0444               	decf	dtoa@i^0,w,c
 14464  002046  A0D8               	btfss	status,0,c
 14465  002048  EF28  F010         	goto	u7781
 14466  00204C  EF2A  F010         	goto	u7780
 14467  002050                     u7781:
 14468  002050  EF5A  F010         	goto	l6561
 14469  002054                     u7780:
 14470  002054  503C               	movf	dtoa@n^0,w,c
 14471  002056  103D               	iorwf	(dtoa@n+1)^0,w,c
 14472  002058  103E               	iorwf	(dtoa@n+2)^0,w,c
 14473  00205A  103F               	iorwf	(dtoa@n+3)^0,w,c
 14474  00205C  1040               	iorwf	(dtoa@n+4)^0,w,c
 14475  00205E  1041               	iorwf	(dtoa@n+5)^0,w,c
 14476  002060  1042               	iorwf	(dtoa@n+6)^0,w,c
 14477  002062  1043               	iorwf	(dtoa@n+7)^0,w,c
 14478  002064  A4D8               	btfss	status,2,c
 14479  002066  EF37  F010         	goto	u7791
 14480  00206A  EF39  F010         	goto	u7790
 14481  00206E                     u7791:
 14482  00206E  EFA1  F00F         	goto	l6541
 14483  002072                     u7790:
 14484  002072  BE37               	btfsc	(dtoa@p+1)^0,7,c
 14485  002074  EF46  F010         	goto	u7800
 14486  002078  5037               	movf	(dtoa@p+1)^0,w,c
 14487  00207A  E106               	bnz	u7801
 14488  00207C  0436               	decf	dtoa@p^0,w,c
 14489  00207E  B0D8               	btfsc	status,0,c
 14490  002080  EF44  F010         	goto	u7801
 14491  002084  EF46  F010         	goto	u7800
 14492  002088                     u7801:
 14493  002088  EFA1  F00F         	goto	l6541
 14494  00208C                     u7800:
 14495  00208C  BE39               	btfsc	(dtoa@w+1)^0,7,c
 14496  00208E  EF51  F010         	goto	u7811
 14497  002092  5039               	movf	(dtoa@w+1)^0,w,c
 14498  002094  E108               	bnz	u7810
 14499  002096  0438               	decf	dtoa@w^0,w,c
 14500  002098  A0D8               	btfss	status,0,c
 14501  00209A  EF51  F010         	goto	u7811
 14502  00209E  EF53  F010         	goto	u7810
 14503  0020A2                     u7811:
 14504  0020A2  EF5A  F010         	goto	l6561
 14505  0020A6                     u7810:
 14506  0020A6  B278               	btfsc	_flags^0,1,c
 14507  0020A8  EF58  F010         	goto	u7821
 14508  0020AC  EF5A  F010         	goto	u7820
 14509  0020B0                     u7821:
 14510  0020B0  EFA1  F00F         	goto	l6541
 14511  0020B4                     u7820:
 14512  0020B4                     l6561:
 14513                           
 14514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 14515  0020B4  503A               	movf	dtoa@s^0,w,c
 14516  0020B6  103B               	iorwf	(dtoa@s+1)^0,w,c
 14517  0020B8  A4D8               	btfss	status,2,c
 14518  0020BA  EF61  F010         	goto	u7831
 14519  0020BE  EF63  F010         	goto	u7830
 14520  0020C2                     u7831:
 14521  0020C2  EF6A  F010         	goto	l6565
 14522  0020C6                     u7830:
 14523  0020C6  A478               	btfss	_flags^0,2,c
 14524  0020C8  EF68  F010         	goto	u7841
 14525  0020CC  EF6A  F010         	goto	u7840
 14526  0020D0                     u7841:
 14527  0020D0  EF88  F010         	goto	l6575
 14528  0020D4                     u7840:
 14529  0020D4                     l6565:
 14530                           
 14531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 14532  0020D4  0644               	decf	dtoa@i^0,f,c
 14533  0020D6  A0D8               	btfss	status,0,c
 14534  0020D8  0645               	decf	(dtoa@i+1)^0,f,c
 14535  0020DA                     
 14536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 14537  0020DA  503A               	movf	dtoa@s^0,w,c
 14538  0020DC  103B               	iorwf	(dtoa@s+1)^0,w,c
 14539  0020DE  A4D8               	btfss	status,2,c
 14540  0020E0  EF74  F010         	goto	u7851
 14541  0020E4  EF76  F010         	goto	u7850
 14542  0020E8                     u7851:
 14543  0020E8  EF7C  F010         	goto	l6571
 14544  0020EC                     u7850:
 14545  0020EC  0E00               	movlw	0
 14546  0020EE  6E35               	movwf	(_dtoa$1753+1)^0,c
 14547  0020F0  0E2B               	movlw	43
 14548  0020F2  6E34               	movwf	_dtoa$1753^0,c
 14549  0020F4  EF80  F010         	goto	l6573
 14550  0020F8                     l6571:
 14551  0020F8  0E00               	movlw	0
 14552  0020FA  6E35               	movwf	(_dtoa$1753+1)^0,c
 14553  0020FC  0E2D               	movlw	45
 14554  0020FE  6E34               	movwf	_dtoa$1753^0,c
 14555  002100                     l6573:
 14556  002100  0EC1               	movlw	low _dbuf
 14557  002102  2444               	addwf	dtoa@i^0,w,c
 14558  002104  6ED9               	movwf	fsr2l,c
 14559  002106  0E01               	movlw	high _dbuf
 14560  002108  2045               	addwfc	(dtoa@i+1)^0,w,c
 14561  00210A  6EDA               	movwf	fsr2h,c
 14562  00210C  C034  FFDF         	movff	_dtoa$1753,indf2
 14563  002110                     l6575:
 14564                           
 14565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 14566  002110  C022  F017         	movff	dtoa@fp,pad@fp
 14567  002114  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 14568  002118  0EC1               	movlw	low _dbuf
 14569  00211A  2444               	addwf	dtoa@i^0,w,c
 14570  00211C  6E19               	movwf	pad@buf^0,c
 14571  00211E  0E01               	movlw	high _dbuf
 14572  002120  2045               	addwfc	(dtoa@i+1)^0,w,c
 14573  002122  6E1A               	movwf	(pad@buf+1)^0,c
 14574  002124  C038  F01B         	movff	dtoa@w,pad@p
 14575  002128  C039  F01C         	movff	dtoa@w+1,pad@p+1
 14576  00212C  EC9E  F026         	call	_pad	;wreg free
 14577  002130  C017  F022         	movff	?_pad,?_dtoa
 14578  002134  C018  F023         	movff	?_pad+1,?_dtoa+1
 14579  002138  0012               	return		;funcret
 14580  00213A                     __end_of_dtoa:
 14581                           	callstack 0
 14582                           
 14583 ;; *************** function _pad *****************
 14584 ;; Defined at:
 14585 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 14586 ;; Parameters:    Size  Location     Type
 14587 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 14588 ;;		 -> NULL(0), 
 14589 ;;  buf             2   24[COMRAM] PTR unsigned char 
 14590 ;;		 -> dbuf(32), 
 14591 ;;  p               2   26[COMRAM] int 
 14592 ;; Auto vars:     Size  Location     Type
 14593 ;;  w               2   31[COMRAM] int 
 14594 ;;  i               2   29[COMRAM] int 
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  2   22[COMRAM] int 
 14597 ;; Registers used:
 14598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14599 ;; Tracked objects:
 14600 ;;		On entry : 0/0
 14601 ;;		On exit  : 0/0
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14604 ;;      Params:         6       0       0       0       0       0       0
 14605 ;;      Locals:         4       0       0       0       0       0       0
 14606 ;;      Temps:          1       0       0       0       0       0       0
 14607 ;;      Totals:        11       0       0       0       0       0       0
 14608 ;;Total ram usage:       11 bytes
 14609 ;; Hardware stack levels used: 1
 14610 ;; Hardware stack levels required when called: 4
 14611 ;; This function calls:
 14612 ;;		_fputc
 14613 ;;		_fputs
 14614 ;;		_strlen
 14615 ;; This function is called by:
 14616 ;;		_dtoa
 14617 ;;		_utoa
 14618 ;;		_xtoa
 14619 ;; This function uses a non-reentrant model
 14620 ;;
 14621                           
 14622                           	psect	text52
 14623  004D3C                     __ptext52:
 14624                           	callstack 0
 14625  004D3C                     _pad:
 14626                           	callstack 21
 14627  004D3C                     
 14628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 14629  004D3C  A078               	btfss	_flags^0,0,c
 14630  004D3E  EFA3  F026         	goto	u7551
 14631  004D42  EFA5  F026         	goto	u7550
 14632  004D46                     u7551:
 14633  004D46  EFAF  F026         	goto	l6461
 14634  004D4A                     u7550:
 14635  004D4A                     
 14636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 14637  004D4A  C019  F010         	movff	pad@buf,fputs@s
 14638  004D4E  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14639  004D52  C017  F012         	movff	pad@fp,fputs@fp
 14640  004D56  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14641  004D5A  EC4D  F02A         	call	_fputs	;wreg free
 14642  004D5E                     l6461:
 14643                           
 14644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 14645  004D5E  BE1C               	btfsc	(pad@p+1)^0,7,c
 14646  004D60  EFB4  F026         	goto	u7561
 14647  004D64  EFB6  F026         	goto	u7560
 14648  004D68                     u7561:
 14649  004D68  EFBC  F026         	goto	l6465
 14650  004D6C                     u7560:
 14651  004D6C  C01B  F020         	movff	pad@p,pad@w
 14652  004D70  C01C  F021         	movff	pad@p+1,pad@w+1
 14653  004D74  EFC0  F026         	goto	l1362
 14654  004D78                     l6465:
 14655  004D78  0E00               	movlw	0
 14656  004D7A  6E21               	movwf	(pad@w+1)^0,c
 14657  004D7C  0E00               	movlw	0
 14658  004D7E  6E20               	movwf	pad@w^0,c
 14659  004D80                     l1362:
 14660                           
 14661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 14662  004D80  0E00               	movlw	0
 14663  004D82  6E1F               	movwf	(pad@i+1)^0,c
 14664  004D84  0E00               	movlw	0
 14665  004D86  6E1E               	movwf	pad@i^0,c
 14666                           
 14667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 14668  004D88  EFD2  F026         	goto	l6471
 14669  004D8C                     l6467:
 14670                           
 14671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 14672  004D8C  0E00               	movlw	0
 14673  004D8E  6E08               	movwf	(fputc@c+1)^0,c
 14674  004D90  0E20               	movlw	32
 14675  004D92  6E07               	movwf	fputc@c^0,c
 14676  004D94  C017  F009         	movff	pad@fp,fputc@fp
 14677  004D98  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 14678  004D9C  ECF5  F027         	call	_fputc	;wreg free
 14679  004DA0                     
 14680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 14681  004DA0  4A1E               	infsnz	pad@i^0,f,c
 14682  004DA2  2A1F               	incf	(pad@i+1)^0,f,c
 14683  004DA4                     l6471:
 14684                           
 14685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 14686  004DA4  5020               	movf	pad@w^0,w,c
 14687  004DA6  5C1E               	subwf	pad@i^0,w,c
 14688  004DA8  501F               	movf	(pad@i+1)^0,w,c
 14689  004DAA  0A80               	xorlw	128
 14690  004DAC  6E1D               	movwf	??_pad^0,c
 14691  004DAE  5021               	movf	(pad@w+1)^0,w,c
 14692  004DB0  0A80               	xorlw	128
 14693  004DB2  581D               	subwfb	??_pad^0,w,c
 14694  004DB4  A0D8               	btfss	status,0,c
 14695  004DB6  EFDF  F026         	goto	u7571
 14696  004DBA  EFE1  F026         	goto	u7570
 14697  004DBE                     u7571:
 14698  004DBE  EFC6  F026         	goto	l6467
 14699  004DC2                     u7570:
 14700  004DC2                     
 14701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 14702  004DC2  B078               	btfsc	_flags^0,0,c
 14703  004DC4  EFE6  F026         	goto	u7581
 14704  004DC8  EFE8  F026         	goto	u7580
 14705  004DCC                     u7581:
 14706  004DCC  EFF2  F026         	goto	l6475
 14707  004DD0                     u7580:
 14708  004DD0                     
 14709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 14710  004DD0  C019  F010         	movff	pad@buf,fputs@s
 14711  004DD4  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14712  004DD8  C017  F012         	movff	pad@fp,fputs@fp
 14713  004DDC  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14714  004DE0  EC4D  F02A         	call	_fputs	;wreg free
 14715  004DE4                     l6475:
 14716                           
 14717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 14718  004DE4  C019  F006         	movff	pad@buf,strlen@s
 14719  004DE8  C01A  F007         	movff	pad@buf+1,strlen@s+1
 14720  004DEC  EC26  F02A         	call	_strlen	;wreg free
 14721  004DF0  5020               	movf	pad@w^0,w,c
 14722  004DF2  2406               	addwf	?_strlen^0,w,c
 14723  004DF4  6E17               	movwf	?_pad^0,c
 14724  004DF6  5021               	movf	(pad@w+1)^0,w,c
 14725  004DF8  2007               	addwfc	(?_strlen+1)^0,w,c
 14726  004DFA  6E18               	movwf	(?_pad+1)^0,c
 14727  004DFC  0012               	return		;funcret
 14728  004DFE                     __end_of_pad:
 14729                           	callstack 0
 14730                           
 14731 ;; *************** function _strlen *****************
 14732 ;; Defined at:
 14733 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 14734 ;; Parameters:    Size  Location     Type
 14735 ;;  s               2    5[COMRAM] PTR const unsigned char 
 14736 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), main@fno(22), 
 14737 ;;		 -> put_rc@str(69), 
 14738 ;; Auto vars:     Size  Location     Type
 14739 ;;  a               2    7[COMRAM] PTR const unsigned char 
 14740 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), main@fno(22), 
 14741 ;;		 -> put_rc@str(69), 
 14742 ;; Return value:  Size  Location     Type
 14743 ;;                  2    5[COMRAM] unsigned int 
 14744 ;; Registers used:
 14745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 14746 ;; Tracked objects:
 14747 ;;		On entry : 0/0
 14748 ;;		On exit  : 0/0
 14749 ;;		Unchanged: 0/0
 14750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14751 ;;      Params:         2       0       0       0       0       0       0
 14752 ;;      Locals:         2       0       0       0       0       0       0
 14753 ;;      Temps:          0       0       0       0       0       0       0
 14754 ;;      Totals:         4       0       0       0       0       0       0
 14755 ;;Total ram usage:        4 bytes
 14756 ;; Hardware stack levels used: 1
 14757 ;; Hardware stack levels required when called: 1
 14758 ;; This function calls:
 14759 ;;		Nothing
 14760 ;; This function is called by:
 14761 ;;		_pad
 14762 ;;		_stoa
 14763 ;; This function uses a non-reentrant model
 14764 ;;
 14765                           
 14766                           	psect	text53
 14767  00544C                     __ptext53:
 14768                           	callstack 0
 14769  00544C                     _strlen:
 14770                           	callstack 23
 14771  00544C  C006  F008         	movff	strlen@s,strlen@a
 14772  005450  C007  F009         	movff	strlen@s+1,strlen@a+1
 14773  005454  EF2E  F02A         	goto	l6323
 14774  005458                     l6321:
 14775  005458  4A06               	infsnz	strlen@s^0,f,c
 14776  00545A  2A07               	incf	(strlen@s+1)^0,f,c
 14777  00545C                     l6323:
 14778  00545C  C006  FFF6         	movff	strlen@s,tblptrl
 14779  005460  C007  FFF7         	movff	strlen@s+1,tblptrh
 14780  005464  6AF8               	clrf	tblptru,c
 14781  005466  0E05               	movlw	(high __ramtop+-1)
 14782  005468  64F7               	cpfsgt	tblptrh,c
 14783  00546A  D003               	bra	u7317
 14784  00546C  0008               	tblrd		*
 14785  00546E  50F5               	movf	tablat,w,c
 14786  005470  D005               	bra	u7310
 14787  005472                     u7317:
 14788  005472  CFF6 FFE1          	movff	tblptrl,fsr1l
 14789  005476  CFF7 FFE2          	movff	tblptrh,fsr1h
 14790  00547A  50E7               	movf	indf1,w,c
 14791  00547C                     u7310:
 14792  00547C  0900               	iorlw	0
 14793  00547E  A4D8               	btfss	status,2,c
 14794  005480  EF44  F02A         	goto	u7321
 14795  005484  EF46  F02A         	goto	u7320
 14796  005488                     u7321:
 14797  005488  EF2C  F02A         	goto	l6321
 14798  00548C                     u7320:
 14799  00548C  5008               	movf	strlen@a^0,w,c
 14800  00548E  5C06               	subwf	strlen@s^0,w,c
 14801  005490  6E06               	movwf	?_strlen^0,c
 14802  005492  5009               	movf	(strlen@a+1)^0,w,c
 14803  005494  5807               	subwfb	(strlen@s+1)^0,w,c
 14804  005496  6E07               	movwf	(?_strlen+1)^0,c
 14805  005498  0012               	return		;funcret
 14806  00549A                     __end_of_strlen:
 14807                           	callstack 0
 14808                           
 14809 ;; *************** function _fputs *****************
 14810 ;; Defined at:
 14811 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 14812 ;; Parameters:    Size  Location     Type
 14813 ;;  s               2   15[COMRAM] PTR const unsigned char 
 14814 ;;		 -> dbuf(32), 
 14815 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 14816 ;;		 -> NULL(0), 
 14817 ;; Auto vars:     Size  Location     Type
 14818 ;;  i               2   20[COMRAM] int 
 14819 ;;  c               1   19[COMRAM] unsigned char 
 14820 ;; Return value:  Size  Location     Type
 14821 ;;                  2   15[COMRAM] int 
 14822 ;; Registers used:
 14823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14824 ;; Tracked objects:
 14825 ;;		On entry : 0/0
 14826 ;;		On exit  : 0/0
 14827 ;;		Unchanged: 0/0
 14828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14829 ;;      Params:         4       0       0       0       0       0       0
 14830 ;;      Locals:         3       0       0       0       0       0       0
 14831 ;;      Temps:          0       0       0       0       0       0       0
 14832 ;;      Totals:         7       0       0       0       0       0       0
 14833 ;;Total ram usage:        7 bytes
 14834 ;; Hardware stack levels used: 1
 14835 ;; Hardware stack levels required when called: 3
 14836 ;; This function calls:
 14837 ;;		_fputc
 14838 ;; This function is called by:
 14839 ;;		_pad
 14840 ;; This function uses a non-reentrant model
 14841 ;;
 14842                           
 14843                           	psect	text54
 14844  00549A                     __ptext54:
 14845                           	callstack 0
 14846  00549A                     _fputs:
 14847                           	callstack 21
 14848  00549A  0E00               	movlw	0
 14849  00549C  6E16               	movwf	(fputs@i+1)^0,c
 14850  00549E  0E00               	movlw	0
 14851  0054A0  6E15               	movwf	fputs@i^0,c
 14852  0054A2  EF5E  F02A         	goto	l6317
 14853  0054A6                     l6313:
 14854  0054A6  C014  F007         	movff	fputs@c,fputc@c
 14855  0054AA  6A08               	clrf	(fputc@c+1)^0,c
 14856  0054AC  C012  F009         	movff	fputs@fp,fputc@fp
 14857  0054B0  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 14858  0054B4  ECF5  F027         	call	_fputc	;wreg free
 14859  0054B8  4A15               	infsnz	fputs@i^0,f,c
 14860  0054BA  2A16               	incf	(fputs@i+1)^0,f,c
 14861  0054BC                     l6317:
 14862  0054BC  5015               	movf	fputs@i^0,w,c
 14863  0054BE  2410               	addwf	fputs@s^0,w,c
 14864  0054C0  6ED9               	movwf	fsr2l,c
 14865  0054C2  5016               	movf	(fputs@i+1)^0,w,c
 14866  0054C4  2011               	addwfc	(fputs@s+1)^0,w,c
 14867  0054C6  6EDA               	movwf	fsr2h,c
 14868  0054C8  50DF               	movf	indf2,w,c
 14869  0054CA  6E14               	movwf	fputs@c^0,c
 14870  0054CC  5014               	movf	fputs@c^0,w,c
 14871  0054CE  A4D8               	btfss	status,2,c
 14872  0054D0  EF6C  F02A         	goto	u7301
 14873  0054D4  EF6E  F02A         	goto	u7300
 14874  0054D8                     u7301:
 14875  0054D8  EF53  F02A         	goto	l6313
 14876  0054DC                     u7300:
 14877  0054DC  0012               	return		;funcret
 14878  0054DE                     __end_of_fputs:
 14879                           	callstack 0
 14880                           
 14881 ;; *************** function _fputc *****************
 14882 ;; Defined at:
 14883 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 14884 ;; Parameters:    Size  Location     Type
 14885 ;;  c               2    6[COMRAM] int 
 14886 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 14887 ;;		 -> NULL(0), 
 14888 ;; Auto vars:     Size  Location     Type
 14889 ;;		None
 14890 ;; Return value:  Size  Location     Type
 14891 ;;                  2    6[COMRAM] int 
 14892 ;; Registers used:
 14893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14894 ;; Tracked objects:
 14895 ;;		On entry : 0/0
 14896 ;;		On exit  : 0/0
 14897 ;;		Unchanged: 0/0
 14898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14899 ;;      Params:         4       0       0       0       0       0       0
 14900 ;;      Locals:         0       0       0       0       0       0       0
 14901 ;;      Temps:          5       0       0       0       0       0       0
 14902 ;;      Totals:         9       0       0       0       0       0       0
 14903 ;;Total ram usage:        9 bytes
 14904 ;; Hardware stack levels used: 1
 14905 ;; Hardware stack levels required when called: 2
 14906 ;; This function calls:
 14907 ;;		_putch
 14908 ;; This function is called by:
 14909 ;;		_pad
 14910 ;;		_stoa
 14911 ;;		_vfpfcnvrt
 14912 ;;		_fputs
 14913 ;; This function uses a non-reentrant model
 14914 ;;
 14915                           
 14916                           	psect	text55
 14917  004FEA                     __ptext55:
 14918                           	callstack 0
 14919  004FEA                     _fputc:
 14920                           	callstack 21
 14921  004FEA  5009               	movf	fputc@fp^0,w,c
 14922  004FEC  100A               	iorwf	(fputc@fp+1)^0,w,c
 14923  004FEE  B4D8               	btfsc	status,2,c
 14924  004FF0  EFFC  F027         	goto	u7261
 14925  004FF4  EFFE  F027         	goto	u7260
 14926  004FF8                     u7261:
 14927  004FF8  EF07  F028         	goto	l6301
 14928  004FFC                     u7260:
 14929  004FFC  5009               	movf	fputc@fp^0,w,c
 14930  004FFE  100A               	iorwf	(fputc@fp+1)^0,w,c
 14931  005000  A4D8               	btfss	status,2,c
 14932  005002  EF05  F028         	goto	u7271
 14933  005006  EF07  F028         	goto	u7270
 14934  00500A                     u7271:
 14935  00500A  EF0C  F028         	goto	l6303
 14936  00500E                     u7270:
 14937  00500E                     l6301:
 14938  00500E  5007               	movf	fputc@c^0,w,c
 14939  005010  EC88  F02B         	call	_putch
 14940  005014  EF3F  F028         	goto	l1573
 14941  005018                     l6303:
 14942  005018  EE20 F004          	lfsr	2,4
 14943  00501C  5009               	movf	fputc@fp^0,w,c
 14944  00501E  26D9               	addwf	fsr2l,f,c
 14945  005020  500A               	movf	(fputc@fp+1)^0,w,c
 14946  005022  22DA               	addwfc	fsr2h,f,c
 14947  005024  50DE               	movf	postinc2,w,c
 14948  005026  10DE               	iorwf	postinc2,w,c
 14949  005028  B4D8               	btfsc	status,2,c
 14950  00502A  EF19  F028         	goto	u7281
 14951  00502E  EF1B  F028         	goto	u7280
 14952  005032                     u7281:
 14953  005032  EF36  F028         	goto	l6307
 14954  005036                     u7280:
 14955  005036  EE20 F004          	lfsr	2,4
 14956  00503A  5009               	movf	fputc@fp^0,w,c
 14957  00503C  26D9               	addwf	fsr2l,f,c
 14958  00503E  500A               	movf	(fputc@fp+1)^0,w,c
 14959  005040  22DA               	addwfc	fsr2h,f,c
 14960  005042  EE10 F002          	lfsr	1,2
 14961  005046  5009               	movf	fputc@fp^0,w,c
 14962  005048  26E1               	addwf	fsr1l,f,c
 14963  00504A  500A               	movf	(fputc@fp+1)^0,w,c
 14964  00504C  22E2               	addwfc	fsr1h,f,c
 14965  00504E  50DE               	movf	postinc2,w,c
 14966  005050  5CE6               	subwf	postinc1,w,c
 14967  005052  50E6               	movf	postinc1,w,c
 14968  005054  0A80               	xorlw	128
 14969  005056  6E0F               	movwf	(??_fputc+4)^0,c
 14970  005058  50DE               	movf	postinc2,w,c
 14971  00505A  0A80               	xorlw	128
 14972  00505C  580F               	subwfb	(??_fputc+4)^0,w,c
 14973  00505E  B0D8               	btfsc	status,0,c
 14974  005060  EF34  F028         	goto	u7291
 14975  005064  EF36  F028         	goto	u7290
 14976  005068                     u7291:
 14977  005068  EF3F  F028         	goto	l1573
 14978  00506C                     u7290:
 14979  00506C                     l6307:
 14980  00506C  EE20 F002          	lfsr	2,2
 14981  005070  5009               	movf	fputc@fp^0,w,c
 14982  005072  26D9               	addwf	fsr2l,f,c
 14983  005074  500A               	movf	(fputc@fp+1)^0,w,c
 14984  005076  22DA               	addwfc	fsr2h,f,c
 14985  005078  2ADE               	incf	postinc2,f,c
 14986  00507A  0E00               	movlw	0
 14987  00507C  22DD               	addwfc	postdec2,f,c
 14988  00507E                     l1573:
 14989  00507E  0012               	return		;funcret
 14990  005080                     __end_of_fputc:
 14991                           	callstack 0
 14992                           
 14993 ;; *************** function _putch *****************
 14994 ;; Defined at:
 14995 ;;		line 140 in file "uart.c"
 14996 ;; Parameters:    Size  Location     Type
 14997 ;;  byte            1    wreg     unsigned char 
 14998 ;; Auto vars:     Size  Location     Type
 14999 ;;  byte            1    5[COMRAM] unsigned char 
 15000 ;; Return value:  Size  Location     Type
 15001 ;;                  1    wreg      void 
 15002 ;; Registers used:
 15003 ;;		wreg
 15004 ;; Tracked objects:
 15005 ;;		On entry : 0/0
 15006 ;;		On exit  : 0/0
 15007 ;;		Unchanged: 0/0
 15008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15009 ;;      Params:         0       0       0       0       0       0       0
 15010 ;;      Locals:         1       0       0       0       0       0       0
 15011 ;;      Temps:          0       0       0       0       0       0       0
 15012 ;;      Totals:         1       0       0       0       0       0       0
 15013 ;;Total ram usage:        1 bytes
 15014 ;; Hardware stack levels used: 1
 15015 ;; Hardware stack levels required when called: 1
 15016 ;; This function calls:
 15017 ;;		Nothing
 15018 ;; This function is called by:
 15019 ;;		_fputc
 15020 ;; This function uses a non-reentrant model
 15021 ;;
 15022                           
 15023                           	psect	text56
 15024  005710                     __ptext56:
 15025                           	callstack 0
 15026  005710                     _putch:
 15027                           	callstack 21
 15028                           
 15029                           ;incstack = 0
 15030                           ;putch@byte stored from wreg
 15031  005710  6E06               	movwf	putch@byte^0,c
 15032  005712                     l464:
 15033  005712  A89E               	btfss	3998,4,c	;volatile
 15034  005714  EF8E  F02B         	goto	u7251
 15035  005718  EF90  F02B         	goto	u7250
 15036  00571C                     u7251:
 15037  00571C  EF89  F02B         	goto	l464
 15038  005720                     u7250:
 15039  005720                     
 15040                           ;uart.c: 144:     TXREG = byte;
 15041  005720  C006  FFAD         	movff	putch@byte,4013	;volatile
 15042  005724  0012               	return		;funcret
 15043  005726                     __end_of_putch:
 15044                           	callstack 0
 15045                           
 15046 ;; *************** function _abs *****************
 15047 ;; Defined at:
 15048 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 15049 ;; Parameters:    Size  Location     Type
 15050 ;;  a               2   23[COMRAM] int 
 15051 ;; Auto vars:     Size  Location     Type
 15052 ;;		None
 15053 ;; Return value:  Size  Location     Type
 15054 ;;                  2   23[COMRAM] int 
 15055 ;; Registers used:
 15056 ;;		wreg, status,2, status,0
 15057 ;; Tracked objects:
 15058 ;;		On entry : 0/0
 15059 ;;		On exit  : 0/0
 15060 ;;		Unchanged: 0/0
 15061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15062 ;;      Params:         2       0       0       0       0       0       0
 15063 ;;      Locals:         0       0       0       0       0       0       0
 15064 ;;      Temps:          2       0       0       0       0       0       0
 15065 ;;      Totals:         4       0       0       0       0       0       0
 15066 ;;Total ram usage:        4 bytes
 15067 ;; Hardware stack levels used: 1
 15068 ;; Hardware stack levels required when called: 1
 15069 ;; This function calls:
 15070 ;;		Nothing
 15071 ;; This function is called by:
 15072 ;;		_dtoa
 15073 ;; This function uses a non-reentrant model
 15074 ;;
 15075                           
 15076                           	psect	text57
 15077  0054DE                     __ptext57:
 15078                           	callstack 0
 15079  0054DE                     _abs:
 15080                           	callstack 24
 15081  0054DE  BE19               	btfsc	(abs@a+1)^0,7,c
 15082  0054E0  EF7C  F02A         	goto	u7590
 15083  0054E4  5019               	movf	(abs@a+1)^0,w,c
 15084  0054E6  E106               	bnz	u7591
 15085  0054E8  0418               	decf	abs@a^0,w,c
 15086  0054EA  B0D8               	btfsc	status,0,c
 15087  0054EC  EF7A  F02A         	goto	u7591
 15088  0054F0  EF7C  F02A         	goto	u7590
 15089  0054F4                     u7591:
 15090  0054F4  EF8A  F02A         	goto	l1501
 15091  0054F8                     u7590:
 15092  0054F8  C018  F01A         	movff	abs@a,??_abs
 15093  0054FC  C019  F01B         	movff	abs@a+1,??_abs+1
 15094  005500  1E1A               	comf	??_abs^0,f,c
 15095  005502  1E1B               	comf	(??_abs+1)^0,f,c
 15096  005504  4A1A               	infsnz	??_abs^0,f,c
 15097  005506  2A1B               	incf	(??_abs+1)^0,f,c
 15098  005508  C01A  F018         	movff	??_abs,?_abs
 15099  00550C  C01B  F019         	movff	??_abs+1,?_abs+1
 15100  005510  EF8E  F02A         	goto	l1504
 15101  005514                     l1501:
 15102  005514  C018  F018         	movff	abs@a,?_abs
 15103  005518  C019  F019         	movff	abs@a+1,?_abs+1
 15104  00551C                     l1504:
 15105  00551C  0012               	return		;funcret
 15106  00551E                     __end_of_abs:
 15107                           	callstack 0
 15108                           
 15109 ;; *************** function ___aomod *****************
 15110 ;; Defined at:
 15111 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 15112 ;; Parameters:    Size  Location     Type
 15113 ;;  dividend        8    5[COMRAM] long long 
 15114 ;;  divisor         8   13[COMRAM] long long 
 15115 ;; Auto vars:     Size  Location     Type
 15116 ;;  sign            1   22[COMRAM] unsigned char 
 15117 ;;  counter         1   21[COMRAM] unsigned char 
 15118 ;; Return value:  Size  Location     Type
 15119 ;;                  8    5[COMRAM] long long 
 15120 ;; Registers used:
 15121 ;;		wreg, status,2, status,0
 15122 ;; Tracked objects:
 15123 ;;		On entry : 0/0
 15124 ;;		On exit  : 0/0
 15125 ;;		Unchanged: 0/0
 15126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15127 ;;      Params:        16       0       0       0       0       0       0
 15128 ;;      Locals:         2       0       0       0       0       0       0
 15129 ;;      Temps:          0       0       0       0       0       0       0
 15130 ;;      Totals:        18       0       0       0       0       0       0
 15131 ;;Total ram usage:       18 bytes
 15132 ;; Hardware stack levels used: 1
 15133 ;; Hardware stack levels required when called: 1
 15134 ;; This function calls:
 15135 ;;		Nothing
 15136 ;; This function is called by:
 15137 ;;		_dtoa
 15138 ;; This function uses a non-reentrant model
 15139 ;;
 15140                           
 15141                           	psect	text58
 15142  004136                     __ptext58:
 15143                           	callstack 0
 15144  004136                     ___aomod:
 15145                           	callstack 24
 15146  004136  0E00               	movlw	0
 15147  004138  6E17               	movwf	___aomod@sign^0,c
 15148  00413A  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
 15149  00413C  EFA4  F020         	goto	u7420
 15150  004140  EFA2  F020         	goto	u7421
 15151  004144                     u7421:
 15152  004144  EFB6  F020         	goto	l6391
 15153  004148                     u7420:
 15154  004148  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 15155  00414A  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 15156  00414C  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 15157  00414E  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 15158  004150  1E09               	comf	(___aomod@dividend+3)^0,f,c
 15159  004152  1E08               	comf	(___aomod@dividend+2)^0,f,c
 15160  004154  1E07               	comf	(___aomod@dividend+1)^0,f,c
 15161  004156  6C06               	negf	___aomod@dividend^0,c
 15162  004158  0E00               	movlw	0
 15163  00415A  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 15164  00415C  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 15165  00415E  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 15166  004160  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 15167  004162  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 15168  004164  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 15169  004166  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 15170  004168  0E01               	movlw	1
 15171  00416A  6E17               	movwf	___aomod@sign^0,c
 15172  00416C                     l6391:
 15173  00416C  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
 15174  00416E  EFBD  F020         	goto	u7430
 15175  004172  EFBB  F020         	goto	u7431
 15176  004176                     u7431:
 15177  004176  EFCD  F020         	goto	l6395
 15178  00417A                     u7430:
 15179  00417A  1E15               	comf	(___aomod@divisor+7)^0,f,c
 15180  00417C  1E14               	comf	(___aomod@divisor+6)^0,f,c
 15181  00417E  1E13               	comf	(___aomod@divisor+5)^0,f,c
 15182  004180  1E12               	comf	(___aomod@divisor+4)^0,f,c
 15183  004182  1E11               	comf	(___aomod@divisor+3)^0,f,c
 15184  004184  1E10               	comf	(___aomod@divisor+2)^0,f,c
 15185  004186  1E0F               	comf	(___aomod@divisor+1)^0,f,c
 15186  004188  6C0E               	negf	___aomod@divisor^0,c
 15187  00418A  0E00               	movlw	0
 15188  00418C  220F               	addwfc	(___aomod@divisor+1)^0,f,c
 15189  00418E  2210               	addwfc	(___aomod@divisor+2)^0,f,c
 15190  004190  2211               	addwfc	(___aomod@divisor+3)^0,f,c
 15191  004192  2212               	addwfc	(___aomod@divisor+4)^0,f,c
 15192  004194  2213               	addwfc	(___aomod@divisor+5)^0,f,c
 15193  004196  2214               	addwfc	(___aomod@divisor+6)^0,f,c
 15194  004198  2215               	addwfc	(___aomod@divisor+7)^0,f,c
 15195  00419A                     l6395:
 15196  00419A  500E               	movf	___aomod@divisor^0,w,c
 15197  00419C  100F               	iorwf	(___aomod@divisor+1)^0,w,c
 15198  00419E  1010               	iorwf	(___aomod@divisor+2)^0,w,c
 15199  0041A0  1011               	iorwf	(___aomod@divisor+3)^0,w,c
 15200  0041A2  1012               	iorwf	(___aomod@divisor+4)^0,w,c
 15201  0041A4  1013               	iorwf	(___aomod@divisor+5)^0,w,c
 15202  0041A6  1014               	iorwf	(___aomod@divisor+6)^0,w,c
 15203  0041A8  1015               	iorwf	(___aomod@divisor+7)^0,w,c
 15204  0041AA  B4D8               	btfsc	status,2,c
 15205  0041AC  EFDA  F020         	goto	u7441
 15206  0041B0  EFDC  F020         	goto	u7440
 15207  0041B4                     u7441:
 15208  0041B4  EF24  F021         	goto	l6411
 15209  0041B8                     u7440:
 15210  0041B8  0E01               	movlw	1
 15211  0041BA  6E16               	movwf	___aomod@counter^0,c
 15212  0041BC  EFEA  F020         	goto	l6401
 15213  0041C0                     l6399:
 15214  0041C0  90D8               	bcf	status,0,c
 15215  0041C2  360E               	rlcf	___aomod@divisor^0,f,c
 15216  0041C4  360F               	rlcf	(___aomod@divisor+1)^0,f,c
 15217  0041C6  3610               	rlcf	(___aomod@divisor+2)^0,f,c
 15218  0041C8  3611               	rlcf	(___aomod@divisor+3)^0,f,c
 15219  0041CA  3612               	rlcf	(___aomod@divisor+4)^0,f,c
 15220  0041CC  3613               	rlcf	(___aomod@divisor+5)^0,f,c
 15221  0041CE  3614               	rlcf	(___aomod@divisor+6)^0,f,c
 15222  0041D0  3615               	rlcf	(___aomod@divisor+7)^0,f,c
 15223  0041D2  2A16               	incf	___aomod@counter^0,f,c
 15224  0041D4                     l6401:
 15225  0041D4  AE15               	btfss	(___aomod@divisor+7)^0,7,c
 15226  0041D6  EFEF  F020         	goto	u7451
 15227  0041DA  EFF1  F020         	goto	u7450
 15228  0041DE                     u7451:
 15229  0041DE  EFE0  F020         	goto	l6399
 15230  0041E2                     u7450:
 15231  0041E2                     l6403:
 15232  0041E2  500E               	movf	___aomod@divisor^0,w,c
 15233  0041E4  5C06               	subwf	___aomod@dividend^0,w,c
 15234  0041E6  500F               	movf	(___aomod@divisor+1)^0,w,c
 15235  0041E8  5807               	subwfb	(___aomod@dividend+1)^0,w,c
 15236  0041EA  5010               	movf	(___aomod@divisor+2)^0,w,c
 15237  0041EC  5808               	subwfb	(___aomod@dividend+2)^0,w,c
 15238  0041EE  5011               	movf	(___aomod@divisor+3)^0,w,c
 15239  0041F0  5809               	subwfb	(___aomod@dividend+3)^0,w,c
 15240  0041F2  5012               	movf	(___aomod@divisor+4)^0,w,c
 15241  0041F4  580A               	subwfb	(___aomod@dividend+4)^0,w,c
 15242  0041F6  5013               	movf	(___aomod@divisor+5)^0,w,c
 15243  0041F8  580B               	subwfb	(___aomod@dividend+5)^0,w,c
 15244  0041FA  5014               	movf	(___aomod@divisor+6)^0,w,c
 15245  0041FC  580C               	subwfb	(___aomod@dividend+6)^0,w,c
 15246  0041FE  5015               	movf	(___aomod@divisor+7)^0,w,c
 15247  004200  580D               	subwfb	(___aomod@dividend+7)^0,w,c
 15248  004202  A0D8               	btfss	status,0,c
 15249  004204  EF06  F021         	goto	u7461
 15250  004208  EF08  F021         	goto	u7460
 15251  00420C                     u7461:
 15252  00420C  EF18  F021         	goto	l6407
 15253  004210                     u7460:
 15254  004210  500E               	movf	___aomod@divisor^0,w,c
 15255  004212  5E06               	subwf	___aomod@dividend^0,f,c
 15256  004214  500F               	movf	(___aomod@divisor+1)^0,w,c
 15257  004216  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
 15258  004218  5010               	movf	(___aomod@divisor+2)^0,w,c
 15259  00421A  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
 15260  00421C  5011               	movf	(___aomod@divisor+3)^0,w,c
 15261  00421E  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
 15262  004220  5012               	movf	(___aomod@divisor+4)^0,w,c
 15263  004222  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
 15264  004224  5013               	movf	(___aomod@divisor+5)^0,w,c
 15265  004226  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
 15266  004228  5014               	movf	(___aomod@divisor+6)^0,w,c
 15267  00422A  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
 15268  00422C  5015               	movf	(___aomod@divisor+7)^0,w,c
 15269  00422E  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
 15270  004230                     l6407:
 15271  004230  90D8               	bcf	status,0,c
 15272  004232  3215               	rrcf	(___aomod@divisor+7)^0,f,c
 15273  004234  3214               	rrcf	(___aomod@divisor+6)^0,f,c
 15274  004236  3213               	rrcf	(___aomod@divisor+5)^0,f,c
 15275  004238  3212               	rrcf	(___aomod@divisor+4)^0,f,c
 15276  00423A  3211               	rrcf	(___aomod@divisor+3)^0,f,c
 15277  00423C  3210               	rrcf	(___aomod@divisor+2)^0,f,c
 15278  00423E  320F               	rrcf	(___aomod@divisor+1)^0,f,c
 15279  004240  320E               	rrcf	___aomod@divisor^0,f,c
 15280  004242  2E16               	decfsz	___aomod@counter^0,f,c
 15281  004244  EFF1  F020         	goto	l6403
 15282  004248                     l6411:
 15283  004248  5017               	movf	___aomod@sign^0,w,c
 15284  00424A  B4D8               	btfsc	status,2,c
 15285  00424C  EF2A  F021         	goto	u7471
 15286  004250  EF2C  F021         	goto	u7470
 15287  004254                     u7471:
 15288  004254  EF3C  F021         	goto	l6415
 15289  004258                     u7470:
 15290  004258  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 15291  00425A  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 15292  00425C  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 15293  00425E  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 15294  004260  1E09               	comf	(___aomod@dividend+3)^0,f,c
 15295  004262  1E08               	comf	(___aomod@dividend+2)^0,f,c
 15296  004264  1E07               	comf	(___aomod@dividend+1)^0,f,c
 15297  004266  6C06               	negf	___aomod@dividend^0,c
 15298  004268  0E00               	movlw	0
 15299  00426A  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 15300  00426C  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 15301  00426E  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 15302  004270  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 15303  004272  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 15304  004274  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 15305  004276  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 15306  004278                     l6415:
 15307  004278  C006  F006         	movff	___aomod@dividend,?___aomod
 15308  00427C  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 15309  004280  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 15310  004284  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 15311  004288  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 15312  00428C  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 15313  004290  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 15314  004294  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 15315  004298  0012               	return		;funcret
 15316  00429A                     __end_of___aomod:
 15317                           	callstack 0
 15318                           
 15319 ;; *************** function ___aodiv *****************
 15320 ;; Defined at:
 15321 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 15322 ;; Parameters:    Size  Location     Type
 15323 ;;  dividend        8    5[COMRAM] long long 
 15324 ;;  divisor         8   13[COMRAM] long long 
 15325 ;; Auto vars:     Size  Location     Type
 15326 ;;  quotient        8   23[COMRAM] long long 
 15327 ;;  sign            1   22[COMRAM] unsigned char 
 15328 ;;  counter         1   21[COMRAM] unsigned char 
 15329 ;; Return value:  Size  Location     Type
 15330 ;;                  8    5[COMRAM] long long 
 15331 ;; Registers used:
 15332 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15333 ;; Tracked objects:
 15334 ;;		On entry : 0/0
 15335 ;;		On exit  : 0/0
 15336 ;;		Unchanged: 0/0
 15337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15338 ;;      Params:        16       0       0       0       0       0       0
 15339 ;;      Locals:        10       0       0       0       0       0       0
 15340 ;;      Temps:          0       0       0       0       0       0       0
 15341 ;;      Totals:        26       0       0       0       0       0       0
 15342 ;;Total ram usage:       26 bytes
 15343 ;; Hardware stack levels used: 1
 15344 ;; Hardware stack levels required when called: 1
 15345 ;; This function calls:
 15346 ;;		Nothing
 15347 ;; This function is called by:
 15348 ;;		_dtoa
 15349 ;; This function uses a non-reentrant model
 15350 ;;
 15351                           
 15352                           	psect	text59
 15353  0039EA                     __ptext59:
 15354                           	callstack 0
 15355  0039EA                     ___aodiv:
 15356                           	callstack 24
 15357  0039EA  0E00               	movlw	0
 15358  0039EC  6E17               	movwf	___aodiv@sign^0,c
 15359  0039EE  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
 15360  0039F0  EFFE  F01C         	goto	u7350
 15361  0039F4  EFFC  F01C         	goto	u7351
 15362  0039F8                     u7351:
 15363  0039F8  EF10  F01D         	goto	l6347
 15364  0039FC                     u7350:
 15365  0039FC  1E15               	comf	(___aodiv@divisor+7)^0,f,c
 15366  0039FE  1E14               	comf	(___aodiv@divisor+6)^0,f,c
 15367  003A00  1E13               	comf	(___aodiv@divisor+5)^0,f,c
 15368  003A02  1E12               	comf	(___aodiv@divisor+4)^0,f,c
 15369  003A04  1E11               	comf	(___aodiv@divisor+3)^0,f,c
 15370  003A06  1E10               	comf	(___aodiv@divisor+2)^0,f,c
 15371  003A08  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
 15372  003A0A  6C0E               	negf	___aodiv@divisor^0,c
 15373  003A0C  0E00               	movlw	0
 15374  003A0E  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
 15375  003A10  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
 15376  003A12  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
 15377  003A14  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
 15378  003A16  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
 15379  003A18  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
 15380  003A1A  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
 15381  003A1C  0E01               	movlw	1
 15382  003A1E  6E17               	movwf	___aodiv@sign^0,c
 15383  003A20                     l6347:
 15384  003A20  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
 15385  003A22  EF17  F01D         	goto	u7360
 15386  003A26  EF15  F01D         	goto	u7361
 15387  003A2A                     u7361:
 15388  003A2A  EF29  F01D         	goto	l6353
 15389  003A2E                     u7360:
 15390  003A2E  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
 15391  003A30  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
 15392  003A32  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
 15393  003A34  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
 15394  003A36  1E09               	comf	(___aodiv@dividend+3)^0,f,c
 15395  003A38  1E08               	comf	(___aodiv@dividend+2)^0,f,c
 15396  003A3A  1E07               	comf	(___aodiv@dividend+1)^0,f,c
 15397  003A3C  6C06               	negf	___aodiv@dividend^0,c
 15398  003A3E  0E00               	movlw	0
 15399  003A40  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
 15400  003A42  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
 15401  003A44  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
 15402  003A46  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
 15403  003A48  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
 15404  003A4A  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
 15405  003A4C  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
 15406  003A4E  0E01               	movlw	1
 15407  003A50  1A17               	xorwf	___aodiv@sign^0,f,c
 15408  003A52                     l6353:
 15409  003A52  EE20  F018         	lfsr	2,___aodiv@quotient
 15410  003A56  0E07               	movlw	7
 15411  003A58                     u7371:
 15412  003A58  6ADE               	clrf	postinc2,c
 15413  003A5A  06E8               	decf	wreg,f,c
 15414  003A5C  E2FD               	bc	u7371
 15415  003A5E  500E               	movf	___aodiv@divisor^0,w,c
 15416  003A60  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
 15417  003A62  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
 15418  003A64  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
 15419  003A66  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
 15420  003A68  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
 15421  003A6A  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
 15422  003A6C  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
 15423  003A6E  B4D8               	btfsc	status,2,c
 15424  003A70  EF3C  F01D         	goto	u7381
 15425  003A74  EF3E  F01D         	goto	u7380
 15426  003A78                     u7381:
 15427  003A78  EF90  F01D         	goto	l6375
 15428  003A7C                     u7380:
 15429  003A7C  0E01               	movlw	1
 15430  003A7E  6E16               	movwf	___aodiv@counter^0,c
 15431  003A80  EF4C  F01D         	goto	l6361
 15432  003A84                     l6359:
 15433  003A84  90D8               	bcf	status,0,c
 15434  003A86  360E               	rlcf	___aodiv@divisor^0,f,c
 15435  003A88  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
 15436  003A8A  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
 15437  003A8C  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
 15438  003A8E  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
 15439  003A90  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
 15440  003A92  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
 15441  003A94  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
 15442  003A96  2A16               	incf	___aodiv@counter^0,f,c
 15443  003A98                     l6361:
 15444  003A98  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
 15445  003A9A  EF51  F01D         	goto	u7391
 15446  003A9E  EF53  F01D         	goto	u7390
 15447  003AA2                     u7391:
 15448  003AA2  EF42  F01D         	goto	l6359
 15449  003AA6                     u7390:
 15450  003AA6                     l6363:
 15451  003AA6  90D8               	bcf	status,0,c
 15452  003AA8  3618               	rlcf	___aodiv@quotient^0,f,c
 15453  003AAA  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
 15454  003AAC  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
 15455  003AAE  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
 15456  003AB0  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
 15457  003AB2  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
 15458  003AB4  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
 15459  003AB6  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
 15460  003AB8  500E               	movf	___aodiv@divisor^0,w,c
 15461  003ABA  5C06               	subwf	___aodiv@dividend^0,w,c
 15462  003ABC  500F               	movf	(___aodiv@divisor+1)^0,w,c
 15463  003ABE  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
 15464  003AC0  5010               	movf	(___aodiv@divisor+2)^0,w,c
 15465  003AC2  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
 15466  003AC4  5011               	movf	(___aodiv@divisor+3)^0,w,c
 15467  003AC6  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
 15468  003AC8  5012               	movf	(___aodiv@divisor+4)^0,w,c
 15469  003ACA  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
 15470  003ACC  5013               	movf	(___aodiv@divisor+5)^0,w,c
 15471  003ACE  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
 15472  003AD0  5014               	movf	(___aodiv@divisor+6)^0,w,c
 15473  003AD2  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
 15474  003AD4  5015               	movf	(___aodiv@divisor+7)^0,w,c
 15475  003AD6  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
 15476  003AD8  A0D8               	btfss	status,0,c
 15477  003ADA  EF71  F01D         	goto	u7401
 15478  003ADE  EF73  F01D         	goto	u7400
 15479  003AE2                     u7401:
 15480  003AE2  EF84  F01D         	goto	l6371
 15481  003AE6                     u7400:
 15482  003AE6  500E               	movf	___aodiv@divisor^0,w,c
 15483  003AE8  5E06               	subwf	___aodiv@dividend^0,f,c
 15484  003AEA  500F               	movf	(___aodiv@divisor+1)^0,w,c
 15485  003AEC  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
 15486  003AEE  5010               	movf	(___aodiv@divisor+2)^0,w,c
 15487  003AF0  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
 15488  003AF2  5011               	movf	(___aodiv@divisor+3)^0,w,c
 15489  003AF4  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
 15490  003AF6  5012               	movf	(___aodiv@divisor+4)^0,w,c
 15491  003AF8  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
 15492  003AFA  5013               	movf	(___aodiv@divisor+5)^0,w,c
 15493  003AFC  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
 15494  003AFE  5014               	movf	(___aodiv@divisor+6)^0,w,c
 15495  003B00  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
 15496  003B02  5015               	movf	(___aodiv@divisor+7)^0,w,c
 15497  003B04  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
 15498  003B06  8018               	bsf	___aodiv@quotient^0,0,c
 15499  003B08                     l6371:
 15500  003B08  90D8               	bcf	status,0,c
 15501  003B0A  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
 15502  003B0C  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
 15503  003B0E  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
 15504  003B10  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
 15505  003B12  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
 15506  003B14  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
 15507  003B16  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
 15508  003B18  320E               	rrcf	___aodiv@divisor^0,f,c
 15509  003B1A  2E16               	decfsz	___aodiv@counter^0,f,c
 15510  003B1C  EF53  F01D         	goto	l6363
 15511  003B20                     l6375:
 15512  003B20  5017               	movf	___aodiv@sign^0,w,c
 15513  003B22  B4D8               	btfsc	status,2,c
 15514  003B24  EF96  F01D         	goto	u7411
 15515  003B28  EF98  F01D         	goto	u7410
 15516  003B2C                     u7411:
 15517  003B2C  EFA8  F01D         	goto	l6379
 15518  003B30                     u7410:
 15519  003B30  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
 15520  003B32  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
 15521  003B34  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
 15522  003B36  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
 15523  003B38  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
 15524  003B3A  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
 15525  003B3C  1E19               	comf	(___aodiv@quotient+1)^0,f,c
 15526  003B3E  6C18               	negf	___aodiv@quotient^0,c
 15527  003B40  0E00               	movlw	0
 15528  003B42  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
 15529  003B44  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
 15530  003B46  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
 15531  003B48  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
 15532  003B4A  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
 15533  003B4C  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
 15534  003B4E  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
 15535  003B50                     l6379:
 15536  003B50  C018  F006         	movff	___aodiv@quotient,?___aodiv
 15537  003B54  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 15538  003B58  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 15539  003B5C  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 15540  003B60  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 15541  003B64  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 15542  003B68  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 15543  003B6C  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 15544  003B70  0012               	return		;funcret
 15545  003B72                     __end_of___aodiv:
 15546                           	callstack 0
 15547                           
 15548 ;; *************** function _atoi *****************
 15549 ;; Defined at:
 15550 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 15551 ;; Parameters:    Size  Location     Type
 15552 ;;  s               2   12[COMRAM] PTR const unsigned char 
 15553 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 15554 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 15555 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 15556 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 15557 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 15558 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 15559 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 15560 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 15561 ;; Auto vars:     Size  Location     Type
 15562 ;;  n               2   25[COMRAM] int 
 15563 ;;  neg             2   18[COMRAM] int 
 15564 ;; Return value:  Size  Location     Type
 15565 ;;                  2   12[COMRAM] int 
 15566 ;; Registers used:
 15567 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15568 ;; Tracked objects:
 15569 ;;		On entry : 0/0
 15570 ;;		On exit  : 0/0
 15571 ;;		Unchanged: 0/0
 15572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15573 ;;      Params:         2       0       0       0       0       0       0
 15574 ;;      Locals:         9       0       0       0       0       0       0
 15575 ;;      Temps:          4       0       0       0       0       0       0
 15576 ;;      Totals:        15       0       0       0       0       0       0
 15577 ;;Total ram usage:       15 bytes
 15578 ;; Hardware stack levels used: 1
 15579 ;; Hardware stack levels required when called: 2
 15580 ;; This function calls:
 15581 ;;		___wmul
 15582 ;;		_isdigit
 15583 ;;		_isspace
 15584 ;; This function is called by:
 15585 ;;		_vfpfcnvrt
 15586 ;; This function uses a non-reentrant model
 15587 ;;
 15588                           
 15589                           	psect	text60
 15590  00385A                     __ptext60:
 15591                           	callstack 0
 15592  00385A                     _atoi:
 15593                           	callstack 24
 15594  00385A  0E00               	movlw	0
 15595  00385C  6E1B               	movwf	(atoi@n+1)^0,c
 15596  00385E  0E00               	movlw	0
 15597  003860  6E1A               	movwf	atoi@n^0,c
 15598  003862  0E00               	movlw	0
 15599  003864  6E14               	movwf	(atoi@neg+1)^0,c
 15600  003866  0E00               	movlw	0
 15601  003868  6E13               	movwf	atoi@neg^0,c
 15602  00386A  EF39  F01C         	goto	l6727
 15603  00386E                     l6725:
 15604  00386E  4A0D               	infsnz	atoi@s^0,f,c
 15605  003870  2A0E               	incf	(atoi@s+1)^0,f,c
 15606  003872                     l6727:
 15607  003872  0E01               	movlw	1
 15608  003874  6E19               	movwf	_atoi$1843^0,c
 15609  003876  C00D  FFF6         	movff	atoi@s,tblptrl
 15610  00387A  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15611  00387E                     	if	0	;tblptru may be non-zero
 15612  00387E                     	endif
 15613  00387E                     	if	0	;tblptru may be non-zero
 15614  00387E                     	endif
 15615  00387E  0008               	tblrd		*
 15616  003880  50F5               	movf	tablat,w,c
 15617  003882  0A20               	xorlw	32
 15618  003884  B4D8               	btfsc	status,2,c
 15619  003886  EF47  F01C         	goto	u8201
 15620  00388A  EF49  F01C         	goto	u8200
 15621  00388E                     u8201:
 15622  00388E  EF66  F01C         	goto	l6735
 15623  003892                     u8200:
 15624  003892  0EF7               	movlw	247
 15625  003894  6E0F               	movwf	??_atoi^0,c
 15626  003896  0EFF               	movlw	255
 15627  003898  6E10               	movwf	(??_atoi+1)^0,c
 15628  00389A  C00D  FFF6         	movff	atoi@s,tblptrl
 15629  00389E  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15630  0038A2                     	if	0	;tblptru may be non-zero
 15631  0038A2                     	endif
 15632  0038A2                     	if	0	;tblptru may be non-zero
 15633  0038A2                     	endif
 15634  0038A2  0008               	tblrd		*
 15635  0038A4  50F5               	movf	tablat,w,c
 15636  0038A6  6E11               	movwf	(??_atoi+2)^0,c
 15637  0038A8  6A12               	clrf	(??_atoi+3)^0,c
 15638  0038AA  500F               	movf	??_atoi^0,w,c
 15639  0038AC  2611               	addwf	(??_atoi+2)^0,f,c
 15640  0038AE  5010               	movf	(??_atoi+1)^0,w,c
 15641  0038B0  2212               	addwfc	(??_atoi+3)^0,f,c
 15642  0038B2  5012               	movf	(??_atoi+3)^0,w,c
 15643  0038B4  E109               	bnz	u8210
 15644  0038B6  0E05               	movlw	5
 15645  0038B8  5C11               	subwf	(??_atoi+2)^0,w,c
 15646  0038BA  A0D8               	btfss	status,0,c
 15647  0038BC  EF62  F01C         	goto	u8211
 15648  0038C0  EF64  F01C         	goto	u8210
 15649  0038C4                     u8211:
 15650  0038C4  EF66  F01C         	goto	l6735
 15651  0038C8                     u8210:
 15652  0038C8  0E00               	movlw	0
 15653  0038CA  6E19               	movwf	_atoi$1843^0,c
 15654  0038CC                     l6735:
 15655  0038CC  C019  F015         	movff	_atoi$1843,_atoi$1842
 15656  0038D0  6A16               	clrf	(_atoi$1842+1)^0,c
 15657  0038D2  5015               	movf	_atoi$1842^0,w,c
 15658  0038D4  1016               	iorwf	(_atoi$1842+1)^0,w,c
 15659  0038D6  A4D8               	btfss	status,2,c
 15660  0038D8  EF70  F01C         	goto	u8221
 15661  0038DC  EF72  F01C         	goto	u8220
 15662  0038E0                     u8221:
 15663  0038E0  EF37  F01C         	goto	l6725
 15664  0038E4                     u8220:
 15665  0038E4  EF7C  F01C         	goto	l6745
 15666  0038E8                     l6741:
 15667  0038E8  0E00               	movlw	0
 15668  0038EA  6E14               	movwf	(atoi@neg+1)^0,c
 15669  0038EC  0E01               	movlw	1
 15670  0038EE  6E13               	movwf	atoi@neg^0,c
 15671  0038F0                     l6743:
 15672  0038F0  4A0D               	infsnz	atoi@s^0,f,c
 15673  0038F2  2A0E               	incf	(atoi@s+1)^0,f,c
 15674  0038F4  EFB1  F01C         	goto	l6751
 15675  0038F8                     l6745:
 15676  0038F8  C00D  FFF6         	movff	atoi@s,tblptrl
 15677  0038FC  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15678  003900                     	if	0	;tblptru may be non-zero
 15679  003900                     	endif
 15680  003900                     	if	0	;tblptru may be non-zero
 15681  003900                     	endif
 15682  003900  0008               	tblrd		*
 15683  003902  50F5               	movf	tablat,w,c
 15684  003904  6E0F               	movwf	??_atoi^0,c
 15685  003906  6A10               	clrf	(??_atoi+1)^0,c
 15686                           
 15687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15688                           ; Switch size 1, requested type "simple"
 15689                           ; Number of cases is 1, Range of values is 0 to 0
 15690                           ; switch strategies available:
 15691                           ; Name         Instructions Cycles
 15692                           ; simple_byte            4     3 (average)
 15693                           ;	Chosen strategy is simple_byte
 15694  003908  5010               	movf	(??_atoi+1)^0,w,c
 15695  00390A  0A00               	xorlw	0	; case 0
 15696  00390C  B4D8               	btfsc	status,2,c
 15697  00390E  EF8B  F01C         	goto	l8067
 15698  003912  EFB1  F01C         	goto	l6751
 15699  003916                     l8067:
 15700                           
 15701                           ; Switch size 1, requested type "simple"
 15702                           ; Number of cases is 2, Range of values is 43 to 45
 15703                           ; switch strategies available:
 15704                           ; Name         Instructions Cycles
 15705                           ; simple_byte            7     4 (average)
 15706                           ;	Chosen strategy is simple_byte
 15707  003916  500F               	movf	??_atoi^0,w,c
 15708  003918  0A2B               	xorlw	43	; case 43
 15709  00391A  B4D8               	btfsc	status,2,c
 15710  00391C  EF78  F01C         	goto	l6743
 15711  003920  0A06               	xorlw	6	; case 45
 15712  003922  B4D8               	btfsc	status,2,c
 15713  003924  EF74  F01C         	goto	l6741
 15714  003928  EFB1  F01C         	goto	l6751
 15715  00392C                     l6747:
 15716  00392C  C01A  F006         	movff	atoi@n,___wmul@multiplier
 15717  003930  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 15718  003934  0E00               	movlw	0
 15719  003936  6E09               	movwf	(___wmul@multiplicand+1)^0,c
 15720  003938  0E0A               	movlw	10
 15721  00393A  6E08               	movwf	___wmul@multiplicand^0,c
 15722  00393C  EC44  F02B         	call	___wmul	;wreg free
 15723  003940  C00D  FFF6         	movff	atoi@s,tblptrl
 15724  003944  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15725  003948                     	if	0	;tblptru may be non-zero
 15726  003948                     	endif
 15727  003948                     	if	0	;tblptru may be non-zero
 15728  003948                     	endif
 15729  003948  0008               	tblrd		*
 15730  00394A  50F5               	movf	tablat,w,c
 15731  00394C  5E06               	subwf	?___wmul^0,f,c
 15732  00394E  0E00               	movlw	0
 15733  003950  5A07               	subwfb	(?___wmul+1)^0,f,c
 15734  003952  0E30               	movlw	48
 15735  003954  2406               	addwf	?___wmul^0,w,c
 15736  003956  6E1A               	movwf	atoi@n^0,c
 15737  003958  0E00               	movlw	0
 15738  00395A  2007               	addwfc	(?___wmul+1)^0,w,c
 15739  00395C  6E1B               	movwf	(atoi@n+1)^0,c
 15740  00395E  EF78  F01C         	goto	l6743
 15741  003962                     l6751:
 15742  003962  0ED0               	movlw	208
 15743  003964  6E0F               	movwf	??_atoi^0,c
 15744  003966  0EFF               	movlw	255
 15745  003968  6E10               	movwf	(??_atoi+1)^0,c
 15746  00396A  C00D  FFF6         	movff	atoi@s,tblptrl
 15747  00396E  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15748  003972                     	if	0	;tblptru may be non-zero
 15749  003972                     	endif
 15750  003972                     	if	0	;tblptru may be non-zero
 15751  003972                     	endif
 15752  003972  0008               	tblrd		*
 15753  003974  50F5               	movf	tablat,w,c
 15754  003976  6E11               	movwf	(??_atoi+2)^0,c
 15755  003978  6A12               	clrf	(??_atoi+3)^0,c
 15756  00397A  500F               	movf	??_atoi^0,w,c
 15757  00397C  2611               	addwf	(??_atoi+2)^0,f,c
 15758  00397E  5010               	movf	(??_atoi+1)^0,w,c
 15759  003980  2212               	addwfc	(??_atoi+3)^0,f,c
 15760  003982  5012               	movf	(??_atoi+3)^0,w,c
 15761  003984  E10A               	bnz	u8230
 15762  003986  0E0A               	movlw	10
 15763  003988  5C11               	subwf	(??_atoi+2)^0,w,c
 15764  00398A  A0D8               	btfss	status,0,c
 15765  00398C  EFCA  F01C         	goto	u8231
 15766  003990  EFCD  F01C         	goto	u8230
 15767  003994                     u8231:
 15768  003994  0E01               	movlw	1
 15769  003996  EFCE  F01C         	goto	u8240
 15770  00399A                     u8230:
 15771  00399A  0E00               	movlw	0
 15772  00399C                     u8240:
 15773  00399C  6E17               	movwf	_atoi$1844^0,c
 15774  00399E  6A18               	clrf	(_atoi$1844+1)^0,c
 15775  0039A0  5017               	movf	_atoi$1844^0,w,c
 15776  0039A2  1018               	iorwf	(_atoi$1844+1)^0,w,c
 15777  0039A4  A4D8               	btfss	status,2,c
 15778  0039A6  EFD7  F01C         	goto	u8251
 15779  0039AA  EFD9  F01C         	goto	u8250
 15780  0039AE                     u8251:
 15781  0039AE  EF96  F01C         	goto	l6747
 15782  0039B2                     u8250:
 15783  0039B2  5013               	movf	atoi@neg^0,w,c
 15784  0039B4  1014               	iorwf	(atoi@neg+1)^0,w,c
 15785  0039B6  A4D8               	btfss	status,2,c
 15786  0039B8  EFE0  F01C         	goto	u8261
 15787  0039BC  EFE2  F01C         	goto	u8260
 15788  0039C0                     u8261:
 15789  0039C0  EFF0  F01C         	goto	l1532
 15790  0039C4                     u8260:
 15791  0039C4  C01A  F00F         	movff	atoi@n,??_atoi
 15792  0039C8  C01B  F010         	movff	atoi@n+1,??_atoi+1
 15793  0039CC  1E0F               	comf	??_atoi^0,f,c
 15794  0039CE  1E10               	comf	(??_atoi+1)^0,f,c
 15795  0039D0  4A0F               	infsnz	??_atoi^0,f,c
 15796  0039D2  2A10               	incf	(??_atoi+1)^0,f,c
 15797  0039D4  C00F  F00D         	movff	??_atoi,?_atoi
 15798  0039D8  C010  F00E         	movff	??_atoi+1,?_atoi+1
 15799  0039DC  EFF4  F01C         	goto	l1535
 15800  0039E0                     l1532:
 15801  0039E0  C01A  F00D         	movff	atoi@n,?_atoi
 15802  0039E4  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 15803  0039E8                     l1535:
 15804  0039E8  0012               	return		;funcret
 15805  0039EA                     __end_of_atoi:
 15806                           	callstack 0
 15807                           
 15808 ;; *************** function _isspace *****************
 15809 ;; Defined at:
 15810 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 15811 ;; Parameters:    Size  Location     Type
 15812 ;;  c               2    5[COMRAM] int 
 15813 ;; Auto vars:     Size  Location     Type
 15814 ;;		None
 15815 ;; Return value:  Size  Location     Type
 15816 ;;                  2    5[COMRAM] int 
 15817 ;; Registers used:
 15818 ;;		wreg, status,2, status,0
 15819 ;; Tracked objects:
 15820 ;;		On entry : 0/0
 15821 ;;		On exit  : 0/0
 15822 ;;		Unchanged: 0/0
 15823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15824 ;;      Params:         2       0       0       0       0       0       0
 15825 ;;      Locals:         1       0       0       0       0       0       0
 15826 ;;      Temps:          4       0       0       0       0       0       0
 15827 ;;      Totals:         7       0       0       0       0       0       0
 15828 ;;Total ram usage:        7 bytes
 15829 ;; Hardware stack levels used: 1
 15830 ;; Hardware stack levels required when called: 1
 15831 ;; This function calls:
 15832 ;;		Nothing
 15833 ;; This function is called by:
 15834 ;;		_atoi
 15835 ;; This function uses a non-reentrant model
 15836 ;;
 15837                           
 15838                           	psect	text61
 15839  0053FA                     __ptext61:
 15840                           	callstack 0
 15841  0053FA                     _isspace:
 15842                           	callstack 24
 15843  0053FA  0E01               	movlw	1
 15844  0053FC  6E0C               	movwf	_isspace$1869^0,c
 15845  0053FE  0E20               	movlw	32
 15846  005400  1806               	xorwf	isspace@c^0,w,c
 15847  005402  1007               	iorwf	(isspace@c+1)^0,w,c
 15848  005404  B4D8               	btfsc	status,2,c
 15849  005406  EF07  F02A         	goto	u7691
 15850  00540A  EF09  F02A         	goto	u7690
 15851  00540E                     u7691:
 15852  00540E  EF22  F02A         	goto	l6513
 15853  005412                     u7690:
 15854  005412  0EF7               	movlw	247
 15855  005414  6E08               	movwf	??_isspace^0,c
 15856  005416  0EFF               	movlw	255
 15857  005418  6E09               	movwf	(??_isspace+1)^0,c
 15858  00541A  C006  F00A         	movff	isspace@c,??_isspace+2
 15859  00541E  C007  F00B         	movff	isspace@c+1,??_isspace+3
 15860  005422  5008               	movf	??_isspace^0,w,c
 15861  005424  260A               	addwf	(??_isspace+2)^0,f,c
 15862  005426  5009               	movf	(??_isspace+1)^0,w,c
 15863  005428  220B               	addwfc	(??_isspace+3)^0,f,c
 15864  00542A  500B               	movf	(??_isspace+3)^0,w,c
 15865  00542C  E109               	bnz	u7700
 15866  00542E  0E05               	movlw	5
 15867  005430  5C0A               	subwf	(??_isspace+2)^0,w,c
 15868  005432  A0D8               	btfss	status,0,c
 15869  005434  EF1E  F02A         	goto	u7701
 15870  005438  EF20  F02A         	goto	u7700
 15871  00543C                     u7701:
 15872  00543C  EF22  F02A         	goto	l6513
 15873  005440                     u7700:
 15874  005440  0E00               	movlw	0
 15875  005442  6E0C               	movwf	_isspace$1869^0,c
 15876  005444                     l6513:
 15877  005444  C00C  F006         	movff	_isspace$1869,?_isspace
 15878  005448  6A07               	clrf	(?_isspace+1)^0,c
 15879  00544A  0012               	return		;funcret
 15880  00544C                     __end_of_isspace:
 15881                           	callstack 0
 15882                           
 15883 ;; *************** function _isdigit *****************
 15884 ;; Defined at:
 15885 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 15886 ;; Parameters:    Size  Location     Type
 15887 ;;  c               2    5[COMRAM] int 
 15888 ;; Auto vars:     Size  Location     Type
 15889 ;;		None
 15890 ;; Return value:  Size  Location     Type
 15891 ;;                  2    5[COMRAM] int 
 15892 ;; Registers used:
 15893 ;;		wreg, status,2, status,0
 15894 ;; Tracked objects:
 15895 ;;		On entry : 0/0
 15896 ;;		On exit  : 0/0
 15897 ;;		Unchanged: 0/0
 15898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15899 ;;      Params:         2       0       0       0       0       0       0
 15900 ;;      Locals:         0       0       0       0       0       0       0
 15901 ;;      Temps:          4       0       0       0       0       0       0
 15902 ;;      Totals:         6       0       0       0       0       0       0
 15903 ;;Total ram usage:        6 bytes
 15904 ;; Hardware stack levels used: 1
 15905 ;; Hardware stack levels required when called: 1
 15906 ;; This function calls:
 15907 ;;		Nothing
 15908 ;; This function is called by:
 15909 ;;		_vfpfcnvrt
 15910 ;;		_atoi
 15911 ;; This function uses a non-reentrant model
 15912 ;;
 15913                           
 15914                           	psect	text62
 15915  005602                     __ptext62:
 15916                           	callstack 0
 15917  005602                     _isdigit:
 15918                           	callstack 25
 15919  005602  0ED0               	movlw	208
 15920  005604  6E08               	movwf	??_isdigit^0,c
 15921  005606  0EFF               	movlw	255
 15922  005608  6E09               	movwf	(??_isdigit+1)^0,c
 15923  00560A  C006  F00A         	movff	isdigit@c,??_isdigit+2
 15924  00560E  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 15925  005612  5008               	movf	??_isdigit^0,w,c
 15926  005614  260A               	addwf	(??_isdigit+2)^0,f,c
 15927  005616  5009               	movf	(??_isdigit+1)^0,w,c
 15928  005618  220B               	addwfc	(??_isdigit+3)^0,f,c
 15929  00561A  500B               	movf	(??_isdigit+3)^0,w,c
 15930  00561C  E10A               	bnz	u7670
 15931  00561E  0E0A               	movlw	10
 15932  005620  5C0A               	subwf	(??_isdigit+2)^0,w,c
 15933  005622  A0D8               	btfss	status,0,c
 15934  005624  EF16  F02B         	goto	u7671
 15935  005628  EF19  F02B         	goto	u7670
 15936  00562C                     u7671:
 15937  00562C  0E01               	movlw	1
 15938  00562E  EF1A  F02B         	goto	u7680
 15939  005632                     u7670:
 15940  005632  0E00               	movlw	0
 15941  005634                     u7680:
 15942  005634  6E06               	movwf	?_isdigit^0,c
 15943  005636  6A07               	clrf	(?_isdigit+1)^0,c
 15944  005638  0012               	return		;funcret
 15945  00563A                     __end_of_isdigit:
 15946                           	callstack 0
 15947                           
 15948 ;; *************** function ___wmul *****************
 15949 ;; Defined at:
 15950 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 15951 ;; Parameters:    Size  Location     Type
 15952 ;;  multiplier      2    5[COMRAM] unsigned int 
 15953 ;;  multiplicand    2    7[COMRAM] unsigned int 
 15954 ;; Auto vars:     Size  Location     Type
 15955 ;;  product         2    9[COMRAM] unsigned int 
 15956 ;; Return value:  Size  Location     Type
 15957 ;;                  2    5[COMRAM] unsigned int 
 15958 ;; Registers used:
 15959 ;;		wreg, status,2, status,0, prodl, prodh
 15960 ;; Tracked objects:
 15961 ;;		On entry : 0/0
 15962 ;;		On exit  : 0/0
 15963 ;;		Unchanged: 0/0
 15964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15965 ;;      Params:         4       0       0       0       0       0       0
 15966 ;;      Locals:         2       0       0       0       0       0       0
 15967 ;;      Temps:          0       0       0       0       0       0       0
 15968 ;;      Totals:         6       0       0       0       0       0       0
 15969 ;;Total ram usage:        6 bytes
 15970 ;; Hardware stack levels used: 1
 15971 ;; Hardware stack levels required when called: 1
 15972 ;; This function calls:
 15973 ;;		Nothing
 15974 ;; This function is called by:
 15975 ;;		_atoi
 15976 ;; This function uses a non-reentrant model
 15977 ;;
 15978                           
 15979                           	psect	text63
 15980  005688                     __ptext63:
 15981                           	callstack 0
 15982  005688                     ___wmul:
 15983                           	callstack 24
 15984  005688  5006               	movf	___wmul@multiplier^0,w,c
 15985  00568A  0208               	mulwf	___wmul@multiplicand^0,c
 15986  00568C  CFF3 F00A          	movff	prodl,___wmul@product
 15987  005690  CFF4 F00B          	movff	prodh,___wmul@product+1
 15988  005694  5006               	movf	___wmul@multiplier^0,w,c
 15989  005696  0209               	mulwf	(___wmul@multiplicand+1)^0,c
 15990  005698  50F3               	movf	243,w,c
 15991  00569A  260B               	addwf	(___wmul@product+1)^0,f,c
 15992  00569C  5007               	movf	(___wmul@multiplier+1)^0,w,c
 15993  00569E  0208               	mulwf	___wmul@multiplicand^0,c
 15994  0056A0  50F3               	movf	243,w,c
 15995  0056A2  260B               	addwf	(___wmul@product+1)^0,f,c
 15996  0056A4  C00A  F006         	movff	___wmul@product,?___wmul
 15997  0056A8  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 15998  0056AC  0012               	return		;funcret
 15999  0056AE                     __end_of___wmul:
 16000                           	callstack 0
 16001                           
 16002 ;; *************** function _clust2sect *****************
 16003 ;; Defined at:
 16004 ;;		line 396 in file "pff.c"
 16005 ;; Parameters:    Size  Location     Type
 16006 ;;  clst            4   17[COMRAM] unsigned long 
 16007 ;; Auto vars:     Size  Location     Type
 16008 ;;  fs              2   26[COMRAM] PTR struct .
 16009 ;;		 -> NULL(0), main@fs(42), 
 16010 ;; Return value:  Size  Location     Type
 16011 ;;                  4   17[COMRAM] unsigned long 
 16012 ;; Registers used:
 16013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16014 ;; Tracked objects:
 16015 ;;		On entry : 0/0
 16016 ;;		On exit  : 0/0
 16017 ;;		Unchanged: 0/0
 16018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16019 ;;      Params:         4       0       0       0       0       0       0
 16020 ;;      Locals:         2       0       0       0       0       0       0
 16021 ;;      Temps:          5       0       0       0       0       0       0
 16022 ;;      Totals:        11       0       0       0       0       0       0
 16023 ;;Total ram usage:       11 bytes
 16024 ;; Hardware stack levels used: 1
 16025 ;; Hardware stack levels required when called: 2
 16026 ;; This function calls:
 16027 ;;		___lmul
 16028 ;; This function is called by:
 16029 ;;		_dir_rewind
 16030 ;;		_dir_next
 16031 ;;		_pf_read
 16032 ;;		_pf_lseek
 16033 ;; This function uses a non-reentrant model
 16034 ;;
 16035                           
 16036                           	psect	text64
 16037  004BAA                     __ptext64:
 16038                           	callstack 0
 16039  004BAA                     _clust2sect:
 16040                           	callstack 26
 16041  004BAA                     
 16042                           ;pff.c: 397:  DWORD clst;pff.c: 399: {;pff.c: 400:  FATFS *fs = FatFs;
 16043  004BAA  C0FD  F01B         	movff	_FatFs,clust2sect@fs
 16044  004BAE  C0FE  F01C         	movff	_FatFs+1,clust2sect@fs+1
 16045                           
 16046                           ;pff.c: 403:  clst -= 2;
 16047  004BB2  0E02               	movlw	2
 16048  004BB4  5E12               	subwf	clust2sect@clst^0,f,c
 16049  004BB6  0E00               	movlw	0
 16050  004BB8  5A13               	subwfb	(clust2sect@clst+1)^0,f,c
 16051  004BBA  5A14               	subwfb	(clust2sect@clst+2)^0,f,c
 16052  004BBC  5A15               	subwfb	(clust2sect@clst+3)^0,f,c
 16053  004BBE                     
 16054                           ;pff.c: 404:  if (clst >= (fs->n_fatent - 2)) return 0;
 16055  004BBE  EE20 F006          	lfsr	2,6
 16056  004BC2  501B               	movf	clust2sect@fs^0,w,c
 16057  004BC4  26D9               	addwf	fsr2l,f,c
 16058  004BC6  501C               	movf	(clust2sect@fs+1)^0,w,c
 16059  004BC8  22DA               	addwfc	fsr2h,f,c
 16060  004BCA  0EFE               	movlw	254
 16061  004BCC  24DE               	addwf	postinc2,w,c
 16062  004BCE  6E16               	movwf	??_clust2sect^0,c
 16063  004BD0  0EFF               	movlw	255
 16064  004BD2  20DE               	addwfc	postinc2,w,c
 16065  004BD4  6E17               	movwf	(??_clust2sect+1)^0,c
 16066  004BD6  0EFF               	movlw	255
 16067  004BD8  20DE               	addwfc	postinc2,w,c
 16068  004BDA  6E18               	movwf	(??_clust2sect+2)^0,c
 16069  004BDC  0EFF               	movlw	255
 16070  004BDE  20DE               	addwfc	postinc2,w,c
 16071  004BE0  6E19               	movwf	(??_clust2sect+3)^0,c
 16072  004BE2  5016               	movf	??_clust2sect^0,w,c
 16073  004BE4  5C12               	subwf	clust2sect@clst^0,w,c
 16074  004BE6  5017               	movf	(??_clust2sect+1)^0,w,c
 16075  004BE8  5813               	subwfb	(clust2sect@clst+1)^0,w,c
 16076  004BEA  5018               	movf	(??_clust2sect+2)^0,w,c
 16077  004BEC  5814               	subwfb	(clust2sect@clst+2)^0,w,c
 16078  004BEE  5019               	movf	(??_clust2sect+3)^0,w,c
 16079  004BF0  5815               	subwfb	(clust2sect@clst+3)^0,w,c
 16080  004BF2  A0D8               	btfss	status,0,c
 16081  004BF4  EFFE  F025         	goto	u5171
 16082  004BF8  EF00  F026         	goto	u5170
 16083  004BFC                     u5171:
 16084  004BFC  EF0A  F026         	goto	l4747
 16085  004C00                     u5170:
 16086  004C00  0E00               	movlw	0
 16087  004C02  6E12               	movwf	?_clust2sect^0,c
 16088  004C04  0E00               	movlw	0
 16089  004C06  6E13               	movwf	(?_clust2sect+1)^0,c
 16090  004C08  0E00               	movlw	0
 16091  004C0A  6E14               	movwf	(?_clust2sect+2)^0,c
 16092  004C0C  0E00               	movlw	0
 16093  004C0E  6E15               	movwf	(?_clust2sect+3)^0,c
 16094  004C10  EF3B  F026         	goto	l202
 16095  004C14                     l4747:
 16096                           
 16097                           ;pff.c: 405:  return (DWORD)clst * fs->csize + fs->database;
 16098  004C14  EE20 F012          	lfsr	2,18
 16099  004C18  501B               	movf	clust2sect@fs^0,w,c
 16100  004C1A  26D9               	addwf	fsr2l,f,c
 16101  004C1C  501C               	movf	(clust2sect@fs+1)^0,w,c
 16102  004C1E  22DA               	addwfc	fsr2h,f,c
 16103  004C20  CFDE F016          	movff	postinc2,??_clust2sect
 16104  004C24  CFDE F017          	movff	postinc2,??_clust2sect+1
 16105  004C28  CFDE F018          	movff	postinc2,??_clust2sect+2
 16106  004C2C  CFDE F019          	movff	postinc2,??_clust2sect+3
 16107  004C30  EE20 F002          	lfsr	2,2
 16108  004C34  501B               	movf	clust2sect@fs^0,w,c
 16109  004C36  26D9               	addwf	fsr2l,f,c
 16110  004C38  501C               	movf	(clust2sect@fs+1)^0,w,c
 16111  004C3A  22DA               	addwfc	fsr2h,f,c
 16112  004C3C  50DF               	movf	indf2,w,c
 16113  004C3E  6E1A               	movwf	(??_clust2sect+4)^0,c
 16114  004C40  501A               	movf	(??_clust2sect+4)^0,w,c
 16115  004C42  6E06               	movwf	___lmul@multiplier^0,c
 16116  004C44  6A07               	clrf	(___lmul@multiplier+1)^0,c
 16117  004C46  6A08               	clrf	(___lmul@multiplier+2)^0,c
 16118  004C48  6A09               	clrf	(___lmul@multiplier+3)^0,c
 16119  004C4A  C012  F00A         	movff	clust2sect@clst,___lmul@multiplicand
 16120  004C4E  C013  F00B         	movff	clust2sect@clst+1,___lmul@multiplicand+1
 16121  004C52  C014  F00C         	movff	clust2sect@clst+2,___lmul@multiplicand+2
 16122  004C56  C015  F00D         	movff	clust2sect@clst+3,___lmul@multiplicand+3
 16123  004C5A  EC39  F029         	call	___lmul	;wreg free
 16124  004C5E  5016               	movf	??_clust2sect^0,w,c
 16125  004C60  2406               	addwf	?___lmul^0,w,c
 16126  004C62  6E12               	movwf	?_clust2sect^0,c
 16127  004C64  5017               	movf	(??_clust2sect+1)^0,w,c
 16128  004C66  2007               	addwfc	(?___lmul+1)^0,w,c
 16129  004C68  6E13               	movwf	(?_clust2sect+1)^0,c
 16130  004C6A  5018               	movf	(??_clust2sect+2)^0,w,c
 16131  004C6C  2008               	addwfc	(?___lmul+2)^0,w,c
 16132  004C6E  6E14               	movwf	(?_clust2sect+2)^0,c
 16133  004C70  5019               	movf	(??_clust2sect+3)^0,w,c
 16134  004C72  2009               	addwfc	(?___lmul+3)^0,w,c
 16135  004C74  6E15               	movwf	(?_clust2sect+3)^0,c
 16136  004C76                     l202:
 16137  004C76  0012               	return		;funcret
 16138  004C78                     __end_of_clust2sect:
 16139                           	callstack 0
 16140                           
 16141 ;; *************** function ___lmul *****************
 16142 ;; Defined at:
 16143 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
 16144 ;; Parameters:    Size  Location     Type
 16145 ;;  multiplier      4    5[COMRAM] unsigned long 
 16146 ;;  multiplicand    4    9[COMRAM] unsigned long 
 16147 ;; Auto vars:     Size  Location     Type
 16148 ;;  product         4   13[COMRAM] unsigned long 
 16149 ;; Return value:  Size  Location     Type
 16150 ;;                  4    5[COMRAM] unsigned long 
 16151 ;; Registers used:
 16152 ;;		wreg, status,2, status,0
 16153 ;; Tracked objects:
 16154 ;;		On entry : 0/0
 16155 ;;		On exit  : 0/0
 16156 ;;		Unchanged: 0/0
 16157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16158 ;;      Params:         8       0       0       0       0       0       0
 16159 ;;      Locals:         4       0       0       0       0       0       0
 16160 ;;      Temps:          0       0       0       0       0       0       0
 16161 ;;      Totals:        12       0       0       0       0       0       0
 16162 ;;Total ram usage:       12 bytes
 16163 ;; Hardware stack levels used: 1
 16164 ;; Hardware stack levels required when called: 1
 16165 ;; This function calls:
 16166 ;;		Nothing
 16167 ;; This function is called by:
 16168 ;;		_clust2sect
 16169 ;;		_pf_mount
 16170 ;;		_xatoi
 16171 ;; This function uses a non-reentrant model
 16172 ;;
 16173                           
 16174                           	psect	text65
 16175  005272                     __ptext65:
 16176                           	callstack 0
 16177  005272                     ___lmul:
 16178                           	callstack 28
 16179  005272  0E00               	movlw	0
 16180  005274  6E0E               	movwf	___lmul@product^0,c
 16181  005276  0E00               	movlw	0
 16182  005278  6E0F               	movwf	(___lmul@product+1)^0,c
 16183  00527A  0E00               	movlw	0
 16184  00527C  6E10               	movwf	(___lmul@product+2)^0,c
 16185  00527E  0E00               	movlw	0
 16186  005280  6E11               	movwf	(___lmul@product+3)^0,c
 16187  005282                     l4703:
 16188  005282  A006               	btfss	___lmul@multiplier^0,0,c
 16189  005284  EF46  F029         	goto	u5111
 16190  005288  EF48  F029         	goto	u5110
 16191  00528C                     u5111:
 16192  00528C  EF50  F029         	goto	l4707
 16193  005290                     u5110:
 16194  005290  500A               	movf	___lmul@multiplicand^0,w,c
 16195  005292  260E               	addwf	___lmul@product^0,f,c
 16196  005294  500B               	movf	(___lmul@multiplicand+1)^0,w,c
 16197  005296  220F               	addwfc	(___lmul@product+1)^0,f,c
 16198  005298  500C               	movf	(___lmul@multiplicand+2)^0,w,c
 16199  00529A  2210               	addwfc	(___lmul@product+2)^0,f,c
 16200  00529C  500D               	movf	(___lmul@multiplicand+3)^0,w,c
 16201  00529E  2211               	addwfc	(___lmul@product+3)^0,f,c
 16202  0052A0                     l4707:
 16203  0052A0  90D8               	bcf	status,0,c
 16204  0052A2  360A               	rlcf	___lmul@multiplicand^0,f,c
 16205  0052A4  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
 16206  0052A6  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
 16207  0052A8  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
 16208  0052AA  90D8               	bcf	status,0,c
 16209  0052AC  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
 16210  0052AE  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
 16211  0052B0  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
 16212  0052B2  3206               	rrcf	___lmul@multiplier^0,f,c
 16213  0052B4  5006               	movf	___lmul@multiplier^0,w,c
 16214  0052B6  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
 16215  0052B8  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
 16216  0052BA  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
 16217  0052BC  A4D8               	btfss	status,2,c
 16218  0052BE  EF63  F029         	goto	u5121
 16219  0052C2  EF65  F029         	goto	u5120
 16220  0052C6                     u5121:
 16221  0052C6  EF41  F029         	goto	l4703
 16222  0052CA                     u5120:
 16223  0052CA  C00E  F006         	movff	___lmul@product,?___lmul
 16224  0052CE  C00F  F007         	movff	___lmul@product+1,?___lmul+1
 16225  0052D2  C010  F008         	movff	___lmul@product+2,?___lmul+2
 16226  0052D6  C011  F009         	movff	___lmul@product+3,?___lmul+3
 16227  0052DA  0012               	return		;funcret
 16228  0052DC                     __end_of___lmul:
 16229                           	callstack 0
 16230                           
 16231 ;; *************** function ___lldiv *****************
 16232 ;; Defined at:
 16233 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 16234 ;; Parameters:    Size  Location     Type
 16235 ;;  dividend        4    5[COMRAM] unsigned long 
 16236 ;;  divisor         4    9[COMRAM] unsigned long 
 16237 ;; Auto vars:     Size  Location     Type
 16238 ;;  quotient        4   13[COMRAM] unsigned long 
 16239 ;;  counter         1   17[COMRAM] unsigned char 
 16240 ;; Return value:  Size  Location     Type
 16241 ;;                  4    5[COMRAM] unsigned long 
 16242 ;; Registers used:
 16243 ;;		wreg, status,2, status,0
 16244 ;; Tracked objects:
 16245 ;;		On entry : 0/0
 16246 ;;		On exit  : 0/0
 16247 ;;		Unchanged: 0/0
 16248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16249 ;;      Params:         8       0       0       0       0       0       0
 16250 ;;      Locals:         5       0       0       0       0       0       0
 16251 ;;      Temps:          0       0       0       0       0       0       0
 16252 ;;      Totals:        13       0       0       0       0       0       0
 16253 ;;Total ram usage:       13 bytes
 16254 ;; Hardware stack levels used: 1
 16255 ;; Hardware stack levels required when called: 1
 16256 ;; This function calls:
 16257 ;;		Nothing
 16258 ;; This function is called by:
 16259 ;;		_pf_mount
 16260 ;;		_pf_lseek
 16261 ;; This function uses a non-reentrant model
 16262 ;;
 16263                           
 16264                           	psect	text66
 16265  004EA4                     __ptext66:
 16266                           	callstack 0
 16267  004EA4                     ___lldiv:
 16268                           	callstack 28
 16269  004EA4  0E00               	movlw	0
 16270  004EA6  6E0E               	movwf	___lldiv@quotient^0,c
 16271  004EA8  0E00               	movlw	0
 16272  004EAA  6E0F               	movwf	(___lldiv@quotient+1)^0,c
 16273  004EAC  0E00               	movlw	0
 16274  004EAE  6E10               	movwf	(___lldiv@quotient+2)^0,c
 16275  004EB0  0E00               	movlw	0
 16276  004EB2  6E11               	movwf	(___lldiv@quotient+3)^0,c
 16277  004EB4  500A               	movf	___lldiv@divisor^0,w,c
 16278  004EB6  100B               	iorwf	(___lldiv@divisor+1)^0,w,c
 16279  004EB8  100C               	iorwf	(___lldiv@divisor+2)^0,w,c
 16280  004EBA  100D               	iorwf	(___lldiv@divisor+3)^0,w,c
 16281  004EBC  B4D8               	btfsc	status,2,c
 16282  004EBE  EF63  F027         	goto	u6071
 16283  004EC2  EF65  F027         	goto	u6070
 16284  004EC6                     u6071:
 16285  004EC6  EF9B  F027         	goto	l662
 16286  004ECA                     u6070:
 16287  004ECA  0E01               	movlw	1
 16288  004ECC  6E12               	movwf	___lldiv@counter^0,c
 16289  004ECE  EF6F  F027         	goto	l5279
 16290  004ED2                     l5277:
 16291  004ED2  90D8               	bcf	status,0,c
 16292  004ED4  360A               	rlcf	___lldiv@divisor^0,f,c
 16293  004ED6  360B               	rlcf	(___lldiv@divisor+1)^0,f,c
 16294  004ED8  360C               	rlcf	(___lldiv@divisor+2)^0,f,c
 16295  004EDA  360D               	rlcf	(___lldiv@divisor+3)^0,f,c
 16296  004EDC  2A12               	incf	___lldiv@counter^0,f,c
 16297  004EDE                     l5279:
 16298  004EDE  AE0D               	btfss	(___lldiv@divisor+3)^0,7,c
 16299  004EE0  EF74  F027         	goto	u6081
 16300  004EE4  EF76  F027         	goto	u6080
 16301  004EE8                     u6081:
 16302  004EE8  EF69  F027         	goto	l5277
 16303  004EEC                     u6080:
 16304  004EEC                     l5281:
 16305  004EEC  90D8               	bcf	status,0,c
 16306  004EEE  360E               	rlcf	___lldiv@quotient^0,f,c
 16307  004EF0  360F               	rlcf	(___lldiv@quotient+1)^0,f,c
 16308  004EF2  3610               	rlcf	(___lldiv@quotient+2)^0,f,c
 16309  004EF4  3611               	rlcf	(___lldiv@quotient+3)^0,f,c
 16310  004EF6  500A               	movf	___lldiv@divisor^0,w,c
 16311  004EF8  5C06               	subwf	___lldiv@dividend^0,w,c
 16312  004EFA  500B               	movf	(___lldiv@divisor+1)^0,w,c
 16313  004EFC  5807               	subwfb	(___lldiv@dividend+1)^0,w,c
 16314  004EFE  500C               	movf	(___lldiv@divisor+2)^0,w,c
 16315  004F00  5808               	subwfb	(___lldiv@dividend+2)^0,w,c
 16316  004F02  500D               	movf	(___lldiv@divisor+3)^0,w,c
 16317  004F04  5809               	subwfb	(___lldiv@dividend+3)^0,w,c
 16318  004F06  A0D8               	btfss	status,0,c
 16319  004F08  EF88  F027         	goto	u6091
 16320  004F0C  EF8A  F027         	goto	u6090
 16321  004F10                     u6091:
 16322  004F10  EF93  F027         	goto	l5289
 16323  004F14                     u6090:
 16324  004F14  500A               	movf	___lldiv@divisor^0,w,c
 16325  004F16  5E06               	subwf	___lldiv@dividend^0,f,c
 16326  004F18  500B               	movf	(___lldiv@divisor+1)^0,w,c
 16327  004F1A  5A07               	subwfb	(___lldiv@dividend+1)^0,f,c
 16328  004F1C  500C               	movf	(___lldiv@divisor+2)^0,w,c
 16329  004F1E  5A08               	subwfb	(___lldiv@dividend+2)^0,f,c
 16330  004F20  500D               	movf	(___lldiv@divisor+3)^0,w,c
 16331  004F22  5A09               	subwfb	(___lldiv@dividend+3)^0,f,c
 16332  004F24  800E               	bsf	___lldiv@quotient^0,0,c
 16333  004F26                     l5289:
 16334  004F26  90D8               	bcf	status,0,c
 16335  004F28  320D               	rrcf	(___lldiv@divisor+3)^0,f,c
 16336  004F2A  320C               	rrcf	(___lldiv@divisor+2)^0,f,c
 16337  004F2C  320B               	rrcf	(___lldiv@divisor+1)^0,f,c
 16338  004F2E  320A               	rrcf	___lldiv@divisor^0,f,c
 16339  004F30  2E12               	decfsz	___lldiv@counter^0,f,c
 16340  004F32  EF76  F027         	goto	l5281
 16341  004F36                     l662:
 16342  004F36  C00E  F006         	movff	___lldiv@quotient,?___lldiv
 16343  004F3A  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
 16344  004F3E  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
 16345  004F42  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
 16346  004F46  0012               	return		;funcret
 16347  004F48                     __end_of___lldiv:
 16348                           	callstack 0
 16349                           
 16350 ;; *************** function _gpio_init *****************
 16351 ;; Defined at:
 16352 ;;		line 45 in file "main.c"
 16353 ;; Parameters:    Size  Location     Type
 16354 ;;		None
 16355 ;; Auto vars:     Size  Location     Type
 16356 ;;		None
 16357 ;; Return value:  Size  Location     Type
 16358 ;;                  1    wreg      void 
 16359 ;; Registers used:
 16360 ;;		None
 16361 ;; Tracked objects:
 16362 ;;		On entry : 0/0
 16363 ;;		On exit  : 0/0
 16364 ;;		Unchanged: 0/0
 16365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16366 ;;      Params:         0       0       0       0       0       0       0
 16367 ;;      Locals:         0       0       0       0       0       0       0
 16368 ;;      Temps:          0       0       0       0       0       0       0
 16369 ;;      Totals:         0       0       0       0       0       0       0
 16370 ;;Total ram usage:        0 bytes
 16371 ;; Hardware stack levels used: 1
 16372 ;; Hardware stack levels required when called: 1
 16373 ;; This function calls:
 16374 ;;		Nothing
 16375 ;; This function is called by:
 16376 ;;		_main
 16377 ;; This function uses a non-reentrant model
 16378 ;;
 16379                           
 16380                           	psect	text67
 16381  005726                     __ptext67:
 16382                           	callstack 0
 16383  005726                     _gpio_init:
 16384                           	callstack 29
 16385  005726                     
 16386                           ;main.c: 52:     TRISCbits.RC7 = 1;
 16387  005726  8E94               	bsf	148,7,c	;volatile
 16388                           
 16389                           ;main.c: 53:     TRISCbits.RC6 = 0;
 16390  005728  9C94               	bcf	148,6,c	;volatile
 16391                           
 16392                           ;main.c: 56:     TRISAbits.RA5 = 0;
 16393  00572A  9A92               	bcf	146,5,c	;volatile
 16394                           
 16395                           ;main.c: 57:     LATAbits.LA5 = 1;
 16396  00572C  8A89               	bsf	137,5,c	;volatile
 16397                           
 16398                           ;main.c: 59:     TRISCbits.RC5 = 0;
 16399  00572E  9A94               	bcf	148,5,c	;volatile
 16400                           
 16401                           ;main.c: 60:     TRISCbits.RC4 = 1;
 16402  005730  8894               	bsf	148,4,c	;volatile
 16403                           
 16404                           ;main.c: 61:     TRISCbits.RC3 = 0;
 16405  005732  9694               	bcf	148,3,c	;volatile
 16406  005734  0012               	return		;funcret
 16407  005736                     __end_of_gpio_init:
 16408                           	callstack 0
 16409                           
 16410 ;; *************** function _isr_high *****************
 16411 ;; Defined at:
 16412 ;;		line 68 in file "uart.c"
 16413 ;; Parameters:    Size  Location     Type
 16414 ;;		None
 16415 ;; Auto vars:     Size  Location     Type
 16416 ;;  i               2    3[COMRAM] int 
 16417 ;;  d               1    2[COMRAM] unsigned char 
 16418 ;; Return value:  Size  Location     Type
 16419 ;;                  1    wreg      void 
 16420 ;; Registers used:
 16421 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16422 ;; Tracked objects:
 16423 ;;		On entry : 0/0
 16424 ;;		On exit  : 0/0
 16425 ;;		Unchanged: 0/0
 16426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16427 ;;      Params:         0       0       0       0       0       0       0
 16428 ;;      Locals:         3       0       0       0       0       0       0
 16429 ;;      Temps:          2       0       0       0       0       0       0
 16430 ;;      Totals:         5       0       0       0       0       0       0
 16431 ;;Total ram usage:        5 bytes
 16432 ;; Hardware stack levels used: 1
 16433 ;; This function calls:
 16434 ;;		Nothing
 16435 ;; This function is called by:
 16436 ;;		Interrupt level 2
 16437 ;; This function uses a non-reentrant model
 16438 ;;
 16439                           
 16440                           	psect	intcode
 16441  000008                     __pintcode:
 16442                           	callstack 0
 16443  000008                     _isr_high:
 16444                           	callstack 16
 16445                           
 16446                           ;incstack = 0
 16447  000008  827A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16448  00000A  EDFF  F026         	call	int_func,f	;refresh shadow registers
 16449                           
 16450                           	psect	intcode_body
 16451  004DFE                     __pintcode_body:
 16452                           	callstack 16
 16453  004DFE                     int_func:
 16454                           	callstack 16
 16455  004DFE  0006               	pop		; remove dummy address from shadow register refresh
 16456  004E00  CFD9 F001          	movff	fsr2l,??_isr_high
 16457  004E04  CFDA F002          	movff	fsr2h,??_isr_high+1
 16458  004E08                     
 16459                           ;uart.c: 70:     if(INTCONbits.INT0IF)
 16460  004E08  50F2               	movf	242,w,c	;volatile
 16461  004E0A                     
 16462                           ;uart.c: 74:     if (RCIE && RCIF)
 16463  004E0A  AA9D               	btfss	3997,5,c	;volatile
 16464  004E0C  EF0A  F027         	goto	i2u720_41
 16465  004E10  EF0C  F027         	goto	i2u720_40
 16466  004E14                     i2u720_41:
 16467  004E14  EF4C  F027         	goto	i2l445
 16468  004E18                     i2u720_40:
 16469  004E18  AA9E               	btfss	3998,5,c	;volatile
 16470  004E1A  EF11  F027         	goto	i2u721_41
 16471  004E1E  EF13  F027         	goto	i2u721_40
 16472  004E22                     i2u721_41:
 16473  004E22  EF4C  F027         	goto	i2l445
 16474  004E26                     i2u721_40:
 16475  004E26                     
 16476                           ;uart.c: 75:     {;uart.c: 76:         BYTE d;;uart.c: 77:         int i;;uart.c: 79:   
      +                                d = (BYTE)RCREG;
 16477  004E26  CFAE F003          	movff	4014,isr_high@d	;volatile
 16478                           
 16479                           ;uart.c: 80:         RCIF = 0;
 16480  004E2A  9A9E               	bcf	3998,5,c	;volatile
 16481                           
 16482                           ;uart.c: 82:         TXREG = RCREG;
 16483  004E2C  CFAE FFAD          	movff	4014,4013	;volatile
 16484                           
 16485                           ;uart.c: 84:         i = RxFifo.ct;
 16486  004E30  C204  F004         	movff	_RxFifo+4,isr_high@i	;volatile
 16487  004E34  C205  F005         	movff	_RxFifo+5,isr_high@i+1	;volatile
 16488  004E38                     
 16489                           ;uart.c: 85:         if (i < 128) {
 16490  004E38  BE05               	btfsc	(isr_high@i+1)^0,7,c
 16491  004E3A  EF2A  F027         	goto	i2u722_40
 16492  004E3E  5005               	movf	(isr_high@i+1)^0,w,c
 16493  004E40  E107               	bnz	i2u722_41
 16494  004E42  0E80               	movlw	128
 16495  004E44  5C04               	subwf	isr_high@i^0,w,c
 16496  004E46  B0D8               	btfsc	status,0,c
 16497  004E48  EF28  F027         	goto	i2u722_41
 16498  004E4C  EF2A  F027         	goto	i2u722_40
 16499  004E50                     i2u722_41:
 16500  004E50  EF43  F027         	goto	i2l6109
 16501  004E54                     i2u722_40:
 16502  004E54                     
 16503                           ;uart.c: 86:             RxFifo.ct = ++i;
 16504  004E54  4A04               	infsnz	isr_high@i^0,f,c
 16505  004E56  2A05               	incf	(isr_high@i+1)^0,f,c
 16506  004E58  C004  F204         	movff	isr_high@i,_RxFifo+4	;volatile
 16507  004E5C  C005  F205         	movff	isr_high@i+1,_RxFifo+5	;volatile
 16508  004E60                     
 16509                           ;uart.c: 87:             i = RxFifo.wi;
 16510  004E60  C202  F004         	movff	_RxFifo+2,isr_high@i	;volatile
 16511  004E64  C203  F005         	movff	_RxFifo+3,isr_high@i+1	;volatile
 16512  004E68                     
 16513                           ;uart.c: 88:             RxFifo.buff[i++] = d;
 16514  004E68  0E06               	movlw	low (_RxFifo+6)
 16515  004E6A  2404               	addwf	isr_high@i^0,w,c
 16516  004E6C  6ED9               	movwf	fsr2l,c
 16517  004E6E  0E02               	movlw	high (_RxFifo+6)
 16518  004E70  2005               	addwfc	(isr_high@i+1)^0,w,c
 16519  004E72  6EDA               	movwf	fsr2h,c
 16520  004E74  C003  FFDF         	movff	isr_high@d,indf2
 16521  004E78  4A04               	infsnz	isr_high@i^0,f,c
 16522  004E7A  2A05               	incf	(isr_high@i+1)^0,f,c
 16523  004E7C                     
 16524                           ;uart.c: 89:             RxFifo.wi = i % 128;
 16525  004E7C  0E7F               	movlw	127
 16526  004E7E  1404               	andwf	isr_high@i^0,w,c
 16527  004E80  0102               	movlb	2	; () banked
 16528  004E82  6F02               	movwf	(_RxFifo+2)& (0+255),b	;volatile
 16529  004E84  6B03               	clrf	(_RxFifo+3)& (0+255),b	;volatile
 16530  004E86                     i2l6109:
 16531                           
 16532                           ;uart.c: 92:         LATBbits.LB1 = PORTBbits.RB1 ^ 0x01;
 16533  004E86  A281               	btfss	129,1,c	;volatile
 16534  004E88  EF48  F027         	goto	i2u723_41
 16535  004E8C  EF4B  F027         	goto	i2u723_40
 16536  004E90                     i2u723_41:
 16537  004E90  828A               	bsf	138,1,c	;volatile
 16538  004E92  EF4C  F027         	goto	i2u724_45
 16539  004E96                     i2u723_40:
 16540  004E96  928A               	bcf	138,1,c	;volatile
 16541  004E98                     i2u724_45:
 16542  004E98                     i2l445:
 16543  004E98  C002  FFDA         	movff	??_isr_high+1,fsr2h
 16544  004E9C  C001  FFD9         	movff	??_isr_high,fsr2l
 16545  004EA0  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16546  004EA2  0011               	retfie		f
 16547  004EA4                     __end_of_isr_high:
 16548                           	callstack 0
 16549                           
 16550                           	psect	rparam
 16551  0000                     
 16552                           	psect	temp
 16553  00007A                     btemp:
 16554                           	callstack 0
 16555  00007A                     	ds	1
 16556  0000                     int$flags	set	btemp
 16557  0000                     wtemp8	set	btemp+1
 16558  0000                     ttemp5	set	btemp+1
 16559  0000                     ttemp6	set	btemp+4
 16560  0000                     ttemp7	set	btemp+8
 16561                           
 16562                           	psect	idloc
 16563                           
 16564                           ;Config register IDLOC0 @ 0x200000
 16565                           ;	unspecified, using default values
 16566  200000                     	org	2097152
 16567  200000  FF                 	db	255
 16568                           
 16569                           ;Config register IDLOC1 @ 0x200001
 16570                           ;	unspecified, using default values
 16571  200001                     	org	2097153
 16572  200001  FF                 	db	255
 16573                           
 16574                           ;Config register IDLOC2 @ 0x200002
 16575                           ;	unspecified, using default values
 16576  200002                     	org	2097154
 16577  200002  FF                 	db	255
 16578                           
 16579                           ;Config register IDLOC3 @ 0x200003
 16580                           ;	unspecified, using default values
 16581  200003                     	org	2097155
 16582  200003  FF                 	db	255
 16583                           
 16584                           ;Config register IDLOC4 @ 0x200004
 16585                           ;	unspecified, using default values
 16586  200004                     	org	2097156
 16587  200004  FF                 	db	255
 16588                           
 16589                           ;Config register IDLOC5 @ 0x200005
 16590                           ;	unspecified, using default values
 16591  200005                     	org	2097157
 16592  200005  FF                 	db	255
 16593                           
 16594                           ;Config register IDLOC6 @ 0x200006
 16595                           ;	unspecified, using default values
 16596  200006                     	org	2097158
 16597  200006  FF                 	db	255
 16598                           
 16599                           ;Config register IDLOC7 @ 0x200007
 16600                           ;	unspecified, using default values
 16601  200007                     	org	2097159
 16602  200007  FF                 	db	255
 16603                           
 16604                           	psect	config
 16605                           
 16606                           ; Padding undefined space
 16607  300000                     	org	3145728
 16608  300000  FF                 	db	255
 16609                           
 16610                           ;Config register CONFIG1H @ 0x300001
 16611                           ;	Oscillator Selection bits
 16612                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 16613                           ;	Fail-Safe Clock Monitor Enable bit
 16614                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16615                           ;	Internal/External Oscillator Switchover bit
 16616                           ;	IESO = OFF, Oscillator Switchover mode disabled
 16617  300001                     	org	3145729
 16618  300001  06                 	db	6
 16619                           
 16620                           ;Config register CONFIG2L @ 0x300002
 16621                           ;	Power-up Timer Enable bit
 16622                           ;	PWRT = OFF, PWRT disabled
 16623                           ;	Brown-out Reset Enable bits
 16624                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 16625                           ;	Brown Out Reset Voltage bits
 16626                           ;	BORV = 3, Minimum setting
 16627  300002                     	org	3145730
 16628  300002  19                 	db	25
 16629                           
 16630                           ;Config register CONFIG2H @ 0x300003
 16631                           ;	Watchdog Timer Enable bit
 16632                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 16633                           ;	Watchdog Timer Postscale Select bits
 16634                           ;	WDTPS = 32768, 1:32768
 16635  300003                     	org	3145731
 16636  300003  1E                 	db	30
 16637                           
 16638                           ; Padding undefined space
 16639  300004                     	org	3145732
 16640  300004  FF                 	db	255
 16641                           
 16642                           ;Config register CONFIG3H @ 0x300005
 16643                           ;	CCP2 MUX bit
 16644                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 16645                           ;	PORTB A/D Enable bit
 16646                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 16647                           ;	Low-Power Timer1 Oscillator Enable bit
 16648                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 16649                           ;	MCLR Pin Enable bit
 16650                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 16651  300005                     	org	3145733
 16652  300005  81                 	db	129
 16653                           
 16654                           ;Config register CONFIG4L @ 0x300006
 16655                           ;	Stack Full/Underflow Reset Enable bit
 16656                           ;	STVREN = ON, Stack full/underflow will cause Reset
 16657                           ;	Single-Supply ICSP Enable bit
 16658                           ;	LVP = OFF, Single-Supply ICSP disabled
 16659                           ;	Extended Instruction Set Enable bit
 16660                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16661                           ;	Background Debugger Enable bit
 16662                           ;	DEBUG = 0x1, unprogrammed default
 16663  300006                     	org	3145734
 16664  300006  81                 	db	129
 16665                           
 16666                           ; Padding undefined space
 16667  300007                     	org	3145735
 16668  300007  FF                 	db	255
 16669                           
 16670                           ;Config register CONFIG5L @ 0x300008
 16671                           ;	Code Protection bit
 16672                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 16673                           ;	Code Protection bit
 16674                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 16675                           ;	Code Protection bit
 16676                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 16677                           ;	Code Protection bit
 16678                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 16679  300008                     	org	3145736
 16680  300008  0F                 	db	15
 16681                           
 16682                           ;Config register CONFIG5H @ 0x300009
 16683                           ;	Boot Block Code Protection bit
 16684                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16685                           ;	Data EEPROM Code Protection bit
 16686                           ;	CPD = OFF, Data EEPROM not code-protected
 16687  300009                     	org	3145737
 16688  300009  C0                 	db	192
 16689                           
 16690                           ;Config register CONFIG6L @ 0x30000A
 16691                           ;	Write Protection bit
 16692                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 16693                           ;	Write Protection bit
 16694                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 16695                           ;	Write Protection bit
 16696                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 16697                           ;	Write Protection bit
 16698                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 16699  30000A                     	org	3145738
 16700  30000A  0F                 	db	15
 16701                           
 16702                           ;Config register CONFIG6H @ 0x30000B
 16703                           ;	Configuration Register Write Protection bit
 16704                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16705                           ;	Boot Block Write Protection bit
 16706                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
 16707                           ;	Data EEPROM Write Protection bit
 16708                           ;	WRTD = OFF, Data EEPROM not write-protected
 16709  30000B                     	org	3145739
 16710  30000B  E0                 	db	224
 16711                           
 16712                           ;Config register CONFIG7L @ 0x30000C
 16713                           ;	Table Read Protection bit
 16714                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 16715                           ;	Table Read Protection bit
 16716                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 16717                           ;	Table Read Protection bit
 16718                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 16719                           ;	Table Read Protection bit
 16720                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16721  30000C                     	org	3145740
 16722  30000C  0F                 	db	15
 16723                           
 16724                           ;Config register CONFIG7H @ 0x30000D
 16725                           ;	Boot Block Table Read Protection bit
 16726                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16727  30000D                     	org	3145741
 16728  30000D  40                 	db	64
 16729                           tosu	equ	0xFFF
 16730                           tosh	equ	0xFFE
 16731                           tosl	equ	0xFFD
 16732                           stkptr	equ	0xFFC
 16733                           pclatu	equ	0xFFB
 16734                           pclath	equ	0xFFA
 16735                           pcl	equ	0xFF9
 16736                           tblptru	equ	0xFF8
 16737                           tblptrh	equ	0xFF7
 16738                           tblptrl	equ	0xFF6
 16739                           tablat	equ	0xFF5
 16740                           prodh	equ	0xFF4
 16741                           prodl	equ	0xFF3
 16742                           indf0	equ	0xFEF
 16743                           postinc0	equ	0xFEE
 16744                           postdec0	equ	0xFED
 16745                           preinc0	equ	0xFEC
 16746                           plusw0	equ	0xFEB
 16747                           fsr0h	equ	0xFEA
 16748                           fsr0l	equ	0xFE9
 16749                           wreg	equ	0xFE8
 16750                           indf1	equ	0xFE7
 16751                           postinc1	equ	0xFE6
 16752                           postdec1	equ	0xFE5
 16753                           preinc1	equ	0xFE4
 16754                           plusw1	equ	0xFE3
 16755                           fsr1h	equ	0xFE2
 16756                           fsr1l	equ	0xFE1
 16757                           bsr	equ	0xFE0
 16758                           indf2	equ	0xFDF
 16759                           postinc2	equ	0xFDE
 16760                           postdec2	equ	0xFDD
 16761                           preinc2	equ	0xFDC
 16762                           plusw2	equ	0xFDB
 16763                           fsr2h	equ	0xFDA
 16764                           fsr2l	equ	0xFD9
 16765                           status	equ	0xFD8

Data Sizes:
    Strings     365
    Constant    197
    Data        7
    BSS         443
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     121
    BANK0           128    119     128
    BANK1           256    191     232
    BANK2           256      0     134
    BANK3           256      0     128
    BANK4           256      0     134
    BANK5           244      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_52(CODE[3]), STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_52(CODE[3]), STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_printf(BANK0[2]), main@fno(BANK1[22]), 
		 -> put_rc@str(CODE[69]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_printf(BANK0[2]), main@fno(BANK1[22]), 
		 -> put_rc@str(CODE[69]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1658_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), main@fno(BANK1[22]), put_rc@str(CODE[69]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), main@fno(BANK1[22]), put_rc@str(CODE[69]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(BANK0[2]), main@fno(BANK1[22]), put_rc@str(CODE[69]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    memset@dest	PTR void  size(2) Largest target is 134
		 -> RxFifo.buff(BANK2[128]), RxFifo(BANK2[134]), 

    memset@s	PTR unsigned char  size(2) Largest target is 134
		 -> RxFifo.buff(BANK2[128]), RxFifo(BANK2[134]), 

    disk_readp@buff	PTR unsigned char  size(2) Largest target is 128
		 -> pf_readdir@dir(BANK1[32]), pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), pf_mount@buf(BANK0[36]), 
		 -> get_fat@buf(BANK0[4]), NULL(NULL[0]), Line(BANK3[128]), 

    xatoi@str	PTR PTR unsigned char  size(2) Largest target is 2
		 -> main@ptr(BANK1[2]), 

    xatoi@res	PTR long  size(2) Largest target is 4
		 -> main@p2(BANK1[4]), main@p1(BANK1[4]), 

    put_dump@lp	PTR const unsigned long  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    put_dump@sp	PTR const unsigned short  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    put_dump@buff	PTR const void  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    put_dump@bp	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    sp__memset	PTR void  size(2) Largest target is 134
		 -> RxFifo.buff(BANK2[128]), RxFifo(BANK2[134]), 

    uart_gets@buff	PTR unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    pf_readdir@fno	PTR struct . size(2) Largest target is 22
		 -> main@fno(BANK1[22]), 

    pf_readdir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    pf_readdir@dj	PTR struct . size(2) Largest target is 17
		 -> main@dir(BANK1[16]), 

    pf_readdir@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    pf_opendir@path	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    pf_opendir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    pf_opendir@dj	PTR struct . size(2) Largest target is 17
		 -> main@dir(BANK1[16]), 

    pf_opendir@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    pf_lseek@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    pf_read$894	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), Line(BANK3[128]), 

    pf_read@br	PTR unsigned int  size(2) Largest target is 2
		 -> main@s1(BANK1[2]), 

    pf_read@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    pf_read@buff	PTR void  size(2) Largest target is 128
		 -> NULL(NULL[0]), Line(BANK3[128]), 

    pf_read@rbuff	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), Line(BANK3[128]), 

    pf_open@path	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    pf_open@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    pf_mount@fs	PTR struct . size(2) Largest target is 42
		 -> main@fs(BANK1[42]), 

    check_fs@buf	PTR unsigned char  size(2) Largest target is 36
		 -> pf_mount@buf(BANK0[36]), 

    follow_path@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    follow_path@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    follow_path@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    get_fileinfo@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK1[32]), 

    get_fileinfo@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    get_fileinfo@dj	PTR struct . size(2) Largest target is 17
		 -> main@dir(BANK1[16]), 

    get_fileinfo@fno	PTR struct . size(2) Largest target is 22
		 -> main@fno(BANK1[22]), 

    get_fileinfo@p	PTR unsigned char  size(2) Largest target is 22
		 -> fno.fname(COMRAM[13]), main@fno(BANK1[22]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK0[2]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    create_name@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    create_name@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_read@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_read@dj	PTR struct . size(2) Largest target is 17
		 -> main@dir(BANK1[16]), 

    dir_read@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK1[32]), 

    dir_find@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_find@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    dir_find@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    dir_next@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_next@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    dir_next@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    dir_rewind@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_rewind@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    dir_rewind@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    get_clust@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    get_clust@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    clust2sect@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    FatFs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    get_fat@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    mem_set@dst	PTR void  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    main@ptr	PTR unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    S179$fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    put_rc@p	PTR const unsigned char  size(2) Largest target is 69
		 -> put_rc@str(CODE[69]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _xatoi->___lmul
    _uart_gets->_printf
    _put_rc->_printf
    _put_dump->_printf
    _put_drc->_printf
    _dir_rewind->_clust2sect
    _create_name->_mem_set
    _disk_initialize->_send_cmd
    _disk_readp->_printf
    _send_cmd->_send_cmd2
    _send_cmd2->_xmit_spi
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _atoi->_isspace
    _clust2sect->___lmul

Critical Paths under _isr_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_pf_mount
    _uart_gets->_printf
    _put_rc->_printf
    _put_dump->_printf
    _put_drc->_printf
    _pf_readdir->_dir_read
    _dir_read->_dir_next
    _pf_read->_get_fat
    _pf_opendir->_follow_path
    _pf_open->_follow_path
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_next->_get_fat
    _pf_mount->_check_fs
    _check_fs->_disk_readp
    _pf_lseek->_get_fat
    _get_fat->_disk_readp
    _disk_readp->_printf
    _printf->_vfprintf

Critical Paths under _isr_high in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_pf_open

Critical Paths under _isr_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               112   112      0  754972
                                             85 BANK1    106   106      0
                    _disk_initialize
                         _disk_readp
                          _gpio_init
                           _pf_lseek
                           _pf_mount
                            _pf_open
                         _pf_opendir
                            _pf_read
                         _pf_readdir
                             _printf
                            _put_drc
                           _put_dump
                             _put_rc
                           _pwm_Init
                        _pwm_setDuty
                          _pwm_start
                           _pwm_stop
                          _uart_gets
                          _uart_init
                              _xatoi
 ---------------------------------------------------------------------------------
 (1) _xatoi                                               13     9      4    1732
                                             17 COMRAM    13     9      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_gets                                           13     9      4   36580
                                             16 BANK0     13     9      4
                             _memset
                             _printf
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6     947
                                              5 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _pwm_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm_setDuty                                          4     2      2     196
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _pwm_Init                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _put_rc                                               4     4      0   35140
                                             16 BANK0      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _put_dump                                            22    12     10   36380
                                             16 BANK0     22    12     10
                             _printf
 ---------------------------------------------------------------------------------
 (1) _put_drc                                              1     1      0   34976
                                             16 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _pf_readdir                                          51    47      4  130144
                                             92 BANK0      4     0      4
                                              0 BANK1     47    47      0
                           _dir_next
                           _dir_read
                         _dir_rewind
                       _get_fileinfo
 ---------------------------------------------------------------------------------
 (2) _get_fileinfo                                        36    30      6     965
                                              5 COMRAM    36    30      6
 ---------------------------------------------------------------------------------
 (2) _dir_read                                            11     7      4   83869
                                             81 BANK0     11     7      4
                           _dir_next
                         _disk_readp
 ---------------------------------------------------------------------------------
 (1) _pf_read                                             36    30      6   84526
                                             64 BANK0     36    30      6
                         _clust2sect
                         _disk_readp
                            _get_fat
 ---------------------------------------------------------------------------------
 (1) _pf_opendir                                          51    47      4   92986
                                             97 BANK0      4     0      4
                                              0 BANK1     47    47      0
                         _dir_rewind
                        _follow_path
                          _get_clust
 ---------------------------------------------------------------------------------
 (1) _pf_open                                             87    85      2   91500
                                             97 BANK0      2     0      2
                                              0 BANK1     85    85      0
                        _follow_path
                          _get_clust
 ---------------------------------------------------------------------------------
 (2) _follow_path                                          8     2      6   90242
                                             89 BANK0      8     2      6
                        _create_name
                           _dir_find
                         _dir_rewind
                          _get_clust
 ---------------------------------------------------------------------------------
 (2) _get_clust                                           18    14      4     365
                                              5 COMRAM    16    12      4
 ---------------------------------------------------------------------------------
 (3) _dir_find                                             8     4      4   85874
                                             81 BANK0      8     4      4
                           _dir_next
                         _dir_rewind
                         _disk_readp
                            _mem_cmp
 ---------------------------------------------------------------------------------
 (4) _mem_cmp                                             14     8      6     364
                                              5 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (2) _dir_rewind                                          16    14      2    1675
                                             28 COMRAM    16    14      2
                         _clust2sect
 ---------------------------------------------------------------------------------
 (3) _dir_next                                            17    15      2   42885
                                             64 BANK0     17    15      2
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (3) _create_name                                         17    13      4    1234
                                             13 COMRAM    16    12      4
                            _mem_set
 ---------------------------------------------------------------------------------
 (4) _mem_set                                              8     2      6     318
                                              5 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _pf_mount                                            77    75      2   86695
                                             42 BANK0     77    75      2
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                         _disk_readp
 ---------------------------------------------------------------------------------
 (2) _disk_initialize                                     12    12      0    1755
                                             20 COMRAM    12    12      0
                          _dly_100us
                           _init_spi
                            _rcv_spi
                           _send_cmd
 ---------------------------------------------------------------------------------
 (3) _init_spi                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dly_100us                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_fs                                            10     4      6   41022
                                             32 BANK0     10     4      6
                         _disk_readp
 ---------------------------------------------------------------------------------
 (1) _pf_lseek                                            39    35      4   44003
                                             64 BANK0     39    35      4
                            ___lldiv
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (4) _get_fat                                             32    28      4   40950
                                             32 BANK0     32    28      4
                         _disk_readp
 ---------------------------------------------------------------------------------
 (3) _disk_readp                                          16     6     10   40290
                                             16 BANK0     16     6     10
                             _printf
                            _rcv_spi
                           _send_cmd
 ---------------------------------------------------------------------------------
 (4) _send_cmd                                             7     3      4    1290
                                             13 COMRAM     7     3      4
                            _rcv_spi
                          _send_cmd2
                           _xmit_spi
 ---------------------------------------------------------------------------------
 (5) _send_cmd2                                            7     3      4     345
                                              6 COMRAM     7     3      4
                            _rcv_spi
                           _xmit_spi
 ---------------------------------------------------------------------------------
 (5) _xmit_spi                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _rcv_spi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   34945
                                            115 COMRAM     2     2      0
                                              6 BANK0     10     0     10
                            _rcv_spi (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   32032
                                            113 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           55    49      6   31466
                                             72 COMRAM    41    35      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7303
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6595
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              5 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              5 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    1675
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2670
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7449
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5003
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2015
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1515
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1815
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     712
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _clust2sect                                          11     7      4    1036
                                             17 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     620
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     564
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _isr_high                                            5     5      0     114
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _disk_initialize
     _dly_100us
     _init_spi
     _rcv_spi
     _send_cmd
       _rcv_spi
       _send_cmd2
         _rcv_spi
         _xmit_spi
       _xmit_spi
   _disk_readp
     _printf
       _rcv_spi (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit
           _stoa
             _fputc
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
     _rcv_spi
     _send_cmd
   _gpio_init
   _pf_lseek
     ___lldiv
     _clust2sect
       ___lmul
     _get_fat
       _disk_readp
   _pf_mount
     ___lldiv
     ___lmul
     _check_fs
       _disk_readp
     _disk_initialize
     _disk_readp
   _pf_open
     _follow_path
       _create_name
         _mem_set
       _dir_find
         _dir_next
           _clust2sect
           _get_fat
         _dir_rewind
           _clust2sect
         _disk_readp
         _mem_cmp
       _dir_rewind
       _get_clust
     _get_clust
   _pf_opendir
     _dir_rewind
     _follow_path
     _get_clust
   _pf_read
     _clust2sect
     _disk_readp
     _get_fat
   _pf_readdir
     _dir_next
     _dir_read
       _dir_next
       _disk_readp
     _dir_rewind
     _get_fileinfo
   _printf
   _put_drc
     _printf
   _put_dump
     _printf
   _put_rc
     _printf
   _pwm_Init
   _pwm_setDuty
   _pwm_start
   _pwm_stop
   _uart_gets
     _memset
     _printf
   _uart_init
   _xatoi
     ___lmul

 _isr_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0      86      12       52.3%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      80      10       50.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      86       8       52.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100     BF      E8       6       90.6%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     77      80       4      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     75      79       1       96.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     36D      14        0.0%
DATA                 0      0     36D      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jan 18 19:08:04 2022

             get_fat@clst 00A0              create_name@c 001D              create_name@i 001C  
            create_name@p 0016                        l62 5686                        l65 5758  
                      l91 5734                        l59 56F8                        l68 5754  
                      l85 5184                        l88 56C6               _pwm_setDuty 5662  
           pf_mount@bsect 00EE       ___wmul@multiplicand 0008             pf_mount@mclst 00EA  
           pf_mount@fsize 00F2             create_name@dj 000E             pf_mount@tsect 00E6  
           create_name@ni 0018             create_name@si 0019                       l120 0A14  
                     l105 08CC                       l202 4C76                       l214 4746  
                     l302 4134                       l215 46E8                       l135 0B8E  
                     l208 4FE8                       l313 15C8                       l306 463A  
                     l330 1522                       l227 2DCA                       l180 5590  
                     l164 0E8E                       l325 1474                       l238 43EC  
                     l334 3E5C                       l342 1E5A                       l254 3FCA  
                     l600 2B9A                       l512 25A6                       l194 3398  
                     l602 2B0C                       l363 1A58                       l611 2BB8  
                     l275 3530                       l187 51F6                       l347 1D1C  
                     l540 573E                       l188 51FE                       l508 26B6  
                     l365 1652                       l381 49D6                       l470 539A  
                     l518 25CE                       l543 5748                       l287 2938  
                     l464 5712                       l552 56FC                       l632 3858  
                     l392 48C6                       l385 49FA                       l554 570A  
                     l546 56CE                       l562 50E6                       l458 451E  
                     l635 56AC                       l467 5724                       l555 570E  
                     l571 4D3A                       l395 491A                       l548 56DC  
                     l549 56E0                       l389 4918                       l662 4F36  
                     l646 52CA                       l566 5102                       l574 4D1C  
                     l494 2FD6                       l647 52DA                       l569 4CB8  
                     l497 2434                       l762 4298                       l595 2AA6  
                     l669 4F46                       l749 3B70                       _GIE 007F97  
                     _PR2 000FCB                       _abs 54DE                       _pad 4D3C  
                     wreg 000FE8              disk_readp@bc 009E              disk_readp@rc 009D  
       disk_initialize@ty 001D            create_name@cvt 7B8D            create_name@sfn 001A  
                    ?_abs 0018                      l1310 3CE6                      l1400 35B2  
                    l1080 4836                      l1073 4816                      l1402 35BA  
                    l1090 4BA8                      l1411 3678                      l1083 4B88  
                    l1323 5660                      l1412 36C0                      l1501 5514  
                    l1421 300E                      l1431 31D6                      l1423 3016  
                    l1504 551C                      l1416 36C8                      l1601 53F0  
                    l1362 4D80                      l1532 39E0                      l1612 55C8  
                    l1436 2170                      l1365 4DC2                      l1373 1EFA  
                    l1461 240C                      l1445 220E                      l1606 53F8  
                    l1438 2178                      l1535 39E8                      l1367 4DFC  
                    l1375 1F02                      l1544 5638                      l1552 544A  
                    l1393 2138                      l5001 2A08                      l1538 5558  
                    l1459 23AA                      l5011 2A7E                      l5003 2A0E  
                    l1573 507E                      l1581 54DC                      l5021 2A96  
                    l5005 2A20                      l5101 26C4                      l1558 5600  
                    l1478 07D6                      l1591 4AD8                      l5031 2AF8  
                    l5023 2AB4                      l5007 2A46                      l5111 26FA  
                    l5103 26E6                      l1496 5334                      l1497 533C  
                    l5041 2B34                      l5033 2B04                      l5025 2AC0  
                    l5017 2A82                      l5009 2A58                      l5121 2732  
                    l1587 5498                      l5051 2B9E                      l5043 2B5A  
                    l5035 2B18                      l5027 2AC8                      l5019 2A94  
                    l5131 2772                      l5123 2736                      l5115 2710  
                    l5053 2BA0                      l5045 2B6C                      l5037 2B1C  
                    l5029 2AD0                      l5141 278A                      l5133 2776  
                    l5125 2738                      l5117 2722                      l5109 26EA  
                    l5301 5756                      l5055 2BA4                      l5047 2B92  
                    l5039 2B22                      l5151 27B2                      l5119 2726  
                    l5127 2748                      l5303 5752                      l4441 56CA  
                    l5049 2B9A                      l7001 2BC2                      l5145 27A0  
                    l5129 2766                      l5153 27C2                      l5161 292C  
                    l5321 533E                      l5401 24D6                      l4443 56FA  
                    l7011 2C1A                      l7003 2BE0                      l5155 27DE  
                    l5147 27AC                      l5139 277A                      l5251 3C2A  
                    l5243 3B90                      l5331 5392                      l5323 5342  
                    l5403 24FC                      l4701 5272                      l6301 500E  
                    l4445 570C                      l4621 4CB2                      l4613 4C7A  
                    l7021 2C96                      l7013 2C38                      l7005 2BF2  
                    l7101 3F4C                      l5157 28A8                      l5149 27B0  
                    l5261 3C8A                      l5245 3B9C                      l5333 5394  
                    l5325 538C                      l5421 254C                      l5413 2520  
                    ?_pad 0017                      l5319 5726                      l5271 4EA4  
                    l4703 5282                      l6303 5018                      l6311 549A  
                    l4631 4CE6                      l4615 4C88                      l7031 2D3C  
                    l7023 2CEA                      l7015 2C70                      l7007 2C14  
                    l7111 3F82                      l5159 28EA                      l5263 3CBE  
                    l5255 3C44                      l5239 3B72                      l5335 5396  
                    l5327 538E                      l5415 2530                      l5407 2504  
                    l5423 2554                      l5281 4EEC                      l5273 4EB4  
                    l4705 5290                      l6401 41D4                      l6305 5036  
                    l6313 54A6                      l6321 5458                      l4641 4D18  
                    l4633 4CF8                      l4625 4CBA                      l4617 4C8A  
                    l7025 2D1A                      l7041 2DB8                      l7121 3FCC  
                    l7105 3F5E                      l7113 3FA4                      l7201 513A  
                    l5265 3CCA                      l5257 3C70                      l5249 3BD2  
                    l5337 5398                      l5329 5390                      l5433 25A2  
                    l5417 2540                      l5409 2514                      l5425 257E  
                    l5291 4F30                      l5283 4EF6                      l5275 4ECA  
                    l4707 52A0                      l6403 41E2                      l6411 4248  
                    l6307 506C                      l6315 54B8                      l6323 545C  
                    l4571 5082                      l4643 4D22                      l4635 4CFC  
                    l4627 4CBE                      l4619 4CA2                      l7043 2DC8  
                    l7027 2D36                      l7051 42BA                      l7131 4010  
                    l7123 3FD0                      l7115 3FB4                      l7107 3F6E  
                    l5099 26B8                      l7203 513C                      l5267 3CD0  
                    l7211 43EE                      l5451 2610                      l5435 25BA  
                    l5427 258E                      l5285 4F14                      l5277 4ED2  
                    l4709 52AA                      l4741 4BBE                      l6333 5688  
                    l6501 5602                      l6341 39EE                      l6413 4258  
                    l6405 4210                      l6317 54BC                      l6325 548C  
                    l6421 4754                      l4581 50C2                      l4573 5084  
                    l4645 4D30                      l4637 4D0E                      l4629 4CE2  
                    l4901 33AE                      l7037 2D6A                      l7061 434C  
                    l7141 4076                      l7133 4026                      l7125 3FD6  
                    l7117 3FC8                      l7205 514E                      l5293 56E4  
                    l5269 3CD4                      l7213 43F8                      l5461 269A  
                    l5453 2646                      l5445 25FA                      l5437 25CA  
                    l5287 4F24                      l5279 4EDE                      l4743 4C00  
                    l6335 56A4                      l6511 5440                      l6351 3A4E  
                    l6343 39FC                      l6415 4278                      l6407 4230  
                    l6319 544C                      l6431 47AE                      l6423 4772  
                    l4591 50EC                      l4583 50C6                      l4575 5088  
                    l4639 4D12                      l4751 555A                      l4911 33F6  
                    l4903 33CA                      l7039 2D86                      l7063 4358  
                    l7055 42C2                      l7047 429A                      l7151 40B6  
                    l7135 403E                      l7127 3FF0                      l7303 2F94  
                    l7207 516A                      l5295 56F0                      l7223 443C  
                    l7215 440E                      l5439 25E2                      l5455 2668  
                    l5391 2474                      l5383 240E                      l5289 4F26  
                    l6513 5444                      l6505 53FA                      l6361 3A98  
                    l6353 3A52                      l6345 3A1C                      l6409 4242  
                    l6521 1EA4                      l6601 35F4                      l6433 47DC  
                    l6425 477A                      l6441 4ADA                      l6329 5592  
                    l4593 50FA                      l4585 50D8                      l4577 50AC  
                    l7401 1494                      l7321 0FBE                      l7313 0F98  
                    l4753 5566                      l4921 3442                      l4913 33F8  
                    l4905 33D2                      l4761 5196                      l7073 43C8  
                    l7065 4368                      l7057 4338                      l7049 42AA  
                    l7145 408A                      l7161 4132                      l7137 404E  
                    l7129 400A                      l7081 3E5E                      l7209 56B2  
                    l7305 2FCA                      l5297 56F4                      l7225 4450  
                    l7233 447C                      l5457 2678                      l5393 2478  
                    l5385 2412                      l4747 4C14                      l4739 4BAA  
                    l6507 53FE                      l6371 3B08                      l6363 3AA6  
                    l6355 3A5E                      l6347 3A20                      l6339 39EA  
                    l6531 1F0A                      l6523 1EC4                      l6611 365A  
                    l6603 3612                      l6435 47FC                      l6427 478E  
                    l6419 4748                      l6451 4B50                      l6443 4AF8  
                    l4595 5100                      l4587 50DC                      l4579 50B0  
                    l7171 4564                      l7331 1044                      l7323 0FCE  
                    l7315 0FA2                      l4755 5572                      l4923 3454  
                    l4915 3408                      l4907 33D6                      l4771 4654  
                    l4763 519E                      l7075 43D8                      l7067 4370  
                    l4851 4F48                      l7155 40E2                      l7147 40A2  
                    l7139 405E                      l7411 3CE8                      l7091 3EFE  
                    l7083 3E68                      l5299 5662                      l7251 4516  
                    l7235 4492                      l7227 4462                      l7243 44E0  
                    l7219 4424                      l5459 2688                      l5395 249A  
                    l5387 2426                      l6509 5412                      l6373 3B1A  
                    l6365 3AB8                      l6357 3A7C                      l6349 3A2E  
                    l6293 5712                      l6461 4D5E                      l6541 1F42  
                    l6533 1F1C                      l6525 1ED2                      l6517 1E5C  
                    l6605 361E                      l6437 47FE                      l6429 479C  
                    l6453 4B70                      l6445 4B00                      l6621 2FD8  
                    l6701 22D0                      l4589 50E2                      l7181 45AE  
                    l7173 45A8                      l7165 4520                      l7405 15BE  
                    l7333 1056                      l7325 0FEE                      l7317 0FB8  
                    l4757 5576                      l4941 34B2                      l4925 346A  
                    l4917 341E                      l4909 33E6                      l4781 46B6  
                    l4773 4670                      l4765 51B8                      l7069 438A  
                    l4861 4FD8                      l7157 40FC                      l7421 3D22  
                    l7413 3D04                      l7093 3F0E                      l7085 3EDE  
                    l7261 2E02                      l7237 44C8                      l7229 4472  
                    l8061 2568                      l5397 24AC                      l5389 2462  
                    l6367 3AE6                      l6359 3A84                      l6375 3B20  
                    l6391 416C                      l6383 4136                      l6295 5720  
                    l6471 4DA4                      l6463 4D6C                      l6543 1F48  
                    l6551 203A                      l6535 1F2A                      l6527 1ED4  
                    l6519 1E7C                      l6615 368A                      l6607 3652  
                    l6439 4810                      l6455 4B82                      l6447 4B14  
                    l6631 3046                      l6623 2FE6                      l6711 239C  
                    l6703 232E                      l7167 455E                      l7407 15C6  
                    l7343 1100                      l7335 10C8                      l7327 0FFE  
                    l4943 34B8                      l4927 3476                      l4919 3430  
                    l4775 4686                      l4767 463C                      l4759 5186  
                    l4855 4F48                      l7159 4104                      l7431 3D6A  
                    l7423 3D44                      l7511 1D80                      l7503 1CE8  
                    l7095 3F16                      l8063 2FAC                      l7271 2E62  
                    l7263 2E24                      l7255 2DCC                      l7247 44F0  
                    l7239 44D8                      l5399 24D2                      l8055 09F0  
                    l6377 3B30                      l6369 3B06                      l6393 417A  
                    l6385 413A                      l6481 54F8                      l6297 4FEA  
                    l6473 4DD0                      l6465 4D78                      l6457 4D3C  
                    l6553 2054                      l6561 20B4                      l6545 1FCA  
                    l6537 1F30                      l6529 1EEE                      l6617 369E  
                    l6609 3656                      l6449 4B22                      l6641 30D8  
                    l6633 3050                      l6625 2FE8                      l6713 23B8  
                    l6705 234A                      l6801 00D0                      l8065 338A  
                    l7193 4638                      l7185 45B4                      l4961 5740  
                    l7361 122E                      l7345 1110                      l7329 103A  
                    l7337 10E8                      l4945 34C8                      l4929 3486  
                    l4953 34F0                      l4793 4704                      l4777 46B0  
                    l4769 4644                      l4857 4F82                      l4849 4F48  
                    l7441 3E36                      l7433 3D78                      l7425 3D54  
                    l7417 3D0A                      l7513 1D8C                      l7505 1D50  
                    l7097 3F28                      l7089 3EF2                      l7281 2ED0  
                    l7273 2E7E                      l7265 2E2A                      l7257 2DEE  
                    l7249 450C                      l8057 0F20                      l8067 3916  
                    l6731 3892                      l6723 385A                      l6379 3B50  
                    l6395 419A                      l6387 4148                      l6299 4FFC  
                    l6475 4DE4                      l6467 4D8C                      l6459 4D4A  
                    l6571 20F8                      l6563 20C6                      l6555 2072  
                    l6547 1FD0                      l6539 1F38                      l6619 36A2  
                    l6651 31A0                      l6635 3056                      l6643 313C  
                    l6627 3002                      l6483 55CA                      l6491 539C  
                    l6715 23BE                      l6707 2368                      l6803 00F0  
                    l6811 0156                      l7187 45F0                      l4971 294C  
                    l4963 293A                      l7371 12E6                      l7363 1278  
                    l7355 1156                      l7339 10FA                      l4955 352E  
                    l4947 34D8                      l4795 4728                      l4787 46CC  
                    l4859 4F94                      l7443 3E4A                      l7419 3D1A  
                    l7611 4976                      l7603 491C                      l7531 1E36  
                    l7515 1D94                      l7507 1D66                      l7451 1A6A  
                    l7099 3F3A                      l7291 2F26                      l7275 2E9A  
                    l7283 2ED6                      l7267 2E48                      l7259 2DF6  
                    l8059 0F7E                      l6741 38E8                      l6733 38C8  
                    l6725 386E                      l6397 41B8                      l6389 4168  
                    l6469 4DA0                      l6573 2100                      l6565 20D4  
                    l6557 208C                      l6549 1FD6                      l6581 3544  
                    l6645 314E                      l6653 31AE                      l6637 30CC  
                    l6629 303E                      l6717 23CE                      l6709 2382  
                    l6661 214A                      l6901 07C4                      l6821 021E  
                    l6813 017A                      l6805 00FE                      l7541 15E6  
                    l4981 29AE                      l4973 294E                      l4965 293E  
                    l7373 1358                      l7365 1288                      l7357 118E  
                    l7349 1116                      l4949 34DC                      l4797 4744  
                    l7445 3E5A                      l7437 3D7E                      l7429 3D5A  
                    l7621 49E8                      l7613 4986                      l7605 4938  
                    l7525 1E0C                      l7517 1DE8                      l7509 1D6E  
                    l7533 1E46                      l7461 1AAE                      l7453 1A7A  
                    l7293 2F42                      l7285 2EF8                      l7277 2EA6  
                    l7269 2E54                      l7197 5108                      l7701 09A6  
                    l6751 3962                      l6743 38F0                      l6735 38CC  
                    l6727 3872                      l6399 41C0                      l6479 54DE  
                    l6567 20DA                      l6575 2110                      l6559 20A6  
                    l6591 3582                      l6583 354C                      l6647 316C  
                    l6639 30D2                      l6487 551E                      l6495 53D2  
                    l6719 23E4                      l6671 21BE                      l6663 2164  
                    l6831 0344                      l6823 0254                      l6815 019E  
                    l6911 52F2                      l7551 160C                      l4959 5736  
                    l4991 29C6                      l4975 295E                      l4967 2940  
                    l7391 1470                      l7375 1434                      l7367 12B0  
                    l7359 1200                      l7439 3DA8                      l7615 4996  
                    l7623 49F8                      l7607 4940                      l7535 1E58  
                    l7527 1E26                      l7519 1DF8                      l7471 1B3A  
                    l7455 1A8E                      l7631 485C                      l7295 2F4A  
                    l7287 2F00                      l7279 2EBC                      l7199 511A  
                    l7711 0A06                      l7703 09AE                      l6745 38F8  
                    l6729 3876                      l6569 20EC                      l6593 3590  
                    l6585 355E                      l6649 3186                      l6497 53E4  
                    l6681 2202                      l6673 21C8                      l6665 218E  
                    l6657 213A                      l6841 03E2                      l6833 0368  
                    l6825 028A                      l6817 01E6                      l6809 0144  
                    l6913 5318                      l6921 36CA                      l7561 16EA  
                    l7553 1636                      l7545 15EC                      l4993 29D6  
                    l4977 2962                      l4969 2948                      l7377 1450  
                    l7369 12D0                      l7617 49A4                      l7609 4956  
                    l7529 1E2E                      l7481 1C0E                      l7473 1B74  
                    l7465 1AB4                      l7449 1A5A                      l7641 48C2  
                    l7633 4872                      l7297 2F6E                      l7289 2F1C  
                    l7801 0CF8                      l7721 0A58                      l7713 0A26  
                    l7705 09B6                      l6755 39A0                      l6747 392C  
                    l6739 38D2                      l6587 3566                      l6579 3532  
                    l6771 4A32                      l6691 228E                      l6675 21CE  
                    l6667 2196                      l6659 2148                      l6851 04F2  
                    l6843 042C                      l6835 039E                      l6827 030C  
                    l6907 52DC                      l6915 563A                      l6931 3720  
                    l6923 36DA                      l7571 18A0                      l7563 1774  
                    l7555 1682                      l7547 1606                      l7539 15CA  
                    l4995 29E6                      l4987 29B2                      l4979 2988  
                    l4899 339A                      l7619 49D2                      l7491 1C70  
                    l7483 1C3E                      l7475 1BBC                      l7467 1B04  
                    l7459 1A94                      l7643 48D6                      l7635 4884  
                    l7627 4838                      l7299 2F78                      l7811 0D66  
                    l7803 0D10                      l7731 0AB4                      l7723 0A72  
                    l7715 0A36                      l6757 39B2                      l6597 35DC  
                    l6589 357A                      l6781 4AB4                      l6773 4A40  
                    l6765 49FC                      l6693 22A0                      l6685 2242  
                    l6677 21D6                      l6669 21B6                      l6861 0588  
                    l6909 52E4                      l6917 5642                      l6941 3798  
                    l6933 3728                      l6925 36EC                      l7581 1918  
                    l7573 18CA                      l7565 1824                      l7557 1698  
                    l4997 29F8                      l4989 29C4                      l7397 1488  
                    l7389 1454                      l7485 1C5A                      l7477 1BCC  
                    l7493 1C8C                      l7469 1B2E                      l7645 48F2  
                    l7637 4898                      l7629 4854                      l7821 0DF0  
                    l7813 0D94                      l7805 0D14                      l7741 0AFE  
                    l7733 0AC0                      l7725 0A88                      l7717 0A40  
                    l7709 09D0                      l7661 07FA                      l7653 07D8  
                    l6759 39C4                      l6599 35F0                      l6775 4A5C  
                    l6767 4A26                      l6687 2254                      l6695 22B4  
                    l6679 21F2                      l6871 0644                      l6863 0596  
                    l6855 052A                      l6847 0464                      l6839 03BE  
                    l6791 0056                      l6951 37DC                      l6943 379C  
                    l6935 3738                      l6927 36F0                      l7591 199E  
                    l7575 18DA                      l7567 1860                      l7583 1928  
                    l7559 16D4                      l4999 2A04                      l7495 1CBC  
                    l7487 1C6A                      l7479 1BEE                      l7647 4902  
                    l7639 48B0                      l7831 0E46                      l7823 0E0A  
                    l7815 0DA6                      l7807 0D2E                      l7751 0B46  
                    l7743 0B18                      l7735 0AC4                      l7727 0A9A  
                    l7719 0A52                      l7671 084C                      l7663 080C  
                    l7655 07DE                      l6777 4A78                      l6697 22C4  
                    l6873 067A                      l6865 05D2                      l6857 054E  
                    l6849 049A                      l6793 005A                      l6785 0012  
                    l6961 384A                      l6953 37F8                      l6945 37B6  
                    l6937 3750                      l6929 3716                      l7585 1946  
                    l7569 1884                      l7497 1CD4                      l7649 4914  
                    l7841 0E9C                      l7833 0E60                      l7825 0E24  
                    l7817 0DD8                      l7809 0D54                      l7761 0B9C  
                    l7753 0B5C                      l7745 0B20                      l7737 0ACC  
                    l7729 0AA6                      l7681 08A2                      l7673 085A  
                    l7665 081A                      l7657 07E8                      l6779 4A8A  
                    l6699 22CA                      l6875 06A0                      l6883 0734  
                    l6859 0572                      l6795 007E                      l6787 0036  
                    l6955 3812                      l6947 37C8                      l6939 3762  
                    l6963 384E                      l6971 31D8                      l7587 1962  
                    l7579 18E0                      l7851 0F00                      l7843 0EB6  
                    l7835 0E70                      l7827 0E34                      l7819 0DEA  
                    l7771 0BF4                      l7763 0BA2                      l7755 0B68  
                    l7747 0B32                      l7739 0AEE                      l7691 0938  
                    l7683 08D4                      l7675 0862                      l7667 0830  
                    l7659 07EC                      l6885 0758                      l6893 0786  
                    l6877 06B0                      l6869 060E                      l6797 00B4  
                    l6789 0044                      l6965 3850                      l6957 382C  
                    l6949 37D6                      l6973 31FC                      l7597 19B2  
                    l7589 1986                      l7845 0EDC                      l7837 0E7A  
                    l7829 0E3E                      l7781 0C4C                      l7773 0C04  
                    l7757 0B6E                      l7749 0B3A                      l7765 0BB4  
                    l7693 095A                      l7685 0906                      l7677 0872  
                    l7669 083E                      l6895 0794                      l6887 0766  
                    l6879 06F8                      l6799 00C2                      l6967 3854  
                    l6959 3830                      l6983 32DE                      l6975 3226  
                    l7599 1A56                      l7847 0EE6                      l7791 0C9E  
                    l7783 0C54                      l7775 0C1E                      l7767 0BBC  
                    l7759 0B76                      l7695 096A                      l7687 0916  
                    l7679 087C                      l7855 0F5E                      l6889 077A  
                    l7785 0C5C                      l7777 0C2A                      l7793 0CA6  
                    l7769 0BCA                      l7697 0972                      l7689 0920  
                    l6899 07A0                      l6979 323C                      l7795 0CBC  
                    l7787 0C6A                      l7779 0C40                      l7699 099C  
                    l6989 336E                      l7797 0CDE                      l7789 0C94  
                    l6999 2BBA                      l7799 0CEE                      STR_1 7D74  
                    STR_2 7D8E                      STR_3 7CA1                      STR_4 7DBD  
                    STR_5 7D1F                      STR_6 7CC0                      STR_7 7CF8  
                    STR_8 7D48                      STR_9 7C52                      _LATC 000F8B  
                    u5110 5290                      u5111 528C                      u5120 52CA  
                    u5200 51F6                      u5121 52C6                      u5201 51F2  
                    u5210 4686                      u5211 4682                      u5220 46B0  
                    u6020 3B8C                      u5221 46AC                      u6021 3B88  
                    u5230 46CC                      u6030 3BCE                      u5231 46C8  
                    u6031 3BCA                      u6040 3C40                      u6200 2474  
                    u6041 3C3C                      u6201 2470                      u5170 4C00  
                    u6050 3C86                      u6210 24AC                      u5171 4BFC  
                    u6051 3C82                      u6211 24A8                      _PEIE 007F96  
                    u4700 56DC                      u5180 5590                      u5500 34C8  
                    u6060 3CE6                      u6300 260C                      u6220 2514  
                    u4701 56D8                      u5181 558C                      u5501 34C4  
                    u6061 3CE2                      u6301 2608                      u6221 2510  
                    u6070 4ECA                      u4710 570A                      u5510 34D8  
                    u5430 3408                      u5190 51B8                      u6310 2678  
                    u6230 2530                      u6071 4EC6                      u4711 5706  
                    u5511 34D4                      u5431 3404                      u5191 51B4  
                    u5335 4F84                      u6311 2674                      u6231 252C  
                    u6080 4EEC                      u8000 3186                      u5600 2A20  
                    u5520 352A                      u5440 341A                      u6320 2688  
                    u6240 2540                      u6081 4EE8                      u8001 3182  
                    u5601 2A1C                      u5521 3524                      u5441 3416  
                    u6321 2684                      u6241 253C                      u6090 4F14  
                    u8010 31A0                      u5610 2A46                      u5530 352C  
                    u5450 3430                      u6250 258E                      u6091 4F10  
                    u8011 319C                      u5611 2A42                      u5451 342C  
                    u6251 258A                      _RCIE 007CED                      u7300 54DC  
                    u8020 31AE                      u8100 2288                      u4900 50C2  
                    u5700 2B92                      u5620 2A58                      u5540 295E  
                    u5460 3442                      u6260 259E                      _RCIF 007CF5  
                    u7301 54D8                      u8021 31AA                      u8101 2282  
                    u4901 50BE                      u5701 2B8E                      u5621 2A54  
                    u5541 295A                      u5461 343E                      u6261 259A  
                    u7310 547C                      u8110 228A                      u8030 2148  
                    u4910 50D8                      u5710 2BB6                      u5630 2A7E  
                    u5550 2988                      u5470 3454                      u6270 25CA  
                    u6190 2462                      u8031 2144                      u4911 50D4  
                    u5711 2BB0                      u5631 2A7A                      u5551 2984  
                    u5471 3450                      u6271 25C6                      u6191 245E  
                    u8200 3892                      u7400 3AE6                      u7320 548C  
                    u8120 22A0                      u8040 2164                      u4920 50FA  
                    u5720 2BB8                      u5640 2AA6                      u5560 29AE  
                    u5480 3466                      u9000 40B2                      u6280 25E2  
                    u8201 388E                      u7401 3AE2                      u7321 5488  
                    u8121 229C                      u8041 2160                      u4921 50F6  
                    u5641 2AA2                      u5561 29AA                      u5481 3462  
                    u9001 40AE                      u6281 25DE                      u8210 38C8  
                    u7410 3B30                      u7250 5720                      u7330 55C2  
                    u8130 2308                      u8050 218E                      u5650 2AB4  
                    u5570 29D6                      u5490 3486                      u9010 40DE  
                    u6290 25F6                      u8211 38C4                      u7411 3B2C  
                    u7251 571C                      u7331 55BC                      u8051 218A  
                    u5651 2AB0                      u5571 29D2                      u5491 3482  
                    u9011 40DA                      u6291 25F2                      u8220 38E4  
                    u7420 4148                      u7260 4FFC                      u8300 4A8A  
                    u7500 479C                      u7340 55C4                      u8140 234A  
                    u8060 21F2                      u4940 4C88                      u5660 2AF8  
                    u5580 29E6                      u9020 40FC                      u5900 27C2  
                    u9100 4420                      u8221 38E0                      u7421 4144  
                    u7261 4FF8                      u7317 5472                      u8301 4A86  
                    u7501 4798                      u8141 2346                      u8061 21EE  
                    u4941 4C84                      u5661 2AF4                      u5581 29E2  
                    u9021 40F8                      u5901 27BE                      u9101 441C  
                    u8230 399A                      u7350 39FC                      u7430 417A  
                    u7270 500E                      u8310 4AB4                      u7510 47DC  
                    u8150 2368                      u8070 223C                      u4950 4CB2  
                    u9030 455E                      u5670 2B34                      u5590 29F8  
                    u9110 4438                      _RCIP 007CFD                      u8231 3994  
                    u7351 39F8                      u7431 4176                      u7271 500A  
                    u8311 4AB0                      u7511 47D8                      u8151 2364  
                    u8135 22F6                      u8071 2236                      u4951 4CAE  
                    u9031 455A                      u5671 2B30                      u5591 29F4  
                    u9111 4434                      u8240 399C                      u7360 3A2E  
                    u7440 41B8                      u7280 5036                      u7520 4AF8  
                    u7600 55FA                      u8160 2382                      u8080 223E  
                    u8400 0254                      u8320 0036                      u4960 4CF8  
                    u9040 45A8                      u5680 2B5A                      u5840 26E6  
                    u9200 2F3E                      u9120 4450                      u7361 3A2A  
                    u7441 41B4                      u7281 5032                      u7521 4AF4  
                    u7601 55F4                      u8161 237E                      u8401 0250  
                    u8321 0032                      u4961 4CF4                      u9041 45A4  
                    u5681 2B56                      u5841 26E2                      u9201 2F3A  
                    u9121 444C                      u8250 39B2                      u7450 41E2  
                    u7290 506C                      u7530 4B22                      u7610 55FC  
                    u8170 239C                      u8090 2254                      u8410 028A  
                    u8330 007E                      u4970 4D0E                      u9050 45F0  
                    u5690 2B6C                      u5850 270C                      u9210 2F90  
                    u9130 4462                      u8251 39AE                      u7371 3A58  
                    u7451 41DE                      u7291 5068                      u7531 4B1E  
                    u8171 2398                      u8091 2250                      u8411 0286  
                    u8331 007A                      u4971 4D0A                      u9051 45EC  
                    u5691 2B68                      u5851 2708                      u9211 2F8C  
                    u9131 445E                      u7700 5440                      u8260 39C4  
                    u7380 3A7C                      u7460 4210                      u7540 4B50  
                    u7620 5552                      u8180 23AA                      u8420 0368  
                    u8340 00C2                      u8500 5334                      u4980 4D30  
                    u9060 4634                      u9300 12E6                      u9220 0FB8  
                    u5860 2722                      u9140 4492                      u7701 543C  
                    u8261 39C0                      u7381 3A78                      u7461 420C  
                    u7541 4B4C                      u7621 554C                      u8181 23A6  
                    u8421 0364                      u8341 00BE                      u8501 5330  
                    u4981 4D2C                      u9061 4630                      u9301 12E2  
                    u9221 0FB4                      u5861 271E                      u9141 448E  
                    u7390 3AA6                      u7470 4258                      u7550 4D4A  
                    u7710 1E8C                      u8270 4A26                      u7630 5554  
                    u8190 23B8                      u8430 03E2                      u8350 013E  
                    u8510 36DA                      u9230 0FFE                      u5870 2748  
                    u9070 513A                      u9150 44C8                      u7391 3AA2  
                    u7471 4254                      u7551 4D46                      u7711 1E86  
                    u8271 4A22                      u8191 23B4                      u8431 03DE  
                    u8351 0138                      u8511 36D6                      u9231 0FFA  
                    u5871 2744                      u9071 5136                      u9151 44C4  
                    u7560 4D6C                      u7800 208C                      u7720 1E8E  
                    u8280 4A5C                      u7640 53CC                      u8440 049A  
                    u8360 0140                      u8600 37F4                      u9320 1470  
                    u9240 103A                      u9400 1AAE                      u5880 2766  
                    u9160 2E48                      u9080 514E                      u7561 4D68  
                    u7801 2088                      u8281 4A58                      u7481 474E  
                    u7641 53C6                      u8441 0496                      u8601 37F0  
                    u9321 146C                      u9241 1036                      u9401 1AAA  
                    u5881 2762                      u9161 2E44                      u9081 514A  
                    u7570 4DC2                      u7810 20A6                      u7730 1EA4  
                    u8290 4A78                      u7490 4772                      u7650 53CE  
                    u8450 054E                      u8370 0156                      u8610 382C  
                    u8530 3716                      u9330 1484                      u9250 1056  
                    u9410 1B2E                      u5890 279C                      u9170 2E7E  
                    u9090 516A                      u7571 4DBE                      u7811 20A2  
                    u7731 1EA0                      u8291 4A74                      u7491 476E  
                    u8451 054A                      u8371 0152                      u8611 3828  
                    u8531 3712                      u9331 1480                      u9315 1370  
                    u9251 1052                      u9411 1B2A                      u5891 2798  
                    u9171 2E7A                      u9091 5166             _put_dump$1127 00A0  
                    u7580 4DD0                      u7820 20B4                      u7740 1ED2  
                    u7900 35D8                      u7660 53E4                      u8460 0572  
                    u8380 017A                      u8620 384A                      u8540 3738  
                    u9260 10FA                      u8700 2C70                      u9500 1DF8  
                    u9420 1B74                      u9180 2E9A                      u7581 4DCC  
                    u7821 20B0                      u7741 1ECE                      u7901 35D4  
                    u7661 53E0                      u8461 056E                      u8381 0176  
                    u8621 3846                      u8541 3734                      u8525 36DC  
                    u9261 10F6                      u8701 2C6C                      u9501 1DF4  
                    u9421 1B70                      u9181 2E96                      u7670 5632  
                    u7590 54F8                      u7830 20C6                      u7750 1EEE  
                    u7910 3612                      u8470 0644                      u8390 019E  
                    u8550 3750                      u8630 31FC                      u9270 1110  
                    u8710 2C92                      u9350 3D04                      u9510 1E58  
                    u9430 1BA0                      u9190 2EF4              get_clust@dir 0006  
                    u7671 562C                      u7591 54F4                      u7831 20C2  
                    u7751 1EEA                      u7911 360E                      u8471 0640  
                    u8391 019A                      u8551 374C                      u8631 31F8  
                    u9271 110C                      u8711 2C8E                      u9351 3D00  
                    u9511 1E54                      u9191 2EF0                      u7680 5634  
                    u7840 20D4                      u7760 1F1C                      u7920 363E  
                    u8480 067A                      u8560 3762                      u8640 3226  
                    u9600 18CA                      u9520 15E6                      u9280 1152  
                    u8800 4348                      u9360 3D54                      u9440 1BCC  
                    u7841 20D0                      u7761 1F18                      u8481 0676  
                    u8561 375E                      u8641 3222                      u9601 18C6  
                    u9521 15E2                      u9345 1556                      u9281 114E  
                    u8801 4344                      u9361 3D50                      u9441 1BC8  
                    u7690 5412                      u7850 20EC                      u7770 1F2A  
                    u7930 3678                      u8490 0758                      u8570 3798  
                    u8650 3280                      u9610 1946                      u9530 1606  
                    u9290 118E                      u8730 2CEA                      u8810 4368  
                    u9370 3D6A                      u9450 1BEE                      u7691 540E  
                    u7851 20E8                      u7771 1F26                      u7931 3674  
                    u8491 0754                      u8571 3794                      u9611 1942  
                    u9531 1602                      u9291 118A                      u8731 2CE6  
                    u8811 4364                      u9371 3D66                      u9451 1BEA  
                    u9435 1B96                      u7780 2054                      u7940 3686  
                    u8580 37B6                      u8660 32DA                      u9620 199E  
                    u9540 1636                      u8740 2D36                      u8820 438A  
                    u9380 3D78                      u9460 1C5A                      u8900 3F3A  
                    u9700 4884                      u7781 2050                      u7941 3682  
                    u7861 353C                      u8581 37B2                      u8661 32D6  
                    u9621 199A                      u9541 1632                      u8741 2D32  
                    u8725 2CA2                      u8821 4386                      u9381 3D74  
                    u9461 1C56                      u8901 3F36                      u9701 4880  
                    u7790 2072                      u7950 36C0                      u7870 355E  
                    u8590 37C8                      u9630 1A04                      u9550 1698  
                    u8750 2D66                      u8670 2BF2                      u8830 43C4  
                    u9470 1CD4                      u9390 1A8E                      u8910 3F4C  
                    u9710 48C2                      u7791 206E                      u7951 36BC  
                    u7927 3634                      u7871 355A                      u8591 37C4  
                    u8655 3276                      u9551 1694                      u8751 2D62  
                    u8671 2BEE                      u8831 43C0                      u9471 1CD0  
                    u9391 1A8A                      u8911 3F48                      u9711 48BE  
                    u7880 3590                      u7960 2FE6                      u8680 2C14  
                    u8840 43E8                      u8760 42BA                      u9640 4938  
                    u9480 1D66                      u8920 3F5A                      u9720 48D6  
                    u9800 095A                      u7881 358C                      u7961 2FE2  
                    u8681 2C10                      u8841 43E4                      u8761 42B6  
                    u9641 4934                      u9481 1D62                      u8921 3F56  
                    u9721 48D2                      u9801 0956                      u7890 35AE  
                    u7970 3002                      u9570 16EA                      u8690 2C38  
                    u9650 4986                      u9490 1D80                      u8930 3F7E  
                    u9730 4914                      u9810 09CC                      u7891 35AA  
                    u7971 2FFE                      u9635 19FA                      u9571 16E6  
                    u8691 2C34                      u9651 4982                      u9491 1D7C  
                    u8931 3F7A                      u9731 4910                      u9811 09C8  
                    u7980 314E                      u9580 1774                      u8780 4332  
                    u9660 4996                      u8940 3FA4                      u8860 3ED8  
                    u9900 0C04                      u9820 0A36                      u9740 080A  
                    u7981 314A                      u9581 1770                      u9565 16B4  
                    u8781 432C                      u9661 4992                      u8941 3FA0  
                    u8861 3ED2                      u9901 0C00                      u9821 0A32  
                    u9741 0804                      u7990 316C                      u9590 18A0  
                    u8790 4334                      u9670 49A4                      u8950 3FB4  
                    u8870 3EDA                      u9910 0C40                      u9830 0A72  
                    u7991 3168                      u9591 189C                      u8775 4300  
                    u9671 49A0                      u8951 3FB0                      u8855 3EA6  
                    u9911 0C3C                      u9831 0A6E                      u8960 3FF0  
                    u9680 49E8                      u8880 3EEE                      u9920 0CB8  
                    u9840 0A9A                      u9760 0872            ??_get_fileinfo 000C  
                    u8961 3FEC                      u9681 49E4                      u8881 3EEA  
                    u9921 0CB4                      u9841 0A96                      u9761 086E  
                    u8970 400A                      u8890 3F0E                      u9690 4854  
                    u9930 0CEE                      u9850 0AFE                      u9770 08A2  
                    u8971 4006                      u8891 3F0A                      u9691 4850  
                    u9931 0CEA                      u9851 0AFA                      u9771 089E  
                    u9755 080C                      u8980 403E                      u9940 0D0C  
                    u9860 0B32                      u9780 08C8                      u8981 403A  
                    u9941 0D08                      u9861 0B2E                      u9781 08C4  
                    u8990 4086                      u9950 0D2E                      u9870 0B8E  
                    u9790 0916                      u8991 4082                      u9951 0D2A  
                    u9871 0B8A                      u9791 0912                      u9960 0D54  
                    u9880 0B9C                      u9961 0D50                      u9881 0B98  
                    u9970 0DA6                      u9890 0BB4                      u9971 0DA2  
                    u9891 0BB0                      u9980 0E0A                      u9981 0E06  
                    u9990 0E34                      u9991 0E30                      _TXIE 007CEC  
                    _TXIF 007CF4                      _TXIP 007CFC                      _Line 0300  
                    abs@a 0018                      _dbuf 01C1                      _atoi 385A  
                    _main 07D8                      _dtoa 1E5C                      _prec 0076  
                    _nout 00F7                      pad@i 001E                      pad@p 001B  
                    fsr1h 000FE2                      fsr2h 000FDA                      indf1 000FE7  
                    indf2 000FDF                      fsr1l 000FE1                      pad@w 0020  
                    fsr2l 000FD9                      _stoa 3532                      btemp 007A  
                    _utoa 2FD8                      _xtoa 213A                      prodh 000FF4  
                    prodl 000FF3                      start 000E             disk_readp@res 009C  
      disk_initialize@cmd 001C              ?_follow_path 00D9        disk_initialize@ocr 0016  
            ___param_bank 000000        disk_initialize@tmr 001E           create_name@path 0010  
                   ??_abs 001A             get_fileinfo@c 0028             get_fileinfo@i 0029  
                   ??_pad 001D             get_fileinfo@p 0026            pwm_Init@period 0006  
         __end_of___aodiv 3B72                     ?_atoi 000D                     ?_main 0001  
                   ?_dtoa 0022           __end_of___aomod 429A                     STR_10 7D56  
                   STR_11 7C7A                     STR_12 7D56                     STR_20 7D66  
                   STR_13 7D56                     STR_21 7DB8                     STR_30 7D1F  
                   STR_14 7CDE                     STR_15 7D56                     STR_31 7DB8  
                   STR_32 7DAC                     STR_24 7D58                     STR_16 7D0D  
                   STR_41 7DB2                     STR_25 7D9D                     STR_17 7D22  
                   STR_34 7DAC                     STR_26 7DBB                     STR_50 7DA9  
                   STR_18 7D37                     STR_27 7DB8                     STR_43 7DB2  
                   STR_19 7D82                     STR_52 7DA9                     STR_36 7DAF  
                   STR_28 7DA3                     STR_29 7D96                     STR_38 7DAF  
                   STR_46 7DB5                     STR_48 7DB5                     ?_stoa 0010  
                   u10000 0E70                     u10001 0E6C                     u10010 0E8A  
         __end_of___lldiv 4F48                     u10011 0E86                     u10020 0E9C  
                   u10021 0E98                     ?_utoa 0022                     u10037 0B70  
                   u10047 5742           __end_of___lodiv 4838                     ?_xtoa 0022  
                   _T2CON 000FCA           __end_of___lomod 4BAA                     i2l442 4E0A  
                   i2l445 4E98                     _RCREG 000FAE                     _RCSTA 000FAB  
            vfpfcnvrt@fmt 004B             get_clust@clst 0012              vfpfcnvrt@llu 006A  
                   _SPBRG 000FAF                     _TRISC 000F94                     _SSPIF 007CF3  
                   _TXREG 000FAD                     _TXSTA 000FAC                     _FatFs 00FD  
  __end_ofcreate_name@cvt 7C0D       ___lmul@multiplicand 000A           __end_of_get_fat 339A  
                   _TxRun 00FB                     _flags 0078           __end_of_mem_cmp 5200  
         __end_of_mem_set 5592                     _fputc 4FEA           __end_of_pf_read 1E5C  
         __end_of_isalpha 555A                     _fputs 549A           __end_of_isdigit 563A  
         __end_of_pf_open 3E5E                     atoi@n 001A                     pad@fp 0017  
                   atoi@s 000D                     _width 00F9                     _xatoi 240E  
                   _putch 5710                     dtoa@d 0024                     dtoa@i 0044  
                   dtoa@n 003C                     dtoa@p 0036                     dtoa@s 003A  
                   dtoa@w 0038           __end_of_islower 55CA           __end_of_isspace 544C  
            main@num_temp 0158           __end_of_rcv_spi 5710           __end_of_isupper 5602  
                   tablat 000FF5                     plusw1 000FE3                     plusw2 000FDB  
                   stoa@i 001C                     stoa@l 0024                     stoa@p 0022  
                   stoa@s 0012                     stoa@w 001E           __end_of_put_drc 56C8  
                   ttemp5 007B                     ttemp6 007E                     ttemp7 0082  
                   utoa@d 0024                     utoa@i 0040                     utoa@n 0038  
                   utoa@p 0034                     utoa@w 0036                     status 000FD8  
                   wtemp8 007B                     xtoa@c 0047                     xtoa@d 0024  
                   xtoa@i 0045                     xtoa@n 003D                     xtoa@p 0039  
                   xtoa@w 003B                     xtoa@x 002C           __end_of_strncmp 4ADA  
         __end_of_toupper 53FA          ___lodiv@dividend 0006            disk_readp@buff 0090  
            _toupper$1924 0012           __initialization 5200              __end_of_atoi 39EA  
            __end_of_main 0F98              __end_of_dtoa 213A              clust2sect@fs 001B  
            __end_of_stoa 36CA              __end_of_utoa 31D8              __end_of_xtoa 240E  
                  ??_atoi 000F            get_fileinfo@dj 0006                    ??_main 0155  
                  ??_dtoa 002C                    ??_stoa 0014                    ??_utoa 002C  
                  ??_xtoa 002D             __activetblptr 000002          ___lodiv@quotient 0016  
                  ?_fputc 0007                    ?_fputs 0010                    _CCPR1L 000FBE  
                  ?_xatoi 0012                    ?_putch 0001                    _INT0IF 007F91  
                  i2l6101 4E60                    i2l6103 4E68                    i2l6105 4E78  
                  i2l6107 4E7C                    i2l6109 4E86                    i2l6091 4E08  
                  i2l6093 4E18                    i2l6095 4E26                    i2l6097 4E38  
                  i2l6099 4E54                    _TMR2ON 007E52                    _SSPBUF 000FC9  
        __end_of_check_fs 463C      __size_of_create_name 0198  __size_of_disk_initialize 0280  
        __end_of_dir_find 43EE                    _RxFifo 0200          __end_of_dir_read 3FCC  
        __end_of_dir_next 2DCC                    _TxFifo 0400              put_dump@addr 0092  
            vfprintf@cfmt 0072              put_dump@buff 0090                    ___lmul 5272  
               ??___aodiv 0016                 ??___aomod 0016                    ___wmul 5688  
               ??___lldiv 000E                 ??___lodiv 0016                 ??___lomod 0016  
                  _memset 3B72          __end_of_init_spi 5740                    clear_0 5226  
                  clear_1 5232                    clear_2 523E                    clear_3 524A  
                  clear_4 5256          __end_of_pf_lseek 1A5A      pwm_setDuty@dutycycle 0006  
        __end_of_pf_mount 15CA      __end_of_get_fileinfo 293A                    isa$std 000001  
                  _printf 563A                    pad@buf 0019               pf_read@buff 00C0  
             pf_read@clst 00DB          __end_of_isr_high 4EA4                    main@p1 0164  
                  main@p2 015C                    _put_rc 5104                    main@s1 0190  
                  main@s2 0168                    main@s3 0162               pf_read@sect 00D3  
             pf_read@rcnt 00E0                 ??_get_fat 00A4                    main@fs 0195  
                  dtoa@fp 0022                    _strlen 544C          __end_of_send_cmd 4D3C  
               ??_mem_cmp 000C                    fputc@c 0007                 ??_mem_set 000C  
                  fputs@c 0014                    fputs@i 0015                 ??_pf_read 00C6  
                  fputs@s 0010                 ??_isalpha 0008                 ??_isdigit 0008  
               ??_pf_open 0100                 ??_islower 0008              __mediumconst 7B8C  
               ??_isspace 0008          __end_of_pwm_Init 56FA                 ??_rcv_spi 0006  
                  tblptrh 000FF7                 ??_isupper 0008                    tblptrl 000FF6  
                  tblptru 000FF8               pf_lseek@bcs 00DD               pf_lseek@ofs 00C0  
                  xatoi@c 001E                    stoa@cp 0020                    xatoi@r 0019  
                  xatoi@s 0018                    stoa@fp 0010          __end_of_vfprintf 533E  
        __end_of_put_dump 2FD8          __end_of_pwm_stop 5756                 ??_put_drc 0076  
                  utoa@fp 0022               pf_open@path 00E1                    xtoa@fp 0022  
               ??_strncmp 000C                 ??_toupper 000E          __end_of_xmit_spi 56E2  
              __accesstop 0080   __end_of__initialization 5264               pf_mount@buf 00C2  
             pf_mount@fmt 00F6           disk_readp@count 0098             ___rparam_used 000001  
          __pcstackCOMRAM 0001              __pidataBANK1 574A             __end_of_fputc 5080  
    __size_of_follow_path 016A             __end_of_fputs 54DE              ?_pwm_setDuty 0006  
           __end_of_xatoi 26B8             __end_of_putch 5726        __size_of_dly_100us 000A  
      __size_of_get_clust 00A2           get_fileinfo@dir 0008           get_fileinfo@fno 000A  
                 ??_fputc 000B                   ??_fputs 0014                   ??_xatoi 0016  
                 ??_putch 0006                __pbssBANK0 00F7                __pbssBANK1 01BF  
              __pbssBANK2 0200                __pbssBANK3 0300                __pbssBANK4 0400  
      __size_of_gpio_init 0010                   ?___lmul 0006                   ?___wmul 0006  
      __size_of_send_cmd2 0084                   _CCP1CON 000FBD         ??_disk_initialize 0015  
                 ?_memset 0006            ___lmul@product 000E                   ?_printf 0086  
                 ?_put_rc 0001                   ?_strlen 0006                _dir_rewind 463C  
      __size_of_uart_gets 0132        __size_of_uart_init 005E                 ?_check_fs 00A0  
              _disk_readp 36CA            follow_path@dir 00DB            follow_path@res 00E0  
      __size_of_vfpfcnvrt 07C6               send_cmd@cmd 0013               send_cmd@arg 000E  
             send_cmd@res 0014                 ?_dir_find 00D1                 ?_dir_read 00D1  
               ?_dir_next 00C0                   _SSPCON1 000FC6        __size_of_pwm_start 0004  
                 _SSPSTAT 000FC7                _clust2sect 4BAA          ___lomod@dividend 0006  
       __end_of_dly_100us 574A                 ?_init_spi 0001                 ?_pf_lseek 00C0  
               ?_pf_mount 00AA                 ?_isr_high 0001                 ?_send_cmd 000E  
                 __Hparam 0000                   __Lparam 0000     __size_of_get_fileinfo 0282  
       __end_of_get_clust 4FEA                 ?_pwm_Init 0001                   ___aodiv 39EA  
                 ___aomod 4136           __size_of___lmul 006A             put_dump@width 0098  
                 ___lldiv 4EA4           __size_of___wmul 0026                   ___lodiv 4748  
                 ___lomod 4ADA                 ?_put_dump 0090                 ?_vfprintf 0080  
               ?_pwm_stop 0001                   __pcinit 5200                _pf_readdir 4838  
         __size_of_memset 0176                   __ramtop 0600                 ?_xmit_spi 0001  
                 __ptext0 07D8                   __ptext1 240E                   __ptext2 533E  
                 __ptext3 43EE                   __ptext4 3B72                   __ptext5 5752  
                 __ptext6 5756                   __ptext7 5662                   __ptext8 56E2  
                 __ptext9 5104                   _get_fat 31D8                _pf_opendir 491C  
         __size_of_printf 0028         __end_of_gpio_init 5736           __size_of_put_rc 0082  
         __size_of_strlen 004E                   _mem_cmp 5186                   _mem_set 555A  
            __size_of_abs 0040              __size_of_pad 00C2                   _pf_read 1A5A  
                 _isalpha 551E                   _isdigit 5602                   _pf_open 3CE8  
              ??_check_fs 00A6                   _islower 5592                   _isspace 53FA  
                 _rcv_spi 56FA                   _isupper 55CA                   atoi@neg 0013  
              ??_dir_find 00D5                ??_dir_read 00D5                   _put_drc 56AE  
              ??_dir_next 00C2              pf_read@rbuff 00CF                   main@dir 0180  
                 main@fno 016A                   main@ofs 015A                   main@res 0194  
                 main@ptr 0192                   _strncmp 49FC            __pintcode_body 4DFE  
                 _toupper 539C      end_of_initialization 5264         __end_of_send_cmd2 5104  
                 fputc@fp 0009              _get_fileinfo 26B8                   memset@c 0008  
                 memset@k 000E                   memset@n 000A                   memset@s 0010  
           __Lmediumconst 7B8C                   int_func 4DFE                   fputs@fp 0012  
              ??_init_spi 0006                ??_pf_lseek 00C4              pf_readdir@dj 00DC  
            pf_readdir@fs 012C                ??_pf_mount 00AC              pf_readdir@sp 0120  
              ??_isr_high 0001         __end_of_uart_gets 4520         __end_of_uart_init 539C  
         ___lldiv@divisor 000A                ??_send_cmd 0012           ___lldiv@counter 0012  
            pf_lseek@clst 00E1         __end_of_vfpfcnvrt 07D8              pf_lseek@sect 00D5  
              ??_pwm_Init 0006                   postdec1 000FE5                   postdec2 000FDD  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
                 put_rc@i 0090                   put_rc@p 0092         __end_of_pwm_start 575A  
              ??_vfprintf 0072                ??_put_dump 009A                ??_pwm_stop 0006  
                 strlen@a 0008                   strlen@s 0006                dir_find@dj 00D1  
              ??_xmit_spi 0006                 _PORTBbits 000F81      __size_of_pwm_setDuty 0026  
              dir_read@dj 00D1               ?_dir_rewind 001D                dir_next@dj 00C0  
              dir_next@fs 00C9              pf_opendir@dj 00E1               ?_disk_readp 0090  
            pf_opendir@fs 012C              pf_opendir@sp 0120                 _TRISAbits 000F92  
               _TRISCbits 000F94                get_fat@buf 00BA               ?_clust2sect 0012  
        disk_readp@offset 0096          disk_readp@sector 0092             ??_create_name 0012  
        disk_initialize@n 0020                main@upmode 0157            __end_of___lmul 52DC  
             vfpfcnvrt@ap 004D               vfpfcnvrt@cp 005D               vfpfcnvrt@fp 0049  
             vfpfcnvrt@ll 0061            __end_of___wmul 56AE               ?_pf_readdir 00DC  
          clust2sect@clst 0012               ?_pf_opendir 00E1            __end_of_memset 3CE8  
          __end_of_printf 5662            __end_of_put_rc 5186            __end_of_strlen 549A  
     start_initialization 5200           ___lodiv@divisor 000E           ___lodiv@counter 001E  
             __end_of_abs 551E               __end_of_pad 4DFE                mem_cmp@cnt 000A  
              mem_cmp@dst 0006                mem_cmp@src 0008           _disk_initialize 293A  
              mem_set@cnt 000A                mem_set@dst 0006                mem_set@val 0008  
     __size_of_dir_rewind 010C             ??_follow_path 00DF       __size_of_disk_readp 0190  
     __end_of_create_name 3532               vfprintf@fmt 0082               put_dump@len 0096  
                ??___lmul 000E                  ??___wmul 000A                pf_read@btr 00C2  
             __pdataBANK1 01E1       __size_of_clust2sect 00CE                  ??_memset 000C  
              pf_lseek@fs 00E5                memset@dest 0006                  ??_printf 0074  
              pf_open@dir 0122                  ??_put_rc 0076         __end_ofput_rc@str 7C52  
              pf_open@res 0142                  ??_strlen 0008                pf_mount@fs 00AA  
             __pbssCOMRAM 0076             __pcstackBANK0 0080             __pcstackBANK1 0100  
        ___aodiv@dividend 0006         __size_of_check_fs 011C              check_fs@sect 00A2  
       __size_of_dir_find 0154         __size_of_dir_read 016E         __size_of_dir_next 0212  
     __size_of_pf_readdir 00E4                 _atoi$1842 0015                 _atoi$1843 0019  
               _atoi$1844 0017       __size_of_pf_opendir 00E0         __size_of_init_spi 000A  
       __size_of_pf_lseek 0490                 _dly_100us 5740         __size_of_pf_mount 0632  
               _dtoa$1753 0034         __size_of_isr_high 4E9C                 __pintcode 0008  
           __pmediumconst 7B8C         __size_of_send_cmd 00C4                  ?___aodiv 0006  
                ?___aomod 0006          ___aodiv@quotient 0018                  ?___lldiv 0006  
                ?___lodiv 0006                  ?___lomod 0006         __size_of_pwm_Init 0018  
               _get_clust 4F48                send_cmd2@n 000D             follow_path@dj 00D9  
     __end_of_follow_path 4136         __size_of_vfprintf 0062         __size_of_put_dump 020C  
                ?_get_fat 00A0         __size_of_pwm_stop 0004           ___lomod@divisor 000E  
                ?_mem_cmp 0006           ___lomod@counter 0016                  ?_mem_set 0006  
                ?_pf_read 00C0                  ?_isalpha 0006                  ?_isdigit 0006  
                ?_pf_open 00E1         __size_of_xmit_spi 001A                  ?_islower 0006  
                ?_isspace 0006                  ?_rcv_spi 0001                  ?_isupper 0006  
               _gpio_init 5726            _dir_rewind$703 0023                  ?_put_drc 0001  
               _init_flag 01BF   __end_of_disk_initialize 2BBA            __size_of_fputc 0096  
          __size_of_fputs 0044                  ?_strncmp 0006                  ?_toupper 000C  
          __size_of_xatoi 02AA            __size_of_putch 0016               _create_name 339A  
          ___wmul@product 000A                  _LATAbits 000F89                  _LATBbits 000F8A  
               _send_cmd2 5080              send_cmd2@cmd 000C              send_cmd2@arg 0007  
            send_cmd2@res 000B                ?_dly_100us 0001           follow_path@path 00DD  
                i2u720_40 4E18                  i2u720_41 4E14                  i2u721_40 4E26  
                i2u721_41 4E22                  i2u722_40 4E54                  i2u722_41 4E50  
                i2u723_40 4E96                  i2u723_41 4E90                  i2u724_45 4E98  
               _uart_gets 43EE                uart_gets@c 009B                uart_gets@i 0099  
               _uart_init 533E                 dir_find@c 00D7                 dir_read@a 00D9  
               dir_read@c 00DA                 dir_next@i 00CF                 _vfpfcnvrt 0012  
              ?_get_clust 0006                 _xtoa$1781 0035                 _xtoa$1782 0037  
               get_fat@fs 00BE         ___wmul@multiplier 0006                 _pwm_start 5756  
            ??_dir_rewind 001F                  _CardType 00FF              ??_disk_readp 009A  
               main@count 0160                ?_gpio_init 0001              _isspace$1869 000C  
              vfpfcnvrt@c 0069              ??_clust2sect 0016         ___lmul@multiplier 0006  
               copy_data0 5214                ?_send_cmd2 0007                put_drc@res 0090  
                __Hrparam 0000        __end_of_dir_rewind 4748                vfprintf@ap 0084  
              put_dump@bp 00A2                  __Lrparam 0000                vfprintf@fp 0080  
              put_dump@lp 009E                put_dump@sp 009C               _follow_path 3FCC  
      __end_of_disk_readp 385A                 pf_read@br 00C4                 pf_read@cs 00DF  
               pf_read@dr 00CE                 pf_read@fs 00E2                ?_uart_gets 0090  
              ?_uart_init 0001             ??_pwm_setDuty 0008                 pf_open@dj 0145  
               pf_open@fs 0143                 pf_open@sp 0116          __size_of___aodiv 0188  
        __size_of___aomod 0164          __size_of___lldiv 00A4          __size_of___lodiv 00F0  
            ??_pf_readdir 0076          __size_of___lomod 00D0                ?_vfpfcnvrt 0049  
             _pf_read$894 00D1        __end_of_clust2sect 4C78           ___aodiv@divisor 000E  
            ??_pf_opendir 0076               check_fs@buf 00A0           ___aodiv@counter 0016  
              ?_pwm_start 0001          __size_of_get_fat 01C2                 isr_high@d 0003  
               isr_high@i 0004                  _check_fs 4520      _disk_initialize$1200 001A  
        __size_of_mem_cmp 007A          __size_of_mem_set 0038          __size_of_pf_read 0402  
        __size_of_isalpha 003C          __size_of_isdigit 0038          __size_of_pf_open 0176  
        __size_of_islower 0038          __size_of_isspace 0052          __size_of_rcv_spi 0016  
                __ptext10 2DCC                  __ptext11 56AE                  __ptext20 429A  
                __ptext12 4838                  __ptext21 5186                  __ptext13 26B8  
                __ptext30 4520                  __ptext22 463C                  __ptext14 3E5E  
                __ptext31 15CA                  __ptext23 2BBA                  __ptext15 1A5A  
                __ptext40 0012                  __ptext32 31D8                  __ptext24 339A  
                __ptext16 491C                  __ptext41 213A                  __ptext33 36CA  
                __ptext25 555A                  __ptext17 3CE8                  __ptext50 3532  
                __ptext42 539C                  __ptext34 4C78                  __ptext26 0F98  
                __ptext18 3FCC                  __ptext51 1E5C                  __ptext43 5592  
                __ptext35 5080                  __ptext27 293A                  __ptext19 4F48  
                __ptext60 385A                  __ptext52 4D3C                  __ptext44 55CA  
                __ptext36 56C8                  __ptext28 5736                  __ptext61 53FA  
                __ptext53 544C                  __ptext45 551E                  __ptext37 56FA  
                __ptext29 5740                  __ptext62 5602                  __ptext54 549A  
                __ptext46 2FD8                  __ptext38 563A                  __ptext63 5688  
                __ptext55 4FEA                  __ptext47 4ADA                  __ptext39 52DC  
                __ptext64 4BAA                  __ptext56 5710                  __ptext48 4748  
                __ptext65 5272                  __ptext57 54DE                  __ptext49 49FC  
                __ptext66 4EA4                  __ptext58 4136                  __ptext67 5726  
                __ptext59 39EA                  _dir_find 429A          __size_of_isupper 0038  
                _dir_read 3E5E                  _dir_next 2BBA          ?_disk_initialize 0001  
               send_cmd@n 0012          __size_of_put_drc 001A          __size_of_strncmp 00DE  
        __size_of_toupper 005E             __size_of_atoi 0190             __size_of_main 07C0  
           __size_of_dtoa 02DE                  _init_spi 5736                  _pf_lseek 15CA  
           __size_of_stoa 0198                  _pf_mount 0F98             __size_of_utoa 0200  
           __size_of_xtoa 02D4        __end_of_pf_readdir 491C                  _isr_high 0008  
      __end_of_pf_opendir 49FC                  _send_cmd 4C78               ??_dly_100us 0006  
               stoa@F1141 01E1                  isa$xinst 000000                  _pwm_Init 56E2  
                int$flags 007A                  _vfprintf 52DC                  _put_dump 2DCC  
                _pwm_stop 5752             pf_read@remain 00D7                 printf@fmt 0086  
             ??_get_clust 000A                  _xmit_spi 56C8          ___aomod@dividend 0006  
               putch@byte 0006            _vfpfcnvrt$1796 005F       __end_of_pwm_setDuty 5688  
                mem_cmp@d 000E                  mem_cmp@r 0012                  mem_cmp@s 0010  
              _INTCONbits 000FF2                  mem_set@d 000C                 put_rc@str 7C0D  
             ??_gpio_init 0006                 put_dump@i 00A4                  isalpha@c 0006  
                isdigit@c 0006             pf_readdir@dir 0100             pf_readdir@fno 00DE  
           pf_readdir@res 012E                  intlevel2 0000             uart_gets@buff 0090  
                islower@c 0006                  isspace@c 0006          ___lldiv@dividend 0006  
             ??_send_cmd2 000B                  isupper@c 0006                 strncmp@_l 0006  
               strncmp@_r 0008                 xmit_spi@d 0006             pf_lseek@ifptr 00D9  
             ??_uart_gets 0094               ??_uart_init 0006                  printf@ap 0074  
         ___aomod@divisor 000E                  xatoi@res 0014                  xatoi@val 001A  
                xatoi@str 0012               ??_vfpfcnvrt 004F                  stoa@nuls 0015  
         ___aomod@counter 0016                  put_rc@rc 0091               ??_pwm_start 0006  
            uart_gets@len 0092          ___lldiv@quotient 000E            dir_rewind@clst 0029  
             dir_find@dir 00D3               dir_find@res 00D8                  strncmp@l 000D  
                strncmp@n 000A                  strncmp@r 000F                  toupper@c 000C  
            dir_next@clst 00CB               dir_read@dir 00D3               dir_read@res 00DB  
            ___aodiv@sign 0017            pf_opendir@path 00E3             ?_get_fileinfo 0006  
            ?_create_name 000E             pf_opendir@dir 0100              dir_rewind@dj 001D  
            dir_rewind@fs 0027             pf_opendir@res 012E              ___aomod@sign 0017  
