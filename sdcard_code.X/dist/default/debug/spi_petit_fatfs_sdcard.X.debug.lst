

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jan 17 20:00:22 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93  0000                     
    94                           ; Version 2.32
    95                           ; Generated 02/02/2021 GMT
    96                           ; 
    97                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F4520 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataBANK1
   131  005748                     __pidataBANK1:
   132                           	callstack 0
   133                           
   134                           ;initializer for stoa@F1141
   135  005748  28                 	db	40
   136  005749  6E                 	db	110
   137  00574A  75                 	db	117
   138  00574B  6C                 	db	108
   139  00574C  6C                 	db	108
   140  00574D  29                 	db	41
   141  00574E  00                 	db	0
   142                           
   143                           	psect	mediumconst
   144  007B8C                     __pmediumconst:
   145                           	callstack 0
   146  007B8C  00                 	db	0
   147  007B8D                     create_name@cvt:
   148                           	callstack 0
   149  007B8D  80                 	db	128
   150  007B8E  9A                 	db	154
   151  007B8F  90                 	db	144
   152  007B90  41                 	db	65
   153  007B91  8E                 	db	142
   154  007B92  41                 	db	65
   155  007B93  8F                 	db	143
   156  007B94  80                 	db	128
   157  007B95  45                 	db	69
   158  007B96  45                 	db	69
   159  007B97  45                 	db	69
   160  007B98  49                 	db	73
   161  007B99  49                 	db	73
   162  007B9A  49                 	db	73
   163  007B9B  8E                 	db	142
   164  007B9C  8F                 	db	143
   165  007B9D  90                 	db	144
   166  007B9E  92                 	db	146
   167  007B9F  92                 	db	146
   168  007BA0  4F                 	db	79
   169  007BA1  99                 	db	153
   170  007BA2  4F                 	db	79
   171  007BA3  55                 	db	85
   172  007BA4  55                 	db	85
   173  007BA5  59                 	db	89
   174  007BA6  99                 	db	153
   175  007BA7  9A                 	db	154
   176  007BA8  9B                 	db	155
   177  007BA9  9C                 	db	156
   178  007BAA  9D                 	db	157
   179  007BAB  9E                 	db	158
   180  007BAC  9F                 	db	159
   181  007BAD  41                 	db	65
   182  007BAE  49                 	db	73
   183  007BAF  4F                 	db	79
   184  007BB0  55                 	db	85
   185  007BB1  A5                 	db	165
   186  007BB2  A5                 	db	165
   187  007BB3  A6                 	db	166
   188  007BB4  A7                 	db	167
   189  007BB5  A8                 	db	168
   190  007BB6  A9                 	db	169
   191  007BB7  AA                 	db	170
   192  007BB8  AB                 	db	171
   193  007BB9  AC                 	db	172
   194  007BBA  21                 	db	33
   195  007BBB  AE                 	db	174
   196  007BBC  AF                 	db	175
   197  007BBD  B0                 	db	176
   198  007BBE  B1                 	db	177
   199  007BBF  B2                 	db	178
   200  007BC0  B3                 	db	179
   201  007BC1  B4                 	db	180
   202  007BC2  B5                 	db	181
   203  007BC3  B6                 	db	182
   204  007BC4  B7                 	db	183
   205  007BC5  B8                 	db	184
   206  007BC6  B9                 	db	185
   207  007BC7  BA                 	db	186
   208  007BC8  BB                 	db	187
   209  007BC9  BC                 	db	188
   210  007BCA  BD                 	db	189
   211  007BCB  BE                 	db	190
   212  007BCC  BF                 	db	191
   213  007BCD  C0                 	db	192
   214  007BCE  C1                 	db	193
   215  007BCF  C2                 	db	194
   216  007BD0  C3                 	db	195
   217  007BD1  C4                 	db	196
   218  007BD2  C5                 	db	197
   219  007BD3  C6                 	db	198
   220  007BD4  C7                 	db	199
   221  007BD5  C8                 	db	200
   222  007BD6  C9                 	db	201
   223  007BD7  CA                 	db	202
   224  007BD8  CB                 	db	203
   225  007BD9  CC                 	db	204
   226  007BDA  CD                 	db	205
   227  007BDB  CE                 	db	206
   228  007BDC  CF                 	db	207
   229  007BDD  D0                 	db	208
   230  007BDE  D1                 	db	209
   231  007BDF  D2                 	db	210
   232  007BE0  D3                 	db	211
   233  007BE1  D4                 	db	212
   234  007BE2  D5                 	db	213
   235  007BE3  D6                 	db	214
   236  007BE4  D7                 	db	215
   237  007BE5  D8                 	db	216
   238  007BE6  D9                 	db	217
   239  007BE7  DA                 	db	218
   240  007BE8  DB                 	db	219
   241  007BE9  DC                 	db	220
   242  007BEA  DD                 	db	221
   243  007BEB  DE                 	db	222
   244  007BEC  DF                 	db	223
   245  007BED  E0                 	db	224
   246  007BEE  E1                 	db	225
   247  007BEF  E2                 	db	226
   248  007BF0  E3                 	db	227
   249  007BF1  E4                 	db	228
   250  007BF2  E5                 	db	229
   251  007BF3  E6                 	db	230
   252  007BF4  E7                 	db	231
   253  007BF5  E8                 	db	232
   254  007BF6  E9                 	db	233
   255  007BF7  EA                 	db	234
   256  007BF8  EB                 	db	235
   257  007BF9  EC                 	db	236
   258  007BFA  ED                 	db	237
   259  007BFB  EE                 	db	238
   260  007BFC  EF                 	db	239
   261  007BFD  F0                 	db	240
   262  007BFE  F1                 	db	241
   263  007BFF  F2                 	db	242
   264  007C00  F3                 	db	243
   265  007C01  F4                 	db	244
   266  007C02  F5                 	db	245
   267  007C03  F6                 	db	246
   268  007C04  F7                 	db	247
   269  007C05  F8                 	db	248
   270  007C06  F9                 	db	249
   271  007C07  FA                 	db	250
   272  007C08  FB                 	db	251
   273  007C09  FC                 	db	252
   274  007C0A  FD                 	db	253
   275  007C0B  FE                 	db	254
   276  007C0C  FF                 	db	255
   277  007C0D                     __end_ofcreate_name@cvt:
   278                           	callstack 0
   279  007C0D                     put_rc@str:
   280                           	callstack 0
   281  007C0D  4F                 	db	79
   282  007C0E  4B                 	db	75
   283  007C0F  00                 	db	0
   284  007C10  44                 	db	68
   285  007C11  49                 	db	73
   286  007C12  53                 	db	83
   287  007C13  4B                 	db	75
   288  007C14  5F                 	db	95
   289  007C15  45                 	db	69
   290  007C16  52                 	db	82
   291  007C17  52                 	db	82
   292  007C18  00                 	db	0
   293  007C19  4E                 	db	78
   294  007C1A  4F                 	db	79
   295  007C1B  54                 	db	84
   296  007C1C  5F                 	db	95
   297  007C1D  52                 	db	82
   298  007C1E  45                 	db	69
   299  007C1F  41                 	db	65
   300  007C20  44                 	db	68
   301  007C21  59                 	db	89
   302  007C22  00                 	db	0
   303  007C23  4E                 	db	78
   304  007C24  4F                 	db	79
   305  007C25  5F                 	db	95
   306  007C26  46                 	db	70
   307  007C27  49                 	db	73
   308  007C28  4C                 	db	76
   309  007C29  45                 	db	69
   310  007C2A  00                 	db	0
   311  007C2B  4E                 	db	78
   312  007C2C  4F                 	db	79
   313  007C2D  54                 	db	84
   314  007C2E  5F                 	db	95
   315  007C2F  4F                 	db	79
   316  007C30  50                 	db	80
   317  007C31  45                 	db	69
   318  007C32  4E                 	db	78
   319  007C33  45                 	db	69
   320  007C34  44                 	db	68
   321  007C35  00                 	db	0
   322  007C36  4E                 	db	78
   323  007C37  4F                 	db	79
   324  007C38  54                 	db	84
   325  007C39  5F                 	db	95
   326  007C3A  45                 	db	69
   327  007C3B  4E                 	db	78
   328  007C3C  41                 	db	65
   329  007C3D  42                 	db	66
   330  007C3E  4C                 	db	76
   331  007C3F  45                 	db	69
   332  007C40  44                 	db	68
   333  007C41  00                 	db	0
   334  007C42  4E                 	db	78
   335  007C43  4F                 	db	79
   336  007C44  5F                 	db	95
   337  007C45  46                 	db	70
   338  007C46  49                 	db	73
   339  007C47  4C                 	db	76
   340  007C48  45                 	db	69
   341  007C49  5F                 	db	95
   342  007C4A  53                 	db	83
   343  007C4B  59                 	db	89
   344  007C4C  53                 	db	83
   345  007C4D  54                 	db	84
   346  007C4E  45                 	db	69
   347  007C4F  4D                 	db	77
   348  007C50  00                 	db	0
   349  007C51  00                 	db	0
   350  007C52                     __end_ofput_rc@str:
   351                           	callstack 0
   352  0000                     _PORTBbits	set	3969
   353  0000                     _LATBbits	set	3978
   354  0000                     _LATAbits	set	3977
   355  0000                     _TRISAbits	set	3986
   356  0000                     _TRISCbits	set	3988
   357  0000                     _LATC	set	3979
   358  0000                     _TRISC	set	3988
   359  0000                     _SSPBUF	set	4041
   360  0000                     _SSPSTAT	set	4039
   361  0000                     _SSPCON1	set	4038
   362  0000                     _SPBRG	set	4015
   363  0000                     _RCSTA	set	4011
   364  0000                     _TXSTA	set	4012
   365  0000                     _TXREG	set	4013
   366  0000                     _RCREG	set	4014
   367  0000                     _CCPR1L	set	4030
   368  0000                     _T2CON	set	4042
   369  0000                     _PR2	set	4043
   370  0000                     _CCP1CON	set	4029
   371  0000                     _SSPIF	set	31987
   372  0000                     _TXIP	set	31996
   373  0000                     _RCIP	set	31997
   374  0000                     _TXIE	set	31980
   375  0000                     _TXIF	set	31988
   376  0000                     _RCIF	set	31989
   377  0000                     _RCIE	set	31981
   378  0000                     _TMR2ON	set	32338
   379  0000                     _INTCONbits	set	4082
   380  0000                     _PEIE	set	32662
   381  0000                     _GIE	set	32663
   382  0000                     _INT0IF	set	32657
   383  007C52                     STR_9:
   384  007C52  09                 	db	9
   385  007C53  52                 	db	82	;'R'
   386  007C54  65                 	db	101	;'e'
   387  007C55  61                 	db	97	;'a'
   388  007C56  64                 	db	100	;'d'
   389  007C57  20                 	db	32
   390  007C58  61                 	db	97	;'a'
   391  007C59  6C                 	db	108	;'l'
   392  007C5A  6C                 	db	108	;'l'
   393  007C5B  20                 	db	32
   394  007C5C  66                 	db	102	;'f'
   395  007C5D  69                 	db	105	;'i'
   396  007C5E  6C                 	db	108	;'l'
   397  007C5F  65                 	db	101	;'e'
   398  007C60  20                 	db	32
   399  007C61  61                 	db	97	;'a'
   400  007C62  6E                 	db	110	;'n'
   401  007C63  64                 	db	100	;'d'
   402  007C64  20                 	db	32
   403  007C65  6F                 	db	111	;'o'
   404  007C66  75                 	db	117	;'u'
   405  007C67  74                 	db	116	;'t'
   406  007C68  70                 	db	112	;'p'
   407  007C69  75                 	db	117	;'u'
   408  007C6A  74                 	db	116	;'t'
   409  007C6B  20                 	db	32
   410  007C6C  73                 	db	115	;'s'
   411  007C6D  71                 	db	113	;'q'
   412  007C6E  75                 	db	117	;'u'
   413  007C6F  61                 	db	97	;'a'
   414  007C70  72                 	db	114	;'r'
   415  007C71  65                 	db	101	;'e'
   416  007C72  20                 	db	32
   417  007C73  77                 	db	119	;'w'
   418  007C74  61                 	db	97	;'a'
   419  007C75  76                 	db	118	;'v'
   420  007C76  65                 	db	101	;'e'
   421  007C77  0D                 	db	13
   422  007C78  0A                 	db	10
   423  007C79  00                 	db	0
   424  007C7A                     STR_11:
   425  007C7A  09                 	db	9
   426  007C7B  52                 	db	82	;'R'
   427  007C7C  65                 	db	101	;'e'
   428  007C7D  61                 	db	97	;'a'
   429  007C7E  64                 	db	100	;'d'
   430  007C7F  20                 	db	32
   431  007C80  74                 	db	116	;'t'
   432  007C81  68                 	db	104	;'h'
   433  007C82  65                 	db	101	;'e'
   434  007C83  20                 	db	32
   435  007C84  66                 	db	102	;'f'
   436  007C85  69                 	db	105	;'i'
   437  007C86  6C                 	db	108	;'l'
   438  007C87  65                 	db	101	;'e'
   439  007C88  20                 	db	32
   440  007C89  31                 	db	49	;'1'
   441  007C8A  32                 	db	50	;'2'
   442  007C8B  38                 	db	56	;'8'
   443  007C8C  20                 	db	32
   444  007C8D  62                 	db	98	;'b'
   445  007C8E  79                 	db	121	;'y'
   446  007C8F  74                 	db	116	;'t'
   447  007C90  65                 	db	101	;'e'
   448  007C91  73                 	db	115	;'s'
   449  007C92  20                 	db	32
   450  007C93  61                 	db	97	;'a'
   451  007C94  6E                 	db	110	;'n'
   452  007C95  64                 	db	100	;'d'
   453  007C96  20                 	db	32
   454  007C97  64                 	db	100	;'d'
   455  007C98  75                 	db	117	;'u'
   456  007C99  6D                 	db	109	;'m'
   457  007C9A  70                 	db	112	;'p'
   458  007C9B  20                 	db	32
   459  007C9C  69                 	db	105	;'i'
   460  007C9D  74                 	db	116	;'t'
   461  007C9E  0D                 	db	13
   462  007C9F  0A                 	db	10
   463  007CA0  00                 	db	0
   464  007CA1                     STR_3:
   465  007CA1  0D                 	db	13
   466  007CA2  0A                 	db	10
   467  007CA3  0D                 	db	13
   468  007CA4  0A                 	db	10
   469  007CA5  50                 	db	80	;'P'
   470  007CA6  65                 	db	101	;'e'
   471  007CA7  74                 	db	116	;'t'
   472  007CA8  69                 	db	105	;'i'
   473  007CA9  74                 	db	116	;'t'
   474  007CAA  20                 	db	32
   475  007CAB  46                 	db	70	;'F'
   476  007CAC  61                 	db	97	;'a'
   477  007CAD  74                 	db	116	;'t'
   478  007CAE  46                 	db	70	;'F'
   479  007CAF  73                 	db	115	;'s'
   480  007CB0  20                 	db	32
   481  007CB1  74                 	db	116	;'t'
   482  007CB2  65                 	db	101	;'e'
   483  007CB3  73                 	db	115	;'s'
   484  007CB4  74                 	db	116	;'t'
   485  007CB5  20                 	db	32
   486  007CB6  6D                 	db	109	;'m'
   487  007CB7  6F                 	db	111	;'o'
   488  007CB8  6E                 	db	110	;'n'
   489  007CB9  69                 	db	105	;'i'
   490  007CBA  74                 	db	116	;'t'
   491  007CBB  6F                 	db	111	;'o'
   492  007CBC  72                 	db	114	;'r'
   493  007CBD  0D                 	db	13
   494  007CBE  0A                 	db	10
   495  007CBF  00                 	db	0
   496  007CC0                     STR_6:
   497  007CC0  09                 	db	9
   498  007CC1  49                 	db	73	;'I'
   499  007CC2  6E                 	db	110	;'n'
   500  007CC3  69                 	db	105	;'i'
   501  007CC4  74                 	db	116	;'t'
   502  007CC5  69                 	db	105	;'i'
   503  007CC6  61                 	db	97	;'a'
   504  007CC7  6C                 	db	108	;'l'
   505  007CC8  69                 	db	105	;'i'
   506  007CC9  7A                 	db	122	;'z'
   507  007CCA  65                 	db	101	;'e'
   508  007CCB  20                 	db	32
   509  007CCC  70                 	db	112	;'p'
   510  007CCD  68                 	db	104	;'h'
   511  007CCE  79                 	db	121	;'y'
   512  007CCF  73                 	db	115	;'s'
   513  007CD0  69                 	db	105	;'i'
   514  007CD1  63                 	db	99	;'c'
   515  007CD2  61                 	db	97	;'a'
   516  007CD3  6C                 	db	108	;'l'
   517  007CD4  20                 	db	32
   518  007CD5  64                 	db	100	;'d'
   519  007CD6  72                 	db	114	;'r'
   520  007CD7  69                 	db	105	;'i'
   521  007CD8  76                 	db	118	;'v'
   522  007CD9  65                 	db	101	;'e'
   523  007CDA  0D                 	db	13
   524  007CDB  0A                 	db	10
   525  007CDC  09                 	db	9
   526  007CDD  00                 	db	0
   527  007CDE                     STR_14:
   528  007CDE  73                 	db	115	;'s'
   529  007CDF  65                 	db	101	;'e'
   530  007CE0  65                 	db	101	;'e'
   531  007CE1  6B                 	db	107	;'k'
   532  007CE2  20                 	db	32
   533  007CE3  70                 	db	112	;'p'
   534  007CE4  6F                 	db	111	;'o'
   535  007CE5  69                 	db	105	;'i'
   536  007CE6  6E                 	db	110	;'n'
   537  007CE7  74                 	db	116	;'t'
   538  007CE8  65                 	db	101	;'e'
   539  007CE9  72                 	db	114	;'r'
   540  007CEA  20                 	db	32
   541  007CEB  69                 	db	105	;'i'
   542  007CEC  73                 	db	115	;'s'
   543  007CED  20                 	db	32
   544  007CEE  69                 	db	105	;'i'
   545  007CEF  6E                 	db	110	;'n'
   546  007CF0  76                 	db	118	;'v'
   547  007CF1  61                 	db	97	;'a'
   548  007CF2  6C                 	db	108	;'l'
   549  007CF3  69                 	db	105	;'i'
   550  007CF4  64                 	db	100	;'d'
   551  007CF5  0D                 	db	13
   552  007CF6  0A                 	db	10
   553  007CF7  00                 	db	0
   554  007CF8                     STR_7:
   555  007CF8  09                 	db	9
   556  007CF9  4D                 	db	77	;'M'
   557  007CFA  6F                 	db	111	;'o'
   558  007CFB  75                 	db	117	;'u'
   559  007CFC  6E                 	db	110	;'n'
   560  007CFD  74                 	db	116	;'t'
   561  007CFE  20                 	db	32
   562  007CFF  74                 	db	116	;'t'
   563  007D00  68                 	db	104	;'h'
   564  007D01  65                 	db	101	;'e'
   565  007D02  20                 	db	32
   566  007D03  76                 	db	118	;'v'
   567  007D04  6F                 	db	111	;'o'
   568  007D05  6C                 	db	108	;'l'
   569  007D06  75                 	db	117	;'u'
   570  007D07  6D                 	db	109	;'m'
   571  007D08  65                 	db	101	;'e'
   572  007D09  0D                 	db	13
   573  007D0A  0A                 	db	10
   574  007D0B  09                 	db	9
   575  007D0C  00                 	db	0
   576  007D0D                     STR_16:
   577  007D0D  09                 	db	9
   578  007D0E  66                 	db	102	;'f'
   579  007D0F  70                 	db	112	;'p'
   580  007D10  74                 	db	116	;'t'
   581  007D11  72                 	db	114	;'r'
   582  007D12  20                 	db	32
   583  007D13  3D                 	db	61	;'='
   584  007D14  20                 	db	32
   585  007D15  25                 	db	37
   586  007D16  6C                 	db	108	;'l'
   587  007D17  75                 	db	117	;'u'
   588  007D18  28                 	db	40
   589  007D19  30                 	db	48	;'0'
   590  007D1A  78                 	db	120	;'x'
   591  007D1B  25                 	db	37
   592  007D1C  6C                 	db	108	;'l'
   593  007D1D  58                 	db	88	;'X'
   594  007D1E  29                 	db	41
   595  007D1F  0D                 	db	13
   596  007D20  0A                 	db	10
   597  007D21  00                 	db	0
   598  007D22                     STR_17:
   599  007D22  09                 	db	9
   600  007D23  44                 	db	68	;'D'
   601  007D24  69                 	db	105	;'i'
   602  007D25  72                 	db	114	;'r'
   603  007D26  65                 	db	101	;'e'
   604  007D27  63                 	db	99	;'c'
   605  007D28  74                 	db	116	;'t'
   606  007D29  6F                 	db	111	;'o'
   607  007D2A  72                 	db	114	;'r'
   608  007D2B  79                 	db	121	;'y'
   609  007D2C  20                 	db	32
   610  007D2D  6C                 	db	108	;'l'
   611  007D2E  69                 	db	105	;'i'
   612  007D2F  73                 	db	115	;'s'
   613  007D30  74                 	db	116	;'t'
   614  007D31  69                 	db	105	;'i'
   615  007D32  6E                 	db	110	;'n'
   616  007D33  67                 	db	103	;'g'
   617  007D34  0D                 	db	13
   618  007D35  0A                 	db	10
   619  007D36  00                 	db	0
   620  007D37                     STR_18:
   621  007D37  09                 	db	9
   622  007D38  20                 	db	32
   623  007D39  20                 	db	32
   624  007D3A  20                 	db	32
   625  007D3B  3C                 	db	60	;'<'
   626  007D3C  44                 	db	68	;'D'
   627  007D3D  49                 	db	73	;'I'
   628  007D3E  52                 	db	82	;'R'
   629  007D3F  3E                 	db	62	;'>'
   630  007D40  20                 	db	32
   631  007D41  20                 	db	32
   632  007D42  20                 	db	32
   633  007D43  25                 	db	37
   634  007D44  73                 	db	115	;'s'
   635  007D45  0D                 	db	13
   636  007D46  0A                 	db	10
   637  007D47  00                 	db	0
   638  007D48                     STR_8:
   639  007D48  09                 	db	9
   640  007D49  4F                 	db	79	;'O'
   641  007D4A  70                 	db	112	;'p'
   642  007D4B  65                 	db	101	;'e'
   643  007D4C  6E                 	db	110	;'n'
   644  007D4D  20                 	db	32
   645  007D4E  61                 	db	97	;'a'
   646  007D4F  20                 	db	32
   647  007D50  66                 	db	102	;'f'
   648  007D51  69                 	db	105	;'i'
   649  007D52  6C                 	db	108	;'l'
   650  007D53  65                 	db	101	;'e'
   651  007D54  0D                 	db	13
   652  007D55  0A                 	db	10
   653  007D56  09                 	db	9
   654  007D57  00                 	db	0
   655  007D58                     STR_24:
   656  007D58  61                 	db	97	;'a'
   657  007D59  64                 	db	100	;'d'
   658  007D5A  64                 	db	100	;'d'
   659  007D5B  72                 	db	114	;'r'
   660  007D5C  3A                 	db	58	;':'
   661  007D5D  20                 	db	32
   662  007D5E  25                 	db	37
   663  007D5F  30                 	db	48	;'0'
   664  007D60  38                 	db	56	;'8'
   665  007D61  6C                 	db	108	;'l'
   666  007D62  58                 	db	88	;'X'
   667  007D63  20                 	db	32
   668  007D64  7C                 	db	124
   669  007D65  00                 	db	0
   670  007D66                     STR_20:
   671  007D66  09                 	db	9
   672  007D67  25                 	db	37
   673  007D68  75                 	db	117	;'u'
   674  007D69  20                 	db	32
   675  007D6A  69                 	db	105	;'i'
   676  007D6B  74                 	db	116	;'t'
   677  007D6C  65                 	db	101	;'e'
   678  007D6D  6D                 	db	109	;'m'
   679  007D6E  28                 	db	40
   680  007D6F  73                 	db	115	;'s'
   681  007D70  29                 	db	41
   682  007D71  0D                 	db	13
   683  007D72  0A                 	db	10
   684  007D73  00                 	db	0
   685  007D74                     STR_1:
   686  007D74  72                 	db	114	;'r'
   687  007D75  63                 	db	99	;'c'
   688  007D76  3D                 	db	61	;'='
   689  007D77  25                 	db	37
   690  007D78  75                 	db	117	;'u'
   691  007D79  20                 	db	32
   692  007D7A  46                 	db	70	;'F'
   693  007D7B  52                 	db	82	;'R'
   694  007D7C  5F                 	db	95	;'_'
   695  007D7D  25                 	db	37
   696  007D7E  73                 	db	115	;'s'
   697  007D7F  0D                 	db	13
   698  007D80  0A                 	db	10
   699  007D81  00                 	db	0
   700  007D82                     STR_19:
   701  007D82  09                 	db	9
   702  007D83  25                 	db	37
   703  007D84  39                 	db	57	;'9'
   704  007D85  6C                 	db	108	;'l'
   705  007D86  75                 	db	117	;'u'
   706  007D87  20                 	db	32
   707  007D88  20                 	db	32
   708  007D89  25                 	db	37
   709  007D8A  73                 	db	115	;'s'
   710  007D8B  0D                 	db	13
   711  007D8C  0A                 	db	10
   712  007D8D  00                 	db	0
   713  007D8E                     STR_2:
   714  007D8E  72                 	db	114	;'r'
   715  007D8F  63                 	db	99	;'c'
   716  007D90  3D                 	db	61	;'='
   717  007D91  25                 	db	37
   718  007D92  64                 	db	100	;'d'
   719  007D93  0D                 	db	13
   720  007D94  0A                 	db	10
   721  007D95  00                 	db	0
   722  007D96                     STR_29:
   723  007D96  20                 	db	32
   724  007D97  25                 	db	37
   725  007D98  30                 	db	48	;'0'
   726  007D99  38                 	db	56	;'8'
   727  007D9A  4C                 	db	76	;'L'
   728  007D9B  58                 	db	88	;'X'
   729  007D9C  00                 	db	0
   730  007D9D                     STR_25:
   731  007D9D  20                 	db	32
   732  007D9E  25                 	db	37
   733  007D9F  30                 	db	48	;'0'
   734  007DA0  32                 	db	50	;'2'
   735  007DA1  58                 	db	88	;'X'
   736  007DA2  00                 	db	0
   737  007DA3                     STR_28:
   738  007DA3  20                 	db	32
   739  007DA4  25                 	db	37
   740  007DA5  30                 	db	48	;'0'
   741  007DA6  34                 	db	52	;'4'
   742  007DA7  58                 	db	88	;'X'
   743  007DA8  00                 	db	0
   744  007DA9                     STR_50:
   745  007DA9  6C                 	db	108	;'l'
   746  007DAA  58                 	db	88	;'X'
   747  007DAB  00                 	db	0
   748  007DAC                     STR_32:
   749  007DAC  6C                 	db	108	;'l'
   750  007DAD  64                 	db	100	;'d'
   751  007DAE  00                 	db	0
   752  007DAF                     STR_36:
   753  007DAF  6C                 	db	108	;'l'
   754  007DB0  69                 	db	105	;'i'
   755  007DB1  00                 	db	0
   756  007DB2                     STR_41:
   757  007DB2  6C                 	db	108	;'l'
   758  007DB3  75                 	db	117	;'u'
   759  007DB4  00                 	db	0
   760  007DB5                     STR_46:
   761  007DB5  6C                 	db	108	;'l'
   762  007DB6  78                 	db	120	;'x'
   763  007DB7  00                 	db	0
   764  007DB8                     STR_21:
   765  007DB8  25                 	db	37
   766  007DB9  63                 	db	99	;'c'
   767  007DBA  00                 	db	0
   768  007DBB                     STR_26:
   769  007DBB  20                 	db	32
   770  007DBC  00                 	db	0
   771  007DBD                     STR_4:
   772  007DBD  3E                 	db	62	;'>'
   773  007DBE  00                 	db	0
   774  007DBF  00                 	db	0	; dummy byte at the end
   775  0000                     
   776                           ; #config settings
   777                           
   778                           	psect	cinit
   779  0051FE                     __pcinit:
   780                           	callstack 0
   781  0051FE                     start_initialization:
   782                           	callstack 0
   783  0051FE                     __initialization:
   784                           	callstack 0
   785                           
   786                           ; Initialize objects allocated to BANK1 (7 bytes)
   787                           ; load TBLPTR registers with __pidataBANK1
   788  0051FE  0E48               	movlw	low __pidataBANK1
   789  005200  6EF6               	movwf	tblptrl,c
   790  005202  0E57               	movlw	high __pidataBANK1
   791  005204  6EF7               	movwf	tblptrh,c
   792  005206  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   793  005208  6EF8               	movwf	tblptru,c
   794  00520A  EE01  F0E1         	lfsr	0,__pdataBANK1
   795  00520E  EE10 F007          	lfsr	1,7
   796  005212                     copy_data0:
   797  005212  0009               	tblrd		*+
   798  005214  CFF5 FFEE          	movff	tablat,postinc0
   799  005218  50E5               	movf	postdec1,w,c
   800  00521A  50E1               	movf	fsr1l,w,c
   801  00521C  E1FA               	bnz	copy_data0
   802                           
   803                           ; Clear objects allocated to BANK4 (134 bytes)
   804  00521E  EE04  F000         	lfsr	0,__pbssBANK4
   805  005222  0E86               	movlw	134
   806  005224                     clear_0:
   807  005224  6AEE               	clrf	postinc0,c
   808  005226  06E8               	decf	wreg,f,c
   809  005228  E1FD               	bnz	clear_0
   810                           
   811                           ; Clear objects allocated to BANK3 (128 bytes)
   812  00522A  EE03  F000         	lfsr	0,__pbssBANK3
   813  00522E  0E80               	movlw	128
   814  005230                     clear_1:
   815  005230  6AEE               	clrf	postinc0,c
   816  005232  06E8               	decf	wreg,f,c
   817  005234  E1FD               	bnz	clear_1
   818                           
   819                           ; Clear objects allocated to BANK2 (134 bytes)
   820  005236  EE02  F000         	lfsr	0,__pbssBANK2
   821  00523A  0E86               	movlw	134
   822  00523C                     clear_2:
   823  00523C  6AEE               	clrf	postinc0,c
   824  00523E  06E8               	decf	wreg,f,c
   825  005240  E1FD               	bnz	clear_2
   826                           
   827                           ; Clear objects allocated to BANK1 (34 bytes)
   828  005242  EE01  F0BF         	lfsr	0,__pbssBANK1
   829  005246  0E22               	movlw	34
   830  005248                     clear_3:
   831  005248  6AEE               	clrf	postinc0,c
   832  00524A  06E8               	decf	wreg,f,c
   833  00524C  E1FD               	bnz	clear_3
   834                           
   835                           ; Clear objects allocated to BANK0 (9 bytes)
   836  00524E  EE00  F0F7         	lfsr	0,__pbssBANK0
   837  005252  0E09               	movlw	9
   838  005254                     clear_4:
   839  005254  6AEE               	clrf	postinc0,c
   840  005256  06E8               	decf	wreg,f,c
   841  005258  E1FD               	bnz	clear_4
   842                           
   843                           ; Clear objects allocated to COMRAM (4 bytes)
   844  00525A  6A79               	clrf	(__pbssCOMRAM+3)& (0+255),c
   845  00525C  6A78               	clrf	(__pbssCOMRAM+2)& (0+255),c
   846  00525E  6A77               	clrf	(__pbssCOMRAM+1)& (0+255),c
   847  005260  6A76               	clrf	__pbssCOMRAM& (0+255),c
   848  005262                     end_of_initialization:
   849                           	callstack 0
   850  005262                     __end_of__initialization:
   851                           	callstack 0
   852  005262  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   853  005264  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   854  005266  0E00               	movlw	low (__Lmediumconst shr (0+16))
   855  005268  6EF8               	movwf	tblptru,c
   856  00526A  0100               	movlb	0
   857  00526C  EFEC  F003         	goto	_main	;jump to C main() function
   858                           
   859                           	psect	bssCOMRAM
   860  000076                     __pbssCOMRAM:
   861                           	callstack 0
   862  000076                     _prec:
   863                           	callstack 0
   864  000076                     	ds	2
   865  000078                     _flags:
   866                           	callstack 0
   867  000078                     	ds	2
   868                           
   869                           	psect	bssBANK0
   870  0000F7                     __pbssBANK0:
   871                           	callstack 0
   872  0000F7                     _nout:
   873                           	callstack 0
   874  0000F7                     	ds	2
   875  0000F9                     _width:
   876                           	callstack 0
   877  0000F9                     	ds	2
   878  0000FB                     _TxRun:
   879                           	callstack 0
   880  0000FB                     	ds	2
   881  0000FD                     _FatFs:
   882                           	callstack 0
   883  0000FD                     	ds	2
   884  0000FF                     _CardType:
   885                           	callstack 0
   886  0000FF                     	ds	1
   887                           
   888                           	psect	bssBANK1
   889  0001BF                     __pbssBANK1:
   890                           	callstack 0
   891  0001BF                     _init_flag:
   892                           	callstack 0
   893  0001BF                     	ds	2
   894  0001C1                     _dbuf:
   895                           	callstack 0
   896  0001C1                     	ds	32
   897                           
   898                           	psect	dataBANK1
   899  0001E1                     __pdataBANK1:
   900                           	callstack 0
   901  0001E1                     stoa@F1141:
   902                           	callstack 0
   903  0001E1                     	ds	7
   904                           
   905                           	psect	bssBANK2
   906  000200                     __pbssBANK2:
   907                           	callstack 0
   908  000200                     _RxFifo:
   909                           	callstack 0
   910  000200                     	ds	134
   911                           
   912                           	psect	bssBANK3
   913  000300                     __pbssBANK3:
   914                           	callstack 0
   915  000300                     _Line:
   916                           	callstack 0
   917  000300                     	ds	128
   918                           
   919                           	psect	bssBANK4
   920  000400                     __pbssBANK4:
   921                           	callstack 0
   922  000400                     _TxFifo:
   923                           	callstack 0
   924  000400                     	ds	134
   925                           
   926                           	psect	cstackBANK1
   927  000100                     __pcstackBANK1:
   928                           	callstack 0
   929  000100                     ??_pf_open:
   930  000100                     pf_opendir@dir:
   931                           	callstack 0
   932  000100                     pf_readdir@dir:
   933                           	callstack 0
   934                           
   935                           ; 32 bytes @ 0x0
   936  000100                     	ds	22
   937  000116                     pf_open@sp:
   938                           	callstack 0
   939                           
   940                           ; 12 bytes @ 0x16
   941  000116                     	ds	10
   942  000120                     pf_opendir@sp:
   943                           	callstack 0
   944  000120                     pf_readdir@sp:
   945                           	callstack 0
   946                           
   947                           ; 12 bytes @ 0x20
   948  000120                     	ds	2
   949  000122                     pf_open@dir:
   950                           	callstack 0
   951                           
   952                           ; 32 bytes @ 0x22
   953  000122                     	ds	10
   954  00012C                     pf_opendir@fs:
   955                           	callstack 0
   956  00012C                     pf_readdir@fs:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x2C
   960  00012C                     	ds	2
   961  00012E                     pf_opendir@res:
   962                           	callstack 0
   963  00012E                     pf_readdir@res:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x2E
   967  00012E                     	ds	20
   968  000142                     pf_open@res:
   969                           	callstack 0
   970                           
   971                           ; 1 bytes @ 0x42
   972  000142                     	ds	1
   973  000143                     pf_open@fs:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x43
   977  000143                     	ds	2
   978  000145                     pf_open@dj:
   979                           	callstack 0
   980                           
   981                           ; 16 bytes @ 0x45
   982  000145                     	ds	16
   983  000155                     ??_main:
   984                           
   985                           ; 1 bytes @ 0x55
   986  000155                     	ds	2
   987  000157                     main@upmode:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x57
   991  000157                     	ds	1
   992  000158                     main@num_temp:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x58
   996  000158                     	ds	2
   997  00015A                     main@ofs:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x5A
  1001  00015A                     	ds	2
  1002  00015C                     main@p2:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x5C
  1006  00015C                     	ds	4
  1007  000160                     main@count:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x60
  1011  000160                     	ds	2
  1012  000162                     main@s3:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x62
  1016  000162                     	ds	2
  1017  000164                     main@p1:
  1018                           	callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x64
  1021  000164                     	ds	4
  1022  000168                     main@s2:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x68
  1026  000168                     	ds	2
  1027  00016A                     main@fno:
  1028                           	callstack 0
  1029                           
  1030                           ; 22 bytes @ 0x6A
  1031  00016A                     	ds	22
  1032  000180                     main@dir:
  1033                           	callstack 0
  1034                           
  1035                           ; 16 bytes @ 0x80
  1036  000180                     	ds	16
  1037  000190                     main@s1:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x90
  1041  000190                     	ds	2
  1042  000192                     main@ptr:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x92
  1046  000192                     	ds	2
  1047  000194                     main@res:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x94
  1051  000194                     	ds	1
  1052  000195                     main@fs:
  1053                           	callstack 0
  1054                           
  1055                           ; 42 bytes @ 0x95
  1056  000195                     	ds	42
  1057                           
  1058                           	psect	cstackBANK0
  1059  000080                     __pcstackBANK0:
  1060                           	callstack 0
  1061  000080                     ?_vfprintf:
  1062                           	callstack 0
  1063  000080                     vfprintf@fp:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x0
  1067  000080                     	ds	2
  1068  000082                     vfprintf@fmt:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x2
  1072  000082                     	ds	2
  1073  000084                     vfprintf@ap:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x4
  1077  000084                     	ds	2
  1078  000086                     ?_printf:
  1079                           	callstack 0
  1080  000086                     printf@fmt:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x6
  1084  000086                     	ds	10
  1085  000090                     put_rc@i:
  1086                           	callstack 0
  1087  000090                     put_drc@res:
  1088                           	callstack 0
  1089  000090                     uart_gets@buff:
  1090                           	callstack 0
  1091  000090                     put_dump@buff:
  1092                           	callstack 0
  1093  000090                     disk_readp@buff:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x10
  1097  000090                     	ds	1
  1098  000091                     put_rc@rc:
  1099                           	callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x11
  1102  000091                     	ds	1
  1103  000092                     put_rc@p:
  1104                           	callstack 0
  1105  000092                     uart_gets@len:
  1106                           	callstack 0
  1107  000092                     put_dump@addr:
  1108                           	callstack 0
  1109  000092                     disk_readp@sector:
  1110                           	callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x12
  1113  000092                     	ds	2
  1114  000094                     ??_uart_gets:
  1115                           
  1116                           ; 1 bytes @ 0x14
  1117  000094                     	ds	2
  1118  000096                     put_dump@len:
  1119                           	callstack 0
  1120  000096                     disk_readp@offset:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x16
  1124  000096                     	ds	2
  1125  000098                     put_dump@width:
  1126                           	callstack 0
  1127  000098                     disk_readp@count:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x18
  1131  000098                     	ds	1
  1132  000099                     uart_gets@i:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x19
  1136  000099                     	ds	1
  1137  00009A                     ??_disk_readp:
  1138  00009A                     ??_put_dump:
  1139                           
  1140                           ; 1 bytes @ 0x1A
  1141  00009A                     	ds	1
  1142  00009B                     uart_gets@c:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x1B
  1146  00009B                     	ds	1
  1147  00009C                     disk_readp@res:
  1148                           	callstack 0
  1149  00009C                     put_dump@sp:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x1C
  1153  00009C                     	ds	1
  1154  00009D                     disk_readp@rc:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x1D
  1158  00009D                     	ds	1
  1159  00009E                     put_dump@lp:
  1160                           	callstack 0
  1161  00009E                     disk_readp@bc:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x1E
  1165  00009E                     	ds	2
  1166  0000A0                     ?_get_fat:
  1167                           	callstack 0
  1168  0000A0                     check_fs@buf:
  1169                           	callstack 0
  1170  0000A0                     _put_dump$1127:
  1171                           	callstack 0
  1172  0000A0                     get_fat@clst:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x20
  1176  0000A0                     	ds	2
  1177  0000A2                     put_dump@bp:
  1178                           	callstack 0
  1179  0000A2                     check_fs@sect:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x22
  1183  0000A2                     	ds	2
  1184  0000A4                     ??_get_fat:
  1185  0000A4                     put_dump@i:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x24
  1189  0000A4                     	ds	2
  1190  0000A6                     ??_check_fs:
  1191                           
  1192                           ; 1 bytes @ 0x26
  1193  0000A6                     	ds	4
  1194  0000AA                     pf_mount@fs:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x2A
  1198  0000AA                     	ds	2
  1199  0000AC                     ??_pf_mount:
  1200                           
  1201                           ; 1 bytes @ 0x2C
  1202  0000AC                     	ds	14
  1203  0000BA                     get_fat@buf:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x3A
  1207  0000BA                     	ds	4
  1208  0000BE                     get_fat@fs:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x3E
  1212  0000BE                     	ds	2
  1213  0000C0                     dir_next@dj:
  1214                           	callstack 0
  1215  0000C0                     pf_read@buff:
  1216                           	callstack 0
  1217  0000C0                     pf_lseek@ofs:
  1218                           	callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x40
  1221  0000C0                     	ds	2
  1222  0000C2                     ??_dir_next:
  1223  0000C2                     pf_read@btr:
  1224                           	callstack 0
  1225  0000C2                     pf_mount@buf:
  1226                           	callstack 0
  1227                           
  1228                           ; 36 bytes @ 0x42
  1229  0000C2                     	ds	2
  1230  0000C4                     ??_pf_lseek:
  1231  0000C4                     pf_read@br:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x44
  1235  0000C4                     	ds	2
  1236  0000C6                     ??_pf_read:
  1237                           
  1238                           ; 1 bytes @ 0x46
  1239  0000C6                     	ds	3
  1240  0000C9                     dir_next@fs:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x49
  1244  0000C9                     	ds	2
  1245  0000CB                     dir_next@clst:
  1246                           	callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x4B
  1249  0000CB                     	ds	3
  1250  0000CE                     pf_read@dr:
  1251                           	callstack 0
  1252                           
  1253                           ; 1 bytes @ 0x4E
  1254  0000CE                     	ds	1
  1255  0000CF                     dir_next@i:
  1256                           	callstack 0
  1257  0000CF                     pf_read@rbuff:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x4F
  1261  0000CF                     	ds	2
  1262  0000D1                     dir_find@dj:
  1263                           	callstack 0
  1264  0000D1                     dir_read@dj:
  1265                           	callstack 0
  1266  0000D1                     _pf_read$894:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x51
  1270  0000D1                     	ds	2
  1271  0000D3                     dir_find@dir:
  1272                           	callstack 0
  1273  0000D3                     dir_read@dir:
  1274                           	callstack 0
  1275  0000D3                     pf_read@sect:
  1276                           	callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x53
  1279  0000D3                     	ds	2
  1280  0000D5                     ??_dir_find:
  1281  0000D5                     ??_dir_read:
  1282  0000D5                     pf_lseek@sect:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x55
  1286  0000D5                     	ds	2
  1287  0000D7                     dir_find@c:
  1288                           	callstack 0
  1289  0000D7                     pf_read@remain:
  1290                           	callstack 0
  1291                           
  1292                           ; 4 bytes @ 0x57
  1293  0000D7                     	ds	1
  1294  0000D8                     dir_find@res:
  1295                           	callstack 0
  1296                           
  1297                           ; 1 bytes @ 0x58
  1298  0000D8                     	ds	1
  1299  0000D9                     dir_read@a:
  1300                           	callstack 0
  1301  0000D9                     follow_path@dj:
  1302                           	callstack 0
  1303  0000D9                     pf_lseek@ifptr:
  1304                           	callstack 0
  1305                           
  1306                           ; 4 bytes @ 0x59
  1307  0000D9                     	ds	1
  1308  0000DA                     dir_read@c:
  1309                           	callstack 0
  1310                           
  1311                           ; 1 bytes @ 0x5A
  1312  0000DA                     	ds	1
  1313  0000DB                     dir_read@res:
  1314                           	callstack 0
  1315  0000DB                     follow_path@dir:
  1316                           	callstack 0
  1317  0000DB                     pf_read@clst:
  1318                           	callstack 0
  1319                           
  1320                           ; 4 bytes @ 0x5B
  1321  0000DB                     	ds	1
  1322  0000DC                     pf_readdir@dj:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x5C
  1326  0000DC                     	ds	1
  1327  0000DD                     follow_path@path:
  1328                           	callstack 0
  1329  0000DD                     pf_lseek@bcs:
  1330                           	callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x5D
  1333  0000DD                     	ds	1
  1334  0000DE                     pf_readdir@fno:
  1335                           	callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x5E
  1338  0000DE                     	ds	1
  1339  0000DF                     pf_read@cs:
  1340                           	callstack 0
  1341                           
  1342                           ; 1 bytes @ 0x5F
  1343  0000DF                     	ds	1
  1344  0000E0                     follow_path@res:
  1345                           	callstack 0
  1346  0000E0                     pf_read@rcnt:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x60
  1350  0000E0                     	ds	1
  1351  0000E1                     pf_open@path:
  1352                           	callstack 0
  1353  0000E1                     pf_opendir@dj:
  1354                           	callstack 0
  1355  0000E1                     pf_lseek@clst:
  1356                           	callstack 0
  1357                           
  1358                           ; 4 bytes @ 0x61
  1359  0000E1                     	ds	1
  1360  0000E2                     pf_read@fs:
  1361                           	callstack 0
  1362                           
  1363                           ; 2 bytes @ 0x62
  1364  0000E2                     	ds	1
  1365  0000E3                     pf_opendir@path:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x63
  1369  0000E3                     	ds	2
  1370  0000E5                     pf_lseek@fs:
  1371                           	callstack 0
  1372                           
  1373                           ; 2 bytes @ 0x65
  1374  0000E5                     	ds	1
  1375  0000E6                     pf_mount@tsect:
  1376                           	callstack 0
  1377                           
  1378                           ; 4 bytes @ 0x66
  1379  0000E6                     	ds	4
  1380  0000EA                     pf_mount@mclst:
  1381                           	callstack 0
  1382                           
  1383                           ; 4 bytes @ 0x6A
  1384  0000EA                     	ds	4
  1385  0000EE                     pf_mount@bsect:
  1386                           	callstack 0
  1387                           
  1388                           ; 4 bytes @ 0x6E
  1389  0000EE                     	ds	4
  1390  0000F2                     pf_mount@fsize:
  1391                           	callstack 0
  1392                           
  1393                           ; 4 bytes @ 0x72
  1394  0000F2                     	ds	4
  1395  0000F6                     pf_mount@fmt:
  1396                           	callstack 0
  1397                           
  1398                           ; 1 bytes @ 0x76
  1399  0000F6                     	ds	1
  1400                           
  1401                           	psect	cstackCOMRAM
  1402  000001                     __pcstackCOMRAM:
  1403                           	callstack 0
  1404  000001                     ??_isr_high:
  1405  000001                     
  1406                           ; 2 bytes @ 0x0
  1407  000001                     	ds	2
  1408  000003                     isr_high@d:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x2
  1412  000003                     	ds	1
  1413  000004                     isr_high@i:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x3
  1417  000004                     	ds	2
  1418  000006                     ?_strlen:
  1419                           	callstack 0
  1420  000006                     ?_isupper:
  1421                           	callstack 0
  1422  000006                     ?_isalpha:
  1423                           	callstack 0
  1424  000006                     ?_isdigit:
  1425                           	callstack 0
  1426  000006                     ?_strncmp:
  1427                           	callstack 0
  1428  000006                     ?_isspace:
  1429                           	callstack 0
  1430  000006                     ?_islower:
  1431                           	callstack 0
  1432  000006                     ?_mem_cmp:
  1433                           	callstack 0
  1434  000006                     ?___wmul:
  1435                           	callstack 0
  1436  000006                     ?_get_clust:
  1437                           	callstack 0
  1438  000006                     ?___lmul:
  1439                           	callstack 0
  1440  000006                     ?___lldiv:
  1441                           	callstack 0
  1442  000006                     ?___aodiv:
  1443                           	callstack 0
  1444  000006                     ?___aomod:
  1445                           	callstack 0
  1446  000006                     ?___lodiv:
  1447                           	callstack 0
  1448  000006                     ?___lomod:
  1449                           	callstack 0
  1450  000006                     pwm_Init@period:
  1451                           	callstack 0
  1452  000006                     putch@byte:
  1453                           	callstack 0
  1454  000006                     xmit_spi@d:
  1455                           	callstack 0
  1456  000006                     pwm_setDuty@dutycycle:
  1457                           	callstack 0
  1458  000006                     mem_set@dst:
  1459                           	callstack 0
  1460  000006                     mem_cmp@dst:
  1461                           	callstack 0
  1462  000006                     get_clust@dir:
  1463                           	callstack 0
  1464  000006                     get_fileinfo@dj:
  1465                           	callstack 0
  1466  000006                     ___wmul@multiplier:
  1467                           	callstack 0
  1468  000006                     memset@dest:
  1469                           	callstack 0
  1470  000006                     isalpha@c:
  1471                           	callstack 0
  1472  000006                     isdigit@c:
  1473                           	callstack 0
  1474  000006                     isspace@c:
  1475                           	callstack 0
  1476  000006                     isupper@c:
  1477                           	callstack 0
  1478  000006                     strlen@s:
  1479                           	callstack 0
  1480  000006                     strncmp@_l:
  1481                           	callstack 0
  1482  000006                     islower@c:
  1483                           	callstack 0
  1484  000006                     ___lmul@multiplier:
  1485                           	callstack 0
  1486  000006                     ___lldiv@dividend:
  1487                           	callstack 0
  1488  000006                     ___aodiv@dividend:
  1489                           	callstack 0
  1490  000006                     ___aomod@dividend:
  1491                           	callstack 0
  1492  000006                     ___lodiv@dividend:
  1493                           	callstack 0
  1494  000006                     ___lomod@dividend:
  1495                           	callstack 0
  1496                           
  1497                           ; 8 bytes @ 0x5
  1498  000006                     	ds	1
  1499  000007                     fputc@c:
  1500                           	callstack 0
  1501  000007                     send_cmd2@arg:
  1502                           	callstack 0
  1503                           
  1504                           ; 4 bytes @ 0x6
  1505  000007                     	ds	1
  1506  000008                     ??_isupper:
  1507  000008                     ??_isalpha:
  1508  000008                     ??_isdigit:
  1509  000008                     ??_isspace:
  1510  000008                     ??_islower:
  1511  000008                     ??_pwm_setDuty:
  1512  000008                     mem_set@val:
  1513                           	callstack 0
  1514  000008                     mem_cmp@src:
  1515                           	callstack 0
  1516  000008                     get_fileinfo@dir:
  1517                           	callstack 0
  1518  000008                     ___wmul@multiplicand:
  1519                           	callstack 0
  1520  000008                     memset@c:
  1521                           	callstack 0
  1522  000008                     strlen@a:
  1523                           	callstack 0
  1524  000008                     strncmp@_r:
  1525                           	callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x7
  1528  000008                     	ds	1
  1529  000009                     fputc@fp:
  1530                           	callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x8
  1533  000009                     	ds	1
  1534  00000A                     ??_get_clust:
  1535  00000A                     mem_set@cnt:
  1536                           	callstack 0
  1537  00000A                     mem_cmp@cnt:
  1538                           	callstack 0
  1539  00000A                     get_fileinfo@fno:
  1540                           	callstack 0
  1541  00000A                     ___wmul@product:
  1542                           	callstack 0
  1543  00000A                     memset@n:
  1544                           	callstack 0
  1545  00000A                     strncmp@n:
  1546                           	callstack 0
  1547  00000A                     ___lmul@multiplicand:
  1548                           	callstack 0
  1549  00000A                     ___lldiv@divisor:
  1550                           	callstack 0
  1551                           
  1552                           ; 4 bytes @ 0x9
  1553  00000A                     	ds	1
  1554  00000B                     ??_fputc:
  1555  00000B                     send_cmd2@res:
  1556                           	callstack 0
  1557                           
  1558                           ; 1 bytes @ 0xA
  1559  00000B                     	ds	1
  1560  00000C                     ??_memset:
  1561  00000C                     ??_strncmp:
  1562  00000C                     ??_mem_cmp:
  1563  00000C                     ??_get_fileinfo:
  1564  00000C                     ?_toupper:
  1565                           	callstack 0
  1566  00000C                     send_cmd2@cmd:
  1567                           	callstack 0
  1568  00000C                     _isspace$1869:
  1569                           	callstack 0
  1570  00000C                     mem_set@d:
  1571                           	callstack 0
  1572  00000C                     toupper@c:
  1573                           	callstack 0
  1574                           
  1575                           ; 2 bytes @ 0xB
  1576  00000C                     	ds	1
  1577  00000D                     ?_atoi:
  1578                           	callstack 0
  1579  00000D                     send_cmd2@n:
  1580                           	callstack 0
  1581  00000D                     atoi@s:
  1582                           	callstack 0
  1583  00000D                     strncmp@l:
  1584                           	callstack 0
  1585                           
  1586                           ; 2 bytes @ 0xC
  1587  00000D                     	ds	1
  1588  00000E                     ??_toupper:
  1589  00000E                     mem_cmp@d:
  1590                           	callstack 0
  1591  00000E                     create_name@dj:
  1592                           	callstack 0
  1593  00000E                     memset@k:
  1594                           	callstack 0
  1595  00000E                     send_cmd@arg:
  1596                           	callstack 0
  1597  00000E                     ___lmul@product:
  1598                           	callstack 0
  1599  00000E                     ___lldiv@quotient:
  1600                           	callstack 0
  1601  00000E                     ___aodiv@divisor:
  1602                           	callstack 0
  1603  00000E                     ___aomod@divisor:
  1604                           	callstack 0
  1605  00000E                     ___lodiv@divisor:
  1606                           	callstack 0
  1607  00000E                     ___lomod@divisor:
  1608                           	callstack 0
  1609                           
  1610                           ; 8 bytes @ 0xD
  1611  00000E                     	ds	1
  1612  00000F                     ??_atoi:
  1613  00000F                     strncmp@r:
  1614                           	callstack 0
  1615                           
  1616                           ; 2 bytes @ 0xE
  1617  00000F                     	ds	1
  1618  000010                     ?_stoa:
  1619                           	callstack 0
  1620  000010                     mem_cmp@s:
  1621                           	callstack 0
  1622  000010                     create_name@path:
  1623                           	callstack 0
  1624  000010                     memset@s:
  1625                           	callstack 0
  1626  000010                     stoa@fp:
  1627                           	callstack 0
  1628  000010                     fputs@s:
  1629                           	callstack 0
  1630                           
  1631                           ; 2 bytes @ 0xF
  1632  000010                     	ds	2
  1633  000012                     ??_create_name:
  1634  000012                     ?_xatoi:
  1635                           	callstack 0
  1636  000012                     ?_clust2sect:
  1637                           	callstack 0
  1638  000012                     send_cmd@n:
  1639                           	callstack 0
  1640  000012                     ___lldiv@counter:
  1641                           	callstack 0
  1642  000012                     mem_cmp@r:
  1643                           	callstack 0
  1644  000012                     xatoi@str:
  1645                           	callstack 0
  1646  000012                     stoa@s:
  1647                           	callstack 0
  1648  000012                     fputs@fp:
  1649                           	callstack 0
  1650  000012                     _toupper$1924:
  1651                           	callstack 0
  1652  000012                     clust2sect@clst:
  1653                           	callstack 0
  1654  000012                     get_clust@clst:
  1655                           	callstack 0
  1656                           
  1657                           ; 4 bytes @ 0x11
  1658  000012                     	ds	1
  1659  000013                     send_cmd@cmd:
  1660                           	callstack 0
  1661  000013                     atoi@neg:
  1662                           	callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x12
  1665  000013                     	ds	1
  1666  000014                     ??_stoa:
  1667  000014                     send_cmd@res:
  1668                           	callstack 0
  1669  000014                     fputs@c:
  1670                           	callstack 0
  1671  000014                     xatoi@res:
  1672                           	callstack 0
  1673                           
  1674                           ; 2 bytes @ 0x13
  1675  000014                     	ds	1
  1676  000015                     ??_disk_initialize:
  1677  000015                     _atoi$1842:
  1678                           	callstack 0
  1679  000015                     fputs@i:
  1680                           	callstack 0
  1681  000015                     stoa@nuls:
  1682                           	callstack 0
  1683                           
  1684                           ; 7 bytes @ 0x14
  1685  000015                     	ds	1
  1686  000016                     ??_xatoi:
  1687  000016                     ??_clust2sect:
  1688  000016                     ___aodiv@counter:
  1689                           	callstack 0
  1690  000016                     ___aomod@counter:
  1691                           	callstack 0
  1692  000016                     ___lomod@counter:
  1693                           	callstack 0
  1694  000016                     create_name@p:
  1695                           	callstack 0
  1696  000016                     disk_initialize@ocr:
  1697                           	callstack 0
  1698  000016                     ___lodiv@quotient:
  1699                           	callstack 0
  1700                           
  1701                           ; 8 bytes @ 0x15
  1702  000016                     	ds	1
  1703  000017                     ?_pad:
  1704                           	callstack 0
  1705  000017                     ___aodiv@sign:
  1706                           	callstack 0
  1707  000017                     ___aomod@sign:
  1708                           	callstack 0
  1709  000017                     pad@fp:
  1710                           	callstack 0
  1711  000017                     _atoi$1844:
  1712                           	callstack 0
  1713                           
  1714                           ; 2 bytes @ 0x16
  1715  000017                     	ds	1
  1716  000018                     ?_abs:
  1717                           	callstack 0
  1718  000018                     create_name@ni:
  1719                           	callstack 0
  1720  000018                     xatoi@s:
  1721                           	callstack 0
  1722  000018                     abs@a:
  1723                           	callstack 0
  1724  000018                     ___aodiv@quotient:
  1725                           	callstack 0
  1726                           
  1727                           ; 8 bytes @ 0x17
  1728  000018                     	ds	1
  1729  000019                     create_name@si:
  1730                           	callstack 0
  1731  000019                     xatoi@r:
  1732                           	callstack 0
  1733  000019                     _atoi$1843:
  1734                           	callstack 0
  1735  000019                     pad@buf:
  1736                           	callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x18
  1739  000019                     	ds	1
  1740  00001A                     ??_abs:
  1741  00001A                     create_name@sfn:
  1742                           	callstack 0
  1743  00001A                     _disk_initialize$1200:
  1744                           	callstack 0
  1745  00001A                     atoi@n:
  1746                           	callstack 0
  1747  00001A                     xatoi@val:
  1748                           	callstack 0
  1749                           
  1750                           ; 4 bytes @ 0x19
  1751  00001A                     	ds	1
  1752  00001B                     clust2sect@fs:
  1753                           	callstack 0
  1754  00001B                     pad@p:
  1755                           	callstack 0
  1756                           
  1757                           ; 2 bytes @ 0x1A
  1758  00001B                     	ds	1
  1759  00001C                     create_name@i:
  1760                           	callstack 0
  1761  00001C                     disk_initialize@cmd:
  1762                           	callstack 0
  1763  00001C                     stoa@i:
  1764                           	callstack 0
  1765                           
  1766                           ; 2 bytes @ 0x1B
  1767  00001C                     	ds	1
  1768  00001D                     ??_pad:
  1769  00001D                     create_name@c:
  1770                           	callstack 0
  1771  00001D                     disk_initialize@ty:
  1772                           	callstack 0
  1773  00001D                     dir_rewind@dj:
  1774                           	callstack 0
  1775                           
  1776                           ; 2 bytes @ 0x1C
  1777  00001D                     	ds	1
  1778  00001E                     xatoi@c:
  1779                           	callstack 0
  1780  00001E                     ___lodiv@counter:
  1781                           	callstack 0
  1782  00001E                     disk_initialize@tmr:
  1783                           	callstack 0
  1784  00001E                     pad@i:
  1785                           	callstack 0
  1786  00001E                     stoa@w:
  1787                           	callstack 0
  1788                           
  1789                           ; 2 bytes @ 0x1D
  1790  00001E                     	ds	1
  1791  00001F                     
  1792                           ; 1 bytes @ 0x1E
  1793  00001F                     	ds	1
  1794  000020                     disk_initialize@n:
  1795                           	callstack 0
  1796  000020                     pad@w:
  1797                           	callstack 0
  1798  000020                     stoa@cp:
  1799                           	callstack 0
  1800                           
  1801                           ; 2 bytes @ 0x1F
  1802  000020                     	ds	2
  1803  000022                     ?_dtoa:
  1804                           	callstack 0
  1805  000022                     ?_utoa:
  1806                           	callstack 0
  1807  000022                     ?_xtoa:
  1808                           	callstack 0
  1809  000022                     dtoa@fp:
  1810                           	callstack 0
  1811  000022                     stoa@p:
  1812                           	callstack 0
  1813  000022                     utoa@fp:
  1814                           	callstack 0
  1815  000022                     xtoa@fp:
  1816                           	callstack 0
  1817                           
  1818                           ; 2 bytes @ 0x21
  1819  000022                     	ds	1
  1820  000023                     _dir_rewind$703:
  1821                           	callstack 0
  1822                           
  1823                           ; 4 bytes @ 0x22
  1824  000023                     	ds	1
  1825  000024                     stoa@l:
  1826                           	callstack 0
  1827  000024                     dtoa@d:
  1828                           	callstack 0
  1829  000024                     utoa@d:
  1830                           	callstack 0
  1831  000024                     xtoa@d:
  1832                           	callstack 0
  1833                           
  1834                           ; 8 bytes @ 0x23
  1835  000024                     	ds	2
  1836  000026                     get_fileinfo@p:
  1837                           	callstack 0
  1838                           
  1839                           ; 2 bytes @ 0x25
  1840  000026                     	ds	1
  1841  000027                     dir_rewind@fs:
  1842                           	callstack 0
  1843                           
  1844                           ; 2 bytes @ 0x26
  1845  000027                     	ds	1
  1846  000028                     get_fileinfo@c:
  1847                           	callstack 0
  1848                           
  1849                           ; 1 bytes @ 0x27
  1850  000028                     	ds	1
  1851  000029                     get_fileinfo@i:
  1852                           	callstack 0
  1853  000029                     dir_rewind@clst:
  1854                           	callstack 0
  1855                           
  1856                           ; 4 bytes @ 0x28
  1857  000029                     	ds	3
  1858  00002C                     ??_dtoa:
  1859  00002C                     ??_utoa:
  1860  00002C                     xtoa@x:
  1861                           	callstack 0
  1862                           
  1863                           ; 1 bytes @ 0x2B
  1864  00002C                     	ds	1
  1865  00002D                     ??_xtoa:
  1866                           
  1867                           ; 1 bytes @ 0x2C
  1868  00002D                     	ds	7
  1869  000034                     _dtoa$1753:
  1870                           	callstack 0
  1871  000034                     utoa@p:
  1872                           	callstack 0
  1873                           
  1874                           ; 2 bytes @ 0x33
  1875  000034                     	ds	1
  1876  000035                     _xtoa$1781:
  1877                           	callstack 0
  1878                           
  1879                           ; 2 bytes @ 0x34
  1880  000035                     	ds	1
  1881  000036                     dtoa@p:
  1882                           	callstack 0
  1883  000036                     utoa@w:
  1884                           	callstack 0
  1885                           
  1886                           ; 2 bytes @ 0x35
  1887  000036                     	ds	1
  1888  000037                     _xtoa$1782:
  1889                           	callstack 0
  1890                           
  1891                           ; 2 bytes @ 0x36
  1892  000037                     	ds	1
  1893  000038                     dtoa@w:
  1894                           	callstack 0
  1895  000038                     utoa@n:
  1896                           	callstack 0
  1897                           
  1898                           ; 8 bytes @ 0x37
  1899  000038                     	ds	1
  1900  000039                     xtoa@p:
  1901                           	callstack 0
  1902                           
  1903                           ; 2 bytes @ 0x38
  1904  000039                     	ds	1
  1905  00003A                     dtoa@s:
  1906                           	callstack 0
  1907                           
  1908                           ; 2 bytes @ 0x39
  1909  00003A                     	ds	1
  1910  00003B                     xtoa@w:
  1911                           	callstack 0
  1912                           
  1913                           ; 2 bytes @ 0x3A
  1914  00003B                     	ds	1
  1915  00003C                     dtoa@n:
  1916                           	callstack 0
  1917                           
  1918                           ; 8 bytes @ 0x3B
  1919  00003C                     	ds	1
  1920  00003D                     xtoa@n:
  1921                           	callstack 0
  1922                           
  1923                           ; 8 bytes @ 0x3C
  1924  00003D                     	ds	3
  1925  000040                     utoa@i:
  1926                           	callstack 0
  1927                           
  1928                           ; 2 bytes @ 0x3F
  1929  000040                     	ds	4
  1930  000044                     dtoa@i:
  1931                           	callstack 0
  1932                           
  1933                           ; 2 bytes @ 0x43
  1934  000044                     	ds	1
  1935  000045                     xtoa@i:
  1936                           	callstack 0
  1937                           
  1938                           ; 2 bytes @ 0x44
  1939  000045                     	ds	2
  1940  000047                     xtoa@c:
  1941                           	callstack 0
  1942                           
  1943                           ; 2 bytes @ 0x46
  1944  000047                     	ds	2
  1945  000049                     ?_vfpfcnvrt:
  1946                           	callstack 0
  1947  000049                     vfpfcnvrt@fp:
  1948                           	callstack 0
  1949                           
  1950                           ; 2 bytes @ 0x48
  1951  000049                     	ds	2
  1952  00004B                     vfpfcnvrt@fmt:
  1953                           	callstack 0
  1954                           
  1955                           ; 2 bytes @ 0x4A
  1956  00004B                     	ds	2
  1957  00004D                     vfpfcnvrt@ap:
  1958                           	callstack 0
  1959                           
  1960                           ; 2 bytes @ 0x4C
  1961  00004D                     	ds	2
  1962  00004F                     ??_vfpfcnvrt:
  1963                           
  1964                           ; 1 bytes @ 0x4E
  1965  00004F                     	ds	14
  1966  00005D                     vfpfcnvrt@cp:
  1967                           	callstack 0
  1968                           
  1969                           ; 2 bytes @ 0x5C
  1970  00005D                     	ds	2
  1971  00005F                     _vfpfcnvrt$1796:
  1972                           	callstack 0
  1973                           
  1974                           ; 2 bytes @ 0x5E
  1975  00005F                     	ds	2
  1976  000061                     vfpfcnvrt@ll:
  1977                           	callstack 0
  1978                           
  1979                           ; 8 bytes @ 0x60
  1980  000061                     	ds	8
  1981  000069                     vfpfcnvrt@c:
  1982                           	callstack 0
  1983                           
  1984                           ; 1 bytes @ 0x68
  1985  000069                     	ds	1
  1986  00006A                     vfpfcnvrt@llu:
  1987                           	callstack 0
  1988                           
  1989                           ; 8 bytes @ 0x69
  1990  00006A                     	ds	8
  1991  000072                     vfprintf@cfmt:
  1992                           	callstack 0
  1993                           
  1994                           ; 2 bytes @ 0x71
  1995  000072                     	ds	2
  1996  000074                     printf@ap:
  1997                           	callstack 0
  1998                           
  1999                           ; 2 bytes @ 0x73
  2000  000074                     	ds	2
  2001  000076                     
  2002                           ; 1 bytes @ 0x75
  2003 ;;
  2004 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2005 ;;
  2006 ;; *************** function _main *****************
  2007 ;; Defined at:
  2008 ;;		line 69 in file "main.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  count           2   96[BANK1 ] int 
  2013 ;;  num_temp        2   88[BANK1 ] unsigned int 
  2014 ;;  fs             42  149[BANK1 ] struct .
  2015 ;;  fno            22  106[BANK1 ] struct .
  2016 ;;  dir            16  128[BANK1 ] struct .
  2017 ;;  p1              4  100[BANK1 ] long 
  2018 ;;  p2              4   92[BANK1 ] long 
  2019 ;;  ptr             2  146[BANK1 ] PTR unsigned char 
  2020 ;;		 -> Line(128), 
  2021 ;;  s1              2  144[BANK1 ] unsigned int 
  2022 ;;  s2              2  104[BANK1 ] unsigned int 
  2023 ;;  s3              2   98[BANK1 ] unsigned int 
  2024 ;;  ofs             2   90[BANK1 ] unsigned int 
  2025 ;;  duty            2    0        unsigned short 
  2026 ;;  w               2    0        unsigned int 
  2027 ;;  cnt             2    0        unsigned int 
  2028 ;;  res             1  148[BANK1 ] unsigned char 
  2029 ;;  upmode          1   87[BANK1 ] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  2   95[None  ] int 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2039 ;;      Params:         0       0       0       0       0       0       0
  2040 ;;      Locals:         0       0     104       0       0       0       0
  2041 ;;      Temps:          0       0       2       0       0       0       0
  2042 ;;      Totals:         0       0     106       0       0       0       0
  2043 ;;Total ram usage:      106 bytes
  2044 ;; Hardware stack levels required when called: 15
  2045 ;; This function calls:
  2046 ;;		_disk_initialize
  2047 ;;		_disk_readp
  2048 ;;		_gpio_init
  2049 ;;		_pf_lseek
  2050 ;;		_pf_mount
  2051 ;;		_pf_open
  2052 ;;		_pf_opendir
  2053 ;;		_pf_read
  2054 ;;		_pf_readdir
  2055 ;;		_printf
  2056 ;;		_put_drc
  2057 ;;		_put_dump
  2058 ;;		_put_rc
  2059 ;;		_pwm_Init
  2060 ;;		_pwm_setDuty
  2061 ;;		_pwm_start
  2062 ;;		_pwm_stop
  2063 ;;		_uart_gets
  2064 ;;		_uart_init
  2065 ;;		_xatoi
  2066 ;; This function is called by:
  2067 ;;		Startup code after reset
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text0
  2072  0007D8                     __ptext0:
  2073                           	callstack 0
  2074  0007D8                     _main:
  2075                           	callstack 16
  2076  0007D8                     
  2077                           ;main.c: 80:     unsigned char upmode = 1;
  2078  0007D8  0E01               	movlw	1
  2079  0007DA  0101               	movlb	1	; () banked
  2080  0007DC  6F57               	movwf	main@upmode& (0+255),b
  2081  0007DE                     
  2082                           ; BSR set to: 1
  2083                           ;main.c: 84:     pwm_Init(63);
  2084  0007DE  0E3F               	movlw	63
  2085  0007E0  EC70  F02B         	call	_pwm_Init
  2086                           
  2087                           ;main.c: 85:  gpio_init();
  2088  0007E4  EC92  F02B         	call	_gpio_init	;wreg free
  2089  0007E8                     
  2090                           ;main.c: 88:  uart_init();
  2091  0007E8  EC9E  F029         	call	_uart_init	;wreg free
  2092  0007EC                     
  2093                           ;main.c: 90:     printf("\r\n\r\nPetit FatFs test monitor\r\n");
  2094  0007EC  0EA1               	movlw	low STR_3
  2095  0007EE  0100               	movlb	0	; () banked
  2096  0007F0  6F86               	movwf	printf@fmt& (0+255),b
  2097  0007F2  0E7C               	movlw	high STR_3
  2098  0007F4  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2099  0007F6  EC1C  F02B         	call	_printf	;wreg free
  2100  0007FA                     l7661:
  2101                           
  2102                           ;main.c: 105:         LATBbits.LB0 = PORTBbits.RB0 ^ 0x01;
  2103  0007FA  A081               	btfss	129,0,c	;volatile
  2104  0007FC  EF02  F004         	goto	u9741
  2105  000800  EF05  F004         	goto	u9740
  2106  000804                     u9741:
  2107  000804  808A               	bsf	138,0,c	;volatile
  2108  000806  EF06  F004         	goto	u9755
  2109  00080A                     u9740:
  2110  00080A  908A               	bcf	138,0,c	;volatile
  2111  00080C                     u9755:
  2112  00080C                     
  2113                           ;main.c: 107:         printf(">");
  2114  00080C  0EBD               	movlw	low STR_4
  2115  00080E  0100               	movlb	0	; () banked
  2116  000810  6F86               	movwf	printf@fmt& (0+255),b
  2117  000812  0E7D               	movlw	high STR_4
  2118  000814  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2119  000816  EC1C  F02B         	call	_printf	;wreg free
  2120  00081A                     
  2121                           ;main.c: 108:         uart_gets(Line, sizeof(Line));
  2122  00081A  0E00               	movlw	low _Line
  2123  00081C  0100               	movlb	0	; () banked
  2124  00081E  6F90               	movwf	uart_gets@buff& (0+255),b
  2125  000820  0E03               	movlw	high _Line
  2126  000822  6F91               	movwf	(uart_gets@buff+1)& (0+255),b
  2127  000824  0E00               	movlw	0
  2128  000826  6F93               	movwf	(uart_gets@len+1)& (0+255),b
  2129  000828  0E80               	movlw	128
  2130  00082A  6F92               	movwf	uart_gets@len& (0+255),b
  2131  00082C  ECF6  F021         	call	_uart_gets	;wreg free
  2132  000830                     
  2133                           ;main.c: 109:         printf("\r\n");
  2134  000830  0E1F               	movlw	low (STR_16+18)
  2135  000832  0100               	movlb	0	; () banked
  2136  000834  6F86               	movwf	printf@fmt& (0+255),b
  2137  000836  0E7D               	movlw	high (STR_16+18)
  2138  000838  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2139  00083A  EC1C  F02B         	call	_printf	;wreg free
  2140  00083E                     
  2141                           ;main.c: 111:         ptr = Line;
  2142  00083E  0E00               	movlw	low _Line
  2143  000840  0101               	movlb	1	; () banked
  2144  000842  6F92               	movwf	main@ptr& (0+255),b
  2145  000844  0E03               	movlw	high _Line
  2146  000846  6F93               	movwf	(main@ptr+1)& (0+255),b
  2147                           
  2148                           ;main.c: 113:   switch (*ptr++)
  2149  000848  EFAE  F007         	goto	l7855
  2150  00084C                     l7671:
  2151                           
  2152                           ; BSR set to: 1
  2153                           ;main.c: 119:                 printf("\tInitialize physical drive\r\n\t");
  2154  00084C  0EC0               	movlw	low STR_6
  2155  00084E  0100               	movlb	0	; () banked
  2156  000850  6F86               	movwf	printf@fmt& (0+255),b
  2157  000852  0E7C               	movlw	high STR_6
  2158  000854  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2159  000856  EC1C  F02B         	call	_printf	;wreg free
  2160  00085A                     l7673:
  2161                           
  2162                           ;main.c: 121:                 {;main.c: 122:         res = disk_initialize();
  2163  00085A  EC9C  F014         	call	_disk_initialize	;wreg free
  2164  00085E  0101               	movlb	1	; () banked
  2165  000860  6F94               	movwf	main@res& (0+255),b
  2166  000862                     
  2167                           ; BSR set to: 1
  2168                           ;main.c: 123:                 }while(res != 0);
  2169  000862  5194               	movf	main@res& (0+255),w,b
  2170  000864  A4D8               	btfss	status,2,c
  2171  000866  EF37  F004         	goto	u9761
  2172  00086A  EF39  F004         	goto	u9760
  2173  00086E                     u9761:
  2174  00086E  EF2D  F004         	goto	l7673
  2175  000872                     u9760:
  2176  000872                     
  2177                           ; BSR set to: 1
  2178                           ;main.c: 124:     put_drc(res);
  2179  000872  5194               	movf	main@res& (0+255),w,b
  2180  000874  EC56  F02B         	call	_put_drc
  2181                           
  2182                           ;main.c: 125:     break;
  2183  000878  EFFD  F003         	goto	l7661
  2184  00087C                     l7679:
  2185                           
  2186                           ; BSR set to: 1
  2187                           ;main.c: 128:     if (!xatoi(&ptr, &p1) || !xatoi(&ptr, &p2))
  2188  00087C  0E92               	movlw	low main@ptr
  2189  00087E  6E12               	movwf	xatoi@str^0,c
  2190  000880  0E01               	movlw	high main@ptr
  2191  000882  6E13               	movwf	(xatoi@str+1)^0,c
  2192  000884  0E64               	movlw	low main@p1
  2193  000886  6E14               	movwf	xatoi@res^0,c
  2194  000888  0E01               	movlw	high main@p1
  2195  00088A  6E15               	movwf	(xatoi@res+1)^0,c
  2196  00088C  EC06  F012         	call	_xatoi	;wreg free
  2197  000890  5012               	movf	?_xatoi^0,w,c
  2198  000892  1013               	iorwf	(?_xatoi+1)^0,w,c
  2199  000894  B4D8               	btfsc	status,2,c
  2200  000896  EF4F  F004         	goto	u9771
  2201  00089A  EF51  F004         	goto	u9770
  2202  00089E                     u9771:
  2203  00089E  EFFD  F003         	goto	l7661
  2204  0008A2                     u9770:
  2205  0008A2  0E92               	movlw	low main@ptr
  2206  0008A4  6E12               	movwf	xatoi@str^0,c
  2207  0008A6  0E01               	movlw	high main@ptr
  2208  0008A8  6E13               	movwf	(xatoi@str+1)^0,c
  2209  0008AA  0E5C               	movlw	low main@p2
  2210  0008AC  6E14               	movwf	xatoi@res^0,c
  2211  0008AE  0E01               	movlw	high main@p2
  2212  0008B0  6E15               	movwf	(xatoi@res+1)^0,c
  2213  0008B2  EC06  F012         	call	_xatoi	;wreg free
  2214  0008B6  5012               	movf	?_xatoi^0,w,c
  2215  0008B8  1013               	iorwf	(?_xatoi+1)^0,w,c
  2216  0008BA  A4D8               	btfss	status,2,c
  2217  0008BC  EF62  F004         	goto	u9781
  2218  0008C0  EF64  F004         	goto	u9780
  2219  0008C4                     u9781:
  2220  0008C4  EF66  F004         	goto	l105
  2221  0008C8                     u9780:
  2222  0008C8  EFFD  F003         	goto	l7661
  2223  0008CC                     l105:
  2224                           
  2225                           ;main.c: 130:     s2 = p2;
  2226  0008CC  C15C  F168         	movff	main@p2,main@s2
  2227  0008D0  C15D  F169         	movff	main@p2+1,main@s2+1
  2228  0008D4                     
  2229                           ;main.c: 131:     res = disk_readp((BYTE*)Line, p1, s2, 128);
  2230  0008D4  0E00               	movlw	low _Line
  2231  0008D6  0100               	movlb	0	; () banked
  2232  0008D8  6F90               	movwf	disk_readp@buff& (0+255),b
  2233  0008DA  0E03               	movlw	high _Line
  2234  0008DC  6F91               	movwf	(disk_readp@buff+1)& (0+255),b
  2235  0008DE  C164  F092         	movff	main@p1,disk_readp@sector
  2236  0008E2  C165  F093         	movff	main@p1+1,disk_readp@sector+1
  2237  0008E6  C166  F094         	movff	main@p1+2,disk_readp@sector+2
  2238  0008EA  C167  F095         	movff	main@p1+3,disk_readp@sector+3
  2239  0008EE  C168  F096         	movff	main@s2,disk_readp@offset
  2240  0008F2  C169  F097         	movff	main@s2+1,disk_readp@offset+1
  2241  0008F6  0E00               	movlw	0
  2242  0008F8  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  2243  0008FA  0E80               	movlw	128
  2244  0008FC  6F98               	movwf	disk_readp@count& (0+255),b
  2245  0008FE  EC64  F01B         	call	_disk_readp	;wreg free
  2246  000902  0101               	movlb	1	; () banked
  2247  000904  6F94               	movwf	main@res& (0+255),b
  2248  000906                     
  2249                           ; BSR set to: 1
  2250                           ;main.c: 132:     if (res) {
  2251  000906  5194               	movf	main@res& (0+255),w,b
  2252  000908  B4D8               	btfsc	status,2,c
  2253  00090A  EF89  F004         	goto	u9791
  2254  00090E  EF8B  F004         	goto	u9790
  2255  000912                     u9791:
  2256  000912  EF90  F004         	goto	l7689
  2257  000916                     u9790:
  2258  000916                     
  2259                           ; BSR set to: 1
  2260                           ;main.c: 133:                     put_drc(res);
  2261  000916  5194               	movf	main@res& (0+255),w,b
  2262  000918  EC56  F02B         	call	_put_drc
  2263                           
  2264                           ;main.c: 134:                     break;
  2265  00091C  EFFD  F003         	goto	l7661
  2266  000920                     l7689:
  2267                           
  2268                           ; BSR set to: 1
  2269                           ;main.c: 136:     s3 = s2 + 128;
  2270  000920  0E80               	movlw	128
  2271  000922  2568               	addwf	main@s2& (0+255),w,b
  2272  000924  6F62               	movwf	main@s3& (0+255),b
  2273  000926  0E00               	movlw	0
  2274  000928  2169               	addwfc	(main@s2+1)& (0+255),w,b
  2275  00092A  6F63               	movwf	(main@s3+1)& (0+255),b
  2276                           
  2277                           ;main.c: 137:     for (ptr = Line; s2 < s3; s2 += 16, ptr += 16, ofs += 16)
  2278  00092C  0E00               	movlw	low _Line
  2279  00092E  6F92               	movwf	main@ptr& (0+255),b
  2280  000930  0E03               	movlw	high _Line
  2281  000932  6F93               	movwf	(main@ptr+1)& (0+255),b
  2282  000934  EFDB  F004         	goto	l7705
  2283  000938                     l7691:
  2284                           
  2285                           ; BSR set to: 1
  2286                           ;main.c: 138:                 {;main.c: 139:      s1 = (s3 - s2 >= 16) ? 16 : s3 - s2;
  2287  000938  5168               	movf	main@s2& (0+255),w,b
  2288  00093A  5D62               	subwf	main@s3& (0+255),w,b
  2289  00093C  6F55               	movwf	??_main& (0+255),b
  2290  00093E  5169               	movf	(main@s2+1)& (0+255),w,b
  2291  000940  5963               	subwfb	(main@s3+1)& (0+255),w,b
  2292  000942  6F56               	movwf	(??_main+1)& (0+255),b
  2293  000944  5156               	movf	(??_main+1)& (0+255),w,b
  2294  000946  E107               	bnz	u9801
  2295  000948  0E10               	movlw	16
  2296  00094A  5D55               	subwf	??_main& (0+255),w,b
  2297  00094C  B0D8               	btfsc	status,0,c
  2298  00094E  EFAB  F004         	goto	u9801
  2299  000952  EFAD  F004         	goto	u9800
  2300  000956                     u9801:
  2301  000956  EFB5  F004         	goto	l7695
  2302  00095A                     u9800:
  2303  00095A                     
  2304                           ; BSR set to: 1
  2305  00095A  5168               	movf	main@s2& (0+255),w,b
  2306  00095C  5D62               	subwf	main@s3& (0+255),w,b
  2307  00095E  6F90               	movwf	main@s1& (0+255),b
  2308  000960  5169               	movf	(main@s2+1)& (0+255),w,b
  2309  000962  5963               	subwfb	(main@s3+1)& (0+255),w,b
  2310  000964  6F91               	movwf	(main@s1+1)& (0+255),b
  2311  000966  EFB9  F004         	goto	l7697
  2312  00096A                     l7695:
  2313                           
  2314                           ; BSR set to: 1
  2315  00096A  0E00               	movlw	0
  2316  00096C  6F91               	movwf	(main@s1+1)& (0+255),b
  2317  00096E  0E10               	movlw	16
  2318  000970  6F90               	movwf	main@s1& (0+255),b
  2319  000972                     l7697:
  2320                           
  2321                           ; BSR set to: 1
  2322                           ;main.c: 140:      put_dump((BYTE*)ptr, s2, s1, 16);
  2323  000972  C192  F090         	movff	main@ptr,put_dump@buff
  2324  000976  C193  F091         	movff	main@ptr+1,put_dump@buff+1
  2325  00097A  C168  F092         	movff	main@s2,put_dump@addr
  2326  00097E  C169  F093         	movff	main@s2+1,put_dump@addr+1
  2327  000982  0100               	movlb	0	; () banked
  2328  000984  6B94               	clrf	(put_dump@addr+2)& (0+255),b
  2329  000986  6B95               	clrf	(put_dump@addr+3)& (0+255),b
  2330  000988  C190  F096         	movff	main@s1,put_dump@len
  2331  00098C  C191  F097         	movff	main@s1+1,put_dump@len+1
  2332  000990  0E00               	movlw	0
  2333  000992  6F99               	movwf	(put_dump@width+1)& (0+255),b
  2334  000994  0E10               	movlw	16
  2335  000996  6F98               	movwf	put_dump@width& (0+255),b
  2336  000998  ECE5  F016         	call	_put_dump	;wreg free
  2337  00099C                     
  2338                           ;main.c: 141:     }
  2339  00099C  0E10               	movlw	16
  2340  00099E  0101               	movlb	1	; () banked
  2341  0009A0  2768               	addwf	main@s2& (0+255),f,b
  2342  0009A2  0E00               	movlw	0
  2343  0009A4  2369               	addwfc	(main@s2+1)& (0+255),f,b
  2344  0009A6                     
  2345                           ; BSR set to: 1
  2346  0009A6  0E10               	movlw	16
  2347  0009A8  2792               	addwf	main@ptr& (0+255),f,b
  2348  0009AA  0E00               	movlw	0
  2349  0009AC  2393               	addwfc	(main@ptr+1)& (0+255),f,b
  2350  0009AE                     
  2351                           ; BSR set to: 1
  2352  0009AE  0E10               	movlw	16
  2353  0009B0  275A               	addwf	main@ofs& (0+255),f,b
  2354  0009B2  0E00               	movlw	0
  2355  0009B4  235B               	addwfc	(main@ofs+1)& (0+255),f,b
  2356  0009B6                     l7705:
  2357                           
  2358                           ; BSR set to: 1
  2359  0009B6  5162               	movf	main@s3& (0+255),w,b
  2360  0009B8  5D68               	subwf	main@s2& (0+255),w,b
  2361  0009BA  5163               	movf	(main@s3+1)& (0+255),w,b
  2362  0009BC  5969               	subwfb	(main@s2+1)& (0+255),w,b
  2363  0009BE  A0D8               	btfss	status,0,c
  2364  0009C0  EFE4  F004         	goto	u9811
  2365  0009C4  EFE6  F004         	goto	u9810
  2366  0009C8                     u9811:
  2367  0009C8  EF9C  F004         	goto	l7691
  2368  0009CC                     u9810:
  2369  0009CC  EFFD  F003         	goto	l7661
  2370  0009D0                     l7709:
  2371                           
  2372                           ; BSR set to: 1
  2373  0009D0  C192  FFD9         	movff	main@ptr,fsr2l
  2374  0009D4  C193  FFDA         	movff	main@ptr+1,fsr2h
  2375  0009D8  4B92               	infsnz	main@ptr& (0+255),f,b
  2376  0009DA  2B93               	incf	(main@ptr+1)& (0+255),f,b
  2377  0009DC  50DF               	movf	indf2,w,c
  2378  0009DE  6F55               	movwf	??_main& (0+255),b
  2379  0009E0  6B56               	clrf	(??_main+1)& (0+255),b
  2380                           
  2381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2382                           ; Switch size 1, requested type "simple"
  2383                           ; Number of cases is 1, Range of values is 0 to 0
  2384                           ; switch strategies available:
  2385                           ; Name         Instructions Cycles
  2386                           ; simple_byte            4     3 (average)
  2387                           ;	Chosen strategy is simple_byte
  2388  0009E2  5156               	movf	(??_main+1)& (0+255),w,b
  2389  0009E4  0A00               	xorlw	0	; case 0
  2390  0009E6  B4D8               	btfsc	status,2,c
  2391  0009E8  EFF8  F004         	goto	l8055
  2392  0009EC  EFFD  F003         	goto	l7661
  2393  0009F0                     l8055:
  2394                           
  2395                           ; BSR set to: 1
  2396                           ; Switch size 1, requested type "simple"
  2397                           ; Number of cases is 2, Range of values is 100 to 105
  2398                           ; switch strategies available:
  2399                           ; Name         Instructions Cycles
  2400                           ; simple_byte            7     4 (average)
  2401                           ;	Chosen strategy is simple_byte
  2402  0009F0  5155               	movf	??_main& (0+255),w,b
  2403  0009F2  0A64               	xorlw	100	; case 100
  2404  0009F4  B4D8               	btfsc	status,2,c
  2405  0009F6  EF3E  F004         	goto	l7679
  2406  0009FA  0A0D               	xorlw	13	; case 105
  2407  0009FC  B4D8               	btfsc	status,2,c
  2408  0009FE  EF26  F004         	goto	l7671
  2409  000A02  EFFD  F003         	goto	l7661
  2410  000A06                     l7711:
  2411                           
  2412                           ; BSR set to: 1
  2413                           ;main.c: 150:                 printf("\tMount the volume\r\n\t");
  2414  000A06  0EF8               	movlw	low STR_7
  2415  000A08  0100               	movlb	0	; () banked
  2416  000A0A  6F86               	movwf	printf@fmt& (0+255),b
  2417  000A0C  0E7C               	movlw	high STR_7
  2418  000A0E  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2419  000A10  EC1C  F02B         	call	_printf	;wreg free
  2420  000A14                     l120:
  2421                           
  2422                           ;main.c: 152:                 {;main.c: 153:                     res = pf_mount(&fs);
  2423  000A14  0E95               	movlw	low main@fs
  2424  000A16  0100               	movlb	0	; () banked
  2425  000A18  6FAA               	movwf	pf_mount@fs& (0+255),b
  2426  000A1A  0E01               	movlw	high main@fs
  2427  000A1C  6FAB               	movwf	(pf_mount@fs+1)& (0+255),b
  2428  000A1E  ECCB  F007         	call	_pf_mount	;wreg free
  2429  000A22  0101               	movlb	1	; () banked
  2430  000A24  6F94               	movwf	main@res& (0+255),b
  2431  000A26                     
  2432                           ; BSR set to: 1
  2433                           ;main.c: 154:                 } while (res != FR_OK);
  2434  000A26  5194               	movf	main@res& (0+255),w,b
  2435  000A28  A4D8               	btfss	status,2,c
  2436  000A2A  EF19  F005         	goto	u9821
  2437  000A2E  EF1B  F005         	goto	u9820
  2438  000A32                     u9821:
  2439  000A32  EF0A  F005         	goto	l120
  2440  000A36                     u9820:
  2441  000A36                     
  2442                           ; BSR set to: 1
  2443                           ;main.c: 155:     put_rc(res);
  2444  000A36  5194               	movf	main@res& (0+255),w,b
  2445  000A38  EC81  F028         	call	_put_rc
  2446                           
  2447                           ;main.c: 156:     break;
  2448  000A3C  EFFD  F003         	goto	l7661
  2449  000A40                     l7717:
  2450                           
  2451                           ; BSR set to: 1
  2452                           ;main.c: 159:                 printf("\tOpen a file\r\n\t");
  2453  000A40  0E48               	movlw	low STR_8
  2454  000A42  0100               	movlb	0	; () banked
  2455  000A44  6F86               	movwf	printf@fmt& (0+255),b
  2456  000A46  0E7D               	movlw	high STR_8
  2457  000A48  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2458  000A4A  EC1C  F02B         	call	_printf	;wreg free
  2459                           
  2460                           ;main.c: 160:     while (*ptr == ' ')
  2461  000A4E  EF2C  F005         	goto	l7721
  2462  000A52                     l7719:
  2463                           
  2464                           ;main.c: 161:                     ptr++;
  2465  000A52  0101               	movlb	1	; () banked
  2466  000A54  4B92               	infsnz	main@ptr& (0+255),f,b
  2467  000A56  2B93               	incf	(main@ptr+1)& (0+255),f,b
  2468  000A58                     l7721:
  2469                           
  2470                           ;main.c: 160:     while (*ptr == ' ')
  2471  000A58  C192  FFD9         	movff	main@ptr,fsr2l
  2472  000A5C  C193  FFDA         	movff	main@ptr+1,fsr2h
  2473  000A60  0E20               	movlw	32
  2474  000A62  18DE               	xorwf	postinc2,w,c
  2475  000A64  B4D8               	btfsc	status,2,c
  2476  000A66  EF37  F005         	goto	u9831
  2477  000A6A  EF39  F005         	goto	u9830
  2478  000A6E                     u9831:
  2479  000A6E  EF29  F005         	goto	l7719
  2480  000A72                     u9830:
  2481  000A72                     
  2482                           ;main.c: 162:     res = pf_open(ptr);
  2483  000A72  C192  F0E1         	movff	main@ptr,pf_open@path
  2484  000A76  C193  F0E2         	movff	main@ptr+1,pf_open@path+1
  2485  000A7A  EC73  F01E         	call	_pf_open	;wreg free
  2486  000A7E  0101               	movlb	1	; () banked
  2487  000A80  6F94               	movwf	main@res& (0+255),b
  2488                           
  2489                           ;main.c: 163:                 put_rc(res);
  2490  000A82  5194               	movf	main@res& (0+255),w,b
  2491  000A84  EC81  F028         	call	_put_rc
  2492  000A88                     
  2493                           ;main.c: 164:                 if(res == FR_OK)
  2494  000A88  0101               	movlb	1	; () banked
  2495  000A8A  5194               	movf	main@res& (0+255),w,b
  2496  000A8C  A4D8               	btfss	status,2,c
  2497  000A8E  EF4B  F005         	goto	u9841
  2498  000A92  EF4D  F005         	goto	u9840
  2499  000A96                     u9841:
  2500  000A96  EFFD  F003         	goto	l7661
  2501  000A9A                     u9840:
  2502  000A9A                     
  2503                           ; BSR set to: 1
  2504                           ;main.c: 165:                     init_flag = 0;
  2505  000A9A  0E00               	movlw	0
  2506  000A9C  6FC0               	movwf	(_init_flag+1)& (0+255),b
  2507  000A9E  0E00               	movlw	0
  2508  000AA0  6FBF               	movwf	_init_flag& (0+255),b
  2509  000AA2  EFFD  F003         	goto	l7661
  2510  000AA6                     l7729:
  2511                           
  2512                           ; BSR set to: 1
  2513                           ;main.c: 169:                 printf("\tRead all file and output square wave\r\n");
  2514  000AA6  0E52               	movlw	low STR_9
  2515  000AA8  0100               	movlb	0	; () banked
  2516  000AAA  6F86               	movwf	printf@fmt& (0+255),b
  2517  000AAC  0E7C               	movlw	high STR_9
  2518  000AAE  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2519  000AB0  EC1C  F02B         	call	_printf	;wreg free
  2520  000AB4                     
  2521                           ;main.c: 170:                 int count;;main.c: 171:                 unsigned int num_t
      +                          emp;;main.c: 172:                 pwm_setDuty(0);
  2522  000AB4  0E00               	movlw	0
  2523  000AB6  6E07               	movwf	(pwm_setDuty@dutycycle+1)^0,c
  2524  000AB8  0E00               	movlw	0
  2525  000ABA  6E06               	movwf	pwm_setDuty@dutycycle^0,c
  2526  000ABC  EC30  F02B         	call	_pwm_setDuty	;wreg free
  2527  000AC0                     
  2528                           ;main.c: 173:                 pwm_start();
  2529  000AC0  ECAA  F02B         	call	_pwm_start	;wreg free
  2530  000AC4                     l7735:
  2531                           
  2532                           ;main.c: 175:                 {;main.c: 176:         ofs = fs.fptr;
  2533  000AC4  C1AB  F15A         	movff	main@fs+22,main@ofs
  2534  000AC8  C1AC  F15B         	movff	main@fs+23,main@ofs+1
  2535  000ACC                     
  2536                           ;main.c: 177:         res = pf_read(Line, sizeof(Line), &s1);
  2537  000ACC  0E00               	movlw	low _Line
  2538  000ACE  0100               	movlb	0	; () banked
  2539  000AD0  6FC0               	movwf	pf_read@buff& (0+255),b
  2540  000AD2  0E03               	movlw	high _Line
  2541  000AD4  6FC1               	movwf	(pf_read@buff+1)& (0+255),b
  2542  000AD6  0E00               	movlw	0
  2543  000AD8  6FC3               	movwf	(pf_read@btr+1)& (0+255),b
  2544  000ADA  0E80               	movlw	128
  2545  000ADC  6FC2               	movwf	pf_read@btr& (0+255),b
  2546  000ADE  0E90               	movlw	low main@s1
  2547  000AE0  6FC4               	movwf	pf_read@br& (0+255),b
  2548  000AE2  0E01               	movlw	high main@s1
  2549  000AE4  6FC5               	movwf	(pf_read@br+1)& (0+255),b
  2550  000AE6  EC2C  F00D         	call	_pf_read	;wreg free
  2551  000AEA  0101               	movlb	1	; () banked
  2552  000AEC  6F94               	movwf	main@res& (0+255),b
  2553  000AEE                     
  2554                           ; BSR set to: 1
  2555                           ;main.c: 178:         if (res != FR_OK)
  2556  000AEE  5194               	movf	main@res& (0+255),w,b
  2557  000AF0  B4D8               	btfsc	status,2,c
  2558  000AF2  EF7D  F005         	goto	u9851
  2559  000AF6  EF7F  F005         	goto	u9850
  2560  000AFA                     u9851:
  2561  000AFA  EF8C  F005         	goto	l7743
  2562  000AFE                     u9850:
  2563  000AFE                     
  2564                           ; BSR set to: 1
  2565                           ;main.c: 179:                     {;main.c: 180:                         printf("\t");
  2566  000AFE  0E56               	movlw	low (STR_8+14)
  2567  000B00  0100               	movlb	0	; () banked
  2568  000B02  6F86               	movwf	printf@fmt& (0+255),b
  2569  000B04  0E7D               	movlw	high (STR_8+14)
  2570  000B06  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2571  000B08  EC1C  F02B         	call	_printf	;wreg free
  2572                           
  2573                           ;main.c: 181:                         put_rc(res);
  2574  000B0C  0101               	movlb	1	; () banked
  2575  000B0E  5194               	movf	main@res& (0+255),w,b
  2576  000B10  EC81  F028         	call	_put_rc
  2577                           
  2578                           ;main.c: 182:                         break;
  2579  000B14  EFD9  F005         	goto	l7765
  2580  000B18                     l7743:
  2581                           
  2582                           ; BSR set to: 1
  2583                           ;main.c: 184:                     count = 0;
  2584  000B18  0E00               	movlw	0
  2585  000B1A  6F61               	movwf	(main@count+1)& (0+255),b
  2586  000B1C  0E00               	movlw	0
  2587  000B1E  6F60               	movwf	main@count& (0+255),b
  2588  000B20                     
  2589                           ; BSR set to: 1
  2590                           ;main.c: 185:                     if(init_flag == 0)
  2591  000B20  51BF               	movf	_init_flag& (0+255),w,b
  2592  000B22  11C0               	iorwf	(_init_flag+1)& (0+255),w,b
  2593  000B24  A4D8               	btfss	status,2,c
  2594  000B26  EF97  F005         	goto	u9861
  2595  000B2A  EF99  F005         	goto	u9860
  2596  000B2E                     u9861:
  2597  000B2E  EFBA  F005         	goto	l7759
  2598  000B32                     u9860:
  2599  000B32                     
  2600                           ; BSR set to: 1
  2601                           ;main.c: 186:                     {;main.c: 187:                         init_flag = 1;
  2602  000B32  0E00               	movlw	0
  2603  000B34  6FC0               	movwf	(_init_flag+1)& (0+255),b
  2604  000B36  0E01               	movlw	1
  2605  000B38  6FBF               	movwf	_init_flag& (0+255),b
  2606  000B3A                     
  2607                           ; BSR set to: 1
  2608                           ;main.c: 188:                         count += 44;
  2609  000B3A  0E2C               	movlw	44
  2610  000B3C  2760               	addwf	main@count& (0+255),f,b
  2611  000B3E  0E00               	movlw	0
  2612  000B40  2361               	addwfc	(main@count+1)& (0+255),f,b
  2613  000B42  EFBA  F005         	goto	l7759
  2614  000B46                     l7751:
  2615                           
  2616                           ; BSR set to: 1
  2617                           ;main.c: 191:                     {;main.c: 192:                         num_temp = Line
      +                          [count];
  2618  000B46  0E00               	movlw	low _Line
  2619  000B48  2560               	addwf	main@count& (0+255),w,b
  2620  000B4A  6ED9               	movwf	fsr2l,c
  2621  000B4C  0E03               	movlw	high _Line
  2622  000B4E  2161               	addwfc	(main@count+1)& (0+255),w,b
  2623  000B50  6EDA               	movwf	fsr2h,c
  2624  000B52  50DF               	movf	indf2,w,c
  2625  000B54  6F55               	movwf	??_main& (0+255),b
  2626  000B56  5155               	movf	??_main& (0+255),w,b
  2627  000B58  6F58               	movwf	main@num_temp& (0+255),b
  2628  000B5A  6B59               	clrf	(main@num_temp+1)& (0+255),b
  2629  000B5C                     
  2630                           ; BSR set to: 1
  2631                           ;main.c: 193:                         pwm_setDuty(num_temp);
  2632  000B5C  C158  F006         	movff	main@num_temp,pwm_setDuty@dutycycle
  2633  000B60  C159  F007         	movff	main@num_temp+1,pwm_setDuty@dutycycle+1
  2634  000B64  EC30  F02B         	call	_pwm_setDuty	;wreg free
  2635  000B68                     
  2636                           ;main.c: 194:                         count++;
  2637  000B68  0101               	movlb	1	; () banked
  2638  000B6A  4B60               	infsnz	main@count& (0+255),f,b
  2639  000B6C  2B61               	incf	(main@count+1)& (0+255),f,b
  2640  000B6E                     
  2641                           ; BSR set to: 1
  2642                           ;main.c: 196:                         _delay((unsigned long)((63)*(40000000/4000000.0)))
      +                          ;
  2643  000B6E  0ED2               	movlw	210
  2644  000B70                     u10037:
  2645  000B70  2EE8               	decfsz	wreg,f,c
  2646  000B72  D7FE               	bra	u10037
  2647  000B74                     l7759:
  2648                           
  2649                           ;main.c: 190:                     while(count < s1)
  2650  000B74  0101               	movlb	1	; () banked
  2651  000B76  5190               	movf	main@s1& (0+255),w,b
  2652  000B78  5D60               	subwf	main@count& (0+255),w,b
  2653  000B7A  5191               	movf	(main@s1+1)& (0+255),w,b
  2654  000B7C  5961               	subwfb	(main@count+1)& (0+255),w,b
  2655  000B7E  A0D8               	btfss	status,0,c
  2656  000B80  EFC4  F005         	goto	u9871
  2657  000B84  EFC6  F005         	goto	u9870
  2658  000B88                     u9871:
  2659  000B88  EFA3  F005         	goto	l7751
  2660  000B8C                     u9870:
  2661  000B8C                     
  2662                           ; BSR set to: 1
  2663                           ;main.c: 198:                     if(INTCONbits.INT0IF)
  2664  000B8C  A2F2               	btfss	242,1,c	;volatile
  2665  000B8E  EFCB  F005         	goto	u9881
  2666  000B92  EFCD  F005         	goto	u9880
  2667  000B96                     u9881:
  2668  000B96  EFD0  F005         	goto	l7763
  2669  000B9A                     u9880:
  2670  000B9A                     
  2671                           ; BSR set to: 1
  2672                           ;main.c: 199:                     {;main.c: 200:                         INT0IF = 0;
  2673  000B9A  92F2               	bcf	4082,1,c	;volatile
  2674                           
  2675                           ;main.c: 201:                         break;
  2676  000B9C  EFD9  F005         	goto	l7765
  2677  000BA0                     l7763:
  2678                           
  2679                           ; BSR set to: 1
  2680                           ;main.c: 203:     }while(s1 != 0);
  2681  000BA0  5190               	movf	main@s1& (0+255),w,b
  2682  000BA2  1191               	iorwf	(main@s1+1)& (0+255),w,b
  2683  000BA4  A4D8               	btfss	status,2,c
  2684  000BA6  EFD7  F005         	goto	u9891
  2685  000BAA  EFD9  F005         	goto	u9890
  2686  000BAE                     u9891:
  2687  000BAE  EF62  F005         	goto	l7735
  2688  000BB2                     u9890:
  2689  000BB2                     l7765:
  2690                           
  2691                           ;main.c: 204:                 pwm_stop();
  2692  000BB2  ECA8  F02B         	call	_pwm_stop	;wreg free
  2693                           
  2694                           ;main.c: 205:     break;
  2695  000BB6  EFFD  F003         	goto	l7661
  2696  000BBA                     l7767:
  2697                           
  2698                           ; BSR set to: 1
  2699                           ;main.c: 207:                 printf("\tRead the file 128 bytes and dump it\r\n");
  2700  000BBA  0E7A               	movlw	low STR_11
  2701  000BBC  0100               	movlb	0	; () banked
  2702  000BBE  6F86               	movwf	printf@fmt& (0+255),b
  2703  000BC0  0E7C               	movlw	high STR_11
  2704  000BC2  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2705  000BC4  EC1C  F02B         	call	_printf	;wreg free
  2706  000BC8                     
  2707                           ;main.c: 208:                 ofs = fs.fptr;
  2708  000BC8  C1AB  F15A         	movff	main@fs+22,main@ofs
  2709  000BCC  C1AC  F15B         	movff	main@fs+23,main@ofs+1
  2710                           
  2711                           ;main.c: 209:                 res = pf_read(Line, sizeof(Line), &s1);
  2712  000BD0  0E00               	movlw	low _Line
  2713  000BD2  0100               	movlb	0	; () banked
  2714  000BD4  6FC0               	movwf	pf_read@buff& (0+255),b
  2715  000BD6  0E03               	movlw	high _Line
  2716  000BD8  6FC1               	movwf	(pf_read@buff+1)& (0+255),b
  2717  000BDA  0E00               	movlw	0
  2718  000BDC  6FC3               	movwf	(pf_read@btr+1)& (0+255),b
  2719  000BDE  0E80               	movlw	128
  2720  000BE0  6FC2               	movwf	pf_read@btr& (0+255),b
  2721  000BE2  0E90               	movlw	low main@s1
  2722  000BE4  6FC4               	movwf	pf_read@br& (0+255),b
  2723  000BE6  0E01               	movlw	high main@s1
  2724  000BE8  6FC5               	movwf	(pf_read@br+1)& (0+255),b
  2725  000BEA  EC2C  F00D         	call	_pf_read	;wreg free
  2726  000BEE  0101               	movlb	1	; () banked
  2727  000BF0  6F94               	movwf	main@res& (0+255),b
  2728  000BF2                     
  2729                           ; BSR set to: 1
  2730                           ;main.c: 210:                 if (res != FR_OK)
  2731  000BF2  5194               	movf	main@res& (0+255),w,b
  2732  000BF4  B4D8               	btfsc	status,2,c
  2733  000BF6  EFFF  F005         	goto	u9901
  2734  000BFA  EF01  F006         	goto	u9900
  2735  000BFE                     u9901:
  2736  000BFE  EF0E  F006         	goto	l7775
  2737  000C02                     u9900:
  2738  000C02                     
  2739                           ; BSR set to: 1
  2740                           ;main.c: 211:                 {;main.c: 212:                     printf("\t");
  2741  000C02  0E56               	movlw	low (STR_8+14)
  2742  000C04  0100               	movlb	0	; () banked
  2743  000C06  6F86               	movwf	printf@fmt& (0+255),b
  2744  000C08  0E7D               	movlw	high (STR_8+14)
  2745  000C0A  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2746  000C0C  EC1C  F02B         	call	_printf	;wreg free
  2747                           
  2748                           ;main.c: 213:                     put_rc(res);
  2749  000C10  0101               	movlb	1	; () banked
  2750  000C12  5194               	movf	main@res& (0+255),w,b
  2751  000C14  EC81  F028         	call	_put_rc
  2752                           
  2753                           ;main.c: 214:                     break;
  2754  000C18  EFFD  F003         	goto	l7661
  2755  000C1C                     l7775:
  2756                           
  2757                           ; BSR set to: 1
  2758                           ;main.c: 216:                 ptr = Line;
  2759  000C1C  0E00               	movlw	low _Line
  2760  000C1E  6F92               	movwf	main@ptr& (0+255),b
  2761  000C20  0E03               	movlw	high _Line
  2762  000C22  6F93               	movwf	(main@ptr+1)& (0+255),b
  2763                           
  2764                           ;main.c: 217:                 while (s1)
  2765  000C24  EF52  F006         	goto	l7793
  2766  000C28                     l7777:
  2767                           
  2768                           ; BSR set to: 1
  2769                           ;main.c: 218:                 {;main.c: 219:      s2 = (s1 >= 16) ? 16 : s1;
  2770  000C28  5191               	movf	(main@s1+1)& (0+255),w,b
  2771  000C2A  E107               	bnz	u9911
  2772  000C2C  0E10               	movlw	16
  2773  000C2E  5D90               	subwf	main@s1& (0+255),w,b
  2774  000C30  B0D8               	btfsc	status,0,c
  2775  000C32  EF1D  F006         	goto	u9911
  2776  000C36  EF1F  F006         	goto	u9910
  2777  000C3A                     u9911:
  2778  000C3A  EF25  F006         	goto	l7781
  2779  000C3E                     u9910:
  2780  000C3E                     
  2781                           ; BSR set to: 1
  2782  000C3E  C190  F168         	movff	main@s1,main@s2
  2783  000C42  C191  F169         	movff	main@s1+1,main@s2+1
  2784  000C46  EF29  F006         	goto	l7783
  2785  000C4A                     l7781:
  2786                           
  2787                           ; BSR set to: 1
  2788  000C4A  0E00               	movlw	0
  2789  000C4C  6F69               	movwf	(main@s2+1)& (0+255),b
  2790  000C4E  0E10               	movlw	16
  2791  000C50  6F68               	movwf	main@s2& (0+255),b
  2792  000C52                     l7783:
  2793                           
  2794                           ; BSR set to: 1
  2795                           ;main.c: 220:      s1 -= s2;
  2796  000C52  5168               	movf	main@s2& (0+255),w,b
  2797  000C54  5F90               	subwf	main@s1& (0+255),f,b
  2798  000C56  5169               	movf	(main@s2+1)& (0+255),w,b
  2799  000C58  5B91               	subwfb	(main@s1+1)& (0+255),f,b
  2800  000C5A                     
  2801                           ; BSR set to: 1
  2802                           ;main.c: 221:                     printf("\t");
  2803  000C5A  0E56               	movlw	low (STR_8+14)
  2804  000C5C  0100               	movlb	0	; () banked
  2805  000C5E  6F86               	movwf	printf@fmt& (0+255),b
  2806  000C60  0E7D               	movlw	high (STR_8+14)
  2807  000C62  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2808  000C64  EC1C  F02B         	call	_printf	;wreg free
  2809  000C68                     
  2810                           ;main.c: 222:         put_dump((BYTE*)ptr, ofs, s2, sizeof(char));
  2811  000C68  C192  F090         	movff	main@ptr,put_dump@buff
  2812  000C6C  C193  F091         	movff	main@ptr+1,put_dump@buff+1
  2813  000C70  C15A  F092         	movff	main@ofs,put_dump@addr
  2814  000C74  C15B  F093         	movff	main@ofs+1,put_dump@addr+1
  2815  000C78  0100               	movlb	0	; () banked
  2816  000C7A  6B94               	clrf	(put_dump@addr+2)& (0+255),b
  2817  000C7C  6B95               	clrf	(put_dump@addr+3)& (0+255),b
  2818  000C7E  C168  F096         	movff	main@s2,put_dump@len
  2819  000C82  C169  F097         	movff	main@s2+1,put_dump@len+1
  2820  000C86  0E00               	movlw	0
  2821  000C88  6F99               	movwf	(put_dump@width+1)& (0+255),b
  2822  000C8A  0E01               	movlw	1
  2823  000C8C  6F98               	movwf	put_dump@width& (0+255),b
  2824  000C8E  ECE5  F016         	call	_put_dump	;wreg free
  2825  000C92                     
  2826                           ;main.c: 223:                     ptr += 16;
  2827  000C92  0E10               	movlw	16
  2828  000C94  0101               	movlb	1	; () banked
  2829  000C96  2792               	addwf	main@ptr& (0+255),f,b
  2830  000C98  0E00               	movlw	0
  2831  000C9A  2393               	addwfc	(main@ptr+1)& (0+255),f,b
  2832  000C9C                     
  2833                           ; BSR set to: 1
  2834                           ;main.c: 224:                     ofs += 16;
  2835  000C9C  0E10               	movlw	16
  2836  000C9E  275A               	addwf	main@ofs& (0+255),f,b
  2837  000CA0  0E00               	movlw	0
  2838  000CA2  235B               	addwfc	(main@ofs+1)& (0+255),f,b
  2839  000CA4                     l7793:
  2840                           
  2841                           ; BSR set to: 1
  2842                           ;main.c: 217:                 while (s1)
  2843  000CA4  5190               	movf	main@s1& (0+255),w,b
  2844  000CA6  1191               	iorwf	(main@s1+1)& (0+255),w,b
  2845  000CA8  A4D8               	btfss	status,2,c
  2846  000CAA  EF59  F006         	goto	u9921
  2847  000CAE  EF5B  F006         	goto	u9920
  2848  000CB2                     u9921:
  2849  000CB2  EF14  F006         	goto	l7777
  2850  000CB6                     u9920:
  2851  000CB6  EFFD  F003         	goto	l7661
  2852  000CBA                     l7795:
  2853                           
  2854                           ; BSR set to: 1
  2855                           ;main.c: 229:      res = pf_read(0, 32768, &s1);
  2856  000CBA  0E00               	movlw	0
  2857  000CBC  0100               	movlb	0	; () banked
  2858  000CBE  6FC0               	movwf	pf_read@buff& (0+255),b
  2859  000CC0  0E00               	movlw	0
  2860  000CC2  6FC1               	movwf	(pf_read@buff+1)& (0+255),b
  2861  000CC4  0E80               	movlw	128
  2862  000CC6  6FC3               	movwf	(pf_read@btr+1)& (0+255),b
  2863  000CC8  0E00               	movlw	0
  2864  000CCA  6FC2               	movwf	pf_read@btr& (0+255),b
  2865  000CCC  0E90               	movlw	low main@s1
  2866  000CCE  6FC4               	movwf	pf_read@br& (0+255),b
  2867  000CD0  0E01               	movlw	high main@s1
  2868  000CD2  6FC5               	movwf	(pf_read@br+1)& (0+255),b
  2869  000CD4  EC2C  F00D         	call	_pf_read	;wreg free
  2870  000CD8  0101               	movlb	1	; () banked
  2871  000CDA  6F94               	movwf	main@res& (0+255),b
  2872  000CDC                     
  2873                           ; BSR set to: 1
  2874                           ;main.c: 230:      if (res != FR_OK)
  2875  000CDC  5194               	movf	main@res& (0+255),w,b
  2876  000CDE  B4D8               	btfsc	status,2,c
  2877  000CE0  EF74  F006         	goto	u9931
  2878  000CE4  EF76  F006         	goto	u9930
  2879  000CE8                     u9931:
  2880  000CE8  EF7B  F006         	goto	l7801
  2881  000CEC                     u9930:
  2882  000CEC                     
  2883                           ; BSR set to: 1
  2884                           ;main.c: 231:                     {;main.c: 232:                         put_rc(res);
  2885  000CEC  5194               	movf	main@res& (0+255),w,b
  2886  000CEE  EC81  F028         	call	_put_rc
  2887                           
  2888                           ;main.c: 233:                         break;
  2889  000CF2  EFFD  F003         	goto	l7661
  2890  000CF6                     l7801:
  2891                           
  2892                           ; BSR set to: 1
  2893                           ;main.c: 235:     } while (s1 == 32768);
  2894  000CF6  0E80               	movlw	128
  2895  000CF8  1991               	xorwf	(main@s1+1)& (0+255),w,b
  2896  000CFA  1190               	iorwf	main@s1& (0+255),w,b
  2897  000CFC  B4D8               	btfsc	status,2,c
  2898  000CFE  EF83  F006         	goto	u9941
  2899  000D02  EF85  F006         	goto	u9940
  2900  000D06                     u9941:
  2901  000D06  EF5D  F006         	goto	l7795
  2902  000D0A                     u9940:
  2903  000D0A  EFFD  F003         	goto	l7661
  2904  000D0E                     l7803:
  2905                           
  2906                           ; BSR set to: 1
  2907                           ;main.c: 317:                     ptr++;
  2908  000D0E  4B92               	infsnz	main@ptr& (0+255),f,b
  2909  000D10  2B93               	incf	(main@ptr+1)& (0+255),f,b
  2910  000D12                     l7805:
  2911                           
  2912                           ; BSR set to: 1
  2913                           ;main.c: 316:     while (*ptr == ' ')
  2914  000D12  C192  FFD9         	movff	main@ptr,fsr2l
  2915  000D16  C193  FFDA         	movff	main@ptr+1,fsr2h
  2916  000D1A  0E20               	movlw	32
  2917  000D1C  18DE               	xorwf	postinc2,w,c
  2918  000D1E  B4D8               	btfsc	status,2,c
  2919  000D20  EF94  F006         	goto	u9951
  2920  000D24  EF96  F006         	goto	u9950
  2921  000D28                     u9951:
  2922  000D28  EF87  F006         	goto	l7803
  2923  000D2C                     u9950:
  2924  000D2C                     
  2925                           ; BSR set to: 1
  2926                           ;main.c: 319:     if (!xatoi(&ptr, &p1))
  2927  000D2C  0E92               	movlw	low main@ptr
  2928  000D2E  6E12               	movwf	xatoi@str^0,c
  2929  000D30  0E01               	movlw	high main@ptr
  2930  000D32  6E13               	movwf	(xatoi@str+1)^0,c
  2931  000D34  0E64               	movlw	low main@p1
  2932  000D36  6E14               	movwf	xatoi@res^0,c
  2933  000D38  0E01               	movlw	high main@p1
  2934  000D3A  6E15               	movwf	(xatoi@res+1)^0,c
  2935  000D3C  EC06  F012         	call	_xatoi	;wreg free
  2936  000D40  5012               	movf	?_xatoi^0,w,c
  2937  000D42  1013               	iorwf	(?_xatoi+1)^0,w,c
  2938  000D44  A4D8               	btfss	status,2,c
  2939  000D46  EFA7  F006         	goto	u9961
  2940  000D4A  EFA9  F006         	goto	u9960
  2941  000D4E                     u9961:
  2942  000D4E  EFB2  F006         	goto	l7811
  2943  000D52                     u9960:
  2944  000D52                     
  2945                           ;main.c: 320:                 {;main.c: 321:                     printf("seek pointer is
      +                           invalid\r\n");
  2946  000D52  0EDE               	movlw	low STR_14
  2947  000D54  0100               	movlb	0	; () banked
  2948  000D56  6F86               	movwf	printf@fmt& (0+255),b
  2949  000D58  0E7C               	movlw	high STR_14
  2950  000D5A  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2951  000D5C  EC1C  F02B         	call	_printf	;wreg free
  2952                           
  2953                           ;main.c: 322:                     break;
  2954  000D60  EFFD  F003         	goto	l7661
  2955  000D64                     l7811:
  2956                           
  2957                           ;main.c: 325:     res = pf_lseek(p1);
  2958  000D64  C164  F0C0         	movff	main@p1,pf_lseek@ofs
  2959  000D68  C165  F0C1         	movff	main@p1+1,pf_lseek@ofs+1
  2960  000D6C  C166  F0C2         	movff	main@p1+2,pf_lseek@ofs+2
  2961  000D70  C167  F0C3         	movff	main@p1+3,pf_lseek@ofs+3
  2962  000D74  ECE4  F00A         	call	_pf_lseek	;wreg free
  2963  000D78  0101               	movlb	1	; () banked
  2964  000D7A  6F94               	movwf	main@res& (0+255),b
  2965                           
  2966                           ;main.c: 326:                 printf("\t");
  2967  000D7C  0E56               	movlw	low (STR_8+14)
  2968  000D7E  0100               	movlb	0	; () banked
  2969  000D80  6F86               	movwf	printf@fmt& (0+255),b
  2970  000D82  0E7D               	movlw	high (STR_8+14)
  2971  000D84  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2972  000D86  EC1C  F02B         	call	_printf	;wreg free
  2973                           
  2974                           ;main.c: 327:     put_rc(res);
  2975  000D8A  0101               	movlb	1	; () banked
  2976  000D8C  5194               	movf	main@res& (0+255),w,b
  2977  000D8E  EC81  F028         	call	_put_rc
  2978  000D92                     
  2979                           ;main.c: 328:     if (res == FR_OK)
  2980  000D92  0101               	movlb	1	; () banked
  2981  000D94  5194               	movf	main@res& (0+255),w,b
  2982  000D96  A4D8               	btfss	status,2,c
  2983  000D98  EFD0  F006         	goto	u9971
  2984  000D9C  EFD2  F006         	goto	u9970
  2985  000DA0                     u9971:
  2986  000DA0  EFFD  F003         	goto	l7661
  2987  000DA4                     u9970:
  2988  000DA4                     
  2989                           ; BSR set to: 1
  2990                           ;main.c: 329:      printf("\tfptr = %lu(0x%lX)\r\n", fs.fptr, fs.fptr);
  2991  000DA4  0E0D               	movlw	low STR_16
  2992  000DA6  0100               	movlb	0	; () banked
  2993  000DA8  6F86               	movwf	printf@fmt& (0+255),b
  2994  000DAA  0E7D               	movlw	high STR_16
  2995  000DAC  6F87               	movwf	(printf@fmt+1)& (0+255),b
  2996  000DAE  C1AB  F088         	movff	main@fs+22,?_printf+2
  2997  000DB2  C1AC  F089         	movff	main@fs+23,?_printf+3
  2998  000DB6  C1AD  F08A         	movff	main@fs+24,?_printf+4
  2999  000DBA  C1AE  F08B         	movff	main@fs+25,?_printf+5
  3000  000DBE  C1AB  F08C         	movff	main@fs+22,?_printf+6
  3001  000DC2  C1AC  F08D         	movff	main@fs+23,?_printf+7
  3002  000DC6  C1AD  F08E         	movff	main@fs+24,?_printf+8
  3003  000DCA  C1AE  F08F         	movff	main@fs+25,?_printf+9
  3004  000DCE  EC1C  F02B         	call	_printf	;wreg free
  3005  000DD2  EFFD  F003         	goto	l7661
  3006  000DD6                     l7817:
  3007                           
  3008                           ; BSR set to: 1
  3009                           ;main.c: 334:                 printf("\tDirectory listing\r\n");
  3010  000DD6  0E22               	movlw	low STR_17
  3011  000DD8  0100               	movlb	0	; () banked
  3012  000DDA  6F86               	movwf	printf@fmt& (0+255),b
  3013  000DDC  0E7D               	movlw	high STR_17
  3014  000DDE  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3015  000DE0  EC1C  F02B         	call	_printf	;wreg free
  3016                           
  3017                           ;main.c: 336:     while (*ptr == ' ')
  3018  000DE4  EFF7  F006         	goto	l7821
  3019  000DE8                     l7819:
  3020                           
  3021                           ;main.c: 337:                     ptr++;
  3022  000DE8  0101               	movlb	1	; () banked
  3023  000DEA  4B92               	infsnz	main@ptr& (0+255),f,b
  3024  000DEC  2B93               	incf	(main@ptr+1)& (0+255),f,b
  3025  000DEE                     l7821:
  3026                           
  3027                           ;main.c: 336:     while (*ptr == ' ')
  3028  000DEE  C192  FFD9         	movff	main@ptr,fsr2l
  3029  000DF2  C193  FFDA         	movff	main@ptr+1,fsr2h
  3030  000DF6  0E20               	movlw	32
  3031  000DF8  18DE               	xorwf	postinc2,w,c
  3032  000DFA  B4D8               	btfsc	status,2,c
  3033  000DFC  EF02  F007         	goto	u9981
  3034  000E00  EF04  F007         	goto	u9980
  3035  000E04                     u9981:
  3036  000E04  EFF4  F006         	goto	l7819
  3037  000E08                     u9980:
  3038  000E08                     
  3039                           ;main.c: 338:     res = pf_opendir(&dir, ptr);
  3040  000E08  0E80               	movlw	low main@dir
  3041  000E0A  0100               	movlb	0	; () banked
  3042  000E0C  6FE1               	movwf	pf_opendir@dj& (0+255),b
  3043  000E0E  0E01               	movlw	high main@dir
  3044  000E10  6FE2               	movwf	(pf_opendir@dj+1)& (0+255),b
  3045  000E12  C192  F0E3         	movff	main@ptr,pf_opendir@path
  3046  000E16  C193  F0E4         	movff	main@ptr+1,pf_opendir@path+1
  3047  000E1A  EC8D  F024         	call	_pf_opendir	;wreg free
  3048  000E1E  0101               	movlb	1	; () banked
  3049  000E20  6F94               	movwf	main@res& (0+255),b
  3050  000E22                     
  3051                           ; BSR set to: 1
  3052                           ;main.c: 339:     if (res)
  3053  000E22  5194               	movf	main@res& (0+255),w,b
  3054  000E24  B4D8               	btfsc	status,2,c
  3055  000E26  EF17  F007         	goto	u9991
  3056  000E2A  EF19  F007         	goto	u9990
  3057  000E2E                     u9991:
  3058  000E2E  EF1E  F007         	goto	l7829
  3059  000E32                     u9990:
  3060  000E32                     
  3061                           ; BSR set to: 1
  3062                           ;main.c: 340:                 {;main.c: 341:                     put_rc(res);
  3063  000E32  5194               	movf	main@res& (0+255),w,b
  3064  000E34  EC81  F028         	call	_put_rc
  3065                           
  3066                           ;main.c: 342:                     break;
  3067  000E38  EFFD  F003         	goto	l7661
  3068  000E3C                     l7829:
  3069                           
  3070                           ; BSR set to: 1
  3071                           ;main.c: 344:     s1 = 0;
  3072  000E3C  0E00               	movlw	0
  3073  000E3E  6F91               	movwf	(main@s1+1)& (0+255),b
  3074  000E40  0E00               	movlw	0
  3075  000E42  6F90               	movwf	main@s1& (0+255),b
  3076  000E44                     l7831:
  3077                           
  3078                           ; BSR set to: 1
  3079                           ;main.c: 346:                 {;main.c: 347:      res = pf_readdir(&dir, &fno);
  3080  000E44  0E80               	movlw	low main@dir
  3081  000E46  0100               	movlb	0	; () banked
  3082  000E48  6FDC               	movwf	pf_readdir@dj& (0+255),b
  3083  000E4A  0E01               	movlw	high main@dir
  3084  000E4C  6FDD               	movwf	(pf_readdir@dj+1)& (0+255),b
  3085  000E4E  0E6A               	movlw	low main@fno
  3086  000E50  6FDE               	movwf	pf_readdir@fno& (0+255),b
  3087  000E52  0E01               	movlw	high main@fno
  3088  000E54  6FDF               	movwf	(pf_readdir@fno+1)& (0+255),b
  3089  000E56  EC1B  F024         	call	_pf_readdir	;wreg free
  3090  000E5A  0101               	movlb	1	; () banked
  3091  000E5C  6F94               	movwf	main@res& (0+255),b
  3092  000E5E                     
  3093                           ; BSR set to: 1
  3094                           ;main.c: 348:      if (res != FR_OK)
  3095  000E5E  5194               	movf	main@res& (0+255),w,b
  3096  000E60  B4D8               	btfsc	status,2,c
  3097  000E62  EF35  F007         	goto	u10001
  3098  000E66  EF37  F007         	goto	u10000
  3099  000E6A                     u10001:
  3100  000E6A  EF3C  F007         	goto	l7837
  3101  000E6E                     u10000:
  3102  000E6E                     
  3103                           ; BSR set to: 1
  3104                           ;main.c: 349:                     {;main.c: 350:                         put_rc(res);
  3105  000E6E  5194               	movf	main@res& (0+255),w,b
  3106  000E70  EC81  F028         	call	_put_rc
  3107                           
  3108                           ;main.c: 351:                         break;
  3109  000E74  EF72  F007         	goto	l7847
  3110  000E78                     l7837:
  3111                           
  3112                           ; BSR set to: 1
  3113                           ;main.c: 353:      if (!fno.fname[0])
  3114  000E78  5173               	movf	(main@fno+9)& (0+255),w,b
  3115  000E7A  A4D8               	btfss	status,2,c
  3116  000E7C  EF42  F007         	goto	u10011
  3117  000E80  EF44  F007         	goto	u10010
  3118  000E84                     u10011:
  3119  000E84  EF46  F007         	goto	l164
  3120  000E88                     u10010:
  3121  000E88  EF72  F007         	goto	l7847
  3122  000E8C                     l164:
  3123                           
  3124                           ; BSR set to: 1
  3125                           ;main.c: 355:      if (fno.fattrib & 0x10)
  3126  000E8C  A972               	btfss	(main@fno+8)& (0+255),4,b
  3127  000E8E  EF4B  F007         	goto	u10021
  3128  000E92  EF4D  F007         	goto	u10020
  3129  000E96                     u10021:
  3130  000E96  EF5A  F007         	goto	l7843
  3131  000E9A                     u10020:
  3132  000E9A                     
  3133                           ; BSR set to: 1
  3134                           ;main.c: 356:       printf("\t   <DIR>   %s\r\n", fno.fname);
  3135  000E9A  0E37               	movlw	low STR_18
  3136  000E9C  0100               	movlb	0	; () banked
  3137  000E9E  6F86               	movwf	printf@fmt& (0+255),b
  3138  000EA0  0E7D               	movlw	high STR_18
  3139  000EA2  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3140  000EA4  0E73               	movlw	low (main@fno+9)
  3141  000EA6  6F88               	movwf	(?_printf+2)& (0+255),b
  3142  000EA8  0E01               	movlw	high (main@fno+9)
  3143  000EAA  6F89               	movwf	(?_printf+3)& (0+255),b
  3144  000EAC  EC1C  F02B         	call	_printf	;wreg free
  3145  000EB0  EF6D  F007         	goto	l7845
  3146  000EB4                     l7843:
  3147                           
  3148                           ; BSR set to: 1
  3149                           ;main.c: 358:       printf("\t%9lu  %s\r\n", fno.fsize, fno.fname);
  3150  000EB4  0E82               	movlw	low STR_19
  3151  000EB6  0100               	movlb	0	; () banked
  3152  000EB8  6F86               	movwf	printf@fmt& (0+255),b
  3153  000EBA  0E7D               	movlw	high STR_19
  3154  000EBC  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3155  000EBE  C16A  F088         	movff	main@fno,?_printf+2
  3156  000EC2  C16B  F089         	movff	main@fno+1,?_printf+3
  3157  000EC6  C16C  F08A         	movff	main@fno+2,?_printf+4
  3158  000ECA  C16D  F08B         	movff	main@fno+3,?_printf+5
  3159  000ECE  0E73               	movlw	low (main@fno+9)
  3160  000ED0  6F8C               	movwf	(?_printf+6)& (0+255),b
  3161  000ED2  0E01               	movlw	high (main@fno+9)
  3162  000ED4  6F8D               	movwf	(?_printf+7)& (0+255),b
  3163  000ED6  EC1C  F02B         	call	_printf	;wreg free
  3164  000EDA                     l7845:
  3165                           
  3166                           ;main.c: 359:      s1++;
  3167  000EDA  0101               	movlb	1	; () banked
  3168  000EDC  4B90               	infsnz	main@s1& (0+255),f,b
  3169  000EDE  2B91               	incf	(main@s1+1)& (0+255),f,b
  3170                           
  3171                           ;main.c: 360:     }
  3172  000EE0  EF22  F007         	goto	l7831
  3173  000EE4                     l7847:
  3174                           
  3175                           ;main.c: 361:     printf("\t%u item(s)\r\n", s1);
  3176  000EE4  0E66               	movlw	low STR_20
  3177  000EE6  0100               	movlb	0	; () banked
  3178  000EE8  6F86               	movwf	printf@fmt& (0+255),b
  3179  000EEA  0E7D               	movlw	high STR_20
  3180  000EEC  6F87               	movwf	(printf@fmt+1)& (0+255),b
  3181  000EEE  C190  F088         	movff	main@s1,?_printf+2
  3182  000EF2  C191  F089         	movff	main@s1+1,?_printf+3
  3183  000EF6  EC1C  F02B         	call	_printf	;wreg free
  3184                           
  3185                           ;main.c: 362:     break;
  3186  000EFA  EFFD  F003         	goto	l7661
  3187  000EFE                     l7851:
  3188                           
  3189                           ; BSR set to: 1
  3190  000EFE  C192  FFD9         	movff	main@ptr,fsr2l
  3191  000F02  C193  FFDA         	movff	main@ptr+1,fsr2h
  3192  000F06  4B92               	infsnz	main@ptr& (0+255),f,b
  3193  000F08  2B93               	incf	(main@ptr+1)& (0+255),f,b
  3194  000F0A  50DF               	movf	indf2,w,c
  3195  000F0C  6F55               	movwf	??_main& (0+255),b
  3196  000F0E  6B56               	clrf	(??_main+1)& (0+255),b
  3197                           
  3198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3199                           ; Switch size 1, requested type "simple"
  3200                           ; Number of cases is 1, Range of values is 0 to 0
  3201                           ; switch strategies available:
  3202                           ; Name         Instructions Cycles
  3203                           ; simple_byte            4     3 (average)
  3204                           ;	Chosen strategy is simple_byte
  3205  000F10  5156               	movf	(??_main+1)& (0+255),w,b
  3206  000F12  0A00               	xorlw	0	; case 0
  3207  000F14  B4D8               	btfsc	status,2,c
  3208  000F16  EF8F  F007         	goto	l8057
  3209  000F1A  EFFD  F003         	goto	l7661
  3210  000F1E                     l8057:
  3211                           
  3212                           ; BSR set to: 1
  3213                           ; Switch size 1, requested type "simple"
  3214                           ; Number of cases is 7, Range of values is 100 to 116
  3215                           ; switch strategies available:
  3216                           ; Name         Instructions Cycles
  3217                           ; simple_byte           22    12 (average)
  3218                           ;	Chosen strategy is simple_byte
  3219  000F1E  5155               	movf	??_main& (0+255),w,b
  3220  000F20  0A64               	xorlw	100	; case 100
  3221  000F22  B4D8               	btfsc	status,2,c
  3222  000F24  EF53  F005         	goto	l7729
  3223  000F28  0A01               	xorlw	1	; case 101
  3224  000F2A  B4D8               	btfsc	status,2,c
  3225  000F2C  EF89  F006         	goto	l7805
  3226  000F30  0A0C               	xorlw	12	; case 105
  3227  000F32  B4D8               	btfsc	status,2,c
  3228  000F34  EF03  F005         	goto	l7711
  3229  000F38  0A05               	xorlw	5	; case 108
  3230  000F3A  B4D8               	btfsc	status,2,c
  3231  000F3C  EFEB  F006         	goto	l7817
  3232  000F40  0A03               	xorlw	3	; case 111
  3233  000F42  B4D8               	btfsc	status,2,c
  3234  000F44  EF20  F005         	goto	l7717
  3235  000F48  0A1C               	xorlw	28	; case 115
  3236  000F4A  B4D8               	btfsc	status,2,c
  3237  000F4C  EFDD  F005         	goto	l7767
  3238  000F50  0A07               	xorlw	7	; case 116
  3239  000F52  B4D8               	btfsc	status,2,c
  3240  000F54  EF5D  F006         	goto	l7795
  3241  000F58  EFFD  F003         	goto	l7661
  3242  000F5C                     l7855:
  3243                           
  3244                           ; BSR set to: 1
  3245  000F5C  C192  FFD9         	movff	main@ptr,fsr2l
  3246  000F60  C193  FFDA         	movff	main@ptr+1,fsr2h
  3247  000F64  4B92               	infsnz	main@ptr& (0+255),f,b
  3248  000F66  2B93               	incf	(main@ptr+1)& (0+255),f,b
  3249  000F68  50DF               	movf	indf2,w,c
  3250  000F6A  6F55               	movwf	??_main& (0+255),b
  3251  000F6C  6B56               	clrf	(??_main+1)& (0+255),b
  3252                           
  3253                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3254                           ; Switch size 1, requested type "simple"
  3255                           ; Number of cases is 1, Range of values is 0 to 0
  3256                           ; switch strategies available:
  3257                           ; Name         Instructions Cycles
  3258                           ; simple_byte            4     3 (average)
  3259                           ;	Chosen strategy is simple_byte
  3260  000F6E  5156               	movf	(??_main+1)& (0+255),w,b
  3261  000F70  0A00               	xorlw	0	; case 0
  3262  000F72  B4D8               	btfsc	status,2,c
  3263  000F74  EFBE  F007         	goto	l8059
  3264  000F78  EFFD  F003         	goto	l7661
  3265  000F7C                     l8059:
  3266                           
  3267                           ; BSR set to: 1
  3268                           ; Switch size 1, requested type "simple"
  3269                           ; Number of cases is 2, Range of values is 100 to 102
  3270                           ; switch strategies available:
  3271                           ; Name         Instructions Cycles
  3272                           ; simple_byte            7     4 (average)
  3273                           ;	Chosen strategy is simple_byte
  3274  000F7C  5155               	movf	??_main& (0+255),w,b
  3275  000F7E  0A64               	xorlw	100	; case 100
  3276  000F80  B4D8               	btfsc	status,2,c
  3277  000F82  EFE8  F004         	goto	l7709
  3278  000F86  0A02               	xorlw	2	; case 102
  3279  000F88  B4D8               	btfsc	status,2,c
  3280  000F8A  EF7F  F007         	goto	l7851
  3281  000F8E  EFFD  F003         	goto	l7661
  3282  000F92  EF07  F000         	goto	start
  3283  000F96                     __end_of_main:
  3284                           	callstack 0
  3285                           
  3286 ;; *************** function _xatoi *****************
  3287 ;; Defined at:
  3288 ;;		line 255 in file "uart.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  str             2   17[COMRAM] PTR PTR unsigned char 
  3291 ;;		 -> main@ptr(2), 
  3292 ;;  res             2   19[COMRAM] PTR long 
  3293 ;;		 -> main@p2(4), main@p1(4), 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  val             4   25[COMRAM] unsigned long 
  3296 ;;  c               1   29[COMRAM] unsigned char 
  3297 ;;  r               1   24[COMRAM] unsigned char 
  3298 ;;  s               1   23[COMRAM] unsigned char 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  2   17[COMRAM] int 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3308 ;;      Params:         4       0       0       0       0       0       0
  3309 ;;      Locals:         7       0       0       0       0       0       0
  3310 ;;      Temps:          2       0       0       0       0       0       0
  3311 ;;      Totals:        13       0       0       0       0       0       0
  3312 ;;Total ram usage:       13 bytes
  3313 ;; Hardware stack levels used: 1
  3314 ;; Hardware stack levels required when called: 2
  3315 ;; This function calls:
  3316 ;;		___lmul
  3317 ;; This function is called by:
  3318 ;;		_main
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text1
  3323  00240C                     __ptext1:
  3324                           	callstack 0
  3325  00240C                     _xatoi:
  3326                           	callstack 28
  3327  00240C                     
  3328                           ;uart.c: 256:  char **str,;uart.c: 257:  long *res;uart.c: 259: {;uart.c: 260:  unsigned
      +                           long val;;uart.c: 261:  unsigned char c, r, s = 0;
  3329  00240C  0E00               	movlw	0
  3330  00240E  6E18               	movwf	xatoi@s^0,c
  3331  002410                     
  3332                           ;uart.c: 263:  *res = 0;
  3333  002410  C014  FFD9         	movff	xatoi@res,fsr2l
  3334  002414  C015  FFDA         	movff	xatoi@res+1,fsr2h
  3335  002418  6ADE               	clrf	postinc2,c
  3336  00241A  6ADE               	clrf	postinc2,c
  3337  00241C  6ADE               	clrf	postinc2,c
  3338  00241E  6ADD               	clrf	postdec2,c
  3339                           
  3340                           ;uart.c: 265:  while ((c = **str) == ' ') (*str)++;
  3341  002420  EF19  F012         	goto	l497
  3342  002424                     l5387:
  3343  002424  C012  FFD9         	movff	xatoi@str,fsr2l
  3344  002428  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3345  00242C  2ADE               	incf	postinc2,f,c
  3346  00242E  0E00               	movlw	0
  3347  002430  22DD               	addwfc	postdec2,f,c
  3348  002432                     l497:
  3349  002432  C012  FFD9         	movff	xatoi@str,fsr2l
  3350  002436  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3351  00243A  CFDE F016          	movff	postinc2,??_xatoi
  3352  00243E  CFDD F017          	movff	postdec2,??_xatoi+1
  3353  002442  C016  FFD9         	movff	??_xatoi,fsr2l
  3354  002446  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3355  00244A  50DF               	movf	indf2,w,c
  3356  00244C  6E1E               	movwf	xatoi@c^0,c
  3357  00244E  0E20               	movlw	32
  3358  002450  181E               	xorwf	xatoi@c^0,w,c
  3359  002452  B4D8               	btfsc	status,2,c
  3360  002454  EF2E  F012         	goto	u6191
  3361  002458  EF30  F012         	goto	u6190
  3362  00245C                     u6191:
  3363  00245C  EF12  F012         	goto	l5387
  3364  002460                     u6190:
  3365  002460                     
  3366                           ;uart.c: 267:  if (c == '-') {
  3367  002460  0E2D               	movlw	45
  3368  002462  181E               	xorwf	xatoi@c^0,w,c
  3369  002464  A4D8               	btfss	status,2,c
  3370  002466  EF37  F012         	goto	u6201
  3371  00246A  EF39  F012         	goto	u6200
  3372  00246E                     u6201:
  3373  00246E  EF4C  F012         	goto	l5395
  3374  002472                     u6200:
  3375  002472                     
  3376                           ;uart.c: 268:   s = 1;
  3377  002472  0E01               	movlw	1
  3378  002474  6E18               	movwf	xatoi@s^0,c
  3379  002476                     
  3380                           ;uart.c: 269:   c = *(++(*str));
  3381  002476  C012  FFD9         	movff	xatoi@str,fsr2l
  3382  00247A  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3383  00247E  2ADE               	incf	postinc2,f,c
  3384  002480  0E00               	movlw	0
  3385  002482  22DD               	addwfc	postdec2,f,c
  3386  002484  CFDE F016          	movff	postinc2,??_xatoi
  3387  002488  CFDD F017          	movff	postdec2,??_xatoi+1
  3388  00248C  C016  FFD9         	movff	??_xatoi,fsr2l
  3389  002490  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3390  002494  50DF               	movf	indf2,w,c
  3391  002496  6E1E               	movwf	xatoi@c^0,c
  3392  002498                     l5395:
  3393                           
  3394                           ;uart.c: 272:  if (c == '0') {
  3395  002498  0E30               	movlw	48
  3396  00249A  181E               	xorwf	xatoi@c^0,w,c
  3397  00249C  A4D8               	btfss	status,2,c
  3398  00249E  EF53  F012         	goto	u6211
  3399  0024A2  EF55  F012         	goto	u6210
  3400  0024A6                     u6211:
  3401  0024A6  EFBE  F012         	goto	l5425
  3402  0024AA                     u6210:
  3403  0024AA                     
  3404                           ;uart.c: 273:   c = *(++(*str));
  3405  0024AA  C012  FFD9         	movff	xatoi@str,fsr2l
  3406  0024AE  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3407  0024B2  2ADE               	incf	postinc2,f,c
  3408  0024B4  0E00               	movlw	0
  3409  0024B6  22DD               	addwfc	postdec2,f,c
  3410  0024B8  CFDE F016          	movff	postinc2,??_xatoi
  3411  0024BC  CFDD F017          	movff	postdec2,??_xatoi+1
  3412  0024C0  C016  FFD9         	movff	??_xatoi,fsr2l
  3413  0024C4  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3414  0024C8  50DF               	movf	indf2,w,c
  3415  0024CA  6E1E               	movwf	xatoi@c^0,c
  3416                           
  3417                           ;uart.c: 274:   switch (c) {
  3418  0024CC  EFA9  F012         	goto	l5423
  3419  0024D0                     l5399:
  3420                           
  3421                           ;uart.c: 276:    r = 16; c = *(++(*str));
  3422  0024D0  0E10               	movlw	16
  3423  0024D2  6E19               	movwf	xatoi@r^0,c
  3424  0024D4                     l5401:
  3425  0024D4  C012  FFD9         	movff	xatoi@str,fsr2l
  3426  0024D8  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3427  0024DC  2ADE               	incf	postinc2,f,c
  3428  0024DE  0E00               	movlw	0
  3429  0024E0  22DD               	addwfc	postdec2,f,c
  3430  0024E2  CFDE F016          	movff	postinc2,??_xatoi
  3431  0024E6  CFDD F017          	movff	postdec2,??_xatoi+1
  3432  0024EA  C016  FFD9         	movff	??_xatoi,fsr2l
  3433  0024EE  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3434  0024F2  50DF               	movf	indf2,w,c
  3435  0024F4  6E1E               	movwf	xatoi@c^0,c
  3436                           
  3437                           ;uart.c: 277:    break;
  3438  0024F6  EFD2  F012         	goto	l512
  3439  0024FA                     l5403:
  3440                           
  3441                           ;uart.c: 279:    r = 2; c = *(++(*str));
  3442  0024FA  0E02               	movlw	2
  3443  0024FC  6E19               	movwf	xatoi@r^0,c
  3444  0024FE  EF6A  F012         	goto	l5401
  3445  002502                     l5407:
  3446                           
  3447                           ;uart.c: 282:    if (c <= ' ') return 1;
  3448  002502  0E21               	movlw	33
  3449  002504  601E               	cpfslt	xatoi@c^0,c
  3450  002506  EF87  F012         	goto	u6221
  3451  00250A  EF89  F012         	goto	u6220
  3452  00250E                     u6221:
  3453  00250E  EF8F  F012         	goto	l5413
  3454  002512                     u6220:
  3455  002512                     l5409:
  3456  002512  0E00               	movlw	0
  3457  002514  6E13               	movwf	(?_xatoi+1)^0,c
  3458  002516  0E01               	movlw	1
  3459  002518  6E12               	movwf	?_xatoi^0,c
  3460  00251A  EF5A  F013         	goto	l508
  3461  00251E                     l5413:
  3462                           
  3463                           ;uart.c: 283:    if (c < '0' || c > '9') return 0;
  3464  00251E  0E2F               	movlw	47
  3465  002520  641E               	cpfsgt	xatoi@c^0,c
  3466  002522  EF95  F012         	goto	u6231
  3467  002526  EF97  F012         	goto	u6230
  3468  00252A                     u6231:
  3469  00252A  EF9F  F012         	goto	l5417
  3470  00252E                     u6230:
  3471  00252E  0E39               	movlw	57
  3472  002530  641E               	cpfsgt	xatoi@c^0,c
  3473  002532  EF9D  F012         	goto	u6241
  3474  002536  EF9F  F012         	goto	u6240
  3475  00253A                     u6241:
  3476  00253A  EFA5  F012         	goto	l5421
  3477  00253E                     u6240:
  3478  00253E                     l5417:
  3479  00253E  0E00               	movlw	0
  3480  002540  6E13               	movwf	(?_xatoi+1)^0,c
  3481  002542  0E00               	movlw	0
  3482  002544  6E12               	movwf	?_xatoi^0,c
  3483  002546  EF5A  F013         	goto	l508
  3484  00254A                     l5421:
  3485                           
  3486                           ;uart.c: 284:    r = 8;
  3487  00254A  0E08               	movlw	8
  3488  00254C  6E19               	movwf	xatoi@r^0,c
  3489                           
  3490                           ;uart.c: 285:   }
  3491  00254E  EFD2  F012         	goto	l512
  3492  002552                     l5423:
  3493  002552  501E               	movf	xatoi@c^0,w,c
  3494  002554  6E16               	movwf	??_xatoi^0,c
  3495  002556  6A17               	clrf	(??_xatoi+1)^0,c
  3496                           
  3497                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3498                           ; Switch size 1, requested type "simple"
  3499                           ; Number of cases is 1, Range of values is 0 to 0
  3500                           ; switch strategies available:
  3501                           ; Name         Instructions Cycles
  3502                           ; simple_byte            4     3 (average)
  3503                           ;	Chosen strategy is simple_byte
  3504  002558  5017               	movf	(??_xatoi+1)^0,w,c
  3505  00255A  0A00               	xorlw	0	; case 0
  3506  00255C  B4D8               	btfsc	status,2,c
  3507  00255E  EFB3  F012         	goto	l8061
  3508  002562  EF81  F012         	goto	l5407
  3509  002566                     l8061:
  3510                           
  3511                           ; Switch size 1, requested type "simple"
  3512                           ; Number of cases is 2, Range of values is 98 to 120
  3513                           ; switch strategies available:
  3514                           ; Name         Instructions Cycles
  3515                           ; simple_byte            7     4 (average)
  3516                           ;	Chosen strategy is simple_byte
  3517  002566  5016               	movf	??_xatoi^0,w,c
  3518  002568  0A62               	xorlw	98	; case 98
  3519  00256A  B4D8               	btfsc	status,2,c
  3520  00256C  EF7D  F012         	goto	l5403
  3521  002570  0A1A               	xorlw	26	; case 120
  3522  002572  B4D8               	btfsc	status,2,c
  3523  002574  EF68  F012         	goto	l5399
  3524  002578  EF81  F012         	goto	l5407
  3525  00257C                     l5425:
  3526                           
  3527                           ;uart.c: 287:   if (c < '0' || c > '9') return 0;
  3528  00257C  0E2F               	movlw	47
  3529  00257E  641E               	cpfsgt	xatoi@c^0,c
  3530  002580  EFC4  F012         	goto	u6251
  3531  002584  EFC6  F012         	goto	u6250
  3532  002588                     u6251:
  3533  002588  EF9F  F012         	goto	l5417
  3534  00258C                     u6250:
  3535  00258C  0E39               	movlw	57
  3536  00258E  641E               	cpfsgt	xatoi@c^0,c
  3537  002590  EFCC  F012         	goto	u6261
  3538  002594  EFCE  F012         	goto	u6260
  3539  002598                     u6261:
  3540  002598  EFD0  F012         	goto	l5433
  3541  00259C                     u6260:
  3542  00259C  EF9F  F012         	goto	l5417
  3543  0025A0                     l5433:
  3544                           
  3545                           ;uart.c: 288:   r = 10;
  3546  0025A0  0E0A               	movlw	10
  3547  0025A2  6E19               	movwf	xatoi@r^0,c
  3548  0025A4                     l512:
  3549                           
  3550                           ;uart.c: 291:  val = 0;
  3551  0025A4  0E00               	movlw	0
  3552  0025A6  6E1A               	movwf	xatoi@val^0,c
  3553  0025A8  0E00               	movlw	0
  3554  0025AA  6E1B               	movwf	(xatoi@val+1)^0,c
  3555  0025AC  0E00               	movlw	0
  3556  0025AE  6E1C               	movwf	(xatoi@val+2)^0,c
  3557  0025B0  0E00               	movlw	0
  3558  0025B2  6E1D               	movwf	(xatoi@val+3)^0,c
  3559                           
  3560                           ;uart.c: 292:  while (c > ' ') {
  3561  0025B4  EF33  F013         	goto	l5455
  3562  0025B8                     l5435:
  3563                           
  3564                           ;uart.c: 293:   if (c >= 'a')
  3565  0025B8  0E60               	movlw	96
  3566  0025BA  641E               	cpfsgt	xatoi@c^0,c
  3567  0025BC  EFE2  F012         	goto	u6271
  3568  0025C0  EFE4  F012         	goto	u6270
  3569  0025C4                     u6271:
  3570  0025C4  EFE6  F012         	goto	l518
  3571  0025C8                     u6270:
  3572  0025C8                     
  3573                           ;uart.c: 294:             c -= 0x20;
  3574  0025C8  0E20               	movlw	32
  3575  0025CA  5E1E               	subwf	xatoi@c^0,f,c
  3576  0025CC                     l518:
  3577                           
  3578                           ;uart.c: 295:   c -= '0';
  3579  0025CC  0E30               	movlw	48
  3580  0025CE  5E1E               	subwf	xatoi@c^0,f,c
  3581                           
  3582                           ;uart.c: 296:   if (c >= 17) {
  3583  0025D0  0E10               	movlw	16
  3584  0025D2  641E               	cpfsgt	xatoi@c^0,c
  3585  0025D4  EFEE  F012         	goto	u6281
  3586  0025D8  EFF0  F012         	goto	u6280
  3587  0025DC                     u6281:
  3588  0025DC  EFFC  F012         	goto	l5445
  3589  0025E0                     u6280:
  3590  0025E0                     
  3591                           ;uart.c: 297:    c -= 7;
  3592  0025E0  0E07               	movlw	7
  3593  0025E2  5E1E               	subwf	xatoi@c^0,f,c
  3594                           
  3595                           ;uart.c: 298:    if (c <= 9) return 0;
  3596  0025E4  0E0A               	movlw	10
  3597  0025E6  601E               	cpfslt	xatoi@c^0,c
  3598  0025E8  EFF8  F012         	goto	u6291
  3599  0025EC  EFFA  F012         	goto	u6290
  3600  0025F0                     u6291:
  3601  0025F0  EFFC  F012         	goto	l5445
  3602  0025F4                     u6290:
  3603  0025F4  EF9F  F012         	goto	l5417
  3604  0025F8                     l5445:
  3605                           
  3606                           ;uart.c: 300:   if (c >= r) return 0;
  3607  0025F8  5019               	movf	xatoi@r^0,w,c
  3608  0025FA  5C1E               	subwf	xatoi@c^0,w,c
  3609  0025FC  A0D8               	btfss	status,0,c
  3610  0025FE  EF03  F013         	goto	u6301
  3611  002602  EF05  F013         	goto	u6300
  3612  002606                     u6301:
  3613  002606  EF07  F013         	goto	l5451
  3614  00260A                     u6300:
  3615  00260A  EF9F  F012         	goto	l5417
  3616  00260E                     l5451:
  3617                           
  3618                           ;uart.c: 301:   val = val * r + c;
  3619  00260E  5019               	movf	xatoi@r^0,w,c
  3620  002610  6E06               	movwf	___lmul@multiplier^0,c
  3621  002612  6A07               	clrf	(___lmul@multiplier+1)^0,c
  3622  002614  6A08               	clrf	(___lmul@multiplier+2)^0,c
  3623  002616  6A09               	clrf	(___lmul@multiplier+3)^0,c
  3624  002618  C01A  F00A         	movff	xatoi@val,___lmul@multiplicand
  3625  00261C  C01B  F00B         	movff	xatoi@val+1,___lmul@multiplicand+1
  3626  002620  C01C  F00C         	movff	xatoi@val+2,___lmul@multiplicand+2
  3627  002624  C01D  F00D         	movff	xatoi@val+3,___lmul@multiplicand+3
  3628  002628  EC38  F029         	call	___lmul	;wreg free
  3629  00262C  501E               	movf	xatoi@c^0,w,c
  3630  00262E  2406               	addwf	?___lmul^0,w,c
  3631  002630  6E1A               	movwf	xatoi@val^0,c
  3632  002632  0E00               	movlw	0
  3633  002634  2007               	addwfc	(?___lmul+1)^0,w,c
  3634  002636  6E1B               	movwf	(xatoi@val+1)^0,c
  3635  002638  0E00               	movlw	0
  3636  00263A  2008               	addwfc	(?___lmul+2)^0,w,c
  3637  00263C  6E1C               	movwf	(xatoi@val+2)^0,c
  3638  00263E  0E00               	movlw	0
  3639  002640  2009               	addwfc	(?___lmul+3)^0,w,c
  3640  002642  6E1D               	movwf	(xatoi@val+3)^0,c
  3641  002644                     
  3642                           ;uart.c: 302:   c = *(++(*str));
  3643  002644  C012  FFD9         	movff	xatoi@str,fsr2l
  3644  002648  C013  FFDA         	movff	xatoi@str+1,fsr2h
  3645  00264C  2ADE               	incf	postinc2,f,c
  3646  00264E  0E00               	movlw	0
  3647  002650  22DD               	addwfc	postdec2,f,c
  3648  002652  CFDE F016          	movff	postinc2,??_xatoi
  3649  002656  CFDD F017          	movff	postdec2,??_xatoi+1
  3650  00265A  C016  FFD9         	movff	??_xatoi,fsr2l
  3651  00265E  C017  FFDA         	movff	??_xatoi+1,fsr2h
  3652  002662  50DF               	movf	indf2,w,c
  3653  002664  6E1E               	movwf	xatoi@c^0,c
  3654  002666                     l5455:
  3655                           
  3656                           ;uart.c: 292:  while (c > ' ') {
  3657  002666  0E21               	movlw	33
  3658  002668  601E               	cpfslt	xatoi@c^0,c
  3659  00266A  EF39  F013         	goto	u6311
  3660  00266E  EF3B  F013         	goto	u6310
  3661  002672                     u6311:
  3662  002672  EFDC  F012         	goto	l5435
  3663  002676                     u6310:
  3664  002676                     
  3665                           ;uart.c: 305:  if (s) val = 0 - val;
  3666  002676  5018               	movf	xatoi@s^0,w,c
  3667  002678  B4D8               	btfsc	status,2,c
  3668  00267A  EF41  F013         	goto	u6321
  3669  00267E  EF43  F013         	goto	u6320
  3670  002682                     u6321:
  3671  002682  EF4C  F013         	goto	l5461
  3672  002686                     u6320:
  3673  002686  6C1A               	negf	xatoi@val^0,c
  3674  002688  1E1B               	comf	(xatoi@val+1)^0,f,c
  3675  00268A  B0D8               	btfsc	status,0,c
  3676  00268C  2A1B               	incf	(xatoi@val+1)^0,f,c
  3677  00268E  1E1C               	comf	(xatoi@val+2)^0,f,c
  3678  002690  B0D8               	btfsc	status,0,c
  3679  002692  2A1C               	incf	(xatoi@val+2)^0,f,c
  3680  002694  0E00               	movlw	0
  3681  002696  561D               	subfwb	(xatoi@val+3)^0,f,c
  3682  002698                     l5461:
  3683                           
  3684                           ;uart.c: 307:  *res = val;
  3685  002698  C014  FFD9         	movff	xatoi@res,fsr2l
  3686  00269C  C015  FFDA         	movff	xatoi@res+1,fsr2h
  3687  0026A0  C01A  FFDE         	movff	xatoi@val,postinc2
  3688  0026A4  C01B  FFDE         	movff	xatoi@val+1,postinc2
  3689  0026A8  C01C  FFDE         	movff	xatoi@val+2,postinc2
  3690  0026AC  C01D  FFDE         	movff	xatoi@val+3,postinc2
  3691  0026B0  EF89  F012         	goto	l5409
  3692  0026B4                     l508:
  3693  0026B4  0012               	return		;funcret
  3694  0026B6                     __end_of_xatoi:
  3695                           	callstack 0
  3696                           
  3697 ;; *************** function _uart_init *****************
  3698 ;; Defined at:
  3699 ;;		line 149 in file "uart.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3713 ;;      Params:         0       0       0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0       0
  3716 ;;      Totals:         0       0       0       0       0       0       0
  3717 ;;Total ram usage:        0 bytes
  3718 ;; Hardware stack levels used: 1
  3719 ;; Hardware stack levels required when called: 1
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_main
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text2
  3728  00533C                     __ptext2:
  3729                           	callstack 0
  3730  00533C                     _uart_init:
  3731                           	callstack 29
  3732  00533C                     
  3733                           ;uart.c: 152:  RCIE = 0;
  3734  00533C  9A9D               	bcf	3997,5,c	;volatile
  3735                           
  3736                           ;uart.c: 153:  TXIE = 0;
  3737  00533E  989D               	bcf	3997,4,c	;volatile
  3738  005340                     
  3739                           ;uart.c: 156:     TXSTA = 0x24;
  3740  005340  0E24               	movlw	36
  3741  005342  6EAC               	movwf	172,c	;volatile
  3742                           
  3743                           ;uart.c: 167:     RCSTA = 0x90;
  3744  005344  0E90               	movlw	144
  3745  005346  6EAB               	movwf	171,c	;volatile
  3746                           
  3747                           ;uart.c: 178:     SPBRG = 129;
  3748  005348  0E81               	movlw	129
  3749  00534A  6EAF               	movwf	175,c	;volatile
  3750                           
  3751                           ;uart.c: 181:  TxFifo.ri = 0; TxFifo.wi = 0; TxFifo.ct = 0;
  3752  00534C  0E00               	movlw	0
  3753  00534E  0104               	movlb	4	; () banked
  3754  005350  6F01               	movwf	(_TxFifo+1)& (0+255),b	;volatile
  3755  005352  0E00               	movlw	0
  3756  005354  6F00               	movwf	_TxFifo& (0+255),b	;volatile
  3757  005356  0E00               	movlw	0
  3758  005358  6F03               	movwf	(_TxFifo+3)& (0+255),b	;volatile
  3759  00535A  0E00               	movlw	0
  3760  00535C  6F02               	movwf	(_TxFifo+2)& (0+255),b	;volatile
  3761  00535E  0E00               	movlw	0
  3762  005360  6F05               	movwf	(_TxFifo+5)& (0+255),b	;volatile
  3763  005362  0E00               	movlw	0
  3764  005364  6F04               	movwf	(_TxFifo+4)& (0+255),b	;volatile
  3765                           
  3766                           ;uart.c: 182:  RxFifo.ri = 0; RxFifo.wi = 0; RxFifo.ct = 0;
  3767  005366  0E00               	movlw	0
  3768  005368  0102               	movlb	2	; () banked
  3769  00536A  6F01               	movwf	(_RxFifo+1)& (0+255),b	;volatile
  3770  00536C  0E00               	movlw	0
  3771  00536E  6F00               	movwf	_RxFifo& (0+255),b	;volatile
  3772  005370  0E00               	movlw	0
  3773  005372  6F03               	movwf	(_RxFifo+3)& (0+255),b	;volatile
  3774  005374  0E00               	movlw	0
  3775  005376  6F02               	movwf	(_RxFifo+2)& (0+255),b	;volatile
  3776  005378  0E00               	movlw	0
  3777  00537A  6F05               	movwf	(_RxFifo+5)& (0+255),b	;volatile
  3778  00537C  0E00               	movlw	0
  3779  00537E  6F04               	movwf	(_RxFifo+4)& (0+255),b	;volatile
  3780                           
  3781                           ;uart.c: 183:  TxRun = 0;
  3782  005380  0E00               	movlw	0
  3783  005382  0100               	movlb	0	; () banked
  3784  005384  6FFC               	movwf	(_TxRun+1)& (0+255),b	;volatile
  3785  005386  0E00               	movlw	0
  3786  005388  6FFB               	movwf	_TxRun& (0+255),b	;volatile
  3787  00538A                     
  3788                           ; BSR set to: 0
  3789                           ;uart.c: 186:     RCIP = 1;
  3790  00538A  8A9F               	bsf	3999,5,c	;volatile
  3791  00538C                     
  3792                           ; BSR set to: 0
  3793                           ;uart.c: 187:     TXIP = 0;
  3794  00538C  989F               	bcf	3999,4,c	;volatile
  3795  00538E                     
  3796                           ; BSR set to: 0
  3797                           ;uart.c: 189:     RCIF = 0;
  3798  00538E  9A9E               	bcf	3998,5,c	;volatile
  3799  005390                     
  3800                           ; BSR set to: 0
  3801                           ;uart.c: 190:     TXIF = 0;
  3802  005390  989E               	bcf	3998,4,c	;volatile
  3803  005392                     
  3804                           ; BSR set to: 0
  3805                           ;uart.c: 192:  RCIE = 1;
  3806  005392  8A9D               	bsf	3997,5,c	;volatile
  3807  005394                     
  3808                           ; BSR set to: 0
  3809                           ;uart.c: 195:     GIE = 0x01;
  3810  005394  8EF2               	bsf	4082,7,c	;volatile
  3811  005396                     
  3812                           ; BSR set to: 0
  3813                           ;uart.c: 196:     PEIE = 0x01;
  3814  005396  8CF2               	bsf	4082,6,c	;volatile
  3815  005398                     
  3816                           ; BSR set to: 0
  3817  005398  0012               	return		;funcret
  3818  00539A                     __end_of_uart_init:
  3819                           	callstack 0
  3820                           
  3821 ;; *************** function _uart_gets *****************
  3822 ;; Defined at:
  3823 ;;		line 96 in file "uart.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  buff            2   16[BANK0 ] PTR unsigned char 
  3826 ;;		 -> Line(128), 
  3827 ;;  len             2   18[BANK0 ] int 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  c               2   27[BANK0 ] int 
  3830 ;;  i               2   25[BANK0 ] int 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  2   16[BANK0 ] int 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3840 ;;      Params:         0       4       0       0       0       0       0
  3841 ;;      Locals:         0       4       0       0       0       0       0
  3842 ;;      Temps:          0       5       0       0       0       0       0
  3843 ;;      Totals:         0      13       0       0       0       0       0
  3844 ;;Total ram usage:       13 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 9
  3847 ;; This function calls:
  3848 ;;		_memset
  3849 ;;		_printf
  3850 ;; This function is called by:
  3851 ;;		_main
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text3
  3856  0043EC                     __ptext3:
  3857                           	callstack 0
  3858  0043EC                     _uart_gets:
  3859                           	callstack 21
  3860  0043EC                     
  3861                           ;uart.c: 97:  char* buff,;uart.c: 98:  int len;uart.c: 100: {;uart.c: 101:  int c, i;;ua
      +                          rt.c: 103:  i = 0;
  3862  0043EC  0E00               	movlw	0
  3863  0043EE  0100               	movlb	0	; () banked
  3864  0043F0  6F9A               	movwf	(uart_gets@i+1)& (0+255),b
  3865  0043F2  0E00               	movlw	0
  3866  0043F4  6F99               	movwf	uart_gets@i& (0+255),b
  3867  0043F6                     l7213:
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;uart.c: 105:   c = RxFifo.buff[i];
  3871  0043F6  0E06               	movlw	low (_RxFifo+6)
  3872  0043F8  2599               	addwf	uart_gets@i& (0+255),w,b
  3873  0043FA  6ED9               	movwf	fsr2l,c
  3874  0043FC  0E02               	movlw	high (_RxFifo+6)
  3875  0043FE  219A               	addwfc	(uart_gets@i+1)& (0+255),w,b
  3876  004400  6EDA               	movwf	fsr2h,c
  3877  004402  50DF               	movf	indf2,w,c
  3878  004404  6F94               	movwf	??_uart_gets& (0+255),b
  3879  004406  5194               	movf	??_uart_gets& (0+255),w,b
  3880  004408  6F9B               	movwf	uart_gets@c& (0+255),b
  3881  00440A  6B9C               	clrf	(uart_gets@c+1)& (0+255),b
  3882  00440C                     
  3883                           ; BSR set to: 0
  3884                           ;uart.c: 106:   if (!c) continue;
  3885  00440C  519B               	movf	uart_gets@c& (0+255),w,b
  3886  00440E  119C               	iorwf	(uart_gets@c+1)& (0+255),w,b
  3887  004410  A4D8               	btfss	status,2,c
  3888  004412  EF0D  F022         	goto	u9101
  3889  004416  EF0F  F022         	goto	u9100
  3890  00441A                     u9101:
  3891  00441A  EF11  F022         	goto	l7219
  3892  00441E                     u9100:
  3893  00441E  EFFB  F021         	goto	l7213
  3894  004422                     l7219:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;uart.c: 107:   if (c == '\r') break;
  3898  004422  0E0D               	movlw	13
  3899  004424  199B               	xorwf	uart_gets@c& (0+255),w,b
  3900  004426  119C               	iorwf	(uart_gets@c+1)& (0+255),w,b
  3901  004428  A4D8               	btfss	status,2,c
  3902  00442A  EF19  F022         	goto	u9111
  3903  00442E  EF1B  F022         	goto	u9110
  3904  004432                     u9111:
  3905  004432  EF1D  F022         	goto	l7223
  3906  004436                     u9110:
  3907  004436  EF6F  F022         	goto	l7243
  3908  00443A                     l7223:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;uart.c: 108:   if (c == '\b' && i) {
  3912  00443A  0E08               	movlw	8
  3913  00443C  199B               	xorwf	uart_gets@c& (0+255),w,b
  3914  00443E  119C               	iorwf	(uart_gets@c+1)& (0+255),w,b
  3915  004440  A4D8               	btfss	status,2,c
  3916  004442  EF25  F022         	goto	u9121
  3917  004446  EF27  F022         	goto	u9120
  3918  00444A                     u9121:
  3919  00444A  EF3D  F022         	goto	l7233
  3920  00444E                     u9120:
  3921  00444E                     
  3922                           ; BSR set to: 0
  3923  00444E  5199               	movf	uart_gets@i& (0+255),w,b
  3924  004450  119A               	iorwf	(uart_gets@i+1)& (0+255),w,b
  3925  004452  B4D8               	btfsc	status,2,c
  3926  004454  EF2E  F022         	goto	u9131
  3927  004458  EF30  F022         	goto	u9130
  3928  00445C                     u9131:
  3929  00445C  EF3D  F022         	goto	l7233
  3930  004460                     u9130:
  3931  004460                     
  3932                           ; BSR set to: 0
  3933                           ;uart.c: 109:             RxFifo.buff[i] = '0';
  3934  004460  0E06               	movlw	low (_RxFifo+6)
  3935  004462  2599               	addwf	uart_gets@i& (0+255),w,b
  3936  004464  6ED9               	movwf	fsr2l,c
  3937  004466  0E02               	movlw	high (_RxFifo+6)
  3938  004468  219A               	addwfc	(uart_gets@i+1)& (0+255),w,b
  3939  00446A  6EDA               	movwf	fsr2h,c
  3940  00446C  0E30               	movlw	48
  3941  00446E  6EDF               	movwf	indf2,c
  3942  004470                     
  3943                           ; BSR set to: 0
  3944                           ;uart.c: 110:    i--;
  3945  004470  0799               	decf	uart_gets@i& (0+255),f,b
  3946  004472  A0D8               	btfss	status,0,c
  3947  004474  079A               	decf	(uart_gets@i+1)& (0+255),f,b
  3948                           
  3949                           ;uart.c: 111:    if (0)
  3950  004476  EFFB  F021         	goto	l7213
  3951  00447A                     l7233:
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;uart.c: 115:   if (c >= ' ' && i < len - 1) {
  3955  00447A  519C               	movf	(uart_gets@c+1)& (0+255),w,b
  3956  00447C  E109               	bnz	u9140
  3957  00447E  0E20               	movlw	32
  3958  004480  5D9B               	subwf	uart_gets@c& (0+255),w,b
  3959  004482  A0D8               	btfss	status,0,c
  3960  004484  EF46  F022         	goto	u9141
  3961  004488  EF48  F022         	goto	u9140
  3962  00448C                     u9141:
  3963  00448C  EFFB  F021         	goto	l7213
  3964  004490                     u9140:
  3965  004490                     
  3966                           ; BSR set to: 0
  3967  004490  0EFF               	movlw	255
  3968  004492  6F94               	movwf	??_uart_gets& (0+255),b
  3969  004494  0EFF               	movlw	255
  3970  004496  6F95               	movwf	(??_uart_gets+1)& (0+255),b
  3971  004498  C092  F096         	movff	uart_gets@len,??_uart_gets+2
  3972  00449C  C093  F097         	movff	uart_gets@len+1,??_uart_gets+3
  3973  0044A0  5194               	movf	??_uart_gets& (0+255),w,b
  3974  0044A2  2796               	addwf	(??_uart_gets+2)& (0+255),f,b
  3975  0044A4  5195               	movf	(??_uart_gets+1)& (0+255),w,b
  3976  0044A6  2397               	addwfc	(??_uart_gets+3)& (0+255),f,b
  3977  0044A8  5196               	movf	(??_uart_gets+2)& (0+255),w,b
  3978  0044AA  5D99               	subwf	uart_gets@i& (0+255),w,b
  3979  0044AC  519A               	movf	(uart_gets@i+1)& (0+255),w,b
  3980  0044AE  0A80               	xorlw	128
  3981  0044B0  6F98               	movwf	(??_uart_gets+4)& (0+255),b
  3982  0044B2  5197               	movf	(??_uart_gets+3)& (0+255),w,b
  3983  0044B4  0A80               	xorlw	128
  3984  0044B6  5998               	subwfb	(??_uart_gets+4)& (0+255),w,b
  3985  0044B8  B0D8               	btfsc	status,0,c
  3986  0044BA  EF61  F022         	goto	u9151
  3987  0044BE  EF63  F022         	goto	u9150
  3988  0044C2                     u9151:
  3989  0044C2  EFFB  F021         	goto	l7213
  3990  0044C6                     u9150:
  3991  0044C6                     
  3992                           ; BSR set to: 0
  3993                           ;uart.c: 116:    buff[i++] = c;
  3994  0044C6  5199               	movf	uart_gets@i& (0+255),w,b
  3995  0044C8  2590               	addwf	uart_gets@buff& (0+255),w,b
  3996  0044CA  6ED9               	movwf	fsr2l,c
  3997  0044CC  519A               	movf	(uart_gets@i+1)& (0+255),w,b
  3998  0044CE  2191               	addwfc	(uart_gets@buff+1)& (0+255),w,b
  3999  0044D0  6EDA               	movwf	fsr2h,c
  4000  0044D2  C09B  FFDF         	movff	uart_gets@c,indf2
  4001  0044D6                     
  4002                           ; BSR set to: 0
  4003  0044D6  4B99               	infsnz	uart_gets@i& (0+255),f,b
  4004  0044D8  2B9A               	incf	(uart_gets@i+1)& (0+255),f,b
  4005                           
  4006                           ;uart.c: 117:    if (0)
  4007  0044DA  EFFB  F021         	goto	l7213
  4008  0044DE                     l7243:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;uart.c: 121:  buff[i] = 0;
  4012  0044DE  5199               	movf	uart_gets@i& (0+255),w,b
  4013  0044E0  2590               	addwf	uart_gets@buff& (0+255),w,b
  4014  0044E2  6ED9               	movwf	fsr2l,c
  4015  0044E4  519A               	movf	(uart_gets@i+1)& (0+255),w,b
  4016  0044E6  2191               	addwfc	(uart_gets@buff+1)& (0+255),w,b
  4017  0044E8  6EDA               	movwf	fsr2h,c
  4018  0044EA  0E00               	movlw	0
  4019  0044EC  6EDF               	movwf	indf2,c
  4020  0044EE                     
  4021                           ; BSR set to: 0
  4022                           ;uart.c: 125:     memset(RxFifo.buff, 0x00, sizeof(RxFifo.buff));
  4023  0044EE  0E06               	movlw	low (_RxFifo+6)
  4024  0044F0  6E06               	movwf	memset@dest^0,c
  4025  0044F2  0E02               	movlw	high (_RxFifo+6)
  4026  0044F4  6E07               	movwf	(memset@dest+1)^0,c
  4027  0044F6  0E00               	movlw	0
  4028  0044F8  6E09               	movwf	(memset@c+1)^0,c
  4029  0044FA  0E00               	movlw	0
  4030  0044FC  6E08               	movwf	memset@c^0,c
  4031  0044FE  0E00               	movlw	0
  4032  004500  6E0B               	movwf	(memset@n+1)^0,c
  4033  004502  0E80               	movlw	128
  4034  004504  6E0A               	movwf	memset@n^0,c
  4035  004506  ECB8  F01D         	call	_memset	;wreg free
  4036  00450A                     
  4037                           ;uart.c: 126:     RxFifo.wi = 0;
  4038  00450A  0E00               	movlw	0
  4039  00450C  0102               	movlb	2	; () banked
  4040  00450E  6F03               	movwf	(_RxFifo+3)& (0+255),b	;volatile
  4041  004510  0E00               	movlw	0
  4042  004512  6F02               	movwf	(_RxFifo+2)& (0+255),b	;volatile
  4043  004514                     
  4044                           ; BSR set to: 2
  4045                           ;uart.c: 127:     RxFifo.ct = 0;
  4046  004514  0E00               	movlw	0
  4047  004516  6F05               	movwf	(_RxFifo+5)& (0+255),b	;volatile
  4048  004518  0E00               	movlw	0
  4049  00451A  6F04               	movwf	(_RxFifo+4)& (0+255),b	;volatile
  4050  00451C                     
  4051                           ; BSR set to: 2
  4052  00451C  0012               	return		;funcret
  4053  00451E                     __end_of_uart_gets:
  4054                           	callstack 0
  4055                           
  4056 ;; *************** function _memset *****************
  4057 ;; Defined at:
  4058 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\memset.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  dest            2    5[COMRAM] PTR void 
  4061 ;;		 -> RxFifo.buff(128), RxFifo(134), 
  4062 ;;  c               2    7[COMRAM] int 
  4063 ;;  n               2    9[COMRAM] unsigned int 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  s               2   15[COMRAM] PTR unsigned char 
  4066 ;;		 -> RxFifo.buff(128), RxFifo(134), 
  4067 ;;  k               2   13[COMRAM] unsigned int 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  2    5[COMRAM] PTR void 
  4070 ;; Registers used:
  4071 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4077 ;;      Params:         6       0       0       0       0       0       0
  4078 ;;      Locals:         4       0       0       0       0       0       0
  4079 ;;      Temps:          2       0       0       0       0       0       0
  4080 ;;      Totals:        12       0       0       0       0       0       0
  4081 ;;Total ram usage:       12 bytes
  4082 ;; Hardware stack levels used: 1
  4083 ;; Hardware stack levels required when called: 1
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_uart_gets
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text4
  4092  003B70                     __ptext4:
  4093                           	callstack 0
  4094  003B70                     _memset:
  4095                           	callstack 28
  4096  003B70  C006  F010         	movff	memset@dest,memset@s
  4097  003B74  C007  F011         	movff	memset@dest+1,memset@s+1
  4098  003B78  500A               	movf	memset@n^0,w,c
  4099  003B7A  100B               	iorwf	(memset@n+1)^0,w,c
  4100  003B7C  A4D8               	btfss	status,2,c
  4101  003B7E  EFC3  F01D         	goto	u6021
  4102  003B82  EFC5  F01D         	goto	u6020
  4103  003B86                     u6021:
  4104  003B86  EFC7  F01D         	goto	l5243
  4105  003B8A                     u6020:
  4106  003B8A  EF72  F01E         	goto	l1310
  4107  003B8E                     l5243:
  4108  003B8E  C010  FFD9         	movff	memset@s,fsr2l
  4109  003B92  C011  FFDA         	movff	memset@s+1,fsr2h
  4110  003B96  C008  FFDF         	movff	memset@c,indf2
  4111  003B9A  500A               	movf	memset@n^0,w,c
  4112  003B9C  2410               	addwf	memset@s^0,w,c
  4113  003B9E  6E0C               	movwf	??_memset^0,c
  4114  003BA0  500B               	movf	(memset@n+1)^0,w,c
  4115  003BA2  2011               	addwfc	(memset@s+1)^0,w,c
  4116  003BA4  6E0D               	movwf	(??_memset+1)^0,c
  4117  003BA6  0EFF               	movlw	255
  4118  003BA8  240C               	addwf	??_memset^0,w,c
  4119  003BAA  6ED9               	movwf	fsr2l,c
  4120  003BAC  0EFF               	movlw	255
  4121  003BAE  200D               	addwfc	(??_memset+1)^0,w,c
  4122  003BB0  6EDA               	movwf	fsr2h,c
  4123  003BB2  C008  FFDF         	movff	memset@c,indf2
  4124  003BB6  500B               	movf	(memset@n+1)^0,w,c
  4125  003BB8  E107               	bnz	u6031
  4126  003BBA  0E03               	movlw	3
  4127  003BBC  5C0A               	subwf	memset@n^0,w,c
  4128  003BBE  B0D8               	btfsc	status,0,c
  4129  003BC0  EFE4  F01D         	goto	u6031
  4130  003BC4  EFE6  F01D         	goto	u6030
  4131  003BC8                     u6031:
  4132  003BC8  EFE8  F01D         	goto	l5249
  4133  003BCC                     u6030:
  4134  003BCC  EF72  F01E         	goto	l1310
  4135  003BD0                     l5249:
  4136  003BD0  EE20 F001          	lfsr	2,1
  4137  003BD4  5010               	movf	memset@s^0,w,c
  4138  003BD6  26D9               	addwf	fsr2l,f,c
  4139  003BD8  5011               	movf	(memset@s+1)^0,w,c
  4140  003BDA  22DA               	addwfc	fsr2h,f,c
  4141  003BDC  C008  FFDF         	movff	memset@c,indf2
  4142  003BE0  EE20 F002          	lfsr	2,2
  4143  003BE4  5010               	movf	memset@s^0,w,c
  4144  003BE6  26D9               	addwf	fsr2l,f,c
  4145  003BE8  5011               	movf	(memset@s+1)^0,w,c
  4146  003BEA  22DA               	addwfc	fsr2h,f,c
  4147  003BEC  C008  FFDF         	movff	memset@c,indf2
  4148  003BF0  500A               	movf	memset@n^0,w,c
  4149  003BF2  2410               	addwf	memset@s^0,w,c
  4150  003BF4  6E0C               	movwf	??_memset^0,c
  4151  003BF6  500B               	movf	(memset@n+1)^0,w,c
  4152  003BF8  2011               	addwfc	(memset@s+1)^0,w,c
  4153  003BFA  6E0D               	movwf	(??_memset+1)^0,c
  4154  003BFC  0EFE               	movlw	254
  4155  003BFE  240C               	addwf	??_memset^0,w,c
  4156  003C00  6ED9               	movwf	fsr2l,c
  4157  003C02  0EFF               	movlw	255
  4158  003C04  200D               	addwfc	(??_memset+1)^0,w,c
  4159  003C06  6EDA               	movwf	fsr2h,c
  4160  003C08  C008  FFDF         	movff	memset@c,indf2
  4161  003C0C  500A               	movf	memset@n^0,w,c
  4162  003C0E  2410               	addwf	memset@s^0,w,c
  4163  003C10  6E0C               	movwf	??_memset^0,c
  4164  003C12  500B               	movf	(memset@n+1)^0,w,c
  4165  003C14  2011               	addwfc	(memset@s+1)^0,w,c
  4166  003C16  6E0D               	movwf	(??_memset+1)^0,c
  4167  003C18  0EFD               	movlw	253
  4168  003C1A  240C               	addwf	??_memset^0,w,c
  4169  003C1C  6ED9               	movwf	fsr2l,c
  4170  003C1E  0EFF               	movlw	255
  4171  003C20  200D               	addwfc	(??_memset+1)^0,w,c
  4172  003C22  6EDA               	movwf	fsr2h,c
  4173  003C24  C008  FFDF         	movff	memset@c,indf2
  4174  003C28  500B               	movf	(memset@n+1)^0,w,c
  4175  003C2A  E107               	bnz	u6041
  4176  003C2C  0E07               	movlw	7
  4177  003C2E  5C0A               	subwf	memset@n^0,w,c
  4178  003C30  B0D8               	btfsc	status,0,c
  4179  003C32  EF1D  F01E         	goto	u6041
  4180  003C36  EF1F  F01E         	goto	u6040
  4181  003C3A                     u6041:
  4182  003C3A  EF21  F01E         	goto	l5255
  4183  003C3E                     u6040:
  4184  003C3E  EF72  F01E         	goto	l1310
  4185  003C42                     l5255:
  4186  003C42  EE20 F003          	lfsr	2,3
  4187  003C46  5010               	movf	memset@s^0,w,c
  4188  003C48  26D9               	addwf	fsr2l,f,c
  4189  003C4A  5011               	movf	(memset@s+1)^0,w,c
  4190  003C4C  22DA               	addwfc	fsr2h,f,c
  4191  003C4E  C008  FFDF         	movff	memset@c,indf2
  4192  003C52  500A               	movf	memset@n^0,w,c
  4193  003C54  2410               	addwf	memset@s^0,w,c
  4194  003C56  6E0C               	movwf	??_memset^0,c
  4195  003C58  500B               	movf	(memset@n+1)^0,w,c
  4196  003C5A  2011               	addwfc	(memset@s+1)^0,w,c
  4197  003C5C  6E0D               	movwf	(??_memset+1)^0,c
  4198  003C5E  0EFC               	movlw	252
  4199  003C60  240C               	addwf	??_memset^0,w,c
  4200  003C62  6ED9               	movwf	fsr2l,c
  4201  003C64  0EFF               	movlw	255
  4202  003C66  200D               	addwfc	(??_memset+1)^0,w,c
  4203  003C68  6EDA               	movwf	fsr2h,c
  4204  003C6A  C008  FFDF         	movff	memset@c,indf2
  4205  003C6E  500B               	movf	(memset@n+1)^0,w,c
  4206  003C70  E107               	bnz	u6051
  4207  003C72  0E09               	movlw	9
  4208  003C74  5C0A               	subwf	memset@n^0,w,c
  4209  003C76  B0D8               	btfsc	status,0,c
  4210  003C78  EF40  F01E         	goto	u6051
  4211  003C7C  EF42  F01E         	goto	u6050
  4212  003C80                     u6051:
  4213  003C80  EF44  F01E         	goto	l5261
  4214  003C84                     u6050:
  4215  003C84  EF72  F01E         	goto	l1310
  4216  003C88                     l5261:
  4217  003C88  C010  F00C         	movff	memset@s,??_memset
  4218  003C8C  C011  F00D         	movff	memset@s+1,??_memset+1
  4219  003C90  1E0C               	comf	??_memset^0,f,c
  4220  003C92  1E0D               	comf	(??_memset+1)^0,f,c
  4221  003C94  4A0C               	infsnz	??_memset^0,f,c
  4222  003C96  2A0D               	incf	(??_memset+1)^0,f,c
  4223  003C98  0E03               	movlw	3
  4224  003C9A  140C               	andwf	??_memset^0,w,c
  4225  003C9C  6E0E               	movwf	memset@k^0,c
  4226  003C9E  6A0F               	clrf	(memset@k+1)^0,c
  4227  003CA0  500E               	movf	memset@k^0,w,c
  4228  003CA2  2610               	addwf	memset@s^0,f,c
  4229  003CA4  500F               	movf	(memset@k+1)^0,w,c
  4230  003CA6  2211               	addwfc	(memset@s+1)^0,f,c
  4231  003CA8  500E               	movf	memset@k^0,w,c
  4232  003CAA  5E0A               	subwf	memset@n^0,f,c
  4233  003CAC  500F               	movf	(memset@k+1)^0,w,c
  4234  003CAE  5A0B               	subwfb	(memset@n+1)^0,f,c
  4235  003CB0  0EFC               	movlw	252
  4236  003CB2  160A               	andwf	memset@n^0,f,c
  4237  003CB4  0EFF               	movlw	255
  4238  003CB6  160B               	andwf	(memset@n+1)^0,f,c
  4239  003CB8  EF69  F01E         	goto	l5269
  4240  003CBC                     l5263:
  4241  003CBC  C010  FFD9         	movff	memset@s,fsr2l
  4242  003CC0  C011  FFDA         	movff	memset@s+1,fsr2h
  4243  003CC4  C008  FFDF         	movff	memset@c,indf2
  4244  003CC8  060A               	decf	memset@n^0,f,c
  4245  003CCA  A0D8               	btfss	status,0,c
  4246  003CCC  060B               	decf	(memset@n+1)^0,f,c
  4247  003CCE  4A10               	infsnz	memset@s^0,f,c
  4248  003CD0  2A11               	incf	(memset@s+1)^0,f,c
  4249  003CD2                     l5269:
  4250  003CD2  500A               	movf	memset@n^0,w,c
  4251  003CD4  100B               	iorwf	(memset@n+1)^0,w,c
  4252  003CD6  A4D8               	btfss	status,2,c
  4253  003CD8  EF70  F01E         	goto	u6061
  4254  003CDC  EF72  F01E         	goto	u6060
  4255  003CE0                     u6061:
  4256  003CE0  EF5E  F01E         	goto	l5263
  4257  003CE4                     u6060:
  4258  003CE4                     l1310:
  4259  003CE4  0012               	return		;funcret
  4260  003CE6                     __end_of_memset:
  4261                           	callstack 0
  4262                           
  4263 ;; *************** function _pwm_stop *****************
  4264 ;; Defined at:
  4265 ;;		line 59 in file "./pwm.h"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;		None
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;		None
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		None
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4279 ;;      Params:         0       0       0       0       0       0       0
  4280 ;;      Locals:         0       0       0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0
  4282 ;;      Totals:         0       0       0       0       0       0       0
  4283 ;;Total ram usage:        0 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; Hardware stack levels required when called: 1
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_main
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text5
  4294  005750                     __ptext5:
  4295                           	callstack 0
  4296  005750                     _pwm_stop:
  4297                           	callstack 29
  4298  005750                     
  4299                           ;./pwm.h: 61:     TMR2ON = 0;
  4300  005750  94CA               	bcf	4042,2,c	;volatile
  4301  005752  0012               	return		;funcret
  4302  005754                     __end_of_pwm_stop:
  4303                           	callstack 0
  4304                           
  4305 ;; *************** function _pwm_start *****************
  4306 ;; Defined at:
  4307 ;;		line 54 in file "./pwm.h"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;		None
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;		None
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      void 
  4314 ;; Registers used:
  4315 ;;		None
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4321 ;;      Params:         0       0       0       0       0       0       0
  4322 ;;      Locals:         0       0       0       0       0       0       0
  4323 ;;      Temps:          0       0       0       0       0       0       0
  4324 ;;      Totals:         0       0       0       0       0       0       0
  4325 ;;Total ram usage:        0 bytes
  4326 ;; Hardware stack levels used: 1
  4327 ;; Hardware stack levels required when called: 1
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_main
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           	psect	text6
  4336  005754                     __ptext6:
  4337                           	callstack 0
  4338  005754                     _pwm_start:
  4339                           	callstack 29
  4340  005754                     
  4341                           ;./pwm.h: 56:     TMR2ON = 1;
  4342  005754  84CA               	bsf	4042,2,c	;volatile
  4343  005756  0012               	return		;funcret
  4344  005758                     __end_of_pwm_start:
  4345                           	callstack 0
  4346                           
  4347 ;; *************** function _pwm_setDuty *****************
  4348 ;; Defined at:
  4349 ;;		line 47 in file "./pwm.h"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  dutycycle       2    5[COMRAM] unsigned int 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4363 ;;      Params:         2       0       0       0       0       0       0
  4364 ;;      Locals:         0       0       0       0       0       0       0
  4365 ;;      Temps:          2       0       0       0       0       0       0
  4366 ;;      Totals:         4       0       0       0       0       0       0
  4367 ;;Total ram usage:        4 bytes
  4368 ;; Hardware stack levels used: 1
  4369 ;; Hardware stack levels required when called: 1
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_main
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text7
  4378  005660                     __ptext7:
  4379                           	callstack 0
  4380  005660                     _pwm_setDuty:
  4381                           	callstack 29
  4382  005660                     
  4383                           ;./pwm.h: 47: void pwm_setDuty(unsigned int dutycycle);./pwm.h: 48: {;./pwm.h: 49:     C
      +                          CPR1L = dutycycle>>2;
  4384  005660  C006  F008         	movff	pwm_setDuty@dutycycle,??_pwm_setDuty
  4385  005664  C007  F009         	movff	pwm_setDuty@dutycycle+1,??_pwm_setDuty+1
  4386  005668  90D8               	bcf	status,0,c
  4387  00566A  3209               	rrcf	(??_pwm_setDuty+1)^0,f,c
  4388  00566C  3208               	rrcf	??_pwm_setDuty^0,f,c
  4389  00566E  90D8               	bcf	status,0,c
  4390  005670  3209               	rrcf	(??_pwm_setDuty+1)^0,f,c
  4391  005672  3208               	rrcf	??_pwm_setDuty^0,f,c
  4392  005674  5008               	movf	??_pwm_setDuty^0,w,c
  4393  005676  6EBE               	movwf	190,c	;volatile
  4394                           
  4395                           ;./pwm.h: 50:     CCP1CON &= 0xCF;
  4396  005678  0ECF               	movlw	207
  4397  00567A  16BD               	andwf	189,f,c	;volatile
  4398                           
  4399                           ;./pwm.h: 51:     CCP1CON |= ((dutycycle<<4) & 0x30);
  4400  00567C  3806               	swapf	pwm_setDuty@dutycycle^0,w,c	;volatile
  4401  00567E  0BF0               	andlw	240
  4402  005680  0B30               	andlw	48
  4403  005682  12BD               	iorwf	189,f,c	;volatile
  4404  005684  0012               	return		;funcret
  4405  005686                     __end_of_pwm_setDuty:
  4406                           	callstack 0
  4407                           
  4408 ;; *************** function _pwm_Init *****************
  4409 ;; Defined at:
  4410 ;;		line 19 in file "./pwm.h"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  period          1    wreg     unsigned char 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  period          1    5[COMRAM] unsigned char 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4424 ;;      Params:         0       0       0       0       0       0       0
  4425 ;;      Locals:         1       0       0       0       0       0       0
  4426 ;;      Temps:          0       0       0       0       0       0       0
  4427 ;;      Totals:         1       0       0       0       0       0       0
  4428 ;;Total ram usage:        1 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 1
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_main
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text8
  4439  0056E0                     __ptext8:
  4440                           	callstack 0
  4441  0056E0                     _pwm_Init:
  4442                           	callstack 29
  4443                           
  4444                           ;incstack = 0
  4445                           ;pwm_Init@period stored from wreg
  4446  0056E0  6E06               	movwf	pwm_Init@period^0,c
  4447  0056E2                     
  4448                           ;./pwm.h: 21:     TRISC = 0;
  4449  0056E2  0E00               	movlw	0
  4450  0056E4  6E94               	movwf	148,c	;volatile
  4451                           
  4452                           ;./pwm.h: 22:     LATC = 0;
  4453  0056E6  0E00               	movlw	0
  4454  0056E8  6E8B               	movwf	139,c	;volatile
  4455                           
  4456                           ;./pwm.h: 25:     CCP1CON = 0X3C;
  4457  0056EA  0E3C               	movlw	60
  4458  0056EC  6EBD               	movwf	189,c	;volatile
  4459  0056EE                     
  4460                           ;./pwm.h: 35:     PR2 = period;
  4461  0056EE  C006  FFCB         	movff	pwm_Init@period,4043	;volatile
  4462  0056F2                     
  4463                           ;./pwm.h: 37:     T2CON=0x04;
  4464  0056F2  0E04               	movlw	4
  4465  0056F4  6ECA               	movwf	202,c	;volatile
  4466  0056F6  0012               	return		;funcret
  4467  0056F8                     __end_of_pwm_Init:
  4468                           	callstack 0
  4469                           
  4470 ;; *************** function _put_rc *****************
  4471 ;; Defined at:
  4472 ;;		line 27 in file "main.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  rc              1    wreg     enum E3114
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  rc              1   17[BANK0 ] enum E3114
  4477 ;;  p               2   18[BANK0 ] PTR const unsigned char 
  4478 ;;		 -> put_rc@str(69), 
  4479 ;;  i               1   16[BANK0 ] enum E3114
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4489 ;;      Params:         0       0       0       0       0       0       0
  4490 ;;      Locals:         0       4       0       0       0       0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0
  4492 ;;      Totals:         0       4       0       0       0       0       0
  4493 ;;Total ram usage:        4 bytes
  4494 ;; Hardware stack levels used: 1
  4495 ;; Hardware stack levels required when called: 9
  4496 ;; This function calls:
  4497 ;;		_printf
  4498 ;; This function is called by:
  4499 ;;		_main
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text9
  4504  005102                     __ptext9:
  4505                           	callstack 0
  4506  005102                     _put_rc:
  4507                           	callstack 21
  4508                           
  4509                           ;incstack = 0
  4510                           ;put_rc@rc stored from wreg
  4511  005102  0100               	movlb	0	; () banked
  4512  005104  6F91               	movwf	put_rc@rc& (0+255),b
  4513  005106                     
  4514                           ;main.c: 27: void put_rc (FRESULT rc);main.c: 28: {;main.c: 29:  const char *p;;main.c: 
      +                          30:  FRESULT i;;main.c: 31:  static const char str[] =;main.c: 34:  for (p = str, i = 0;
      +                           i != rc && *p; i++) {
  4515  005106  0E0D               	movlw	low put_rc@str
  4516  005108  0100               	movlb	0	; () banked
  4517  00510A  6F92               	movwf	put_rc@p& (0+255),b
  4518  00510C  0E7C               	movlw	high put_rc@str
  4519  00510E  6F93               	movwf	(put_rc@p+1)& (0+255),b
  4520  005110  0E00               	movlw	0
  4521  005112  6F90               	movwf	put_rc@i& (0+255),b
  4522  005114  EF9D  F028         	goto	l7203
  4523  005118                     l7199:
  4524                           
  4525                           ; BSR set to: 0
  4526  005118  C092  FFF6         	movff	put_rc@p,tblptrl
  4527  00511C  C093  FFF7         	movff	put_rc@p+1,tblptrh
  4528  005120  4B92               	infsnz	put_rc@p& (0+255),f,b
  4529  005122  2B93               	incf	(put_rc@p+1)& (0+255),f,b
  4530  005124                     	if	0	;tblptru may be non-zero
  4531  005124                     	endif
  4532  005124                     	if	0	;tblptru may be non-zero
  4533  005124                     	endif
  4534  005124  0008               	tblrd		*
  4535  005126  50F5               	movf	tablat,w,c
  4536  005128  0900               	iorlw	0
  4537  00512A  A4D8               	btfss	status,2,c
  4538  00512C  EF9A  F028         	goto	u9071
  4539  005130  EF9C  F028         	goto	u9070
  4540  005134                     u9071:
  4541  005134  EF8C  F028         	goto	l7199
  4542  005138                     u9070:
  4543  005138                     
  4544                           ; BSR set to: 0
  4545                           ;main.c: 36:  }
  4546  005138  2B90               	incf	put_rc@i& (0+255),f,b
  4547  00513A                     l7203:
  4548                           
  4549                           ; BSR set to: 0
  4550  00513A  5191               	movf	put_rc@rc& (0+255),w,b
  4551  00513C  1990               	xorwf	put_rc@i& (0+255),w,b
  4552  00513E  B4D8               	btfsc	status,2,c
  4553  005140  EFA4  F028         	goto	u9081
  4554  005144  EFA6  F028         	goto	u9080
  4555  005148                     u9081:
  4556  005148  EFB4  F028         	goto	l7207
  4557  00514C                     u9080:
  4558  00514C                     
  4559                           ; BSR set to: 0
  4560  00514C  C092  FFF6         	movff	put_rc@p,tblptrl
  4561  005150  C093  FFF7         	movff	put_rc@p+1,tblptrh
  4562  005154                     	if	0	;tblptru may be non-zero
  4563  005154                     	endif
  4564  005154                     	if	0	;tblptru may be non-zero
  4565  005154                     	endif
  4566  005154  0008               	tblrd		*
  4567  005156  50F5               	movf	tablat,w,c
  4568  005158  0900               	iorlw	0
  4569  00515A  A4D8               	btfss	status,2,c
  4570  00515C  EFB2  F028         	goto	u9091
  4571  005160  EFB4  F028         	goto	u9090
  4572  005164                     u9091:
  4573  005164  EF8C  F028         	goto	l7199
  4574  005168                     u9090:
  4575  005168                     l7207:
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;main.c: 37:  printf("rc=%u FR_%s\r\n", rc, p);
  4579  005168  0E74               	movlw	low STR_1
  4580  00516A  6F86               	movwf	printf@fmt& (0+255),b
  4581  00516C  0E7D               	movlw	high STR_1
  4582  00516E  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4583  005170  C091  F088         	movff	put_rc@rc,?_printf+2
  4584  005174  6B89               	clrf	(?_printf+3)& (0+255),b
  4585  005176  C092  F08A         	movff	put_rc@p,?_printf+4
  4586  00517A  C093  F08B         	movff	put_rc@p+1,?_printf+5
  4587  00517E  EC1C  F02B         	call	_printf	;wreg free
  4588  005182  0012               	return		;funcret
  4589  005184                     __end_of_put_rc:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function _put_dump *****************
  4593 ;; Defined at:
  4594 ;;		line 203 in file "uart.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  buff            2   16[BANK0 ] PTR const void 
  4597 ;;		 -> Line(128), 
  4598 ;;  addr            4   18[BANK0 ] unsigned long 
  4599 ;;  len             2   22[BANK0 ] int 
  4600 ;;  width           2   24[BANK0 ] int 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  i               2   36[BANK0 ] int 
  4603 ;;  bp              2   34[BANK0 ] PTR const unsigned char 
  4604 ;;		 -> Line(128), 
  4605 ;;  lp              2   30[BANK0 ] PTR const unsigned long 
  4606 ;;		 -> Line(128), 
  4607 ;;  sp              2   28[BANK0 ] PTR const unsigned short
  4608 ;;		 -> Line(128), 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4618 ;;      Params:         0      10       0       0       0       0       0
  4619 ;;      Locals:         0      10       0       0       0       0       0
  4620 ;;      Temps:          0       2       0       0       0       0       0
  4621 ;;      Totals:         0      22       0       0       0       0       0
  4622 ;;Total ram usage:       22 bytes
  4623 ;; Hardware stack levels used: 1
  4624 ;; Hardware stack levels required when called: 9
  4625 ;; This function calls:
  4626 ;;		_printf
  4627 ;; This function is called by:
  4628 ;;		_main
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text10
  4633  002DCA                     __ptext10:
  4634                           	callstack 0
  4635  002DCA                     _put_dump:
  4636                           	callstack 21
  4637  002DCA                     
  4638                           ;uart.c: 204:  const void* buff,;uart.c: 205:  unsigned long addr,;uart.c: 206:  int len
      +                          ,;uart.c: 207:  int width;uart.c: 209: {;uart.c: 210:  int i;;uart.c: 211:  const unsign
      +                          ed char *bp;;uart.c: 212:  const unsigned short *sp;;uart.c: 213:  const unsigned long *
      +                          lp;;uart.c: 215:  printf("addr: %08lX |", addr);
  4639  002DCA  0E58               	movlw	low STR_24
  4640  002DCC  0100               	movlb	0	; () banked
  4641  002DCE  6F86               	movwf	printf@fmt& (0+255),b
  4642  002DD0  0E7D               	movlw	high STR_24
  4643  002DD2  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4644  002DD4  C092  F088         	movff	put_dump@addr,?_printf+2
  4645  002DD8  C093  F089         	movff	put_dump@addr+1,?_printf+3
  4646  002DDC  C094  F08A         	movff	put_dump@addr+2,?_printf+4
  4647  002DE0  C095  F08B         	movff	put_dump@addr+3,?_printf+5
  4648  002DE4  EC1C  F02B         	call	_printf	;wreg free
  4649                           
  4650                           ;uart.c: 217:  switch (width) {
  4651  002DE8  EFC9  F017         	goto	l7303
  4652  002DEC                     l7257:
  4653                           
  4654                           ; BSR set to: 0
  4655                           ;uart.c: 219:   bp = buff;
  4656  002DEC  C090  F0A2         	movff	put_dump@buff,put_dump@bp
  4657  002DF0  C091  F0A3         	movff	put_dump@buff+1,put_dump@bp+1
  4658  002DF4                     
  4659                           ; BSR set to: 0
  4660                           ;uart.c: 220:   for (i = 0; i < len; i++)
  4661  002DF4  0E00               	movlw	0
  4662  002DF6  6FA5               	movwf	(put_dump@i+1)& (0+255),b
  4663  002DF8  0E00               	movlw	0
  4664  002DFA  6FA4               	movwf	put_dump@i& (0+255),b
  4665  002DFC  EF14  F017         	goto	l7265
  4666  002E00                     l7261:
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;uart.c: 221:    printf(" %02X", bp[i]);
  4670  002E00  0E9D               	movlw	low STR_25
  4671  002E02  6F86               	movwf	printf@fmt& (0+255),b
  4672  002E04  0E7D               	movlw	high STR_25
  4673  002E06  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4674  002E08  51A4               	movf	put_dump@i& (0+255),w,b
  4675  002E0A  25A2               	addwf	put_dump@bp& (0+255),w,b
  4676  002E0C  6ED9               	movwf	fsr2l,c
  4677  002E0E  51A5               	movf	(put_dump@i+1)& (0+255),w,b
  4678  002E10  21A3               	addwfc	(put_dump@bp+1)& (0+255),w,b
  4679  002E12  6EDA               	movwf	fsr2h,c
  4680  002E14  50DF               	movf	indf2,w,c
  4681  002E16  6F9A               	movwf	??_put_dump& (0+255),b
  4682  002E18  519A               	movf	??_put_dump& (0+255),w,b
  4683  002E1A  6F88               	movwf	(?_printf+2)& (0+255),b
  4684  002E1C  6B89               	clrf	(?_printf+3)& (0+255),b
  4685  002E1E  EC1C  F02B         	call	_printf	;wreg free
  4686  002E22  0100               	movlb	0	; () banked
  4687  002E24  4BA4               	infsnz	put_dump@i& (0+255),f,b
  4688  002E26  2BA5               	incf	(put_dump@i+1)& (0+255),f,b
  4689  002E28                     l7265:
  4690                           
  4691                           ; BSR set to: 0
  4692  002E28  5196               	movf	put_dump@len& (0+255),w,b
  4693  002E2A  5DA4               	subwf	put_dump@i& (0+255),w,b
  4694  002E2C  51A5               	movf	(put_dump@i+1)& (0+255),w,b
  4695  002E2E  0A80               	xorlw	128
  4696  002E30  6F9A               	movwf	??_put_dump& (0+255),b
  4697  002E32  5197               	movf	(put_dump@len+1)& (0+255),w,b
  4698  002E34  0A80               	xorlw	128
  4699  002E36  599A               	subwfb	??_put_dump& (0+255),w,b
  4700  002E38  A0D8               	btfss	status,0,c
  4701  002E3A  EF21  F017         	goto	u9161
  4702  002E3E  EF23  F017         	goto	u9160
  4703  002E42                     u9161:
  4704  002E42  EF00  F017         	goto	l7261
  4705  002E46                     u9160:
  4706  002E46                     
  4707                           ; BSR set to: 0
  4708                           ;uart.c: 222:   printf(" ");
  4709  002E46  0EBB               	movlw	low STR_26
  4710  002E48  6F86               	movwf	printf@fmt& (0+255),b
  4711  002E4A  0E7D               	movlw	high STR_26
  4712  002E4C  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4713  002E4E  EC1C  F02B         	call	_printf	;wreg free
  4714  002E52                     
  4715                           ;uart.c: 223:   for (i = 0; i < len; i++)
  4716  002E52  0E00               	movlw	0
  4717  002E54  0100               	movlb	0	; () banked
  4718  002E56  6FA5               	movwf	(put_dump@i+1)& (0+255),b
  4719  002E58  0E00               	movlw	0
  4720  002E5A  6FA4               	movwf	put_dump@i& (0+255),b
  4721  002E5C  EF6A  F017         	goto	l7283
  4722  002E60                     l7271:
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;uart.c: 224:    printf("%c", (bp[i] >= ' ' && bp[i] <= '~') ? bp[i] : '.');
  4726  002E60  51A4               	movf	put_dump@i& (0+255),w,b
  4727  002E62  25A2               	addwf	put_dump@bp& (0+255),w,b
  4728  002E64  6ED9               	movwf	fsr2l,c
  4729  002E66  51A5               	movf	(put_dump@i+1)& (0+255),w,b
  4730  002E68  21A3               	addwfc	(put_dump@bp+1)& (0+255),w,b
  4731  002E6A  6EDA               	movwf	fsr2h,c
  4732  002E6C  0E1F               	movlw	31
  4733  002E6E  64DF               	cpfsgt	indf2,c
  4734  002E70  EF3C  F017         	goto	u9171
  4735  002E74  EF3E  F017         	goto	u9170
  4736  002E78                     u9171:
  4737  002E78  EF4C  F017         	goto	l7275
  4738  002E7C                     u9170:
  4739  002E7C                     
  4740                           ; BSR set to: 0
  4741  002E7C  51A4               	movf	put_dump@i& (0+255),w,b
  4742  002E7E  25A2               	addwf	put_dump@bp& (0+255),w,b
  4743  002E80  6ED9               	movwf	fsr2l,c
  4744  002E82  51A5               	movf	(put_dump@i+1)& (0+255),w,b
  4745  002E84  21A3               	addwfc	(put_dump@bp+1)& (0+255),w,b
  4746  002E86  6EDA               	movwf	fsr2h,c
  4747  002E88  0E7E               	movlw	126
  4748  002E8A  64DF               	cpfsgt	indf2,c
  4749  002E8C  EF4A  F017         	goto	u9181
  4750  002E90  EF4C  F017         	goto	u9180
  4751  002E94                     u9181:
  4752  002E94  EF52  F017         	goto	l7277
  4753  002E98                     u9180:
  4754  002E98                     l7275:
  4755                           
  4756                           ; BSR set to: 0
  4757  002E98  0E00               	movlw	0
  4758  002E9A  6FA1               	movwf	(_put_dump$1127+1)& (0+255),b
  4759  002E9C  0E2E               	movlw	46
  4760  002E9E  6FA0               	movwf	_put_dump$1127& (0+255),b
  4761  002EA0  EF5D  F017         	goto	l7279
  4762  002EA4                     l7277:
  4763                           
  4764                           ; BSR set to: 0
  4765  002EA4  51A4               	movf	put_dump@i& (0+255),w,b
  4766  002EA6  25A2               	addwf	put_dump@bp& (0+255),w,b
  4767  002EA8  6ED9               	movwf	fsr2l,c
  4768  002EAA  51A5               	movf	(put_dump@i+1)& (0+255),w,b
  4769  002EAC  21A3               	addwfc	(put_dump@bp+1)& (0+255),w,b
  4770  002EAE  6EDA               	movwf	fsr2h,c
  4771  002EB0  50DF               	movf	indf2,w,c
  4772  002EB2  6F9A               	movwf	??_put_dump& (0+255),b
  4773  002EB4  519A               	movf	??_put_dump& (0+255),w,b
  4774  002EB6  6FA0               	movwf	_put_dump$1127& (0+255),b
  4775  002EB8  6BA1               	clrf	(_put_dump$1127+1)& (0+255),b
  4776  002EBA                     l7279:
  4777                           
  4778                           ; BSR set to: 0
  4779  002EBA  0EB8               	movlw	low STR_21
  4780  002EBC  6F86               	movwf	printf@fmt& (0+255),b
  4781  002EBE  0E7D               	movlw	high STR_21
  4782  002EC0  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4783  002EC2  C0A0  F088         	movff	_put_dump$1127,?_printf+2
  4784  002EC6  C0A1  F089         	movff	_put_dump$1127+1,?_printf+3
  4785  002ECA  EC1C  F02B         	call	_printf	;wreg free
  4786  002ECE  0100               	movlb	0	; () banked
  4787  002ED0  4BA4               	infsnz	put_dump@i& (0+255),f,b
  4788  002ED2  2BA5               	incf	(put_dump@i+1)& (0+255),f,b
  4789  002ED4                     l7283:
  4790                           
  4791                           ; BSR set to: 0
  4792  002ED4  5196               	movf	put_dump@len& (0+255),w,b
  4793  002ED6  5DA4               	subwf	put_dump@i& (0+255),w,b
  4794  002ED8  51A5               	movf	(put_dump@i+1)& (0+255),w,b
  4795  002EDA  0A80               	xorlw	128
  4796  002EDC  6F9A               	movwf	??_put_dump& (0+255),b
  4797  002EDE  5197               	movf	(put_dump@len+1)& (0+255),w,b
  4798  002EE0  0A80               	xorlw	128
  4799  002EE2  599A               	subwfb	??_put_dump& (0+255),w,b
  4800  002EE4  A0D8               	btfss	status,0,c
  4801  002EE6  EF77  F017         	goto	u9191
  4802  002EEA  EF79  F017         	goto	u9190
  4803  002EEE                     u9191:
  4804  002EEE  EF30  F017         	goto	l7271
  4805  002EF2                     u9190:
  4806  002EF2  EFE4  F017         	goto	l7305
  4807  002EF6                     l7285:
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;uart.c: 227:   sp = buff;
  4811  002EF6  C090  F09C         	movff	put_dump@buff,put_dump@sp
  4812  002EFA  C091  F09D         	movff	put_dump@buff+1,put_dump@sp+1
  4813  002EFE                     l7287:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;uart.c: 229:    printf(" %04X", *sp++);
  4817  002EFE  0EA3               	movlw	low STR_28
  4818  002F00  6F86               	movwf	printf@fmt& (0+255),b
  4819  002F02  0E7D               	movlw	high STR_28
  4820  002F04  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4821  002F06  C09C  FFD9         	movff	put_dump@sp,fsr2l
  4822  002F0A  C09D  FFDA         	movff	put_dump@sp+1,fsr2h
  4823  002F0E  CFDE F088          	movff	postinc2,?_printf+2
  4824  002F12  CFDD F089          	movff	postdec2,?_printf+3
  4825  002F16  EC1C  F02B         	call	_printf	;wreg free
  4826  002F1A  0E02               	movlw	2
  4827  002F1C  0100               	movlb	0	; () banked
  4828  002F1E  279C               	addwf	put_dump@sp& (0+255),f,b
  4829  002F20  0E00               	movlw	0
  4830  002F22  239D               	addwfc	(put_dump@sp+1)& (0+255),f,b
  4831  002F24                     
  4832                           ; BSR set to: 0
  4833  002F24  0796               	decf	put_dump@len& (0+255),f,b
  4834  002F26  A0D8               	btfss	status,0,c
  4835  002F28  0797               	decf	(put_dump@len+1)& (0+255),f,b
  4836  002F2A  5196               	movf	put_dump@len& (0+255),w,b
  4837  002F2C  1197               	iorwf	(put_dump@len+1)& (0+255),w,b
  4838  002F2E  A4D8               	btfss	status,2,c
  4839  002F30  EF9C  F017         	goto	u9201
  4840  002F34  EF9E  F017         	goto	u9200
  4841  002F38                     u9201:
  4842  002F38  EF7F  F017         	goto	l7287
  4843  002F3C                     u9200:
  4844  002F3C  EFE4  F017         	goto	l7305
  4845  002F40                     l7293:
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;uart.c: 233:   lp = buff;
  4849  002F40  C090  F09E         	movff	put_dump@buff,put_dump@lp
  4850  002F44  C091  F09F         	movff	put_dump@buff+1,put_dump@lp+1
  4851  002F48                     l7295:
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;uart.c: 235:    printf(" %08LX", *lp++);
  4855  002F48  0E96               	movlw	low STR_29
  4856  002F4A  6F86               	movwf	printf@fmt& (0+255),b
  4857  002F4C  0E7D               	movlw	high STR_29
  4858  002F4E  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4859  002F50  C09E  FFD9         	movff	put_dump@lp,fsr2l
  4860  002F54  C09F  FFDA         	movff	put_dump@lp+1,fsr2h
  4861  002F58  CFDE F088          	movff	postinc2,?_printf+2
  4862  002F5C  CFDE F089          	movff	postinc2,?_printf+3
  4863  002F60  CFDE F08A          	movff	postinc2,?_printf+4
  4864  002F64  CFDE F08B          	movff	postinc2,?_printf+5
  4865  002F68  EC1C  F02B         	call	_printf	;wreg free
  4866  002F6C  0E04               	movlw	4
  4867  002F6E  0100               	movlb	0	; () banked
  4868  002F70  279E               	addwf	put_dump@lp& (0+255),f,b
  4869  002F72  0E00               	movlw	0
  4870  002F74  239F               	addwfc	(put_dump@lp+1)& (0+255),f,b
  4871  002F76                     
  4872                           ; BSR set to: 0
  4873  002F76  0796               	decf	put_dump@len& (0+255),f,b
  4874  002F78  A0D8               	btfss	status,0,c
  4875  002F7A  0797               	decf	(put_dump@len+1)& (0+255),f,b
  4876  002F7C  5196               	movf	put_dump@len& (0+255),w,b
  4877  002F7E  1197               	iorwf	(put_dump@len+1)& (0+255),w,b
  4878  002F80  A4D8               	btfss	status,2,c
  4879  002F82  EFC5  F017         	goto	u9211
  4880  002F86  EFC7  F017         	goto	u9210
  4881  002F8A                     u9211:
  4882  002F8A  EFA4  F017         	goto	l7295
  4883  002F8E                     u9210:
  4884  002F8E  EFE4  F017         	goto	l7305
  4885  002F92                     l7303:
  4886  002F92  C098  F09A         	movff	put_dump@width,??_put_dump
  4887  002F96  C099  F09B         	movff	put_dump@width+1,??_put_dump+1
  4888                           
  4889                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4890                           ; Switch size 1, requested type "simple"
  4891                           ; Number of cases is 1, Range of values is 0 to 0
  4892                           ; switch strategies available:
  4893                           ; Name         Instructions Cycles
  4894                           ; simple_byte            4     3 (average)
  4895                           ;	Chosen strategy is simple_byte
  4896  002F9A  0100               	movlb	0	; () banked
  4897  002F9C  519B               	movf	(??_put_dump+1)& (0+255),w,b
  4898  002F9E  0A00               	xorlw	0	; case 0
  4899  002FA0  B4D8               	btfsc	status,2,c
  4900  002FA2  EFD5  F017         	goto	l8063
  4901  002FA6  EFE4  F017         	goto	l7305
  4902  002FAA                     l8063:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ; Switch size 1, requested type "simple"
  4906                           ; Number of cases is 3, Range of values is 1 to 4
  4907                           ; switch strategies available:
  4908                           ; Name         Instructions Cycles
  4909                           ; simple_byte           10     6 (average)
  4910                           ;	Chosen strategy is simple_byte
  4911  002FAA  519A               	movf	??_put_dump& (0+255),w,b
  4912  002FAC  0A01               	xorlw	1	; case 1
  4913  002FAE  B4D8               	btfsc	status,2,c
  4914  002FB0  EFF6  F016         	goto	l7257
  4915  002FB4  0A03               	xorlw	3	; case 2
  4916  002FB6  B4D8               	btfsc	status,2,c
  4917  002FB8  EF7B  F017         	goto	l7285
  4918  002FBC  0A06               	xorlw	6	; case 4
  4919  002FBE  B4D8               	btfsc	status,2,c
  4920  002FC0  EFA0  F017         	goto	l7293
  4921  002FC4  EFE4  F017         	goto	l7305
  4922  002FC8                     l7305:
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;uart.c: 240:  printf("\r\n");
  4926  002FC8  0E1F               	movlw	low (STR_16+18)
  4927  002FCA  6F86               	movwf	printf@fmt& (0+255),b
  4928  002FCC  0E7D               	movlw	high (STR_16+18)
  4929  002FCE  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4930  002FD0  EC1C  F02B         	call	_printf	;wreg free
  4931  002FD4  0012               	return		;funcret
  4932  002FD6                     __end_of_put_dump:
  4933                           	callstack 0
  4934                           
  4935 ;; *************** function _put_drc *****************
  4936 ;; Defined at:
  4937 ;;		line 40 in file "main.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  res             1    wreg     unsigned char 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;  res             1   16[BANK0 ] unsigned char 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      void 
  4944 ;; Registers used:
  4945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4951 ;;      Params:         0       0       0       0       0       0       0
  4952 ;;      Locals:         0       1       0       0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0
  4954 ;;      Totals:         0       1       0       0       0       0       0
  4955 ;;Total ram usage:        1 bytes
  4956 ;; Hardware stack levels used: 1
  4957 ;; Hardware stack levels required when called: 9
  4958 ;; This function calls:
  4959 ;;		_printf
  4960 ;; This function is called by:
  4961 ;;		_main
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           	psect	text11
  4966  0056AC                     __ptext11:
  4967                           	callstack 0
  4968  0056AC                     _put_drc:
  4969                           	callstack 21
  4970                           
  4971                           ;incstack = 0
  4972                           ;put_drc@res stored from wreg
  4973  0056AC  0100               	movlb	0	; () banked
  4974  0056AE  6F90               	movwf	put_drc@res& (0+255),b
  4975  0056B0                     
  4976                           ;main.c: 40: void put_drc (BYTE res);main.c: 41: {;main.c: 42:  printf("rc=%d\r\n", res)
      +                          ;
  4977  0056B0  0E8E               	movlw	low STR_2
  4978  0056B2  0100               	movlb	0	; () banked
  4979  0056B4  6F86               	movwf	printf@fmt& (0+255),b
  4980  0056B6  0E7D               	movlw	high STR_2
  4981  0056B8  6F87               	movwf	(printf@fmt+1)& (0+255),b
  4982  0056BA  C090  F088         	movff	put_drc@res,?_printf+2
  4983  0056BE  6B89               	clrf	(?_printf+3)& (0+255),b
  4984  0056C0  EC1C  F02B         	call	_printf	;wreg free
  4985  0056C4  0012               	return		;funcret
  4986  0056C6                     __end_of_put_drc:
  4987                           	callstack 0
  4988                           
  4989 ;; *************** function _pf_readdir *****************
  4990 ;; Defined at:
  4991 ;;		line 1088 in file "pff.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  dj              2   92[BANK0 ] PTR struct .
  4994 ;;		 -> main@dir(16), 
  4995 ;;  fno             2   94[BANK0 ] PTR struct .
  4996 ;;		 -> main@fno(22), 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  dir            32    0[BANK1 ] unsigned char [32]
  4999 ;;  sp             12   32[BANK1 ] unsigned char [12]
  5000 ;;  fs              2   44[BANK1 ] PTR struct .
  5001 ;;		 -> NULL(0), main@fs(42), 
  5002 ;;  res             1   46[BANK1 ] enum E2600
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      enum E3114
  5005 ;; Registers used:
  5006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5012 ;;      Params:         0       4       0       0       0       0       0
  5013 ;;      Locals:         0       0      47       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0
  5015 ;;      Totals:         0       4      47       0       0       0       0
  5016 ;;Total ram usage:       51 bytes
  5017 ;; Hardware stack levels used: 1
  5018 ;; Hardware stack levels required when called: 13
  5019 ;; This function calls:
  5020 ;;		_dir_next
  5021 ;;		_dir_read
  5022 ;;		_dir_rewind
  5023 ;;		_get_fileinfo
  5024 ;; This function is called by:
  5025 ;;		_main
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text12
  5030  004836                     __ptext12:
  5031                           	callstack 0
  5032  004836                     _pf_readdir:
  5033                           	callstack 17
  5034  004836                     
  5035                           ;pff.c: 1089:  DIR *dj,;pff.c: 1090:  FILINFO *fno;pff.c: 1092: {;pff.c: 1093:  FRESULT 
      +                          res;;pff.c: 1094:  BYTE sp[12], dir[32];;pff.c: 1095:  FATFS *fs = FatFs;
  5036  004836  C0FD  F12C         	movff	_FatFs,pf_readdir@fs
  5037  00483A  C0FE  F12D         	movff	_FatFs+1,pf_readdir@fs+1
  5038                           
  5039                           ;pff.c: 1098:  if (!fs) {
  5040  00483E  0101               	movlb	1	; () banked
  5041  004840  512C               	movf	pf_readdir@fs& (0+255),w,b
  5042  004842  112D               	iorwf	(pf_readdir@fs+1)& (0+255),w,b
  5043  004844  A4D8               	btfss	status,2,c
  5044  004846  EF27  F024         	goto	u9691
  5045  00484A  EF29  F024         	goto	u9690
  5046  00484E                     u9691:
  5047  00484E  EF2D  F024         	goto	l7631
  5048  004852                     u9690:
  5049  004852                     
  5050                           ; BSR set to: 1
  5051                           ;pff.c: 1099:   res = FR_NOT_ENABLED;
  5052  004852  0E05               	movlw	5
  5053  004854  6F2E               	movwf	pf_readdir@res& (0+255),b
  5054                           
  5055                           ;pff.c: 1100:  } else {
  5056  004856  EF8B  F024         	goto	l389
  5057  00485A                     l7631:
  5058                           
  5059                           ; BSR set to: 1
  5060                           ;pff.c: 1101:   dj->fn = sp;
  5061  00485A  0100               	movlb	0	; () banked
  5062  00485C  EE20 F002          	lfsr	2,2
  5063  004860  51DC               	movf	pf_readdir@dj& (0+255),w,b
  5064  004862  26D9               	addwf	fsr2l,f,c
  5065  004864  51DD               	movf	(pf_readdir@dj+1)& (0+255),w,b
  5066  004866  22DA               	addwfc	fsr2h,f,c
  5067  004868  0E20               	movlw	low pf_readdir@sp
  5068  00486A  6EDE               	movwf	postinc2,c
  5069  00486C  0E01               	movlw	high pf_readdir@sp
  5070  00486E  6EDD               	movwf	postdec2,c
  5071  004870                     
  5072                           ; BSR set to: 0
  5073                           ;pff.c: 1102:   if (!fno) {
  5074  004870  51DE               	movf	pf_readdir@fno& (0+255),w,b
  5075  004872  11DF               	iorwf	(pf_readdir@fno+1)& (0+255),w,b
  5076  004874  A4D8               	btfss	status,2,c
  5077  004876  EF3F  F024         	goto	u9701
  5078  00487A  EF41  F024         	goto	u9700
  5079  00487E                     u9701:
  5080  00487E  EF4B  F024         	goto	l7637
  5081  004882                     u9700:
  5082  004882                     
  5083                           ; BSR set to: 0
  5084                           ;pff.c: 1103:    res = dir_rewind(dj);
  5085  004882  C0DC  F01D         	movff	pf_readdir@dj,dir_rewind@dj
  5086  004886  C0DD  F01E         	movff	pf_readdir@dj+1,dir_rewind@dj+1
  5087  00488A  EC1D  F023         	call	_dir_rewind	;wreg free
  5088  00488E  0101               	movlb	1	; () banked
  5089  004890  6F2E               	movwf	pf_readdir@res& (0+255),b
  5090                           
  5091                           ;pff.c: 1104:   } else {
  5092  004892  EF8B  F024         	goto	l389
  5093  004896                     l7637:
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;pff.c: 1105:    res = dir_read(dj, dir);
  5097  004896  C0DC  F0D1         	movff	pf_readdir@dj,dir_read@dj
  5098  00489A  C0DD  F0D2         	movff	pf_readdir@dj+1,dir_read@dj+1
  5099  00489E  0E00               	movlw	low pf_readdir@dir
  5100  0048A0  6FD3               	movwf	dir_read@dir& (0+255),b
  5101  0048A2  0E01               	movlw	high pf_readdir@dir
  5102  0048A4  6FD4               	movwf	(dir_read@dir+1)& (0+255),b
  5103  0048A6  EC2E  F01F         	call	_dir_read	;wreg free
  5104  0048AA  0101               	movlb	1	; () banked
  5105  0048AC  6F2E               	movwf	pf_readdir@res& (0+255),b
  5106  0048AE                     
  5107                           ; BSR set to: 1
  5108                           ;pff.c: 1106:    if (res == FR_NO_FILE) res = FR_OK;
  5109  0048AE  0E03               	movlw	3
  5110  0048B0  192E               	xorwf	pf_readdir@res& (0+255),w,b
  5111  0048B2  A4D8               	btfss	status,2,c
  5112  0048B4  EF5E  F024         	goto	u9711
  5113  0048B8  EF60  F024         	goto	u9710
  5114  0048BC                     u9711:
  5115  0048BC  EF62  F024         	goto	l392
  5116  0048C0                     u9710:
  5117  0048C0                     
  5118                           ; BSR set to: 1
  5119  0048C0  0E00               	movlw	0
  5120  0048C2  6F2E               	movwf	pf_readdir@res& (0+255),b
  5121  0048C4                     l392:
  5122                           
  5123                           ; BSR set to: 1
  5124                           ;pff.c: 1107:    if (res == FR_OK) {
  5125  0048C4  512E               	movf	pf_readdir@res& (0+255),w,b
  5126  0048C6  A4D8               	btfss	status,2,c
  5127  0048C8  EF68  F024         	goto	u9721
  5128  0048CC  EF6A  F024         	goto	u9720
  5129  0048D0                     u9721:
  5130  0048D0  EF8B  F024         	goto	l389
  5131  0048D4                     u9720:
  5132  0048D4                     
  5133                           ; BSR set to: 1
  5134                           ;pff.c: 1108:     get_fileinfo(dj, dir, fno);
  5135  0048D4  C0DC  F006         	movff	pf_readdir@dj,get_fileinfo@dj
  5136  0048D8  C0DD  F007         	movff	pf_readdir@dj+1,get_fileinfo@dj+1
  5137  0048DC  0E00               	movlw	low pf_readdir@dir
  5138  0048DE  6E08               	movwf	get_fileinfo@dir^0,c
  5139  0048E0  0E01               	movlw	high pf_readdir@dir
  5140  0048E2  6E09               	movwf	(get_fileinfo@dir+1)^0,c
  5141  0048E4  C0DE  F00A         	movff	pf_readdir@fno,get_fileinfo@fno
  5142  0048E8  C0DF  F00B         	movff	pf_readdir@fno+1,get_fileinfo@fno+1
  5143  0048EC  EC5B  F013         	call	_get_fileinfo	;wreg free
  5144  0048F0                     
  5145                           ;pff.c: 1109:     res = dir_next(dj);
  5146  0048F0  C0DC  F0C0         	movff	pf_readdir@dj,dir_next@dj
  5147  0048F4  C0DD  F0C1         	movff	pf_readdir@dj+1,dir_next@dj+1
  5148  0048F8  ECDC  F015         	call	_dir_next	;wreg free
  5149  0048FC  0101               	movlb	1	; () banked
  5150  0048FE  6F2E               	movwf	pf_readdir@res& (0+255),b
  5151  004900                     
  5152                           ; BSR set to: 1
  5153                           ;pff.c: 1110:     if (res == FR_NO_FILE) res = FR_OK;
  5154  004900  0E03               	movlw	3
  5155  004902  192E               	xorwf	pf_readdir@res& (0+255),w,b
  5156  004904  A4D8               	btfss	status,2,c
  5157  004906  EF87  F024         	goto	u9731
  5158  00490A  EF89  F024         	goto	u9730
  5159  00490E                     u9731:
  5160  00490E  EF8B  F024         	goto	l389
  5161  004912                     u9730:
  5162  004912                     
  5163                           ; BSR set to: 1
  5164  004912  0E00               	movlw	0
  5165  004914  6F2E               	movwf	pf_readdir@res& (0+255),b
  5166  004916                     l389:
  5167                           
  5168                           ; BSR set to: 1
  5169                           ;pff.c: 1115:  return res;
  5170  004916  512E               	movf	pf_readdir@res& (0+255),w,b
  5171  004918                     
  5172                           ; BSR set to: 1
  5173  004918  0012               	return		;funcret
  5174  00491A                     __end_of_pf_readdir:
  5175                           	callstack 0
  5176                           
  5177 ;; *************** function _get_fileinfo *****************
  5178 ;; Defined at:
  5179 ;;		line 634 in file "pff.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  dj              2    5[COMRAM] PTR struct .
  5182 ;;		 -> main@dir(16), 
  5183 ;;  dir             2    7[COMRAM] PTR unsigned char 
  5184 ;;		 -> pf_readdir@dir(32), 
  5185 ;;  fno             2    9[COMRAM] PTR struct .
  5186 ;;		 -> main@fno(22), 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  p               2   37[COMRAM] PTR unsigned char 
  5189 ;;		 -> fno.fname(13), main@fno(22), 
  5190 ;;  i               1   40[COMRAM] unsigned char 
  5191 ;;  c               1   39[COMRAM] unsigned char 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      void 
  5194 ;; Registers used:
  5195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5201 ;;      Params:         6       0       0       0       0       0       0
  5202 ;;      Locals:         4       0       0       0       0       0       0
  5203 ;;      Temps:         26       0       0       0       0       0       0
  5204 ;;      Totals:        36       0       0       0       0       0       0
  5205 ;;Total ram usage:       36 bytes
  5206 ;; Hardware stack levels used: 1
  5207 ;; Hardware stack levels required when called: 1
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_pf_readdir
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text13
  5216  0026B6                     __ptext13:
  5217                           	callstack 0
  5218  0026B6                     _get_fileinfo:
  5219                           	callstack 28
  5220  0026B6                     
  5221                           ;pff.c: 635:  DIR *dj,;pff.c: 636:  BYTE *dir,;pff.c: 637:  FILINFO *fno;pff.c: 639: {;p
      +                          ff.c: 640:  BYTE i, c;;pff.c: 641:  char *p;;pff.c: 644:  p = fno->fname;
  5222  0026B6  0E09               	movlw	9
  5223  0026B8  240A               	addwf	get_fileinfo@fno^0,w,c
  5224  0026BA  6E26               	movwf	get_fileinfo@p^0,c
  5225  0026BC  0E00               	movlw	0
  5226  0026BE  200B               	addwfc	(get_fileinfo@fno+1)^0,w,c
  5227  0026C0  6E27               	movwf	(get_fileinfo@p+1)^0,c
  5228  0026C2                     
  5229                           ;pff.c: 645:  if (dj->sect) {
  5230  0026C2  EE20 F00C          	lfsr	2,12
  5231  0026C6  5006               	movf	get_fileinfo@dj^0,w,c
  5232  0026C8  26D9               	addwf	fsr2l,f,c
  5233  0026CA  5007               	movf	(get_fileinfo@dj+1)^0,w,c
  5234  0026CC  22DA               	addwfc	fsr2h,f,c
  5235  0026CE  50DE               	movf	postinc2,w,c
  5236  0026D0  10DE               	iorwf	postinc2,w,c
  5237  0026D2  10DE               	iorwf	postinc2,w,c
  5238  0026D4  10DE               	iorwf	postinc2,w,c
  5239  0026D6  B4D8               	btfsc	status,2,c
  5240  0026D8  EF70  F013         	goto	u5841
  5241  0026DC  EF72  F013         	goto	u5840
  5242  0026E0                     u5841:
  5243  0026E0  EF95  F014         	goto	l5161
  5244  0026E4                     u5840:
  5245  0026E4                     
  5246                           ;pff.c: 646:   for (i = 0; i < 8; i++) {
  5247  0026E4  0E00               	movlw	0
  5248  0026E6  6E29               	movwf	get_fileinfo@i^0,c
  5249  0026E8                     l5109:
  5250                           
  5251                           ;pff.c: 647:    c = dir[i];
  5252  0026E8  5029               	movf	get_fileinfo@i^0,w,c
  5253  0026EA  2408               	addwf	get_fileinfo@dir^0,w,c
  5254  0026EC  6ED9               	movwf	fsr2l,c
  5255  0026EE  0E00               	movlw	0
  5256  0026F0  2009               	addwfc	(get_fileinfo@dir+1)^0,w,c
  5257  0026F2  6EDA               	movwf	fsr2h,c
  5258  0026F4  50DF               	movf	indf2,w,c
  5259  0026F6  6E28               	movwf	get_fileinfo@c^0,c
  5260  0026F8                     
  5261                           ;pff.c: 648:    if (c == ' ') break;
  5262  0026F8  0E20               	movlw	32
  5263  0026FA  1828               	xorwf	get_fileinfo@c^0,w,c
  5264  0026FC  A4D8               	btfss	status,2,c
  5265  0026FE  EF83  F013         	goto	u5851
  5266  002702  EF85  F013         	goto	u5850
  5267  002706                     u5851:
  5268  002706  EF87  F013         	goto	l5115
  5269  00270A                     u5850:
  5270  00270A  EFA3  F013         	goto	l5127
  5271  00270E                     l5115:
  5272                           
  5273                           ;pff.c: 649:    if (c == 0x05) c = 0xE5;
  5274  00270E  0E05               	movlw	5
  5275  002710  1828               	xorwf	get_fileinfo@c^0,w,c
  5276  002712  A4D8               	btfss	status,2,c
  5277  002714  EF8E  F013         	goto	u5861
  5278  002718  EF90  F013         	goto	u5860
  5279  00271C                     u5861:
  5280  00271C  EF92  F013         	goto	l5119
  5281  002720                     u5860:
  5282  002720  0EE5               	movlw	229
  5283  002722  6E28               	movwf	get_fileinfo@c^0,c
  5284  002724                     l5119:
  5285                           
  5286                           ;pff.c: 650:    *p++ = c;
  5287  002724  C026  FFD9         	movff	get_fileinfo@p,fsr2l
  5288  002728  C027  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5289  00272C  C028  FFDF         	movff	get_fileinfo@c,indf2
  5290  002730  4A26               	infsnz	get_fileinfo@p^0,f,c
  5291  002732  2A27               	incf	(get_fileinfo@p+1)^0,f,c
  5292  002734                     
  5293                           ;pff.c: 651:   }
  5294  002734  2A29               	incf	get_fileinfo@i^0,f,c
  5295  002736  0E07               	movlw	7
  5296  002738  6429               	cpfsgt	get_fileinfo@i^0,c
  5297  00273A  EFA1  F013         	goto	u5871
  5298  00273E  EFA3  F013         	goto	u5870
  5299  002742                     u5871:
  5300  002742  EF74  F013         	goto	l5109
  5301  002746                     u5870:
  5302  002746                     l5127:
  5303                           
  5304                           ;pff.c: 652:   if (dir[8] != ' ') {
  5305  002746  EE20 F008          	lfsr	2,8
  5306  00274A  5008               	movf	get_fileinfo@dir^0,w,c
  5307  00274C  26D9               	addwf	fsr2l,f,c
  5308  00274E  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5309  002750  22DA               	addwfc	fsr2h,f,c
  5310  002752  0E20               	movlw	32
  5311  002754  18DE               	xorwf	postinc2,w,c
  5312  002756  B4D8               	btfsc	status,2,c
  5313  002758  EFB0  F013         	goto	u5881
  5314  00275C  EFB2  F013         	goto	u5880
  5315  002760                     u5881:
  5316  002760  EFE0  F013         	goto	l5153
  5317  002764                     u5880:
  5318  002764                     
  5319                           ;pff.c: 653:    *p++ = '.';
  5320  002764  C026  FFD9         	movff	get_fileinfo@p,fsr2l
  5321  002768  C027  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5322  00276C  0E2E               	movlw	46
  5323  00276E  6EDF               	movwf	indf2,c
  5324  002770  4A26               	infsnz	get_fileinfo@p^0,f,c
  5325  002772  2A27               	incf	(get_fileinfo@p+1)^0,f,c
  5326  002774                     
  5327                           ;pff.c: 654:    for (i = 8; i < 11; i++) {
  5328  002774  0E08               	movlw	8
  5329  002776  6E29               	movwf	get_fileinfo@i^0,c
  5330  002778                     l5139:
  5331                           
  5332                           ;pff.c: 655:     c = dir[i];
  5333  002778  5029               	movf	get_fileinfo@i^0,w,c
  5334  00277A  2408               	addwf	get_fileinfo@dir^0,w,c
  5335  00277C  6ED9               	movwf	fsr2l,c
  5336  00277E  0E00               	movlw	0
  5337  002780  2009               	addwfc	(get_fileinfo@dir+1)^0,w,c
  5338  002782  6EDA               	movwf	fsr2h,c
  5339  002784  50DF               	movf	indf2,w,c
  5340  002786  6E28               	movwf	get_fileinfo@c^0,c
  5341  002788                     
  5342                           ;pff.c: 656:     if (c == ' ') break;
  5343  002788  0E20               	movlw	32
  5344  00278A  1828               	xorwf	get_fileinfo@c^0,w,c
  5345  00278C  A4D8               	btfss	status,2,c
  5346  00278E  EFCB  F013         	goto	u5891
  5347  002792  EFCD  F013         	goto	u5890
  5348  002796                     u5891:
  5349  002796  EFCF  F013         	goto	l5145
  5350  00279A                     u5890:
  5351  00279A  EFE0  F013         	goto	l5153
  5352  00279E                     l5145:
  5353                           
  5354                           ;pff.c: 657:     *p++ = c;
  5355  00279E  C026  FFD9         	movff	get_fileinfo@p,fsr2l
  5356  0027A2  C027  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5357  0027A6  C028  FFDF         	movff	get_fileinfo@c,indf2
  5358  0027AA  4A26               	infsnz	get_fileinfo@p^0,f,c
  5359  0027AC  2A27               	incf	(get_fileinfo@p+1)^0,f,c
  5360  0027AE                     
  5361                           ;pff.c: 658:    }
  5362  0027AE  2A29               	incf	get_fileinfo@i^0,f,c
  5363  0027B0  0E0A               	movlw	10
  5364  0027B2  6429               	cpfsgt	get_fileinfo@i^0,c
  5365  0027B4  EFDE  F013         	goto	u5901
  5366  0027B8  EFE0  F013         	goto	u5900
  5367  0027BC                     u5901:
  5368  0027BC  EFBC  F013         	goto	l5139
  5369  0027C0                     u5900:
  5370  0027C0                     l5153:
  5371                           
  5372                           ;pff.c: 660:   fno->fattrib = dir[11];
  5373  0027C0  EE20 F00B          	lfsr	2,11
  5374  0027C4  5008               	movf	get_fileinfo@dir^0,w,c
  5375  0027C6  26D9               	addwf	fsr2l,f,c
  5376  0027C8  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5377  0027CA  22DA               	addwfc	fsr2h,f,c
  5378  0027CC  EE10 F008          	lfsr	1,8
  5379  0027D0  500A               	movf	get_fileinfo@fno^0,w,c
  5380  0027D2  26E1               	addwf	fsr1l,f,c
  5381  0027D4  500B               	movf	(get_fileinfo@fno+1)^0,w,c
  5382  0027D6  22E2               	addwfc	fsr1h,f,c
  5383  0027D8  CFDF FFE7          	movff	indf2,indf1
  5384  0027DC                     
  5385                           ;pff.c: 661:   fno->fsize = (DWORD)(((DWORD)*((BYTE*)(dir+28)+3)<<24)|((DWORD)*((BYTE*)(
      +                          dir+28)+2)<<16)|((WORD)*((BYTE*)(dir+28)+1)<<8)|*(BYTE*)(dir+28));
  5386  0027DC  EE20 F01D          	lfsr	2,29
  5387  0027E0  5008               	movf	get_fileinfo@dir^0,w,c
  5388  0027E2  26D9               	addwf	fsr2l,f,c
  5389  0027E4  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5390  0027E6  22DA               	addwfc	fsr2h,f,c
  5391  0027E8  50DF               	movf	indf2,w,c
  5392  0027EA  6E0C               	movwf	??_get_fileinfo^0,c
  5393  0027EC  500C               	movf	??_get_fileinfo^0,w,c
  5394  0027EE  6E0E               	movwf	(??_get_fileinfo+2)^0,c
  5395  0027F0  6A0D               	clrf	(??_get_fileinfo+1)^0,c
  5396  0027F2  EE20 F01E          	lfsr	2,30
  5397  0027F6  5008               	movf	get_fileinfo@dir^0,w,c
  5398  0027F8  26D9               	addwf	fsr2l,f,c
  5399  0027FA  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5400  0027FC  22DA               	addwfc	fsr2h,f,c
  5401  0027FE  50DF               	movf	indf2,w,c
  5402  002800  6E0F               	movwf	(??_get_fileinfo+3)^0,c
  5403  002802  C00F  F010         	movff	??_get_fileinfo+3,??_get_fileinfo+4
  5404  002806  6A11               	clrf	(??_get_fileinfo+5)^0,c
  5405  002808  6A12               	clrf	(??_get_fileinfo+6)^0,c
  5406  00280A  6A13               	clrf	(??_get_fileinfo+7)^0,c
  5407  00280C  C011  F013         	movff	??_get_fileinfo+5,??_get_fileinfo+7
  5408  002810  C010  F012         	movff	??_get_fileinfo+4,??_get_fileinfo+6
  5409  002814  6A11               	clrf	(??_get_fileinfo+5)^0,c
  5410  002816  6A10               	clrf	(??_get_fileinfo+4)^0,c
  5411  002818  EE20 F01F          	lfsr	2,31
  5412  00281C  5008               	movf	get_fileinfo@dir^0,w,c
  5413  00281E  26D9               	addwf	fsr2l,f,c
  5414  002820  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5415  002822  22DA               	addwfc	fsr2h,f,c
  5416  002824  50DF               	movf	indf2,w,c
  5417  002826  6E14               	movwf	(??_get_fileinfo+8)^0,c
  5418  002828  C014  F015         	movff	??_get_fileinfo+8,??_get_fileinfo+9
  5419  00282C  6A16               	clrf	(??_get_fileinfo+10)^0,c
  5420  00282E  6A17               	clrf	(??_get_fileinfo+11)^0,c
  5421  002830  6A18               	clrf	(??_get_fileinfo+12)^0,c
  5422  002832  C015  F018         	movff	??_get_fileinfo+9,??_get_fileinfo+12
  5423  002836  6A17               	clrf	(??_get_fileinfo+11)^0,c
  5424  002838  6A16               	clrf	(??_get_fileinfo+10)^0,c
  5425  00283A  6A15               	clrf	(??_get_fileinfo+9)^0,c
  5426  00283C  5010               	movf	(??_get_fileinfo+4)^0,w,c
  5427  00283E  1015               	iorwf	(??_get_fileinfo+9)^0,w,c
  5428  002840  6E19               	movwf	(??_get_fileinfo+13)^0,c
  5429  002842  5011               	movf	(??_get_fileinfo+5)^0,w,c
  5430  002844  1016               	iorwf	(??_get_fileinfo+10)^0,w,c
  5431  002846  6E1A               	movwf	(??_get_fileinfo+14)^0,c
  5432  002848  5012               	movf	(??_get_fileinfo+6)^0,w,c
  5433  00284A  1017               	iorwf	(??_get_fileinfo+11)^0,w,c
  5434  00284C  6E1B               	movwf	(??_get_fileinfo+15)^0,c
  5435  00284E  5013               	movf	(??_get_fileinfo+7)^0,w,c
  5436  002850  1018               	iorwf	(??_get_fileinfo+12)^0,w,c
  5437  002852  6E1C               	movwf	(??_get_fileinfo+16)^0,c
  5438  002854  500D               	movf	(??_get_fileinfo+1)^0,w,c
  5439  002856  1019               	iorwf	(??_get_fileinfo+13)^0,w,c
  5440  002858  6E1D               	movwf	(??_get_fileinfo+17)^0,c
  5441  00285A  500E               	movf	(??_get_fileinfo+2)^0,w,c
  5442  00285C  101A               	iorwf	(??_get_fileinfo+14)^0,w,c
  5443  00285E  6E1E               	movwf	(??_get_fileinfo+18)^0,c
  5444  002860  0E00               	movlw	0
  5445  002862  101B               	iorwf	(??_get_fileinfo+15)^0,w,c
  5446  002864  6E1F               	movwf	(??_get_fileinfo+19)^0,c
  5447  002866  0E00               	movlw	0
  5448  002868  101C               	iorwf	(??_get_fileinfo+16)^0,w,c
  5449  00286A  6E20               	movwf	(??_get_fileinfo+20)^0,c
  5450  00286C  EE20 F01C          	lfsr	2,28
  5451  002870  5008               	movf	get_fileinfo@dir^0,w,c
  5452  002872  26D9               	addwf	fsr2l,f,c
  5453  002874  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5454  002876  22DA               	addwfc	fsr2h,f,c
  5455  002878  50DF               	movf	indf2,w,c
  5456  00287A  6E21               	movwf	(??_get_fileinfo+21)^0,c
  5457  00287C  5021               	movf	(??_get_fileinfo+21)^0,w,c
  5458  00287E  101D               	iorwf	(??_get_fileinfo+17)^0,w,c
  5459  002880  6E22               	movwf	(??_get_fileinfo+22)^0,c
  5460  002882  501E               	movf	(??_get_fileinfo+18)^0,w,c
  5461  002884  6E23               	movwf	(??_get_fileinfo+23)^0,c
  5462  002886  501F               	movf	(??_get_fileinfo+19)^0,w,c
  5463  002888  6E24               	movwf	(??_get_fileinfo+24)^0,c
  5464  00288A  5020               	movf	(??_get_fileinfo+20)^0,w,c
  5465  00288C  6E25               	movwf	(??_get_fileinfo+25)^0,c
  5466  00288E  C00A  FFD9         	movff	get_fileinfo@fno,fsr2l
  5467  002892  C00B  FFDA         	movff	get_fileinfo@fno+1,fsr2h
  5468  002896  C022  FFDE         	movff	??_get_fileinfo+22,postinc2
  5469  00289A  C023  FFDE         	movff	??_get_fileinfo+23,postinc2
  5470  00289E  C024  FFDE         	movff	??_get_fileinfo+24,postinc2
  5471  0028A2  C025  FFDE         	movff	??_get_fileinfo+25,postinc2
  5472  0028A6                     
  5473                           ;pff.c: 662:   fno->fdate = (WORD)(((WORD)*((BYTE*)(dir+24)+1)<<8)|(WORD)*(BYTE*)(dir+24
      +                          ));
  5474  0028A6  EE20 F019          	lfsr	2,25
  5475  0028AA  5008               	movf	get_fileinfo@dir^0,w,c
  5476  0028AC  26D9               	addwf	fsr2l,f,c
  5477  0028AE  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5478  0028B0  22DA               	addwfc	fsr2h,f,c
  5479  0028B2  50DF               	movf	indf2,w,c
  5480  0028B4  6E0C               	movwf	??_get_fileinfo^0,c
  5481  0028B6  500C               	movf	??_get_fileinfo^0,w,c
  5482  0028B8  6E0E               	movwf	(??_get_fileinfo+2)^0,c
  5483  0028BA  6A0D               	clrf	(??_get_fileinfo+1)^0,c
  5484  0028BC  EE20 F018          	lfsr	2,24
  5485  0028C0  5008               	movf	get_fileinfo@dir^0,w,c
  5486  0028C2  26D9               	addwf	fsr2l,f,c
  5487  0028C4  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5488  0028C6  22DA               	addwfc	fsr2h,f,c
  5489  0028C8  50DF               	movf	indf2,w,c
  5490  0028CA  6E0F               	movwf	(??_get_fileinfo+3)^0,c
  5491  0028CC  500F               	movf	(??_get_fileinfo+3)^0,w,c
  5492  0028CE  120D               	iorwf	(??_get_fileinfo+1)^0,f,c
  5493  0028D0  0E00               	movlw	0
  5494  0028D2  120E               	iorwf	(??_get_fileinfo+2)^0,f,c
  5495  0028D4  EE20 F004          	lfsr	2,4
  5496  0028D8  500A               	movf	get_fileinfo@fno^0,w,c
  5497  0028DA  26D9               	addwf	fsr2l,f,c
  5498  0028DC  500B               	movf	(get_fileinfo@fno+1)^0,w,c
  5499  0028DE  22DA               	addwfc	fsr2h,f,c
  5500  0028E0  C00D  FFDE         	movff	??_get_fileinfo+1,postinc2
  5501  0028E4  C00E  FFDD         	movff	??_get_fileinfo+2,postdec2
  5502  0028E8                     
  5503                           ;pff.c: 663:   fno->ftime = (WORD)(((WORD)*((BYTE*)(dir+22)+1)<<8)|(WORD)*(BYTE*)(dir+22
      +                          ));
  5504  0028E8  EE20 F017          	lfsr	2,23
  5505  0028EC  5008               	movf	get_fileinfo@dir^0,w,c
  5506  0028EE  26D9               	addwf	fsr2l,f,c
  5507  0028F0  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5508  0028F2  22DA               	addwfc	fsr2h,f,c
  5509  0028F4  50DF               	movf	indf2,w,c
  5510  0028F6  6E0C               	movwf	??_get_fileinfo^0,c
  5511  0028F8  500C               	movf	??_get_fileinfo^0,w,c
  5512  0028FA  6E0E               	movwf	(??_get_fileinfo+2)^0,c
  5513  0028FC  6A0D               	clrf	(??_get_fileinfo+1)^0,c
  5514  0028FE  EE20 F016          	lfsr	2,22
  5515  002902  5008               	movf	get_fileinfo@dir^0,w,c
  5516  002904  26D9               	addwf	fsr2l,f,c
  5517  002906  5009               	movf	(get_fileinfo@dir+1)^0,w,c
  5518  002908  22DA               	addwfc	fsr2h,f,c
  5519  00290A  50DF               	movf	indf2,w,c
  5520  00290C  6E0F               	movwf	(??_get_fileinfo+3)^0,c
  5521  00290E  500F               	movf	(??_get_fileinfo+3)^0,w,c
  5522  002910  120D               	iorwf	(??_get_fileinfo+1)^0,f,c
  5523  002912  0E00               	movlw	0
  5524  002914  120E               	iorwf	(??_get_fileinfo+2)^0,f,c
  5525  002916  EE20 F006          	lfsr	2,6
  5526  00291A  500A               	movf	get_fileinfo@fno^0,w,c
  5527  00291C  26D9               	addwf	fsr2l,f,c
  5528  00291E  500B               	movf	(get_fileinfo@fno+1)^0,w,c
  5529  002920  22DA               	addwfc	fsr2h,f,c
  5530  002922  C00D  FFDE         	movff	??_get_fileinfo+1,postinc2
  5531  002926  C00E  FFDD         	movff	??_get_fileinfo+2,postdec2
  5532  00292A                     l5161:
  5533                           
  5534                           ;pff.c: 665:  *p = 0;
  5535  00292A  C026  FFD9         	movff	get_fileinfo@p,fsr2l
  5536  00292E  C027  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5537  002932  0E00               	movlw	0
  5538  002934  6EDF               	movwf	indf2,c
  5539  002936  0012               	return		;funcret
  5540  002938                     __end_of_get_fileinfo:
  5541                           	callstack 0
  5542                           
  5543 ;; *************** function _dir_read *****************
  5544 ;; Defined at:
  5545 ;;		line 540 in file "pff.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;  dj              2   81[BANK0 ] PTR struct .
  5548 ;;		 -> main@dir(16), 
  5549 ;;  dir             2   83[BANK0 ] PTR unsigned char 
  5550 ;;		 -> pf_readdir@dir(32), 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  res             1   91[BANK0 ] enum E2600
  5553 ;;  c               1   90[BANK0 ] unsigned char 
  5554 ;;  a               1   89[BANK0 ] unsigned char 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  1    wreg      enum E2600
  5557 ;; Registers used:
  5558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5564 ;;      Params:         0       4       0       0       0       0       0
  5565 ;;      Locals:         0       3       0       0       0       0       0
  5566 ;;      Temps:          0       4       0       0       0       0       0
  5567 ;;      Totals:         0      11       0       0       0       0       0
  5568 ;;Total ram usage:       11 bytes
  5569 ;; Hardware stack levels used: 1
  5570 ;; Hardware stack levels required when called: 12
  5571 ;; This function calls:
  5572 ;;		_dir_next
  5573 ;;		_disk_readp
  5574 ;; This function is called by:
  5575 ;;		_pf_readdir
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text14
  5580  003E5C                     __ptext14:
  5581                           	callstack 0
  5582  003E5C                     _dir_read:
  5583                           	callstack 17
  5584  003E5C                     
  5585                           ;pff.c: 541:  DIR *dj,;pff.c: 542:  BYTE *dir;pff.c: 544: {;pff.c: 545:  FRESULT res;;pf
      +                          f.c: 546:  BYTE a, c;;pff.c: 549:  res = FR_NO_FILE;
  5586  003E5C  0E03               	movlw	3
  5587  003E5E  0100               	movlb	0	; () banked
  5588  003E60  6FDB               	movwf	dir_read@res& (0+255),b
  5589                           
  5590                           ;pff.c: 550:  while (dj->sect) {
  5591  003E62  EFC0  F01F         	goto	l7111
  5592  003E66                     l7083:
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;pff.c: 551:   res = disk_readp(dir, dj->sect, (dj->index % 16) * 32, 32)
  5596  003E66  C0D3  F090         	movff	dir_read@dir,disk_readp@buff
  5597  003E6A  C0D4  F091         	movff	dir_read@dir+1,disk_readp@buff+1
  5598  003E6E  EE20 F00C          	lfsr	2,12
  5599  003E72  51D1               	movf	dir_read@dj& (0+255),w,b
  5600  003E74  26D9               	addwf	fsr2l,f,c
  5601  003E76  51D2               	movf	(dir_read@dj+1)& (0+255),w,b
  5602  003E78  22DA               	addwfc	fsr2h,f,c
  5603  003E7A  CFDE F092          	movff	postinc2,disk_readp@sector
  5604  003E7E  CFDE F093          	movff	postinc2,disk_readp@sector+1
  5605  003E82  CFDE F094          	movff	postinc2,disk_readp@sector+2
  5606  003E86  CFDE F095          	movff	postinc2,disk_readp@sector+3
  5607  003E8A  C0D1  FFD9         	movff	dir_read@dj,fsr2l
  5608  003E8E  C0D2  FFDA         	movff	dir_read@dj+1,fsr2h
  5609  003E92  CFDE F0D5          	movff	postinc2,??_dir_read
  5610  003E96  CFDD F0D6          	movff	postdec2,??_dir_read+1
  5611  003E9A  0E0F               	movlw	15
  5612  003E9C  17D5               	andwf	??_dir_read& (0+255),f,b
  5613  003E9E  0E00               	movlw	0
  5614  003EA0  17D6               	andwf	(??_dir_read+1)& (0+255),f,b
  5615  003EA2  0E05               	movlw	5
  5616  003EA4                     u8855:
  5617  003EA4  90D8               	bcf	status,0,c
  5618  003EA6  37D5               	rlcf	??_dir_read& (0+255),f,b
  5619  003EA8  37D6               	rlcf	(??_dir_read+1)& (0+255),f,b
  5620  003EAA  2EE8               	decfsz	wreg,f,c
  5621  003EAC  EF52  F01F         	goto	u8855
  5622  003EB0  C0D5  F096         	movff	??_dir_read,disk_readp@offset
  5623  003EB4  C0D6  F097         	movff	??_dir_read+1,disk_readp@offset+1
  5624  003EB8  0E00               	movlw	0
  5625  003EBA  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  5626  003EBC  0E20               	movlw	32
  5627  003EBE  6F98               	movwf	disk_readp@count& (0+255),b
  5628  003EC0  EC64  F01B         	call	_disk_readp	;wreg free
  5629  003EC4  0900               	iorlw	0
  5630  003EC6  A4D8               	btfss	status,2,c
  5631  003EC8  EF68  F01F         	goto	u8861
  5632  003ECC  EF6B  F01F         	goto	u8860
  5633  003ED0                     u8861:
  5634  003ED0  0E01               	movlw	1
  5635  003ED2  EF6C  F01F         	goto	u8870
  5636  003ED6                     u8860:
  5637  003ED6  0E00               	movlw	0
  5638  003ED8                     u8870:
  5639  003ED8  0100               	movlb	0	; () banked
  5640  003EDA  6FDB               	movwf	dir_read@res& (0+255),b
  5641  003EDC                     
  5642                           ; BSR set to: 0
  5643                           ;pff.c: 553:   if (res != FR_OK) break;
  5644  003EDC  51DB               	movf	dir_read@res& (0+255),w,b
  5645  003EDE  B4D8               	btfsc	status,2,c
  5646  003EE0  EF74  F01F         	goto	u8881
  5647  003EE4  EF76  F01F         	goto	u8880
  5648  003EE8                     u8881:
  5649  003EE8  EF78  F01F         	goto	l7089
  5650  003EEC                     u8880:
  5651  003EEC  EFD1  F01F         	goto	l7113
  5652  003EF0                     l7089:
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;pff.c: 554:   c = dir[0];
  5656  003EF0  C0D3  FFD9         	movff	dir_read@dir,fsr2l
  5657  003EF4  C0D4  FFDA         	movff	dir_read@dir+1,fsr2h
  5658  003EF8  50DF               	movf	indf2,w,c
  5659  003EFA  6FDA               	movwf	dir_read@c& (0+255),b
  5660  003EFC                     
  5661                           ; BSR set to: 0
  5662                           ;pff.c: 555:   if (c == 0) { res = FR_NO_FILE; break; }
  5663  003EFC  51DA               	movf	dir_read@c& (0+255),w,b
  5664  003EFE  A4D8               	btfss	status,2,c
  5665  003F00  EF84  F01F         	goto	u8891
  5666  003F04  EF86  F01F         	goto	u8890
  5667  003F08                     u8891:
  5668  003F08  EF8A  F01F         	goto	l7095
  5669  003F0C                     u8890:
  5670  003F0C                     
  5671                           ; BSR set to: 0
  5672  003F0C  0E03               	movlw	3
  5673  003F0E  6FDB               	movwf	dir_read@res& (0+255),b
  5674  003F10  EFD1  F01F         	goto	l7113
  5675  003F14                     l7095:
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;pff.c: 556:   a = dir[11] & 0x3F;
  5679  003F14  EE20 F00B          	lfsr	2,11
  5680  003F18  51D3               	movf	dir_read@dir& (0+255),w,b
  5681  003F1A  26D9               	addwf	fsr2l,f,c
  5682  003F1C  51D4               	movf	(dir_read@dir+1)& (0+255),w,b
  5683  003F1E  22DA               	addwfc	fsr2h,f,c
  5684  003F20  50DF               	movf	indf2,w,c
  5685  003F22  0B3F               	andlw	63
  5686  003F24  6FD9               	movwf	dir_read@a& (0+255),b
  5687  003F26                     
  5688                           ; BSR set to: 0
  5689                           ;pff.c: 557:   if (c != 0xE5 && c != '.' && !(a & 0x08))
  5690  003F26  0EE5               	movlw	229
  5691  003F28  19DA               	xorwf	dir_read@c& (0+255),w,b
  5692  003F2A  B4D8               	btfsc	status,2,c
  5693  003F2C  EF9A  F01F         	goto	u8901
  5694  003F30  EF9C  F01F         	goto	u8900
  5695  003F34                     u8901:
  5696  003F34  EFAE  F01F         	goto	l7105
  5697  003F38                     u8900:
  5698  003F38                     
  5699                           ; BSR set to: 0
  5700  003F38  0E2E               	movlw	46
  5701  003F3A  19DA               	xorwf	dir_read@c& (0+255),w,b
  5702  003F3C  B4D8               	btfsc	status,2,c
  5703  003F3E  EFA3  F01F         	goto	u8911
  5704  003F42  EFA5  F01F         	goto	u8910
  5705  003F46                     u8911:
  5706  003F46  EFAE  F01F         	goto	l7105
  5707  003F4A                     u8910:
  5708  003F4A                     
  5709                           ; BSR set to: 0
  5710  003F4A  B7D9               	btfsc	dir_read@a& (0+255),3,b
  5711  003F4C  EFAA  F01F         	goto	u8921
  5712  003F50  EFAC  F01F         	goto	u8920
  5713  003F54                     u8921:
  5714  003F54  EFAE  F01F         	goto	l7105
  5715  003F58                     u8920:
  5716  003F58  EFD1  F01F         	goto	l7113
  5717  003F5C                     l7105:
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;pff.c: 559:   res = dir_next(dj);
  5721  003F5C  C0D1  F0C0         	movff	dir_read@dj,dir_next@dj
  5722  003F60  C0D2  F0C1         	movff	dir_read@dj+1,dir_next@dj+1
  5723  003F64  ECDC  F015         	call	_dir_next	;wreg free
  5724  003F68  0100               	movlb	0	; () banked
  5725  003F6A  6FDB               	movwf	dir_read@res& (0+255),b
  5726  003F6C                     
  5727                           ; BSR set to: 0
  5728                           ;pff.c: 560:   if (res != FR_OK) break;
  5729  003F6C  51DB               	movf	dir_read@res& (0+255),w,b
  5730  003F6E  B4D8               	btfsc	status,2,c
  5731  003F70  EFBC  F01F         	goto	u8931
  5732  003F74  EFBE  F01F         	goto	u8930
  5733  003F78                     u8931:
  5734  003F78  EFC0  F01F         	goto	l7111
  5735  003F7C                     u8930:
  5736  003F7C  EFD1  F01F         	goto	l7113
  5737  003F80                     l7111:
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;pff.c: 550:  while (dj->sect) {
  5741  003F80  EE20 F00C          	lfsr	2,12
  5742  003F84  51D1               	movf	dir_read@dj& (0+255),w,b
  5743  003F86  26D9               	addwf	fsr2l,f,c
  5744  003F88  51D2               	movf	(dir_read@dj+1)& (0+255),w,b
  5745  003F8A  22DA               	addwfc	fsr2h,f,c
  5746  003F8C  50DE               	movf	postinc2,w,c
  5747  003F8E  10DE               	iorwf	postinc2,w,c
  5748  003F90  10DE               	iorwf	postinc2,w,c
  5749  003F92  10DE               	iorwf	postinc2,w,c
  5750  003F94  A4D8               	btfss	status,2,c
  5751  003F96  EFCF  F01F         	goto	u8941
  5752  003F9A  EFD1  F01F         	goto	u8940
  5753  003F9E                     u8941:
  5754  003F9E  EF33  F01F         	goto	l7083
  5755  003FA2                     u8940:
  5756  003FA2                     l7113:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;pff.c: 563:  if (res != FR_OK) dj->sect = 0;
  5760  003FA2  51DB               	movf	dir_read@res& (0+255),w,b
  5761  003FA4  B4D8               	btfsc	status,2,c
  5762  003FA6  EFD7  F01F         	goto	u8951
  5763  003FAA  EFD9  F01F         	goto	u8950
  5764  003FAE                     u8951:
  5765  003FAE  EFE3  F01F         	goto	l7117
  5766  003FB2                     u8950:
  5767  003FB2                     
  5768                           ; BSR set to: 0
  5769  003FB2  EE20 F00C          	lfsr	2,12
  5770  003FB6  51D1               	movf	dir_read@dj& (0+255),w,b
  5771  003FB8  26D9               	addwf	fsr2l,f,c
  5772  003FBA  51D2               	movf	(dir_read@dj+1)& (0+255),w,b
  5773  003FBC  22DA               	addwfc	fsr2h,f,c
  5774  003FBE  6ADE               	clrf	postinc2,c
  5775  003FC0  6ADE               	clrf	postinc2,c
  5776  003FC2  6ADE               	clrf	postinc2,c
  5777  003FC4  6ADD               	clrf	postdec2,c
  5778  003FC6                     l7117:
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;pff.c: 565:  return res;
  5782  003FC6  51DB               	movf	dir_read@res& (0+255),w,b
  5783  003FC8                     
  5784                           ; BSR set to: 0
  5785  003FC8  0012               	return		;funcret
  5786  003FCA                     __end_of_dir_read:
  5787                           	callstack 0
  5788                           
  5789 ;; *************** function _pf_read *****************
  5790 ;; Defined at:
  5791 ;;		line 863 in file "pff.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  buff            2   64[BANK0 ] PTR void 
  5794 ;;		 -> NULL(0), Line(128), 
  5795 ;;  btr             2   66[BANK0 ] unsigned int 
  5796 ;;  br              2   68[BANK0 ] PTR unsigned int 
  5797 ;;		 -> main@s1(2), 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  clst            4   91[BANK0 ] unsigned long 
  5800 ;;  remain          4   87[BANK0 ] unsigned long 
  5801 ;;  sect            4   83[BANK0 ] unsigned long 
  5802 ;;  fs              2   98[BANK0 ] PTR struct .
  5803 ;;		 -> NULL(0), main@fs(42), 
  5804 ;;  rcnt            2   96[BANK0 ] unsigned int 
  5805 ;;  rbuff           2   79[BANK0 ] PTR unsigned char 
  5806 ;;		 -> NULL(0), Line(128), 
  5807 ;;  cs              1   95[BANK0 ] unsigned char 
  5808 ;;  dr              1   78[BANK0 ] enum E2630
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      enum E3114
  5811 ;; Registers used:
  5812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5818 ;;      Params:         0       6       0       0       0       0       0
  5819 ;;      Locals:         0      22       0       0       0       0       0
  5820 ;;      Temps:          0       8       0       0       0       0       0
  5821 ;;      Totals:         0      36       0       0       0       0       0
  5822 ;;Total ram usage:       36 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; Hardware stack levels required when called: 11
  5825 ;; This function calls:
  5826 ;;		_clust2sect
  5827 ;;		_disk_readp
  5828 ;;		_get_fat
  5829 ;; This function is called by:
  5830 ;;		_main
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text15
  5835  001A58                     __ptext15:
  5836                           	callstack 0
  5837  001A58                     _pf_read:
  5838                           	callstack 19
  5839  001A58                     
  5840                           ;pff.c: 864:  void* buff,;pff.c: 865:  UINT btr,;pff.c: 866:  UINT* br;pff.c: 868: {;pff
      +                          .c: 869:  DRESULT dr;;pff.c: 870:  DWORD clst;;pff.c: 871:  DWORD sect, remain;;pff.c: 8
      +                          72:  UINT rcnt;;pff.c: 873:  BYTE cs, *rbuff = buff;
  5841  001A58  C0C0  F0CF         	movff	pf_read@buff,pf_read@rbuff
  5842  001A5C  C0C1  F0D0         	movff	pf_read@buff+1,pf_read@rbuff+1
  5843                           
  5844                           ;pff.c: 874:  FATFS *fs = FatFs;
  5845  001A60  C0FD  F0E2         	movff	_FatFs,pf_read@fs
  5846  001A64  C0FE  F0E3         	movff	_FatFs+1,pf_read@fs+1
  5847  001A68                     
  5848                           ;pff.c: 876:  *br = 0;
  5849  001A68  C0C4  FFD9         	movff	pf_read@br,fsr2l
  5850  001A6C  C0C5  FFDA         	movff	pf_read@br+1,fsr2h
  5851  001A70  0E00               	movlw	0
  5852  001A72  6EDE               	movwf	postinc2,c
  5853  001A74  0E00               	movlw	0
  5854  001A76  6EDD               	movwf	postdec2,c
  5855  001A78                     
  5856                           ;pff.c: 877:  if (!fs) return FR_NOT_ENABLED;
  5857  001A78  0100               	movlb	0	; () banked
  5858  001A7A  51E2               	movf	pf_read@fs& (0+255),w,b
  5859  001A7C  11E3               	iorwf	(pf_read@fs+1)& (0+255),w,b
  5860  001A7E  A4D8               	btfss	status,2,c
  5861  001A80  EF44  F00D         	goto	u9391
  5862  001A84  EF46  F00D         	goto	u9390
  5863  001A88                     u9391:
  5864  001A88  EF49  F00D         	goto	l7459
  5865  001A8C                     u9390:
  5866  001A8C                     
  5867                           ; BSR set to: 0
  5868  001A8C  0E05               	movlw	5
  5869  001A8E  EF2C  F00F         	goto	l342
  5870  001A92                     l7459:
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;pff.c: 878:  if (!(fs->flag & 0x01))
  5874  001A92  EE20 F001          	lfsr	2,1
  5875  001A96  51E2               	movf	pf_read@fs& (0+255),w,b
  5876  001A98  26D9               	addwf	fsr2l,f,c
  5877  001A9A  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  5878  001A9C  22DA               	addwfc	fsr2h,f,c
  5879  001A9E  B0DF               	btfsc	indf2,0,c
  5880  001AA0  EF54  F00D         	goto	u9401
  5881  001AA4  EF56  F00D         	goto	u9400
  5882  001AA8                     u9401:
  5883  001AA8  EF59  F00D         	goto	l7465
  5884  001AAC                     u9400:
  5885  001AAC                     
  5886                           ; BSR set to: 0
  5887                           ;pff.c: 879:   return FR_NOT_OPENED;
  5888  001AAC  0E04               	movlw	4
  5889  001AAE  EF2C  F00F         	goto	l342
  5890  001AB2                     l7465:
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;pff.c: 881:  remain = fs->fsize - fs->fptr;
  5894  001AB2  EE20 F016          	lfsr	2,22
  5895  001AB6  51E2               	movf	pf_read@fs& (0+255),w,b
  5896  001AB8  26D9               	addwf	fsr2l,f,c
  5897  001ABA  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  5898  001ABC  22DA               	addwfc	fsr2h,f,c
  5899  001ABE  CFDE F0C6          	movff	postinc2,??_pf_read
  5900  001AC2  CFDE F0C7          	movff	postinc2,??_pf_read+1
  5901  001AC6  CFDE F0C8          	movff	postinc2,??_pf_read+2
  5902  001ACA  CFDE F0C9          	movff	postinc2,??_pf_read+3
  5903  001ACE  EE20 F01A          	lfsr	2,26
  5904  001AD2  51E2               	movf	pf_read@fs& (0+255),w,b
  5905  001AD4  26D9               	addwf	fsr2l,f,c
  5906  001AD6  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  5907  001AD8  22DA               	addwfc	fsr2h,f,c
  5908  001ADA  CFDE F0CA          	movff	postinc2,??_pf_read+4
  5909  001ADE  CFDE F0CB          	movff	postinc2,??_pf_read+5
  5910  001AE2  CFDE F0CC          	movff	postinc2,??_pf_read+6
  5911  001AE6  CFDE F0CD          	movff	postinc2,??_pf_read+7
  5912  001AEA  51C6               	movf	??_pf_read& (0+255),w,b
  5913  001AEC  5DCA               	subwf	(??_pf_read+4)& (0+255),w,b
  5914  001AEE  6FD7               	movwf	pf_read@remain& (0+255),b
  5915  001AF0  51C7               	movf	(??_pf_read+1)& (0+255),w,b
  5916  001AF2  59CB               	subwfb	(??_pf_read+5)& (0+255),w,b
  5917  001AF4  6FD8               	movwf	(pf_read@remain+1)& (0+255),b
  5918  001AF6  51C8               	movf	(??_pf_read+2)& (0+255),w,b
  5919  001AF8  59CC               	subwfb	(??_pf_read+6)& (0+255),w,b
  5920  001AFA  6FD9               	movwf	(pf_read@remain+2)& (0+255),b
  5921  001AFC  51C9               	movf	(??_pf_read+3)& (0+255),w,b
  5922  001AFE  59CD               	subwfb	(??_pf_read+7)& (0+255),w,b
  5923  001B00  6FDA               	movwf	(pf_read@remain+3)& (0+255),b
  5924  001B02                     
  5925                           ; BSR set to: 0
  5926                           ;pff.c: 882:  if (btr > remain) btr = (UINT)remain;
  5927  001B02  51C2               	movf	pf_read@btr& (0+255),w,b
  5928  001B04  6FC6               	movwf	??_pf_read& (0+255),b
  5929  001B06  51C3               	movf	(pf_read@btr+1)& (0+255),w,b
  5930  001B08  6FC7               	movwf	(??_pf_read+1)& (0+255),b
  5931  001B0A  6BC8               	clrf	(??_pf_read+2)& (0+255),b
  5932  001B0C  6BC9               	clrf	(??_pf_read+3)& (0+255),b
  5933  001B0E  51C6               	movf	??_pf_read& (0+255),w,b
  5934  001B10  5DD7               	subwf	pf_read@remain& (0+255),w,b
  5935  001B12  51C7               	movf	(??_pf_read+1)& (0+255),w,b
  5936  001B14  59D8               	subwfb	(pf_read@remain+1)& (0+255),w,b
  5937  001B16  51C8               	movf	(??_pf_read+2)& (0+255),w,b
  5938  001B18  59D9               	subwfb	(pf_read@remain+2)& (0+255),w,b
  5939  001B1A  51C9               	movf	(??_pf_read+3)& (0+255),w,b
  5940  001B1C  59DA               	subwfb	(pf_read@remain+3)& (0+255),w,b
  5941  001B1E  B0D8               	btfsc	status,0,c
  5942  001B20  EF94  F00D         	goto	u9411
  5943  001B24  EF96  F00D         	goto	u9410
  5944  001B28                     u9411:
  5945  001B28  EF22  F00F         	goto	l7533
  5946  001B2C                     u9410:
  5947  001B2C                     
  5948                           ; BSR set to: 0
  5949  001B2C  C0D7  F0C2         	movff	pf_read@remain,pf_read@btr
  5950  001B30  C0D8  F0C3         	movff	pf_read@remain+1,pf_read@btr+1
  5951  001B34  EF22  F00F         	goto	l7533
  5952  001B38                     l7471:
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;pff.c: 885:   if ((fs->fptr % 512) == 0) {
  5956  001B38  EE20 F016          	lfsr	2,22
  5957  001B3C  51E2               	movf	pf_read@fs& (0+255),w,b
  5958  001B3E  26D9               	addwf	fsr2l,f,c
  5959  001B40  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  5960  001B42  22DA               	addwfc	fsr2h,f,c
  5961  001B44  0EFF               	movlw	255
  5962  001B46  14DE               	andwf	postinc2,w,c
  5963  001B48  6FC6               	movwf	??_pf_read& (0+255),b
  5964  001B4A  0E01               	movlw	1
  5965  001B4C  14DE               	andwf	postinc2,w,c
  5966  001B4E  6FC7               	movwf	(??_pf_read+1)& (0+255),b
  5967  001B50  0E00               	movlw	0
  5968  001B52  14DE               	andwf	postinc2,w,c
  5969  001B54  6FC8               	movwf	(??_pf_read+2)& (0+255),b
  5970  001B56  0E00               	movlw	0
  5971  001B58  14DE               	andwf	postinc2,w,c
  5972  001B5A  6FC9               	movwf	(??_pf_read+3)& (0+255),b
  5973  001B5C  51C6               	movf	??_pf_read& (0+255),w,b
  5974  001B5E  11C7               	iorwf	(??_pf_read+1)& (0+255),w,b
  5975  001B60  11C8               	iorwf	(??_pf_read+2)& (0+255),w,b
  5976  001B62  11C9               	iorwf	(??_pf_read+3)& (0+255),w,b
  5977  001B64  A4D8               	btfss	status,2,c
  5978  001B66  EFB7  F00D         	goto	u9421
  5979  001B6A  EFB9  F00D         	goto	u9420
  5980  001B6E                     u9421:
  5981  001B6E  EF8D  F00E         	goto	l347
  5982  001B72                     u9420:
  5983  001B72                     
  5984                           ; BSR set to: 0
  5985                           ;pff.c: 886:    cs = (BYTE)(fs->fptr / 512 & (fs->csize - 1));
  5986  001B72  EE20 F016          	lfsr	2,22
  5987  001B76  51E2               	movf	pf_read@fs& (0+255),w,b
  5988  001B78  26D9               	addwf	fsr2l,f,c
  5989  001B7A  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  5990  001B7C  22DA               	addwfc	fsr2h,f,c
  5991  001B7E  CFDE F0C6          	movff	postinc2,??_pf_read
  5992  001B82  CFDE F0C7          	movff	postinc2,??_pf_read+1
  5993  001B86  CFDE F0C8          	movff	postinc2,??_pf_read+2
  5994  001B8A  CFDE F0C9          	movff	postinc2,??_pf_read+3
  5995  001B8E  0E0A               	movlw	10
  5996  001B90  EFCF  F00D         	goto	u9430
  5997  001B94                     u9435:
  5998  001B94  90D8               	bcf	status,0,c
  5999  001B96  33C9               	rrcf	(??_pf_read+3)& (0+255),f,b
  6000  001B98  33C8               	rrcf	(??_pf_read+2)& (0+255),f,b
  6001  001B9A  33C7               	rrcf	(??_pf_read+1)& (0+255),f,b
  6002  001B9C  33C6               	rrcf	??_pf_read& (0+255),f,b
  6003  001B9E                     u9430:
  6004  001B9E  2EE8               	decfsz	wreg,f,c
  6005  001BA0  EFCA  F00D         	goto	u9435
  6006  001BA4  EE20 F002          	lfsr	2,2
  6007  001BA8  51E2               	movf	pf_read@fs& (0+255),w,b
  6008  001BAA  26D9               	addwf	fsr2l,f,c
  6009  001BAC  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6010  001BAE  22DA               	addwfc	fsr2h,f,c
  6011  001BB0  50DF               	movf	indf2,w,c
  6012  001BB2  6FCA               	movwf	(??_pf_read+4)& (0+255),b
  6013  001BB4  05CA               	decf	(??_pf_read+4)& (0+255),w,b
  6014  001BB6  15C6               	andwf	??_pf_read& (0+255),w,b
  6015  001BB8  6FDF               	movwf	pf_read@cs& (0+255),b
  6016  001BBA                     
  6017                           ; BSR set to: 0
  6018                           ;pff.c: 887:    if (!cs) {
  6019  001BBA  51DF               	movf	pf_read@cs& (0+255),w,b
  6020  001BBC  A4D8               	btfss	status,2,c
  6021  001BBE  EFE3  F00D         	goto	u9441
  6022  001BC2  EFE5  F00D         	goto	u9440
  6023  001BC6                     u9441:
  6024  001BC6  EF45  F00E         	goto	l7493
  6025  001BCA                     u9440:
  6026  001BCA                     
  6027                           ; BSR set to: 0
  6028                           ;pff.c: 888:     if (fs->fptr == 0)
  6029  001BCA  EE20 F016          	lfsr	2,22
  6030  001BCE  51E2               	movf	pf_read@fs& (0+255),w,b
  6031  001BD0  26D9               	addwf	fsr2l,f,c
  6032  001BD2  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6033  001BD4  22DA               	addwfc	fsr2h,f,c
  6034  001BD6  50DE               	movf	postinc2,w,c
  6035  001BD8  10DE               	iorwf	postinc2,w,c
  6036  001BDA  10DE               	iorwf	postinc2,w,c
  6037  001BDC  10DE               	iorwf	postinc2,w,c
  6038  001BDE  A4D8               	btfss	status,2,c
  6039  001BE0  EFF4  F00D         	goto	u9451
  6040  001BE4  EFF6  F00D         	goto	u9450
  6041  001BE8                     u9451:
  6042  001BE8  EF06  F00E         	goto	l7481
  6043  001BEC                     u9450:
  6044  001BEC                     
  6045                           ; BSR set to: 0
  6046                           ;pff.c: 889:      clst = fs->org_clust;
  6047  001BEC  EE20 F01E          	lfsr	2,30
  6048  001BF0  51E2               	movf	pf_read@fs& (0+255),w,b
  6049  001BF2  26D9               	addwf	fsr2l,f,c
  6050  001BF4  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6051  001BF6  22DA               	addwfc	fsr2h,f,c
  6052  001BF8  CFDE F0DB          	movff	postinc2,pf_read@clst
  6053  001BFC  CFDE F0DC          	movff	postinc2,pf_read@clst+1
  6054  001C00  CFDE F0DD          	movff	postinc2,pf_read@clst+2
  6055  001C04  CFDE F0DE          	movff	postinc2,pf_read@clst+3
  6056  001C08  EF1E  F00E         	goto	l7483
  6057  001C0C                     l7481:
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;pff.c: 891:      clst = get_fat(fs->curr_clust);
  6061  001C0C  EE20 F022          	lfsr	2,34
  6062  001C10  51E2               	movf	pf_read@fs& (0+255),w,b
  6063  001C12  26D9               	addwf	fsr2l,f,c
  6064  001C14  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6065  001C16  22DA               	addwfc	fsr2h,f,c
  6066  001C18  CFDE F0A0          	movff	postinc2,get_fat@clst
  6067  001C1C  CFDE F0A1          	movff	postinc2,get_fat@clst+1
  6068  001C20  CFDE F0A2          	movff	postinc2,get_fat@clst+2
  6069  001C24  CFDE F0A3          	movff	postinc2,get_fat@clst+3
  6070  001C28  ECEB  F018         	call	_get_fat	;wreg free
  6071  001C2C  C0A0  F0DB         	movff	?_get_fat,pf_read@clst
  6072  001C30  C0A1  F0DC         	movff	?_get_fat+1,pf_read@clst+1
  6073  001C34  C0A2  F0DD         	movff	?_get_fat+2,pf_read@clst+2
  6074  001C38  C0A3  F0DE         	movff	?_get_fat+3,pf_read@clst+3
  6075  001C3C                     l7483:
  6076                           
  6077                           ;pff.c: 892:     if (clst <= 1)
  6078  001C3C  0100               	movlb	0	; () banked
  6079  001C3E  51DE               	movf	(pf_read@clst+3)& (0+255),w,b
  6080  001C40  11DD               	iorwf	(pf_read@clst+2)& (0+255),w,b
  6081  001C42  11DC               	iorwf	(pf_read@clst+1)& (0+255),w,b
  6082  001C44  E107               	bnz	u9461
  6083  001C46  0E02               	movlw	2
  6084  001C48  5DDB               	subwf	pf_read@clst& (0+255),w,b
  6085  001C4A  B0D8               	btfsc	status,0,c
  6086  001C4C  EF2A  F00E         	goto	u9461
  6087  001C50  EF2C  F00E         	goto	u9460
  6088  001C54                     u9461:
  6089  001C54  EF37  F00E         	goto	l7491
  6090  001C58                     u9460:
  6091  001C58                     
  6092                           ; BSR set to: 0
  6093                           ;pff.c: 893:                     {fs->flag = 0; return FR_DISK_ERR;};
  6094  001C58  EE20 F001          	lfsr	2,1
  6095  001C5C  51E2               	movf	pf_read@fs& (0+255),w,b
  6096  001C5E  26D9               	addwf	fsr2l,f,c
  6097  001C60  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6098  001C62  22DA               	addwfc	fsr2h,f,c
  6099  001C64  0E00               	movlw	0
  6100  001C66  6EDF               	movwf	indf2,c
  6101  001C68                     l7487:
  6102                           
  6103                           ; BSR set to: 0
  6104  001C68  0E01               	movlw	1
  6105  001C6A  EF2C  F00F         	goto	l342
  6106  001C6E                     l7491:
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;pff.c: 894:     fs->curr_clust = clst;
  6110  001C6E  EE20 F022          	lfsr	2,34
  6111  001C72  51E2               	movf	pf_read@fs& (0+255),w,b
  6112  001C74  26D9               	addwf	fsr2l,f,c
  6113  001C76  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6114  001C78  22DA               	addwfc	fsr2h,f,c
  6115  001C7A  C0DB  FFDE         	movff	pf_read@clst,postinc2
  6116  001C7E  C0DC  FFDE         	movff	pf_read@clst+1,postinc2
  6117  001C82  C0DD  FFDE         	movff	pf_read@clst+2,postinc2
  6118  001C86  C0DE  FFDE         	movff	pf_read@clst+3,postinc2
  6119  001C8A                     l7493:
  6120                           
  6121                           ; BSR set to: 0
  6122                           ;pff.c: 896:    sect = clust2sect(fs->curr_clust);
  6123  001C8A  EE20 F022          	lfsr	2,34
  6124  001C8E  51E2               	movf	pf_read@fs& (0+255),w,b
  6125  001C90  26D9               	addwf	fsr2l,f,c
  6126  001C92  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6127  001C94  22DA               	addwfc	fsr2h,f,c
  6128  001C96  CFDE F012          	movff	postinc2,clust2sect@clst
  6129  001C9A  CFDE F013          	movff	postinc2,clust2sect@clst+1
  6130  001C9E  CFDE F014          	movff	postinc2,clust2sect@clst+2
  6131  001CA2  CFDE F015          	movff	postinc2,clust2sect@clst+3
  6132  001CA6  ECD4  F025         	call	_clust2sect	;wreg free
  6133  001CAA  C012  F0D3         	movff	?_clust2sect,pf_read@sect
  6134  001CAE  C013  F0D4         	movff	?_clust2sect+1,pf_read@sect+1
  6135  001CB2  C014  F0D5         	movff	?_clust2sect+2,pf_read@sect+2
  6136  001CB6  C015  F0D6         	movff	?_clust2sect+3,pf_read@sect+3
  6137  001CBA                     
  6138                           ;pff.c: 897:    if (!sect) {fs->flag = 0; return FR_DISK_ERR;};
  6139  001CBA  0100               	movlb	0	; () banked
  6140  001CBC  51D3               	movf	pf_read@sect& (0+255),w,b
  6141  001CBE  11D4               	iorwf	(pf_read@sect+1)& (0+255),w,b
  6142  001CC0  11D5               	iorwf	(pf_read@sect+2)& (0+255),w,b
  6143  001CC2  11D6               	iorwf	(pf_read@sect+3)& (0+255),w,b
  6144  001CC4  A4D8               	btfss	status,2,c
  6145  001CC6  EF67  F00E         	goto	u9471
  6146  001CCA  EF69  F00E         	goto	u9470
  6147  001CCE                     u9471:
  6148  001CCE  EF73  F00E         	goto	l7503
  6149  001CD2                     u9470:
  6150  001CD2                     
  6151                           ; BSR set to: 0
  6152  001CD2  EE20 F001          	lfsr	2,1
  6153  001CD6  51E2               	movf	pf_read@fs& (0+255),w,b
  6154  001CD8  26D9               	addwf	fsr2l,f,c
  6155  001CDA  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6156  001CDC  22DA               	addwfc	fsr2h,f,c
  6157  001CDE  0E00               	movlw	0
  6158  001CE0  6EDF               	movwf	indf2,c
  6159  001CE2  EF34  F00E         	goto	l7487
  6160  001CE6                     l7503:
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;pff.c: 898:    fs->dsect = sect + cs;
  6164  001CE6  51DF               	movf	pf_read@cs& (0+255),w,b
  6165  001CE8  25D3               	addwf	pf_read@sect& (0+255),w,b
  6166  001CEA  6FC6               	movwf	??_pf_read& (0+255),b
  6167  001CEC  0E00               	movlw	0
  6168  001CEE  21D4               	addwfc	(pf_read@sect+1)& (0+255),w,b
  6169  001CF0  6FC7               	movwf	(??_pf_read+1)& (0+255),b
  6170  001CF2  0E00               	movlw	0
  6171  001CF4  21D5               	addwfc	(pf_read@sect+2)& (0+255),w,b
  6172  001CF6  6FC8               	movwf	(??_pf_read+2)& (0+255),b
  6173  001CF8  0E00               	movlw	0
  6174  001CFA  21D6               	addwfc	(pf_read@sect+3)& (0+255),w,b
  6175  001CFC  6FC9               	movwf	(??_pf_read+3)& (0+255),b
  6176  001CFE  EE20 F026          	lfsr	2,38
  6177  001D02  51E2               	movf	pf_read@fs& (0+255),w,b
  6178  001D04  26D9               	addwf	fsr2l,f,c
  6179  001D06  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6180  001D08  22DA               	addwfc	fsr2h,f,c
  6181  001D0A  C0C6  FFDE         	movff	??_pf_read,postinc2
  6182  001D0E  C0C7  FFDE         	movff	??_pf_read+1,postinc2
  6183  001D12  C0C8  FFDE         	movff	??_pf_read+2,postinc2
  6184  001D16  C0C9  FFDE         	movff	??_pf_read+3,postinc2
  6185  001D1A                     l347:
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;pff.c: 900:   rcnt = 512 - (UINT)fs->fptr % 512;
  6189  001D1A  0EFF               	movlw	255
  6190  001D1C  6FC6               	movwf	??_pf_read& (0+255),b
  6191  001D1E  0E01               	movlw	1
  6192  001D20  6FC7               	movwf	(??_pf_read+1)& (0+255),b
  6193  001D22  EE20 F016          	lfsr	2,22
  6194  001D26  51E2               	movf	pf_read@fs& (0+255),w,b
  6195  001D28  26D9               	addwf	fsr2l,f,c
  6196  001D2A  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6197  001D2C  22DA               	addwfc	fsr2h,f,c
  6198  001D2E  CFDE F0C8          	movff	postinc2,??_pf_read+2
  6199  001D32  CFDD F0C9          	movff	postdec2,??_pf_read+3
  6200  001D36  51C6               	movf	??_pf_read& (0+255),w,b
  6201  001D38  17C8               	andwf	(??_pf_read+2)& (0+255),f,b
  6202  001D3A  51C7               	movf	(??_pf_read+1)& (0+255),w,b
  6203  001D3C  17C9               	andwf	(??_pf_read+3)& (0+255),f,b
  6204  001D3E  51C8               	movf	(??_pf_read+2)& (0+255),w,b
  6205  001D40  0800               	sublw	0
  6206  001D42  6FE0               	movwf	pf_read@rcnt& (0+255),b
  6207  001D44  51C9               	movf	(??_pf_read+3)& (0+255),w,b
  6208  001D46  A0D8               	btfss	status,0,c
  6209  001D48  2AE8               	incf	wreg,f,c
  6210  001D4A  0802               	sublw	2
  6211  001D4C  6FE1               	movwf	(pf_read@rcnt+1)& (0+255),b
  6212  001D4E                     
  6213                           ; BSR set to: 0
  6214                           ;pff.c: 901:   if (rcnt > btr)
  6215  001D4E  51E0               	movf	pf_read@rcnt& (0+255),w,b
  6216  001D50  5DC2               	subwf	pf_read@btr& (0+255),w,b
  6217  001D52  51E1               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6218  001D54  59C3               	subwfb	(pf_read@btr+1)& (0+255),w,b
  6219  001D56  B0D8               	btfsc	status,0,c
  6220  001D58  EFB0  F00E         	goto	u9481
  6221  001D5C  EFB2  F00E         	goto	u9480
  6222  001D60                     u9481:
  6223  001D60  EFB6  F00E         	goto	l7509
  6224  001D64                     u9480:
  6225  001D64                     
  6226                           ; BSR set to: 0
  6227                           ;pff.c: 902:             rcnt = btr;
  6228  001D64  C0C2  F0E0         	movff	pf_read@btr,pf_read@rcnt
  6229  001D68  C0C3  F0E1         	movff	pf_read@btr+1,pf_read@rcnt+1
  6230  001D6C                     l7509:
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;pff.c: 903:   dr = disk_readp(!buff ? 0 : rbuff, fs->dsect, (UINT)fs->fptr % 512, rcnt)
      +                          ;
  6234  001D6C  51C0               	movf	pf_read@buff& (0+255),w,b
  6235  001D6E  11C1               	iorwf	(pf_read@buff+1)& (0+255),w,b
  6236  001D70  B4D8               	btfsc	status,2,c
  6237  001D72  EFBD  F00E         	goto	u9491
  6238  001D76  EFBF  F00E         	goto	u9490
  6239  001D7A                     u9491:
  6240  001D7A  EFC5  F00E         	goto	l7513
  6241  001D7E                     u9490:
  6242  001D7E                     
  6243                           ; BSR set to: 0
  6244  001D7E  C0CF  F0D1         	movff	pf_read@rbuff,_pf_read$894
  6245  001D82  C0D0  F0D2         	movff	pf_read@rbuff+1,_pf_read$894+1
  6246  001D86  EFC9  F00E         	goto	l7515
  6247  001D8A                     l7513:
  6248                           
  6249                           ; BSR set to: 0
  6250  001D8A  0E00               	movlw	0
  6251  001D8C  6FD1               	movwf	_pf_read$894& (0+255),b
  6252  001D8E  0E00               	movlw	0
  6253  001D90  6FD2               	movwf	(_pf_read$894+1)& (0+255),b
  6254  001D92                     l7515:
  6255                           
  6256                           ; BSR set to: 0
  6257  001D92  C0D1  F090         	movff	_pf_read$894,disk_readp@buff
  6258  001D96  C0D2  F091         	movff	_pf_read$894+1,disk_readp@buff+1
  6259  001D9A  EE20 F026          	lfsr	2,38
  6260  001D9E  51E2               	movf	pf_read@fs& (0+255),w,b
  6261  001DA0  26D9               	addwf	fsr2l,f,c
  6262  001DA2  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6263  001DA4  22DA               	addwfc	fsr2h,f,c
  6264  001DA6  CFDE F092          	movff	postinc2,disk_readp@sector
  6265  001DAA  CFDE F093          	movff	postinc2,disk_readp@sector+1
  6266  001DAE  CFDE F094          	movff	postinc2,disk_readp@sector+2
  6267  001DB2  CFDE F095          	movff	postinc2,disk_readp@sector+3
  6268  001DB6  EE20 F016          	lfsr	2,22
  6269  001DBA  51E2               	movf	pf_read@fs& (0+255),w,b
  6270  001DBC  26D9               	addwf	fsr2l,f,c
  6271  001DBE  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6272  001DC0  22DA               	addwfc	fsr2h,f,c
  6273  001DC2  CFDE F0C6          	movff	postinc2,??_pf_read
  6274  001DC6  CFDD F0C7          	movff	postdec2,??_pf_read+1
  6275  001DCA  0EFF               	movlw	255
  6276  001DCC  15C6               	andwf	??_pf_read& (0+255),w,b
  6277  001DCE  6F96               	movwf	disk_readp@offset& (0+255),b
  6278  001DD0  0E01               	movlw	1
  6279  001DD2  15C7               	andwf	(??_pf_read+1)& (0+255),w,b
  6280  001DD4  6F97               	movwf	(disk_readp@offset+1)& (0+255),b
  6281  001DD6  C0E0  F098         	movff	pf_read@rcnt,disk_readp@count
  6282  001DDA  C0E1  F099         	movff	pf_read@rcnt+1,disk_readp@count+1
  6283  001DDE  EC64  F01B         	call	_disk_readp	;wreg free
  6284  001DE2  0100               	movlb	0	; () banked
  6285  001DE4  6FCE               	movwf	pf_read@dr& (0+255),b
  6286  001DE6                     
  6287                           ; BSR set to: 0
  6288                           ;pff.c: 904:   if (dr)
  6289  001DE6  51CE               	movf	pf_read@dr& (0+255),w,b
  6290  001DE8  B4D8               	btfsc	status,2,c
  6291  001DEA  EFF9  F00E         	goto	u9501
  6292  001DEE  EFFB  F00E         	goto	u9500
  6293  001DF2                     u9501:
  6294  001DF2  EF05  F00F         	goto	l7525
  6295  001DF6                     u9500:
  6296  001DF6                     
  6297                           ; BSR set to: 0
  6298                           ;pff.c: 905:             {fs->flag = 0; return FR_DISK_ERR;};
  6299  001DF6  EE20 F001          	lfsr	2,1
  6300  001DFA  51E2               	movf	pf_read@fs& (0+255),w,b
  6301  001DFC  26D9               	addwf	fsr2l,f,c
  6302  001DFE  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6303  001E00  22DA               	addwfc	fsr2h,f,c
  6304  001E02  0E00               	movlw	0
  6305  001E04  6EDF               	movwf	indf2,c
  6306  001E06  EF34  F00E         	goto	l7487
  6307  001E0A                     l7525:
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;pff.c: 907:   fs->fptr += rcnt; rbuff += rcnt;
  6311  001E0A  EE20 F016          	lfsr	2,22
  6312  001E0E  51E2               	movf	pf_read@fs& (0+255),w,b
  6313  001E10  26D9               	addwf	fsr2l,f,c
  6314  001E12  51E3               	movf	(pf_read@fs+1)& (0+255),w,b
  6315  001E14  22DA               	addwfc	fsr2h,f,c
  6316  001E16  51E0               	movf	pf_read@rcnt& (0+255),w,b
  6317  001E18  26DE               	addwf	postinc2,f,c
  6318  001E1A  51E1               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6319  001E1C  22DE               	addwfc	postinc2,f,c
  6320  001E1E  0E00               	movlw	0
  6321  001E20  22DE               	addwfc	postinc2,f,c
  6322  001E22  22DE               	addwfc	postinc2,f,c
  6323  001E24                     
  6324                           ; BSR set to: 0
  6325  001E24  51E0               	movf	pf_read@rcnt& (0+255),w,b
  6326  001E26  27CF               	addwf	pf_read@rbuff& (0+255),f,b
  6327  001E28  51E1               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6328  001E2A  23D0               	addwfc	(pf_read@rbuff+1)& (0+255),f,b
  6329  001E2C                     
  6330                           ; BSR set to: 0
  6331                           ;pff.c: 909:         btr -= rcnt;
  6332  001E2C  51E0               	movf	pf_read@rcnt& (0+255),w,b
  6333  001E2E  5FC2               	subwf	pf_read@btr& (0+255),f,b
  6334  001E30  51E1               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6335  001E32  5BC3               	subwfb	(pf_read@btr+1)& (0+255),f,b
  6336  001E34                     
  6337                           ; BSR set to: 0
  6338                           ;pff.c: 910:         *br += rcnt;
  6339  001E34  C0C4  FFD9         	movff	pf_read@br,fsr2l
  6340  001E38  C0C5  FFDA         	movff	pf_read@br+1,fsr2h
  6341  001E3C  51E0               	movf	pf_read@rcnt& (0+255),w,b
  6342  001E3E  26DE               	addwf	postinc2,f,c
  6343  001E40  51E1               	movf	(pf_read@rcnt+1)& (0+255),w,b
  6344  001E42  22DD               	addwfc	postdec2,f,c
  6345  001E44                     l7533:
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;pff.c: 884:  while (btr) {
  6349  001E44  51C2               	movf	pf_read@btr& (0+255),w,b
  6350  001E46  11C3               	iorwf	(pf_read@btr+1)& (0+255),w,b
  6351  001E48  A4D8               	btfss	status,2,c
  6352  001E4A  EF29  F00F         	goto	u9511
  6353  001E4E  EF2B  F00F         	goto	u9510
  6354  001E52                     u9511:
  6355  001E52  EF9C  F00D         	goto	l7471
  6356  001E56                     u9510:
  6357  001E56                     
  6358                           ; BSR set to: 0
  6359                           ;pff.c: 913:  return FR_OK;
  6360  001E56  0E00               	movlw	0
  6361  001E58                     l342:
  6362                           
  6363                           ; BSR set to: 0
  6364  001E58  0012               	return		;funcret
  6365  001E5A                     __end_of_pf_read:
  6366                           	callstack 0
  6367                           
  6368 ;; *************** function _pf_opendir *****************
  6369 ;; Defined at:
  6370 ;;		line 1051 in file "pff.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  dj              2   97[BANK0 ] PTR struct .
  6373 ;;		 -> main@dir(16), 
  6374 ;;  path            2   99[BANK0 ] PTR const unsigned char 
  6375 ;;		 -> Line(128), 
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;  dir            32    0[BANK1 ] unsigned char [32]
  6378 ;;  sp             12   32[BANK1 ] unsigned char [12]
  6379 ;;  fs              2   44[BANK1 ] PTR struct .
  6380 ;;		 -> NULL(0), main@fs(42), 
  6381 ;;  res             1   46[BANK1 ] enum E2600
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1    wreg      enum E3114
  6384 ;; Registers used:
  6385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6391 ;;      Params:         0       4       0       0       0       0       0
  6392 ;;      Locals:         0       0      47       0       0       0       0
  6393 ;;      Temps:          0       0       0       0       0       0       0
  6394 ;;      Totals:         0       4      47       0       0       0       0
  6395 ;;Total ram usage:       51 bytes
  6396 ;; Hardware stack levels used: 1
  6397 ;; Hardware stack levels required when called: 14
  6398 ;; This function calls:
  6399 ;;		_dir_rewind
  6400 ;;		_follow_path
  6401 ;;		_get_clust
  6402 ;; This function is called by:
  6403 ;;		_main
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           	psect	text16
  6408  00491A                     __ptext16:
  6409                           	callstack 0
  6410  00491A                     _pf_opendir:
  6411                           	callstack 16
  6412  00491A                     
  6413                           ;pff.c: 1052:  DIR *dj,;pff.c: 1053:  const char *path;pff.c: 1055: {;pff.c: 1056:  FRES
      +                          ULT res;;pff.c: 1057:  BYTE sp[12], dir[32];;pff.c: 1058:  FATFS *fs = FatFs;
  6414  00491A  C0FD  F12C         	movff	_FatFs,pf_opendir@fs
  6415  00491E  C0FE  F12D         	movff	_FatFs+1,pf_opendir@fs+1
  6416                           
  6417                           ;pff.c: 1061:  if (!fs) {
  6418  004922  0101               	movlb	1	; () banked
  6419  004924  512C               	movf	pf_opendir@fs& (0+255),w,b
  6420  004926  112D               	iorwf	(pf_opendir@fs+1)& (0+255),w,b
  6421  004928  A4D8               	btfss	status,2,c
  6422  00492A  EF99  F024         	goto	u9641
  6423  00492E  EF9B  F024         	goto	u9640
  6424  004932                     u9641:
  6425  004932  EF9F  F024         	goto	l7607
  6426  004936                     u9640:
  6427  004936                     
  6428                           ; BSR set to: 1
  6429                           ;pff.c: 1062:   res = FR_NOT_ENABLED;
  6430  004936  0E05               	movlw	5
  6431  004938  6F2E               	movwf	pf_opendir@res& (0+255),b
  6432                           
  6433                           ;pff.c: 1063:  } else {
  6434  00493A  EFFB  F024         	goto	l7623
  6435  00493E                     l7607:
  6436                           
  6437                           ; BSR set to: 1
  6438                           ;pff.c: 1064:   dj->fn = sp;
  6439  00493E  0100               	movlb	0	; () banked
  6440  004940  EE20 F002          	lfsr	2,2
  6441  004944  51E1               	movf	pf_opendir@dj& (0+255),w,b
  6442  004946  26D9               	addwf	fsr2l,f,c
  6443  004948  51E2               	movf	(pf_opendir@dj+1)& (0+255),w,b
  6444  00494A  22DA               	addwfc	fsr2h,f,c
  6445  00494C  0E20               	movlw	low pf_opendir@sp
  6446  00494E  6EDE               	movwf	postinc2,c
  6447  004950  0E01               	movlw	high pf_opendir@sp
  6448  004952  6EDD               	movwf	postdec2,c
  6449  004954                     
  6450                           ; BSR set to: 0
  6451                           ;pff.c: 1065:   res = follow_path(dj, dir, path);
  6452  004954  C0E1  F0D9         	movff	pf_opendir@dj,follow_path@dj
  6453  004958  C0E2  F0DA         	movff	pf_opendir@dj+1,follow_path@dj+1
  6454  00495C  0E00               	movlw	low pf_opendir@dir
  6455  00495E  6FDB               	movwf	follow_path@dir& (0+255),b
  6456  004960  0E01               	movlw	high pf_opendir@dir
  6457  004962  6FDC               	movwf	(follow_path@dir+1)& (0+255),b
  6458  004964  C0E3  F0DD         	movff	pf_opendir@path,follow_path@path
  6459  004968  C0E4  F0DE         	movff	pf_opendir@path+1,follow_path@path+1
  6460  00496C  ECE5  F01F         	call	_follow_path	;wreg free
  6461  004970  0101               	movlb	1	; () banked
  6462  004972  6F2E               	movwf	pf_opendir@res& (0+255),b
  6463  004974                     
  6464                           ; BSR set to: 1
  6465                           ;pff.c: 1066:   if (res == FR_OK) {
  6466  004974  512E               	movf	pf_opendir@res& (0+255),w,b
  6467  004976  A4D8               	btfss	status,2,c
  6468  004978  EFC0  F024         	goto	u9651
  6469  00497C  EFC2  F024         	goto	u9650
  6470  004980                     u9651:
  6471  004980  EFFB  F024         	goto	l7623
  6472  004984                     u9650:
  6473  004984                     
  6474                           ; BSR set to: 1
  6475                           ;pff.c: 1067:    if (dir[0]) {
  6476  004984  5100               	movf	pf_opendir@dir& (0+255),w,b
  6477  004986  B4D8               	btfsc	status,2,c
  6478  004988  EFC8  F024         	goto	u9661
  6479  00498C  EFCA  F024         	goto	u9660
  6480  004990                     u9661:
  6481  004990  EFEA  F024         	goto	l381
  6482  004994                     u9660:
  6483  004994                     
  6484                           ; BSR set to: 1
  6485                           ;pff.c: 1068:     if (dir[11] & 0x10)
  6486  004994  A90B               	btfss	(pf_opendir@dir+11)& (0+255),4,b
  6487  004996  EFCF  F024         	goto	u9671
  6488  00499A  EFD1  F024         	goto	u9670
  6489  00499E                     u9671:
  6490  00499E  EFE8  F024         	goto	l7619
  6491  0049A2                     u9670:
  6492  0049A2                     
  6493                           ; BSR set to: 1
  6494                           ;pff.c: 1069:      dj->sclust = get_clust(dir);
  6495  0049A2  0E00               	movlw	low pf_opendir@dir
  6496  0049A4  6E06               	movwf	get_clust@dir^0,c
  6497  0049A6  0E01               	movlw	high pf_opendir@dir
  6498  0049A8  6E07               	movwf	(get_clust@dir+1)^0,c
  6499  0049AA  ECA3  F027         	call	_get_clust	;wreg free
  6500  0049AE  0100               	movlb	0	; () banked
  6501  0049B0  EE20 F004          	lfsr	2,4
  6502  0049B4  51E1               	movf	pf_opendir@dj& (0+255),w,b
  6503  0049B6  26D9               	addwf	fsr2l,f,c
  6504  0049B8  51E2               	movf	(pf_opendir@dj+1)& (0+255),w,b
  6505  0049BA  22DA               	addwfc	fsr2h,f,c
  6506  0049BC  C006  FFDE         	movff	?_get_clust,postinc2
  6507  0049C0  C007  FFDE         	movff	?_get_clust+1,postinc2
  6508  0049C4  C008  FFDE         	movff	?_get_clust+2,postinc2
  6509  0049C8  C009  FFDE         	movff	?_get_clust+3,postinc2
  6510  0049CC  EFEA  F024         	goto	l381
  6511  0049D0                     l7619:
  6512                           
  6513                           ; BSR set to: 1
  6514                           ;pff.c: 1071:      res = FR_NO_FILE;
  6515  0049D0  0E03               	movlw	3
  6516  0049D2  6F2E               	movwf	pf_opendir@res& (0+255),b
  6517  0049D4                     l381:
  6518                           
  6519                           ;pff.c: 1073:    if (res == FR_OK)
  6520  0049D4  0101               	movlb	1	; () banked
  6521  0049D6  512E               	movf	pf_opendir@res& (0+255),w,b
  6522  0049D8  A4D8               	btfss	status,2,c
  6523  0049DA  EFF1  F024         	goto	u9681
  6524  0049DE  EFF3  F024         	goto	u9680
  6525  0049E2                     u9681:
  6526  0049E2  EFFB  F024         	goto	l7623
  6527  0049E6                     u9680:
  6528  0049E6                     
  6529                           ; BSR set to: 1
  6530                           ;pff.c: 1074:     res = dir_rewind(dj);
  6531  0049E6  C0E1  F01D         	movff	pf_opendir@dj,dir_rewind@dj
  6532  0049EA  C0E2  F01E         	movff	pf_opendir@dj+1,dir_rewind@dj+1
  6533  0049EE  EC1D  F023         	call	_dir_rewind	;wreg free
  6534  0049F2  0101               	movlb	1	; () banked
  6535  0049F4  6F2E               	movwf	pf_opendir@res& (0+255),b
  6536  0049F6                     l7623:
  6537                           
  6538                           ; BSR set to: 1
  6539                           ;pff.c: 1078:  return res;
  6540  0049F6  512E               	movf	pf_opendir@res& (0+255),w,b
  6541  0049F8                     
  6542                           ; BSR set to: 1
  6543  0049F8  0012               	return		;funcret
  6544  0049FA                     __end_of_pf_opendir:
  6545                           	callstack 0
  6546                           
  6547 ;; *************** function _pf_open *****************
  6548 ;; Defined at:
  6549 ;;		line 826 in file "pff.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  path            2   97[BANK0 ] PTR const unsigned char 
  6552 ;;		 -> Line(128), 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;  dir            32   34[BANK1 ] unsigned char [32]
  6555 ;;  dj             16   69[BANK1 ] struct .
  6556 ;;  sp             12   22[BANK1 ] unsigned char [12]
  6557 ;;  fs              2   67[BANK1 ] PTR struct .
  6558 ;;		 -> NULL(0), main@fs(42), 
  6559 ;;  res             1   66[BANK1 ] enum E2600
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      enum E3114
  6562 ;; Registers used:
  6563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6569 ;;      Params:         0       2       0       0       0       0       0
  6570 ;;      Locals:         0       0      63       0       0       0       0
  6571 ;;      Temps:          0       0      22       0       0       0       0
  6572 ;;      Totals:         0       2      85       0       0       0       0
  6573 ;;Total ram usage:       87 bytes
  6574 ;; Hardware stack levels used: 1
  6575 ;; Hardware stack levels required when called: 14
  6576 ;; This function calls:
  6577 ;;		_follow_path
  6578 ;;		_get_clust
  6579 ;; This function is called by:
  6580 ;;		_main
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           	psect	text17
  6585  003CE6                     __ptext17:
  6586                           	callstack 0
  6587  003CE6                     _pf_open:
  6588                           	callstack 16
  6589  003CE6                     
  6590                           ;pff.c: 827:  const char *path;pff.c: 829: {;pff.c: 830:  FRESULT res;;pff.c: 831:  DIR 
      +                          dj;;pff.c: 832:  BYTE sp[12], dir[32];;pff.c: 833:  FATFS *fs = FatFs;
  6591  003CE6  C0FD  F143         	movff	_FatFs,pf_open@fs
  6592  003CEA  C0FE  F144         	movff	_FatFs+1,pf_open@fs+1
  6593                           
  6594                           ;pff.c: 836:  if (!fs)
  6595  003CEE  0101               	movlb	1	; () banked
  6596  003CF0  5143               	movf	pf_open@fs& (0+255),w,b
  6597  003CF2  1144               	iorwf	(pf_open@fs+1)& (0+255),w,b
  6598  003CF4  A4D8               	btfss	status,2,c
  6599  003CF6  EF7F  F01E         	goto	u9351
  6600  003CFA  EF81  F01E         	goto	u9350
  6601  003CFE                     u9351:
  6602  003CFE  EF84  F01E         	goto	l7417
  6603  003D02                     u9350:
  6604  003D02                     
  6605                           ; BSR set to: 1
  6606                           ;pff.c: 837:         return FR_NOT_ENABLED;
  6607  003D02  0E05               	movlw	5
  6608  003D04  EF2D  F01F         	goto	l334
  6609  003D08                     l7417:
  6610                           
  6611                           ; BSR set to: 1
  6612                           ;pff.c: 839:  fs->flag = 0;
  6613  003D08  EE20 F001          	lfsr	2,1
  6614  003D0C  5143               	movf	pf_open@fs& (0+255),w,b
  6615  003D0E  26D9               	addwf	fsr2l,f,c
  6616  003D10  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6617  003D12  22DA               	addwfc	fsr2h,f,c
  6618  003D14  0E00               	movlw	0
  6619  003D16  6EDF               	movwf	indf2,c
  6620  003D18                     
  6621                           ; BSR set to: 1
  6622                           ;pff.c: 840:  dj.fn = sp;
  6623  003D18  0E16               	movlw	low pf_open@sp
  6624  003D1A  6F47               	movwf	(pf_open@dj+2)& (0+255),b
  6625  003D1C  0E01               	movlw	high pf_open@sp
  6626  003D1E  6F48               	movwf	(pf_open@dj+3)& (0+255),b
  6627  003D20                     
  6628                           ; BSR set to: 1
  6629                           ;pff.c: 841:  res = follow_path(&dj, dir, path);
  6630  003D20  0E45               	movlw	low pf_open@dj
  6631  003D22  0100               	movlb	0	; () banked
  6632  003D24  6FD9               	movwf	follow_path@dj& (0+255),b
  6633  003D26  0E01               	movlw	high pf_open@dj
  6634  003D28  6FDA               	movwf	(follow_path@dj+1)& (0+255),b
  6635  003D2A  0E22               	movlw	low pf_open@dir
  6636  003D2C  6FDB               	movwf	follow_path@dir& (0+255),b
  6637  003D2E  0E01               	movlw	high pf_open@dir
  6638  003D30  6FDC               	movwf	(follow_path@dir+1)& (0+255),b
  6639  003D32  C0E1  F0DD         	movff	pf_open@path,follow_path@path
  6640  003D36  C0E2  F0DE         	movff	pf_open@path+1,follow_path@path+1
  6641  003D3A  ECE5  F01F         	call	_follow_path	;wreg free
  6642  003D3E  0101               	movlb	1	; () banked
  6643  003D40  6F42               	movwf	pf_open@res& (0+255),b
  6644  003D42                     
  6645                           ; BSR set to: 1
  6646                           ;pff.c: 842:  if (res != FR_OK)
  6647  003D42  5142               	movf	pf_open@res& (0+255),w,b
  6648  003D44  B4D8               	btfsc	status,2,c
  6649  003D46  EFA7  F01E         	goto	u9361
  6650  003D4A  EFA9  F01E         	goto	u9360
  6651  003D4E                     u9361:
  6652  003D4E  EFAC  F01E         	goto	l7429
  6653  003D52                     u9360:
  6654  003D52                     
  6655                           ; BSR set to: 1
  6656                           ;pff.c: 843:         return res;
  6657  003D52  5142               	movf	pf_open@res& (0+255),w,b
  6658  003D54  EF2D  F01F         	goto	l334
  6659  003D58                     l7429:
  6660                           
  6661                           ; BSR set to: 1
  6662                           ;pff.c: 844:  if (!dir[0] || (dir[11] & 0x10))
  6663  003D58  5122               	movf	pf_open@dir& (0+255),w,b
  6664  003D5A  B4D8               	btfsc	status,2,c
  6665  003D5C  EFB2  F01E         	goto	u9371
  6666  003D60  EFB4  F01E         	goto	u9370
  6667  003D64                     u9371:
  6668  003D64  EFBB  F01E         	goto	l7433
  6669  003D68                     u9370:
  6670  003D68                     
  6671                           ; BSR set to: 1
  6672  003D68  A92D               	btfss	(pf_open@dir+11)& (0+255),4,b
  6673  003D6A  EFB9  F01E         	goto	u9381
  6674  003D6E  EFBB  F01E         	goto	u9380
  6675  003D72                     u9381:
  6676  003D72  EFBE  F01E         	goto	l7437
  6677  003D76                     u9380:
  6678  003D76                     l7433:
  6679                           
  6680                           ; BSR set to: 1
  6681                           ;pff.c: 845:   return FR_NO_FILE;
  6682  003D76  0E03               	movlw	3
  6683  003D78  EF2D  F01F         	goto	l334
  6684  003D7C                     l7437:
  6685                           
  6686                           ; BSR set to: 1
  6687                           ;pff.c: 847:  fs->org_clust = get_clust(dir);
  6688  003D7C  0E22               	movlw	low pf_open@dir
  6689  003D7E  6E06               	movwf	get_clust@dir^0,c
  6690  003D80  0E01               	movlw	high pf_open@dir
  6691  003D82  6E07               	movwf	(get_clust@dir+1)^0,c
  6692  003D84  ECA3  F027         	call	_get_clust	;wreg free
  6693  003D88  0101               	movlb	1	; () banked
  6694  003D8A  EE20 F01E          	lfsr	2,30
  6695  003D8E  5143               	movf	pf_open@fs& (0+255),w,b
  6696  003D90  26D9               	addwf	fsr2l,f,c
  6697  003D92  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6698  003D94  22DA               	addwfc	fsr2h,f,c
  6699  003D96  C006  FFDE         	movff	?_get_clust,postinc2
  6700  003D9A  C007  FFDE         	movff	?_get_clust+1,postinc2
  6701  003D9E  C008  FFDE         	movff	?_get_clust+2,postinc2
  6702  003DA2  C009  FFDE         	movff	?_get_clust+3,postinc2
  6703  003DA6                     
  6704                           ; BSR set to: 1
  6705                           ;pff.c: 848:  fs->fsize = (DWORD)(((DWORD)*((BYTE*)(dir+28)+3)<<24)|((DWORD)*((BYTE*)(di
      +                          r+28)+2)<<16)|((WORD)*((BYTE*)(dir+28)+1)<<8)|*(BYTE*)(dir+28));
  6706  003DA6  513F               	movf	(pf_open@dir+29)& (0+255),w,b
  6707  003DA8  6F01               	movwf	(??_pf_open+1)& (0+255),b
  6708  003DAA  6B00               	clrf	??_pf_open& (0+255),b
  6709  003DAC  C140  F102         	movff	pf_open@dir+30,??_pf_open+2
  6710  003DB0  6B03               	clrf	(??_pf_open+3)& (0+255),b
  6711  003DB2  6B04               	clrf	(??_pf_open+4)& (0+255),b
  6712  003DB4  6B05               	clrf	(??_pf_open+5)& (0+255),b
  6713  003DB6  C103  F105         	movff	??_pf_open+3,??_pf_open+5
  6714  003DBA  C102  F104         	movff	??_pf_open+2,??_pf_open+4
  6715  003DBE  6B03               	clrf	(??_pf_open+3)& (0+255),b
  6716  003DC0  6B02               	clrf	(??_pf_open+2)& (0+255),b
  6717  003DC2  C141  F106         	movff	pf_open@dir+31,??_pf_open+6
  6718  003DC6  6B07               	clrf	(??_pf_open+7)& (0+255),b
  6719  003DC8  6B08               	clrf	(??_pf_open+8)& (0+255),b
  6720  003DCA  6B09               	clrf	(??_pf_open+9)& (0+255),b
  6721  003DCC  C106  F109         	movff	??_pf_open+6,??_pf_open+9
  6722  003DD0  6B08               	clrf	(??_pf_open+8)& (0+255),b
  6723  003DD2  6B07               	clrf	(??_pf_open+7)& (0+255),b
  6724  003DD4  6B06               	clrf	(??_pf_open+6)& (0+255),b
  6725  003DD6  5102               	movf	(??_pf_open+2)& (0+255),w,b
  6726  003DD8  1106               	iorwf	(??_pf_open+6)& (0+255),w,b
  6727  003DDA  6F0A               	movwf	(??_pf_open+10)& (0+255),b
  6728  003DDC  5103               	movf	(??_pf_open+3)& (0+255),w,b
  6729  003DDE  1107               	iorwf	(??_pf_open+7)& (0+255),w,b
  6730  003DE0  6F0B               	movwf	(??_pf_open+11)& (0+255),b
  6731  003DE2  5104               	movf	(??_pf_open+4)& (0+255),w,b
  6732  003DE4  1108               	iorwf	(??_pf_open+8)& (0+255),w,b
  6733  003DE6  6F0C               	movwf	(??_pf_open+12)& (0+255),b
  6734  003DE8  5105               	movf	(??_pf_open+5)& (0+255),w,b
  6735  003DEA  1109               	iorwf	(??_pf_open+9)& (0+255),w,b
  6736  003DEC  6F0D               	movwf	(??_pf_open+13)& (0+255),b
  6737  003DEE  5100               	movf	??_pf_open& (0+255),w,b
  6738  003DF0  110A               	iorwf	(??_pf_open+10)& (0+255),w,b
  6739  003DF2  6F0E               	movwf	(??_pf_open+14)& (0+255),b
  6740  003DF4  5101               	movf	(??_pf_open+1)& (0+255),w,b
  6741  003DF6  110B               	iorwf	(??_pf_open+11)& (0+255),w,b
  6742  003DF8  6F0F               	movwf	(??_pf_open+15)& (0+255),b
  6743  003DFA  0E00               	movlw	0
  6744  003DFC  110C               	iorwf	(??_pf_open+12)& (0+255),w,b
  6745  003DFE  6F10               	movwf	(??_pf_open+16)& (0+255),b
  6746  003E00  0E00               	movlw	0
  6747  003E02  110D               	iorwf	(??_pf_open+13)& (0+255),w,b
  6748  003E04  6F11               	movwf	(??_pf_open+17)& (0+255),b
  6749  003E06  513E               	movf	(pf_open@dir+28)& (0+255),w,b
  6750  003E08  110E               	iorwf	(??_pf_open+14)& (0+255),w,b
  6751  003E0A  6F12               	movwf	(??_pf_open+18)& (0+255),b
  6752  003E0C  510F               	movf	(??_pf_open+15)& (0+255),w,b
  6753  003E0E  6F13               	movwf	(??_pf_open+19)& (0+255),b
  6754  003E10  5110               	movf	(??_pf_open+16)& (0+255),w,b
  6755  003E12  6F14               	movwf	(??_pf_open+20)& (0+255),b
  6756  003E14  5111               	movf	(??_pf_open+17)& (0+255),w,b
  6757  003E16  6F15               	movwf	(??_pf_open+21)& (0+255),b
  6758  003E18  EE20 F01A          	lfsr	2,26
  6759  003E1C  5143               	movf	pf_open@fs& (0+255),w,b
  6760  003E1E  26D9               	addwf	fsr2l,f,c
  6761  003E20  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6762  003E22  22DA               	addwfc	fsr2h,f,c
  6763  003E24  C112  FFDE         	movff	??_pf_open+18,postinc2
  6764  003E28  C113  FFDE         	movff	??_pf_open+19,postinc2
  6765  003E2C  C114  FFDE         	movff	??_pf_open+20,postinc2
  6766  003E30  C115  FFDE         	movff	??_pf_open+21,postinc2
  6767  003E34                     
  6768                           ; BSR set to: 1
  6769                           ;pff.c: 849:  fs->fptr = 0;
  6770  003E34  EE20 F016          	lfsr	2,22
  6771  003E38  5143               	movf	pf_open@fs& (0+255),w,b
  6772  003E3A  26D9               	addwf	fsr2l,f,c
  6773  003E3C  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6774  003E3E  22DA               	addwfc	fsr2h,f,c
  6775  003E40  6ADE               	clrf	postinc2,c
  6776  003E42  6ADE               	clrf	postinc2,c
  6777  003E44  6ADE               	clrf	postinc2,c
  6778  003E46  6ADD               	clrf	postdec2,c
  6779  003E48                     
  6780                           ; BSR set to: 1
  6781                           ;pff.c: 850:  fs->flag = 0x01;
  6782  003E48  EE20 F001          	lfsr	2,1
  6783  003E4C  5143               	movf	pf_open@fs& (0+255),w,b
  6784  003E4E  26D9               	addwf	fsr2l,f,c
  6785  003E50  5144               	movf	(pf_open@fs+1)& (0+255),w,b
  6786  003E52  22DA               	addwfc	fsr2h,f,c
  6787  003E54  0E01               	movlw	1
  6788  003E56  6EDF               	movwf	indf2,c
  6789  003E58                     
  6790                           ; BSR set to: 1
  6791                           ;pff.c: 852:  return FR_OK;
  6792  003E58  0E00               	movlw	0
  6793  003E5A                     l334:
  6794                           
  6795                           ; BSR set to: 1
  6796  003E5A  0012               	return		;funcret
  6797  003E5C                     __end_of_pf_open:
  6798                           	callstack 0
  6799                           
  6800 ;; *************** function _follow_path *****************
  6801 ;; Defined at:
  6802 ;;		line 676 in file "pff.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  dj              2   89[BANK0 ] PTR struct .
  6805 ;;		 -> pf_open@dj(16), main@dir(16), 
  6806 ;;  dir             2   91[BANK0 ] PTR unsigned char 
  6807 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  6808 ;;  path            2   93[BANK0 ] PTR const unsigned char 
  6809 ;;		 -> Line(128), 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  res             1   96[BANK0 ] enum E2600
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1    wreg      enum E2600
  6814 ;; Registers used:
  6815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6821 ;;      Params:         0       6       0       0       0       0       0
  6822 ;;      Locals:         0       1       0       0       0       0       0
  6823 ;;      Temps:          0       1       0       0       0       0       0
  6824 ;;      Totals:         0       8       0       0       0       0       0
  6825 ;;Total ram usage:        8 bytes
  6826 ;; Hardware stack levels used: 1
  6827 ;; Hardware stack levels required when called: 13
  6828 ;; This function calls:
  6829 ;;		_create_name
  6830 ;;		_dir_find
  6831 ;;		_dir_rewind
  6832 ;;		_get_clust
  6833 ;; This function is called by:
  6834 ;;		_pf_open
  6835 ;;		_pf_opendir
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           	psect	text18
  6840  003FCA                     __ptext18:
  6841                           	callstack 0
  6842  003FCA                     _follow_path:
  6843                           	callstack 16
  6844  003FCA                     
  6845                           ;pff.c: 677:  DIR *dj,;pff.c: 678:  BYTE *dir,;pff.c: 679:  const char *path;pff.c: 681:
      +                           {;pff.c: 682:  FRESULT res;;pff.c: 685:  while (*path == ' ') path++;
  6846  003FCA  EFEA  F01F         	goto	l7125
  6847  003FCE                     l7123:
  6848  003FCE  0100               	movlb	0	; () banked
  6849  003FD0  4BDD               	infsnz	follow_path@path& (0+255),f,b
  6850  003FD2  2BDE               	incf	(follow_path@path+1)& (0+255),f,b
  6851  003FD4                     l7125:
  6852  003FD4  C0DD  FFD9         	movff	follow_path@path,fsr2l
  6853  003FD8  C0DE  FFDA         	movff	follow_path@path+1,fsr2h
  6854  003FDC  0E20               	movlw	32
  6855  003FDE  18DE               	xorwf	postinc2,w,c
  6856  003FE0  B4D8               	btfsc	status,2,c
  6857  003FE2  EFF5  F01F         	goto	u8961
  6858  003FE6  EFF7  F01F         	goto	u8960
  6859  003FEA                     u8961:
  6860  003FEA  EFE7  F01F         	goto	l7123
  6861  003FEE                     u8960:
  6862  003FEE                     
  6863                           ;pff.c: 686:  if (*path == '/') path++;
  6864  003FEE  C0DD  FFD9         	movff	follow_path@path,fsr2l
  6865  003FF2  C0DE  FFDA         	movff	follow_path@path+1,fsr2h
  6866  003FF6  0E2F               	movlw	47
  6867  003FF8  18DE               	xorwf	postinc2,w,c
  6868  003FFA  A4D8               	btfss	status,2,c
  6869  003FFC  EF02  F020         	goto	u8971
  6870  004000  EF04  F020         	goto	u8970
  6871  004004                     u8971:
  6872  004004  EF07  F020         	goto	l7131
  6873  004008                     u8970:
  6874  004008  0100               	movlb	0	; () banked
  6875  00400A  4BDD               	infsnz	follow_path@path& (0+255),f,b
  6876  00400C  2BDE               	incf	(follow_path@path+1)& (0+255),f,b
  6877  00400E                     l7131:
  6878                           
  6879                           ;pff.c: 687:  dj->sclust = 0;
  6880  00400E  0100               	movlb	0	; () banked
  6881  004010  EE20 F004          	lfsr	2,4
  6882  004014  51D9               	movf	follow_path@dj& (0+255),w,b
  6883  004016  26D9               	addwf	fsr2l,f,c
  6884  004018  51DA               	movf	(follow_path@dj+1)& (0+255),w,b
  6885  00401A  22DA               	addwfc	fsr2h,f,c
  6886  00401C  6ADE               	clrf	postinc2,c
  6887  00401E  6ADE               	clrf	postinc2,c
  6888  004020  6ADE               	clrf	postinc2,c
  6889  004022  6ADD               	clrf	postdec2,c
  6890  004024                     
  6891                           ; BSR set to: 0
  6892                           ;pff.c: 689:  if ((BYTE)*path < ' ') {
  6893  004024  C0DD  FFD9         	movff	follow_path@path,fsr2l
  6894  004028  C0DE  FFDA         	movff	follow_path@path+1,fsr2h
  6895  00402C  0E20               	movlw	32
  6896  00402E  60DF               	cpfslt	indf2,c
  6897  004030  EF1C  F020         	goto	u8981
  6898  004034  EF1E  F020         	goto	u8980
  6899  004038                     u8981:
  6900  004038  EF2E  F020         	goto	l7139
  6901  00403C                     u8980:
  6902  00403C                     
  6903                           ; BSR set to: 0
  6904                           ;pff.c: 690:   res = dir_rewind(dj);
  6905  00403C  C0D9  F01D         	movff	follow_path@dj,dir_rewind@dj
  6906  004040  C0DA  F01E         	movff	follow_path@dj+1,dir_rewind@dj+1
  6907  004044  EC1D  F023         	call	_dir_rewind	;wreg free
  6908  004048  0100               	movlb	0	; () banked
  6909  00404A  6FE0               	movwf	follow_path@res& (0+255),b
  6910  00404C                     
  6911                           ; BSR set to: 0
  6912                           ;pff.c: 691:   dir[0] = 0;
  6913  00404C  C0DB  FFD9         	movff	follow_path@dir,fsr2l
  6914  004050  C0DC  FFDA         	movff	follow_path@dir+1,fsr2h
  6915  004054  0E00               	movlw	0
  6916  004056  6EDF               	movwf	indf2,c
  6917                           
  6918                           ;pff.c: 693:  } else {
  6919  004058  EF98  F020         	goto	l7161
  6920  00405C                     l7139:
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;pff.c: 695:    res = create_name(dj, &path);
  6924  00405C  C0D9  F00E         	movff	follow_path@dj,create_name@dj
  6925  004060  C0DA  F00F         	movff	follow_path@dj+1,create_name@dj+1
  6926  004064  0EDD               	movlw	low follow_path@path
  6927  004066  6E10               	movwf	create_name@path^0,c
  6928  004068  0E00               	movlw	high follow_path@path
  6929  00406A  6E11               	movwf	(create_name@path+1)^0,c
  6930  00406C  ECCC  F019         	call	_create_name	;wreg free
  6931  004070  0100               	movlb	0	; () banked
  6932  004072  6FE0               	movwf	follow_path@res& (0+255),b
  6933  004074                     
  6934                           ; BSR set to: 0
  6935                           ;pff.c: 696:    if (res != FR_OK) break;
  6936  004074  51E0               	movf	follow_path@res& (0+255),w,b
  6937  004076  B4D8               	btfsc	status,2,c
  6938  004078  EF40  F020         	goto	u8991
  6939  00407C  EF42  F020         	goto	u8990
  6940  004080                     u8991:
  6941  004080  EF44  F020         	goto	l7145
  6942  004084                     u8990:
  6943  004084  EF98  F020         	goto	l7161
  6944  004088                     l7145:
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;pff.c: 697:    res = dir_find(dj, dir);
  6948  004088  C0D9  F0D1         	movff	follow_path@dj,dir_find@dj
  6949  00408C  C0DA  F0D2         	movff	follow_path@dj+1,dir_find@dj+1
  6950  004090  C0DB  F0D3         	movff	follow_path@dir,dir_find@dir
  6951  004094  C0DC  F0D4         	movff	follow_path@dir+1,dir_find@dir+1
  6952  004098  EC4C  F021         	call	_dir_find	;wreg free
  6953  00409C  0100               	movlb	0	; () banked
  6954  00409E  6FE0               	movwf	follow_path@res& (0+255),b
  6955  0040A0                     
  6956                           ; BSR set to: 0
  6957                           ;pff.c: 698:    if (res != FR_OK) break;
  6958  0040A0  51E0               	movf	follow_path@res& (0+255),w,b
  6959  0040A2  B4D8               	btfsc	status,2,c
  6960  0040A4  EF56  F020         	goto	u9001
  6961  0040A8  EF58  F020         	goto	u9000
  6962  0040AC                     u9001:
  6963  0040AC  EF5A  F020         	goto	l7151
  6964  0040B0                     u9000:
  6965  0040B0  EF98  F020         	goto	l7161
  6966  0040B4                     l7151:
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;pff.c: 699:    if (dj->fn[11]) break;
  6970  0040B4  EE20 F002          	lfsr	2,2
  6971  0040B8  51D9               	movf	follow_path@dj& (0+255),w,b
  6972  0040BA  26D9               	addwf	fsr2l,f,c
  6973  0040BC  51DA               	movf	(follow_path@dj+1)& (0+255),w,b
  6974  0040BE  22DA               	addwfc	fsr2h,f,c
  6975  0040C0  EE10 F00B          	lfsr	1,11
  6976  0040C4  50DE               	movf	postinc2,w,c
  6977  0040C6  26E1               	addwf	fsr1l,f,c
  6978  0040C8  50DD               	movf	postdec2,w,c
  6979  0040CA  22E2               	addwfc	fsr1h,f,c
  6980  0040CC  50E7               	movf	indf1,w,c
  6981  0040CE  B4D8               	btfsc	status,2,c
  6982  0040D0  EF6C  F020         	goto	u9011
  6983  0040D4  EF6E  F020         	goto	u9010
  6984  0040D8                     u9011:
  6985  0040D8  EF70  F020         	goto	l7155
  6986  0040DC                     u9010:
  6987  0040DC  EF98  F020         	goto	l7161
  6988  0040E0                     l7155:
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;pff.c: 700:    if (!(dir[11] & 0x10)) {
  6992  0040E0  EE20 F00B          	lfsr	2,11
  6993  0040E4  51DB               	movf	follow_path@dir& (0+255),w,b
  6994  0040E6  26D9               	addwf	fsr2l,f,c
  6995  0040E8  51DC               	movf	(follow_path@dir+1)& (0+255),w,b
  6996  0040EA  22DA               	addwfc	fsr2h,f,c
  6997  0040EC  B8DF               	btfsc	indf2,4,c
  6998  0040EE  EF7B  F020         	goto	u9021
  6999  0040F2  EF7D  F020         	goto	u9020
  7000  0040F6                     u9021:
  7001  0040F6  EF81  F020         	goto	l7159
  7002  0040FA                     u9020:
  7003  0040FA                     
  7004                           ; BSR set to: 0
  7005                           ;pff.c: 701:     res = FR_NO_FILE; break;
  7006  0040FA  0E03               	movlw	3
  7007  0040FC  6FE0               	movwf	follow_path@res& (0+255),b
  7008  0040FE  EF98  F020         	goto	l7161
  7009  004102                     l7159:
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;pff.c: 703:    dj->sclust = get_clust(dir);
  7013  004102  C0DB  F006         	movff	follow_path@dir,get_clust@dir
  7014  004106  C0DC  F007         	movff	follow_path@dir+1,get_clust@dir+1
  7015  00410A  ECA3  F027         	call	_get_clust	;wreg free
  7016  00410E  0100               	movlb	0	; () banked
  7017  004110  EE20 F004          	lfsr	2,4
  7018  004114  51D9               	movf	follow_path@dj& (0+255),w,b
  7019  004116  26D9               	addwf	fsr2l,f,c
  7020  004118  51DA               	movf	(follow_path@dj+1)& (0+255),w,b
  7021  00411A  22DA               	addwfc	fsr2h,f,c
  7022  00411C  C006  FFDE         	movff	?_get_clust,postinc2
  7023  004120  C007  FFDE         	movff	?_get_clust+1,postinc2
  7024  004124  C008  FFDE         	movff	?_get_clust+2,postinc2
  7025  004128  C009  FFDE         	movff	?_get_clust+3,postinc2
  7026                           
  7027                           ;pff.c: 704:   }
  7028  00412C  EF2E  F020         	goto	l7139
  7029  004130                     l7161:
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;pff.c: 707:  return res;
  7033  004130  51E0               	movf	follow_path@res& (0+255),w,b
  7034  004132                     
  7035                           ; BSR set to: 0
  7036  004132  0012               	return		;funcret
  7037  004134                     __end_of_follow_path:
  7038                           	callstack 0
  7039                           
  7040 ;; *************** function _get_clust *****************
  7041 ;; Defined at:
  7042 ;;		line 410 in file "pff.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  dir             2    5[COMRAM] PTR unsigned char 
  7045 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  clst            4   17[COMRAM] unsigned long 
  7048 ;;  fs              2    0        PTR struct .
  7049 ;;		 -> NULL(0), main@fs(42), 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  4    5[COMRAM] unsigned long 
  7052 ;; Registers used:
  7053 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7059 ;;      Params:         4       0       0       0       0       0       0
  7060 ;;      Locals:         4       0       0       0       0       0       0
  7061 ;;      Temps:          8       0       0       0       0       0       0
  7062 ;;      Totals:        16       0       0       0       0       0       0
  7063 ;;Total ram usage:       16 bytes
  7064 ;; Hardware stack levels used: 1
  7065 ;; Hardware stack levels required when called: 1
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_follow_path
  7070 ;;		_pf_open
  7071 ;;		_pf_opendir
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text19
  7076  004F46                     __ptext19:
  7077                           	callstack 0
  7078  004F46                     _get_clust:
  7079                           	callstack 28
  7080  004F46                     
  7081                           ;pff.c: 419:   clst = (WORD)(((WORD)*((BYTE*)(dir+20)+1)<<8)|(WORD)*(BYTE*)(dir+20));
  7082  004F46  EE20 F015          	lfsr	2,21
  7083  004F4A  5006               	movf	get_clust@dir^0,w,c
  7084  004F4C  26D9               	addwf	fsr2l,f,c
  7085  004F4E  5007               	movf	(get_clust@dir+1)^0,w,c
  7086  004F50  22DA               	addwfc	fsr2h,f,c
  7087  004F52  50DF               	movf	indf2,w,c
  7088  004F54  6E0A               	movwf	??_get_clust^0,c
  7089  004F56  500A               	movf	??_get_clust^0,w,c
  7090  004F58  6E0C               	movwf	(??_get_clust+2)^0,c
  7091  004F5A  6A0B               	clrf	(??_get_clust+1)^0,c
  7092  004F5C  EE20 F014          	lfsr	2,20
  7093  004F60  5006               	movf	get_clust@dir^0,w,c
  7094  004F62  26D9               	addwf	fsr2l,f,c
  7095  004F64  5007               	movf	(get_clust@dir+1)^0,w,c
  7096  004F66  22DA               	addwfc	fsr2h,f,c
  7097  004F68  50DF               	movf	indf2,w,c
  7098  004F6A  6E0D               	movwf	(??_get_clust+3)^0,c
  7099  004F6C  500D               	movf	(??_get_clust+3)^0,w,c
  7100  004F6E  120B               	iorwf	(??_get_clust+1)^0,f,c
  7101  004F70  0E00               	movlw	0
  7102  004F72  120C               	iorwf	(??_get_clust+2)^0,f,c
  7103  004F74  C00B  F012         	movff	??_get_clust+1,get_clust@clst
  7104  004F78  C00C  F013         	movff	??_get_clust+2,get_clust@clst+1
  7105  004F7C  6A14               	clrf	(get_clust@clst+2)^0,c
  7106  004F7E  6A15               	clrf	(get_clust@clst+3)^0,c
  7107  004F80                     
  7108                           ;pff.c: 420:   clst <<= 16;
  7109  004F80  0E10               	movlw	16
  7110  004F82                     u5335:
  7111  004F82  90D8               	bcf	status,0,c
  7112  004F84  3612               	rlcf	get_clust@clst^0,f,c
  7113  004F86  3613               	rlcf	(get_clust@clst+1)^0,f,c
  7114  004F88  3614               	rlcf	(get_clust@clst+2)^0,f,c
  7115  004F8A  3615               	rlcf	(get_clust@clst+3)^0,f,c
  7116  004F8C  2EE8               	decfsz	wreg,f,c
  7117  004F8E  EFC1  F027         	goto	u5335
  7118  004F92                     
  7119                           ;pff.c: 422:  clst |= (WORD)(((WORD)*((BYTE*)(dir+26)+1)<<8)|(WORD)*(BYTE*)(dir+26));
  7120  004F92  EE20 F01B          	lfsr	2,27
  7121  004F96  5006               	movf	get_clust@dir^0,w,c
  7122  004F98  26D9               	addwf	fsr2l,f,c
  7123  004F9A  5007               	movf	(get_clust@dir+1)^0,w,c
  7124  004F9C  22DA               	addwfc	fsr2h,f,c
  7125  004F9E  50DF               	movf	indf2,w,c
  7126  004FA0  6E0A               	movwf	??_get_clust^0,c
  7127  004FA2  500A               	movf	??_get_clust^0,w,c
  7128  004FA4  6E0C               	movwf	(??_get_clust+2)^0,c
  7129  004FA6  6A0B               	clrf	(??_get_clust+1)^0,c
  7130  004FA8  EE20 F01A          	lfsr	2,26
  7131  004FAC  5006               	movf	get_clust@dir^0,w,c
  7132  004FAE  26D9               	addwf	fsr2l,f,c
  7133  004FB0  5007               	movf	(get_clust@dir+1)^0,w,c
  7134  004FB2  22DA               	addwfc	fsr2h,f,c
  7135  004FB4  50DF               	movf	indf2,w,c
  7136  004FB6  6E0D               	movwf	(??_get_clust+3)^0,c
  7137  004FB8  500D               	movf	(??_get_clust+3)^0,w,c
  7138  004FBA  100B               	iorwf	(??_get_clust+1)^0,w,c
  7139  004FBC  6E0E               	movwf	(??_get_clust+4)^0,c
  7140  004FBE  500C               	movf	(??_get_clust+2)^0,w,c
  7141  004FC0  6E0F               	movwf	(??_get_clust+5)^0,c
  7142  004FC2  6A10               	clrf	(??_get_clust+6)^0,c
  7143  004FC4  6A11               	clrf	(??_get_clust+7)^0,c
  7144  004FC6  500E               	movf	(??_get_clust+4)^0,w,c
  7145  004FC8  1212               	iorwf	get_clust@clst^0,f,c
  7146  004FCA  500F               	movf	(??_get_clust+5)^0,w,c
  7147  004FCC  1213               	iorwf	(get_clust@clst+1)^0,f,c
  7148  004FCE  5010               	movf	(??_get_clust+6)^0,w,c
  7149  004FD0  1214               	iorwf	(get_clust@clst+2)^0,f,c
  7150  004FD2  5011               	movf	(??_get_clust+7)^0,w,c
  7151  004FD4  1215               	iorwf	(get_clust@clst+3)^0,f,c
  7152  004FD6                     
  7153                           ;pff.c: 424:  return clst;
  7154  004FD6  C012  F006         	movff	get_clust@clst,?_get_clust
  7155  004FDA  C013  F007         	movff	get_clust@clst+1,?_get_clust+1
  7156  004FDE  C014  F008         	movff	get_clust@clst+2,?_get_clust+2
  7157  004FE2  C015  F009         	movff	get_clust@clst+3,?_get_clust+3
  7158  004FE6  0012               	return		;funcret
  7159  004FE8                     __end_of_get_clust:
  7160                           	callstack 0
  7161                           
  7162 ;; *************** function _dir_find *****************
  7163 ;; Defined at:
  7164 ;;		line 506 in file "pff.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  dj              2   81[BANK0 ] PTR struct .
  7167 ;;		 -> pf_open@dj(16), main@dir(16), 
  7168 ;;  dir             2   83[BANK0 ] PTR unsigned char 
  7169 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  res             1   88[BANK0 ] enum E2600
  7172 ;;  c               1   87[BANK0 ] unsigned char 
  7173 ;; Return value:  Size  Location     Type
  7174 ;;                  1    wreg      enum E2600
  7175 ;; Registers used:
  7176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7182 ;;      Params:         0       4       0       0       0       0       0
  7183 ;;      Locals:         0       2       0       0       0       0       0
  7184 ;;      Temps:          0       2       0       0       0       0       0
  7185 ;;      Totals:         0       8       0       0       0       0       0
  7186 ;;Total ram usage:        8 bytes
  7187 ;; Hardware stack levels used: 1
  7188 ;; Hardware stack levels required when called: 12
  7189 ;; This function calls:
  7190 ;;		_dir_next
  7191 ;;		_dir_rewind
  7192 ;;		_disk_readp
  7193 ;;		_mem_cmp
  7194 ;; This function is called by:
  7195 ;;		_follow_path
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text20
  7200  004298                     __ptext20:
  7201                           	callstack 0
  7202  004298                     _dir_find:
  7203                           	callstack 16
  7204  004298                     
  7205                           ;pff.c: 507:  DIR *dj,;pff.c: 508:  BYTE *dir;pff.c: 510: {;pff.c: 511:  FRESULT res;;pf
      +                          f.c: 512:  BYTE c;;pff.c: 515:  res = dir_rewind(dj);
  7206  004298  C0D1  F01D         	movff	dir_find@dj,dir_rewind@dj
  7207  00429C  C0D2  F01E         	movff	dir_find@dj+1,dir_rewind@dj+1
  7208  0042A0  EC1D  F023         	call	_dir_rewind	;wreg free
  7209  0042A4  0100               	movlb	0	; () banked
  7210  0042A6  6FD8               	movwf	dir_find@res& (0+255),b
  7211  0042A8                     
  7212                           ; BSR set to: 0
  7213                           ;pff.c: 516:  if (res != FR_OK) return res;
  7214  0042A8  51D8               	movf	dir_find@res& (0+255),w,b
  7215  0042AA  B4D8               	btfsc	status,2,c
  7216  0042AC  EF5A  F021         	goto	u8761
  7217  0042B0  EF5C  F021         	goto	u8760
  7218  0042B4                     u8761:
  7219  0042B4  EF60  F021         	goto	l7055
  7220  0042B8                     u8760:
  7221  0042B8                     l7051:
  7222  0042B8  0100               	movlb	0	; () banked
  7223  0042BA  51D8               	movf	dir_find@res& (0+255),w,b
  7224  0042BC  EFF5  F021         	goto	l238
  7225  0042C0                     l7055:
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;pff.c: 519:   res = disk_readp(dir, dj->sect, (dj->index % 16) * 32, 32)
  7229  0042C0  C0D3  F090         	movff	dir_find@dir,disk_readp@buff
  7230  0042C4  C0D4  F091         	movff	dir_find@dir+1,disk_readp@buff+1
  7231  0042C8  EE20 F00C          	lfsr	2,12
  7232  0042CC  51D1               	movf	dir_find@dj& (0+255),w,b
  7233  0042CE  26D9               	addwf	fsr2l,f,c
  7234  0042D0  51D2               	movf	(dir_find@dj+1)& (0+255),w,b
  7235  0042D2  22DA               	addwfc	fsr2h,f,c
  7236  0042D4  CFDE F092          	movff	postinc2,disk_readp@sector
  7237  0042D8  CFDE F093          	movff	postinc2,disk_readp@sector+1
  7238  0042DC  CFDE F094          	movff	postinc2,disk_readp@sector+2
  7239  0042E0  CFDE F095          	movff	postinc2,disk_readp@sector+3
  7240  0042E4  C0D1  FFD9         	movff	dir_find@dj,fsr2l
  7241  0042E8  C0D2  FFDA         	movff	dir_find@dj+1,fsr2h
  7242  0042EC  CFDE F0D5          	movff	postinc2,??_dir_find
  7243  0042F0  CFDD F0D6          	movff	postdec2,??_dir_find+1
  7244  0042F4  0E0F               	movlw	15
  7245  0042F6  17D5               	andwf	??_dir_find& (0+255),f,b
  7246  0042F8  0E00               	movlw	0
  7247  0042FA  17D6               	andwf	(??_dir_find+1)& (0+255),f,b
  7248  0042FC  0E05               	movlw	5
  7249  0042FE                     u8775:
  7250  0042FE  90D8               	bcf	status,0,c
  7251  004300  37D5               	rlcf	??_dir_find& (0+255),f,b
  7252  004302  37D6               	rlcf	(??_dir_find+1)& (0+255),f,b
  7253  004304  2EE8               	decfsz	wreg,f,c
  7254  004306  EF7F  F021         	goto	u8775
  7255  00430A  C0D5  F096         	movff	??_dir_find,disk_readp@offset
  7256  00430E  C0D6  F097         	movff	??_dir_find+1,disk_readp@offset+1
  7257  004312  0E00               	movlw	0
  7258  004314  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  7259  004316  0E20               	movlw	32
  7260  004318  6F98               	movwf	disk_readp@count& (0+255),b
  7261  00431A  EC64  F01B         	call	_disk_readp	;wreg free
  7262  00431E  0900               	iorlw	0
  7263  004320  A4D8               	btfss	status,2,c
  7264  004322  EF95  F021         	goto	u8781
  7265  004326  EF98  F021         	goto	u8780
  7266  00432A                     u8781:
  7267  00432A  0E01               	movlw	1
  7268  00432C  EF99  F021         	goto	u8790
  7269  004330                     u8780:
  7270  004330  0E00               	movlw	0
  7271  004332                     u8790:
  7272  004332  0100               	movlb	0	; () banked
  7273  004334  6FD8               	movwf	dir_find@res& (0+255),b
  7274  004336                     
  7275                           ; BSR set to: 0
  7276                           ;pff.c: 521:   if (res != FR_OK) break;
  7277  004336  51D8               	movf	dir_find@res& (0+255),w,b
  7278  004338  B4D8               	btfsc	status,2,c
  7279  00433A  EFA1  F021         	goto	u8801
  7280  00433E  EFA3  F021         	goto	u8800
  7281  004342                     u8801:
  7282  004342  EFA5  F021         	goto	l7061
  7283  004346                     u8800:
  7284  004346  EF5C  F021         	goto	l7051
  7285  00434A                     l7061:
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;pff.c: 522:   c = dir[0];
  7289  00434A  C0D3  FFD9         	movff	dir_find@dir,fsr2l
  7290  00434E  C0D4  FFDA         	movff	dir_find@dir+1,fsr2h
  7291  004352  50DF               	movf	indf2,w,c
  7292  004354  6FD7               	movwf	dir_find@c& (0+255),b
  7293  004356                     
  7294                           ; BSR set to: 0
  7295                           ;pff.c: 523:   if (c == 0) { res = FR_NO_FILE; break; }
  7296  004356  51D7               	movf	dir_find@c& (0+255),w,b
  7297  004358  A4D8               	btfss	status,2,c
  7298  00435A  EFB1  F021         	goto	u8811
  7299  00435E  EFB3  F021         	goto	u8810
  7300  004362                     u8811:
  7301  004362  EFB7  F021         	goto	l7067
  7302  004366                     u8810:
  7303  004366                     
  7304                           ; BSR set to: 0
  7305  004366  0E03               	movlw	3
  7306  004368  6FD8               	movwf	dir_find@res& (0+255),b
  7307  00436A  EF5C  F021         	goto	l7051
  7308  00436E                     l7067:
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;pff.c: 524:   if (!(dir[11] & 0x08) && !mem_cmp(dir, dj->fn, 11))
  7312  00436E  EE20 F00B          	lfsr	2,11
  7313  004372  51D3               	movf	dir_find@dir& (0+255),w,b
  7314  004374  26D9               	addwf	fsr2l,f,c
  7315  004376  51D4               	movf	(dir_find@dir+1)& (0+255),w,b
  7316  004378  22DA               	addwfc	fsr2h,f,c
  7317  00437A  B6DF               	btfsc	indf2,3,c
  7318  00437C  EFC2  F021         	goto	u8821
  7319  004380  EFC4  F021         	goto	u8820
  7320  004384                     u8821:
  7321  004384  EFE3  F021         	goto	l7073
  7322  004388                     u8820:
  7323  004388                     
  7324                           ; BSR set to: 0
  7325  004388  C0D3  F006         	movff	dir_find@dir,mem_cmp@dst
  7326  00438C  C0D4  F007         	movff	dir_find@dir+1,mem_cmp@dst+1
  7327  004390  EE20 F002          	lfsr	2,2
  7328  004394  51D1               	movf	dir_find@dj& (0+255),w,b
  7329  004396  26D9               	addwf	fsr2l,f,c
  7330  004398  51D2               	movf	(dir_find@dj+1)& (0+255),w,b
  7331  00439A  22DA               	addwfc	fsr2h,f,c
  7332  00439C  CFDE F008          	movff	postinc2,mem_cmp@src
  7333  0043A0  CFDD F009          	movff	postdec2,mem_cmp@src+1
  7334  0043A4  0E00               	movlw	0
  7335  0043A6  6E0B               	movwf	(mem_cmp@cnt+1)^0,c
  7336  0043A8  0E0B               	movlw	11
  7337  0043AA  6E0A               	movwf	mem_cmp@cnt^0,c
  7338  0043AC  ECC2  F028         	call	_mem_cmp	;wreg free
  7339  0043B0  5006               	movf	?_mem_cmp^0,w,c
  7340  0043B2  1007               	iorwf	(?_mem_cmp+1)^0,w,c
  7341  0043B4  A4D8               	btfss	status,2,c
  7342  0043B6  EFDF  F021         	goto	u8831
  7343  0043BA  EFE1  F021         	goto	u8830
  7344  0043BE                     u8831:
  7345  0043BE  EFE3  F021         	goto	l7073
  7346  0043C2                     u8830:
  7347  0043C2  EF5C  F021         	goto	l7051
  7348  0043C6                     l7073:
  7349                           
  7350                           ;pff.c: 526:   res = dir_next(dj);
  7351  0043C6  C0D1  F0C0         	movff	dir_find@dj,dir_next@dj
  7352  0043CA  C0D2  F0C1         	movff	dir_find@dj+1,dir_next@dj+1
  7353  0043CE  ECDC  F015         	call	_dir_next	;wreg free
  7354  0043D2  0100               	movlb	0	; () banked
  7355  0043D4  6FD8               	movwf	dir_find@res& (0+255),b
  7356  0043D6                     
  7357                           ; BSR set to: 0
  7358                           ;pff.c: 527:  } while (res == FR_OK);
  7359  0043D6  51D8               	movf	dir_find@res& (0+255),w,b
  7360  0043D8  B4D8               	btfsc	status,2,c
  7361  0043DA  EFF1  F021         	goto	u8841
  7362  0043DE  EFF3  F021         	goto	u8840
  7363  0043E2                     u8841:
  7364  0043E2  EF60  F021         	goto	l7055
  7365  0043E6                     u8840:
  7366  0043E6  EF5C  F021         	goto	l7051
  7367  0043EA                     l238:
  7368                           
  7369                           ; BSR set to: 0
  7370  0043EA  0012               	return		;funcret
  7371  0043EC                     __end_of_dir_find:
  7372                           	callstack 0
  7373                           
  7374 ;; *************** function _mem_cmp *****************
  7375 ;; Defined at:
  7376 ;;		line 332 in file "pff.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  dst             2    5[COMRAM] PTR const void 
  7379 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  7380 ;;  src             2    7[COMRAM] PTR const void 
  7381 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  7382 ;;  cnt             2    9[COMRAM] int 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;  r               2   17[COMRAM] int 
  7385 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7386 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  7387 ;;  d               2   13[COMRAM] PTR const unsigned char 
  7388 ;;		 -> pf_opendir@dir(32), pf_open@dir(32), 
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  2    5[COMRAM] int 
  7391 ;; Registers used:
  7392 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7398 ;;      Params:         6       0       0       0       0       0       0
  7399 ;;      Locals:         6       0       0       0       0       0       0
  7400 ;;      Temps:          2       0       0       0       0       0       0
  7401 ;;      Totals:        14       0       0       0       0       0       0
  7402 ;;Total ram usage:       14 bytes
  7403 ;; Hardware stack levels used: 1
  7404 ;; Hardware stack levels required when called: 1
  7405 ;; This function calls:
  7406 ;;		Nothing
  7407 ;; This function is called by:
  7408 ;;		_dir_find
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text21
  7413  005184                     __ptext21:
  7414                           	callstack 0
  7415  005184                     _mem_cmp:
  7416                           	callstack 26
  7417  005184                     
  7418                           ;pff.c: 333:  const char *d = (const char *)dst, *s = (const char *)src;
  7419  005184  C006  F00E         	movff	mem_cmp@dst,mem_cmp@d
  7420  005188  C007  F00F         	movff	mem_cmp@dst+1,mem_cmp@d+1
  7421  00518C  C008  F010         	movff	mem_cmp@src,mem_cmp@s
  7422  005190  C009  F011         	movff	mem_cmp@src+1,mem_cmp@s+1
  7423  005194                     
  7424                           ;pff.c: 334:  int r = 0;
  7425  005194  0E00               	movlw	0
  7426  005196  6E13               	movwf	(mem_cmp@r+1)^0,c
  7427  005198  0E00               	movlw	0
  7428  00519A  6E12               	movwf	mem_cmp@r^0,c
  7429  00519C                     l4763:
  7430  00519C  060A               	decf	mem_cmp@cnt^0,f,c
  7431  00519E  A0D8               	btfss	status,0,c
  7432  0051A0  060B               	decf	(mem_cmp@cnt+1)^0,f,c
  7433  0051A2  280A               	incf	mem_cmp@cnt^0,w,c
  7434  0051A4  E108               	bnz	u5190
  7435  0051A6  280B               	incf	(mem_cmp@cnt+1)^0,w,c
  7436  0051A8  B4D8               	btfsc	status,2,c
  7437  0051AA  EFD9  F028         	goto	u5191
  7438  0051AE  EFDB  F028         	goto	u5190
  7439  0051B2                     u5191:
  7440  0051B2  EFFA  F028         	goto	l187
  7441  0051B6                     u5190:
  7442  0051B6  C00E  FFD9         	movff	mem_cmp@d,fsr2l
  7443  0051BA  C00F  FFDA         	movff	mem_cmp@d+1,fsr2h
  7444  0051BE  4A0E               	infsnz	mem_cmp@d^0,f,c
  7445  0051C0  2A0F               	incf	(mem_cmp@d+1)^0,f,c
  7446  0051C2  50DF               	movf	indf2,w,c
  7447  0051C4  6E0C               	movwf	??_mem_cmp^0,c
  7448  0051C6  C010  FFD9         	movff	mem_cmp@s,fsr2l
  7449  0051CA  C011  FFDA         	movff	mem_cmp@s+1,fsr2h
  7450  0051CE  4A10               	infsnz	mem_cmp@s^0,f,c
  7451  0051D0  2A11               	incf	(mem_cmp@s+1)^0,f,c
  7452  0051D2  50DF               	movf	indf2,w,c
  7453  0051D4  6E0D               	movwf	(??_mem_cmp+1)^0,c
  7454  0051D6  500D               	movf	(??_mem_cmp+1)^0,w,c
  7455  0051D8  5C0C               	subwf	??_mem_cmp^0,w,c
  7456  0051DA  6E12               	movwf	mem_cmp@r^0,c
  7457  0051DC  6A13               	clrf	(mem_cmp@r+1)^0,c
  7458  0051DE  A0D8               	btfss	status,0,c
  7459  0051E0  0613               	decf	(mem_cmp@r+1)^0,f,c
  7460  0051E2  5012               	movf	mem_cmp@r^0,w,c
  7461  0051E4  1013               	iorwf	(mem_cmp@r+1)^0,w,c
  7462  0051E6  B4D8               	btfsc	status,2,c
  7463  0051E8  EFF8  F028         	goto	u5201
  7464  0051EC  EFFA  F028         	goto	u5200
  7465  0051F0                     u5201:
  7466  0051F0  EFCE  F028         	goto	l4763
  7467  0051F4                     u5200:
  7468  0051F4                     l187:
  7469                           
  7470                           ;pff.c: 336:  return r;
  7471  0051F4  C012  F006         	movff	mem_cmp@r,?_mem_cmp
  7472  0051F8  C013  F007         	movff	mem_cmp@r+1,?_mem_cmp+1
  7473  0051FC  0012               	return		;funcret
  7474  0051FE                     __end_of_mem_cmp:
  7475                           	callstack 0
  7476                           
  7477 ;; *************** function _dir_rewind *****************
  7478 ;; Defined at:
  7479 ;;		line 433 in file "pff.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;  dj              2   28[COMRAM] PTR struct .
  7482 ;;		 -> pf_open@dj(16), main@dir(16), 
  7483 ;; Auto vars:     Size  Location     Type
  7484 ;;  clst            4   40[COMRAM] unsigned long 
  7485 ;;  fs              2   38[COMRAM] PTR struct .
  7486 ;;		 -> NULL(0), main@fs(42), 
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  1    wreg      enum E2600
  7489 ;; Registers used:
  7490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7496 ;;      Params:         2       0       0       0       0       0       0
  7497 ;;      Locals:        10       0       0       0       0       0       0
  7498 ;;      Temps:          4       0       0       0       0       0       0
  7499 ;;      Totals:        16       0       0       0       0       0       0
  7500 ;;Total ram usage:       16 bytes
  7501 ;; Hardware stack levels used: 1
  7502 ;; Hardware stack levels required when called: 3
  7503 ;; This function calls:
  7504 ;;		_clust2sect
  7505 ;; This function is called by:
  7506 ;;		_dir_find
  7507 ;;		_follow_path
  7508 ;;		_pf_opendir
  7509 ;;		_pf_readdir
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           	psect	text22
  7514  00463A                     __ptext22:
  7515                           	callstack 0
  7516  00463A                     _dir_rewind:
  7517                           	callstack 26
  7518  00463A                     
  7519                           ;pff.c: 434:  DIR *dj;pff.c: 436: {;pff.c: 437:  DWORD clst;;pff.c: 438:  FATFS *fs = Fa
      +                          tFs;
  7520  00463A  C0FD  F027         	movff	_FatFs,dir_rewind@fs
  7521  00463E  C0FE  F028         	movff	_FatFs+1,dir_rewind@fs+1
  7522  004642                     
  7523                           ;pff.c: 441:  dj->index = 0;
  7524  004642  C01D  FFD9         	movff	dir_rewind@dj,fsr2l
  7525  004646  C01E  FFDA         	movff	dir_rewind@dj+1,fsr2h
  7526  00464A  0E00               	movlw	0
  7527  00464C  6EDE               	movwf	postinc2,c
  7528  00464E  0E00               	movlw	0
  7529  004650  6EDD               	movwf	postdec2,c
  7530  004652                     
  7531                           ;pff.c: 442:  clst = dj->sclust;
  7532  004652  EE20 F004          	lfsr	2,4
  7533  004656  501D               	movf	dir_rewind@dj^0,w,c
  7534  004658  26D9               	addwf	fsr2l,f,c
  7535  00465A  501E               	movf	(dir_rewind@dj+1)^0,w,c
  7536  00465C  22DA               	addwfc	fsr2h,f,c
  7537  00465E  CFDE F029          	movff	postinc2,dir_rewind@clst
  7538  004662  CFDE F02A          	movff	postinc2,dir_rewind@clst+1
  7539  004666  CFDE F02B          	movff	postinc2,dir_rewind@clst+2
  7540  00466A  CFDE F02C          	movff	postinc2,dir_rewind@clst+3
  7541  00466E                     
  7542                           ;pff.c: 443:  if (clst == 1 || clst >= fs->n_fatent)
  7543  00466E  0429               	decf	dir_rewind@clst^0,w,c
  7544  004670  102A               	iorwf	(dir_rewind@clst+1)^0,w,c
  7545  004672  102B               	iorwf	(dir_rewind@clst+2)^0,w,c
  7546  004674  102C               	iorwf	(dir_rewind@clst+3)^0,w,c
  7547  004676  B4D8               	btfsc	status,2,c
  7548  004678  EF40  F023         	goto	u5211
  7549  00467C  EF42  F023         	goto	u5210
  7550  004680                     u5211:
  7551  004680  EF57  F023         	goto	l4777
  7552  004684                     u5210:
  7553  004684  EE20 F006          	lfsr	2,6
  7554  004688  5027               	movf	dir_rewind@fs^0,w,c
  7555  00468A  26D9               	addwf	fsr2l,f,c
  7556  00468C  5028               	movf	(dir_rewind@fs+1)^0,w,c
  7557  00468E  22DA               	addwfc	fsr2h,f,c
  7558  004690  50DE               	movf	postinc2,w,c
  7559  004692  5C29               	subwf	dir_rewind@clst^0,w,c
  7560  004694  50DE               	movf	postinc2,w,c
  7561  004696  582A               	subwfb	(dir_rewind@clst+1)^0,w,c
  7562  004698  50DE               	movf	postinc2,w,c
  7563  00469A  582B               	subwfb	(dir_rewind@clst+2)^0,w,c
  7564  00469C  50DE               	movf	postinc2,w,c
  7565  00469E  582C               	subwfb	(dir_rewind@clst+3)^0,w,c
  7566  0046A0  A0D8               	btfss	status,0,c
  7567  0046A2  EF55  F023         	goto	u5221
  7568  0046A6  EF57  F023         	goto	u5220
  7569  0046AA                     u5221:
  7570  0046AA  EF5A  F023         	goto	l4781
  7571  0046AE                     u5220:
  7572  0046AE                     l4777:
  7573                           
  7574                           ;pff.c: 444:   return FR_DISK_ERR;
  7575  0046AE  0E01               	movlw	1
  7576  0046B0  EFA2  F023         	goto	l214
  7577  0046B4                     l4781:
  7578  0046B4  5029               	movf	dir_rewind@clst^0,w,c
  7579  0046B6  102A               	iorwf	(dir_rewind@clst+1)^0,w,c
  7580  0046B8  102B               	iorwf	(dir_rewind@clst+2)^0,w,c
  7581  0046BA  102C               	iorwf	(dir_rewind@clst+3)^0,w,c
  7582  0046BC  A4D8               	btfss	status,2,c
  7583  0046BE  EF63  F023         	goto	u5231
  7584  0046C2  EF65  F023         	goto	u5230
  7585  0046C6                     u5231:
  7586  0046C6  EF73  F023         	goto	l215
  7587  0046CA                     u5230:
  7588  0046CA                     
  7589                           ;pff.c: 446:   clst = (DWORD)fs->dirbase;
  7590  0046CA  EE20 F00E          	lfsr	2,14
  7591  0046CE  5027               	movf	dir_rewind@fs^0,w,c
  7592  0046D0  26D9               	addwf	fsr2l,f,c
  7593  0046D2  5028               	movf	(dir_rewind@fs+1)^0,w,c
  7594  0046D4  22DA               	addwfc	fsr2h,f,c
  7595  0046D6  CFDE F029          	movff	postinc2,dir_rewind@clst
  7596  0046DA  CFDE F02A          	movff	postinc2,dir_rewind@clst+1
  7597  0046DE  CFDE F02B          	movff	postinc2,dir_rewind@clst+2
  7598  0046E2  CFDE F02C          	movff	postinc2,dir_rewind@clst+3
  7599  0046E6                     l215:
  7600                           
  7601                           ;pff.c: 447:  dj->clust = clst;
  7602  0046E6  EE20 F008          	lfsr	2,8
  7603  0046EA  501D               	movf	dir_rewind@dj^0,w,c
  7604  0046EC  26D9               	addwf	fsr2l,f,c
  7605  0046EE  501E               	movf	(dir_rewind@dj+1)^0,w,c
  7606  0046F0  22DA               	addwfc	fsr2h,f,c
  7607  0046F2  C029  FFDE         	movff	dir_rewind@clst,postinc2
  7608  0046F6  C02A  FFDE         	movff	dir_rewind@clst+1,postinc2
  7609  0046FA  C02B  FFDE         	movff	dir_rewind@clst+2,postinc2
  7610  0046FE  C02C  FFDE         	movff	dir_rewind@clst+3,postinc2
  7611  004702  C029  F012         	movff	dir_rewind@clst,clust2sect@clst
  7612  004706  C02A  F013         	movff	dir_rewind@clst+1,clust2sect@clst+1
  7613  00470A  C02B  F014         	movff	dir_rewind@clst+2,clust2sect@clst+2
  7614  00470E  C02C  F015         	movff	dir_rewind@clst+3,clust2sect@clst+3
  7615  004712  ECD4  F025         	call	_clust2sect	;wreg free
  7616  004716  C012  F023         	movff	?_clust2sect,_dir_rewind$703
  7617  00471A  C013  F024         	movff	?_clust2sect+1,_dir_rewind$703+1
  7618  00471E  C014  F025         	movff	?_clust2sect+2,_dir_rewind$703+2
  7619  004722  C015  F026         	movff	?_clust2sect+3,_dir_rewind$703+3
  7620  004726  EE20 F00C          	lfsr	2,12
  7621  00472A  501D               	movf	dir_rewind@dj^0,w,c
  7622  00472C  26D9               	addwf	fsr2l,f,c
  7623  00472E  501E               	movf	(dir_rewind@dj+1)^0,w,c
  7624  004730  22DA               	addwfc	fsr2h,f,c
  7625  004732  C023  FFDE         	movff	_dir_rewind$703,postinc2
  7626  004736  C024  FFDE         	movff	_dir_rewind$703+1,postinc2
  7627  00473A  C025  FFDE         	movff	_dir_rewind$703+2,postinc2
  7628  00473E  C026  FFDE         	movff	_dir_rewind$703+3,postinc2
  7629  004742                     
  7630                           ;pff.c: 450:  return FR_OK;
  7631  004742  0E00               	movlw	0
  7632  004744                     l214:
  7633  004744  0012               	return		;funcret
  7634  004746                     __end_of_dir_rewind:
  7635                           	callstack 0
  7636                           
  7637 ;; *************** function _dir_next *****************
  7638 ;; Defined at:
  7639 ;;		line 461 in file "pff.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;  dj              2   64[BANK0 ] PTR struct .
  7642 ;;		 -> pf_open@dj(16), main@dir(16), 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;  clst            4   75[BANK0 ] unsigned long 
  7645 ;;  i               2   79[BANK0 ] unsigned short 
  7646 ;;  fs              2   73[BANK0 ] PTR struct .
  7647 ;;		 -> NULL(0), main@fs(42), 
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1    wreg      enum E2600
  7650 ;; Registers used:
  7651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7657 ;;      Params:         0       2       0       0       0       0       0
  7658 ;;      Locals:         0       8       0       0       0       0       0
  7659 ;;      Temps:          0       7       0       0       0       0       0
  7660 ;;      Totals:         0      17       0       0       0       0       0
  7661 ;;Total ram usage:       17 bytes
  7662 ;; Hardware stack levels used: 1
  7663 ;; Hardware stack levels required when called: 11
  7664 ;; This function calls:
  7665 ;;		_clust2sect
  7666 ;;		_get_fat
  7667 ;; This function is called by:
  7668 ;;		_dir_find
  7669 ;;		_dir_read
  7670 ;;		_pf_readdir
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           	psect	text23
  7675  002BB8                     __ptext23:
  7676                           	callstack 0
  7677  002BB8                     _dir_next:
  7678                           	callstack 17
  7679  002BB8                     
  7680                           ;pff.c: 462:  DIR *dj;pff.c: 464: {;pff.c: 465:  DWORD clst;;pff.c: 466:  WORD i;;pff.c:
      +                           467:  FATFS *fs = FatFs;
  7681  002BB8  C0FD  F0C9         	movff	_FatFs,dir_next@fs
  7682  002BBC  C0FE  F0CA         	movff	_FatFs+1,dir_next@fs+1
  7683  002BC0                     
  7684                           ;pff.c: 470:  i = dj->index + 1;
  7685  002BC0  C0C0  FFD9         	movff	dir_next@dj,fsr2l
  7686  002BC4  C0C1  FFDA         	movff	dir_next@dj+1,fsr2h
  7687  002BC8  CFDE F0C2          	movff	postinc2,??_dir_next
  7688  002BCC  CFDD F0C3          	movff	postdec2,??_dir_next+1
  7689  002BD0  0E01               	movlw	1
  7690  002BD2  0100               	movlb	0	; () banked
  7691  002BD4  25C2               	addwf	??_dir_next& (0+255),w,b
  7692  002BD6  6FCF               	movwf	dir_next@i& (0+255),b
  7693  002BD8  0E00               	movlw	0
  7694  002BDA  21C3               	addwfc	(??_dir_next+1)& (0+255),w,b
  7695  002BDC  6FD0               	movwf	(dir_next@i+1)& (0+255),b
  7696  002BDE                     
  7697                           ; BSR set to: 0
  7698                           ;pff.c: 471:  if (!i || !dj->sect)
  7699  002BDE  51CF               	movf	dir_next@i& (0+255),w,b
  7700  002BE0  11D0               	iorwf	(dir_next@i+1)& (0+255),w,b
  7701  002BE2  B4D8               	btfsc	status,2,c
  7702  002BE4  EFF6  F015         	goto	u8671
  7703  002BE8  EFF8  F015         	goto	u8670
  7704  002BEC                     u8671:
  7705  002BEC  EF09  F016         	goto	l7007
  7706  002BF0                     u8670:
  7707  002BF0                     
  7708                           ; BSR set to: 0
  7709  002BF0  EE20 F00C          	lfsr	2,12
  7710  002BF4  51C0               	movf	dir_next@dj& (0+255),w,b
  7711  002BF6  26D9               	addwf	fsr2l,f,c
  7712  002BF8  51C1               	movf	(dir_next@dj+1)& (0+255),w,b
  7713  002BFA  22DA               	addwfc	fsr2h,f,c
  7714  002BFC  50DE               	movf	postinc2,w,c
  7715  002BFE  10DE               	iorwf	postinc2,w,c
  7716  002C00  10DE               	iorwf	postinc2,w,c
  7717  002C02  10DE               	iorwf	postinc2,w,c
  7718  002C04  A4D8               	btfss	status,2,c
  7719  002C06  EF07  F016         	goto	u8681
  7720  002C0A  EF09  F016         	goto	u8680
  7721  002C0E                     u8681:
  7722  002C0E  EF0C  F016         	goto	l7011
  7723  002C12                     u8680:
  7724  002C12                     l7007:
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;pff.c: 472:   return FR_NO_FILE;
  7728  002C12  0E03               	movlw	3
  7729  002C14  EFE4  F016         	goto	l227
  7730  002C18                     l7011:
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;pff.c: 474:  if (!(i % 16)) {
  7734  002C18  0E0F               	movlw	15
  7735  002C1A  15CF               	andwf	dir_next@i& (0+255),w,b
  7736  002C1C  6FC2               	movwf	??_dir_next& (0+255),b
  7737  002C1E  0E00               	movlw	0
  7738  002C20  15D0               	andwf	(dir_next@i+1)& (0+255),w,b
  7739  002C22  6FC3               	movwf	(??_dir_next+1)& (0+255),b
  7740  002C24  51C2               	movf	??_dir_next& (0+255),w,b
  7741  002C26  11C3               	iorwf	(??_dir_next+1)& (0+255),w,b
  7742  002C28  A4D8               	btfss	status,2,c
  7743  002C2A  EF19  F016         	goto	u8691
  7744  002C2E  EF1B  F016         	goto	u8690
  7745  002C32                     u8691:
  7746  002C32  EFDB  F016         	goto	l7041
  7747  002C36                     u8690:
  7748  002C36                     
  7749                           ; BSR set to: 0
  7750                           ;pff.c: 475:   dj->sect++;
  7751  002C36  EE20 F00C          	lfsr	2,12
  7752  002C3A  51C0               	movf	dir_next@dj& (0+255),w,b
  7753  002C3C  26D9               	addwf	fsr2l,f,c
  7754  002C3E  51C1               	movf	(dir_next@dj+1)& (0+255),w,b
  7755  002C40  22DA               	addwfc	fsr2h,f,c
  7756  002C42  2ADE               	incf	postinc2,f,c
  7757  002C44  0E00               	movlw	0
  7758  002C46  22DE               	addwfc	postinc2,f,c
  7759  002C48  22DE               	addwfc	postinc2,f,c
  7760  002C4A  22DE               	addwfc	postinc2,f,c
  7761                           
  7762                           ;pff.c: 477:   if (dj->clust == 0) {
  7763  002C4C  EE20 F008          	lfsr	2,8
  7764  002C50  51C0               	movf	dir_next@dj& (0+255),w,b
  7765  002C52  26D9               	addwf	fsr2l,f,c
  7766  002C54  51C1               	movf	(dir_next@dj+1)& (0+255),w,b
  7767  002C56  22DA               	addwfc	fsr2h,f,c
  7768  002C58  50DE               	movf	postinc2,w,c
  7769  002C5A  10DE               	iorwf	postinc2,w,c
  7770  002C5C  10DE               	iorwf	postinc2,w,c
  7771  002C5E  10DE               	iorwf	postinc2,w,c
  7772  002C60  A4D8               	btfss	status,2,c
  7773  002C62  EF35  F016         	goto	u8701
  7774  002C66  EF37  F016         	goto	u8700
  7775  002C6A                     u8701:
  7776  002C6A  EF4A  F016         	goto	l7021
  7777  002C6E                     u8700:
  7778  002C6E                     
  7779                           ; BSR set to: 0
  7780                           ;pff.c: 478:    if (i >= fs->n_rootdir)
  7781  002C6E  EE20 F004          	lfsr	2,4
  7782  002C72  51C9               	movf	dir_next@fs& (0+255),w,b
  7783  002C74  26D9               	addwf	fsr2l,f,c
  7784  002C76  51CA               	movf	(dir_next@fs+1)& (0+255),w,b
  7785  002C78  22DA               	addwfc	fsr2h,f,c
  7786  002C7A  50DE               	movf	postinc2,w,c
  7787  002C7C  5DCF               	subwf	dir_next@i& (0+255),w,b
  7788  002C7E  50DE               	movf	postinc2,w,c
  7789  002C80  59D0               	subwfb	(dir_next@i+1)& (0+255),w,b
  7790  002C82  A0D8               	btfss	status,0,c
  7791  002C84  EF46  F016         	goto	u8711
  7792  002C88  EF48  F016         	goto	u8710
  7793  002C8C                     u8711:
  7794  002C8C  EFDB  F016         	goto	l7041
  7795  002C90                     u8710:
  7796  002C90  EF09  F016         	goto	l7007
  7797  002C94                     l7021:
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;pff.c: 482:    if (((i / 16) & (fs->csize - 1)) == 0) {
  7801  002C94  C0CF  F0C2         	movff	dir_next@i,??_dir_next
  7802  002C98  C0D0  F0C3         	movff	dir_next@i+1,??_dir_next+1
  7803  002C9C  0E04               	movlw	4
  7804  002C9E  6FC4               	movwf	(??_dir_next+2)& (0+255),b
  7805  002CA0                     u8725:
  7806  002CA0  90D8               	bcf	status,0,c
  7807  002CA2  33C3               	rrcf	(??_dir_next+1)& (0+255),f,b
  7808  002CA4  33C2               	rrcf	??_dir_next& (0+255),f,b
  7809  002CA6  2FC4               	decfsz	(??_dir_next+2)& (0+255),f,b
  7810  002CA8  EF50  F016         	goto	u8725
  7811  002CAC  0EFF               	movlw	255
  7812  002CAE  6FC5               	movwf	(??_dir_next+3)& (0+255),b
  7813  002CB0  0EFF               	movlw	255
  7814  002CB2  6FC6               	movwf	(??_dir_next+4)& (0+255),b
  7815  002CB4  EE20 F002          	lfsr	2,2
  7816  002CB8  51C9               	movf	dir_next@fs& (0+255),w,b
  7817  002CBA  26D9               	addwf	fsr2l,f,c
  7818  002CBC  51CA               	movf	(dir_next@fs+1)& (0+255),w,b
  7819  002CBE  22DA               	addwfc	fsr2h,f,c
  7820  002CC0  50DF               	movf	indf2,w,c
  7821  002CC2  6FC7               	movwf	(??_dir_next+5)& (0+255),b
  7822  002CC4  6BC8               	clrf	(??_dir_next+6)& (0+255),b
  7823  002CC6  51C5               	movf	(??_dir_next+3)& (0+255),w,b
  7824  002CC8  27C7               	addwf	(??_dir_next+5)& (0+255),f,b
  7825  002CCA  51C6               	movf	(??_dir_next+4)& (0+255),w,b
  7826  002CCC  23C8               	addwfc	(??_dir_next+6)& (0+255),f,b
  7827  002CCE  51C2               	movf	??_dir_next& (0+255),w,b
  7828  002CD0  17C7               	andwf	(??_dir_next+5)& (0+255),f,b
  7829  002CD2  51C3               	movf	(??_dir_next+1)& (0+255),w,b
  7830  002CD4  17C8               	andwf	(??_dir_next+6)& (0+255),f,b
  7831  002CD6  51C7               	movf	(??_dir_next+5)& (0+255),w,b
  7832  002CD8  11C8               	iorwf	(??_dir_next+6)& (0+255),w,b
  7833  002CDA  A4D8               	btfss	status,2,c
  7834  002CDC  EF72  F016         	goto	u8731
  7835  002CE0  EF74  F016         	goto	u8730
  7836  002CE4                     u8731:
  7837  002CE4  EFDB  F016         	goto	l7041
  7838  002CE8                     u8730:
  7839  002CE8                     
  7840                           ; BSR set to: 0
  7841                           ;pff.c: 483:     clst = get_fat(dj->clust);
  7842  002CE8  EE20 F008          	lfsr	2,8
  7843  002CEC  51C0               	movf	dir_next@dj& (0+255),w,b
  7844  002CEE  26D9               	addwf	fsr2l,f,c
  7845  002CF0  51C1               	movf	(dir_next@dj+1)& (0+255),w,b
  7846  002CF2  22DA               	addwfc	fsr2h,f,c
  7847  002CF4  CFDE F0A0          	movff	postinc2,get_fat@clst
  7848  002CF8  CFDE F0A1          	movff	postinc2,get_fat@clst+1
  7849  002CFC  CFDE F0A2          	movff	postinc2,get_fat@clst+2
  7850  002D00  CFDE F0A3          	movff	postinc2,get_fat@clst+3
  7851  002D04  ECEB  F018         	call	_get_fat	;wreg free
  7852  002D08  C0A0  F0CB         	movff	?_get_fat,dir_next@clst
  7853  002D0C  C0A1  F0CC         	movff	?_get_fat+1,dir_next@clst+1
  7854  002D10  C0A2  F0CD         	movff	?_get_fat+2,dir_next@clst+2
  7855  002D14  C0A3  F0CE         	movff	?_get_fat+3,dir_next@clst+3
  7856  002D18                     
  7857                           ;pff.c: 484:     if (clst <= 1) return FR_DISK_ERR;
  7858  002D18  0100               	movlb	0	; () banked
  7859  002D1A  51CE               	movf	(dir_next@clst+3)& (0+255),w,b
  7860  002D1C  11CD               	iorwf	(dir_next@clst+2)& (0+255),w,b
  7861  002D1E  11CC               	iorwf	(dir_next@clst+1)& (0+255),w,b
  7862  002D20  E107               	bnz	u8741
  7863  002D22  0E02               	movlw	2
  7864  002D24  5DCB               	subwf	dir_next@clst& (0+255),w,b
  7865  002D26  B0D8               	btfsc	status,0,c
  7866  002D28  EF98  F016         	goto	u8741
  7867  002D2C  EF9A  F016         	goto	u8740
  7868  002D30                     u8741:
  7869  002D30  EF9D  F016         	goto	l7031
  7870  002D34                     u8740:
  7871  002D34                     
  7872                           ; BSR set to: 0
  7873  002D34  0E01               	movlw	1
  7874  002D36  EFE4  F016         	goto	l227
  7875  002D3A                     l7031:
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;pff.c: 485:     if (clst >= fs->n_fatent)
  7879  002D3A  EE20 F006          	lfsr	2,6
  7880  002D3E  51C9               	movf	dir_next@fs& (0+255),w,b
  7881  002D40  26D9               	addwf	fsr2l,f,c
  7882  002D42  51CA               	movf	(dir_next@fs+1)& (0+255),w,b
  7883  002D44  22DA               	addwfc	fsr2h,f,c
  7884  002D46  50DE               	movf	postinc2,w,c
  7885  002D48  5DCB               	subwf	dir_next@clst& (0+255),w,b
  7886  002D4A  50DE               	movf	postinc2,w,c
  7887  002D4C  59CC               	subwfb	(dir_next@clst+1)& (0+255),w,b
  7888  002D4E  50DE               	movf	postinc2,w,c
  7889  002D50  59CD               	subwfb	(dir_next@clst+2)& (0+255),w,b
  7890  002D52  50DE               	movf	postinc2,w,c
  7891  002D54  59CE               	subwfb	(dir_next@clst+3)& (0+255),w,b
  7892  002D56  A0D8               	btfss	status,0,c
  7893  002D58  EFB0  F016         	goto	u8751
  7894  002D5C  EFB2  F016         	goto	u8750
  7895  002D60                     u8751:
  7896  002D60  EFB4  F016         	goto	l7037
  7897  002D64                     u8750:
  7898  002D64  EF09  F016         	goto	l7007
  7899  002D68                     l7037:
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;pff.c: 487:     dj->clust = clst;
  7903  002D68  EE20 F008          	lfsr	2,8
  7904  002D6C  51C0               	movf	dir_next@dj& (0+255),w,b
  7905  002D6E  26D9               	addwf	fsr2l,f,c
  7906  002D70  51C1               	movf	(dir_next@dj+1)& (0+255),w,b
  7907  002D72  22DA               	addwfc	fsr2h,f,c
  7908  002D74  C0CB  FFDE         	movff	dir_next@clst,postinc2
  7909  002D78  C0CC  FFDE         	movff	dir_next@clst+1,postinc2
  7910  002D7C  C0CD  FFDE         	movff	dir_next@clst+2,postinc2
  7911  002D80  C0CE  FFDE         	movff	dir_next@clst+3,postinc2
  7912  002D84                     
  7913                           ; BSR set to: 0
  7914                           ;pff.c: 488:     dj->sect = clust2sect(clst);
  7915  002D84  C0CB  F012         	movff	dir_next@clst,clust2sect@clst
  7916  002D88  C0CC  F013         	movff	dir_next@clst+1,clust2sect@clst+1
  7917  002D8C  C0CD  F014         	movff	dir_next@clst+2,clust2sect@clst+2
  7918  002D90  C0CE  F015         	movff	dir_next@clst+3,clust2sect@clst+3
  7919  002D94  ECD4  F025         	call	_clust2sect	;wreg free
  7920  002D98  0100               	movlb	0	; () banked
  7921  002D9A  EE20 F00C          	lfsr	2,12
  7922  002D9E  51C0               	movf	dir_next@dj& (0+255),w,b
  7923  002DA0  26D9               	addwf	fsr2l,f,c
  7924  002DA2  51C1               	movf	(dir_next@dj+1)& (0+255),w,b
  7925  002DA4  22DA               	addwfc	fsr2h,f,c
  7926  002DA6  C012  FFDE         	movff	?_clust2sect,postinc2
  7927  002DAA  C013  FFDE         	movff	?_clust2sect+1,postinc2
  7928  002DAE  C014  FFDE         	movff	?_clust2sect+2,postinc2
  7929  002DB2  C015  FFDE         	movff	?_clust2sect+3,postinc2
  7930  002DB6                     l7041:
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;pff.c: 493:  dj->index = i;
  7934  002DB6  C0C0  FFD9         	movff	dir_next@dj,fsr2l
  7935  002DBA  C0C1  FFDA         	movff	dir_next@dj+1,fsr2h
  7936  002DBE  C0CF  FFDE         	movff	dir_next@i,postinc2
  7937  002DC2  C0D0  FFDD         	movff	dir_next@i+1,postdec2
  7938  002DC6                     
  7939                           ; BSR set to: 0
  7940                           ;pff.c: 495:  return FR_OK;
  7941  002DC6  0E00               	movlw	0
  7942  002DC8                     l227:
  7943                           
  7944                           ; BSR set to: 0
  7945  002DC8  0012               	return		;funcret
  7946  002DCA                     __end_of_dir_next:
  7947                           	callstack 0
  7948                           
  7949 ;; *************** function _create_name *****************
  7950 ;; Defined at:
  7951 ;;		line 577 in file "pff.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;  dj              2   13[COMRAM] PTR struct .
  7954 ;;		 -> pf_open@dj(16), main@dir(16), 
  7955 ;;  path            2   15[COMRAM] PTR PTR const unsigned c
  7956 ;;		 -> follow_path@path(2), 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  d               1    0        unsigned char 
  7959 ;;  sfn             2   25[COMRAM] PTR unsigned char 
  7960 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  7961 ;;  p               2   21[COMRAM] PTR const unsigned char 
  7962 ;;		 -> Line(128), 
  7963 ;;  c               1   28[COMRAM] unsigned char 
  7964 ;;  i               1   27[COMRAM] unsigned char 
  7965 ;;  si              1   24[COMRAM] unsigned char 
  7966 ;;  ni              1   23[COMRAM] unsigned char 
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  1    wreg      enum E2600
  7969 ;; Registers used:
  7970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7976 ;;      Params:         4       0       0       0       0       0       0
  7977 ;;      Locals:         8       0       0       0       0       0       0
  7978 ;;      Temps:          4       0       0       0       0       0       0
  7979 ;;      Totals:        16       0       0       0       0       0       0
  7980 ;;Total ram usage:       16 bytes
  7981 ;; Hardware stack levels used: 1
  7982 ;; Hardware stack levels required when called: 2
  7983 ;; This function calls:
  7984 ;;		_mem_set
  7985 ;; This function is called by:
  7986 ;;		_follow_path
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           	psect	text24
  7991  003398                     __ptext24:
  7992                           	callstack 0
  7993  003398                     _create_name:
  7994                           	callstack 26
  7995  003398                     
  7996                           ;pff.c: 578:  DIR *dj,;pff.c: 579:  const char **path;pff.c: 581: {;pff.c: 582:  BYTE c,
      +                           ni, si, i, *sfn;;pff.c: 583:  const char *p;;pff.c: 586:  static const BYTE cvt[] = {0x
      +                          80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x90,0x92,
      +                          0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, 0x41,0x49,0x4F,0x
      +                          55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,0xB3,0xB4,
      +                          0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF, 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0x
      +                          C6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,
      +                          0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF, 0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0x
      +                          E9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,
      +                          0xFB,0xFC,0xFD,0xFE,0xFF};
  7997  003398  EE20 F002          	lfsr	2,2
  7998  00339C  500E               	movf	create_name@dj^0,w,c
  7999  00339E  26D9               	addwf	fsr2l,f,c
  8000  0033A0  500F               	movf	(create_name@dj+1)^0,w,c
  8001  0033A2  22DA               	addwfc	fsr2h,f,c
  8002  0033A4  CFDE F01A          	movff	postinc2,create_name@sfn
  8003  0033A8  CFDD F01B          	movff	postdec2,create_name@sfn+1
  8004  0033AC                     
  8005                           ;pff.c: 592:  mem_set(sfn, ' ', 11);
  8006  0033AC  C01A  F006         	movff	create_name@sfn,mem_set@dst
  8007  0033B0  C01B  F007         	movff	create_name@sfn+1,mem_set@dst+1
  8008  0033B4  0E00               	movlw	0
  8009  0033B6  6E09               	movwf	(mem_set@val+1)^0,c
  8010  0033B8  0E20               	movlw	32
  8011  0033BA  6E08               	movwf	mem_set@val^0,c
  8012  0033BC  0E00               	movlw	0
  8013  0033BE  6E0B               	movwf	(mem_set@cnt+1)^0,c
  8014  0033C0  0E0B               	movlw	11
  8015  0033C2  6E0A               	movwf	mem_set@cnt^0,c
  8016  0033C4  ECAC  F02A         	call	_mem_set	;wreg free
  8017  0033C8                     
  8018                           ;pff.c: 593:  si = i = 0; ni = 8;
  8019  0033C8  0E00               	movlw	0
  8020  0033CA  6E1C               	movwf	create_name@i^0,c
  8021  0033CC  C01C  F019         	movff	create_name@i,create_name@si
  8022  0033D0  0E08               	movlw	8
  8023  0033D2  6E18               	movwf	create_name@ni^0,c
  8024  0033D4                     
  8025                           ;pff.c: 594:  p = *path;
  8026  0033D4  C010  FFD9         	movff	create_name@path,fsr2l
  8027  0033D8  C011  FFDA         	movff	create_name@path+1,fsr2h
  8028  0033DC  CFDE F016          	movff	postinc2,create_name@p
  8029  0033E0  CFDD F017          	movff	postdec2,create_name@p+1
  8030  0033E4                     l4909:
  8031                           
  8032                           ;pff.c: 596:   c = p[si++];
  8033  0033E4  5019               	movf	create_name@si^0,w,c
  8034  0033E6  2416               	addwf	create_name@p^0,w,c
  8035  0033E8  6ED9               	movwf	fsr2l,c
  8036  0033EA  0E00               	movlw	0
  8037  0033EC  2017               	addwfc	(create_name@p+1)^0,w,c
  8038  0033EE  6EDA               	movwf	fsr2h,c
  8039  0033F0  50DF               	movf	indf2,w,c
  8040  0033F2  6E1D               	movwf	create_name@c^0,c
  8041  0033F4  2A19               	incf	create_name@si^0,f,c
  8042  0033F6                     
  8043                           ;pff.c: 597:   if (c <= ' ' || c == '/') break;
  8044  0033F6  0E20               	movlw	32
  8045  0033F8  641D               	cpfsgt	create_name@c^0,c
  8046  0033FA  EF01  F01A         	goto	u5431
  8047  0033FE  EF03  F01A         	goto	u5430
  8048  003402                     u5431:
  8049  003402  EF77  F01A         	goto	l4953
  8050  003406                     u5430:
  8051  003406  0E2F               	movlw	47
  8052  003408  181D               	xorwf	create_name@c^0,w,c
  8053  00340A  A4D8               	btfss	status,2,c
  8054  00340C  EF0A  F01A         	goto	u5441
  8055  003410  EF0C  F01A         	goto	u5440
  8056  003414                     u5441:
  8057  003414  EF0E  F01A         	goto	l4917
  8058  003418                     u5440:
  8059  003418  EF77  F01A         	goto	l4953
  8060  00341C                     l4917:
  8061                           
  8062                           ;pff.c: 598:   if (c == '.' || i >= ni) {
  8063  00341C  0E2E               	movlw	46
  8064  00341E  181D               	xorwf	create_name@c^0,w,c
  8065  003420  B4D8               	btfsc	status,2,c
  8066  003422  EF15  F01A         	goto	u5451
  8067  003426  EF17  F01A         	goto	u5450
  8068  00342A                     u5451:
  8069  00342A  EF20  F01A         	goto	l4921
  8070  00342E                     u5450:
  8071  00342E  5018               	movf	create_name@ni^0,w,c
  8072  003430  5C1C               	subwf	create_name@i^0,w,c
  8073  003432  A0D8               	btfss	status,0,c
  8074  003434  EF1E  F01A         	goto	u5461
  8075  003438  EF20  F01A         	goto	u5460
  8076  00343C                     u5461:
  8077  00343C  EF3A  F01A         	goto	l4927
  8078  003440                     u5460:
  8079  003440                     l4921:
  8080                           
  8081                           ;pff.c: 599:    if (ni != 8 || c != '.') break;
  8082  003440  0E08               	movlw	8
  8083  003442  1818               	xorwf	create_name@ni^0,w,c
  8084  003444  A4D8               	btfss	status,2,c
  8085  003446  EF27  F01A         	goto	u5471
  8086  00344A  EF29  F01A         	goto	u5470
  8087  00344E                     u5471:
  8088  00344E  EF77  F01A         	goto	l4953
  8089  003452                     u5470:
  8090  003452  0E2E               	movlw	46
  8091  003454  181D               	xorwf	create_name@c^0,w,c
  8092  003456  B4D8               	btfsc	status,2,c
  8093  003458  EF30  F01A         	goto	u5481
  8094  00345C  EF32  F01A         	goto	u5480
  8095  003460                     u5481:
  8096  003460  EF34  F01A         	goto	l4925
  8097  003464                     u5480:
  8098  003464  EF77  F01A         	goto	l4953
  8099  003468                     l4925:
  8100                           
  8101                           ;pff.c: 600:    i = 8; ni = 11;
  8102  003468  0E08               	movlw	8
  8103  00346A  6E1C               	movwf	create_name@i^0,c
  8104  00346C  0E0B               	movlw	11
  8105  00346E  6E18               	movwf	create_name@ni^0,c
  8106                           
  8107                           ;pff.c: 601:    continue;
  8108  003470  EFF2  F019         	goto	l4909
  8109  003474                     l4927:
  8110                           
  8111                           ;pff.c: 605:   if (c >= 0x80)
  8112  003474  0E7F               	movlw	127
  8113  003476  641D               	cpfsgt	create_name@c^0,c
  8114  003478  EF40  F01A         	goto	u5491
  8115  00347C  EF42  F01A         	goto	u5490
  8116  003480                     u5491:
  8117  003480  EF5B  F01A         	goto	l4943
  8118  003484                     u5490:
  8119  003484                     
  8120                           ;pff.c: 606:    c = cvt[c - 0x80];
  8121  003484  0E80               	movlw	128
  8122  003486  6E12               	movwf	??_create_name^0,c
  8123  003488  0EFF               	movlw	255
  8124  00348A  6E13               	movwf	(??_create_name+1)^0,c
  8125  00348C  501D               	movf	create_name@c^0,w,c
  8126  00348E  6E14               	movwf	(??_create_name+2)^0,c
  8127  003490  6A15               	clrf	(??_create_name+3)^0,c
  8128  003492  5012               	movf	??_create_name^0,w,c
  8129  003494  2614               	addwf	(??_create_name+2)^0,f,c
  8130  003496  5013               	movf	(??_create_name+1)^0,w,c
  8131  003498  2215               	addwfc	(??_create_name+3)^0,f,c
  8132  00349A  0E8D               	movlw	low create_name@cvt
  8133  00349C  2414               	addwf	(??_create_name+2)^0,w,c
  8134  00349E  6EF6               	movwf	tblptrl,c
  8135  0034A0  0E7B               	movlw	high create_name@cvt
  8136  0034A2  2015               	addwfc	(??_create_name+3)^0,w,c
  8137  0034A4  6EF7               	movwf	tblptrh,c
  8138  0034A6                     	if	0	;There are less than 3 active tblptr bytes
  8139  0034A6                     	endif
  8140  0034A6  0008               	tblrd		*
  8141  0034A8  CFF5 F01D          	movff	tablat,create_name@c
  8142  0034AC  EF5B  F01A         	goto	l4943
  8143  0034B0                     l4941:
  8144  0034B0  2A1C               	incf	create_name@i^0,f,c
  8145                           
  8146                           ;pff.c: 612:   } else
  8147  0034B2  EFF2  F019         	goto	l4909
  8148  0034B6                     l4943:
  8149  0034B6  0E60               	movlw	96
  8150  0034B8  641D               	cpfsgt	create_name@c^0,c
  8151  0034BA  EF61  F01A         	goto	u5501
  8152  0034BE  EF63  F01A         	goto	u5500
  8153  0034C2                     u5501:
  8154  0034C2  EF6D  F01A         	goto	l4949
  8155  0034C6                     u5500:
  8156  0034C6  0E7B               	movlw	123
  8157  0034C8  601D               	cpfslt	create_name@c^0,c
  8158  0034CA  EF69  F01A         	goto	u5511
  8159  0034CE  EF6B  F01A         	goto	u5510
  8160  0034D2                     u5511:
  8161  0034D2  EF6D  F01A         	goto	l4949
  8162  0034D6                     u5510:
  8163  0034D6  0E20               	movlw	32
  8164  0034D8  5E1D               	subwf	create_name@c^0,f,c
  8165  0034DA                     l4949:
  8166                           
  8167                           ;pff.c: 616:    sfn[i++] = c;
  8168  0034DA  501C               	movf	create_name@i^0,w,c
  8169  0034DC  241A               	addwf	create_name@sfn^0,w,c
  8170  0034DE  6ED9               	movwf	fsr2l,c
  8171  0034E0  0E00               	movlw	0
  8172  0034E2  201B               	addwfc	(create_name@sfn+1)^0,w,c
  8173  0034E4  6EDA               	movwf	fsr2h,c
  8174  0034E6  C01D  FFDF         	movff	create_name@c,indf2
  8175  0034EA  EF58  F01A         	goto	l4941
  8176  0034EE                     l4953:
  8177                           
  8178                           ;pff.c: 619:  *path = &p[si];
  8179  0034EE  5019               	movf	create_name@si^0,w,c
  8180  0034F0  2416               	addwf	create_name@p^0,w,c
  8181  0034F2  6E12               	movwf	??_create_name^0,c
  8182  0034F4  0E00               	movlw	0
  8183  0034F6  2017               	addwfc	(create_name@p+1)^0,w,c
  8184  0034F8  6E13               	movwf	(??_create_name+1)^0,c
  8185  0034FA  C010  FFD9         	movff	create_name@path,fsr2l
  8186  0034FE  C011  FFDA         	movff	create_name@path+1,fsr2h
  8187  003502  C012  FFDE         	movff	??_create_name,postinc2
  8188  003506  C013  FFDD         	movff	??_create_name+1,postdec2
  8189                           
  8190                           ;pff.c: 621:  sfn[11] = (c <= ' ') ? 1 : 0;
  8191  00350A  EE20 F00B          	lfsr	2,11
  8192  00350E  501A               	movf	create_name@sfn^0,w,c
  8193  003510  26D9               	addwf	fsr2l,f,c
  8194  003512  501B               	movf	(create_name@sfn+1)^0,w,c
  8195  003514  22DA               	addwfc	fsr2h,f,c
  8196  003516  0E20               	movlw	32
  8197  003518  641D               	cpfsgt	create_name@c^0,c
  8198  00351A  EF91  F01A         	goto	u5521
  8199  00351E  EF94  F01A         	goto	u5520
  8200  003522                     u5521:
  8201  003522  0E01               	movlw	1
  8202  003524  EF95  F01A         	goto	u5530
  8203  003528                     u5520:
  8204  003528  0E00               	movlw	0
  8205  00352A                     u5530:
  8206  00352A  6EDF               	movwf	indf2,c
  8207  00352C                     
  8208                           ;pff.c: 623:  return FR_OK;
  8209  00352C  0E00               	movlw	0
  8210  00352E  0012               	return		;funcret
  8211  003530                     __end_of_create_name:
  8212                           	callstack 0
  8213                           
  8214 ;; *************** function _mem_set *****************
  8215 ;; Defined at:
  8216 ;;		line 325 in file "pff.c"
  8217 ;; Parameters:    Size  Location     Type
  8218 ;;  dst             2    5[COMRAM] PTR void 
  8219 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  8220 ;;  val             2    7[COMRAM] int 
  8221 ;;  cnt             2    9[COMRAM] int 
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;  d               2   11[COMRAM] PTR unsigned char 
  8224 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  1    wreg      void 
  8227 ;; Registers used:
  8228 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8234 ;;      Params:         6       0       0       0       0       0       0
  8235 ;;      Locals:         2       0       0       0       0       0       0
  8236 ;;      Temps:          0       0       0       0       0       0       0
  8237 ;;      Totals:         8       0       0       0       0       0       0
  8238 ;;Total ram usage:        8 bytes
  8239 ;; Hardware stack levels used: 1
  8240 ;; Hardware stack levels required when called: 1
  8241 ;; This function calls:
  8242 ;;		Nothing
  8243 ;; This function is called by:
  8244 ;;		_create_name
  8245 ;; This function uses a non-reentrant model
  8246 ;;
  8247                           
  8248                           	psect	text25
  8249  005558                     __ptext25:
  8250                           	callstack 0
  8251  005558                     _mem_set:
  8252                           	callstack 26
  8253  005558                     
  8254                           ;pff.c: 326:  char *d = (char*)dst;
  8255  005558  C006  F00C         	movff	mem_set@dst,mem_set@d
  8256  00555C  C007  F00D         	movff	mem_set@dst+1,mem_set@d+1
  8257                           
  8258                           ;pff.c: 327:  while (cnt--) *d++ = (char)val;
  8259  005560  EFBA  F02A         	goto	l4757
  8260  005564                     l4753:
  8261  005564  C00C  FFD9         	movff	mem_set@d,fsr2l
  8262  005568  C00D  FFDA         	movff	mem_set@d+1,fsr2h
  8263  00556C  C008  FFDF         	movff	mem_set@val,indf2
  8264  005570  4A0C               	infsnz	mem_set@d^0,f,c
  8265  005572  2A0D               	incf	(mem_set@d+1)^0,f,c
  8266  005574                     l4757:
  8267  005574  060A               	decf	mem_set@cnt^0,f,c
  8268  005576  A0D8               	btfss	status,0,c
  8269  005578  060B               	decf	(mem_set@cnt+1)^0,f,c
  8270  00557A  280A               	incf	mem_set@cnt^0,w,c
  8271  00557C  E106               	bnz	u5181
  8272  00557E  280B               	incf	(mem_set@cnt+1)^0,w,c
  8273  005580  A4D8               	btfss	status,2,c
  8274  005582  EFC5  F02A         	goto	u5181
  8275  005586  EFC7  F02A         	goto	u5180
  8276  00558A                     u5181:
  8277  00558A  EFB2  F02A         	goto	l4753
  8278  00558E                     u5180:
  8279  00558E  0012               	return		;funcret
  8280  005590                     __end_of_mem_set:
  8281                           	callstack 0
  8282                           
  8283 ;; *************** function _pf_mount *****************
  8284 ;; Defined at:
  8285 ;;		line 750 in file "pff.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;  fs              2   42[BANK0 ] PTR struct .
  8288 ;;		 -> main@fs(42), 
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;  buf            36   66[BANK0 ] unsigned char [36]
  8291 ;;  fsize           4  114[BANK0 ] unsigned long 
  8292 ;;  bsect           4  110[BANK0 ] unsigned long 
  8293 ;;  mclst           4  106[BANK0 ] unsigned long 
  8294 ;;  tsect           4  102[BANK0 ] unsigned long 
  8295 ;;  fmt             1  118[BANK0 ] unsigned char 
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1    wreg      enum E3114
  8298 ;; Registers used:
  8299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8305 ;;      Params:         0       2       0       0       0       0       0
  8306 ;;      Locals:         0      53       0       0       0       0       0
  8307 ;;      Temps:          0      22       0       0       0       0       0
  8308 ;;      Totals:         0      77       0       0       0       0       0
  8309 ;;Total ram usage:       77 bytes
  8310 ;; Hardware stack levels used: 1
  8311 ;; Hardware stack levels required when called: 11
  8312 ;; This function calls:
  8313 ;;		___lldiv
  8314 ;;		___lmul
  8315 ;;		_check_fs
  8316 ;;		_disk_initialize
  8317 ;;		_disk_readp
  8318 ;; This function is called by:
  8319 ;;		_main
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           	psect	text26
  8324  000F96                     __ptext26:
  8325                           	callstack 0
  8326  000F96                     _pf_mount:
  8327                           	callstack 19
  8328  000F96                     
  8329                           ;pff.c: 751:  FATFS *fs;pff.c: 753: {;pff.c: 754:  BYTE fmt, buf[36];;pff.c: 755:  DWORD
      +                           bsect, fsize, tsect, mclst;;pff.c: 758:  FatFs = 0;
  8330  000F96  0E00               	movlw	0
  8331  000F98  0100               	movlb	0	; () banked
  8332  000F9A  6FFD               	movwf	_FatFs& (0+255),b
  8333  000F9C  0E00               	movlw	0
  8334  000F9E  6FFE               	movwf	(_FatFs+1)& (0+255),b
  8335  000FA0                     
  8336                           ; BSR set to: 0
  8337                           ;pff.c: 760:  if (disk_initialize() & 0x01)
  8338  000FA0  EC9C  F014         	call	_disk_initialize	;wreg free
  8339  000FA4  0100               	movlb	0	; () banked
  8340  000FA6  6FAC               	movwf	??_pf_mount& (0+255),b
  8341  000FA8  A1AC               	btfss	??_pf_mount& (0+255),0,b
  8342  000FAA  EFD9  F007         	goto	u9221
  8343  000FAE  EFDB  F007         	goto	u9220
  8344  000FB2                     u9221:
  8345  000FB2  EFDE  F007         	goto	l7321
  8346  000FB6                     u9220:
  8347  000FB6                     
  8348                           ; BSR set to: 0
  8349                           ;pff.c: 761:   return FR_NOT_READY;
  8350  000FB6  0E02               	movlw	2
  8351  000FB8  EFE3  F00A         	goto	l313
  8352  000FBC                     l7321:
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;pff.c: 764:  bsect = 0;
  8356  000FBC  0E00               	movlw	0
  8357  000FBE  6FEE               	movwf	pf_mount@bsect& (0+255),b
  8358  000FC0  0E00               	movlw	0
  8359  000FC2  6FEF               	movwf	(pf_mount@bsect+1)& (0+255),b
  8360  000FC4  0E00               	movlw	0
  8361  000FC6  6FF0               	movwf	(pf_mount@bsect+2)& (0+255),b
  8362  000FC8  0E00               	movlw	0
  8363  000FCA  6FF1               	movwf	(pf_mount@bsect+3)& (0+255),b
  8364  000FCC                     
  8365                           ; BSR set to: 0
  8366                           ;pff.c: 765:  fmt = check_fs(buf, bsect);
  8367  000FCC  0EC2               	movlw	low pf_mount@buf
  8368  000FCE  6FA0               	movwf	check_fs@buf& (0+255),b
  8369  000FD0  0E00               	movlw	high pf_mount@buf
  8370  000FD2  6FA1               	movwf	(check_fs@buf+1)& (0+255),b
  8371  000FD4  0E00               	movlw	0
  8372  000FD6  6FA2               	movwf	check_fs@sect& (0+255),b
  8373  000FD8  0E00               	movlw	0
  8374  000FDA  6FA3               	movwf	(check_fs@sect+1)& (0+255),b
  8375  000FDC  0E00               	movlw	0
  8376  000FDE  6FA4               	movwf	(check_fs@sect+2)& (0+255),b
  8377  000FE0  0E00               	movlw	0
  8378  000FE2  6FA5               	movwf	(check_fs@sect+3)& (0+255),b
  8379  000FE4  EC8F  F022         	call	_check_fs	;wreg free
  8380  000FE8  0100               	movlb	0	; () banked
  8381  000FEA  6FF6               	movwf	pf_mount@fmt& (0+255),b
  8382  000FEC                     
  8383                           ; BSR set to: 0
  8384                           ;pff.c: 766:  if (fmt == 1) {
  8385  000FEC  05F6               	decf	pf_mount@fmt& (0+255),w,b
  8386  000FEE  A4D8               	btfss	status,2,c
  8387  000FF0  EFFC  F007         	goto	u9231
  8388  000FF4  EFFE  F007         	goto	u9230
  8389  000FF8                     u9231:
  8390  000FF8  EF73  F008         	goto	l7337
  8391  000FFC                     u9230:
  8392  000FFC                     
  8393                           ; BSR set to: 0
  8394                           ;pff.c: 768:   if (disk_readp(buf, bsect, 446, 16)) {
  8395  000FFC  0EC2               	movlw	low pf_mount@buf
  8396  000FFE  6F90               	movwf	disk_readp@buff& (0+255),b
  8397  001000  0E00               	movlw	high pf_mount@buf
  8398  001002  6F91               	movwf	(disk_readp@buff+1)& (0+255),b
  8399  001004  0E00               	movlw	0
  8400  001006  6F92               	movwf	disk_readp@sector& (0+255),b
  8401  001008  0E00               	movlw	0
  8402  00100A  6F93               	movwf	(disk_readp@sector+1)& (0+255),b
  8403  00100C  0E00               	movlw	0
  8404  00100E  6F94               	movwf	(disk_readp@sector+2)& (0+255),b
  8405  001010  0E00               	movlw	0
  8406  001012  6F95               	movwf	(disk_readp@sector+3)& (0+255),b
  8407  001014  0E01               	movlw	1
  8408  001016  6F97               	movwf	(disk_readp@offset+1)& (0+255),b
  8409  001018  0EBE               	movlw	190
  8410  00101A  6F96               	movwf	disk_readp@offset& (0+255),b
  8411  00101C  0E00               	movlw	0
  8412  00101E  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  8413  001020  0E10               	movlw	16
  8414  001022  6F98               	movwf	disk_readp@count& (0+255),b
  8415  001024  EC64  F01B         	call	_disk_readp	;wreg free
  8416  001028  0900               	iorlw	0
  8417  00102A  B4D8               	btfsc	status,2,c
  8418  00102C  EF1A  F008         	goto	u9241
  8419  001030  EF1C  F008         	goto	u9240
  8420  001034                     u9241:
  8421  001034  EF21  F008         	goto	l7331
  8422  001038                     u9240:
  8423  001038                     
  8424                           ;pff.c: 769:    fmt = 3;
  8425  001038  0E03               	movlw	3
  8426  00103A  0100               	movlb	0	; () banked
  8427  00103C  6FF6               	movwf	pf_mount@fmt& (0+255),b
  8428                           
  8429                           ;pff.c: 770:   } else {
  8430  00103E  EF73  F008         	goto	l7337
  8431  001042                     l7331:
  8432                           
  8433                           ;pff.c: 771:    if (buf[4]) {
  8434  001042  0100               	movlb	0	; () banked
  8435  001044  51C6               	movf	(pf_mount@buf+4)& (0+255),w,b
  8436  001046  B4D8               	btfsc	status,2,c
  8437  001048  EF28  F008         	goto	u9251
  8438  00104C  EF2A  F008         	goto	u9250
  8439  001050                     u9251:
  8440  001050  EF73  F008         	goto	l7337
  8441  001054                     u9250:
  8442  001054                     
  8443                           ; BSR set to: 0
  8444                           ;pff.c: 772:     bsect = (DWORD)(((DWORD)*((BYTE*)(&buf[8])+3)<<24)|((DWORD)*((BYTE*)(&b
      +                          uf[8])+2)<<16)|((WORD)*((BYTE*)(&buf[8])+1)<<8)|*(BYTE*)(&buf[8]));
  8445  001054  51CB               	movf	(pf_mount@buf+9)& (0+255),w,b
  8446  001056  6FAD               	movwf	(??_pf_mount+1)& (0+255),b
  8447  001058  6BAC               	clrf	??_pf_mount& (0+255),b
  8448  00105A  C0CC  F0AE         	movff	pf_mount@buf+10,??_pf_mount+2
  8449  00105E  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8450  001060  6BB0               	clrf	(??_pf_mount+4)& (0+255),b
  8451  001062  6BB1               	clrf	(??_pf_mount+5)& (0+255),b
  8452  001064  C0AF  F0B1         	movff	??_pf_mount+3,??_pf_mount+5
  8453  001068  C0AE  F0B0         	movff	??_pf_mount+2,??_pf_mount+4
  8454  00106C  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8455  00106E  6BAE               	clrf	(??_pf_mount+2)& (0+255),b
  8456  001070  C0CD  F0B2         	movff	pf_mount@buf+11,??_pf_mount+6
  8457  001074  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8458  001076  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8459  001078  6BB5               	clrf	(??_pf_mount+9)& (0+255),b
  8460  00107A  C0B2  F0B5         	movff	??_pf_mount+6,??_pf_mount+9
  8461  00107E  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8462  001080  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8463  001082  6BB2               	clrf	(??_pf_mount+6)& (0+255),b
  8464  001084  51AE               	movf	(??_pf_mount+2)& (0+255),w,b
  8465  001086  11B2               	iorwf	(??_pf_mount+6)& (0+255),w,b
  8466  001088  6FB6               	movwf	(??_pf_mount+10)& (0+255),b
  8467  00108A  51AF               	movf	(??_pf_mount+3)& (0+255),w,b
  8468  00108C  11B3               	iorwf	(??_pf_mount+7)& (0+255),w,b
  8469  00108E  6FB7               	movwf	(??_pf_mount+11)& (0+255),b
  8470  001090  51B0               	movf	(??_pf_mount+4)& (0+255),w,b
  8471  001092  11B4               	iorwf	(??_pf_mount+8)& (0+255),w,b
  8472  001094  6FB8               	movwf	(??_pf_mount+12)& (0+255),b
  8473  001096  51B1               	movf	(??_pf_mount+5)& (0+255),w,b
  8474  001098  11B5               	iorwf	(??_pf_mount+9)& (0+255),w,b
  8475  00109A  6FB9               	movwf	(??_pf_mount+13)& (0+255),b
  8476  00109C  51AC               	movf	??_pf_mount& (0+255),w,b
  8477  00109E  11B6               	iorwf	(??_pf_mount+10)& (0+255),w,b
  8478  0010A0  6FBA               	movwf	(??_pf_mount+14)& (0+255),b
  8479  0010A2  51AD               	movf	(??_pf_mount+1)& (0+255),w,b
  8480  0010A4  11B7               	iorwf	(??_pf_mount+11)& (0+255),w,b
  8481  0010A6  6FBB               	movwf	(??_pf_mount+15)& (0+255),b
  8482  0010A8  0E00               	movlw	0
  8483  0010AA  11B8               	iorwf	(??_pf_mount+12)& (0+255),w,b
  8484  0010AC  6FBC               	movwf	(??_pf_mount+16)& (0+255),b
  8485  0010AE  0E00               	movlw	0
  8486  0010B0  11B9               	iorwf	(??_pf_mount+13)& (0+255),w,b
  8487  0010B2  6FBD               	movwf	(??_pf_mount+17)& (0+255),b
  8488  0010B4  51CA               	movf	(pf_mount@buf+8)& (0+255),w,b
  8489  0010B6  11BA               	iorwf	(??_pf_mount+14)& (0+255),w,b
  8490  0010B8  6FEE               	movwf	pf_mount@bsect& (0+255),b
  8491  0010BA  51BB               	movf	(??_pf_mount+15)& (0+255),w,b
  8492  0010BC  6FEF               	movwf	(pf_mount@bsect+1)& (0+255),b
  8493  0010BE  51BC               	movf	(??_pf_mount+16)& (0+255),w,b
  8494  0010C0  6FF0               	movwf	(pf_mount@bsect+2)& (0+255),b
  8495  0010C2  51BD               	movf	(??_pf_mount+17)& (0+255),w,b
  8496  0010C4  6FF1               	movwf	(pf_mount@bsect+3)& (0+255),b
  8497  0010C6                     
  8498                           ; BSR set to: 0
  8499                           ;pff.c: 773:     fmt = check_fs(buf, bsect);
  8500  0010C6  0EC2               	movlw	low pf_mount@buf
  8501  0010C8  6FA0               	movwf	check_fs@buf& (0+255),b
  8502  0010CA  0E00               	movlw	high pf_mount@buf
  8503  0010CC  6FA1               	movwf	(check_fs@buf+1)& (0+255),b
  8504  0010CE  C0EE  F0A2         	movff	pf_mount@bsect,check_fs@sect
  8505  0010D2  C0EF  F0A3         	movff	pf_mount@bsect+1,check_fs@sect+1
  8506  0010D6  C0F0  F0A4         	movff	pf_mount@bsect+2,check_fs@sect+2
  8507  0010DA  C0F1  F0A5         	movff	pf_mount@bsect+3,check_fs@sect+3
  8508  0010DE  EC8F  F022         	call	_check_fs	;wreg free
  8509  0010E2  0100               	movlb	0	; () banked
  8510  0010E4  6FF6               	movwf	pf_mount@fmt& (0+255),b
  8511  0010E6                     l7337:
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;pff.c: 777:  if (fmt == 3) return FR_DISK_ERR;
  8515  0010E6  0E03               	movlw	3
  8516  0010E8  19F6               	xorwf	pf_mount@fmt& (0+255),w,b
  8517  0010EA  A4D8               	btfss	status,2,c
  8518  0010EC  EF7A  F008         	goto	u9261
  8519  0010F0  EF7C  F008         	goto	u9260
  8520  0010F4                     u9261:
  8521  0010F4  EF7F  F008         	goto	l7343
  8522  0010F8                     u9260:
  8523  0010F8                     l7339:
  8524  0010F8  0E01               	movlw	1
  8525  0010FA  EFE3  F00A         	goto	l313
  8526  0010FE                     l7343:
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;pff.c: 778:  if (fmt) return FR_NO_FILESYSTEM;
  8530  0010FE  51F6               	movf	pf_mount@fmt& (0+255),w,b
  8531  001100  B4D8               	btfsc	status,2,c
  8532  001102  EF85  F008         	goto	u9271
  8533  001106  EF87  F008         	goto	u9270
  8534  00110A                     u9271:
  8535  00110A  EF8A  F008         	goto	l7349
  8536  00110E                     u9270:
  8537  00110E                     l7345:
  8538                           
  8539                           ; BSR set to: 0
  8540  00110E  0E06               	movlw	6
  8541  001110  EFE3  F00A         	goto	l313
  8542  001114                     l7349:
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;pff.c: 781:  if (disk_readp(buf, bsect, 13, sizeof (buf))) return FR_DISK_ERR;
  8546  001114  0EC2               	movlw	low pf_mount@buf
  8547  001116  6F90               	movwf	disk_readp@buff& (0+255),b
  8548  001118  0E00               	movlw	high pf_mount@buf
  8549  00111A  6F91               	movwf	(disk_readp@buff+1)& (0+255),b
  8550  00111C  C0EE  F092         	movff	pf_mount@bsect,disk_readp@sector
  8551  001120  C0EF  F093         	movff	pf_mount@bsect+1,disk_readp@sector+1
  8552  001124  C0F0  F094         	movff	pf_mount@bsect+2,disk_readp@sector+2
  8553  001128  C0F1  F095         	movff	pf_mount@bsect+3,disk_readp@sector+3
  8554  00112C  0E00               	movlw	0
  8555  00112E  6F97               	movwf	(disk_readp@offset+1)& (0+255),b
  8556  001130  0E0D               	movlw	13
  8557  001132  6F96               	movwf	disk_readp@offset& (0+255),b
  8558  001134  0E00               	movlw	0
  8559  001136  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  8560  001138  0E24               	movlw	36
  8561  00113A  6F98               	movwf	disk_readp@count& (0+255),b
  8562  00113C  EC64  F01B         	call	_disk_readp	;wreg free
  8563  001140  0900               	iorlw	0
  8564  001142  B4D8               	btfsc	status,2,c
  8565  001144  EFA6  F008         	goto	u9281
  8566  001148  EFA8  F008         	goto	u9280
  8567  00114C                     u9281:
  8568  00114C  EFAA  F008         	goto	l7355
  8569  001150                     u9280:
  8570  001150  EF7C  F008         	goto	l7339
  8571  001154                     l7355:
  8572                           
  8573                           ;pff.c: 783:  fsize = (WORD)(((WORD)*((BYTE*)(buf+22 -13)+1)<<8)|(WORD)*(BYTE*)(buf+22 -
      +                          13));
  8574  001154  0100               	movlb	0	; () banked
  8575  001156  51CB               	movf	(pf_mount@buf+9)& (0+255),w,b
  8576  001158  C0CC  F0AC         	movff	pf_mount@buf+10,??_pf_mount
  8577  00115C  6BAD               	clrf	(??_pf_mount+1)& (0+255),b
  8578  00115E  C0AC  F0AD         	movff	??_pf_mount,??_pf_mount+1
  8579  001162  6BAC               	clrf	??_pf_mount& (0+255),b
  8580  001164  13AC               	iorwf	??_pf_mount& (0+255),f,b
  8581  001166  0E00               	movlw	0
  8582  001168  13AD               	iorwf	(??_pf_mount+1)& (0+255),f,b
  8583  00116A  C0AC  F0F2         	movff	??_pf_mount,pf_mount@fsize
  8584  00116E  C0AD  F0F3         	movff	??_pf_mount+1,pf_mount@fsize+1
  8585  001172  6BF4               	clrf	(pf_mount@fsize+2)& (0+255),b
  8586  001174  6BF5               	clrf	(pf_mount@fsize+3)& (0+255),b
  8587                           
  8588                           ;pff.c: 784:  if (!fsize) fsize = (DWORD)(((DWORD)*((BYTE*)(buf+36 -13)+3)<<24)|((DWORD)
      +                          *((BYTE*)(buf+36 -13)+2)<<16)|((WORD)*((BYTE*)(buf+36 -13)+1)<<8)|*(BYTE*)(buf+36 -13));
  8589  001176  51F2               	movf	pf_mount@fsize& (0+255),w,b
  8590  001178  11F3               	iorwf	(pf_mount@fsize+1)& (0+255),w,b
  8591  00117A  11F4               	iorwf	(pf_mount@fsize+2)& (0+255),w,b
  8592  00117C  11F5               	iorwf	(pf_mount@fsize+3)& (0+255),w,b
  8593  00117E  A4D8               	btfss	status,2,c
  8594  001180  EFC4  F008         	goto	u9291
  8595  001184  EFC6  F008         	goto	u9290
  8596  001188                     u9291:
  8597  001188  EFFF  F008         	goto	l7359
  8598  00118C                     u9290:
  8599  00118C                     
  8600                           ; BSR set to: 0
  8601  00118C  51DA               	movf	(pf_mount@buf+24)& (0+255),w,b
  8602  00118E  6FAD               	movwf	(??_pf_mount+1)& (0+255),b
  8603  001190  6BAC               	clrf	??_pf_mount& (0+255),b
  8604  001192  C0DB  F0AE         	movff	pf_mount@buf+25,??_pf_mount+2
  8605  001196  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8606  001198  6BB0               	clrf	(??_pf_mount+4)& (0+255),b
  8607  00119A  6BB1               	clrf	(??_pf_mount+5)& (0+255),b
  8608  00119C  C0AF  F0B1         	movff	??_pf_mount+3,??_pf_mount+5
  8609  0011A0  C0AE  F0B0         	movff	??_pf_mount+2,??_pf_mount+4
  8610  0011A4  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8611  0011A6  6BAE               	clrf	(??_pf_mount+2)& (0+255),b
  8612  0011A8  C0DC  F0B2         	movff	pf_mount@buf+26,??_pf_mount+6
  8613  0011AC  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8614  0011AE  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8615  0011B0  6BB5               	clrf	(??_pf_mount+9)& (0+255),b
  8616  0011B2  C0B2  F0B5         	movff	??_pf_mount+6,??_pf_mount+9
  8617  0011B6  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8618  0011B8  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8619  0011BA  6BB2               	clrf	(??_pf_mount+6)& (0+255),b
  8620  0011BC  51AE               	movf	(??_pf_mount+2)& (0+255),w,b
  8621  0011BE  11B2               	iorwf	(??_pf_mount+6)& (0+255),w,b
  8622  0011C0  6FB6               	movwf	(??_pf_mount+10)& (0+255),b
  8623  0011C2  51AF               	movf	(??_pf_mount+3)& (0+255),w,b
  8624  0011C4  11B3               	iorwf	(??_pf_mount+7)& (0+255),w,b
  8625  0011C6  6FB7               	movwf	(??_pf_mount+11)& (0+255),b
  8626  0011C8  51B0               	movf	(??_pf_mount+4)& (0+255),w,b
  8627  0011CA  11B4               	iorwf	(??_pf_mount+8)& (0+255),w,b
  8628  0011CC  6FB8               	movwf	(??_pf_mount+12)& (0+255),b
  8629  0011CE  51B1               	movf	(??_pf_mount+5)& (0+255),w,b
  8630  0011D0  11B5               	iorwf	(??_pf_mount+9)& (0+255),w,b
  8631  0011D2  6FB9               	movwf	(??_pf_mount+13)& (0+255),b
  8632  0011D4  51AC               	movf	??_pf_mount& (0+255),w,b
  8633  0011D6  11B6               	iorwf	(??_pf_mount+10)& (0+255),w,b
  8634  0011D8  6FBA               	movwf	(??_pf_mount+14)& (0+255),b
  8635  0011DA  51AD               	movf	(??_pf_mount+1)& (0+255),w,b
  8636  0011DC  11B7               	iorwf	(??_pf_mount+11)& (0+255),w,b
  8637  0011DE  6FBB               	movwf	(??_pf_mount+15)& (0+255),b
  8638  0011E0  0E00               	movlw	0
  8639  0011E2  11B8               	iorwf	(??_pf_mount+12)& (0+255),w,b
  8640  0011E4  6FBC               	movwf	(??_pf_mount+16)& (0+255),b
  8641  0011E6  0E00               	movlw	0
  8642  0011E8  11B9               	iorwf	(??_pf_mount+13)& (0+255),w,b
  8643  0011EA  6FBD               	movwf	(??_pf_mount+17)& (0+255),b
  8644  0011EC  51D9               	movf	(pf_mount@buf+23)& (0+255),w,b
  8645  0011EE  11BA               	iorwf	(??_pf_mount+14)& (0+255),w,b
  8646  0011F0  6FF2               	movwf	pf_mount@fsize& (0+255),b
  8647  0011F2  51BB               	movf	(??_pf_mount+15)& (0+255),w,b
  8648  0011F4  6FF3               	movwf	(pf_mount@fsize+1)& (0+255),b
  8649  0011F6  51BC               	movf	(??_pf_mount+16)& (0+255),w,b
  8650  0011F8  6FF4               	movwf	(pf_mount@fsize+2)& (0+255),b
  8651  0011FA  51BD               	movf	(??_pf_mount+17)& (0+255),w,b
  8652  0011FC  6FF5               	movwf	(pf_mount@fsize+3)& (0+255),b
  8653  0011FE                     l7359:
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;pff.c: 786:  fsize *= buf[16 -13];
  8657  0011FE  C0F2  F006         	movff	pf_mount@fsize,___lmul@multiplier
  8658  001202  C0F3  F007         	movff	pf_mount@fsize+1,___lmul@multiplier+1
  8659  001206  C0F4  F008         	movff	pf_mount@fsize+2,___lmul@multiplier+2
  8660  00120A  C0F5  F009         	movff	pf_mount@fsize+3,___lmul@multiplier+3
  8661  00120E  51C5               	movf	(pf_mount@buf+3)& (0+255),w,b
  8662  001210  6E0A               	movwf	___lmul@multiplicand^0,c
  8663  001212  6A0B               	clrf	(___lmul@multiplicand+1)^0,c
  8664  001214  6A0C               	clrf	(___lmul@multiplicand+2)^0,c
  8665  001216  6A0D               	clrf	(___lmul@multiplicand+3)^0,c
  8666  001218  EC38  F029         	call	___lmul	;wreg free
  8667  00121C  C006  F0F2         	movff	?___lmul,pf_mount@fsize
  8668  001220  C007  F0F3         	movff	?___lmul+1,pf_mount@fsize+1
  8669  001224  C008  F0F4         	movff	?___lmul+2,pf_mount@fsize+2
  8670  001228  C009  F0F5         	movff	?___lmul+3,pf_mount@fsize+3
  8671  00122C                     
  8672                           ;pff.c: 787:  fs->fatbase = bsect + (WORD)(((WORD)*((BYTE*)(buf+14 -13)+1)<<8)|(WORD)*(B
      +                          YTE*)(buf+14 -13));
  8673  00122C  0100               	movlb	0	; () banked
  8674  00122E  51C3               	movf	(pf_mount@buf+1)& (0+255),w,b
  8675  001230  C0C4  F0AC         	movff	pf_mount@buf+2,??_pf_mount
  8676  001234  6BAD               	clrf	(??_pf_mount+1)& (0+255),b
  8677  001236  C0AC  F0AD         	movff	??_pf_mount,??_pf_mount+1
  8678  00123A  6BAC               	clrf	??_pf_mount& (0+255),b
  8679  00123C  13AC               	iorwf	??_pf_mount& (0+255),f,b
  8680  00123E  0E00               	movlw	0
  8681  001240  13AD               	iorwf	(??_pf_mount+1)& (0+255),f,b
  8682  001242  51AC               	movf	??_pf_mount& (0+255),w,b
  8683  001244  25EE               	addwf	pf_mount@bsect& (0+255),w,b
  8684  001246  6FAE               	movwf	(??_pf_mount+2)& (0+255),b
  8685  001248  51AD               	movf	(??_pf_mount+1)& (0+255),w,b
  8686  00124A  21EF               	addwfc	(pf_mount@bsect+1)& (0+255),w,b
  8687  00124C  6FAF               	movwf	(??_pf_mount+3)& (0+255),b
  8688  00124E  0E00               	movlw	0
  8689  001250  21F0               	addwfc	(pf_mount@bsect+2)& (0+255),w,b
  8690  001252  6FB0               	movwf	(??_pf_mount+4)& (0+255),b
  8691  001254  0E00               	movlw	0
  8692  001256  21F1               	addwfc	(pf_mount@bsect+3)& (0+255),w,b
  8693  001258  6FB1               	movwf	(??_pf_mount+5)& (0+255),b
  8694  00125A  EE20 F00A          	lfsr	2,10
  8695  00125E  51AA               	movf	pf_mount@fs& (0+255),w,b
  8696  001260  26D9               	addwf	fsr2l,f,c
  8697  001262  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  8698  001264  22DA               	addwfc	fsr2h,f,c
  8699  001266  C0AE  FFDE         	movff	??_pf_mount+2,postinc2
  8700  00126A  C0AF  FFDE         	movff	??_pf_mount+3,postinc2
  8701  00126E  C0B0  FFDE         	movff	??_pf_mount+4,postinc2
  8702  001272  C0B1  FFDE         	movff	??_pf_mount+5,postinc2
  8703  001276                     
  8704                           ; BSR set to: 0
  8705                           ;pff.c: 788:  fs->csize = buf[13 -13];
  8706  001276  EE20 F002          	lfsr	2,2
  8707  00127A  51AA               	movf	pf_mount@fs& (0+255),w,b
  8708  00127C  26D9               	addwf	fsr2l,f,c
  8709  00127E  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  8710  001280  22DA               	addwfc	fsr2h,f,c
  8711  001282  C0C2  FFDF         	movff	pf_mount@buf,indf2
  8712  001286                     
  8713                           ; BSR set to: 0
  8714                           ;pff.c: 789:  fs->n_rootdir = (WORD)(((WORD)*((BYTE*)(buf+17 -13)+1)<<8)|(WORD)*(BYTE*)(
      +                          buf+17 -13));
  8715  001286  51C6               	movf	(pf_mount@buf+4)& (0+255),w,b
  8716  001288  C0C7  F0AC         	movff	pf_mount@buf+5,??_pf_mount
  8717  00128C  6BAD               	clrf	(??_pf_mount+1)& (0+255),b
  8718  00128E  C0AC  F0AD         	movff	??_pf_mount,??_pf_mount+1
  8719  001292  6BAC               	clrf	??_pf_mount& (0+255),b
  8720  001294  13AC               	iorwf	??_pf_mount& (0+255),f,b
  8721  001296  0E00               	movlw	0
  8722  001298  13AD               	iorwf	(??_pf_mount+1)& (0+255),f,b
  8723  00129A  EE20 F004          	lfsr	2,4
  8724  00129E  51AA               	movf	pf_mount@fs& (0+255),w,b
  8725  0012A0  26D9               	addwf	fsr2l,f,c
  8726  0012A2  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  8727  0012A4  22DA               	addwfc	fsr2h,f,c
  8728  0012A6  C0AC  FFDE         	movff	??_pf_mount,postinc2
  8729  0012AA  C0AD  FFDD         	movff	??_pf_mount+1,postdec2
  8730  0012AE                     
  8731                           ; BSR set to: 0
  8732                           ;pff.c: 790:  tsect = (WORD)(((WORD)*((BYTE*)(buf+19 -13)+1)<<8)|(WORD)*(BYTE*)(buf+19 -
      +                          13));
  8733  0012AE  51C8               	movf	(pf_mount@buf+6)& (0+255),w,b
  8734  0012B0  C0C9  F0AC         	movff	pf_mount@buf+7,??_pf_mount
  8735  0012B4  6BAD               	clrf	(??_pf_mount+1)& (0+255),b
  8736  0012B6  C0AC  F0AD         	movff	??_pf_mount,??_pf_mount+1
  8737  0012BA  6BAC               	clrf	??_pf_mount& (0+255),b
  8738  0012BC  13AC               	iorwf	??_pf_mount& (0+255),f,b
  8739  0012BE  0E00               	movlw	0
  8740  0012C0  13AD               	iorwf	(??_pf_mount+1)& (0+255),f,b
  8741  0012C2  C0AC  F0E6         	movff	??_pf_mount,pf_mount@tsect
  8742  0012C6  C0AD  F0E7         	movff	??_pf_mount+1,pf_mount@tsect+1
  8743  0012CA  6BE8               	clrf	(pf_mount@tsect+2)& (0+255),b
  8744  0012CC  6BE9               	clrf	(pf_mount@tsect+3)& (0+255),b
  8745  0012CE                     
  8746                           ; BSR set to: 0
  8747                           ;pff.c: 791:  if (!tsect) tsect = (DWORD)(((DWORD)*((BYTE*)(buf+32 -13)+3)<<24)|((DWORD)
      +                          *((BYTE*)(buf+32 -13)+2)<<16)|((WORD)*((BYTE*)(buf+32 -13)+1)<<8)|*(BYTE*)(buf+32 -13));
  8748  0012CE  51E6               	movf	pf_mount@tsect& (0+255),w,b
  8749  0012D0  11E7               	iorwf	(pf_mount@tsect+1)& (0+255),w,b
  8750  0012D2  11E8               	iorwf	(pf_mount@tsect+2)& (0+255),w,b
  8751  0012D4  11E9               	iorwf	(pf_mount@tsect+3)& (0+255),w,b
  8752  0012D6  A4D8               	btfss	status,2,c
  8753  0012D8  EF70  F009         	goto	u9301
  8754  0012DC  EF72  F009         	goto	u9300
  8755  0012E0                     u9301:
  8756  0012E0  EFAB  F009         	goto	l7373
  8757  0012E4                     u9300:
  8758  0012E4                     
  8759                           ; BSR set to: 0
  8760  0012E4  51D6               	movf	(pf_mount@buf+20)& (0+255),w,b
  8761  0012E6  6FAD               	movwf	(??_pf_mount+1)& (0+255),b
  8762  0012E8  6BAC               	clrf	??_pf_mount& (0+255),b
  8763  0012EA  C0D7  F0AE         	movff	pf_mount@buf+21,??_pf_mount+2
  8764  0012EE  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8765  0012F0  6BB0               	clrf	(??_pf_mount+4)& (0+255),b
  8766  0012F2  6BB1               	clrf	(??_pf_mount+5)& (0+255),b
  8767  0012F4  C0AF  F0B1         	movff	??_pf_mount+3,??_pf_mount+5
  8768  0012F8  C0AE  F0B0         	movff	??_pf_mount+2,??_pf_mount+4
  8769  0012FC  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8770  0012FE  6BAE               	clrf	(??_pf_mount+2)& (0+255),b
  8771  001300  C0D8  F0B2         	movff	pf_mount@buf+22,??_pf_mount+6
  8772  001304  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8773  001306  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8774  001308  6BB5               	clrf	(??_pf_mount+9)& (0+255),b
  8775  00130A  C0B2  F0B5         	movff	??_pf_mount+6,??_pf_mount+9
  8776  00130E  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8777  001310  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8778  001312  6BB2               	clrf	(??_pf_mount+6)& (0+255),b
  8779  001314  51AE               	movf	(??_pf_mount+2)& (0+255),w,b
  8780  001316  11B2               	iorwf	(??_pf_mount+6)& (0+255),w,b
  8781  001318  6FB6               	movwf	(??_pf_mount+10)& (0+255),b
  8782  00131A  51AF               	movf	(??_pf_mount+3)& (0+255),w,b
  8783  00131C  11B3               	iorwf	(??_pf_mount+7)& (0+255),w,b
  8784  00131E  6FB7               	movwf	(??_pf_mount+11)& (0+255),b
  8785  001320  51B0               	movf	(??_pf_mount+4)& (0+255),w,b
  8786  001322  11B4               	iorwf	(??_pf_mount+8)& (0+255),w,b
  8787  001324  6FB8               	movwf	(??_pf_mount+12)& (0+255),b
  8788  001326  51B1               	movf	(??_pf_mount+5)& (0+255),w,b
  8789  001328  11B5               	iorwf	(??_pf_mount+9)& (0+255),w,b
  8790  00132A  6FB9               	movwf	(??_pf_mount+13)& (0+255),b
  8791  00132C  51AC               	movf	??_pf_mount& (0+255),w,b
  8792  00132E  11B6               	iorwf	(??_pf_mount+10)& (0+255),w,b
  8793  001330  6FBA               	movwf	(??_pf_mount+14)& (0+255),b
  8794  001332  51AD               	movf	(??_pf_mount+1)& (0+255),w,b
  8795  001334  11B7               	iorwf	(??_pf_mount+11)& (0+255),w,b
  8796  001336  6FBB               	movwf	(??_pf_mount+15)& (0+255),b
  8797  001338  0E00               	movlw	0
  8798  00133A  11B8               	iorwf	(??_pf_mount+12)& (0+255),w,b
  8799  00133C  6FBC               	movwf	(??_pf_mount+16)& (0+255),b
  8800  00133E  0E00               	movlw	0
  8801  001340  11B9               	iorwf	(??_pf_mount+13)& (0+255),w,b
  8802  001342  6FBD               	movwf	(??_pf_mount+17)& (0+255),b
  8803  001344  51D5               	movf	(pf_mount@buf+19)& (0+255),w,b
  8804  001346  11BA               	iorwf	(??_pf_mount+14)& (0+255),w,b
  8805  001348  6FE6               	movwf	pf_mount@tsect& (0+255),b
  8806  00134A  51BB               	movf	(??_pf_mount+15)& (0+255),w,b
  8807  00134C  6FE7               	movwf	(pf_mount@tsect+1)& (0+255),b
  8808  00134E  51BC               	movf	(??_pf_mount+16)& (0+255),w,b
  8809  001350  6FE8               	movwf	(pf_mount@tsect+2)& (0+255),b
  8810  001352  51BD               	movf	(??_pf_mount+17)& (0+255),w,b
  8811  001354  6FE9               	movwf	(pf_mount@tsect+3)& (0+255),b
  8812  001356                     l7373:
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;pff.c: 792:  mclst = (tsect
  8816  001356  EE20 F004          	lfsr	2,4
  8817  00135A  51AA               	movf	pf_mount@fs& (0+255),w,b
  8818  00135C  26D9               	addwf	fsr2l,f,c
  8819  00135E  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  8820  001360  22DA               	addwfc	fsr2h,f,c
  8821  001362  CFDE F0AC          	movff	postinc2,??_pf_mount
  8822  001366  CFDD F0AD          	movff	postdec2,??_pf_mount+1
  8823  00136A  0E04               	movlw	4
  8824  00136C  6FAE               	movwf	(??_pf_mount+2)& (0+255),b
  8825  00136E                     u9315:
  8826  00136E  90D8               	bcf	status,0,c
  8827  001370  33AD               	rrcf	(??_pf_mount+1)& (0+255),f,b
  8828  001372  33AC               	rrcf	??_pf_mount& (0+255),f,b
  8829  001374  2FAE               	decfsz	(??_pf_mount+2)& (0+255),f,b
  8830  001376  EFB7  F009         	goto	u9315
  8831  00137A  51AC               	movf	??_pf_mount& (0+255),w,b
  8832  00137C  6FAF               	movwf	(??_pf_mount+3)& (0+255),b
  8833  00137E  51AD               	movf	(??_pf_mount+1)& (0+255),w,b
  8834  001380  6FB0               	movwf	(??_pf_mount+4)& (0+255),b
  8835  001382  6BB1               	clrf	(??_pf_mount+5)& (0+255),b
  8836  001384  6BB2               	clrf	(??_pf_mount+6)& (0+255),b
  8837  001386  51C3               	movf	(pf_mount@buf+1)& (0+255),w,b
  8838  001388  C0C4  F0B3         	movff	pf_mount@buf+2,??_pf_mount+7
  8839  00138C  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8840  00138E  C0B3  F0B4         	movff	??_pf_mount+7,??_pf_mount+8
  8841  001392  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8842  001394  11B3               	iorwf	(??_pf_mount+7)& (0+255),w,b
  8843  001396  6FB5               	movwf	(??_pf_mount+9)& (0+255),b
  8844  001398  51B4               	movf	(??_pf_mount+8)& (0+255),w,b
  8845  00139A  6FB6               	movwf	(??_pf_mount+10)& (0+255),b
  8846  00139C  6BB7               	clrf	(??_pf_mount+11)& (0+255),b
  8847  00139E  6BB8               	clrf	(??_pf_mount+12)& (0+255),b
  8848  0013A0  1FB5               	comf	(??_pf_mount+9)& (0+255),f,b
  8849  0013A2  1FB6               	comf	(??_pf_mount+10)& (0+255),f,b
  8850  0013A4  1FB7               	comf	(??_pf_mount+11)& (0+255),f,b
  8851  0013A6  1FB8               	comf	(??_pf_mount+12)& (0+255),f,b
  8852  0013A8  2BB5               	incf	(??_pf_mount+9)& (0+255),f,b
  8853  0013AA  0E00               	movlw	0
  8854  0013AC  23B6               	addwfc	(??_pf_mount+10)& (0+255),f,b
  8855  0013AE  23B7               	addwfc	(??_pf_mount+11)& (0+255),f,b
  8856  0013B0  23B8               	addwfc	(??_pf_mount+12)& (0+255),f,b
  8857  0013B2  51F2               	movf	pf_mount@fsize& (0+255),w,b
  8858  0013B4  5DB5               	subwf	(??_pf_mount+9)& (0+255),w,b
  8859  0013B6  6FB9               	movwf	(??_pf_mount+13)& (0+255),b
  8860  0013B8  51F3               	movf	(pf_mount@fsize+1)& (0+255),w,b
  8861  0013BA  59B6               	subwfb	(??_pf_mount+10)& (0+255),w,b
  8862  0013BC  6FBA               	movwf	(??_pf_mount+14)& (0+255),b
  8863  0013BE  51F4               	movf	(pf_mount@fsize+2)& (0+255),w,b
  8864  0013C0  59B7               	subwfb	(??_pf_mount+11)& (0+255),w,b
  8865  0013C2  6FBB               	movwf	(??_pf_mount+15)& (0+255),b
  8866  0013C4  51F5               	movf	(pf_mount@fsize+3)& (0+255),w,b
  8867  0013C6  59B8               	subwfb	(??_pf_mount+12)& (0+255),w,b
  8868  0013C8  6FBC               	movwf	(??_pf_mount+16)& (0+255),b
  8869  0013CA  51AF               	movf	(??_pf_mount+3)& (0+255),w,b
  8870  0013CC  5DB9               	subwf	(??_pf_mount+13)& (0+255),w,b
  8871  0013CE  6FBD               	movwf	(??_pf_mount+17)& (0+255),b
  8872  0013D0  51B0               	movf	(??_pf_mount+4)& (0+255),w,b
  8873  0013D2  59BA               	subwfb	(??_pf_mount+14)& (0+255),w,b
  8874  0013D4  6FBE               	movwf	(??_pf_mount+18)& (0+255),b
  8875  0013D6  51B1               	movf	(??_pf_mount+5)& (0+255),w,b
  8876  0013D8  59BB               	subwfb	(??_pf_mount+15)& (0+255),w,b
  8877  0013DA  6FBF               	movwf	(??_pf_mount+19)& (0+255),b
  8878  0013DC  51B2               	movf	(??_pf_mount+6)& (0+255),w,b
  8879  0013DE  59BC               	subwfb	(??_pf_mount+16)& (0+255),w,b
  8880  0013E0  6FC0               	movwf	(??_pf_mount+20)& (0+255),b
  8881  0013E2  51E6               	movf	pf_mount@tsect& (0+255),w,b
  8882  0013E4  25BD               	addwf	(??_pf_mount+17)& (0+255),w,b
  8883  0013E6  6E06               	movwf	___lldiv@dividend^0,c
  8884  0013E8  51E7               	movf	(pf_mount@tsect+1)& (0+255),w,b
  8885  0013EA  21BE               	addwfc	(??_pf_mount+18)& (0+255),w,b
  8886  0013EC  6E07               	movwf	(___lldiv@dividend+1)^0,c
  8887  0013EE  51E8               	movf	(pf_mount@tsect+2)& (0+255),w,b
  8888  0013F0  21BF               	addwfc	(??_pf_mount+19)& (0+255),w,b
  8889  0013F2  6E08               	movwf	(___lldiv@dividend+2)^0,c
  8890  0013F4  51E9               	movf	(pf_mount@tsect+3)& (0+255),w,b
  8891  0013F6  21C0               	addwfc	(??_pf_mount+20)& (0+255),w,b
  8892  0013F8  6E09               	movwf	(___lldiv@dividend+3)^0,c
  8893  0013FA  EE20 F002          	lfsr	2,2
  8894  0013FE  51AA               	movf	pf_mount@fs& (0+255),w,b
  8895  001400  26D9               	addwf	fsr2l,f,c
  8896  001402  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  8897  001404  22DA               	addwfc	fsr2h,f,c
  8898  001406  50DF               	movf	indf2,w,c
  8899  001408  6FC1               	movwf	(??_pf_mount+21)& (0+255),b
  8900  00140A  51C1               	movf	(??_pf_mount+21)& (0+255),w,b
  8901  00140C  6E0A               	movwf	___lldiv@divisor^0,c
  8902  00140E  6A0B               	clrf	(___lldiv@divisor+1)^0,c
  8903  001410  6A0C               	clrf	(___lldiv@divisor+2)^0,c
  8904  001412  6A0D               	clrf	(___lldiv@divisor+3)^0,c
  8905  001414  EC51  F027         	call	___lldiv	;wreg free
  8906  001418  0E02               	movlw	2
  8907  00141A  2406               	addwf	?___lldiv^0,w,c
  8908  00141C  0100               	movlb	0	; () banked
  8909  00141E  6FEA               	movwf	pf_mount@mclst& (0+255),b
  8910  001420  0E00               	movlw	0
  8911  001422  2007               	addwfc	(?___lldiv+1)^0,w,c
  8912  001424  6FEB               	movwf	(pf_mount@mclst+1)& (0+255),b
  8913  001426  0E00               	movlw	0
  8914  001428  2008               	addwfc	(?___lldiv+2)^0,w,c
  8915  00142A  6FEC               	movwf	(pf_mount@mclst+2)& (0+255),b
  8916  00142C  0E00               	movlw	0
  8917  00142E  2009               	addwfc	(?___lldiv+3)^0,w,c
  8918  001430  6FED               	movwf	(pf_mount@mclst+3)& (0+255),b
  8919  001432                     
  8920                           ; BSR set to: 0
  8921                           ;pff.c: 795:  fs->n_fatent = (DWORD)mclst;
  8922  001432  EE20 F006          	lfsr	2,6
  8923  001436  51AA               	movf	pf_mount@fs& (0+255),w,b
  8924  001438  26D9               	addwf	fsr2l,f,c
  8925  00143A  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  8926  00143C  22DA               	addwfc	fsr2h,f,c
  8927  00143E  C0EA  FFDE         	movff	pf_mount@mclst,postinc2
  8928  001442  C0EB  FFDE         	movff	pf_mount@mclst+1,postinc2
  8929  001446  C0EC  FFDE         	movff	pf_mount@mclst+2,postinc2
  8930  00144A  C0ED  FFDE         	movff	pf_mount@mclst+3,postinc2
  8931  00144E                     
  8932                           ; BSR set to: 0
  8933                           ;pff.c: 797:  fmt = 0;
  8934  00144E  0E00               	movlw	0
  8935  001450  6FF6               	movwf	pf_mount@fmt& (0+255),b
  8936  001452                     
  8937                           ; BSR set to: 0
  8938  001452  51ED               	movf	(pf_mount@mclst+3)& (0+255),w,b
  8939  001454  11EC               	iorwf	(pf_mount@mclst+2)& (0+255),w,b
  8940  001456  E10B               	bnz	u9320
  8941  001458  0EF7               	movlw	247
  8942  00145A  5DEA               	subwf	pf_mount@mclst& (0+255),w,b
  8943  00145C  0EFF               	movlw	255
  8944  00145E  59EB               	subwfb	(pf_mount@mclst+1)& (0+255),w,b
  8945  001460  A0D8               	btfss	status,0,c
  8946  001462  EF35  F00A         	goto	u9321
  8947  001466  EF37  F00A         	goto	u9320
  8948  00146A                     u9321:
  8949  00146A  EF39  F00A         	goto	l325
  8950  00146E                     u9320:
  8951  00146E                     
  8952                           ; BSR set to: 0
  8953                           ;pff.c: 803:   fmt = 3;
  8954  00146E  0E03               	movlw	3
  8955  001470  6FF6               	movwf	pf_mount@fmt& (0+255),b
  8956  001472                     l325:
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;pff.c: 804:  if (!fmt) return FR_NO_FILESYSTEM;
  8960  001472  51F6               	movf	pf_mount@fmt& (0+255),w,b
  8961  001474  A4D8               	btfss	status,2,c
  8962  001476  EF3F  F00A         	goto	u9331
  8963  00147A  EF41  F00A         	goto	u9330
  8964  00147E                     u9331:
  8965  00147E  EF43  F00A         	goto	l7397
  8966  001482                     u9330:
  8967  001482  EF87  F008         	goto	l7345
  8968  001486                     l7397:
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;pff.c: 805:  fs->fs_type = fmt;
  8972  001486  C0AA  FFD9         	movff	pf_mount@fs,fsr2l
  8973  00148A  C0AB  FFDA         	movff	pf_mount@fs+1,fsr2h
  8974  00148E  C0F6  FFDF         	movff	pf_mount@fmt,indf2
  8975  001492                     
  8976                           ; BSR set to: 0
  8977                           ;pff.c: 808:   fs->dirbase = (DWORD)(((DWORD)*((BYTE*)(buf+(44 -13))+3)<<24)|((DWORD)*((
      +                          BYTE*)(buf+(44 -13))+2)<<16)|((WORD)*((BYTE*)(buf+(44 -13))+1)<<8)|*(BYTE*)(buf+(44 -13)
      +                          ));
  8978  001492  51E2               	movf	(pf_mount@buf+32)& (0+255),w,b
  8979  001494  6FAD               	movwf	(??_pf_mount+1)& (0+255),b
  8980  001496  6BAC               	clrf	??_pf_mount& (0+255),b
  8981  001498  C0E3  F0AE         	movff	pf_mount@buf+33,??_pf_mount+2
  8982  00149C  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8983  00149E  6BB0               	clrf	(??_pf_mount+4)& (0+255),b
  8984  0014A0  6BB1               	clrf	(??_pf_mount+5)& (0+255),b
  8985  0014A2  C0AF  F0B1         	movff	??_pf_mount+3,??_pf_mount+5
  8986  0014A6  C0AE  F0B0         	movff	??_pf_mount+2,??_pf_mount+4
  8987  0014AA  6BAF               	clrf	(??_pf_mount+3)& (0+255),b
  8988  0014AC  6BAE               	clrf	(??_pf_mount+2)& (0+255),b
  8989  0014AE  C0E4  F0B2         	movff	pf_mount@buf+34,??_pf_mount+6
  8990  0014B2  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8991  0014B4  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8992  0014B6  6BB5               	clrf	(??_pf_mount+9)& (0+255),b
  8993  0014B8  C0B2  F0B5         	movff	??_pf_mount+6,??_pf_mount+9
  8994  0014BC  6BB4               	clrf	(??_pf_mount+8)& (0+255),b
  8995  0014BE  6BB3               	clrf	(??_pf_mount+7)& (0+255),b
  8996  0014C0  6BB2               	clrf	(??_pf_mount+6)& (0+255),b
  8997  0014C2  51AE               	movf	(??_pf_mount+2)& (0+255),w,b
  8998  0014C4  11B2               	iorwf	(??_pf_mount+6)& (0+255),w,b
  8999  0014C6  6FB6               	movwf	(??_pf_mount+10)& (0+255),b
  9000  0014C8  51AF               	movf	(??_pf_mount+3)& (0+255),w,b
  9001  0014CA  11B3               	iorwf	(??_pf_mount+7)& (0+255),w,b
  9002  0014CC  6FB7               	movwf	(??_pf_mount+11)& (0+255),b
  9003  0014CE  51B0               	movf	(??_pf_mount+4)& (0+255),w,b
  9004  0014D0  11B4               	iorwf	(??_pf_mount+8)& (0+255),w,b
  9005  0014D2  6FB8               	movwf	(??_pf_mount+12)& (0+255),b
  9006  0014D4  51B1               	movf	(??_pf_mount+5)& (0+255),w,b
  9007  0014D6  11B5               	iorwf	(??_pf_mount+9)& (0+255),w,b
  9008  0014D8  6FB9               	movwf	(??_pf_mount+13)& (0+255),b
  9009  0014DA  51AC               	movf	??_pf_mount& (0+255),w,b
  9010  0014DC  11B6               	iorwf	(??_pf_mount+10)& (0+255),w,b
  9011  0014DE  6FBA               	movwf	(??_pf_mount+14)& (0+255),b
  9012  0014E0  51AD               	movf	(??_pf_mount+1)& (0+255),w,b
  9013  0014E2  11B7               	iorwf	(??_pf_mount+11)& (0+255),w,b
  9014  0014E4  6FBB               	movwf	(??_pf_mount+15)& (0+255),b
  9015  0014E6  0E00               	movlw	0
  9016  0014E8  11B8               	iorwf	(??_pf_mount+12)& (0+255),w,b
  9017  0014EA  6FBC               	movwf	(??_pf_mount+16)& (0+255),b
  9018  0014EC  0E00               	movlw	0
  9019  0014EE  11B9               	iorwf	(??_pf_mount+13)& (0+255),w,b
  9020  0014F0  6FBD               	movwf	(??_pf_mount+17)& (0+255),b
  9021  0014F2  51E1               	movf	(pf_mount@buf+31)& (0+255),w,b
  9022  0014F4  11BA               	iorwf	(??_pf_mount+14)& (0+255),w,b
  9023  0014F6  6FBE               	movwf	(??_pf_mount+18)& (0+255),b
  9024  0014F8  51BB               	movf	(??_pf_mount+15)& (0+255),w,b
  9025  0014FA  6FBF               	movwf	(??_pf_mount+19)& (0+255),b
  9026  0014FC  51BC               	movf	(??_pf_mount+16)& (0+255),w,b
  9027  0014FE  6FC0               	movwf	(??_pf_mount+20)& (0+255),b
  9028  001500  51BD               	movf	(??_pf_mount+17)& (0+255),w,b
  9029  001502  6FC1               	movwf	(??_pf_mount+21)& (0+255),b
  9030  001504  EE20 F00E          	lfsr	2,14
  9031  001508  51AA               	movf	pf_mount@fs& (0+255),w,b
  9032  00150A  26D9               	addwf	fsr2l,f,c
  9033  00150C  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  9034  00150E  22DA               	addwfc	fsr2h,f,c
  9035  001510  C0BE  FFDE         	movff	??_pf_mount+18,postinc2
  9036  001514  C0BF  FFDE         	movff	??_pf_mount+19,postinc2
  9037  001518  C0C0  FFDE         	movff	??_pf_mount+20,postinc2
  9038  00151C  C0C1  FFDE         	movff	??_pf_mount+21,postinc2
  9039  001520                     
  9040                           ; BSR set to: 0
  9041                           ;pff.c: 811:  fs->database = fs->fatbase + fsize + fs->n_rootdir / 16;
  9042  001520  EE20 F00A          	lfsr	2,10
  9043  001524  51AA               	movf	pf_mount@fs& (0+255),w,b
  9044  001526  26D9               	addwf	fsr2l,f,c
  9045  001528  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  9046  00152A  22DA               	addwfc	fsr2h,f,c
  9047  00152C  CFDE F0AC          	movff	postinc2,??_pf_mount
  9048  001530  CFDE F0AD          	movff	postinc2,??_pf_mount+1
  9049  001534  CFDE F0AE          	movff	postinc2,??_pf_mount+2
  9050  001538  CFDE F0AF          	movff	postinc2,??_pf_mount+3
  9051  00153C  EE20 F004          	lfsr	2,4
  9052  001540  51AA               	movf	pf_mount@fs& (0+255),w,b
  9053  001542  26D9               	addwf	fsr2l,f,c
  9054  001544  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  9055  001546  22DA               	addwfc	fsr2h,f,c
  9056  001548  CFDE F0B0          	movff	postinc2,??_pf_mount+4
  9057  00154C  CFDD F0B1          	movff	postdec2,??_pf_mount+5
  9058  001550  0E04               	movlw	4
  9059  001552  6FB2               	movwf	(??_pf_mount+6)& (0+255),b
  9060  001554                     u9345:
  9061  001554  90D8               	bcf	status,0,c
  9062  001556  33B1               	rrcf	(??_pf_mount+5)& (0+255),f,b
  9063  001558  33B0               	rrcf	(??_pf_mount+4)& (0+255),f,b
  9064  00155A  2FB2               	decfsz	(??_pf_mount+6)& (0+255),f,b
  9065  00155C  EFAA  F00A         	goto	u9345
  9066  001560  51B0               	movf	(??_pf_mount+4)& (0+255),w,b
  9067  001562  25AC               	addwf	??_pf_mount& (0+255),w,b
  9068  001564  6FB3               	movwf	(??_pf_mount+7)& (0+255),b
  9069  001566  51B1               	movf	(??_pf_mount+5)& (0+255),w,b
  9070  001568  21AD               	addwfc	(??_pf_mount+1)& (0+255),w,b
  9071  00156A  6FB4               	movwf	(??_pf_mount+8)& (0+255),b
  9072  00156C  0E00               	movlw	0
  9073  00156E  21AE               	addwfc	(??_pf_mount+2)& (0+255),w,b
  9074  001570  6FB5               	movwf	(??_pf_mount+9)& (0+255),b
  9075  001572  0E00               	movlw	0
  9076  001574  21AF               	addwfc	(??_pf_mount+3)& (0+255),w,b
  9077  001576  6FB6               	movwf	(??_pf_mount+10)& (0+255),b
  9078  001578  51F2               	movf	pf_mount@fsize& (0+255),w,b
  9079  00157A  25B3               	addwf	(??_pf_mount+7)& (0+255),w,b
  9080  00157C  6FB7               	movwf	(??_pf_mount+11)& (0+255),b
  9081  00157E  51F3               	movf	(pf_mount@fsize+1)& (0+255),w,b
  9082  001580  21B4               	addwfc	(??_pf_mount+8)& (0+255),w,b
  9083  001582  6FB8               	movwf	(??_pf_mount+12)& (0+255),b
  9084  001584  51F4               	movf	(pf_mount@fsize+2)& (0+255),w,b
  9085  001586  21B5               	addwfc	(??_pf_mount+9)& (0+255),w,b
  9086  001588  6FB9               	movwf	(??_pf_mount+13)& (0+255),b
  9087  00158A  51F5               	movf	(pf_mount@fsize+3)& (0+255),w,b
  9088  00158C  21B6               	addwfc	(??_pf_mount+10)& (0+255),w,b
  9089  00158E  6FBA               	movwf	(??_pf_mount+14)& (0+255),b
  9090  001590  EE20 F012          	lfsr	2,18
  9091  001594  51AA               	movf	pf_mount@fs& (0+255),w,b
  9092  001596  26D9               	addwf	fsr2l,f,c
  9093  001598  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  9094  00159A  22DA               	addwfc	fsr2h,f,c
  9095  00159C  C0B7  FFDE         	movff	??_pf_mount+11,postinc2
  9096  0015A0  C0B8  FFDE         	movff	??_pf_mount+12,postinc2
  9097  0015A4  C0B9  FFDE         	movff	??_pf_mount+13,postinc2
  9098  0015A8  C0BA  FFDE         	movff	??_pf_mount+14,postinc2
  9099                           
  9100                           ;pff.c: 813:  fs->flag = 0;
  9101  0015AC  EE20 F001          	lfsr	2,1
  9102  0015B0  51AA               	movf	pf_mount@fs& (0+255),w,b
  9103  0015B2  26D9               	addwf	fsr2l,f,c
  9104  0015B4  51AB               	movf	(pf_mount@fs+1)& (0+255),w,b
  9105  0015B6  22DA               	addwfc	fsr2h,f,c
  9106  0015B8  0E00               	movlw	0
  9107  0015BA  6EDF               	movwf	indf2,c
  9108  0015BC                     
  9109                           ; BSR set to: 0
  9110                           ;pff.c: 814:  FatFs = fs;
  9111  0015BC  C0AA  F0FD         	movff	pf_mount@fs,_FatFs
  9112  0015C0  C0AB  F0FE         	movff	pf_mount@fs+1,_FatFs+1
  9113  0015C4                     
  9114                           ; BSR set to: 0
  9115                           ;pff.c: 816:  return FR_OK;
  9116  0015C4  0E00               	movlw	0
  9117  0015C6                     l313:
  9118  0015C6  0012               	return		;funcret
  9119  0015C8                     __end_of_pf_mount:
  9120                           	callstack 0
  9121                           
  9122 ;; *************** function _disk_initialize *****************
  9123 ;; Defined at:
  9124 ;;		line 172 in file "pic_mmcp.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;		None
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;  ocr             4   21[COMRAM] unsigned char [4]
  9129 ;;  tmr             2   29[COMRAM] unsigned int 
  9130 ;;  n               1   31[COMRAM] unsigned char 
  9131 ;;  ty              1   28[COMRAM] unsigned char 
  9132 ;;  cmd             1   27[COMRAM] unsigned char 
  9133 ;; Return value:  Size  Location     Type
  9134 ;;                  1    wreg      unsigned char 
  9135 ;; Registers used:
  9136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9137 ;; Tracked objects:
  9138 ;;		On entry : 0/0
  9139 ;;		On exit  : 0/0
  9140 ;;		Unchanged: 0/0
  9141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9142 ;;      Params:         0       0       0       0       0       0       0
  9143 ;;      Locals:        11       0       0       0       0       0       0
  9144 ;;      Temps:          1       0       0       0       0       0       0
  9145 ;;      Totals:        12       0       0       0       0       0       0
  9146 ;;Total ram usage:       12 bytes
  9147 ;; Hardware stack levels used: 1
  9148 ;; Hardware stack levels required when called: 4
  9149 ;; This function calls:
  9150 ;;		_dly_100us
  9151 ;;		_init_spi
  9152 ;;		_rcv_spi
  9153 ;;		_send_cmd
  9154 ;; This function is called by:
  9155 ;;		_main
  9156 ;;		_pf_mount
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text27
  9161  002938                     __ptext27:
  9162                           	callstack 0
  9163  002938                     _disk_initialize:
  9164                           	callstack 25
  9165  002938                     
  9166                           ;pic_mmcp.c: 174:  BYTE n, cmd, ty, ocr[4];;pic_mmcp.c: 175:  UINT tmr;;pic_mmcp.c: 182:
      +                            init_spi();
  9167  002938  EC9A  F02B         	call	_init_spi	;wreg free
  9168  00293C                     
  9169                           ;pic_mmcp.c: 183:  LATAbits.LA5 = 1;
  9170  00293C  8A89               	bsf	137,5,c	;volatile
  9171  00293E                     
  9172                           ;pic_mmcp.c: 184:  for (n = 10; n; n--)
  9173  00293E  0E0A               	movlw	10
  9174  002940  6E20               	movwf	disk_initialize@n^0,c
  9175  002942  EFA6  F014         	goto	l4973
  9176  002946                     l4969:
  9177                           
  9178                           ;pic_mmcp.c: 185:         rcv_spi();
  9179  002946  EC7C  F02B         	call	_rcv_spi	;wreg free
  9180  00294A  0620               	decf	disk_initialize@n^0,f,c
  9181  00294C                     l4973:
  9182  00294C  5020               	movf	disk_initialize@n^0,w,c
  9183  00294E  A4D8               	btfss	status,2,c
  9184  002950  EFAC  F014         	goto	u5541
  9185  002954  EFAE  F014         	goto	u5540
  9186  002958                     u5541:
  9187  002958  EFA3  F014         	goto	l4969
  9188  00295C                     u5540:
  9189  00295C                     
  9190                           ;pic_mmcp.c: 187:  ty = 0;
  9191  00295C  0E00               	movlw	0
  9192  00295E  6E1D               	movwf	disk_initialize@ty^0,c
  9193  002960                     
  9194                           ;pic_mmcp.c: 188:  if (send_cmd((0x40+0), 0) == 1) {
  9195  002960  0E00               	movlw	0
  9196  002962  6E0E               	movwf	send_cmd@arg^0,c
  9197  002964  0E00               	movlw	0
  9198  002966  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9199  002968  0E00               	movlw	0
  9200  00296A  6E10               	movwf	(send_cmd@arg+2)^0,c
  9201  00296C  0E00               	movlw	0
  9202  00296E  6E11               	movwf	(send_cmd@arg+3)^0,c
  9203  002970  0E40               	movlw	64
  9204  002972  EC3B  F026         	call	_send_cmd
  9205  002976  06E8               	decf	wreg,f,c
  9206  002978  A4D8               	btfss	status,2,c
  9207  00297A  EFC1  F014         	goto	u5551
  9208  00297E  EFC3  F014         	goto	u5550
  9209  002982                     u5551:
  9210  002982  EFCC  F015         	goto	l5049
  9211  002986                     u5550:
  9212  002986                     
  9213                           ;pic_mmcp.c: 189:   if (send_cmd((0x40+8), 0x1AA) == 1) {
  9214  002986  0EAA               	movlw	170
  9215  002988  6E0E               	movwf	send_cmd@arg^0,c
  9216  00298A  0E01               	movlw	1
  9217  00298C  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9218  00298E  0E00               	movlw	0
  9219  002990  6E10               	movwf	(send_cmd@arg+2)^0,c
  9220  002992  0E00               	movlw	0
  9221  002994  6E11               	movwf	(send_cmd@arg+3)^0,c
  9222  002996  0E48               	movlw	72
  9223  002998  EC3B  F026         	call	_send_cmd
  9224  00299C  06E8               	decf	wreg,f,c
  9225  00299E  A4D8               	btfss	status,2,c
  9226  0029A0  EFD4  F014         	goto	u5561
  9227  0029A4  EFD6  F014         	goto	u5560
  9228  0029A8                     u5561:
  9229  0029A8  EF67  F015         	goto	l5029
  9230  0029AC                     u5560:
  9231  0029AC                     
  9232                           ;pic_mmcp.c: 190:    for (n = 0; n < 4; n++)
  9233  0029AC  0E00               	movlw	0
  9234  0029AE  6E20               	movwf	disk_initialize@n^0,c
  9235  0029B0                     l4987:
  9236                           
  9237                           ;pic_mmcp.c: 191:                 ocr[n] = rcv_spi();
  9238  0029B0  0E16               	movlw	low disk_initialize@ocr
  9239  0029B2  2420               	addwf	disk_initialize@n^0,w,c
  9240  0029B4  6ED9               	movwf	fsr2l,c
  9241  0029B6  6ADA               	clrf	fsr2h,c
  9242  0029B8  0E00               	movlw	high disk_initialize@ocr
  9243  0029BA  22DA               	addwfc	fsr2h,f,c
  9244  0029BC  EC7C  F02B         	call	_rcv_spi	;wreg free
  9245  0029C0  6EDF               	movwf	indf2,c
  9246  0029C2  2A20               	incf	disk_initialize@n^0,f,c
  9247  0029C4  0E03               	movlw	3
  9248  0029C6  6420               	cpfsgt	disk_initialize@n^0,c
  9249  0029C8  EFE8  F014         	goto	u5571
  9250  0029CC  EFEA  F014         	goto	u5570
  9251  0029D0                     u5571:
  9252  0029D0  EFD8  F014         	goto	l4987
  9253  0029D4                     u5570:
  9254  0029D4                     
  9255                           ;pic_mmcp.c: 192:    if (ocr[2] == 0x01 && ocr[3] == 0xAA) {
  9256  0029D4  0418               	decf	(disk_initialize@ocr+2)^0,w,c
  9257  0029D6  A4D8               	btfss	status,2,c
  9258  0029D8  EFF0  F014         	goto	u5581
  9259  0029DC  EFF2  F014         	goto	u5580
  9260  0029E0                     u5581:
  9261  0029E0  EFCC  F015         	goto	l5049
  9262  0029E4                     u5580:
  9263  0029E4  0EAA               	movlw	170
  9264  0029E6  1819               	xorwf	(disk_initialize@ocr+3)^0,w,c
  9265  0029E8  A4D8               	btfss	status,2,c
  9266  0029EA  EFF9  F014         	goto	u5591
  9267  0029EE  EFFB  F014         	goto	u5590
  9268  0029F2                     u5591:
  9269  0029F2  EFCC  F015         	goto	l5049
  9270  0029F6                     u5590:
  9271  0029F6                     
  9272                           ;pic_mmcp.c: 193:     for (tmr = 10000; tmr && send_cmd((0xC0+41), 1UL << 30); tmr--)
  9273  0029F6  0E27               	movlw	39
  9274  0029F8  6E1F               	movwf	(disk_initialize@tmr+1)^0,c
  9275  0029FA  0E10               	movlw	16
  9276  0029FC  6E1E               	movwf	disk_initialize@tmr^0,c
  9277  0029FE  EF06  F015         	goto	l5003
  9278  002A02                     l4999:
  9279                           
  9280                           ;pic_mmcp.c: 194:                     dly_100us();
  9281  002A02  EC9F  F02B         	call	_dly_100us	;wreg free
  9282  002A06  061E               	decf	disk_initialize@tmr^0,f,c
  9283  002A08  A0D8               	btfss	status,0,c
  9284  002A0A  061F               	decf	(disk_initialize@tmr+1)^0,f,c
  9285  002A0C                     l5003:
  9286  002A0C  501E               	movf	disk_initialize@tmr^0,w,c
  9287  002A0E  101F               	iorwf	(disk_initialize@tmr+1)^0,w,c
  9288  002A10  B4D8               	btfsc	status,2,c
  9289  002A12  EF0D  F015         	goto	u5601
  9290  002A16  EF0F  F015         	goto	u5600
  9291  002A1A                     u5601:
  9292  002A1A  EF22  F015         	goto	l5007
  9293  002A1E                     u5600:
  9294  002A1E  0E00               	movlw	0
  9295  002A20  6E0E               	movwf	send_cmd@arg^0,c
  9296  002A22  0E00               	movlw	0
  9297  002A24  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9298  002A26  0E00               	movlw	0
  9299  002A28  6E10               	movwf	(send_cmd@arg+2)^0,c
  9300  002A2A  0E40               	movlw	64
  9301  002A2C  6E11               	movwf	(send_cmd@arg+3)^0,c
  9302  002A2E  0EE9               	movlw	233
  9303  002A30  EC3B  F026         	call	_send_cmd
  9304  002A34  0900               	iorlw	0
  9305  002A36  A4D8               	btfss	status,2,c
  9306  002A38  EF20  F015         	goto	u5611
  9307  002A3C  EF22  F015         	goto	u5610
  9308  002A40                     u5611:
  9309  002A40  EF01  F015         	goto	l4999
  9310  002A44                     u5610:
  9311  002A44                     l5007:
  9312                           
  9313                           ;pic_mmcp.c: 195:     if (tmr && send_cmd((0x40+58), 0) == 0) {
  9314  002A44  501E               	movf	disk_initialize@tmr^0,w,c
  9315  002A46  101F               	iorwf	(disk_initialize@tmr+1)^0,w,c
  9316  002A48  B4D8               	btfsc	status,2,c
  9317  002A4A  EF29  F015         	goto	u5621
  9318  002A4E  EF2B  F015         	goto	u5620
  9319  002A52                     u5621:
  9320  002A52  EFCC  F015         	goto	l600
  9321  002A56                     u5620:
  9322  002A56  0E00               	movlw	0
  9323  002A58  6E0E               	movwf	send_cmd@arg^0,c
  9324  002A5A  0E00               	movlw	0
  9325  002A5C  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9326  002A5E  0E00               	movlw	0
  9327  002A60  6E10               	movwf	(send_cmd@arg+2)^0,c
  9328  002A62  0E00               	movlw	0
  9329  002A64  6E11               	movwf	(send_cmd@arg+3)^0,c
  9330  002A66  0E7A               	movlw	122
  9331  002A68  EC3B  F026         	call	_send_cmd
  9332  002A6C  0900               	iorlw	0
  9333  002A6E  A4D8               	btfss	status,2,c
  9334  002A70  EF3C  F015         	goto	u5631
  9335  002A74  EF3E  F015         	goto	u5630
  9336  002A78                     u5631:
  9337  002A78  EFCC  F015         	goto	l600
  9338  002A7C                     u5630:
  9339  002A7C                     
  9340                           ;pic_mmcp.c: 196:      for (n = 0; n < 4; n++)
  9341  002A7C  0E00               	movlw	0
  9342  002A7E  6E20               	movwf	disk_initialize@n^0,c
  9343  002A80                     l5017:
  9344                           
  9345                           ;pic_mmcp.c: 197:                         ocr[n] = rcv_spi();
  9346  002A80  0E16               	movlw	low disk_initialize@ocr
  9347  002A82  2420               	addwf	disk_initialize@n^0,w,c
  9348  002A84  6ED9               	movwf	fsr2l,c
  9349  002A86  6ADA               	clrf	fsr2h,c
  9350  002A88  0E00               	movlw	high disk_initialize@ocr
  9351  002A8A  22DA               	addwfc	fsr2h,f,c
  9352  002A8C  EC7C  F02B         	call	_rcv_spi	;wreg free
  9353  002A90  6EDF               	movwf	indf2,c
  9354  002A92  2A20               	incf	disk_initialize@n^0,f,c
  9355  002A94  0E03               	movlw	3
  9356  002A96  6420               	cpfsgt	disk_initialize@n^0,c
  9357  002A98  EF50  F015         	goto	u5641
  9358  002A9C  EF52  F015         	goto	u5640
  9359  002AA0                     u5641:
  9360  002AA0  EF40  F015         	goto	l5017
  9361  002AA4                     u5640:
  9362  002AA4                     
  9363                           ;pic_mmcp.c: 198:      ty = (ocr[0] & 0x40) ? 0x04 | 0x08 : 0x04;
  9364  002AA4  BC16               	btfsc	disk_initialize@ocr^0,6,c
  9365  002AA6  EF57  F015         	goto	u5651
  9366  002AAA  EF59  F015         	goto	u5650
  9367  002AAE                     u5651:
  9368  002AAE  EF5F  F015         	goto	l5025
  9369  002AB2                     u5650:
  9370  002AB2  0E00               	movlw	0
  9371  002AB4  6E1B               	movwf	(_disk_initialize$1200+1)^0,c
  9372  002AB6  0E04               	movlw	4
  9373  002AB8  6E1A               	movwf	_disk_initialize$1200^0,c
  9374  002ABA  EF63  F015         	goto	l5027
  9375  002ABE                     l5025:
  9376  002ABE  0E00               	movlw	0
  9377  002AC0  6E1B               	movwf	(_disk_initialize$1200+1)^0,c
  9378  002AC2  0E0C               	movlw	12
  9379  002AC4  6E1A               	movwf	_disk_initialize$1200^0,c
  9380  002AC6                     l5027:
  9381  002AC6  C01A  F01D         	movff	_disk_initialize$1200,disk_initialize@ty
  9382  002ACA  EFCC  F015         	goto	l5049
  9383  002ACE                     l5029:
  9384                           
  9385                           ;pic_mmcp.c: 202:    if (send_cmd((0xC0+41), 0) <= 1) {
  9386  002ACE  0E00               	movlw	0
  9387  002AD0  6E0E               	movwf	send_cmd@arg^0,c
  9388  002AD2  0E00               	movlw	0
  9389  002AD4  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9390  002AD6  0E00               	movlw	0
  9391  002AD8  6E10               	movwf	(send_cmd@arg+2)^0,c
  9392  002ADA  0E00               	movlw	0
  9393  002ADC  6E11               	movwf	(send_cmd@arg+3)^0,c
  9394  002ADE  0EE9               	movlw	233
  9395  002AE0  EC3B  F026         	call	_send_cmd
  9396  002AE4  6E15               	movwf	??_disk_initialize^0,c
  9397  002AE6  0E02               	movlw	2
  9398  002AE8  6015               	cpfslt	??_disk_initialize^0,c
  9399  002AEA  EF79  F015         	goto	u5661
  9400  002AEE  EF7B  F015         	goto	u5660
  9401  002AF2                     u5661:
  9402  002AF2  EF81  F015         	goto	l5033
  9403  002AF6                     u5660:
  9404  002AF6                     
  9405                           ;pic_mmcp.c: 203:     ty = 0x02; cmd = (0xC0+41);
  9406  002AF6  0E02               	movlw	2
  9407  002AF8  6E1D               	movwf	disk_initialize@ty^0,c
  9408  002AFA  0EE9               	movlw	233
  9409  002AFC  6E1C               	movwf	disk_initialize@cmd^0,c
  9410                           
  9411                           ;pic_mmcp.c: 204:    } else {
  9412  002AFE  EF85  F015         	goto	l602
  9413  002B02                     l5033:
  9414                           
  9415                           ;pic_mmcp.c: 205:     ty = 0x01; cmd = (0x40+1);
  9416  002B02  0E01               	movlw	1
  9417  002B04  6E1D               	movwf	disk_initialize@ty^0,c
  9418  002B06  0E41               	movlw	65
  9419  002B08  6E1C               	movwf	disk_initialize@cmd^0,c
  9420  002B0A                     l602:
  9421                           
  9422                           ;pic_mmcp.c: 207:    for (tmr = 10000; tmr && send_cmd(cmd, 0); tmr--)
  9423  002B0A  0E27               	movlw	39
  9424  002B0C  6E1F               	movwf	(disk_initialize@tmr+1)^0,c
  9425  002B0E  0E10               	movlw	16
  9426  002B10  6E1E               	movwf	disk_initialize@tmr^0,c
  9427  002B12  EF90  F015         	goto	l5039
  9428  002B16                     l5035:
  9429                           
  9430                           ;pic_mmcp.c: 208:                 dly_100us();
  9431  002B16  EC9F  F02B         	call	_dly_100us	;wreg free
  9432  002B1A  061E               	decf	disk_initialize@tmr^0,f,c
  9433  002B1C  A0D8               	btfss	status,0,c
  9434  002B1E  061F               	decf	(disk_initialize@tmr+1)^0,f,c
  9435  002B20                     l5039:
  9436  002B20  501E               	movf	disk_initialize@tmr^0,w,c
  9437  002B22  101F               	iorwf	(disk_initialize@tmr+1)^0,w,c
  9438  002B24  B4D8               	btfsc	status,2,c
  9439  002B26  EF97  F015         	goto	u5671
  9440  002B2A  EF99  F015         	goto	u5670
  9441  002B2E                     u5671:
  9442  002B2E  EFAC  F015         	goto	l5043
  9443  002B32                     u5670:
  9444  002B32  0E00               	movlw	0
  9445  002B34  6E0E               	movwf	send_cmd@arg^0,c
  9446  002B36  0E00               	movlw	0
  9447  002B38  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9448  002B3A  0E00               	movlw	0
  9449  002B3C  6E10               	movwf	(send_cmd@arg+2)^0,c
  9450  002B3E  0E00               	movlw	0
  9451  002B40  6E11               	movwf	(send_cmd@arg+3)^0,c
  9452  002B42  501C               	movf	disk_initialize@cmd^0,w,c
  9453  002B44  EC3B  F026         	call	_send_cmd
  9454  002B48  0900               	iorlw	0
  9455  002B4A  A4D8               	btfss	status,2,c
  9456  002B4C  EFAA  F015         	goto	u5681
  9457  002B50  EFAC  F015         	goto	u5680
  9458  002B54                     u5681:
  9459  002B54  EF8B  F015         	goto	l5035
  9460  002B58                     u5680:
  9461  002B58                     l5043:
  9462                           
  9463                           ;pic_mmcp.c: 209:    if (!tmr || send_cmd((0x40+16), 512) != 0)
  9464  002B58  501E               	movf	disk_initialize@tmr^0,w,c
  9465  002B5A  101F               	iorwf	(disk_initialize@tmr+1)^0,w,c
  9466  002B5C  B4D8               	btfsc	status,2,c
  9467  002B5E  EFB3  F015         	goto	u5691
  9468  002B62  EFB5  F015         	goto	u5690
  9469  002B66                     u5691:
  9470  002B66  EFC8  F015         	goto	l5047
  9471  002B6A                     u5690:
  9472  002B6A  0E00               	movlw	0
  9473  002B6C  6E0E               	movwf	send_cmd@arg^0,c
  9474  002B6E  0E02               	movlw	2
  9475  002B70  6E0F               	movwf	(send_cmd@arg+1)^0,c
  9476  002B72  0E00               	movlw	0
  9477  002B74  6E10               	movwf	(send_cmd@arg+2)^0,c
  9478  002B76  0E00               	movlw	0
  9479  002B78  6E11               	movwf	(send_cmd@arg+3)^0,c
  9480  002B7A  0E50               	movlw	80
  9481  002B7C  EC3B  F026         	call	_send_cmd
  9482  002B80  0900               	iorlw	0
  9483  002B82  B4D8               	btfsc	status,2,c
  9484  002B84  EFC6  F015         	goto	u5701
  9485  002B88  EFC8  F015         	goto	u5700
  9486  002B8C                     u5701:
  9487  002B8C  EFCC  F015         	goto	l5049
  9488  002B90                     u5700:
  9489  002B90                     l5047:
  9490                           
  9491                           ;pic_mmcp.c: 210:     ty = 0;
  9492  002B90  0E00               	movlw	0
  9493  002B92  6E1D               	movwf	disk_initialize@ty^0,c
  9494  002B94  EFCC  F015         	goto	l5049
  9495  002B98                     l600:
  9496  002B98                     l5049:
  9497                           
  9498                           ;pic_mmcp.c: 213:  CardType = ty;
  9499  002B98  C01D  F0FF         	movff	disk_initialize@ty,_CardType
  9500  002B9C                     
  9501                           ;pic_mmcp.c: 214:  LATAbits.LA5 = 1;
  9502  002B9C  8A89               	bsf	137,5,c	;volatile
  9503  002B9E                     
  9504                           ;pic_mmcp.c: 215:  rcv_spi();
  9505  002B9E  EC7C  F02B         	call	_rcv_spi	;wreg free
  9506  002BA2                     
  9507                           ;pic_mmcp.c: 217:  return ty ? 0 : 0x01;
  9508  002BA2  501D               	movf	disk_initialize@ty^0,w,c
  9509  002BA4  B4D8               	btfsc	status,2,c
  9510  002BA6  EFD7  F015         	goto	u5711
  9511  002BAA  EFDA  F015         	goto	u5710
  9512  002BAE                     u5711:
  9513  002BAE  0E01               	movlw	1
  9514  002BB0  EFDB  F015         	goto	u5720
  9515  002BB4                     u5710:
  9516  002BB4  0E00               	movlw	0
  9517  002BB6                     u5720:
  9518  002BB6  0012               	return		;funcret
  9519  002BB8                     __end_of_disk_initialize:
  9520                           	callstack 0
  9521                           
  9522 ;; *************** function _init_spi *****************
  9523 ;; Defined at:
  9524 ;;		line 22 in file "pic_mmcp.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;		None
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;		None
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  1    wreg      void 
  9531 ;; Registers used:
  9532 ;;		wreg, status,2
  9533 ;; Tracked objects:
  9534 ;;		On entry : 0/0
  9535 ;;		On exit  : 0/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9538 ;;      Params:         0       0       0       0       0       0       0
  9539 ;;      Locals:         0       0       0       0       0       0       0
  9540 ;;      Temps:          0       0       0       0       0       0       0
  9541 ;;      Totals:         0       0       0       0       0       0       0
  9542 ;;Total ram usage:        0 bytes
  9543 ;; Hardware stack levels used: 1
  9544 ;; Hardware stack levels required when called: 1
  9545 ;; This function calls:
  9546 ;;		Nothing
  9547 ;; This function is called by:
  9548 ;;		_disk_initialize
  9549 ;; This function uses a non-reentrant model
  9550 ;;
  9551                           
  9552                           	psect	text28
  9553  005734                     __ptext28:
  9554                           	callstack 0
  9555  005734                     _init_spi:
  9556                           	callstack 27
  9557  005734                     
  9558                           ;pic_mmcp.c: 24:     SSPCON1 = 0x31;
  9559  005734  0E31               	movlw	49
  9560  005736  6EC6               	movwf	198,c	;volatile
  9561                           
  9562                           ;pic_mmcp.c: 32:     SSPSTAT = 0x80;
  9563  005738  0E80               	movlw	128
  9564  00573A  6EC7               	movwf	199,c	;volatile
  9565  00573C  0012               	return		;funcret
  9566  00573E                     __end_of_init_spi:
  9567                           	callstack 0
  9568                           
  9569 ;; *************** function _dly_100us *****************
  9570 ;; Defined at:
  9571 ;;		line 40 in file "pic_mmcp.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;		None
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;		None
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  1    wreg      void 
  9578 ;; Registers used:
  9579 ;;		wreg
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9585 ;;      Params:         0       0       0       0       0       0       0
  9586 ;;      Locals:         0       0       0       0       0       0       0
  9587 ;;      Temps:          0       0       0       0       0       0       0
  9588 ;;      Totals:         0       0       0       0       0       0       0
  9589 ;;Total ram usage:        0 bytes
  9590 ;; Hardware stack levels used: 1
  9591 ;; Hardware stack levels required when called: 1
  9592 ;; This function calls:
  9593 ;;		Nothing
  9594 ;; This function is called by:
  9595 ;;		_disk_initialize
  9596 ;; This function uses a non-reentrant model
  9597 ;;
  9598                           
  9599                           	psect	text29
  9600  00573E                     __ptext29:
  9601                           	callstack 0
  9602  00573E                     _dly_100us:
  9603                           	callstack 27
  9604  00573E                     
  9605                           ;pic_mmcp.c: 42:     _delay((unsigned long)((100)*(40000000/4000000.0)));
  9606  00573E  0EC8               	movlw	200
  9607  005740                     u10047:
  9608  005740  D000               	nop2	
  9609  005742  2EE8               	decfsz	wreg,f,c
  9610  005744  D7FD               	bra	u10047
  9611  005746  0012               	return		;funcret
  9612  005748                     __end_of_dly_100us:
  9613                           	callstack 0
  9614                           
  9615 ;; *************** function _check_fs *****************
  9616 ;; Defined at:
  9617 ;;		line 718 in file "pff.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  buf             2   32[BANK0 ] PTR unsigned char 
  9620 ;;		 -> pf_mount@buf(36), 
  9621 ;;  sect            4   34[BANK0 ] unsigned long 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;		None
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      unsigned char 
  9626 ;; Registers used:
  9627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9633 ;;      Params:         0       6       0       0       0       0       0
  9634 ;;      Locals:         0       0       0       0       0       0       0
  9635 ;;      Temps:          0       4       0       0       0       0       0
  9636 ;;      Totals:         0      10       0       0       0       0       0
  9637 ;;Total ram usage:       10 bytes
  9638 ;; Hardware stack levels used: 1
  9639 ;; Hardware stack levels required when called: 10
  9640 ;; This function calls:
  9641 ;;		_disk_readp
  9642 ;; This function is called by:
  9643 ;;		_pf_mount
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           	psect	text30
  9648  00451E                     __ptext30:
  9649                           	callstack 0
  9650  00451E                     _check_fs:
  9651                           	callstack 19
  9652  00451E                     
  9653                           ;pff.c: 719:  BYTE *buf,;pff.c: 720:  DWORD sect;pff.c: 722: {;pff.c: 723:  if (disk_rea
      +                          dp(buf, sect, 510, 2))
  9654  00451E  C0A0  F090         	movff	check_fs@buf,disk_readp@buff
  9655  004522  C0A1  F091         	movff	check_fs@buf+1,disk_readp@buff+1
  9656  004526  C0A2  F092         	movff	check_fs@sect,disk_readp@sector
  9657  00452A  C0A3  F093         	movff	check_fs@sect+1,disk_readp@sector+1
  9658  00452E  C0A4  F094         	movff	check_fs@sect+2,disk_readp@sector+2
  9659  004532  C0A5  F095         	movff	check_fs@sect+3,disk_readp@sector+3
  9660  004536  0E01               	movlw	1
  9661  004538  0100               	movlb	0	; () banked
  9662  00453A  6F97               	movwf	(disk_readp@offset+1)& (0+255),b
  9663  00453C  0EFE               	movlw	254
  9664  00453E  6F96               	movwf	disk_readp@offset& (0+255),b
  9665  004540  0E00               	movlw	0
  9666  004542  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  9667  004544  0E02               	movlw	2
  9668  004546  6F98               	movwf	disk_readp@count& (0+255),b
  9669  004548  EC64  F01B         	call	_disk_readp	;wreg free
  9670  00454C  0900               	iorlw	0
  9671  00454E  B4D8               	btfsc	status,2,c
  9672  004550  EFAC  F022         	goto	u9031
  9673  004554  EFAE  F022         	goto	u9030
  9674  004558                     u9031:
  9675  004558  EFB1  F022         	goto	l7171
  9676  00455C                     u9030:
  9677  00455C                     
  9678                           ;pff.c: 724:   return 3;
  9679  00455C  0E03               	movlw	3
  9680  00455E  EF1C  F023         	goto	l306
  9681  004562                     l7171:
  9682                           
  9683                           ;pff.c: 725:  if ((WORD)(((WORD)*((BYTE*)(buf)+1)<<8)|(WORD)*(BYTE*)(buf)) != 0xAA55)
  9684  004562  0100               	movlb	0	; () banked
  9685  004564  EE20 F001          	lfsr	2,1
  9686  004568  51A0               	movf	check_fs@buf& (0+255),w,b
  9687  00456A  26D9               	addwf	fsr2l,f,c
  9688  00456C  51A1               	movf	(check_fs@buf+1)& (0+255),w,b
  9689  00456E  22DA               	addwfc	fsr2h,f,c
  9690  004570  50DF               	movf	indf2,w,c
  9691  004572  6FA6               	movwf	??_check_fs& (0+255),b
  9692  004574  51A6               	movf	??_check_fs& (0+255),w,b
  9693  004576  6FA8               	movwf	(??_check_fs+2)& (0+255),b
  9694  004578  6BA7               	clrf	(??_check_fs+1)& (0+255),b
  9695  00457A  C0A0  FFD9         	movff	check_fs@buf,fsr2l
  9696  00457E  C0A1  FFDA         	movff	check_fs@buf+1,fsr2h
  9697  004582  50DF               	movf	indf2,w,c
  9698  004584  6FA9               	movwf	(??_check_fs+3)& (0+255),b
  9699  004586  51A9               	movf	(??_check_fs+3)& (0+255),w,b
  9700  004588  13A7               	iorwf	(??_check_fs+1)& (0+255),f,b
  9701  00458A  0E00               	movlw	0
  9702  00458C  13A8               	iorwf	(??_check_fs+2)& (0+255),f,b
  9703  00458E  0E55               	movlw	85
  9704  004590  19A7               	xorwf	(??_check_fs+1)& (0+255),w,b
  9705  004592  E109               	bnz	u9040
  9706  004594  0EAA               	movlw	170
  9707  004596  19A8               	xorwf	(??_check_fs+2)& (0+255),w,b
  9708  004598  B4D8               	btfsc	status,2,c
  9709  00459A  EFD1  F022         	goto	u9041
  9710  00459E  EFD3  F022         	goto	u9040
  9711  0045A2                     u9041:
  9712  0045A2  EFD9  F022         	goto	l7185
  9713  0045A6                     u9040:
  9714  0045A6                     
  9715                           ; BSR set to: 0
  9716                           ;pff.c: 726:   return 2;
  9717  0045A6  0E02               	movlw	2
  9718  0045A8  EF1C  F023         	goto	l306
  9719  0045AC                     l7181:
  9720                           
  9721                           ; BSR set to: 0
  9722                           ;pff.c: 729:   return 0;
  9723  0045AC  0E00               	movlw	0
  9724  0045AE  EF1C  F023         	goto	l306
  9725  0045B2                     l7185:
  9726                           
  9727                           ; BSR set to: 0
  9728  0045B2  C0A0  F090         	movff	check_fs@buf,disk_readp@buff
  9729  0045B6  C0A1  F091         	movff	check_fs@buf+1,disk_readp@buff+1
  9730  0045BA  C0A2  F092         	movff	check_fs@sect,disk_readp@sector
  9731  0045BE  C0A3  F093         	movff	check_fs@sect+1,disk_readp@sector+1
  9732  0045C2  C0A4  F094         	movff	check_fs@sect+2,disk_readp@sector+2
  9733  0045C6  C0A5  F095         	movff	check_fs@sect+3,disk_readp@sector+3
  9734  0045CA  0E00               	movlw	0
  9735  0045CC  6F97               	movwf	(disk_readp@offset+1)& (0+255),b
  9736  0045CE  0E52               	movlw	82
  9737  0045D0  6F96               	movwf	disk_readp@offset& (0+255),b
  9738  0045D2  0E00               	movlw	0
  9739  0045D4  6F99               	movwf	(disk_readp@count+1)& (0+255),b
  9740  0045D6  0E02               	movlw	2
  9741  0045D8  6F98               	movwf	disk_readp@count& (0+255),b
  9742  0045DA  EC64  F01B         	call	_disk_readp	;wreg free
  9743  0045DE  0900               	iorlw	0
  9744  0045E0  A4D8               	btfss	status,2,c
  9745  0045E2  EFF5  F022         	goto	u9051
  9746  0045E6  EFF7  F022         	goto	u9050
  9747  0045EA                     u9051:
  9748  0045EA  EF1B  F023         	goto	l7193
  9749  0045EE                     u9050:
  9750  0045EE  0100               	movlb	0	; () banked
  9751  0045F0  EE20 F001          	lfsr	2,1
  9752  0045F4  51A0               	movf	check_fs@buf& (0+255),w,b
  9753  0045F6  26D9               	addwf	fsr2l,f,c
  9754  0045F8  51A1               	movf	(check_fs@buf+1)& (0+255),w,b
  9755  0045FA  22DA               	addwfc	fsr2h,f,c
  9756  0045FC  50DF               	movf	indf2,w,c
  9757  0045FE  6FA6               	movwf	??_check_fs& (0+255),b
  9758  004600  51A6               	movf	??_check_fs& (0+255),w,b
  9759  004602  6FA8               	movwf	(??_check_fs+2)& (0+255),b
  9760  004604  6BA7               	clrf	(??_check_fs+1)& (0+255),b
  9761  004606  C0A0  FFD9         	movff	check_fs@buf,fsr2l
  9762  00460A  C0A1  FFDA         	movff	check_fs@buf+1,fsr2h
  9763  00460E  50DF               	movf	indf2,w,c
  9764  004610  6FA9               	movwf	(??_check_fs+3)& (0+255),b
  9765  004612  51A9               	movf	(??_check_fs+3)& (0+255),w,b
  9766  004614  13A7               	iorwf	(??_check_fs+1)& (0+255),f,b
  9767  004616  0E00               	movlw	0
  9768  004618  13A8               	iorwf	(??_check_fs+2)& (0+255),f,b
  9769  00461A  0E46               	movlw	70
  9770  00461C  19A7               	xorwf	(??_check_fs+1)& (0+255),w,b
  9771  00461E  E107               	bnz	u9061
  9772  004620  0E41               	movlw	65
  9773  004622  19A8               	xorwf	(??_check_fs+2)& (0+255),w,b
  9774  004624  A4D8               	btfss	status,2,c
  9775  004626  EF17  F023         	goto	u9061
  9776  00462A  EF19  F023         	goto	u9060
  9777  00462E                     u9061:
  9778  00462E  EF1B  F023         	goto	l7193
  9779  004632                     u9060:
  9780  004632  EFD6  F022         	goto	l7181
  9781  004636                     l7193:
  9782                           
  9783                           ;pff.c: 732:  return 1;
  9784  004636  0E01               	movlw	1
  9785  004638                     l306:
  9786  004638  0012               	return		;funcret
  9787  00463A                     __end_of_check_fs:
  9788                           	callstack 0
  9789                           
  9790 ;; *************** function _pf_lseek *****************
  9791 ;; Defined at:
  9792 ;;		line 1000 in file "pff.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;  ofs             4   64[BANK0 ] unsigned long 
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;  clst            4   97[BANK0 ] unsigned long 
  9797 ;;  bcs             4   93[BANK0 ] unsigned long 
  9798 ;;  ifptr           4   89[BANK0 ] unsigned long 
  9799 ;;  sect            4   85[BANK0 ] unsigned long 
  9800 ;;  fs              2  101[BANK0 ] PTR struct .
  9801 ;;		 -> NULL(0), main@fs(42), 
  9802 ;; Return value:  Size  Location     Type
  9803 ;;                  1    wreg      enum E3114
  9804 ;; Registers used:
  9805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9806 ;; Tracked objects:
  9807 ;;		On entry : 0/0
  9808 ;;		On exit  : 0/0
  9809 ;;		Unchanged: 0/0
  9810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9811 ;;      Params:         0       4       0       0       0       0       0
  9812 ;;      Locals:         0      18       0       0       0       0       0
  9813 ;;      Temps:          0      17       0       0       0       0       0
  9814 ;;      Totals:         0      39       0       0       0       0       0
  9815 ;;Total ram usage:       39 bytes
  9816 ;; Hardware stack levels used: 1
  9817 ;; Hardware stack levels required when called: 11
  9818 ;; This function calls:
  9819 ;;		___lldiv
  9820 ;;		_clust2sect
  9821 ;;		_get_fat
  9822 ;; This function is called by:
  9823 ;;		_main
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           	psect	text31
  9828  0015C8                     __ptext31:
  9829                           	callstack 0
  9830  0015C8                     _pf_lseek:
  9831                           	callstack 19
  9832  0015C8                     
  9833                           ;pff.c: 1001:  DWORD ofs;pff.c: 1003: {;pff.c: 1004:  DWORD clst;;pff.c: 1005:  DWORD bc
      +                          s, sect, ifptr;;pff.c: 1006:  FATFS *fs = FatFs;
  9834  0015C8  C0FD  F0E5         	movff	_FatFs,pf_lseek@fs
  9835  0015CC  C0FE  F0E6         	movff	_FatFs+1,pf_lseek@fs+1
  9836                           
  9837                           ;pff.c: 1009:  if (!fs) return FR_NOT_ENABLED;
  9838  0015D0  0100               	movlb	0	; () banked
  9839  0015D2  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9840  0015D4  11E6               	iorwf	(pf_lseek@fs+1)& (0+255),w,b
  9841  0015D6  A4D8               	btfss	status,2,c
  9842  0015D8  EFF0  F00A         	goto	u9521
  9843  0015DC  EFF2  F00A         	goto	u9520
  9844  0015E0                     u9521:
  9845  0015E0  EFF5  F00A         	goto	l7545
  9846  0015E4                     u9520:
  9847  0015E4                     
  9848                           ; BSR set to: 0
  9849  0015E4  0E05               	movlw	5
  9850  0015E6  EF2B  F00D         	goto	l363
  9851  0015EA                     l7545:
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;pff.c: 1010:  if (!(fs->flag & 0x01))
  9855  0015EA  EE20 F001          	lfsr	2,1
  9856  0015EE  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9857  0015F0  26D9               	addwf	fsr2l,f,c
  9858  0015F2  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
  9859  0015F4  22DA               	addwfc	fsr2h,f,c
  9860  0015F6  B0DF               	btfsc	indf2,0,c
  9861  0015F8  EF00  F00B         	goto	u9531
  9862  0015FC  EF02  F00B         	goto	u9530
  9863  001600                     u9531:
  9864  001600  EF05  F00B         	goto	l7551
  9865  001604                     u9530:
  9866  001604                     
  9867                           ; BSR set to: 0
  9868                           ;pff.c: 1011:    return FR_NOT_OPENED;
  9869  001604  0E04               	movlw	4
  9870  001606  EF2B  F00D         	goto	l363
  9871  00160A                     l7551:
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;pff.c: 1013:  if (ofs > fs->fsize) ofs = fs->fsize;
  9875  00160A  EE20 F01A          	lfsr	2,26
  9876  00160E  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9877  001610  26D9               	addwf	fsr2l,f,c
  9878  001612  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
  9879  001614  22DA               	addwfc	fsr2h,f,c
  9880  001616  51C0               	movf	pf_lseek@ofs& (0+255),w,b
  9881  001618  5CDE               	subwf	postinc2,w,c
  9882  00161A  51C1               	movf	(pf_lseek@ofs+1)& (0+255),w,b
  9883  00161C  58DE               	subwfb	postinc2,w,c
  9884  00161E  51C2               	movf	(pf_lseek@ofs+2)& (0+255),w,b
  9885  001620  58DE               	subwfb	postinc2,w,c
  9886  001622  51C3               	movf	(pf_lseek@ofs+3)& (0+255),w,b
  9887  001624  58DE               	subwfb	postinc2,w,c
  9888  001626  B0D8               	btfsc	status,0,c
  9889  001628  EF18  F00B         	goto	u9541
  9890  00162C  EF1A  F00B         	goto	u9540
  9891  001630                     u9541:
  9892  001630  EF28  F00B         	goto	l365
  9893  001634                     u9540:
  9894  001634                     
  9895                           ; BSR set to: 0
  9896  001634  EE20 F01A          	lfsr	2,26
  9897  001638  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9898  00163A  26D9               	addwf	fsr2l,f,c
  9899  00163C  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
  9900  00163E  22DA               	addwfc	fsr2h,f,c
  9901  001640  CFDE F0C0          	movff	postinc2,pf_lseek@ofs
  9902  001644  CFDE F0C1          	movff	postinc2,pf_lseek@ofs+1
  9903  001648  CFDE F0C2          	movff	postinc2,pf_lseek@ofs+2
  9904  00164C  CFDE F0C3          	movff	postinc2,pf_lseek@ofs+3
  9905  001650                     l365:
  9906                           
  9907                           ; BSR set to: 0
  9908                           ;pff.c: 1014:  ifptr = fs->fptr;
  9909  001650  EE20 F016          	lfsr	2,22
  9910  001654  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9911  001656  26D9               	addwf	fsr2l,f,c
  9912  001658  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
  9913  00165A  22DA               	addwfc	fsr2h,f,c
  9914  00165C  CFDE F0D9          	movff	postinc2,pf_lseek@ifptr
  9915  001660  CFDE F0DA          	movff	postinc2,pf_lseek@ifptr+1
  9916  001664  CFDE F0DB          	movff	postinc2,pf_lseek@ifptr+2
  9917  001668  CFDE F0DC          	movff	postinc2,pf_lseek@ifptr+3
  9918                           
  9919                           ;pff.c: 1015:  fs->fptr = 0;
  9920  00166C  EE20 F016          	lfsr	2,22
  9921  001670  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9922  001672  26D9               	addwf	fsr2l,f,c
  9923  001674  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
  9924  001676  22DA               	addwfc	fsr2h,f,c
  9925  001678  6ADE               	clrf	postinc2,c
  9926  00167A  6ADE               	clrf	postinc2,c
  9927  00167C  6ADE               	clrf	postinc2,c
  9928  00167E  6ADD               	clrf	postdec2,c
  9929  001680                     
  9930                           ; BSR set to: 0
  9931                           ;pff.c: 1016:  if (ofs > 0) {
  9932  001680  51C0               	movf	pf_lseek@ofs& (0+255),w,b
  9933  001682  11C1               	iorwf	(pf_lseek@ofs+1)& (0+255),w,b
  9934  001684  11C2               	iorwf	(pf_lseek@ofs+2)& (0+255),w,b
  9935  001686  11C3               	iorwf	(pf_lseek@ofs+3)& (0+255),w,b
  9936  001688  B4D8               	btfsc	status,2,c
  9937  00168A  EF49  F00B         	goto	u9551
  9938  00168E  EF4B  F00B         	goto	u9550
  9939  001692                     u9551:
  9940  001692  EF2A  F00D         	goto	l7599
  9941  001696                     u9550:
  9942  001696                     
  9943                           ; BSR set to: 0
  9944                           ;pff.c: 1017:   bcs = (DWORD)fs->csize * 512;
  9945  001696  EE20 F002          	lfsr	2,2
  9946  00169A  51E5               	movf	pf_lseek@fs& (0+255),w,b
  9947  00169C  26D9               	addwf	fsr2l,f,c
  9948  00169E  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
  9949  0016A0  22DA               	addwfc	fsr2h,f,c
  9950  0016A2  50DF               	movf	indf2,w,c
  9951  0016A4  6FC4               	movwf	??_pf_lseek& (0+255),b
  9952  0016A6  C0C4  F0C5         	movff	??_pf_lseek,??_pf_lseek+1
  9953  0016AA  6BC6               	clrf	(??_pf_lseek+2)& (0+255),b
  9954  0016AC  6BC7               	clrf	(??_pf_lseek+3)& (0+255),b
  9955  0016AE  6BC8               	clrf	(??_pf_lseek+4)& (0+255),b
  9956  0016B0  0E09               	movlw	9
  9957  0016B2                     u9565:
  9958  0016B2  90D8               	bcf	status,0,c
  9959  0016B4  37C5               	rlcf	(??_pf_lseek+1)& (0+255),f,b
  9960  0016B6  37C6               	rlcf	(??_pf_lseek+2)& (0+255),f,b
  9961  0016B8  37C7               	rlcf	(??_pf_lseek+3)& (0+255),f,b
  9962  0016BA  37C8               	rlcf	(??_pf_lseek+4)& (0+255),f,b
  9963  0016BC  2EE8               	decfsz	wreg,f,c
  9964  0016BE  EF59  F00B         	goto	u9565
  9965  0016C2  C0C5  F0DD         	movff	??_pf_lseek+1,pf_lseek@bcs
  9966  0016C6  C0C6  F0DE         	movff	??_pf_lseek+2,pf_lseek@bcs+1
  9967  0016CA  C0C7  F0DF         	movff	??_pf_lseek+3,pf_lseek@bcs+2
  9968  0016CE  C0C8  F0E0         	movff	??_pf_lseek+4,pf_lseek@bcs+3
  9969  0016D2                     
  9970                           ; BSR set to: 0
  9971                           ;pff.c: 1018:   if (ifptr > 0 &&
  9972  0016D2  51D9               	movf	pf_lseek@ifptr& (0+255),w,b
  9973  0016D4  11DA               	iorwf	(pf_lseek@ifptr+1)& (0+255),w,b
  9974  0016D6  11DB               	iorwf	(pf_lseek@ifptr+2)& (0+255),w,b
  9975  0016D8  11DC               	iorwf	(pf_lseek@ifptr+3)& (0+255),w,b
  9976  0016DA  B4D8               	btfsc	status,2,c
  9977  0016DC  EF72  F00B         	goto	u9571
  9978  0016E0  EF74  F00B         	goto	u9570
  9979  0016E4                     u9571:
  9980  0016E4  EF11  F00C         	goto	l7565
  9981  0016E8                     u9570:
  9982  0016E8                     
  9983                           ; BSR set to: 0
  9984  0016E8  0EFF               	movlw	255
  9985  0016EA  25C0               	addwf	pf_lseek@ofs& (0+255),w,b
  9986  0016EC  6E06               	movwf	___lldiv@dividend^0,c
  9987  0016EE  0EFF               	movlw	255
  9988  0016F0  21C1               	addwfc	(pf_lseek@ofs+1)& (0+255),w,b
  9989  0016F2  6E07               	movwf	(___lldiv@dividend+1)^0,c
  9990  0016F4  0EFF               	movlw	255
  9991  0016F6  21C2               	addwfc	(pf_lseek@ofs+2)& (0+255),w,b
  9992  0016F8  6E08               	movwf	(___lldiv@dividend+2)^0,c
  9993  0016FA  0EFF               	movlw	255
  9994  0016FC  21C3               	addwfc	(pf_lseek@ofs+3)& (0+255),w,b
  9995  0016FE  6E09               	movwf	(___lldiv@dividend+3)^0,c
  9996  001700  C0DD  F00A         	movff	pf_lseek@bcs,___lldiv@divisor
  9997  001704  C0DE  F00B         	movff	pf_lseek@bcs+1,___lldiv@divisor+1
  9998  001708  C0DF  F00C         	movff	pf_lseek@bcs+2,___lldiv@divisor+2
  9999  00170C  C0E0  F00D         	movff	pf_lseek@bcs+3,___lldiv@divisor+3
 10000  001710  EC51  F027         	call	___lldiv	;wreg free
 10001  001714  C006  F0C4         	movff	?___lldiv,??_pf_lseek
 10002  001718  C007  F0C5         	movff	?___lldiv+1,??_pf_lseek+1
 10003  00171C  C008  F0C6         	movff	?___lldiv+2,??_pf_lseek+2
 10004  001720  C009  F0C7         	movff	?___lldiv+3,??_pf_lseek+3
 10005  001724  0EFF               	movlw	255
 10006  001726  0100               	movlb	0	; () banked
 10007  001728  25D9               	addwf	pf_lseek@ifptr& (0+255),w,b
 10008  00172A  6E06               	movwf	___lldiv@dividend^0,c
 10009  00172C  0EFF               	movlw	255
 10010  00172E  21DA               	addwfc	(pf_lseek@ifptr+1)& (0+255),w,b
 10011  001730  6E07               	movwf	(___lldiv@dividend+1)^0,c
 10012  001732  0EFF               	movlw	255
 10013  001734  21DB               	addwfc	(pf_lseek@ifptr+2)& (0+255),w,b
 10014  001736  6E08               	movwf	(___lldiv@dividend+2)^0,c
 10015  001738  0EFF               	movlw	255
 10016  00173A  21DC               	addwfc	(pf_lseek@ifptr+3)& (0+255),w,b
 10017  00173C  6E09               	movwf	(___lldiv@dividend+3)^0,c
 10018  00173E  C0DD  F00A         	movff	pf_lseek@bcs,___lldiv@divisor
 10019  001742  C0DE  F00B         	movff	pf_lseek@bcs+1,___lldiv@divisor+1
 10020  001746  C0DF  F00C         	movff	pf_lseek@bcs+2,___lldiv@divisor+2
 10021  00174A  C0E0  F00D         	movff	pf_lseek@bcs+3,___lldiv@divisor+3
 10022  00174E  EC51  F027         	call	___lldiv	;wreg free
 10023  001752  5006               	movf	?___lldiv^0,w,c
 10024  001754  0100               	movlb	0	; () banked
 10025  001756  5DC4               	subwf	??_pf_lseek& (0+255),w,b
 10026  001758  5007               	movf	(?___lldiv+1)^0,w,c
 10027  00175A  59C5               	subwfb	(??_pf_lseek+1)& (0+255),w,b
 10028  00175C  5008               	movf	(?___lldiv+2)^0,w,c
 10029  00175E  59C6               	subwfb	(??_pf_lseek+2)& (0+255),w,b
 10030  001760  5009               	movf	(?___lldiv+3)^0,w,c
 10031  001762  59C7               	subwfb	(??_pf_lseek+3)& (0+255),w,b
 10032  001764  A0D8               	btfss	status,0,c
 10033  001766  EFB7  F00B         	goto	u9581
 10034  00176A  EFB9  F00B         	goto	u9580
 10035  00176E                     u9581:
 10036  00176E  EF11  F00C         	goto	l7565
 10037  001772                     u9580:
 10038  001772                     
 10039                           ; BSR set to: 0
 10040                           ;pff.c: 1019:    (ofs - 1) / bcs >= (ifptr - 1) / bcs) {;pff.c: 1020:    fs->fptr = (ifp
      +                          tr - 1) & ~(bcs - 1);
 10041  001772  0EFF               	movlw	255
 10042  001774  25DD               	addwf	pf_lseek@bcs& (0+255),w,b
 10043  001776  6FC4               	movwf	??_pf_lseek& (0+255),b
 10044  001778  0EFF               	movlw	255
 10045  00177A  21DE               	addwfc	(pf_lseek@bcs+1)& (0+255),w,b
 10046  00177C  6FC5               	movwf	(??_pf_lseek+1)& (0+255),b
 10047  00177E  0EFF               	movlw	255
 10048  001780  21DF               	addwfc	(pf_lseek@bcs+2)& (0+255),w,b
 10049  001782  6FC6               	movwf	(??_pf_lseek+2)& (0+255),b
 10050  001784  0EFF               	movlw	255
 10051  001786  21E0               	addwfc	(pf_lseek@bcs+3)& (0+255),w,b
 10052  001788  6FC7               	movwf	(??_pf_lseek+3)& (0+255),b
 10053  00178A  1DC4               	comf	??_pf_lseek& (0+255),w,b
 10054  00178C  6FC8               	movwf	(??_pf_lseek+4)& (0+255),b
 10055  00178E  1DC5               	comf	(??_pf_lseek+1)& (0+255),w,b
 10056  001790  6FC9               	movwf	(??_pf_lseek+5)& (0+255),b
 10057  001792  1DC6               	comf	(??_pf_lseek+2)& (0+255),w,b
 10058  001794  6FCA               	movwf	(??_pf_lseek+6)& (0+255),b
 10059  001796  1DC7               	comf	(??_pf_lseek+3)& (0+255),w,b
 10060  001798  6FCB               	movwf	(??_pf_lseek+7)& (0+255),b
 10061  00179A  0EFF               	movlw	255
 10062  00179C  25D9               	addwf	pf_lseek@ifptr& (0+255),w,b
 10063  00179E  6FCC               	movwf	(??_pf_lseek+8)& (0+255),b
 10064  0017A0  0EFF               	movlw	255
 10065  0017A2  21DA               	addwfc	(pf_lseek@ifptr+1)& (0+255),w,b
 10066  0017A4  6FCD               	movwf	(??_pf_lseek+9)& (0+255),b
 10067  0017A6  0EFF               	movlw	255
 10068  0017A8  21DB               	addwfc	(pf_lseek@ifptr+2)& (0+255),w,b
 10069  0017AA  6FCE               	movwf	(??_pf_lseek+10)& (0+255),b
 10070  0017AC  0EFF               	movlw	255
 10071  0017AE  21DC               	addwfc	(pf_lseek@ifptr+3)& (0+255),w,b
 10072  0017B0  6FCF               	movwf	(??_pf_lseek+11)& (0+255),b
 10073  0017B2  51C8               	movf	(??_pf_lseek+4)& (0+255),w,b
 10074  0017B4  15CC               	andwf	(??_pf_lseek+8)& (0+255),w,b
 10075  0017B6  6FD0               	movwf	(??_pf_lseek+12)& (0+255),b
 10076  0017B8  51C9               	movf	(??_pf_lseek+5)& (0+255),w,b
 10077  0017BA  15CD               	andwf	(??_pf_lseek+9)& (0+255),w,b
 10078  0017BC  6FD1               	movwf	(??_pf_lseek+13)& (0+255),b
 10079  0017BE  51CA               	movf	(??_pf_lseek+6)& (0+255),w,b
 10080  0017C0  15CE               	andwf	(??_pf_lseek+10)& (0+255),w,b
 10081  0017C2  6FD2               	movwf	(??_pf_lseek+14)& (0+255),b
 10082  0017C4  51CB               	movf	(??_pf_lseek+7)& (0+255),w,b
 10083  0017C6  15CF               	andwf	(??_pf_lseek+11)& (0+255),w,b
 10084  0017C8  6FD3               	movwf	(??_pf_lseek+15)& (0+255),b
 10085  0017CA  EE20 F016          	lfsr	2,22
 10086  0017CE  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10087  0017D0  26D9               	addwf	fsr2l,f,c
 10088  0017D2  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10089  0017D4  22DA               	addwfc	fsr2h,f,c
 10090  0017D6  C0D0  FFDE         	movff	??_pf_lseek+12,postinc2
 10091  0017DA  C0D1  FFDE         	movff	??_pf_lseek+13,postinc2
 10092  0017DE  C0D2  FFDE         	movff	??_pf_lseek+14,postinc2
 10093  0017E2  C0D3  FFDE         	movff	??_pf_lseek+15,postinc2
 10094                           
 10095                           ;pff.c: 1021:    ofs -= fs->fptr;
 10096  0017E6  EE20 F016          	lfsr	2,22
 10097  0017EA  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10098  0017EC  26D9               	addwf	fsr2l,f,c
 10099  0017EE  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10100  0017F0  22DA               	addwfc	fsr2h,f,c
 10101  0017F2  50DE               	movf	postinc2,w,c
 10102  0017F4  5FC0               	subwf	pf_lseek@ofs& (0+255),f,b
 10103  0017F6  50DE               	movf	postinc2,w,c
 10104  0017F8  5BC1               	subwfb	(pf_lseek@ofs+1)& (0+255),f,b
 10105  0017FA  50DE               	movf	postinc2,w,c
 10106  0017FC  5BC2               	subwfb	(pf_lseek@ofs+2)& (0+255),f,b
 10107  0017FE  50DD               	movf	postdec2,w,c
 10108  001800  5BC3               	subwfb	(pf_lseek@ofs+3)& (0+255),f,b
 10109                           
 10110                           ;pff.c: 1022:    clst = fs->curr_clust;
 10111  001802  EE20 F022          	lfsr	2,34
 10112  001806  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10113  001808  26D9               	addwf	fsr2l,f,c
 10114  00180A  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10115  00180C  22DA               	addwfc	fsr2h,f,c
 10116  00180E  CFDE F0E1          	movff	postinc2,pf_lseek@clst
 10117  001812  CFDE F0E2          	movff	postinc2,pf_lseek@clst+1
 10118  001816  CFDE F0E3          	movff	postinc2,pf_lseek@clst+2
 10119  00181A  CFDE F0E4          	movff	postinc2,pf_lseek@clst+3
 10120                           
 10121                           ;pff.c: 1023:   } else {
 10122  00181E  EF93  F00C         	goto	l7583
 10123  001822                     l7565:
 10124                           
 10125                           ; BSR set to: 0
 10126                           ;pff.c: 1024:    clst = fs->org_clust;
 10127  001822  EE20 F01E          	lfsr	2,30
 10128  001826  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10129  001828  26D9               	addwf	fsr2l,f,c
 10130  00182A  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10131  00182C  22DA               	addwfc	fsr2h,f,c
 10132  00182E  CFDE F0E1          	movff	postinc2,pf_lseek@clst
 10133  001832  CFDE F0E2          	movff	postinc2,pf_lseek@clst+1
 10134  001836  CFDE F0E3          	movff	postinc2,pf_lseek@clst+2
 10135  00183A  CFDE F0E4          	movff	postinc2,pf_lseek@clst+3
 10136                           
 10137                           ;pff.c: 1025:    fs->curr_clust = clst;
 10138  00183E  EE20 F022          	lfsr	2,34
 10139  001842  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10140  001844  26D9               	addwf	fsr2l,f,c
 10141  001846  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10142  001848  22DA               	addwfc	fsr2h,f,c
 10143  00184A  C0E1  FFDE         	movff	pf_lseek@clst,postinc2
 10144  00184E  C0E2  FFDE         	movff	pf_lseek@clst+1,postinc2
 10145  001852  C0E3  FFDE         	movff	pf_lseek@clst+2,postinc2
 10146  001856  C0E4  FFDE         	movff	pf_lseek@clst+3,postinc2
 10147  00185A  EF93  F00C         	goto	l7583
 10148  00185E                     l7567:
 10149                           
 10150                           ; BSR set to: 0
 10151                           ;pff.c: 1028:    clst = get_fat(clst);
 10152  00185E  C0E1  F0A0         	movff	pf_lseek@clst,get_fat@clst
 10153  001862  C0E2  F0A1         	movff	pf_lseek@clst+1,get_fat@clst+1
 10154  001866  C0E3  F0A2         	movff	pf_lseek@clst+2,get_fat@clst+2
 10155  00186A  C0E4  F0A3         	movff	pf_lseek@clst+3,get_fat@clst+3
 10156  00186E  ECEB  F018         	call	_get_fat	;wreg free
 10157  001872  C0A0  F0E1         	movff	?_get_fat,pf_lseek@clst
 10158  001876  C0A1  F0E2         	movff	?_get_fat+1,pf_lseek@clst+1
 10159  00187A  C0A2  F0E3         	movff	?_get_fat+2,pf_lseek@clst+2
 10160  00187E  C0A3  F0E4         	movff	?_get_fat+3,pf_lseek@clst+3
 10161  001882                     
 10162                           ;pff.c: 1029:    if (clst <= 1 || clst >= fs->n_fatent) {fs->flag = 0; return FR_DISK_ER
      +                          R;};
 10163  001882  0100               	movlb	0	; () banked
 10164  001884  51E4               	movf	(pf_lseek@clst+3)& (0+255),w,b
 10165  001886  11E3               	iorwf	(pf_lseek@clst+2)& (0+255),w,b
 10166  001888  11E2               	iorwf	(pf_lseek@clst+1)& (0+255),w,b
 10167  00188A  E109               	bnz	u9590
 10168  00188C  0E02               	movlw	2
 10169  00188E  5DE1               	subwf	pf_lseek@clst& (0+255),w,b
 10170  001890  A0D8               	btfss	status,0,c
 10171  001892  EF4D  F00C         	goto	u9591
 10172  001896  EF4F  F00C         	goto	u9590
 10173  00189A                     u9591:
 10174  00189A  EF64  F00C         	goto	l7573
 10175  00189E                     u9590:
 10176  00189E                     
 10177                           ; BSR set to: 0
 10178  00189E  EE20 F006          	lfsr	2,6
 10179  0018A2  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10180  0018A4  26D9               	addwf	fsr2l,f,c
 10181  0018A6  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10182  0018A8  22DA               	addwfc	fsr2h,f,c
 10183  0018AA  50DE               	movf	postinc2,w,c
 10184  0018AC  5DE1               	subwf	pf_lseek@clst& (0+255),w,b
 10185  0018AE  50DE               	movf	postinc2,w,c
 10186  0018B0  59E2               	subwfb	(pf_lseek@clst+1)& (0+255),w,b
 10187  0018B2  50DE               	movf	postinc2,w,c
 10188  0018B4  59E3               	subwfb	(pf_lseek@clst+2)& (0+255),w,b
 10189  0018B6  50DE               	movf	postinc2,w,c
 10190  0018B8  59E4               	subwfb	(pf_lseek@clst+3)& (0+255),w,b
 10191  0018BA  A0D8               	btfss	status,0,c
 10192  0018BC  EF62  F00C         	goto	u9601
 10193  0018C0  EF64  F00C         	goto	u9600
 10194  0018C4                     u9601:
 10195  0018C4  EF6F  F00C         	goto	l7579
 10196  0018C8                     u9600:
 10197  0018C8                     l7573:
 10198                           
 10199                           ; BSR set to: 0
 10200  0018C8  EE20 F001          	lfsr	2,1
 10201  0018CC  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10202  0018CE  26D9               	addwf	fsr2l,f,c
 10203  0018D0  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10204  0018D2  22DA               	addwfc	fsr2h,f,c
 10205  0018D4  0E00               	movlw	0
 10206  0018D6  6EDF               	movwf	indf2,c
 10207  0018D8                     l7575:
 10208                           
 10209                           ; BSR set to: 0
 10210  0018D8  0E01               	movlw	1
 10211  0018DA  EF2B  F00D         	goto	l363
 10212  0018DE                     l7579:
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;pff.c: 1030:    fs->curr_clust = clst;
 10216  0018DE  EE20 F022          	lfsr	2,34
 10217  0018E2  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10218  0018E4  26D9               	addwf	fsr2l,f,c
 10219  0018E6  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10220  0018E8  22DA               	addwfc	fsr2h,f,c
 10221  0018EA  C0E1  FFDE         	movff	pf_lseek@clst,postinc2
 10222  0018EE  C0E2  FFDE         	movff	pf_lseek@clst+1,postinc2
 10223  0018F2  C0E3  FFDE         	movff	pf_lseek@clst+2,postinc2
 10224  0018F6  C0E4  FFDE         	movff	pf_lseek@clst+3,postinc2
 10225                           
 10226                           ;pff.c: 1031:    fs->fptr += bcs;
 10227  0018FA  EE20 F016          	lfsr	2,22
 10228  0018FE  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10229  001900  26D9               	addwf	fsr2l,f,c
 10230  001902  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10231  001904  22DA               	addwfc	fsr2h,f,c
 10232  001906  51DD               	movf	pf_lseek@bcs& (0+255),w,b
 10233  001908  26DE               	addwf	postinc2,f,c
 10234  00190A  51DE               	movf	(pf_lseek@bcs+1)& (0+255),w,b
 10235  00190C  22DE               	addwfc	postinc2,f,c
 10236  00190E  51DF               	movf	(pf_lseek@bcs+2)& (0+255),w,b
 10237  001910  22DE               	addwfc	postinc2,f,c
 10238  001912  51E0               	movf	(pf_lseek@bcs+3)& (0+255),w,b
 10239  001914  22DE               	addwfc	postinc2,f,c
 10240  001916                     
 10241                           ; BSR set to: 0
 10242                           ;pff.c: 1032:    ofs -= bcs;
 10243  001916  51DD               	movf	pf_lseek@bcs& (0+255),w,b
 10244  001918  5FC0               	subwf	pf_lseek@ofs& (0+255),f,b
 10245  00191A  51DE               	movf	(pf_lseek@bcs+1)& (0+255),w,b
 10246  00191C  5BC1               	subwfb	(pf_lseek@ofs+1)& (0+255),f,b
 10247  00191E  51DF               	movf	(pf_lseek@bcs+2)& (0+255),w,b
 10248  001920  5BC2               	subwfb	(pf_lseek@ofs+2)& (0+255),f,b
 10249  001922  51E0               	movf	(pf_lseek@bcs+3)& (0+255),w,b
 10250  001924  5BC3               	subwfb	(pf_lseek@ofs+3)& (0+255),f,b
 10251  001926                     l7583:
 10252                           
 10253                           ; BSR set to: 0
 10254                           ;pff.c: 1027:   while (ofs > bcs) {
 10255  001926  51C0               	movf	pf_lseek@ofs& (0+255),w,b
 10256  001928  5DDD               	subwf	pf_lseek@bcs& (0+255),w,b
 10257  00192A  51C1               	movf	(pf_lseek@ofs+1)& (0+255),w,b
 10258  00192C  59DE               	subwfb	(pf_lseek@bcs+1)& (0+255),w,b
 10259  00192E  51C2               	movf	(pf_lseek@ofs+2)& (0+255),w,b
 10260  001930  59DF               	subwfb	(pf_lseek@bcs+2)& (0+255),w,b
 10261  001932  51C3               	movf	(pf_lseek@ofs+3)& (0+255),w,b
 10262  001934  59E0               	subwfb	(pf_lseek@bcs+3)& (0+255),w,b
 10263  001936  A0D8               	btfss	status,0,c
 10264  001938  EFA0  F00C         	goto	u9611
 10265  00193C  EFA2  F00C         	goto	u9610
 10266  001940                     u9611:
 10267  001940  EF2F  F00C         	goto	l7567
 10268  001944                     u9610:
 10269  001944                     
 10270                           ; BSR set to: 0
 10271                           ;pff.c: 1034:   fs->fptr += ofs;
 10272  001944  EE20 F016          	lfsr	2,22
 10273  001948  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10274  00194A  26D9               	addwf	fsr2l,f,c
 10275  00194C  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10276  00194E  22DA               	addwfc	fsr2h,f,c
 10277  001950  51C0               	movf	pf_lseek@ofs& (0+255),w,b
 10278  001952  26DE               	addwf	postinc2,f,c
 10279  001954  51C1               	movf	(pf_lseek@ofs+1)& (0+255),w,b
 10280  001956  22DE               	addwfc	postinc2,f,c
 10281  001958  51C2               	movf	(pf_lseek@ofs+2)& (0+255),w,b
 10282  00195A  22DE               	addwfc	postinc2,f,c
 10283  00195C  51C3               	movf	(pf_lseek@ofs+3)& (0+255),w,b
 10284  00195E  22DE               	addwfc	postinc2,f,c
 10285  001960                     
 10286                           ; BSR set to: 0
 10287                           ;pff.c: 1035:   sect = clust2sect(clst);
 10288  001960  C0E1  F012         	movff	pf_lseek@clst,clust2sect@clst
 10289  001964  C0E2  F013         	movff	pf_lseek@clst+1,clust2sect@clst+1
 10290  001968  C0E3  F014         	movff	pf_lseek@clst+2,clust2sect@clst+2
 10291  00196C  C0E4  F015         	movff	pf_lseek@clst+3,clust2sect@clst+3
 10292  001970  ECD4  F025         	call	_clust2sect	;wreg free
 10293  001974  C012  F0D5         	movff	?_clust2sect,pf_lseek@sect
 10294  001978  C013  F0D6         	movff	?_clust2sect+1,pf_lseek@sect+1
 10295  00197C  C014  F0D7         	movff	?_clust2sect+2,pf_lseek@sect+2
 10296  001980  C015  F0D8         	movff	?_clust2sect+3,pf_lseek@sect+3
 10297  001984                     
 10298                           ;pff.c: 1036:   if (!sect) {fs->flag = 0; return FR_DISK_ERR;};
 10299  001984  0100               	movlb	0	; () banked
 10300  001986  51D5               	movf	pf_lseek@sect& (0+255),w,b
 10301  001988  11D6               	iorwf	(pf_lseek@sect+1)& (0+255),w,b
 10302  00198A  11D7               	iorwf	(pf_lseek@sect+2)& (0+255),w,b
 10303  00198C  11D8               	iorwf	(pf_lseek@sect+3)& (0+255),w,b
 10304  00198E  A4D8               	btfss	status,2,c
 10305  001990  EFCC  F00C         	goto	u9621
 10306  001994  EFCE  F00C         	goto	u9620
 10307  001998                     u9621:
 10308  001998  EFD8  F00C         	goto	l7597
 10309  00199C                     u9620:
 10310  00199C                     
 10311                           ; BSR set to: 0
 10312  00199C  EE20 F001          	lfsr	2,1
 10313  0019A0  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10314  0019A2  26D9               	addwf	fsr2l,f,c
 10315  0019A4  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10316  0019A6  22DA               	addwfc	fsr2h,f,c
 10317  0019A8  0E00               	movlw	0
 10318  0019AA  6EDF               	movwf	indf2,c
 10319  0019AC  EF6C  F00C         	goto	l7575
 10320  0019B0                     l7597:
 10321                           
 10322                           ; BSR set to: 0
 10323                           ;pff.c: 1037:   fs->dsect = sect + (fs->fptr / 512 & (fs->csize - 1));
 10324  0019B0  EE20 F002          	lfsr	2,2
 10325  0019B4  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10326  0019B6  26D9               	addwf	fsr2l,f,c
 10327  0019B8  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10328  0019BA  22DA               	addwfc	fsr2h,f,c
 10329  0019BC  50DF               	movf	indf2,w,c
 10330  0019BE  6FC4               	movwf	??_pf_lseek& (0+255),b
 10331  0019C0  0EFF               	movlw	255
 10332  0019C2  25C4               	addwf	??_pf_lseek& (0+255),w,b
 10333  0019C4  6FC5               	movwf	(??_pf_lseek+1)& (0+255),b
 10334  0019C6  6BC6               	clrf	(??_pf_lseek+2)& (0+255),b
 10335  0019C8  0EFF               	movlw	255
 10336  0019CA  23C6               	addwfc	(??_pf_lseek+2)& (0+255),f,b
 10337  0019CC  6BC7               	clrf	(??_pf_lseek+3)& (0+255),b
 10338  0019CE  BFC6               	btfsc	(??_pf_lseek+2)& (0+255),7,b
 10339  0019D0  07C7               	decf	(??_pf_lseek+3)& (0+255),f,b
 10340  0019D2  51C7               	movf	(??_pf_lseek+3)& (0+255),w,b
 10341  0019D4  6FC8               	movwf	(??_pf_lseek+4)& (0+255),b
 10342  0019D6  EE20 F016          	lfsr	2,22
 10343  0019DA  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10344  0019DC  26D9               	addwf	fsr2l,f,c
 10345  0019DE  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10346  0019E0  22DA               	addwfc	fsr2h,f,c
 10347  0019E2  CFDE F0C9          	movff	postinc2,??_pf_lseek+5
 10348  0019E6  CFDE F0CA          	movff	postinc2,??_pf_lseek+6
 10349  0019EA  CFDE F0CB          	movff	postinc2,??_pf_lseek+7
 10350  0019EE  CFDE F0CC          	movff	postinc2,??_pf_lseek+8
 10351  0019F2  0E0A               	movlw	10
 10352  0019F4  EF01  F00D         	goto	u9630
 10353  0019F8                     u9635:
 10354  0019F8  90D8               	bcf	status,0,c
 10355  0019FA  33CC               	rrcf	(??_pf_lseek+8)& (0+255),f,b
 10356  0019FC  33CB               	rrcf	(??_pf_lseek+7)& (0+255),f,b
 10357  0019FE  33CA               	rrcf	(??_pf_lseek+6)& (0+255),f,b
 10358  001A00  33C9               	rrcf	(??_pf_lseek+5)& (0+255),f,b
 10359  001A02                     u9630:
 10360  001A02  2EE8               	decfsz	wreg,f,c
 10361  001A04  EFFC  F00C         	goto	u9635
 10362  001A08  51C5               	movf	(??_pf_lseek+1)& (0+255),w,b
 10363  001A0A  15C9               	andwf	(??_pf_lseek+5)& (0+255),w,b
 10364  001A0C  6FCD               	movwf	(??_pf_lseek+9)& (0+255),b
 10365  001A0E  51C6               	movf	(??_pf_lseek+2)& (0+255),w,b
 10366  001A10  15CA               	andwf	(??_pf_lseek+6)& (0+255),w,b
 10367  001A12  6FCE               	movwf	(??_pf_lseek+10)& (0+255),b
 10368  001A14  51C7               	movf	(??_pf_lseek+3)& (0+255),w,b
 10369  001A16  15CB               	andwf	(??_pf_lseek+7)& (0+255),w,b
 10370  001A18  6FCF               	movwf	(??_pf_lseek+11)& (0+255),b
 10371  001A1A  51C8               	movf	(??_pf_lseek+4)& (0+255),w,b
 10372  001A1C  15CC               	andwf	(??_pf_lseek+8)& (0+255),w,b
 10373  001A1E  6FD0               	movwf	(??_pf_lseek+12)& (0+255),b
 10374  001A20  51D5               	movf	pf_lseek@sect& (0+255),w,b
 10375  001A22  25CD               	addwf	(??_pf_lseek+9)& (0+255),w,b
 10376  001A24  6FD1               	movwf	(??_pf_lseek+13)& (0+255),b
 10377  001A26  51D6               	movf	(pf_lseek@sect+1)& (0+255),w,b
 10378  001A28  21CE               	addwfc	(??_pf_lseek+10)& (0+255),w,b
 10379  001A2A  6FD2               	movwf	(??_pf_lseek+14)& (0+255),b
 10380  001A2C  51D7               	movf	(pf_lseek@sect+2)& (0+255),w,b
 10381  001A2E  21CF               	addwfc	(??_pf_lseek+11)& (0+255),w,b
 10382  001A30  6FD3               	movwf	(??_pf_lseek+15)& (0+255),b
 10383  001A32  51D8               	movf	(pf_lseek@sect+3)& (0+255),w,b
 10384  001A34  21D0               	addwfc	(??_pf_lseek+12)& (0+255),w,b
 10385  001A36  6FD4               	movwf	(??_pf_lseek+16)& (0+255),b
 10386  001A38  EE20 F026          	lfsr	2,38
 10387  001A3C  51E5               	movf	pf_lseek@fs& (0+255),w,b
 10388  001A3E  26D9               	addwf	fsr2l,f,c
 10389  001A40  51E6               	movf	(pf_lseek@fs+1)& (0+255),w,b
 10390  001A42  22DA               	addwfc	fsr2h,f,c
 10391  001A44  C0D1  FFDE         	movff	??_pf_lseek+13,postinc2
 10392  001A48  C0D2  FFDE         	movff	??_pf_lseek+14,postinc2
 10393  001A4C  C0D3  FFDE         	movff	??_pf_lseek+15,postinc2
 10394  001A50  C0D4  FFDE         	movff	??_pf_lseek+16,postinc2
 10395  001A54                     l7599:
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;pff.c: 1040:  return FR_OK;
 10399  001A54  0E00               	movlw	0
 10400  001A56                     l363:
 10401                           
 10402                           ; BSR set to: 0
 10403  001A56  0012               	return		;funcret
 10404  001A58                     __end_of_pf_lseek:
 10405                           	callstack 0
 10406                           
 10407 ;; *************** function _get_fat *****************
 10408 ;; Defined at:
 10409 ;;		line 346 in file "pff.c"
 10410 ;; Parameters:    Size  Location     Type
 10411 ;;  clst            4   32[BANK0 ] unsigned long 
 10412 ;; Auto vars:     Size  Location     Type
 10413 ;;  buf             4   58[BANK0 ] unsigned char [4]
 10414 ;;  fs              2   62[BANK0 ] PTR struct .
 10415 ;;		 -> NULL(0), main@fs(42), 
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  4   32[BANK0 ] unsigned long 
 10418 ;; Registers used:
 10419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10420 ;; Tracked objects:
 10421 ;;		On entry : 0/0
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10425 ;;      Params:         0       4       0       0       0       0       0
 10426 ;;      Locals:         0       6       0       0       0       0       0
 10427 ;;      Temps:          0      22       0       0       0       0       0
 10428 ;;      Totals:         0      32       0       0       0       0       0
 10429 ;;Total ram usage:       32 bytes
 10430 ;; Hardware stack levels used: 1
 10431 ;; Hardware stack levels required when called: 10
 10432 ;; This function calls:
 10433 ;;		_disk_readp
 10434 ;; This function is called by:
 10435 ;;		_dir_next
 10436 ;;		_pf_read
 10437 ;;		_pf_lseek
 10438 ;; This function uses a non-reentrant model
 10439 ;;
 10440                           
 10441                           	psect	text32
 10442  0031D6                     __ptext32:
 10443                           	callstack 0
 10444  0031D6                     _get_fat:
 10445                           	callstack 17
 10446  0031D6                     
 10447                           ;pff.c: 347:  DWORD clst;pff.c: 349: {;pff.c: 350:  BYTE buf[4];;pff.c: 351:  FATFS *fs 
      +                          = FatFs;
 10448  0031D6  C0FD  F0BE         	movff	_FatFs,get_fat@fs
 10449  0031DA  C0FE  F0BF         	movff	_FatFs+1,get_fat@fs+1
 10450                           
 10451                           ;pff.c: 353:  if (clst < 2 || clst >= fs->n_fatent)
 10452  0031DE  0100               	movlb	0	; () banked
 10453  0031E0  51A3               	movf	(get_fat@clst+3)& (0+255),w,b
 10454  0031E2  11A2               	iorwf	(get_fat@clst+2)& (0+255),w,b
 10455  0031E4  11A1               	iorwf	(get_fat@clst+1)& (0+255),w,b
 10456  0031E6  E109               	bnz	u8630
 10457  0031E8  0E02               	movlw	2
 10458  0031EA  5DA0               	subwf	get_fat@clst& (0+255),w,b
 10459  0031EC  A0D8               	btfss	status,0,c
 10460  0031EE  EFFB  F018         	goto	u8631
 10461  0031F2  EFFD  F018         	goto	u8630
 10462  0031F6                     u8631:
 10463  0031F6  EF12  F019         	goto	l6975
 10464  0031FA                     u8630:
 10465  0031FA                     
 10466                           ; BSR set to: 0
 10467  0031FA  EE20 F006          	lfsr	2,6
 10468  0031FE  51BE               	movf	get_fat@fs& (0+255),w,b
 10469  003200  26D9               	addwf	fsr2l,f,c
 10470  003202  51BF               	movf	(get_fat@fs+1)& (0+255),w,b
 10471  003204  22DA               	addwfc	fsr2h,f,c
 10472  003206  50DE               	movf	postinc2,w,c
 10473  003208  5DA0               	subwf	get_fat@clst& (0+255),w,b
 10474  00320A  50DE               	movf	postinc2,w,c
 10475  00320C  59A1               	subwfb	(get_fat@clst+1)& (0+255),w,b
 10476  00320E  50DE               	movf	postinc2,w,c
 10477  003210  59A2               	subwfb	(get_fat@clst+2)& (0+255),w,b
 10478  003212  50DE               	movf	postinc2,w,c
 10479  003214  59A3               	subwfb	(get_fat@clst+3)& (0+255),w,b
 10480  003216  A0D8               	btfss	status,0,c
 10481  003218  EF10  F019         	goto	u8641
 10482  00321C  EF12  F019         	goto	u8640
 10483  003220                     u8641:
 10484  003220  EFB6  F019         	goto	l6989
 10485  003224                     u8640:
 10486  003224                     l6975:
 10487                           
 10488                           ;pff.c: 354:   return 1;
 10489  003224  0E01               	movlw	1
 10490  003226  0100               	movlb	0	; () banked
 10491  003228  6FA0               	movwf	?_get_fat& (0+255),b
 10492  00322A  0E00               	movlw	0
 10493  00322C  6FA1               	movwf	(?_get_fat+1)& (0+255),b
 10494  00322E  0E00               	movlw	0
 10495  003230  6FA2               	movwf	(?_get_fat+2)& (0+255),b
 10496  003232  0E00               	movlw	0
 10497  003234  6FA3               	movwf	(?_get_fat+3)& (0+255),b
 10498  003236  EFCB  F019         	goto	l194
 10499  00323A                     l6979:
 10500                           
 10501                           ; BSR set to: 0
 10502                           ;pff.c: 380:   if (disk_readp(buf, fs->fatbase + clst / 128, ((UINT)clst % 128) * 4, 4))
      +                           break;
 10503  00323A  0EBA               	movlw	low get_fat@buf
 10504  00323C  6F90               	movwf	disk_readp@buff& (0+255),b
 10505  00323E  0E00               	movlw	high get_fat@buf
 10506  003240  6F91               	movwf	(disk_readp@buff+1)& (0+255),b
 10507  003242  EE20 F00A          	lfsr	2,10
 10508  003246  51BE               	movf	get_fat@fs& (0+255),w,b
 10509  003248  26D9               	addwf	fsr2l,f,c
 10510  00324A  51BF               	movf	(get_fat@fs+1)& (0+255),w,b
 10511  00324C  22DA               	addwfc	fsr2h,f,c
 10512  00324E  CFDE F0A4          	movff	postinc2,??_get_fat
 10513  003252  CFDE F0A5          	movff	postinc2,??_get_fat+1
 10514  003256  CFDE F0A6          	movff	postinc2,??_get_fat+2
 10515  00325A  CFDE F0A7          	movff	postinc2,??_get_fat+3
 10516  00325E  C0A0  F0A8         	movff	get_fat@clst,??_get_fat+4
 10517  003262  C0A1  F0A9         	movff	get_fat@clst+1,??_get_fat+5
 10518  003266  C0A2  F0AA         	movff	get_fat@clst+2,??_get_fat+6
 10519  00326A  C0A3  F0AB         	movff	get_fat@clst+3,??_get_fat+7
 10520  00326E  0E08               	movlw	8
 10521  003270  EF3F  F019         	goto	u8650
 10522  003274                     u8655:
 10523  003274  90D8               	bcf	status,0,c
 10524  003276  33AB               	rrcf	(??_get_fat+7)& (0+255),f,b
 10525  003278  33AA               	rrcf	(??_get_fat+6)& (0+255),f,b
 10526  00327A  33A9               	rrcf	(??_get_fat+5)& (0+255),f,b
 10527  00327C  33A8               	rrcf	(??_get_fat+4)& (0+255),f,b
 10528  00327E                     u8650:
 10529  00327E  2EE8               	decfsz	wreg,f,c
 10530  003280  EF3A  F019         	goto	u8655
 10531  003284  51A4               	movf	??_get_fat& (0+255),w,b
 10532  003286  25A8               	addwf	(??_get_fat+4)& (0+255),w,b
 10533  003288  6F92               	movwf	disk_readp@sector& (0+255),b
 10534  00328A  51A5               	movf	(??_get_fat+1)& (0+255),w,b
 10535  00328C  21A9               	addwfc	(??_get_fat+5)& (0+255),w,b
 10536  00328E  6F93               	movwf	(disk_readp@sector+1)& (0+255),b
 10537  003290  51A6               	movf	(??_get_fat+2)& (0+255),w,b
 10538  003292  21AA               	addwfc	(??_get_fat+6)& (0+255),w,b
 10539  003294  6F94               	movwf	(disk_readp@sector+2)& (0+255),b
 10540  003296  51A7               	movf	(??_get_fat+3)& (0+255),w,b
 10541  003298  21AB               	addwfc	(??_get_fat+7)& (0+255),w,b
 10542  00329A  6F95               	movwf	(disk_readp@sector+3)& (0+255),b
 10543  00329C  0E7F               	movlw	127
 10544  00329E  15A0               	andwf	get_fat@clst& (0+255),w,b
 10545  0032A0  6FAC               	movwf	(??_get_fat+8)& (0+255),b
 10546  0032A2  0E00               	movlw	0
 10547  0032A4  15A1               	andwf	(get_fat@clst+1)& (0+255),w,b
 10548  0032A6  6FAD               	movwf	(??_get_fat+9)& (0+255),b
 10549  0032A8  90D8               	bcf	status,0,c
 10550  0032AA  37AC               	rlcf	(??_get_fat+8)& (0+255),f,b
 10551  0032AC  37AD               	rlcf	(??_get_fat+9)& (0+255),f,b
 10552  0032AE  90D8               	bcf	status,0,c
 10553  0032B0  37AC               	rlcf	(??_get_fat+8)& (0+255),f,b
 10554  0032B2  37AD               	rlcf	(??_get_fat+9)& (0+255),f,b
 10555  0032B4  C0AC  F096         	movff	??_get_fat+8,disk_readp@offset
 10556  0032B8  C0AD  F097         	movff	??_get_fat+9,disk_readp@offset+1
 10557  0032BC  0E00               	movlw	0
 10558  0032BE  6F99               	movwf	(disk_readp@count+1)& (0+255),b
 10559  0032C0  0E04               	movlw	4
 10560  0032C2  6F98               	movwf	disk_readp@count& (0+255),b
 10561  0032C4  EC64  F01B         	call	_disk_readp	;wreg free
 10562  0032C8  0900               	iorlw	0
 10563  0032CA  B4D8               	btfsc	status,2,c
 10564  0032CC  EF6A  F019         	goto	u8661
 10565  0032D0  EF6C  F019         	goto	u8660
 10566  0032D4                     u8661:
 10567  0032D4  EF6E  F019         	goto	l6983
 10568  0032D8                     u8660:
 10569  0032D8  EF12  F019         	goto	l6975
 10570  0032DC                     l6983:
 10571                           
 10572                           ;pff.c: 381:   return (DWORD)(((DWORD)*((BYTE*)(buf)+3)<<24)|((DWORD)*((BYTE*)(buf)+2)<<
      +                          16)|((WORD)*((BYTE*)(buf)+1)<<8)|*(BYTE*)(buf)) & 0x0FFFFFFF;
 10573  0032DC  0100               	movlb	0	; () banked
 10574  0032DE  51BB               	movf	(get_fat@buf+1)& (0+255),w,b
 10575  0032E0  6FA5               	movwf	(??_get_fat+1)& (0+255),b
 10576  0032E2  6BA4               	clrf	??_get_fat& (0+255),b
 10577  0032E4  C0BC  F0A6         	movff	get_fat@buf+2,??_get_fat+2
 10578  0032E8  6BA7               	clrf	(??_get_fat+3)& (0+255),b
 10579  0032EA  6BA8               	clrf	(??_get_fat+4)& (0+255),b
 10580  0032EC  6BA9               	clrf	(??_get_fat+5)& (0+255),b
 10581  0032EE  C0A7  F0A9         	movff	??_get_fat+3,??_get_fat+5
 10582  0032F2  C0A6  F0A8         	movff	??_get_fat+2,??_get_fat+4
 10583  0032F6  6BA7               	clrf	(??_get_fat+3)& (0+255),b
 10584  0032F8  6BA6               	clrf	(??_get_fat+2)& (0+255),b
 10585  0032FA  C0BD  F0AA         	movff	get_fat@buf+3,??_get_fat+6
 10586  0032FE  6BAB               	clrf	(??_get_fat+7)& (0+255),b
 10587  003300  6BAC               	clrf	(??_get_fat+8)& (0+255),b
 10588  003302  6BAD               	clrf	(??_get_fat+9)& (0+255),b
 10589  003304  C0AA  F0AD         	movff	??_get_fat+6,??_get_fat+9
 10590  003308  6BAC               	clrf	(??_get_fat+8)& (0+255),b
 10591  00330A  6BAB               	clrf	(??_get_fat+7)& (0+255),b
 10592  00330C  6BAA               	clrf	(??_get_fat+6)& (0+255),b
 10593  00330E  51A6               	movf	(??_get_fat+2)& (0+255),w,b
 10594  003310  11AA               	iorwf	(??_get_fat+6)& (0+255),w,b
 10595  003312  6FAE               	movwf	(??_get_fat+10)& (0+255),b
 10596  003314  51A7               	movf	(??_get_fat+3)& (0+255),w,b
 10597  003316  11AB               	iorwf	(??_get_fat+7)& (0+255),w,b
 10598  003318  6FAF               	movwf	(??_get_fat+11)& (0+255),b
 10599  00331A  51A8               	movf	(??_get_fat+4)& (0+255),w,b
 10600  00331C  11AC               	iorwf	(??_get_fat+8)& (0+255),w,b
 10601  00331E  6FB0               	movwf	(??_get_fat+12)& (0+255),b
 10602  003320  51A9               	movf	(??_get_fat+5)& (0+255),w,b
 10603  003322  11AD               	iorwf	(??_get_fat+9)& (0+255),w,b
 10604  003324  6FB1               	movwf	(??_get_fat+13)& (0+255),b
 10605  003326  51A4               	movf	??_get_fat& (0+255),w,b
 10606  003328  11AE               	iorwf	(??_get_fat+10)& (0+255),w,b
 10607  00332A  6FB2               	movwf	(??_get_fat+14)& (0+255),b
 10608  00332C  51A5               	movf	(??_get_fat+1)& (0+255),w,b
 10609  00332E  11AF               	iorwf	(??_get_fat+11)& (0+255),w,b
 10610  003330  6FB3               	movwf	(??_get_fat+15)& (0+255),b
 10611  003332  0E00               	movlw	0
 10612  003334  11B0               	iorwf	(??_get_fat+12)& (0+255),w,b
 10613  003336  6FB4               	movwf	(??_get_fat+16)& (0+255),b
 10614  003338  0E00               	movlw	0
 10615  00333A  11B1               	iorwf	(??_get_fat+13)& (0+255),w,b
 10616  00333C  6FB5               	movwf	(??_get_fat+17)& (0+255),b
 10617  00333E  51BA               	movf	get_fat@buf& (0+255),w,b
 10618  003340  11B2               	iorwf	(??_get_fat+14)& (0+255),w,b
 10619  003342  6FB6               	movwf	(??_get_fat+18)& (0+255),b
 10620  003344  51B3               	movf	(??_get_fat+15)& (0+255),w,b
 10621  003346  6FB7               	movwf	(??_get_fat+19)& (0+255),b
 10622  003348  51B4               	movf	(??_get_fat+16)& (0+255),w,b
 10623  00334A  6FB8               	movwf	(??_get_fat+20)& (0+255),b
 10624  00334C  51B5               	movf	(??_get_fat+17)& (0+255),w,b
 10625  00334E  6FB9               	movwf	(??_get_fat+21)& (0+255),b
 10626  003350  0EFF               	movlw	255
 10627  003352  15B6               	andwf	(??_get_fat+18)& (0+255),w,b
 10628  003354  6FA0               	movwf	?_get_fat& (0+255),b
 10629  003356  0EFF               	movlw	255
 10630  003358  15B7               	andwf	(??_get_fat+19)& (0+255),w,b
 10631  00335A  6FA1               	movwf	(?_get_fat+1)& (0+255),b
 10632  00335C  0EFF               	movlw	255
 10633  00335E  15B8               	andwf	(??_get_fat+20)& (0+255),w,b
 10634  003360  6FA2               	movwf	(?_get_fat+2)& (0+255),b
 10635  003362  0E0F               	movlw	15
 10636  003364  15B9               	andwf	(??_get_fat+21)& (0+255),w,b
 10637  003366  6FA3               	movwf	(?_get_fat+3)& (0+255),b
 10638  003368  EFCB  F019         	goto	l194
 10639  00336C                     l6989:
 10640                           
 10641                           ; BSR set to: 0
 10642  00336C  C0BE  FFD9         	movff	get_fat@fs,fsr2l
 10643  003370  C0BF  FFDA         	movff	get_fat@fs+1,fsr2h
 10644  003374  50DF               	movf	indf2,w,c
 10645  003376  6FA4               	movwf	??_get_fat& (0+255),b
 10646  003378  6BA5               	clrf	(??_get_fat+1)& (0+255),b
 10647                           
 10648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10649                           ; Switch size 1, requested type "simple"
 10650                           ; Number of cases is 1, Range of values is 0 to 0
 10651                           ; switch strategies available:
 10652                           ; Name         Instructions Cycles
 10653                           ; simple_byte            4     3 (average)
 10654                           ;	Chosen strategy is simple_byte
 10655  00337A  51A5               	movf	(??_get_fat+1)& (0+255),w,b
 10656  00337C  0A00               	xorlw	0	; case 0
 10657  00337E  B4D8               	btfsc	status,2,c
 10658  003380  EFC4  F019         	goto	l8065
 10659  003384  EF12  F019         	goto	l6975
 10660  003388                     l8065:
 10661                           
 10662                           ; BSR set to: 0
 10663                           ; Switch size 1, requested type "simple"
 10664                           ; Number of cases is 1, Range of values is 3 to 3
 10665                           ; switch strategies available:
 10666                           ; Name         Instructions Cycles
 10667                           ; simple_byte            4     3 (average)
 10668                           ;	Chosen strategy is simple_byte
 10669  003388  51A4               	movf	??_get_fat& (0+255),w,b
 10670  00338A  0A03               	xorlw	3	; case 3
 10671  00338C  B4D8               	btfsc	status,2,c
 10672  00338E  EF1D  F019         	goto	l6979
 10673  003392  EF12  F019         	goto	l6975
 10674  003396                     l194:
 10675                           
 10676                           ; BSR set to: 0
 10677  003396  0012               	return		;funcret
 10678  003398                     __end_of_get_fat:
 10679                           	callstack 0
 10680                           
 10681 ;; *************** function _disk_readp *****************
 10682 ;; Defined at:
 10683 ;;		line 224 in file "pic_mmcp.c"
 10684 ;; Parameters:    Size  Location     Type
 10685 ;;  buff            2   16[BANK0 ] PTR unsigned char 
 10686 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), pf_mount@buf(36), 
 10687 ;;		 -> get_fat@buf(4), NULL(0), Line(128), 
 10688 ;;  sector          4   18[BANK0 ] unsigned long 
 10689 ;;  offset          2   22[BANK0 ] unsigned int 
 10690 ;;  count           2   24[BANK0 ] unsigned int 
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;  bc              2   30[BANK0 ] unsigned int 
 10693 ;;  rc              1   29[BANK0 ] unsigned char 
 10694 ;;  res             1   28[BANK0 ] enum E74
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  1    wreg      enum E3069
 10697 ;; Registers used:
 10698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10704 ;;      Params:         0      10       0       0       0       0       0
 10705 ;;      Locals:         0       4       0       0       0       0       0
 10706 ;;      Temps:          0       2       0       0       0       0       0
 10707 ;;      Totals:         0      16       0       0       0       0       0
 10708 ;;Total ram usage:       16 bytes
 10709 ;; Hardware stack levels used: 1
 10710 ;; Hardware stack levels required when called: 9
 10711 ;; This function calls:
 10712 ;;		_printf
 10713 ;;		_rcv_spi
 10714 ;;		_send_cmd
 10715 ;; This function is called by:
 10716 ;;		_main
 10717 ;;		_get_fat
 10718 ;;		_dir_find
 10719 ;;		_dir_read
 10720 ;;		_check_fs
 10721 ;;		_pf_mount
 10722 ;;		_pf_read
 10723 ;; This function uses a non-reentrant model
 10724 ;;
 10725                           
 10726                           	psect	text33
 10727  0036C8                     __ptext33:
 10728                           	callstack 0
 10729  0036C8                     _disk_readp:
 10730                           	callstack 19
 10731  0036C8                     
 10732                           ;pic_mmcp.c: 225:  BYTE *buff,;pic_mmcp.c: 226:  DWORD sector,;pic_mmcp.c: 227:  UINT of
      +                          fset,;pic_mmcp.c: 228:  UINT count;pic_mmcp.c: 230: {;pic_mmcp.c: 231:  DRESULT res;;pic
      +                          _mmcp.c: 232:  BYTE rc;;pic_mmcp.c: 233:  UINT bc;;pic_mmcp.c: 236:  if (!(CardType & 0x
      +                          08)) sector *= 512;
 10733  0036C8  0100               	movlb	0	; () banked
 10734  0036CA  B7FF               	btfsc	_CardType& (0+255),3,b
 10735  0036CC  EF6A  F01B         	goto	u8511
 10736  0036D0  EF6C  F01B         	goto	u8510
 10737  0036D4                     u8511:
 10738  0036D4  EF75  F01B         	goto	l6925
 10739  0036D8                     u8510:
 10740  0036D8                     
 10741                           ; BSR set to: 0
 10742  0036D8  0E09               	movlw	9
 10743  0036DA                     u8525:
 10744  0036DA  90D8               	bcf	status,0,c
 10745  0036DC  3792               	rlcf	disk_readp@sector& (0+255),f,b
 10746  0036DE  3793               	rlcf	(disk_readp@sector+1)& (0+255),f,b
 10747  0036E0  3794               	rlcf	(disk_readp@sector+2)& (0+255),f,b
 10748  0036E2  3795               	rlcf	(disk_readp@sector+3)& (0+255),f,b
 10749  0036E4  2EE8               	decfsz	wreg,f,c
 10750  0036E6  EF6D  F01B         	goto	u8525
 10751  0036EA                     l6925:
 10752                           
 10753                           ; BSR set to: 0
 10754                           ;pic_mmcp.c: 238:  res = RES_ERROR;
 10755  0036EA  0E01               	movlw	1
 10756  0036EC  6F9C               	movwf	disk_readp@res& (0+255),b
 10757  0036EE                     
 10758                           ; BSR set to: 0
 10759                           ;pic_mmcp.c: 239:  if (send_cmd((0x40+17), sector) == 0) {
 10760  0036EE  C092  F00E         	movff	disk_readp@sector,send_cmd@arg
 10761  0036F2  C093  F00F         	movff	disk_readp@sector+1,send_cmd@arg+1
 10762  0036F6  C094  F010         	movff	disk_readp@sector+2,send_cmd@arg+2
 10763  0036FA  C095  F011         	movff	disk_readp@sector+3,send_cmd@arg+3
 10764  0036FE  0E51               	movlw	81
 10765  003700  EC3B  F026         	call	_send_cmd
 10766  003704  0900               	iorlw	0
 10767  003706  A4D8               	btfss	status,2,c
 10768  003708  EF88  F01B         	goto	u8531
 10769  00370C  EF8A  F01B         	goto	u8530
 10770  003710                     u8531:
 10771  003710  EF26  F01C         	goto	l6963
 10772  003714                     u8530:
 10773  003714                     
 10774                           ;pic_mmcp.c: 241:   bc = 40000;
 10775  003714  0E9C               	movlw	156
 10776  003716  0100               	movlb	0	; () banked
 10777  003718  6F9F               	movwf	(disk_readp@bc+1)& (0+255),b
 10778  00371A  0E40               	movlw	64
 10779  00371C  6F9E               	movwf	disk_readp@bc& (0+255),b
 10780  00371E                     l6931:
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;pic_mmcp.c: 243:    rc = rcv_spi();
 10784  00371E  EC7C  F02B         	call	_rcv_spi	;wreg free
 10785  003722  0100               	movlb	0	; () banked
 10786  003724  6F9D               	movwf	disk_readp@rc& (0+255),b
 10787  003726                     
 10788                           ; BSR set to: 0
 10789                           ;pic_mmcp.c: 244:   } while (rc == 0xFF && --bc);
 10790  003726  299D               	incf	disk_readp@rc& (0+255),w,b
 10791  003728  A4D8               	btfss	status,2,c
 10792  00372A  EF99  F01B         	goto	u8541
 10793  00372E  EF9B  F01B         	goto	u8540
 10794  003732                     u8541:
 10795  003732  EFA7  F01B         	goto	l6937
 10796  003736                     u8540:
 10797  003736                     
 10798                           ; BSR set to: 0
 10799  003736  079E               	decf	disk_readp@bc& (0+255),f,b
 10800  003738  A0D8               	btfss	status,0,c
 10801  00373A  079F               	decf	(disk_readp@bc+1)& (0+255),f,b
 10802  00373C  519E               	movf	disk_readp@bc& (0+255),w,b
 10803  00373E  119F               	iorwf	(disk_readp@bc+1)& (0+255),w,b
 10804  003740  A4D8               	btfss	status,2,c
 10805  003742  EFA5  F01B         	goto	u8551
 10806  003746  EFA7  F01B         	goto	u8550
 10807  00374A                     u8551:
 10808  00374A  EF8F  F01B         	goto	l6931
 10809  00374E                     u8550:
 10810  00374E                     l6937:
 10811                           
 10812                           ; BSR set to: 0
 10813                           ;pic_mmcp.c: 246:   if (rc == 0xFE) {
 10814  00374E  0EFE               	movlw	254
 10815  003750  199D               	xorwf	disk_readp@rc& (0+255),w,b
 10816  003752  A4D8               	btfss	status,2,c
 10817  003754  EFAE  F01B         	goto	u8561
 10818  003758  EFB0  F01B         	goto	u8560
 10819  00375C                     u8561:
 10820  00375C  EF26  F01C         	goto	l6963
 10821  003760                     u8560:
 10822  003760                     
 10823                           ; BSR set to: 0
 10824                           ;pic_mmcp.c: 247:    bc = 514 - offset - count;
 10825  003760  C096  F09A         	movff	disk_readp@offset,??_disk_readp
 10826  003764  C097  F09B         	movff	disk_readp@offset+1,??_disk_readp+1
 10827  003768  1F9A               	comf	??_disk_readp& (0+255),f,b
 10828  00376A  1F9B               	comf	(??_disk_readp+1)& (0+255),f,b
 10829  00376C  4B9A               	infsnz	??_disk_readp& (0+255),f,b
 10830  00376E  2B9B               	incf	(??_disk_readp+1)& (0+255),f,b
 10831  003770  5198               	movf	disk_readp@count& (0+255),w,b
 10832  003772  5F9A               	subwf	??_disk_readp& (0+255),f,b
 10833  003774  5199               	movf	(disk_readp@count+1)& (0+255),w,b
 10834  003776  5B9B               	subwfb	(??_disk_readp+1)& (0+255),f,b
 10835  003778  0E02               	movlw	2
 10836  00377A  259A               	addwf	??_disk_readp& (0+255),w,b
 10837  00377C  6F9E               	movwf	disk_readp@bc& (0+255),b
 10838  00377E  0E02               	movlw	2
 10839  003780  219B               	addwfc	(??_disk_readp+1)& (0+255),w,b
 10840  003782  6F9F               	movwf	(disk_readp@bc+1)& (0+255),b
 10841                           
 10842                           ;pic_mmcp.c: 250:    if (offset) {
 10843  003784  5196               	movf	disk_readp@offset& (0+255),w,b
 10844  003786  1197               	iorwf	(disk_readp@offset+1)& (0+255),w,b
 10845  003788  B4D8               	btfsc	status,2,c
 10846  00378A  EFC9  F01B         	goto	u8571
 10847  00378E  EFCB  F01B         	goto	u8570
 10848  003792                     u8571:
 10849  003792  EFDA  F01B         	goto	l6945
 10850  003796                     u8570:
 10851  003796                     l6941:
 10852                           
 10853                           ; BSR set to: 0
 10854  003796  EC7C  F02B         	call	_rcv_spi	;wreg free
 10855  00379A  0100               	movlb	0	; () banked
 10856  00379C  0796               	decf	disk_readp@offset& (0+255),f,b
 10857  00379E  A0D8               	btfss	status,0,c
 10858  0037A0  0797               	decf	(disk_readp@offset+1)& (0+255),f,b
 10859  0037A2  5196               	movf	disk_readp@offset& (0+255),w,b
 10860  0037A4  1197               	iorwf	(disk_readp@offset+1)& (0+255),w,b
 10861  0037A6  A4D8               	btfss	status,2,c
 10862  0037A8  EFD8  F01B         	goto	u8581
 10863  0037AC  EFDA  F01B         	goto	u8580
 10864  0037B0                     u8581:
 10865  0037B0  EFCB  F01B         	goto	l6941
 10866  0037B4                     u8580:
 10867  0037B4                     l6945:
 10868                           
 10869                           ; BSR set to: 0
 10870                           ;pic_mmcp.c: 255:    if (buff) {
 10871  0037B4  5190               	movf	disk_readp@buff& (0+255),w,b
 10872  0037B6  1191               	iorwf	(disk_readp@buff+1)& (0+255),w,b
 10873  0037B8  B4D8               	btfsc	status,2,c
 10874  0037BA  EFE1  F01B         	goto	u8591
 10875  0037BE  EFE3  F01B         	goto	u8590
 10876  0037C2                     u8591:
 10877  0037C2  EFFB  F01B         	goto	l6953
 10878  0037C6                     u8590:
 10879  0037C6                     l6947:
 10880                           
 10881                           ; BSR set to: 0
 10882                           ;pic_mmcp.c: 257:      *buff++ = rcv_spi();
 10883  0037C6  EC7C  F02B         	call	_rcv_spi	;wreg free
 10884  0037CA  C090  FFD9         	movff	disk_readp@buff,fsr2l
 10885  0037CE  C091  FFDA         	movff	disk_readp@buff+1,fsr2h
 10886  0037D2  6EDF               	movwf	indf2,c
 10887  0037D4  0100               	movlb	0	; () banked
 10888  0037D6  4B90               	infsnz	disk_readp@buff& (0+255),f,b
 10889  0037D8  2B91               	incf	(disk_readp@buff+1)& (0+255),f,b
 10890  0037DA                     
 10891                           ; BSR set to: 0
 10892                           ;pic_mmcp.c: 258:     } while (--count);
 10893  0037DA  0798               	decf	disk_readp@count& (0+255),f,b
 10894  0037DC  A0D8               	btfss	status,0,c
 10895  0037DE  0799               	decf	(disk_readp@count+1)& (0+255),f,b
 10896  0037E0  5198               	movf	disk_readp@count& (0+255),w,b
 10897  0037E2  1199               	iorwf	(disk_readp@count+1)& (0+255),w,b
 10898  0037E4  A4D8               	btfss	status,2,c
 10899  0037E6  EFF7  F01B         	goto	u8601
 10900  0037EA  EFF9  F01B         	goto	u8600
 10901  0037EE                     u8601:
 10902  0037EE  EFE3  F01B         	goto	l6947
 10903  0037F2                     u8600:
 10904  0037F2  EF15  F01C         	goto	l6957
 10905  0037F6                     l6953:
 10906                           
 10907                           ; BSR set to: 0
 10908                           ;pic_mmcp.c: 261:      printf("%c", rcv_spi());
 10909  0037F6  0EB8               	movlw	low STR_21
 10910  0037F8  6F86               	movwf	printf@fmt& (0+255),b
 10911  0037FA  0E7D               	movlw	high STR_21
 10912  0037FC  6F87               	movwf	(printf@fmt+1)& (0+255),b
 10913  0037FE  EC7C  F02B         	call	_rcv_spi	;wreg free
 10914  003802  0100               	movlb	0	; () banked
 10915  003804  6F9A               	movwf	??_disk_readp& (0+255),b
 10916  003806  519A               	movf	??_disk_readp& (0+255),w,b
 10917  003808  6F88               	movwf	(?_printf+2)& (0+255),b
 10918  00380A  6B89               	clrf	(?_printf+3)& (0+255),b
 10919  00380C  EC1C  F02B         	call	_printf	;wreg free
 10920  003810                     
 10921                           ;pic_mmcp.c: 262:     } while (--count);
 10922  003810  0100               	movlb	0	; () banked
 10923  003812  0798               	decf	disk_readp@count& (0+255),f,b
 10924  003814  A0D8               	btfss	status,0,c
 10925  003816  0799               	decf	(disk_readp@count+1)& (0+255),f,b
 10926  003818  5198               	movf	disk_readp@count& (0+255),w,b
 10927  00381A  1199               	iorwf	(disk_readp@count+1)& (0+255),w,b
 10928  00381C  A4D8               	btfss	status,2,c
 10929  00381E  EF13  F01C         	goto	u8611
 10930  003822  EF15  F01C         	goto	u8610
 10931  003826                     u8611:
 10932  003826  EFFB  F01B         	goto	l6953
 10933  00382A                     u8610:
 10934  00382A                     l6957:
 10935                           
 10936                           ; BSR set to: 0
 10937  00382A  EC7C  F02B         	call	_rcv_spi	;wreg free
 10938  00382E  0100               	movlb	0	; () banked
 10939  003830  079E               	decf	disk_readp@bc& (0+255),f,b
 10940  003832  A0D8               	btfss	status,0,c
 10941  003834  079F               	decf	(disk_readp@bc+1)& (0+255),f,b
 10942  003836  519E               	movf	disk_readp@bc& (0+255),w,b
 10943  003838  119F               	iorwf	(disk_readp@bc+1)& (0+255),w,b
 10944  00383A  A4D8               	btfss	status,2,c
 10945  00383C  EF22  F01C         	goto	u8621
 10946  003840  EF24  F01C         	goto	u8620
 10947  003844                     u8621:
 10948  003844  EF15  F01C         	goto	l6957
 10949  003848                     u8620:
 10950  003848                     
 10951                           ; BSR set to: 0
 10952                           ;pic_mmcp.c: 268:    res = RES_OK;
 10953  003848  0E00               	movlw	0
 10954  00384A  6F9C               	movwf	disk_readp@res& (0+255),b
 10955  00384C                     l6963:
 10956                           
 10957                           ;pic_mmcp.c: 272:  LATAbits.LA5 = 1;
 10958  00384C  8A89               	bsf	137,5,c	;volatile
 10959  00384E                     
 10960                           ;pic_mmcp.c: 273:  rcv_spi();
 10961  00384E  EC7C  F02B         	call	_rcv_spi	;wreg free
 10962  003852                     
 10963                           ;pic_mmcp.c: 275:  return res;
 10964  003852  0100               	movlb	0	; () banked
 10965  003854  519C               	movf	disk_readp@res& (0+255),w,b
 10966  003856                     
 10967                           ; BSR set to: 0
 10968  003856  0012               	return		;funcret
 10969  003858                     __end_of_disk_readp:
 10970                           	callstack 0
 10971                           
 10972 ;; *************** function _send_cmd *****************
 10973 ;; Defined at:
 10974 ;;		line 122 in file "pic_mmcp.c"
 10975 ;; Parameters:    Size  Location     Type
 10976 ;;  cmd             1    wreg     unsigned char 
 10977 ;;  arg             4   13[COMRAM] unsigned long 
 10978 ;; Auto vars:     Size  Location     Type
 10979 ;;  cmd             1   18[COMRAM] unsigned char 
 10980 ;;  res             1   19[COMRAM] unsigned char 
 10981 ;;  n               1   17[COMRAM] unsigned char 
 10982 ;; Return value:  Size  Location     Type
 10983 ;;                  1    wreg      unsigned char 
 10984 ;; Registers used:
 10985 ;;		wreg, status,2, status,0, cstack
 10986 ;; Tracked objects:
 10987 ;;		On entry : 0/0
 10988 ;;		On exit  : 0/0
 10989 ;;		Unchanged: 0/0
 10990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10991 ;;      Params:         4       0       0       0       0       0       0
 10992 ;;      Locals:         3       0       0       0       0       0       0
 10993 ;;      Temps:          0       0       0       0       0       0       0
 10994 ;;      Totals:         7       0       0       0       0       0       0
 10995 ;;Total ram usage:        7 bytes
 10996 ;; Hardware stack levels used: 1
 10997 ;; Hardware stack levels required when called: 3
 10998 ;; This function calls:
 10999 ;;		_rcv_spi
 11000 ;;		_send_cmd2
 11001 ;;		_xmit_spi
 11002 ;; This function is called by:
 11003 ;;		_disk_initialize
 11004 ;;		_disk_readp
 11005 ;; This function uses a non-reentrant model
 11006 ;;
 11007                           
 11008                           	psect	text34
 11009  004C76                     __ptext34:
 11010                           	callstack 0
 11011  004C76                     _send_cmd:
 11012                           	callstack 24
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;incstack = 0
 11016                           ;send_cmd@cmd stored from wreg
 11017  004C76  6E13               	movwf	send_cmd@cmd^0,c
 11018  004C78                     
 11019                           ;pic_mmcp.c: 123:  BYTE cmd,;pic_mmcp.c: 124:  DWORD arg;pic_mmcp.c: 126: {;pic_mmcp.c: 
      +                          127:  BYTE n, res;;pic_mmcp.c: 129:  if (cmd & 0x80) {
 11020  004C78  AE13               	btfss	send_cmd@cmd^0,7,c
 11021  004C7A  EF41  F026         	goto	u4941
 11022  004C7E  EF43  F026         	goto	u4940
 11023  004C82                     u4941:
 11024  004C82  EF5B  F026         	goto	l569
 11025  004C86                     u4940:
 11026  004C86                     
 11027                           ;pic_mmcp.c: 130:   cmd &= 0x7F;
 11028  004C86  9E13               	bcf	send_cmd@cmd^0,7,c
 11029  004C88                     
 11030                           ;pic_mmcp.c: 131:   res = send_cmd2((0x40+55), 0);
 11031  004C88  0E00               	movlw	0
 11032  004C8A  6E07               	movwf	send_cmd2@arg^0,c
 11033  004C8C  0E00               	movlw	0
 11034  004C8E  6E08               	movwf	(send_cmd2@arg+1)^0,c
 11035  004C90  0E00               	movlw	0
 11036  004C92  6E09               	movwf	(send_cmd2@arg+2)^0,c
 11037  004C94  0E00               	movlw	0
 11038  004C96  6E0A               	movwf	(send_cmd2@arg+3)^0,c
 11039  004C98  0E77               	movlw	119
 11040  004C9A  EC3F  F028         	call	_send_cmd2
 11041  004C9E  6E14               	movwf	send_cmd@res^0,c
 11042  004CA0                     
 11043                           ;pic_mmcp.c: 132:   if (res > 1)
 11044  004CA0  0E01               	movlw	1
 11045  004CA2  6414               	cpfsgt	send_cmd@res^0,c
 11046  004CA4  EF56  F026         	goto	u4951
 11047  004CA8  EF58  F026         	goto	u4950
 11048  004CAC                     u4951:
 11049  004CAC  EF5B  F026         	goto	l569
 11050  004CB0                     u4950:
 11051  004CB0                     l4621:
 11052                           
 11053                           ;pic_mmcp.c: 133:             return res;
 11054  004CB0  5014               	movf	send_cmd@res^0,w,c
 11055  004CB2  EF9C  F026         	goto	l571
 11056  004CB6                     l569:
 11057                           
 11058                           ;pic_mmcp.c: 137:  LATAbits.LA5 = 1;
 11059  004CB6  8A89               	bsf	137,5,c	;volatile
 11060  004CB8                     
 11061                           ;pic_mmcp.c: 138:  rcv_spi();
 11062  004CB8  EC7C  F02B         	call	_rcv_spi	;wreg free
 11063  004CBC                     
 11064                           ;pic_mmcp.c: 139:  LATAbits.LA5 = 0;
 11065  004CBC  9A89               	bcf	137,5,c	;volatile
 11066                           
 11067                           ;pic_mmcp.c: 140:  rcv_spi();
 11068  004CBE  EC7C  F02B         	call	_rcv_spi	;wreg free
 11069                           
 11070                           ;pic_mmcp.c: 143:  xmit_spi(cmd);
 11071  004CC2  5013               	movf	send_cmd@cmd^0,w,c
 11072  004CC4  EC63  F02B         	call	_xmit_spi
 11073                           
 11074                           ;pic_mmcp.c: 144:  xmit_spi((BYTE)(arg >> 24));
 11075  004CC8  5011               	movf	(send_cmd@arg+3)^0,w,c
 11076  004CCA  EC63  F02B         	call	_xmit_spi
 11077                           
 11078                           ;pic_mmcp.c: 145:  xmit_spi((BYTE)(arg >> 16));
 11079  004CCE  5010               	movf	(send_cmd@arg+2)^0,w,c
 11080  004CD0  EC63  F02B         	call	_xmit_spi
 11081                           
 11082                           ;pic_mmcp.c: 146:  xmit_spi((BYTE)(arg >> 8));
 11083  004CD4  500F               	movf	(send_cmd@arg+1)^0,w,c
 11084  004CD6  EC63  F02B         	call	_xmit_spi
 11085                           
 11086                           ;pic_mmcp.c: 147:  xmit_spi((BYTE)arg);
 11087  004CDA  500E               	movf	send_cmd@arg^0,w,c
 11088  004CDC  EC63  F02B         	call	_xmit_spi
 11089  004CE0                     
 11090                           ;pic_mmcp.c: 148:  n = 0x01;
 11091  004CE0  0E01               	movlw	1
 11092  004CE2  6E12               	movwf	send_cmd@n^0,c
 11093  004CE4                     
 11094                           ;pic_mmcp.c: 149:  if (cmd == (0x40+0)) n = 0x95;
 11095  004CE4  0E40               	movlw	64
 11096  004CE6  1813               	xorwf	send_cmd@cmd^0,w,c
 11097  004CE8  A4D8               	btfss	status,2,c
 11098  004CEA  EF79  F026         	goto	u4961
 11099  004CEE  EF7B  F026         	goto	u4960
 11100  004CF2                     u4961:
 11101  004CF2  EF7D  F026         	goto	l4635
 11102  004CF6                     u4960:
 11103  004CF6  0E95               	movlw	149
 11104  004CF8  6E12               	movwf	send_cmd@n^0,c
 11105  004CFA                     l4635:
 11106                           
 11107                           ;pic_mmcp.c: 150:  if (cmd == (0x40+8)) n = 0x87;
 11108  004CFA  0E48               	movlw	72
 11109  004CFC  1813               	xorwf	send_cmd@cmd^0,w,c
 11110  004CFE  A4D8               	btfss	status,2,c
 11111  004D00  EF84  F026         	goto	u4971
 11112  004D04  EF86  F026         	goto	u4970
 11113  004D08                     u4971:
 11114  004D08  EF88  F026         	goto	l4639
 11115  004D0C                     u4970:
 11116  004D0C  0E87               	movlw	135
 11117  004D0E  6E12               	movwf	send_cmd@n^0,c
 11118  004D10                     l4639:
 11119                           
 11120                           ;pic_mmcp.c: 151:  xmit_spi(n);
 11121  004D10  5012               	movf	send_cmd@n^0,w,c
 11122  004D12  EC63  F02B         	call	_xmit_spi
 11123  004D16                     
 11124                           ;pic_mmcp.c: 154:  n = 10;
 11125  004D16  0E0A               	movlw	10
 11126  004D18  6E12               	movwf	send_cmd@n^0,c
 11127  004D1A                     l574:
 11128                           
 11129                           ;pic_mmcp.c: 156:   res = rcv_spi();
 11130  004D1A  EC7C  F02B         	call	_rcv_spi	;wreg free
 11131  004D1E  6E14               	movwf	send_cmd@res^0,c
 11132  004D20                     
 11133                           ;pic_mmcp.c: 157:  } while ((res & 0x80) && --n);
 11134  004D20  AE14               	btfss	send_cmd@res^0,7,c
 11135  004D22  EF95  F026         	goto	u4981
 11136  004D26  EF97  F026         	goto	u4980
 11137  004D2A                     u4981:
 11138  004D2A  EF58  F026         	goto	l4621
 11139  004D2E                     u4980:
 11140  004D2E  2E12               	decfsz	send_cmd@n^0,f,c
 11141  004D30  EF8D  F026         	goto	l574
 11142  004D34  EF58  F026         	goto	l4621
 11143  004D38                     l571:
 11144  004D38  0012               	return		;funcret
 11145  004D3A                     __end_of_send_cmd:
 11146                           	callstack 0
 11147                           
 11148 ;; *************** function _send_cmd2 *****************
 11149 ;; Defined at:
 11150 ;;		line 89 in file "pic_mmcp.c"
 11151 ;; Parameters:    Size  Location     Type
 11152 ;;  cmd             1    wreg     unsigned char 
 11153 ;;  arg             4    6[COMRAM] unsigned long 
 11154 ;; Auto vars:     Size  Location     Type
 11155 ;;  cmd             1   11[COMRAM] unsigned char 
 11156 ;;  n               1   12[COMRAM] unsigned char 
 11157 ;;  res             1   10[COMRAM] unsigned char 
 11158 ;; Return value:  Size  Location     Type
 11159 ;;                  1    wreg      unsigned char 
 11160 ;; Registers used:
 11161 ;;		wreg, status,2, status,0, cstack
 11162 ;; Tracked objects:
 11163 ;;		On entry : 0/0
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11167 ;;      Params:         4       0       0       0       0       0       0
 11168 ;;      Locals:         3       0       0       0       0       0       0
 11169 ;;      Temps:          0       0       0       0       0       0       0
 11170 ;;      Totals:         7       0       0       0       0       0       0
 11171 ;;Total ram usage:        7 bytes
 11172 ;; Hardware stack levels used: 1
 11173 ;; Hardware stack levels required when called: 2
 11174 ;; This function calls:
 11175 ;;		_rcv_spi
 11176 ;;		_xmit_spi
 11177 ;; This function is called by:
 11178 ;;		_send_cmd
 11179 ;; This function uses a non-reentrant model
 11180 ;;
 11181                           
 11182                           	psect	text35
 11183  00507E                     __ptext35:
 11184                           	callstack 0
 11185  00507E                     _send_cmd2:
 11186                           	callstack 24
 11187                           
 11188                           ;incstack = 0
 11189                           ;send_cmd2@cmd stored from wreg
 11190  00507E  6E0C               	movwf	send_cmd2@cmd^0,c
 11191  005080                     
 11192                           ;pic_mmcp.c: 90:  BYTE cmd,;pic_mmcp.c: 91:  DWORD arg;pic_mmcp.c: 93: {;pic_mmcp.c: 94:
      +                            BYTE n, res;;pic_mmcp.c: 97:  LATAbits.LA5 = 1;
 11193  005080  8A89               	bsf	137,5,c	;volatile
 11194  005082                     
 11195                           ;pic_mmcp.c: 98:  rcv_spi();
 11196  005082  EC7C  F02B         	call	_rcv_spi	;wreg free
 11197  005086                     
 11198                           ;pic_mmcp.c: 99:  LATAbits.LA5 = 0;
 11199  005086  9A89               	bcf	137,5,c	;volatile
 11200                           
 11201                           ;pic_mmcp.c: 100:  rcv_spi();
 11202  005088  EC7C  F02B         	call	_rcv_spi	;wreg free
 11203                           
 11204                           ;pic_mmcp.c: 103:  xmit_spi(cmd);
 11205  00508C  500C               	movf	send_cmd2@cmd^0,w,c
 11206  00508E  EC63  F02B         	call	_xmit_spi
 11207                           
 11208                           ;pic_mmcp.c: 104:  xmit_spi((BYTE)(arg >> 24));
 11209  005092  500A               	movf	(send_cmd2@arg+3)^0,w,c
 11210  005094  EC63  F02B         	call	_xmit_spi
 11211                           
 11212                           ;pic_mmcp.c: 105:  xmit_spi((BYTE)(arg >> 16));
 11213  005098  5009               	movf	(send_cmd2@arg+2)^0,w,c
 11214  00509A  EC63  F02B         	call	_xmit_spi
 11215                           
 11216                           ;pic_mmcp.c: 106:  xmit_spi((BYTE)(arg >> 8));
 11217  00509E  5008               	movf	(send_cmd2@arg+1)^0,w,c
 11218  0050A0  EC63  F02B         	call	_xmit_spi
 11219                           
 11220                           ;pic_mmcp.c: 107:  xmit_spi((BYTE)arg);
 11221  0050A4  5007               	movf	send_cmd2@arg^0,w,c
 11222  0050A6  EC63  F02B         	call	_xmit_spi
 11223  0050AA                     
 11224                           ;pic_mmcp.c: 108:  n = 0x01;
 11225  0050AA  0E01               	movlw	1
 11226  0050AC  6E0D               	movwf	send_cmd2@n^0,c
 11227  0050AE                     
 11228                           ;pic_mmcp.c: 109:  if (cmd == (0x40+0)) n = 0x95;
 11229  0050AE  0E40               	movlw	64
 11230  0050B0  180C               	xorwf	send_cmd2@cmd^0,w,c
 11231  0050B2  A4D8               	btfss	status,2,c
 11232  0050B4  EF5E  F028         	goto	u4901
 11233  0050B8  EF60  F028         	goto	u4900
 11234  0050BC                     u4901:
 11235  0050BC  EF62  F028         	goto	l4583
 11236  0050C0                     u4900:
 11237  0050C0  0E95               	movlw	149
 11238  0050C2  6E0D               	movwf	send_cmd2@n^0,c
 11239  0050C4                     l4583:
 11240                           
 11241                           ;pic_mmcp.c: 110:  if (cmd == (0x40+8)) n = 0x87;
 11242  0050C4  0E48               	movlw	72
 11243  0050C6  180C               	xorwf	send_cmd2@cmd^0,w,c
 11244  0050C8  A4D8               	btfss	status,2,c
 11245  0050CA  EF69  F028         	goto	u4911
 11246  0050CE  EF6B  F028         	goto	u4910
 11247  0050D2                     u4911:
 11248  0050D2  EF6D  F028         	goto	l4587
 11249  0050D6                     u4910:
 11250  0050D6  0E87               	movlw	135
 11251  0050D8  6E0D               	movwf	send_cmd2@n^0,c
 11252  0050DA                     l4587:
 11253                           
 11254                           ;pic_mmcp.c: 111:  xmit_spi(n);
 11255  0050DA  500D               	movf	send_cmd2@n^0,w,c
 11256  0050DC  EC63  F02B         	call	_xmit_spi
 11257  0050E0                     
 11258                           ;pic_mmcp.c: 114:  n = 10;
 11259  0050E0  0E0A               	movlw	10
 11260  0050E2  6E0D               	movwf	send_cmd2@n^0,c
 11261  0050E4                     l562:
 11262                           
 11263                           ;pic_mmcp.c: 116:   res = rcv_spi();
 11264  0050E4  EC7C  F02B         	call	_rcv_spi	;wreg free
 11265  0050E8  6E0B               	movwf	send_cmd2@res^0,c
 11266  0050EA                     
 11267                           ;pic_mmcp.c: 117:  } while ((res & 0x80) && --n);
 11268  0050EA  AE0B               	btfss	send_cmd2@res^0,7,c
 11269  0050EC  EF7A  F028         	goto	u4921
 11270  0050F0  EF7C  F028         	goto	u4920
 11271  0050F4                     u4921:
 11272  0050F4  EF7F  F028         	goto	l4595
 11273  0050F8                     u4920:
 11274  0050F8  2E0D               	decfsz	send_cmd2@n^0,f,c
 11275  0050FA  EF72  F028         	goto	l562
 11276  0050FE                     l4595:
 11277                           
 11278                           ;pic_mmcp.c: 119:  return res;
 11279  0050FE  500B               	movf	send_cmd2@res^0,w,c
 11280  005100  0012               	return		;funcret
 11281  005102                     __end_of_send_cmd2:
 11282                           	callstack 0
 11283                           
 11284 ;; *************** function _xmit_spi *****************
 11285 ;; Defined at:
 11286 ;;		line 45 in file "pic_mmcp.c"
 11287 ;; Parameters:    Size  Location     Type
 11288 ;;  d               1    wreg     unsigned char 
 11289 ;; Auto vars:     Size  Location     Type
 11290 ;;  d               1    5[COMRAM] unsigned char 
 11291 ;; Return value:  Size  Location     Type
 11292 ;;                  1    wreg      void 
 11293 ;; Registers used:
 11294 ;;		wreg
 11295 ;; Tracked objects:
 11296 ;;		On entry : 0/0
 11297 ;;		On exit  : 0/0
 11298 ;;		Unchanged: 0/0
 11299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11300 ;;      Params:         0       0       0       0       0       0       0
 11301 ;;      Locals:         1       0       0       0       0       0       0
 11302 ;;      Temps:          0       0       0       0       0       0       0
 11303 ;;      Totals:         1       0       0       0       0       0       0
 11304 ;;Total ram usage:        1 bytes
 11305 ;; Hardware stack levels used: 1
 11306 ;; Hardware stack levels required when called: 1
 11307 ;; This function calls:
 11308 ;;		Nothing
 11309 ;; This function is called by:
 11310 ;;		_send_cmd2
 11311 ;;		_send_cmd
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315                           	psect	text36
 11316  0056C6                     __ptext36:
 11317                           	callstack 0
 11318  0056C6                     _xmit_spi:
 11319                           	callstack 25
 11320                           
 11321                           ;incstack = 0
 11322                           ;xmit_spi@d stored from wreg
 11323  0056C6  6E06               	movwf	xmit_spi@d^0,c
 11324  0056C8                     
 11325                           ;pic_mmcp.c: 45: void xmit_spi (BYTE d);pic_mmcp.c: 46: {;pic_mmcp.c: 47:  SSPBUF = d;
 11326  0056C8  C006  FFC9         	movff	xmit_spi@d,4041	;volatile
 11327  0056CC                     l546:
 11328  0056CC  A69E               	btfss	3998,3,c	;volatile
 11329  0056CE  EF6B  F02B         	goto	u4701
 11330  0056D2  EF6D  F02B         	goto	u4700
 11331  0056D6                     u4701:
 11332  0056D6  EF66  F02B         	goto	l546
 11333  0056DA                     u4700:
 11334  0056DA                     
 11335                           ;pic_mmcp.c: 49:     SSPIF = 0;
 11336  0056DA  969E               	bcf	3998,3,c	;volatile
 11337                           
 11338                           ;pic_mmcp.c: 50:  SSPBUF;
 11339  0056DC  50C9               	movf	201,w,c	;volatile
 11340  0056DE  0012               	return		;funcret
 11341  0056E0                     __end_of_xmit_spi:
 11342                           	callstack 0
 11343                           
 11344 ;; *************** function _rcv_spi *****************
 11345 ;; Defined at:
 11346 ;;		line 53 in file "pic_mmcp.c"
 11347 ;; Parameters:    Size  Location     Type
 11348 ;;		None
 11349 ;; Auto vars:     Size  Location     Type
 11350 ;;		None
 11351 ;; Return value:  Size  Location     Type
 11352 ;;                  1    wreg      unsigned char 
 11353 ;; Registers used:
 11354 ;;		wreg, status,2
 11355 ;; Tracked objects:
 11356 ;;		On entry : 0/0
 11357 ;;		On exit  : 0/0
 11358 ;;		Unchanged: 0/0
 11359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11360 ;;      Params:         0       0       0       0       0       0       0
 11361 ;;      Locals:         0       0       0       0       0       0       0
 11362 ;;      Temps:          0       0       0       0       0       0       0
 11363 ;;      Totals:         0       0       0       0       0       0       0
 11364 ;;Total ram usage:        0 bytes
 11365 ;; Hardware stack levels used: 1
 11366 ;; Hardware stack levels required when called: 1
 11367 ;; This function calls:
 11368 ;;		Nothing
 11369 ;; This function is called by:
 11370 ;;		_send_cmd2
 11371 ;;		_send_cmd
 11372 ;;		_disk_initialize
 11373 ;;		_disk_readp
 11374 ;; This function uses a non-reentrant model
 11375 ;;
 11376                           
 11377                           	psect	text37
 11378  0056F8                     __ptext37:
 11379                           	callstack 0
 11380  0056F8                     _rcv_spi:
 11381                           	callstack 24
 11382  0056F8                     
 11383                           ;pic_mmcp.c: 55:     SSPBUF = 0xff;
 11384  0056F8  68C9               	setf	201,c	;volatile
 11385  0056FA                     l552:
 11386  0056FA  A69E               	btfss	3998,3,c	;volatile
 11387  0056FC  EF82  F02B         	goto	u4711
 11388  005700  EF84  F02B         	goto	u4710
 11389  005704                     u4711:
 11390  005704  EF7D  F02B         	goto	l552
 11391  005708                     u4710:
 11392  005708                     
 11393                           ;pic_mmcp.c: 57:     SSPIF = 0;
 11394  005708  969E               	bcf	3998,3,c	;volatile
 11395  00570A                     
 11396                           ;pic_mmcp.c: 58:  return SSPBUF;
 11397  00570A  50C9               	movf	201,w,c	;volatile
 11398  00570C  0012               	return		;funcret
 11399  00570E                     __end_of_rcv_spi:
 11400                           	callstack 0
 11401                           
 11402 ;; *************** function _printf *****************
 11403 ;; Defined at:
 11404 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
 11405 ;; Parameters:    Size  Location     Type
 11406 ;;  fmt             2    6[BANK0 ] PTR const unsigned char 
 11407 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 11408 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 11409 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 11410 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 11411 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 11412 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 11413 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 11414 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;  ap              2  115[COMRAM] PTR void [1]
 11417 ;;		 -> ?_printf(2), 
 11418 ;;  ret             2    0        int 
 11419 ;; Return value:  Size  Location     Type
 11420 ;;                  2    6[BANK0 ] int 
 11421 ;; Registers used:
 11422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11423 ;; Tracked objects:
 11424 ;;		On entry : 0/0
 11425 ;;		On exit  : 0/0
 11426 ;;		Unchanged: 0/0
 11427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11428 ;;      Params:         0      10       0       0       0       0       0
 11429 ;;      Locals:         2       0       0       0       0       0       0
 11430 ;;      Temps:          0       0       0       0       0       0       0
 11431 ;;      Totals:         2      10       0       0       0       0       0
 11432 ;;Total ram usage:       12 bytes
 11433 ;; Hardware stack levels used: 1
 11434 ;; Hardware stack levels required when called: 8
 11435 ;; This function calls:
 11436 ;;		_vfprintf
 11437 ;; This function is called by:
 11438 ;;		_put_rc
 11439 ;;		_put_drc
 11440 ;;		_main
 11441 ;;		_uart_gets
 11442 ;;		_put_dump
 11443 ;;		_disk_readp
 11444 ;; This function uses a non-reentrant model
 11445 ;;
 11446                           
 11447                           	psect	text38
 11448  005638                     __ptext38:
 11449                           	callstack 0
 11450  005638                     _printf:
 11451                           	callstack 21
 11452  005638  0E88               	movlw	low (?_printf+2)
 11453  00563A  6E74               	movwf	printf@ap^0,c
 11454  00563C  0E00               	movlw	high (?_printf+2)
 11455  00563E  6E75               	movwf	(printf@ap+1)^0,c
 11456  005640  0E00               	movlw	0
 11457  005642  0100               	movlb	0	; () banked
 11458  005644  6F80               	movwf	vfprintf@fp& (0+255),b
 11459  005646  0E00               	movlw	0
 11460  005648  6F81               	movwf	(vfprintf@fp+1)& (0+255),b
 11461  00564A  C086  F082         	movff	printf@fmt,vfprintf@fmt
 11462  00564E  C087  F083         	movff	printf@fmt+1,vfprintf@fmt+1
 11463  005652  0E74               	movlw	low printf@ap
 11464  005654  6F84               	movwf	vfprintf@ap& (0+255),b
 11465  005656  0E00               	movlw	high printf@ap
 11466  005658  6F85               	movwf	(vfprintf@ap+1)& (0+255),b
 11467  00565A  EC6D  F029         	call	_vfprintf	;wreg free
 11468  00565E  0012               	return		;funcret
 11469  005660                     __end_of_printf:
 11470                           	callstack 0
 11471                           
 11472 ;; *************** function _vfprintf *****************
 11473 ;; Defined at:
 11474 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 11477 ;;		 -> NULL(0), 
 11478 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 11479 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 11480 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 11481 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 11482 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 11483 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 11484 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 11485 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 11486 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 11487 ;;  ap              2    4[BANK0 ] PTR PTR void 
 11488 ;;		 -> printf@ap(2), 
 11489 ;; Auto vars:     Size  Location     Type
 11490 ;;  cfmt            2  113[COMRAM] PTR unsigned char 
 11491 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 11492 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 11493 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 11494 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 11495 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 11496 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 11497 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 11498 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 11499 ;; Return value:  Size  Location     Type
 11500 ;;                  2    0[BANK0 ] int 
 11501 ;; Registers used:
 11502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11503 ;; Tracked objects:
 11504 ;;		On entry : 0/0
 11505 ;;		On exit  : 0/0
 11506 ;;		Unchanged: 0/0
 11507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11508 ;;      Params:         0       6       0       0       0       0       0
 11509 ;;      Locals:         2       0       0       0       0       0       0
 11510 ;;      Temps:          0       0       0       0       0       0       0
 11511 ;;      Totals:         2       6       0       0       0       0       0
 11512 ;;Total ram usage:        8 bytes
 11513 ;; Hardware stack levels used: 1
 11514 ;; Hardware stack levels required when called: 7
 11515 ;; This function calls:
 11516 ;;		_vfpfcnvrt
 11517 ;; This function is called by:
 11518 ;;		_printf
 11519 ;; This function uses a non-reentrant model
 11520 ;;
 11521                           
 11522                           	psect	text39
 11523  0052DA                     __ptext39:
 11524                           	callstack 0
 11525  0052DA                     _vfprintf:
 11526                           	callstack 21
 11527  0052DA                     
 11528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 11529  0052DA  C082  F072         	movff	vfprintf@fmt,vfprintf@cfmt
 11530  0052DE  C083  F073         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 11531  0052E2                     
 11532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 11533  0052E2  0E00               	movlw	0
 11534  0052E4  0100               	movlb	0	; () banked
 11535  0052E6  6FF8               	movwf	(_nout+1)& (0+255),b
 11536  0052E8  0E00               	movlw	0
 11537  0052EA  6FF7               	movwf	_nout& (0+255),b
 11538                           
 11539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11540  0052EC  EF8B  F029         	goto	l6913
 11541  0052F0                     l6911:
 11542                           
 11543                           ; BSR set to: 0
 11544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 11545  0052F0  C080  F049         	movff	vfprintf@fp,vfpfcnvrt@fp
 11546  0052F4  C081  F04A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 11547  0052F8  0E72               	movlw	low vfprintf@cfmt
 11548  0052FA  6E4B               	movwf	vfpfcnvrt@fmt^0,c
 11549  0052FC  0E00               	movlw	high vfprintf@cfmt
 11550  0052FE  6E4C               	movwf	(vfpfcnvrt@fmt+1)^0,c
 11551  005300  C084  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
 11552  005304  C085  F04E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 11553  005308  EC09  F000         	call	_vfpfcnvrt	;wreg free
 11554  00530C  5049               	movf	?_vfpfcnvrt^0,w,c
 11555  00530E  0100               	movlb	0	; () banked
 11556  005310  27F7               	addwf	_nout& (0+255),f,b
 11557  005312  504A               	movf	(?_vfpfcnvrt+1)^0,w,c
 11558  005314  23F8               	addwfc	(_nout+1)& (0+255),f,b
 11559  005316                     l6913:
 11560                           
 11561                           ; BSR set to: 0
 11562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11563  005316  C072  FFF6         	movff	vfprintf@cfmt,tblptrl
 11564  00531A  C073  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 11565  00531E                     	if	0	;tblptru may be non-zero
 11566  00531E                     	endif
 11567  00531E                     	if	0	;tblptru may be non-zero
 11568  00531E                     	endif
 11569  00531E  0008               	tblrd		*
 11570  005320  50F5               	movf	tablat,w,c
 11571  005322  0900               	iorlw	0
 11572  005324  A4D8               	btfss	status,2,c
 11573  005326  EF97  F029         	goto	u8501
 11574  00532A  EF99  F029         	goto	u8500
 11575  00532E                     u8501:
 11576  00532E  EF78  F029         	goto	l6911
 11577  005332                     u8500:
 11578  005332                     
 11579                           ; BSR set to: 0
 11580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 11581  005332  C0F7  F080         	movff	_nout,?_vfprintf
 11582  005336  C0F8  F081         	movff	_nout+1,?_vfprintf+1
 11583  00533A                     
 11584                           ; BSR set to: 0
 11585  00533A  0012               	return		;funcret
 11586  00533C                     __end_of_vfprintf:
 11587                           	callstack 0
 11588                           
 11589 ;; *************** function _vfpfcnvrt *****************
 11590 ;; Defined at:
 11591 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;  fp              2   72[COMRAM] PTR struct _IO_FILE
 11594 ;;		 -> NULL(0), 
 11595 ;;  fmt             2   74[COMRAM] PTR PTR unsigned char 
 11596 ;;		 -> vfprintf@cfmt(2), 
 11597 ;;  ap              2   76[COMRAM] PTR PTR void 
 11598 ;;		 -> printf@ap(2), 
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;  llu             8  105[COMRAM] unsigned long long 
 11601 ;;  ll              8   96[COMRAM] long long 
 11602 ;;  f               4    0        long long 
 11603 ;;  vp              3    0        PTR void 
 11604 ;;  ct              3    0        unsigned char [3]
 11605 ;;  cp              2   92[COMRAM] PTR unsigned char 
 11606 ;;		 -> ?_printf(2), main@fno(22), put_rc@str(69), 
 11607 ;;  i               2    0        int 
 11608 ;;  done            2    0        int 
 11609 ;;  c               1  104[COMRAM] unsigned char 
 11610 ;; Return value:  Size  Location     Type
 11611 ;;                  2   72[COMRAM] int 
 11612 ;; Registers used:
 11613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11614 ;; Tracked objects:
 11615 ;;		On entry : 0/0
 11616 ;;		On exit  : 0/0
 11617 ;;		Unchanged: 0/0
 11618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11619 ;;      Params:         6       0       0       0       0       0       0
 11620 ;;      Locals:        21       0       0       0       0       0       0
 11621 ;;      Temps:         14       0       0       0       0       0       0
 11622 ;;      Totals:        41       0       0       0       0       0       0
 11623 ;;Total ram usage:       41 bytes
 11624 ;; Hardware stack levels used: 1
 11625 ;; Hardware stack levels required when called: 6
 11626 ;; This function calls:
 11627 ;;		_atoi
 11628 ;;		_dtoa
 11629 ;;		_fputc
 11630 ;;		_isdigit
 11631 ;;		_stoa
 11632 ;;		_strncmp
 11633 ;;		_utoa
 11634 ;;		_xtoa
 11635 ;; This function is called by:
 11636 ;;		_vfprintf
 11637 ;; This function uses a non-reentrant model
 11638 ;;
 11639                           
 11640                           	psect	text40
 11641  000012                     __ptext40:
 11642                           	callstack 0
 11643  000012                     _vfpfcnvrt:
 11644                           	callstack 21
 11645  000012                     
 11646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 11647  000012  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11648  000016  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11649  00001A  CFDE FFF6          	movff	postinc2,tblptrl
 11650  00001E  CFDD FFF7          	movff	postdec2,tblptrh
 11651  000022                     	if	0	;tblptru may be non-zero
 11652  000022                     	endif
 11653  000022                     	if	0	;tblptru may be non-zero
 11654  000022                     	endif
 11655  000022  0008               	tblrd		*
 11656  000024  50F5               	movf	tablat,w,c
 11657  000026  0A25               	xorlw	37
 11658  000028  A4D8               	btfss	status,2,c
 11659  00002A  EF19  F000         	goto	u8321
 11660  00002E  EF1B  F000         	goto	u8320
 11661  000032                     u8321:
 11662  000032  EFD0  F003         	goto	l6899
 11663  000036                     u8320:
 11664  000036                     
 11665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 11666  000036  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11667  00003A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11668  00003E  2ADE               	incf	postinc2,f,c
 11669  000040  0E00               	movlw	0
 11670  000042  22DD               	addwfc	postdec2,f,c
 11671  000044                     
 11672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 11673  000044  0E00               	movlw	0
 11674  000046  0100               	movlb	0	; () banked
 11675  000048  6FFA               	movwf	(_width+1)& (0+255),b
 11676  00004A  0E00               	movlw	0
 11677  00004C  6FF9               	movwf	_width& (0+255),b
 11678  00004E  C0F9  F078         	movff	_width,_flags
 11679  000052  C0FA  F079         	movff	_width+1,_flags+1
 11680  000056                     
 11681                           ; BSR set to: 0
 11682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 11683  000056  6876               	setf	_prec^0,c
 11684  000058  6877               	setf	(_prec+1)^0,c
 11685  00005A                     
 11686                           ; BSR set to: 0
 11687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
 11688  00005A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11689  00005E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11690  000062  CFDE FFF6          	movff	postinc2,tblptrl
 11691  000066  CFDD FFF7          	movff	postdec2,tblptrh
 11692  00006A                     	if	0	;tblptru may be non-zero
 11693  00006A                     	endif
 11694  00006A                     	if	0	;tblptru may be non-zero
 11695  00006A                     	endif
 11696  00006A  0008               	tblrd		*
 11697  00006C  50F5               	movf	tablat,w,c
 11698  00006E  0A2A               	xorlw	42
 11699  000070  A4D8               	btfss	status,2,c
 11700  000072  EF3D  F000         	goto	u8331
 11701  000076  EF3F  F000         	goto	u8330
 11702  00007A                     u8331:
 11703  00007A  EF68  F000         	goto	l6801
 11704  00007E                     u8330:
 11705  00007E                     
 11706                           ; BSR set to: 0
 11707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
 11708  00007E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11709  000082  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11710  000086  2ADE               	incf	postinc2,f,c
 11711  000088  0E00               	movlw	0
 11712  00008A  22DD               	addwfc	postdec2,f,c
 11713                           
 11714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
 11715  00008C  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11716  000090  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11717  000094  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11718  000098  0E02               	movlw	2
 11719  00009A  26DE               	addwf	postinc2,f,c
 11720  00009C  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11721  0000A0  0E00               	movlw	0
 11722  0000A2  22DD               	addwfc	postdec2,f,c
 11723  0000A4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11724  0000A8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11725  0000AC  CFDE F0F9          	movff	postinc2,_width
 11726  0000B0  CFDD F0FA          	movff	postdec2,_width+1
 11727  0000B4                     
 11728                           ; BSR set to: 0
 11729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
 11730  0000B4  BFFA               	btfsc	(_width+1)& (0+255),7,b
 11731  0000B6  EF61  F000         	goto	u8340
 11732  0000BA  EF5F  F000         	goto	u8341
 11733  0000BE                     u8341:
 11734  0000BE  EFAB  F000         	goto	l6811
 11735  0000C2                     u8340:
 11736  0000C2                     
 11737                           ; BSR set to: 0
 11738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
 11739  0000C2  8078               	bsf	_flags^0,0,c
 11740                           
 11741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
 11742  0000C4  6DF9               	negf	_width& (0+255),b
 11743  0000C6  1FFA               	comf	(_width+1)& (0+255),f,b
 11744  0000C8  B0D8               	btfsc	status,0,c
 11745  0000CA  2BFA               	incf	(_width+1)& (0+255),f,b
 11746  0000CC  EFAB  F000         	goto	l6811
 11747  0000D0                     l6801:
 11748                           
 11749                           ; BSR set to: 0
 11750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
 11751  0000D0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11752  0000D4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11753  0000D8  CFDE F00D          	movff	postinc2,atoi@s
 11754  0000DC  CFDD F00E          	movff	postdec2,atoi@s+1
 11755  0000E0  EC2C  F01C         	call	_atoi	;wreg free
 11756  0000E4  C00D  F0F9         	movff	?_atoi,_width
 11757  0000E8  C00E  F0FA         	movff	?_atoi+1,_width+1
 11758                           
 11759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11760  0000EC  EF7F  F000         	goto	l6805
 11761  0000F0                     l6803:
 11762                           
 11763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
 11764  0000F0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11765  0000F4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11766  0000F8  2ADE               	incf	postinc2,f,c
 11767  0000FA  0E00               	movlw	0
 11768  0000FC  22DD               	addwfc	postdec2,f,c
 11769  0000FE                     l6805:
 11770  0000FE  0ED0               	movlw	208
 11771  000100  6E4F               	movwf	??_vfpfcnvrt^0,c
 11772  000102  0EFF               	movlw	255
 11773  000104  6E50               	movwf	(??_vfpfcnvrt+1)^0,c
 11774  000106  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11775  00010A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11776  00010E  CFDE FFF6          	movff	postinc2,tblptrl
 11777  000112  CFDD FFF7          	movff	postdec2,tblptrh
 11778  000116                     	if	0	;tblptru may be non-zero
 11779  000116                     	endif
 11780  000116                     	if	0	;tblptru may be non-zero
 11781  000116                     	endif
 11782  000116  0008               	tblrd		*
 11783  000118  50F5               	movf	tablat,w,c
 11784  00011A  6E51               	movwf	(??_vfpfcnvrt+2)^0,c
 11785  00011C  6A52               	clrf	(??_vfpfcnvrt+3)^0,c
 11786  00011E  504F               	movf	??_vfpfcnvrt^0,w,c
 11787  000120  2651               	addwf	(??_vfpfcnvrt+2)^0,f,c
 11788  000122  5050               	movf	(??_vfpfcnvrt+1)^0,w,c
 11789  000124  2252               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 11790  000126  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 11791  000128  E10A               	bnz	u8350
 11792  00012A  0E0A               	movlw	10
 11793  00012C  5C51               	subwf	(??_vfpfcnvrt+2)^0,w,c
 11794  00012E  A0D8               	btfss	status,0,c
 11795  000130  EF9C  F000         	goto	u8351
 11796  000134  EF9F  F000         	goto	u8350
 11797  000138                     u8351:
 11798  000138  0E01               	movlw	1
 11799  00013A  EFA0  F000         	goto	u8360
 11800  00013E                     u8350:
 11801  00013E  0E00               	movlw	0
 11802  000140                     u8360:
 11803  000140  6E5F               	movwf	_vfpfcnvrt$1796^0,c
 11804  000142  6A60               	clrf	(_vfpfcnvrt$1796+1)^0,c
 11805  000144  505F               	movf	_vfpfcnvrt$1796^0,w,c
 11806  000146  1060               	iorwf	(_vfpfcnvrt$1796+1)^0,w,c
 11807  000148  A4D8               	btfss	status,2,c
 11808  00014A  EFA9  F000         	goto	u8371
 11809  00014E  EFAB  F000         	goto	u8370
 11810  000152                     u8371:
 11811  000152  EF78  F000         	goto	l6803
 11812  000156                     u8370:
 11813  000156                     l6811:
 11814                           
 11815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 11816  000156  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11817  00015A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11818  00015E  CFDE FFF6          	movff	postinc2,tblptrl
 11819  000162  CFDD FFF7          	movff	postdec2,tblptrh
 11820  000166                     	if	0	;tblptru may be non-zero
 11821  000166                     	endif
 11822  000166                     	if	0	;tblptru may be non-zero
 11823  000166                     	endif
 11824  000166  0008               	tblrd		*
 11825  000168  50F5               	movf	tablat,w,c
 11826  00016A  0A64               	xorlw	100
 11827  00016C  B4D8               	btfsc	status,2,c
 11828  00016E  EFBB  F000         	goto	u8381
 11829  000172  EFBD  F000         	goto	u8380
 11830  000176                     u8381:
 11831  000176  EFCF  F000         	goto	l6815
 11832  00017A                     u8380:
 11833  00017A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11834  00017E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11835  000182  CFDE FFF6          	movff	postinc2,tblptrl
 11836  000186  CFDD FFF7          	movff	postdec2,tblptrh
 11837  00018A                     	if	0	;tblptru may be non-zero
 11838  00018A                     	endif
 11839  00018A                     	if	0	;tblptru may be non-zero
 11840  00018A                     	endif
 11841  00018A  0008               	tblrd		*
 11842  00018C  50F5               	movf	tablat,w,c
 11843  00018E  0A69               	xorlw	105
 11844  000190  A4D8               	btfss	status,2,c
 11845  000192  EFCD  F000         	goto	u8391
 11846  000196  EFCF  F000         	goto	u8390
 11847  00019A                     u8391:
 11848  00019A  EF0F  F001         	goto	l6821
 11849  00019E                     u8390:
 11850  00019E                     l6815:
 11851                           
 11852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 11853  00019E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11854  0001A2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11855  0001A6  2ADE               	incf	postinc2,f,c
 11856  0001A8  0E00               	movlw	0
 11857  0001AA  22DD               	addwfc	postdec2,f,c
 11858                           
 11859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 11860  0001AC  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11861  0001B0  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11862  0001B4  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11863  0001B8  0E02               	movlw	2
 11864  0001BA  26DE               	addwf	postinc2,f,c
 11865  0001BC  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11866  0001C0  0E00               	movlw	0
 11867  0001C2  22DD               	addwfc	postdec2,f,c
 11868  0001C4  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11869  0001C8  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11870  0001CC  CFDE F061          	movff	postinc2,vfpfcnvrt@ll
 11871  0001D0  CFDD F062          	movff	postdec2,vfpfcnvrt@ll+1
 11872  0001D4  0E00               	movlw	0
 11873  0001D6  BE62               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 11874  0001D8  0EFF               	movlw	-1
 11875  0001DA  6E63               	movwf	(vfpfcnvrt@ll+2)^0,c
 11876  0001DC  6E64               	movwf	(vfpfcnvrt@ll+3)^0,c
 11877  0001DE  6E65               	movwf	(vfpfcnvrt@ll+4)^0,c
 11878  0001E0  6E66               	movwf	(vfpfcnvrt@ll+5)^0,c
 11879  0001E2  6E67               	movwf	(vfpfcnvrt@ll+6)^0,c
 11880  0001E4  6E68               	movwf	(vfpfcnvrt@ll+7)^0,c
 11881  0001E6                     
 11882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 11883  0001E6  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 11884  0001EA  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11885  0001EE  C061  F024         	movff	vfpfcnvrt@ll,dtoa@d
 11886  0001F2  C062  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 11887  0001F6  C063  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 11888  0001FA  C064  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 11889  0001FE  C065  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11890  000202  C066  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11891  000206  C067  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11892  00020A  C068  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11893  00020E  EC2D  F00F         	call	_dtoa	;wreg free
 11894  000212  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 11895  000216  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 11896  00021A  EFEB  F003         	goto	l1478
 11897  00021E                     l6821:
 11898                           
 11899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
 11900  00021E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11901  000222  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11902  000226  CFDE F006          	movff	postinc2,strncmp@_l
 11903  00022A  CFDD F007          	movff	postdec2,strncmp@_l+1
 11904  00022E  0EAC               	movlw	low STR_32
 11905  000230  6E08               	movwf	strncmp@_r^0,c
 11906  000232  0E7D               	movlw	high STR_32
 11907  000234  6E09               	movwf	(strncmp@_r+1)^0,c
 11908  000236  0E00               	movlw	0
 11909  000238  6E0B               	movwf	(strncmp@n+1)^0,c
 11910  00023A  0E02               	movlw	2
 11911  00023C  6E0A               	movwf	strncmp@n^0,c
 11912  00023E  ECFD  F024         	call	_strncmp	;wreg free
 11913  000242  5006               	movf	?_strncmp^0,w,c
 11914  000244  1007               	iorwf	(?_strncmp+1)^0,w,c
 11915  000246  B4D8               	btfsc	status,2,c
 11916  000248  EF28  F001         	goto	u8401
 11917  00024C  EF2A  F001         	goto	u8400
 11918  000250                     u8401:
 11919  000250  EF45  F001         	goto	l6825
 11920  000254                     u8400:
 11921  000254  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11922  000258  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11923  00025C  CFDE F006          	movff	postinc2,strncmp@_l
 11924  000260  CFDD F007          	movff	postdec2,strncmp@_l+1
 11925  000264  0EAF               	movlw	low STR_36
 11926  000266  6E08               	movwf	strncmp@_r^0,c
 11927  000268  0E7D               	movlw	high STR_36
 11928  00026A  6E09               	movwf	(strncmp@_r+1)^0,c
 11929  00026C  0E00               	movlw	0
 11930  00026E  6E0B               	movwf	(strncmp@n+1)^0,c
 11931  000270  0E02               	movlw	2
 11932  000272  6E0A               	movwf	strncmp@n^0,c
 11933  000274  ECFD  F024         	call	_strncmp	;wreg free
 11934  000278  5006               	movf	?_strncmp^0,w,c
 11935  00027A  1007               	iorwf	(?_strncmp+1)^0,w,c
 11936  00027C  A4D8               	btfss	status,2,c
 11937  00027E  EF43  F001         	goto	u8411
 11938  000282  EF45  F001         	goto	u8410
 11939  000286                     u8411:
 11940  000286  EFA2  F001         	goto	l6831
 11941  00028A                     u8410:
 11942  00028A                     l6825:
 11943                           
 11944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
 11945  00028A  0E02               	movlw	2
 11946  00028C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11947  000290  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11948  000294  26DE               	addwf	postinc2,f,c
 11949  000296  0E00               	movlw	0
 11950  000298  22DD               	addwfc	postdec2,f,c
 11951                           
 11952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 11953  00029A  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11954  00029E  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11955  0002A2  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 11956  0002A6  0E04               	movlw	4
 11957  0002A8  26DE               	addwf	postinc2,f,c
 11958  0002AA  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 11959  0002AE  0E00               	movlw	0
 11960  0002B0  22DD               	addwfc	postdec2,f,c
 11961  0002B2  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11962  0002B6  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11963  0002BA  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 11964  0002BE  CFDE F052          	movff	postinc2,??_vfpfcnvrt+3
 11965  0002C2  CFDE F053          	movff	postinc2,??_vfpfcnvrt+4
 11966  0002C6  CFDE F054          	movff	postinc2,??_vfpfcnvrt+5
 11967  0002CA  C051  F055         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
 11968  0002CE  C052  F056         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
 11969  0002D2  C053  F057         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
 11970  0002D6  C054  F058         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
 11971  0002DA  6A59               	clrf	(??_vfpfcnvrt+10)^0,c
 11972  0002DC  BE58               	btfsc	(??_vfpfcnvrt+9)^0,7,c
 11973  0002DE  6859               	setf	(??_vfpfcnvrt+10)^0,c
 11974  0002E0  C059  F05A         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
 11975  0002E4  C059  F05B         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
 11976  0002E8  C059  F05C         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
 11977  0002EC  C055  F061         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
 11978  0002F0  C056  F062         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
 11979  0002F4  C057  F063         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
 11980  0002F8  C058  F064         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
 11981  0002FC  C059  F065         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
 11982  000300  C05A  F066         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
 11983  000304  C05B  F067         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
 11984  000308  C05C  F068         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
 11985  00030C                     
 11986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
 11987  00030C  C049  F022         	movff	vfpfcnvrt@fp,dtoa@fp
 11988  000310  C04A  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11989  000314  C061  F024         	movff	vfpfcnvrt@ll,dtoa@d
 11990  000318  C062  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 11991  00031C  C063  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 11992  000320  C064  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 11993  000324  C065  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11994  000328  C066  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11995  00032C  C067  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11996  000330  C068  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11997  000334  EC2D  F00F         	call	_dtoa	;wreg free
 11998  000338  C022  F049         	movff	?_dtoa,?_vfpfcnvrt
 11999  00033C  C023  F04A         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12000  000340  EFEB  F003         	goto	l1478
 12001  000344                     l6831:
 12002                           
 12003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
 12004  000344  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12005  000348  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12006  00034C  CFDE FFF6          	movff	postinc2,tblptrl
 12007  000350  CFDD FFF7          	movff	postdec2,tblptrh
 12008  000354                     	if	0	;tblptru may be non-zero
 12009  000354                     	endif
 12010  000354                     	if	0	;tblptru may be non-zero
 12011  000354                     	endif
 12012  000354  0008               	tblrd		*
 12013  000356  50F5               	movf	tablat,w,c
 12014  000358  0A73               	xorlw	115
 12015  00035A  A4D8               	btfss	status,2,c
 12016  00035C  EFB2  F001         	goto	u8421
 12017  000360  EFB4  F001         	goto	u8420
 12018  000364                     u8421:
 12019  000364  EFDF  F001         	goto	l6839
 12020  000368                     u8420:
 12021  000368                     
 12022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
 12023  000368  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12024  00036C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12025  000370  2ADE               	incf	postinc2,f,c
 12026  000372  0E00               	movlw	0
 12027  000374  22DD               	addwfc	postdec2,f,c
 12028                           
 12029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 12030  000376  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12031  00037A  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12032  00037E  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12033  000382  0E02               	movlw	2
 12034  000384  26DE               	addwf	postinc2,f,c
 12035  000386  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12036  00038A  0E00               	movlw	0
 12037  00038C  22DD               	addwfc	postdec2,f,c
 12038  00038E  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12039  000392  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12040  000396  CFDE F05D          	movff	postinc2,vfpfcnvrt@cp
 12041  00039A  CFDD F05E          	movff	postdec2,vfpfcnvrt@cp+1
 12042  00039E                     
 12043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
 12044  00039E  C049  F010         	movff	vfpfcnvrt@fp,stoa@fp
 12045  0003A2  C04A  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 12046  0003A6  C05D  F012         	movff	vfpfcnvrt@cp,stoa@s
 12047  0003AA  C05E  F013         	movff	vfpfcnvrt@cp+1,stoa@s+1
 12048  0003AE  EC98  F01A         	call	_stoa	;wreg free
 12049  0003B2  C010  F049         	movff	?_stoa,?_vfpfcnvrt
 12050  0003B6  C011  F04A         	movff	?_stoa+1,?_vfpfcnvrt+1
 12051  0003BA  EFEB  F003         	goto	l1478
 12052  0003BE                     l6839:
 12053                           
 12054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
 12055  0003BE  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12056  0003C2  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12057  0003C6  CFDE FFF6          	movff	postinc2,tblptrl
 12058  0003CA  CFDD FFF7          	movff	postdec2,tblptrh
 12059  0003CE                     	if	0	;tblptru may be non-zero
 12060  0003CE                     	endif
 12061  0003CE                     	if	0	;tblptru may be non-zero
 12062  0003CE                     	endif
 12063  0003CE  0008               	tblrd		*
 12064  0003D0  50F5               	movf	tablat,w,c
 12065  0003D2  0A75               	xorlw	117
 12066  0003D4  A4D8               	btfss	status,2,c
 12067  0003D6  EFEF  F001         	goto	u8431
 12068  0003DA  EFF1  F001         	goto	u8430
 12069  0003DE                     u8431:
 12070  0003DE  EF32  F002         	goto	l6847
 12071  0003E2                     u8430:
 12072  0003E2                     
 12073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
 12074  0003E2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12075  0003E6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12076  0003EA  2ADE               	incf	postinc2,f,c
 12077  0003EC  0E00               	movlw	0
 12078  0003EE  22DD               	addwfc	postdec2,f,c
 12079                           
 12080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 12081  0003F0  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12082  0003F4  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12083  0003F8  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12084  0003FC  0E02               	movlw	2
 12085  0003FE  26DE               	addwf	postinc2,f,c
 12086  000400  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12087  000404  0E00               	movlw	0
 12088  000406  22DD               	addwfc	postdec2,f,c
 12089  000408  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12090  00040C  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12091  000410  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12092  000414  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 12093  000418  C051  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 12094  00041C  C052  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 12095  000420  6A6C               	clrf	(vfpfcnvrt@llu+2)^0,c
 12096  000422  6A6D               	clrf	(vfpfcnvrt@llu+3)^0,c
 12097  000424  6A6E               	clrf	(vfpfcnvrt@llu+4)^0,c
 12098  000426  6A6F               	clrf	(vfpfcnvrt@llu+5)^0,c
 12099  000428  6A70               	clrf	(vfpfcnvrt@llu+6)^0,c
 12100  00042A  6A71               	clrf	(vfpfcnvrt@llu+7)^0,c
 12101  00042C                     
 12102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
 12103  00042C  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 12104  000430  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 12105  000434  C06A  F024         	movff	vfpfcnvrt@llu,utoa@d
 12106  000438  C06B  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 12107  00043C  C06C  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 12108  000440  C06D  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 12109  000444  C06E  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 12110  000448  C06F  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 12111  00044C  C070  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 12112  000450  C071  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 12113  000454  ECEB  F017         	call	_utoa	;wreg free
 12114  000458  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 12115  00045C  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 12116  000460  EFEB  F003         	goto	l1478
 12117  000464                     l6847:
 12118                           
 12119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12120  000464  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12121  000468  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12122  00046C  CFDE F006          	movff	postinc2,strncmp@_l
 12123  000470  CFDD F007          	movff	postdec2,strncmp@_l+1
 12124  000474  0EB2               	movlw	low STR_41
 12125  000476  6E08               	movwf	strncmp@_r^0,c
 12126  000478  0E7D               	movlw	high STR_41
 12127  00047A  6E09               	movwf	(strncmp@_r+1)^0,c
 12128  00047C  0E00               	movlw	0
 12129  00047E  6E0B               	movwf	(strncmp@n+1)^0,c
 12130  000480  0E02               	movlw	2
 12131  000482  6E0A               	movwf	strncmp@n^0,c
 12132  000484  ECFD  F024         	call	_strncmp	;wreg free
 12133  000488  5006               	movf	?_strncmp^0,w,c
 12134  00048A  1007               	iorwf	(?_strncmp+1)^0,w,c
 12135  00048C  A4D8               	btfss	status,2,c
 12136  00048E  EF4B  F002         	goto	u8441
 12137  000492  EF4D  F002         	goto	u8440
 12138  000496                     u8441:
 12139  000496  EF95  F002         	goto	l6855
 12140  00049A                     u8440:
 12141  00049A                     
 12142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 12143  00049A  0E02               	movlw	2
 12144  00049C  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12145  0004A0  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12146  0004A4  26DE               	addwf	postinc2,f,c
 12147  0004A6  0E00               	movlw	0
 12148  0004A8  22DD               	addwfc	postdec2,f,c
 12149                           
 12150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
 12151  0004AA  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12152  0004AE  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12153  0004B2  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12154  0004B6  0E04               	movlw	4
 12155  0004B8  26DE               	addwf	postinc2,f,c
 12156  0004BA  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12157  0004BE  0E00               	movlw	0
 12158  0004C0  22DD               	addwfc	postdec2,f,c
 12159  0004C2  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12160  0004C6  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12161  0004CA  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12162  0004CE  CFDE F052          	movff	postinc2,??_vfpfcnvrt+3
 12163  0004D2  CFDE F053          	movff	postinc2,??_vfpfcnvrt+4
 12164  0004D6  CFDE F054          	movff	postinc2,??_vfpfcnvrt+5
 12165  0004DA  5051               	movf	(??_vfpfcnvrt+2)^0,w,c
 12166  0004DC  6E6A               	movwf	vfpfcnvrt@llu^0,c
 12167  0004DE  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 12168  0004E0  6E6B               	movwf	(vfpfcnvrt@llu+1)^0,c
 12169  0004E2  5053               	movf	(??_vfpfcnvrt+4)^0,w,c
 12170  0004E4  6E6C               	movwf	(vfpfcnvrt@llu+2)^0,c
 12171  0004E6  5054               	movf	(??_vfpfcnvrt+5)^0,w,c
 12172  0004E8  6E6D               	movwf	(vfpfcnvrt@llu+3)^0,c
 12173  0004EA  6A6E               	clrf	(vfpfcnvrt@llu+4)^0,c
 12174  0004EC  6A6F               	clrf	(vfpfcnvrt@llu+5)^0,c
 12175  0004EE  6A70               	clrf	(vfpfcnvrt@llu+6)^0,c
 12176  0004F0  6A71               	clrf	(vfpfcnvrt@llu+7)^0,c
 12177  0004F2                     
 12178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1219:            
      +                           return utoa(fp, llu);
 12179  0004F2  C049  F022         	movff	vfpfcnvrt@fp,utoa@fp
 12180  0004F6  C04A  F023         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 12181  0004FA  C06A  F024         	movff	vfpfcnvrt@llu,utoa@d
 12182  0004FE  C06B  F025         	movff	vfpfcnvrt@llu+1,utoa@d+1
 12183  000502  C06C  F026         	movff	vfpfcnvrt@llu+2,utoa@d+2
 12184  000506  C06D  F027         	movff	vfpfcnvrt@llu+3,utoa@d+3
 12185  00050A  C06E  F028         	movff	vfpfcnvrt@llu+4,utoa@d+4
 12186  00050E  C06F  F029         	movff	vfpfcnvrt@llu+5,utoa@d+5
 12187  000512  C070  F02A         	movff	vfpfcnvrt@llu+6,utoa@d+6
 12188  000516  C071  F02B         	movff	vfpfcnvrt@llu+7,utoa@d+7
 12189  00051A  ECEB  F017         	call	_utoa	;wreg free
 12190  00051E  C022  F049         	movff	?_utoa,?_vfpfcnvrt
 12191  000522  C023  F04A         	movff	?_utoa+1,?_vfpfcnvrt+1
 12192  000526  EFEB  F003         	goto	l1478
 12193  00052A                     l6855:
 12194                           
 12195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 12196  00052A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12197  00052E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12198  000532  CFDE FFF6          	movff	postinc2,tblptrl
 12199  000536  CFDD FFF7          	movff	postdec2,tblptrh
 12200  00053A                     	if	0	;tblptru may be non-zero
 12201  00053A                     	endif
 12202  00053A                     	if	0	;tblptru may be non-zero
 12203  00053A                     	endif
 12204  00053A  0008               	tblrd		*
 12205  00053C  50F5               	movf	tablat,w,c
 12206  00053E  0A78               	xorlw	120
 12207  000540  B4D8               	btfsc	status,2,c
 12208  000542  EFA5  F002         	goto	u8451
 12209  000546  EFA7  F002         	goto	u8450
 12210  00054A                     u8451:
 12211  00054A  EFB9  F002         	goto	l6859
 12212  00054E                     u8450:
 12213  00054E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12214  000552  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12215  000556  CFDE FFF6          	movff	postinc2,tblptrl
 12216  00055A  CFDD FFF7          	movff	postdec2,tblptrh
 12217  00055E                     	if	0	;tblptru may be non-zero
 12218  00055E                     	endif
 12219  00055E                     	if	0	;tblptru may be non-zero
 12220  00055E                     	endif
 12221  00055E  0008               	tblrd		*
 12222  000560  50F5               	movf	tablat,w,c
 12223  000562  0A58               	xorlw	88
 12224  000564  A4D8               	btfss	status,2,c
 12225  000566  EFB7  F002         	goto	u8461
 12226  00056A  EFB9  F002         	goto	u8460
 12227  00056E                     u8461:
 12228  00056E  EF07  F003         	goto	l6869
 12229  000572                     u8460:
 12230  000572                     l6859:
 12231                           
 12232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
 12233  000572  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12234  000576  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12235  00057A  CFDE FFF6          	movff	postinc2,tblptrl
 12236  00057E  CFDD FFF7          	movff	postdec2,tblptrh
 12237  000582                     	if	0	;tblptru may be non-zero
 12238  000582                     	endif
 12239  000582                     	if	0	;tblptru may be non-zero
 12240  000582                     	endif
 12241  000582  0008               	tblrd		*
 12242  000584  CFF5 F069          	movff	tablat,vfpfcnvrt@c
 12243  000588                     
 12244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
 12245  000588  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12246  00058C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12247  000590  2ADE               	incf	postinc2,f,c
 12248  000592  0E00               	movlw	0
 12249  000594  22DD               	addwfc	postdec2,f,c
 12250  000596                     
 12251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 12252  000596  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12253  00059A  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12254  00059E  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12255  0005A2  0E02               	movlw	2
 12256  0005A4  26DE               	addwf	postinc2,f,c
 12257  0005A6  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12258  0005AA  0E00               	movlw	0
 12259  0005AC  22DD               	addwfc	postdec2,f,c
 12260  0005AE  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12261  0005B2  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12262  0005B6  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12263  0005BA  CFDD F052          	movff	postdec2,??_vfpfcnvrt+3
 12264  0005BE  C051  F06A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 12265  0005C2  C052  F06B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 12266  0005C6  6A6C               	clrf	(vfpfcnvrt@llu+2)^0,c
 12267  0005C8  6A6D               	clrf	(vfpfcnvrt@llu+3)^0,c
 12268  0005CA  6A6E               	clrf	(vfpfcnvrt@llu+4)^0,c
 12269  0005CC  6A6F               	clrf	(vfpfcnvrt@llu+5)^0,c
 12270  0005CE  6A70               	clrf	(vfpfcnvrt@llu+6)^0,c
 12271  0005D0  6A71               	clrf	(vfpfcnvrt@llu+7)^0,c
 12272  0005D2                     
 12273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
 12274  0005D2  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 12275  0005D6  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 12276  0005DA  C06A  F024         	movff	vfpfcnvrt@llu,xtoa@d
 12277  0005DE  C06B  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 12278  0005E2  C06C  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 12279  0005E6  C06D  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 12280  0005EA  C06E  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 12281  0005EE  C06F  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 12282  0005F2  C070  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 12283  0005F6  C071  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 12284  0005FA  C069  F02C         	movff	vfpfcnvrt@c,xtoa@x
 12285  0005FE  EC9C  F010         	call	_xtoa	;wreg free
 12286  000602  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 12287  000606  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 12288  00060A  EFEB  F003         	goto	l1478
 12289  00060E                     l6869:
 12290                           
 12291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1307:         if 
      +                          (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((size
      +                          of("lX")/sizeof("lX"[0]))-1))) {
 12292  00060E  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12293  000612  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12294  000616  CFDE F006          	movff	postinc2,strncmp@_l
 12295  00061A  CFDD F007          	movff	postdec2,strncmp@_l+1
 12296  00061E  0EB5               	movlw	low STR_46
 12297  000620  6E08               	movwf	strncmp@_r^0,c
 12298  000622  0E7D               	movlw	high STR_46
 12299  000624  6E09               	movwf	(strncmp@_r+1)^0,c
 12300  000626  0E00               	movlw	0
 12301  000628  6E0B               	movwf	(strncmp@n+1)^0,c
 12302  00062A  0E02               	movlw	2
 12303  00062C  6E0A               	movwf	strncmp@n^0,c
 12304  00062E  ECFD  F024         	call	_strncmp	;wreg free
 12305  000632  5006               	movf	?_strncmp^0,w,c
 12306  000634  1007               	iorwf	(?_strncmp+1)^0,w,c
 12307  000636  B4D8               	btfsc	status,2,c
 12308  000638  EF20  F003         	goto	u8471
 12309  00063C  EF22  F003         	goto	u8470
 12310  000640                     u8471:
 12311  000640  EF3D  F003         	goto	l6873
 12312  000644                     u8470:
 12313  000644  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12314  000648  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12315  00064C  CFDE F006          	movff	postinc2,strncmp@_l
 12316  000650  CFDD F007          	movff	postdec2,strncmp@_l+1
 12317  000654  0EA9               	movlw	low STR_50
 12318  000656  6E08               	movwf	strncmp@_r^0,c
 12319  000658  0E7D               	movlw	high STR_50
 12320  00065A  6E09               	movwf	(strncmp@_r+1)^0,c
 12321  00065C  0E00               	movlw	0
 12322  00065E  6E0B               	movwf	(strncmp@n+1)^0,c
 12323  000660  0E02               	movlw	2
 12324  000662  6E0A               	movwf	strncmp@n^0,c
 12325  000664  ECFD  F024         	call	_strncmp	;wreg free
 12326  000668  5006               	movf	?_strncmp^0,w,c
 12327  00066A  1007               	iorwf	(?_strncmp+1)^0,w,c
 12328  00066C  A4D8               	btfss	status,2,c
 12329  00066E  EF3B  F003         	goto	u8481
 12330  000672  EF3D  F003         	goto	u8480
 12331  000676                     u8481:
 12332  000676  EF9A  F003         	goto	l6883
 12333  00067A                     u8480:
 12334  00067A                     l6873:
 12335                           
 12336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1308: ;C:\Program
      +                           Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1310:             c = (*fmt)
      +                          [1];
 12337  00067A  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12338  00067E  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12339  000682  CFDE F04F          	movff	postinc2,??_vfpfcnvrt
 12340  000686  CFDD F050          	movff	postdec2,??_vfpfcnvrt+1
 12341  00068A  0E01               	movlw	1
 12342  00068C  264F               	addwf	??_vfpfcnvrt^0,f,c
 12343  00068E  0E00               	movlw	0
 12344  000690  2250               	addwfc	(??_vfpfcnvrt+1)^0,f,c
 12345  000692  C04F  FFF6         	movff	??_vfpfcnvrt,tblptrl
 12346  000696  C050  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
 12347  00069A                     	if	0	;tblptru may be non-zero
 12348  00069A                     	endif
 12349  00069A                     	if	0	;tblptru may be non-zero
 12350  00069A                     	endif
 12351  00069A  0008               	tblrd		*
 12352  00069C  CFF5 F069          	movff	tablat,vfpfcnvrt@c
 12353  0006A0                     
 12354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1311:            
      +                           *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 12355  0006A0  0E02               	movlw	2
 12356  0006A2  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12357  0006A6  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12358  0006AA  26DE               	addwf	postinc2,f,c
 12359  0006AC  0E00               	movlw	0
 12360  0006AE  22DD               	addwfc	postdec2,f,c
 12361  0006B0                     
 12362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1312:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
 12363  0006B0  C04D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12364  0006B4  C04E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12365  0006B8  CFDF F04F          	movff	indf2,??_vfpfcnvrt
 12366  0006BC  0E04               	movlw	4
 12367  0006BE  26DE               	addwf	postinc2,f,c
 12368  0006C0  CFDF F050          	movff	indf2,??_vfpfcnvrt+1
 12369  0006C4  0E00               	movlw	0
 12370  0006C6  22DD               	addwfc	postdec2,f,c
 12371  0006C8  C04F  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12372  0006CC  C050  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12373  0006D0  CFDE F051          	movff	postinc2,??_vfpfcnvrt+2
 12374  0006D4  CFDE F052          	movff	postinc2,??_vfpfcnvrt+3
 12375  0006D8  CFDE F053          	movff	postinc2,??_vfpfcnvrt+4
 12376  0006DC  CFDE F054          	movff	postinc2,??_vfpfcnvrt+5
 12377  0006E0  5051               	movf	(??_vfpfcnvrt+2)^0,w,c
 12378  0006E2  6E6A               	movwf	vfpfcnvrt@llu^0,c
 12379  0006E4  5052               	movf	(??_vfpfcnvrt+3)^0,w,c
 12380  0006E6  6E6B               	movwf	(vfpfcnvrt@llu+1)^0,c
 12381  0006E8  5053               	movf	(??_vfpfcnvrt+4)^0,w,c
 12382  0006EA  6E6C               	movwf	(vfpfcnvrt@llu+2)^0,c
 12383  0006EC  5054               	movf	(??_vfpfcnvrt+5)^0,w,c
 12384  0006EE  6E6D               	movwf	(vfpfcnvrt@llu+3)^0,c
 12385  0006F0  6A6E               	clrf	(vfpfcnvrt@llu+4)^0,c
 12386  0006F2  6A6F               	clrf	(vfpfcnvrt@llu+5)^0,c
 12387  0006F4  6A70               	clrf	(vfpfcnvrt@llu+6)^0,c
 12388  0006F6  6A71               	clrf	(vfpfcnvrt@llu+7)^0,c
 12389  0006F8                     
 12390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1314:            
      +                           return xtoa(fp, llu, c);
 12391  0006F8  C049  F022         	movff	vfpfcnvrt@fp,xtoa@fp
 12392  0006FC  C04A  F023         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 12393  000700  C06A  F024         	movff	vfpfcnvrt@llu,xtoa@d
 12394  000704  C06B  F025         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 12395  000708  C06C  F026         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 12396  00070C  C06D  F027         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 12397  000710  C06E  F028         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 12398  000714  C06F  F029         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 12399  000718  C070  F02A         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 12400  00071C  C071  F02B         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 12401  000720  C069  F02C         	movff	vfpfcnvrt@c,xtoa@x
 12402  000724  EC9C  F010         	call	_xtoa	;wreg free
 12403  000728  C022  F049         	movff	?_xtoa,?_vfpfcnvrt
 12404  00072C  C023  F04A         	movff	?_xtoa+1,?_vfpfcnvrt+1
 12405  000730  EFEB  F003         	goto	l1478
 12406  000734                     l6883:
 12407                           
 12408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 12409  000734  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12410  000738  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12411  00073C  CFDE FFF6          	movff	postinc2,tblptrl
 12412  000740  CFDD FFF7          	movff	postdec2,tblptrh
 12413  000744                     	if	0	;tblptru may be non-zero
 12414  000744                     	endif
 12415  000744                     	if	0	;tblptru may be non-zero
 12416  000744                     	endif
 12417  000744  0008               	tblrd		*
 12418  000746  50F5               	movf	tablat,w,c
 12419  000748  0A25               	xorlw	37
 12420  00074A  A4D8               	btfss	status,2,c
 12421  00074C  EFAA  F003         	goto	u8491
 12422  000750  EFAC  F003         	goto	u8490
 12423  000754                     u8491:
 12424  000754  EFC3  F003         	goto	l6893
 12425  000758                     u8490:
 12426  000758                     
 12427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 12428  000758  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12429  00075C  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12430  000760  2ADE               	incf	postinc2,f,c
 12431  000762  0E00               	movlw	0
 12432  000764  22DD               	addwfc	postdec2,f,c
 12433  000766                     
 12434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 12435  000766  0E00               	movlw	0
 12436  000768  6E08               	movwf	(fputc@c+1)^0,c
 12437  00076A  0E25               	movlw	37
 12438  00076C  6E07               	movwf	fputc@c^0,c
 12439  00076E  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 12440  000772  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12441  000776  ECF4  F027         	call	_fputc	;wreg free
 12442  00077A                     l6889:
 12443                           
 12444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12445  00077A  0E00               	movlw	0
 12446  00077C  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 12447  00077E  0E01               	movlw	1
 12448  000780  6E49               	movwf	?_vfpfcnvrt^0,c
 12449  000782  EFEB  F003         	goto	l1478
 12450  000786                     l6893:
 12451                           
 12452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12453  000786  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12454  00078A  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12455  00078E  2ADE               	incf	postinc2,f,c
 12456  000790  0E00               	movlw	0
 12457  000792  22DD               	addwfc	postdec2,f,c
 12458  000794                     
 12459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12460  000794  0E00               	movlw	0
 12461  000796  6E4A               	movwf	(?_vfpfcnvrt+1)^0,c
 12462  000798  0E00               	movlw	0
 12463  00079A  6E49               	movwf	?_vfpfcnvrt^0,c
 12464  00079C  EFEB  F003         	goto	l1478
 12465  0007A0                     l6899:
 12466                           
 12467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12468  0007A0  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12469  0007A4  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12470  0007A8  CFDE FFF6          	movff	postinc2,tblptrl
 12471  0007AC  CFDD FFF7          	movff	postdec2,tblptrh
 12472  0007B0                     	if	0	;tblptru may be non-zero
 12473  0007B0                     	endif
 12474  0007B0                     	if	0	;tblptru may be non-zero
 12475  0007B0                     	endif
 12476  0007B0  0008               	tblrd		*
 12477  0007B2  50F5               	movf	tablat,w,c
 12478  0007B4  6E07               	movwf	fputc@c^0,c
 12479  0007B6  6A08               	clrf	(fputc@c+1)^0,c
 12480  0007B8  C049  F009         	movff	vfpfcnvrt@fp,fputc@fp
 12481  0007BC  C04A  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12482  0007C0  ECF4  F027         	call	_fputc	;wreg free
 12483  0007C4                     
 12484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12485  0007C4  C04B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12486  0007C8  C04C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12487  0007CC  2ADE               	incf	postinc2,f,c
 12488  0007CE  0E00               	movlw	0
 12489  0007D0  22DD               	addwfc	postdec2,f,c
 12490  0007D2  EFBD  F003         	goto	l6889
 12491  0007D6                     l1478:
 12492  0007D6  0012               	return		;funcret
 12493  0007D8                     __end_of_vfpfcnvrt:
 12494                           	callstack 0
 12495                           
 12496 ;; *************** function _xtoa *****************
 12497 ;; Defined at:
 12498 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 12501 ;;		 -> NULL(0), 
 12502 ;;  d               8   35[COMRAM] unsigned long long 
 12503 ;;  x               1   43[COMRAM] unsigned char 
 12504 ;; Auto vars:     Size  Location     Type
 12505 ;;  n               8   60[COMRAM] unsigned long long 
 12506 ;;  c               2   70[COMRAM] int 
 12507 ;;  i               2   68[COMRAM] int 
 12508 ;;  w               2   58[COMRAM] int 
 12509 ;;  p               2   56[COMRAM] int 
 12510 ;; Return value:  Size  Location     Type
 12511 ;;                  2   33[COMRAM] int 
 12512 ;; Registers used:
 12513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12514 ;; Tracked objects:
 12515 ;;		On entry : 0/0
 12516 ;;		On exit  : 0/0
 12517 ;;		Unchanged: 0/0
 12518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12519 ;;      Params:        11       0       0       0       0       0       0
 12520 ;;      Locals:        20       0       0       0       0       0       0
 12521 ;;      Temps:          8       0       0       0       0       0       0
 12522 ;;      Totals:        39       0       0       0       0       0       0
 12523 ;;Total ram usage:       39 bytes
 12524 ;; Hardware stack levels used: 1
 12525 ;; Hardware stack levels required when called: 5
 12526 ;; This function calls:
 12527 ;;		_isalpha
 12528 ;;		_isupper
 12529 ;;		_pad
 12530 ;;		_toupper
 12531 ;; This function is called by:
 12532 ;;		_vfpfcnvrt
 12533 ;; This function uses a non-reentrant model
 12534 ;;
 12535                           
 12536                           	psect	text41
 12537  002138                     __ptext41:
 12538                           	callstack 0
 12539  002138                     _xtoa:
 12540                           	callstack 21
 12541  002138                     
 12542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
 12543  002138  BE77               	btfsc	(_prec+1)^0,7,c
 12544  00213A  EFA1  F010         	goto	u8031
 12545  00213E  EFA3  F010         	goto	u8030
 12546  002142                     u8031:
 12547  002142  EFA4  F010         	goto	l6661
 12548  002146                     u8030:
 12549  002146                     
 12550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
 12551  002146  9278               	bcf	_flags^0,1,c
 12552  002148                     l6661:
 12553                           
 12554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
 12555  002148  BE77               	btfsc	(_prec+1)^0,7,c
 12556  00214A  EFB1  F010         	goto	u8040
 12557  00214E  5077               	movf	(_prec+1)^0,w,c
 12558  002150  E106               	bnz	u8041
 12559  002152  0476               	decf	_prec^0,w,c
 12560  002154  B0D8               	btfsc	status,0,c
 12561  002156  EFAF  F010         	goto	u8041
 12562  00215A  EFB1  F010         	goto	u8040
 12563  00215E                     u8041:
 12564  00215E  EFB7  F010         	goto	l1436
 12565  002162                     u8040:
 12566  002162  0E00               	movlw	0
 12567  002164  6E3A               	movwf	(xtoa@p+1)^0,c
 12568  002166  0E01               	movlw	1
 12569  002168  6E39               	movwf	xtoa@p^0,c
 12570  00216A  EFBB  F010         	goto	l1438
 12571  00216E                     l1436:
 12572  00216E  C076  F039         	movff	_prec,xtoa@p
 12573  002172  C077  F03A         	movff	_prec+1,xtoa@p+1
 12574  002176                     l1438:
 12575                           
 12576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
 12577  002176  C0F9  F03B         	movff	_width,xtoa@w
 12578  00217A  C0FA  F03C         	movff	_width+1,xtoa@w+1
 12579                           
 12580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
 12581  00217E  A878               	btfss	_flags^0,4,c
 12582  002180  EFC4  F010         	goto	u8051
 12583  002184  EFC6  F010         	goto	u8050
 12584  002188                     u8051:
 12585  002188  EFCA  F010         	goto	l6667
 12586  00218C                     u8050:
 12587  00218C                     
 12588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
 12589  00218C  0EFE               	movlw	254
 12590  00218E  263B               	addwf	xtoa@w^0,f,c
 12591  002190  0EFF               	movlw	255
 12592  002192  223C               	addwfc	(xtoa@w+1)^0,f,c
 12593  002194                     l6667:
 12594                           
 12595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
 12596  002194  C024  F03D         	movff	xtoa@d,xtoa@n
 12597  002198  C025  F03E         	movff	xtoa@d+1,xtoa@n+1
 12598  00219C  C026  F03F         	movff	xtoa@d+2,xtoa@n+2
 12599  0021A0  C027  F040         	movff	xtoa@d+3,xtoa@n+3
 12600  0021A4  C028  F041         	movff	xtoa@d+4,xtoa@n+4
 12601  0021A8  C029  F042         	movff	xtoa@d+5,xtoa@n+5
 12602  0021AC  C02A  F043         	movff	xtoa@d+6,xtoa@n+6
 12603  0021B0  C02B  F044         	movff	xtoa@d+7,xtoa@n+7
 12604  0021B4                     
 12605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
 12606  0021B4  0E00               	movlw	0
 12607  0021B6  6E46               	movwf	(xtoa@i+1)^0,c
 12608  0021B8  0E1F               	movlw	31
 12609  0021BA  6E45               	movwf	xtoa@i^0,c
 12610  0021BC                     
 12611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
 12612  0021BC  0E00               	movlw	0
 12613  0021BE  0101               	movlb	1	; () banked
 12614  0021C0  6FE0               	movwf	(_dbuf+31)& (0+255),b
 12615                           
 12616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12617  0021C2  EF96  F011         	goto	l6703
 12618  0021C6                     l6673:
 12619                           
 12620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
 12621  0021C6  0645               	decf	xtoa@i^0,f,c
 12622  0021C8  A0D8               	btfss	status,0,c
 12623  0021CA  0646               	decf	(xtoa@i+1)^0,f,c
 12624  0021CC                     
 12625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
 12626  0021CC  0E0F               	movlw	15
 12627  0021CE  143D               	andwf	xtoa@n^0,w,c
 12628  0021D0  6E47               	movwf	xtoa@c^0,c
 12629  0021D2  6A48               	clrf	(xtoa@c+1)^0,c
 12630  0021D4                     
 12631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
 12632  0021D4  BE48               	btfsc	(xtoa@c+1)^0,7,c
 12633  0021D6  EFF6  F010         	goto	u8061
 12634  0021DA  5048               	movf	(xtoa@c+1)^0,w,c
 12635  0021DC  E109               	bnz	u8060
 12636  0021DE  0E0A               	movlw	10
 12637  0021E0  5C47               	subwf	xtoa@c^0,w,c
 12638  0021E2  A0D8               	btfss	status,0,c
 12639  0021E4  EFF6  F010         	goto	u8061
 12640  0021E8  EFF8  F010         	goto	u8060
 12641  0021EC                     u8061:
 12642  0021EC  EF00  F011         	goto	l6681
 12643  0021F0                     u8060:
 12644  0021F0  0E57               	movlw	87
 12645  0021F2  2447               	addwf	xtoa@c^0,w,c
 12646  0021F4  6E47               	movwf	xtoa@c^0,c
 12647  0021F6  0E00               	movlw	0
 12648  0021F8  2048               	addwfc	(xtoa@c+1)^0,w,c
 12649  0021FA  6E48               	movwf	(xtoa@c+1)^0,c
 12650  0021FC  EF06  F011         	goto	l1445
 12651  002200                     l6681:
 12652  002200  0E30               	movlw	48
 12653  002202  2447               	addwf	xtoa@c^0,w,c
 12654  002204  6E47               	movwf	xtoa@c^0,c
 12655  002206  0E00               	movlw	0
 12656  002208  2048               	addwfc	(xtoa@c+1)^0,w,c
 12657  00220A  6E48               	movwf	(xtoa@c+1)^0,c
 12658  00220C                     l1445:
 12659  00220C  0EBF               	movlw	191
 12660  00220E  6E2D               	movwf	??_xtoa^0,c
 12661  002210  0EFF               	movlw	255
 12662  002212  6E2E               	movwf	(??_xtoa+1)^0,c
 12663  002214  502C               	movf	xtoa@x^0,w,c
 12664  002216  6E2F               	movwf	(??_xtoa+2)^0,c
 12665  002218  6A30               	clrf	(??_xtoa+3)^0,c
 12666  00221A  502D               	movf	??_xtoa^0,w,c
 12667  00221C  262F               	addwf	(??_xtoa+2)^0,f,c
 12668  00221E  502E               	movf	(??_xtoa+1)^0,w,c
 12669  002220  2230               	addwfc	(??_xtoa+3)^0,f,c
 12670  002222  5030               	movf	(??_xtoa+3)^0,w,c
 12671  002224  E10A               	bnz	u8070
 12672  002226  0E1A               	movlw	26
 12673  002228  5C2F               	subwf	(??_xtoa+2)^0,w,c
 12674  00222A  A0D8               	btfss	status,0,c
 12675  00222C  EF1A  F011         	goto	u8071
 12676  002230  EF1D  F011         	goto	u8070
 12677  002234                     u8071:
 12678  002234  0E01               	movlw	1
 12679  002236  EF1E  F011         	goto	u8080
 12680  00223A                     u8070:
 12681  00223A  0E00               	movlw	0
 12682  00223C                     u8080:
 12683  00223C  6E35               	movwf	_xtoa$1781^0,c
 12684  00223E  6A36               	clrf	(_xtoa$1781+1)^0,c
 12685  002240  5035               	movf	_xtoa$1781^0,w,c
 12686  002242  1036               	iorwf	(_xtoa$1781+1)^0,w,c
 12687  002244  B4D8               	btfsc	status,2,c
 12688  002246  EF27  F011         	goto	u8091
 12689  00224A  EF29  F011         	goto	u8090
 12690  00224E                     u8091:
 12691  00224E  EF59  F011         	goto	l6695
 12692  002252                     u8090:
 12693  002252  0E9F               	movlw	159
 12694  002254  6E2D               	movwf	??_xtoa^0,c
 12695  002256  0EFF               	movlw	255
 12696  002258  6E2E               	movwf	(??_xtoa+1)^0,c
 12697  00225A  0E20               	movlw	32
 12698  00225C  1047               	iorwf	xtoa@c^0,w,c
 12699  00225E  6E2F               	movwf	(??_xtoa+2)^0,c
 12700  002260  0E00               	movlw	0
 12701  002262  1048               	iorwf	(xtoa@c+1)^0,w,c
 12702  002264  6E30               	movwf	(??_xtoa+3)^0,c
 12703  002266  502D               	movf	??_xtoa^0,w,c
 12704  002268  262F               	addwf	(??_xtoa+2)^0,f,c
 12705  00226A  502E               	movf	(??_xtoa+1)^0,w,c
 12706  00226C  2230               	addwfc	(??_xtoa+3)^0,f,c
 12707  00226E  5030               	movf	(??_xtoa+3)^0,w,c
 12708  002270  E10A               	bnz	u8100
 12709  002272  0E1A               	movlw	26
 12710  002274  5C2F               	subwf	(??_xtoa+2)^0,w,c
 12711  002276  A0D8               	btfss	status,0,c
 12712  002278  EF40  F011         	goto	u8101
 12713  00227C  EF43  F011         	goto	u8100
 12714  002280                     u8101:
 12715  002280  0E01               	movlw	1
 12716  002282  EF44  F011         	goto	u8110
 12717  002286                     u8100:
 12718  002286  0E00               	movlw	0
 12719  002288                     u8110:
 12720  002288  6E37               	movwf	_xtoa$1782^0,c
 12721  00228A  6A38               	clrf	(_xtoa$1782+1)^0,c
 12722  00228C  5037               	movf	_xtoa$1782^0,w,c
 12723  00228E  1038               	iorwf	(_xtoa$1782+1)^0,w,c
 12724  002290  B4D8               	btfsc	status,2,c
 12725  002292  EF4D  F011         	goto	u8121
 12726  002296  EF4F  F011         	goto	u8120
 12727  00229A                     u8121:
 12728  00229A  EF59  F011         	goto	l6695
 12729  00229E                     u8120:
 12730  00229E                     
 12731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
 12732  00229E  C047  F00C         	movff	xtoa@c,toupper@c
 12733  0022A2  C048  F00D         	movff	xtoa@c+1,toupper@c+1
 12734  0022A6  ECCD  F029         	call	_toupper	;wreg free
 12735  0022AA  C00C  F047         	movff	?_toupper,xtoa@c
 12736  0022AE  C00D  F048         	movff	?_toupper+1,xtoa@c+1
 12737  0022B2                     l6695:
 12738                           
 12739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
 12740  0022B2  0EC1               	movlw	low _dbuf
 12741  0022B4  2445               	addwf	xtoa@i^0,w,c
 12742  0022B6  6ED9               	movwf	fsr2l,c
 12743  0022B8  0E01               	movlw	high _dbuf
 12744  0022BA  2046               	addwfc	(xtoa@i+1)^0,w,c
 12745  0022BC  6EDA               	movwf	fsr2h,c
 12746  0022BE  C047  FFDF         	movff	xtoa@c,indf2
 12747  0022C2                     
 12748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
 12749  0022C2  0639               	decf	xtoa@p^0,f,c
 12750  0022C4  A0D8               	btfss	status,0,c
 12751  0022C6  063A               	decf	(xtoa@p+1)^0,f,c
 12752  0022C8                     
 12753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
 12754  0022C8  063B               	decf	xtoa@w^0,f,c
 12755  0022CA  A0D8               	btfss	status,0,c
 12756  0022CC  063C               	decf	(xtoa@w+1)^0,f,c
 12757  0022CE                     
 12758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
 12759  0022CE  C03D  F02D         	movff	xtoa@n,??_xtoa
 12760  0022D2  C03E  F02E         	movff	xtoa@n+1,??_xtoa+1
 12761  0022D6  C03F  F02F         	movff	xtoa@n+2,??_xtoa+2
 12762  0022DA  C040  F030         	movff	xtoa@n+3,??_xtoa+3
 12763  0022DE  C041  F031         	movff	xtoa@n+4,??_xtoa+4
 12764  0022E2  C042  F032         	movff	xtoa@n+5,??_xtoa+5
 12765  0022E6  C043  F033         	movff	xtoa@n+6,??_xtoa+6
 12766  0022EA  C044  F034         	movff	xtoa@n+7,??_xtoa+7
 12767  0022EE  0E05               	movlw	5
 12768  0022F0  EF83  F011         	goto	u8130
 12769  0022F4                     u8135:
 12770  0022F4  90D8               	bcf	status,0,c
 12771  0022F6  3234               	rrcf	(??_xtoa+7)^0,f,c
 12772  0022F8  3233               	rrcf	(??_xtoa+6)^0,f,c
 12773  0022FA  3232               	rrcf	(??_xtoa+5)^0,f,c
 12774  0022FC  3231               	rrcf	(??_xtoa+4)^0,f,c
 12775  0022FE  3230               	rrcf	(??_xtoa+3)^0,f,c
 12776  002300  322F               	rrcf	(??_xtoa+2)^0,f,c
 12777  002302  322E               	rrcf	(??_xtoa+1)^0,f,c
 12778  002304  322D               	rrcf	??_xtoa^0,f,c
 12779  002306                     u8130:
 12780  002306  2EE8               	decfsz	wreg,f,c
 12781  002308  EF7A  F011         	goto	u8135
 12782  00230C  C02D  F03D         	movff	??_xtoa,xtoa@n
 12783  002310  C02E  F03E         	movff	??_xtoa+1,xtoa@n+1
 12784  002314  C02F  F03F         	movff	??_xtoa+2,xtoa@n+2
 12785  002318  C030  F040         	movff	??_xtoa+3,xtoa@n+3
 12786  00231C  C031  F041         	movff	??_xtoa+4,xtoa@n+4
 12787  002320  C032  F042         	movff	??_xtoa+5,xtoa@n+5
 12788  002324  C033  F043         	movff	??_xtoa+6,xtoa@n+6
 12789  002328  C034  F044         	movff	??_xtoa+7,xtoa@n+7
 12790  00232C                     l6703:
 12791                           
 12792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12793  00232C  BE46               	btfsc	(xtoa@i+1)^0,7,c
 12794  00232E  EFA2  F011         	goto	u8141
 12795  002332  5046               	movf	(xtoa@i+1)^0,w,c
 12796  002334  E109               	bnz	u8140
 12797  002336  0E02               	movlw	2
 12798  002338  5C45               	subwf	xtoa@i^0,w,c
 12799  00233A  A0D8               	btfss	status,0,c
 12800  00233C  EFA2  F011         	goto	u8141
 12801  002340  EFA4  F011         	goto	u8140
 12802  002344                     u8141:
 12803  002344  EFD4  F011         	goto	l1459
 12804  002348                     u8140:
 12805  002348  503D               	movf	xtoa@n^0,w,c
 12806  00234A  103E               	iorwf	(xtoa@n+1)^0,w,c
 12807  00234C  103F               	iorwf	(xtoa@n+2)^0,w,c
 12808  00234E  1040               	iorwf	(xtoa@n+3)^0,w,c
 12809  002350  1041               	iorwf	(xtoa@n+4)^0,w,c
 12810  002352  1042               	iorwf	(xtoa@n+5)^0,w,c
 12811  002354  1043               	iorwf	(xtoa@n+6)^0,w,c
 12812  002356  1044               	iorwf	(xtoa@n+7)^0,w,c
 12813  002358  A4D8               	btfss	status,2,c
 12814  00235A  EFB1  F011         	goto	u8151
 12815  00235E  EFB3  F011         	goto	u8150
 12816  002362                     u8151:
 12817  002362  EFE3  F010         	goto	l6673
 12818  002366                     u8150:
 12819  002366  BE3A               	btfsc	(xtoa@p+1)^0,7,c
 12820  002368  EFC0  F011         	goto	u8160
 12821  00236C  503A               	movf	(xtoa@p+1)^0,w,c
 12822  00236E  E106               	bnz	u8161
 12823  002370  0439               	decf	xtoa@p^0,w,c
 12824  002372  B0D8               	btfsc	status,0,c
 12825  002374  EFBE  F011         	goto	u8161
 12826  002378  EFC0  F011         	goto	u8160
 12827  00237C                     u8161:
 12828  00237C  EFE3  F010         	goto	l6673
 12829  002380                     u8160:
 12830  002380  BE3C               	btfsc	(xtoa@w+1)^0,7,c
 12831  002382  EFCB  F011         	goto	u8171
 12832  002386  503C               	movf	(xtoa@w+1)^0,w,c
 12833  002388  E108               	bnz	u8170
 12834  00238A  043B               	decf	xtoa@w^0,w,c
 12835  00238C  A0D8               	btfss	status,0,c
 12836  00238E  EFCB  F011         	goto	u8171
 12837  002392  EFCD  F011         	goto	u8170
 12838  002396                     u8171:
 12839  002396  EFD4  F011         	goto	l1459
 12840  00239A                     u8170:
 12841  00239A  B278               	btfsc	_flags^0,1,c
 12842  00239C  EFD2  F011         	goto	u8181
 12843  0023A0  EFD4  F011         	goto	u8180
 12844  0023A4                     u8181:
 12845  0023A4  EFE3  F010         	goto	l6673
 12846  0023A8                     u8180:
 12847  0023A8                     l1459:
 12848                           
 12849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
 12850  0023A8  A878               	btfss	_flags^0,4,c
 12851  0023AA  EFD9  F011         	goto	u8191
 12852  0023AE  EFDB  F011         	goto	u8190
 12853  0023B2                     u8191:
 12854  0023B2  EFF1  F011         	goto	l6719
 12855  0023B6                     u8190:
 12856  0023B6                     
 12857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
 12858  0023B6  0645               	decf	xtoa@i^0,f,c
 12859  0023B8  A0D8               	btfss	status,0,c
 12860  0023BA  0646               	decf	(xtoa@i+1)^0,f,c
 12861  0023BC                     
 12862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
 12863  0023BC  0EC1               	movlw	low _dbuf
 12864  0023BE  2445               	addwf	xtoa@i^0,w,c
 12865  0023C0  6ED9               	movwf	fsr2l,c
 12866  0023C2  0E01               	movlw	high _dbuf
 12867  0023C4  2046               	addwfc	(xtoa@i+1)^0,w,c
 12868  0023C6  6EDA               	movwf	fsr2h,c
 12869  0023C8  C02C  FFDF         	movff	xtoa@x,indf2
 12870  0023CC                     
 12871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
 12872  0023CC  0645               	decf	xtoa@i^0,f,c
 12873  0023CE  A0D8               	btfss	status,0,c
 12874  0023D0  0646               	decf	(xtoa@i+1)^0,f,c
 12875                           
 12876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
 12877  0023D2  0EC1               	movlw	low _dbuf
 12878  0023D4  2445               	addwf	xtoa@i^0,w,c
 12879  0023D6  6ED9               	movwf	fsr2l,c
 12880  0023D8  0E01               	movlw	high _dbuf
 12881  0023DA  2046               	addwfc	(xtoa@i+1)^0,w,c
 12882  0023DC  6EDA               	movwf	fsr2h,c
 12883  0023DE  0E30               	movlw	48
 12884  0023E0  6EDF               	movwf	indf2,c
 12885  0023E2                     l6719:
 12886                           
 12887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
 12888  0023E2  C022  F017         	movff	xtoa@fp,pad@fp
 12889  0023E6  C023  F018         	movff	xtoa@fp+1,pad@fp+1
 12890  0023EA  0EC1               	movlw	low _dbuf
 12891  0023EC  2445               	addwf	xtoa@i^0,w,c
 12892  0023EE  6E19               	movwf	pad@buf^0,c
 12893  0023F0  0E01               	movlw	high _dbuf
 12894  0023F2  2046               	addwfc	(xtoa@i+1)^0,w,c
 12895  0023F4  6E1A               	movwf	(pad@buf+1)^0,c
 12896  0023F6  C03B  F01B         	movff	xtoa@w,pad@p
 12897  0023FA  C03C  F01C         	movff	xtoa@w+1,pad@p+1
 12898  0023FE  EC9D  F026         	call	_pad	;wreg free
 12899  002402  C017  F022         	movff	?_pad,?_xtoa
 12900  002406  C018  F023         	movff	?_pad+1,?_xtoa+1
 12901  00240A  0012               	return		;funcret
 12902  00240C                     __end_of_xtoa:
 12903                           	callstack 0
 12904                           
 12905 ;; *************** function _toupper *****************
 12906 ;; Defined at:
 12907 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
 12908 ;; Parameters:    Size  Location     Type
 12909 ;;  c               2   11[COMRAM] int 
 12910 ;; Auto vars:     Size  Location     Type
 12911 ;;		None
 12912 ;; Return value:  Size  Location     Type
 12913 ;;                  2   11[COMRAM] int 
 12914 ;; Registers used:
 12915 ;;		wreg, status,2, status,0
 12916 ;; Tracked objects:
 12917 ;;		On entry : 0/0
 12918 ;;		On exit  : 0/0
 12919 ;;		Unchanged: 0/0
 12920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12921 ;;      Params:         2       0       0       0       0       0       0
 12922 ;;      Locals:         2       0       0       0       0       0       0
 12923 ;;      Temps:          4       0       0       0       0       0       0
 12924 ;;      Totals:         8       0       0       0       0       0       0
 12925 ;;Total ram usage:        8 bytes
 12926 ;; Hardware stack levels used: 1
 12927 ;; Hardware stack levels required when called: 2
 12928 ;; This function calls:
 12929 ;;		_islower
 12930 ;; This function is called by:
 12931 ;;		_xtoa
 12932 ;; This function uses a non-reentrant model
 12933 ;;
 12934                           
 12935                           	psect	text42
 12936  00539A                     __ptext42:
 12937                           	callstack 0
 12938  00539A                     _toupper:
 12939                           	callstack 23
 12940  00539A  0E9F               	movlw	159
 12941  00539C  6E0E               	movwf	??_toupper^0,c
 12942  00539E  0EFF               	movlw	255
 12943  0053A0  6E0F               	movwf	(??_toupper+1)^0,c
 12944  0053A2  C00C  F010         	movff	toupper@c,??_toupper+2
 12945  0053A6  C00D  F011         	movff	toupper@c+1,??_toupper+3
 12946  0053AA  500E               	movf	??_toupper^0,w,c
 12947  0053AC  2610               	addwf	(??_toupper+2)^0,f,c
 12948  0053AE  500F               	movf	(??_toupper+1)^0,w,c
 12949  0053B0  2211               	addwfc	(??_toupper+3)^0,f,c
 12950  0053B2  5011               	movf	(??_toupper+3)^0,w,c
 12951  0053B4  E10A               	bnz	u7640
 12952  0053B6  0E1A               	movlw	26
 12953  0053B8  5C10               	subwf	(??_toupper+2)^0,w,c
 12954  0053BA  A0D8               	btfss	status,0,c
 12955  0053BC  EFE2  F029         	goto	u7641
 12956  0053C0  EFE5  F029         	goto	u7640
 12957  0053C4                     u7641:
 12958  0053C4  0E01               	movlw	1
 12959  0053C6  EFE6  F029         	goto	u7650
 12960  0053CA                     u7640:
 12961  0053CA  0E00               	movlw	0
 12962  0053CC                     u7650:
 12963  0053CC  6E12               	movwf	_toupper$1924^0,c
 12964  0053CE  6A13               	clrf	(_toupper$1924+1)^0,c
 12965  0053D0  5012               	movf	_toupper$1924^0,w,c
 12966  0053D2  1013               	iorwf	(_toupper$1924+1)^0,w,c
 12967  0053D4  B4D8               	btfsc	status,2,c
 12968  0053D6  EFEF  F029         	goto	u7661
 12969  0053DA  EFF1  F029         	goto	u7660
 12970  0053DE                     u7661:
 12971  0053DE  EFF7  F029         	goto	l1601
 12972  0053E2                     u7660:
 12973  0053E2  0E5F               	movlw	95
 12974  0053E4  140C               	andwf	toupper@c^0,w,c
 12975  0053E6  6E0C               	movwf	?_toupper^0,c
 12976  0053E8  6A0D               	clrf	(?_toupper+1)^0,c
 12977  0053EA  EFFB  F029         	goto	l1606
 12978  0053EE                     l1601:
 12979  0053EE  C00C  F00C         	movff	toupper@c,?_toupper
 12980  0053F2  C00D  F00D         	movff	toupper@c+1,?_toupper+1
 12981  0053F6                     l1606:
 12982  0053F6  0012               	return		;funcret
 12983  0053F8                     __end_of_toupper:
 12984                           	callstack 0
 12985                           
 12986 ;; *************** function _islower *****************
 12987 ;; Defined at:
 12988 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
 12989 ;; Parameters:    Size  Location     Type
 12990 ;;  c               2    5[COMRAM] int 
 12991 ;; Auto vars:     Size  Location     Type
 12992 ;;		None
 12993 ;; Return value:  Size  Location     Type
 12994 ;;                  2    5[COMRAM] int 
 12995 ;; Registers used:
 12996 ;;		wreg, status,2, status,0
 12997 ;; Tracked objects:
 12998 ;;		On entry : 0/0
 12999 ;;		On exit  : 0/0
 13000 ;;		Unchanged: 0/0
 13001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13002 ;;      Params:         2       0       0       0       0       0       0
 13003 ;;      Locals:         0       0       0       0       0       0       0
 13004 ;;      Temps:          4       0       0       0       0       0       0
 13005 ;;      Totals:         6       0       0       0       0       0       0
 13006 ;;Total ram usage:        6 bytes
 13007 ;; Hardware stack levels used: 1
 13008 ;; Hardware stack levels required when called: 1
 13009 ;; This function calls:
 13010 ;;		Nothing
 13011 ;; This function is called by:
 13012 ;;		_toupper
 13013 ;; This function uses a non-reentrant model
 13014 ;;
 13015                           
 13016                           	psect	text43
 13017  005590                     __ptext43:
 13018                           	callstack 0
 13019  005590                     _islower:
 13020                           	callstack 23
 13021  005590  0E9F               	movlw	159
 13022  005592  6E08               	movwf	??_islower^0,c
 13023  005594  0EFF               	movlw	255
 13024  005596  6E09               	movwf	(??_islower+1)^0,c
 13025  005598  C006  F00A         	movff	islower@c,??_islower+2
 13026  00559C  C007  F00B         	movff	islower@c+1,??_islower+3
 13027  0055A0  5008               	movf	??_islower^0,w,c
 13028  0055A2  260A               	addwf	(??_islower+2)^0,f,c
 13029  0055A4  5009               	movf	(??_islower+1)^0,w,c
 13030  0055A6  220B               	addwfc	(??_islower+3)^0,f,c
 13031  0055A8  500B               	movf	(??_islower+3)^0,w,c
 13032  0055AA  E10A               	bnz	u7330
 13033  0055AC  0E1A               	movlw	26
 13034  0055AE  5C0A               	subwf	(??_islower+2)^0,w,c
 13035  0055B0  A0D8               	btfss	status,0,c
 13036  0055B2  EFDD  F02A         	goto	u7331
 13037  0055B6  EFE0  F02A         	goto	u7330
 13038  0055BA                     u7331:
 13039  0055BA  0E01               	movlw	1
 13040  0055BC  EFE1  F02A         	goto	u7340
 13041  0055C0                     u7330:
 13042  0055C0  0E00               	movlw	0
 13043  0055C2                     u7340:
 13044  0055C2  6E06               	movwf	?_islower^0,c
 13045  0055C4  6A07               	clrf	(?_islower+1)^0,c
 13046  0055C6  0012               	return		;funcret
 13047  0055C8                     __end_of_islower:
 13048                           	callstack 0
 13049                           
 13050 ;; *************** function _isupper *****************
 13051 ;; Defined at:
 13052 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;  c               2    5[COMRAM] int 
 13055 ;; Auto vars:     Size  Location     Type
 13056 ;;		None
 13057 ;; Return value:  Size  Location     Type
 13058 ;;                  2    5[COMRAM] int 
 13059 ;; Registers used:
 13060 ;;		wreg, status,2, status,0
 13061 ;; Tracked objects:
 13062 ;;		On entry : 0/0
 13063 ;;		On exit  : 0/0
 13064 ;;		Unchanged: 0/0
 13065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13066 ;;      Params:         2       0       0       0       0       0       0
 13067 ;;      Locals:         0       0       0       0       0       0       0
 13068 ;;      Temps:          4       0       0       0       0       0       0
 13069 ;;      Totals:         6       0       0       0       0       0       0
 13070 ;;Total ram usage:        6 bytes
 13071 ;; Hardware stack levels used: 1
 13072 ;; Hardware stack levels required when called: 1
 13073 ;; This function calls:
 13074 ;;		Nothing
 13075 ;; This function is called by:
 13076 ;;		_xtoa
 13077 ;; This function uses a non-reentrant model
 13078 ;;
 13079                           
 13080                           	psect	text44
 13081  0055C8                     __ptext44:
 13082                           	callstack 0
 13083  0055C8                     _isupper:
 13084                           	callstack 24
 13085  0055C8  0EBF               	movlw	191
 13086  0055CA  6E08               	movwf	??_isupper^0,c
 13087  0055CC  0EFF               	movlw	255
 13088  0055CE  6E09               	movwf	(??_isupper+1)^0,c
 13089  0055D0  C006  F00A         	movff	isupper@c,??_isupper+2
 13090  0055D4  C007  F00B         	movff	isupper@c+1,??_isupper+3
 13091  0055D8  5008               	movf	??_isupper^0,w,c
 13092  0055DA  260A               	addwf	(??_isupper+2)^0,f,c
 13093  0055DC  5009               	movf	(??_isupper+1)^0,w,c
 13094  0055DE  220B               	addwfc	(??_isupper+3)^0,f,c
 13095  0055E0  500B               	movf	(??_isupper+3)^0,w,c
 13096  0055E2  E10A               	bnz	u7600
 13097  0055E4  0E1A               	movlw	26
 13098  0055E6  5C0A               	subwf	(??_isupper+2)^0,w,c
 13099  0055E8  A0D8               	btfss	status,0,c
 13100  0055EA  EFF9  F02A         	goto	u7601
 13101  0055EE  EFFC  F02A         	goto	u7600
 13102  0055F2                     u7601:
 13103  0055F2  0E01               	movlw	1
 13104  0055F4  EFFD  F02A         	goto	u7610
 13105  0055F8                     u7600:
 13106  0055F8  0E00               	movlw	0
 13107  0055FA                     u7610:
 13108  0055FA  6E06               	movwf	?_isupper^0,c
 13109  0055FC  6A07               	clrf	(?_isupper+1)^0,c
 13110  0055FE  0012               	return		;funcret
 13111  005600                     __end_of_isupper:
 13112                           	callstack 0
 13113                           
 13114 ;; *************** function _isalpha *****************
 13115 ;; Defined at:
 13116 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
 13117 ;; Parameters:    Size  Location     Type
 13118 ;;  c               2    5[COMRAM] int 
 13119 ;; Auto vars:     Size  Location     Type
 13120 ;;		None
 13121 ;; Return value:  Size  Location     Type
 13122 ;;                  2    5[COMRAM] int 
 13123 ;; Registers used:
 13124 ;;		wreg, status,2, status,0
 13125 ;; Tracked objects:
 13126 ;;		On entry : 0/0
 13127 ;;		On exit  : 0/0
 13128 ;;		Unchanged: 0/0
 13129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13130 ;;      Params:         2       0       0       0       0       0       0
 13131 ;;      Locals:         0       0       0       0       0       0       0
 13132 ;;      Temps:          4       0       0       0       0       0       0
 13133 ;;      Totals:         6       0       0       0       0       0       0
 13134 ;;Total ram usage:        6 bytes
 13135 ;; Hardware stack levels used: 1
 13136 ;; Hardware stack levels required when called: 1
 13137 ;; This function calls:
 13138 ;;		Nothing
 13139 ;; This function is called by:
 13140 ;;		_xtoa
 13141 ;; This function uses a non-reentrant model
 13142 ;;
 13143                           
 13144                           	psect	text45
 13145  00551C                     __ptext45:
 13146                           	callstack 0
 13147  00551C                     _isalpha:
 13148                           	callstack 24
 13149  00551C  0E9F               	movlw	159
 13150  00551E  6E08               	movwf	??_isalpha^0,c
 13151  005520  0EFF               	movlw	255
 13152  005522  6E09               	movwf	(??_isalpha+1)^0,c
 13153  005524  0E20               	movlw	32
 13154  005526  1006               	iorwf	isalpha@c^0,w,c
 13155  005528  6E0A               	movwf	(??_isalpha+2)^0,c
 13156  00552A  0E00               	movlw	0
 13157  00552C  1007               	iorwf	(isalpha@c+1)^0,w,c
 13158  00552E  6E0B               	movwf	(??_isalpha+3)^0,c
 13159  005530  5008               	movf	??_isalpha^0,w,c
 13160  005532  260A               	addwf	(??_isalpha+2)^0,f,c
 13161  005534  5009               	movf	(??_isalpha+1)^0,w,c
 13162  005536  220B               	addwfc	(??_isalpha+3)^0,f,c
 13163  005538  500B               	movf	(??_isalpha+3)^0,w,c
 13164  00553A  E10A               	bnz	u7620
 13165  00553C  0E1A               	movlw	26
 13166  00553E  5C0A               	subwf	(??_isalpha+2)^0,w,c
 13167  005540  A0D8               	btfss	status,0,c
 13168  005542  EFA5  F02A         	goto	u7621
 13169  005546  EFA8  F02A         	goto	u7620
 13170  00554A                     u7621:
 13171  00554A  0E01               	movlw	1
 13172  00554C  EFA9  F02A         	goto	u7630
 13173  005550                     u7620:
 13174  005550  0E00               	movlw	0
 13175  005552                     u7630:
 13176  005552  6E06               	movwf	?_isalpha^0,c
 13177  005554  6A07               	clrf	(?_isalpha+1)^0,c
 13178  005556  0012               	return		;funcret
 13179  005558                     __end_of_isalpha:
 13180                           	callstack 0
 13181                           
 13182 ;; *************** function _utoa *****************
 13183 ;; Defined at:
 13184 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 13185 ;; Parameters:    Size  Location     Type
 13186 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 13187 ;;		 -> NULL(0), 
 13188 ;;  d               8   35[COMRAM] unsigned long long 
 13189 ;; Auto vars:     Size  Location     Type
 13190 ;;  n               8   55[COMRAM] unsigned long long 
 13191 ;;  i               2   63[COMRAM] int 
 13192 ;;  w               2   53[COMRAM] int 
 13193 ;;  p               2   51[COMRAM] int 
 13194 ;; Return value:  Size  Location     Type
 13195 ;;                  2   33[COMRAM] int 
 13196 ;; Registers used:
 13197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13198 ;; Tracked objects:
 13199 ;;		On entry : 0/0
 13200 ;;		On exit  : 0/0
 13201 ;;		Unchanged: 0/0
 13202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13203 ;;      Params:        10       0       0       0       0       0       0
 13204 ;;      Locals:        14       0       0       0       0       0       0
 13205 ;;      Temps:          8       0       0       0       0       0       0
 13206 ;;      Totals:        32       0       0       0       0       0       0
 13207 ;;Total ram usage:       32 bytes
 13208 ;; Hardware stack levels used: 1
 13209 ;; Hardware stack levels required when called: 5
 13210 ;; This function calls:
 13211 ;;		___lodiv
 13212 ;;		___lomod
 13213 ;;		_pad
 13214 ;; This function is called by:
 13215 ;;		_vfpfcnvrt
 13216 ;; This function uses a non-reentrant model
 13217 ;;
 13218                           
 13219                           	psect	text46
 13220  002FD6                     __ptext46:
 13221                           	callstack 0
 13222  002FD6                     _utoa:
 13223                           	callstack 21
 13224  002FD6                     
 13225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
 13226  002FD6  BE77               	btfsc	(_prec+1)^0,7,c
 13227  002FD8  EFF0  F017         	goto	u7961
 13228  002FDC  EFF2  F017         	goto	u7960
 13229  002FE0                     u7961:
 13230  002FE0  EFF3  F017         	goto	l6625
 13231  002FE4                     u7960:
 13232  002FE4                     
 13233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
 13234  002FE4  9278               	bcf	_flags^0,1,c
 13235  002FE6                     l6625:
 13236                           
 13237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
 13238  002FE6  BE77               	btfsc	(_prec+1)^0,7,c
 13239  002FE8  EF00  F018         	goto	u7970
 13240  002FEC  5077               	movf	(_prec+1)^0,w,c
 13241  002FEE  E106               	bnz	u7971
 13242  002FF0  0476               	decf	_prec^0,w,c
 13243  002FF2  B0D8               	btfsc	status,0,c
 13244  002FF4  EFFE  F017         	goto	u7971
 13245  002FF8  EF00  F018         	goto	u7970
 13246  002FFC                     u7971:
 13247  002FFC  EF06  F018         	goto	l1421
 13248  003000                     u7970:
 13249  003000  0E00               	movlw	0
 13250  003002  6E35               	movwf	(utoa@p+1)^0,c
 13251  003004  0E01               	movlw	1
 13252  003006  6E34               	movwf	utoa@p^0,c
 13253  003008  EF0A  F018         	goto	l1423
 13254  00300C                     l1421:
 13255  00300C  C076  F034         	movff	_prec,utoa@p
 13256  003010  C077  F035         	movff	_prec+1,utoa@p+1
 13257  003014                     l1423:
 13258                           
 13259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
 13260  003014  C0F9  F036         	movff	_width,utoa@w
 13261  003018  C0FA  F037         	movff	_width+1,utoa@w+1
 13262                           
 13263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
 13264  00301C  C024  F038         	movff	utoa@d,utoa@n
 13265  003020  C025  F039         	movff	utoa@d+1,utoa@n+1
 13266  003024  C026  F03A         	movff	utoa@d+2,utoa@n+2
 13267  003028  C027  F03B         	movff	utoa@d+3,utoa@n+3
 13268  00302C  C028  F03C         	movff	utoa@d+4,utoa@n+4
 13269  003030  C029  F03D         	movff	utoa@d+5,utoa@n+5
 13270  003034  C02A  F03E         	movff	utoa@d+6,utoa@n+6
 13271  003038  C02B  F03F         	movff	utoa@d+7,utoa@n+7
 13272  00303C                     
 13273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
 13274  00303C  0E00               	movlw	0
 13275  00303E  6E41               	movwf	(utoa@i+1)^0,c
 13276  003040  0E1F               	movlw	31
 13277  003042  6E40               	movwf	utoa@i^0,c
 13278  003044                     
 13279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
 13280  003044  0E00               	movlw	0
 13281  003046  0101               	movlb	1	; () banked
 13282  003048  6FE0               	movwf	(_dbuf+31)& (0+255),b
 13283                           
 13284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13285  00304A  EF9D  F018         	goto	l6643
 13286  00304E                     l6633:
 13287                           
 13288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
 13289  00304E  0640               	decf	utoa@i^0,f,c
 13290  003050  A0D8               	btfss	status,0,c
 13291  003052  0641               	decf	(utoa@i+1)^0,f,c
 13292  003054                     
 13293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
 13294  003054  0EC1               	movlw	low _dbuf
 13295  003056  2440               	addwf	utoa@i^0,w,c
 13296  003058  6ED9               	movwf	fsr2l,c
 13297  00305A  0E01               	movlw	high _dbuf
 13298  00305C  2041               	addwfc	(utoa@i+1)^0,w,c
 13299  00305E  6EDA               	movwf	fsr2h,c
 13300  003060  C038  F006         	movff	utoa@n,___lomod@dividend
 13301  003064  C039  F007         	movff	utoa@n+1,___lomod@dividend+1
 13302  003068  C03A  F008         	movff	utoa@n+2,___lomod@dividend+2
 13303  00306C  C03B  F009         	movff	utoa@n+3,___lomod@dividend+3
 13304  003070  C03C  F00A         	movff	utoa@n+4,___lomod@dividend+4
 13305  003074  C03D  F00B         	movff	utoa@n+5,___lomod@dividend+5
 13306  003078  C03E  F00C         	movff	utoa@n+6,___lomod@dividend+6
 13307  00307C  C03F  F00D         	movff	utoa@n+7,___lomod@dividend+7
 13308  003080  0E0A               	movlw	10
 13309  003082  6E0E               	movwf	___lomod@divisor^0,c
 13310  003084  0E00               	movlw	0
 13311  003086  6E0F               	movwf	(___lomod@divisor+1)^0,c
 13312  003088  0E00               	movlw	0
 13313  00308A  6E10               	movwf	(___lomod@divisor+2)^0,c
 13314  00308C  0E00               	movlw	0
 13315  00308E  6E11               	movwf	(___lomod@divisor+3)^0,c
 13316  003090  0E00               	movlw	0
 13317  003092  6E12               	movwf	(___lomod@divisor+4)^0,c
 13318  003094  0E00               	movlw	0
 13319  003096  6E13               	movwf	(___lomod@divisor+5)^0,c
 13320  003098  0E00               	movlw	0
 13321  00309A  6E14               	movwf	(___lomod@divisor+6)^0,c
 13322  00309C  0E00               	movlw	0
 13323  00309E  6E15               	movwf	(___lomod@divisor+7)^0,c
 13324  0030A0  EC6C  F025         	call	___lomod	;wreg free
 13325  0030A4  C006  F02C         	movff	?___lomod,??_utoa
 13326  0030A8  C007  F02D         	movff	?___lomod+1,??_utoa+1
 13327  0030AC  C008  F02E         	movff	?___lomod+2,??_utoa+2
 13328  0030B0  C009  F02F         	movff	?___lomod+3,??_utoa+3
 13329  0030B4  C00A  F030         	movff	?___lomod+4,??_utoa+4
 13330  0030B8  C00B  F031         	movff	?___lomod+5,??_utoa+5
 13331  0030BC  C00C  F032         	movff	?___lomod+6,??_utoa+6
 13332  0030C0  C00D  F033         	movff	?___lomod+7,??_utoa+7
 13333  0030C4  502C               	movf	??_utoa^0,w,c
 13334  0030C6  0F30               	addlw	48
 13335  0030C8  6EDF               	movwf	indf2,c
 13336  0030CA                     
 13337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
 13338  0030CA  0634               	decf	utoa@p^0,f,c
 13339  0030CC  A0D8               	btfss	status,0,c
 13340  0030CE  0635               	decf	(utoa@p+1)^0,f,c
 13341  0030D0                     
 13342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
 13343  0030D0  0636               	decf	utoa@w^0,f,c
 13344  0030D2  A0D8               	btfss	status,0,c
 13345  0030D4  0637               	decf	(utoa@w+1)^0,f,c
 13346  0030D6                     
 13347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
 13348  0030D6  C038  F006         	movff	utoa@n,___lodiv@dividend
 13349  0030DA  C039  F007         	movff	utoa@n+1,___lodiv@dividend+1
 13350  0030DE  C03A  F008         	movff	utoa@n+2,___lodiv@dividend+2
 13351  0030E2  C03B  F009         	movff	utoa@n+3,___lodiv@dividend+3
 13352  0030E6  C03C  F00A         	movff	utoa@n+4,___lodiv@dividend+4
 13353  0030EA  C03D  F00B         	movff	utoa@n+5,___lodiv@dividend+5
 13354  0030EE  C03E  F00C         	movff	utoa@n+6,___lodiv@dividend+6
 13355  0030F2  C03F  F00D         	movff	utoa@n+7,___lodiv@dividend+7
 13356  0030F6  0E0A               	movlw	10
 13357  0030F8  6E0E               	movwf	___lodiv@divisor^0,c
 13358  0030FA  0E00               	movlw	0
 13359  0030FC  6E0F               	movwf	(___lodiv@divisor+1)^0,c
 13360  0030FE  0E00               	movlw	0
 13361  003100  6E10               	movwf	(___lodiv@divisor+2)^0,c
 13362  003102  0E00               	movlw	0
 13363  003104  6E11               	movwf	(___lodiv@divisor+3)^0,c
 13364  003106  0E00               	movlw	0
 13365  003108  6E12               	movwf	(___lodiv@divisor+4)^0,c
 13366  00310A  0E00               	movlw	0
 13367  00310C  6E13               	movwf	(___lodiv@divisor+5)^0,c
 13368  00310E  0E00               	movlw	0
 13369  003110  6E14               	movwf	(___lodiv@divisor+6)^0,c
 13370  003112  0E00               	movlw	0
 13371  003114  6E15               	movwf	(___lodiv@divisor+7)^0,c
 13372  003116  ECA3  F023         	call	___lodiv	;wreg free
 13373  00311A  C006  F038         	movff	?___lodiv,utoa@n
 13374  00311E  C007  F039         	movff	?___lodiv+1,utoa@n+1
 13375  003122  C008  F03A         	movff	?___lodiv+2,utoa@n+2
 13376  003126  C009  F03B         	movff	?___lodiv+3,utoa@n+3
 13377  00312A  C00A  F03C         	movff	?___lodiv+4,utoa@n+4
 13378  00312E  C00B  F03D         	movff	?___lodiv+5,utoa@n+5
 13379  003132  C00C  F03E         	movff	?___lodiv+6,utoa@n+6
 13380  003136  C00D  F03F         	movff	?___lodiv+7,utoa@n+7
 13381  00313A                     l6643:
 13382                           
 13383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13384  00313A  5040               	movf	utoa@i^0,w,c
 13385  00313C  1041               	iorwf	(utoa@i+1)^0,w,c
 13386  00313E  B4D8               	btfsc	status,2,c
 13387  003140  EFA4  F018         	goto	u7981
 13388  003144  EFA6  F018         	goto	u7980
 13389  003148                     u7981:
 13390  003148  EFD6  F018         	goto	l6653
 13391  00314C                     u7980:
 13392  00314C  5038               	movf	utoa@n^0,w,c
 13393  00314E  1039               	iorwf	(utoa@n+1)^0,w,c
 13394  003150  103A               	iorwf	(utoa@n+2)^0,w,c
 13395  003152  103B               	iorwf	(utoa@n+3)^0,w,c
 13396  003154  103C               	iorwf	(utoa@n+4)^0,w,c
 13397  003156  103D               	iorwf	(utoa@n+5)^0,w,c
 13398  003158  103E               	iorwf	(utoa@n+6)^0,w,c
 13399  00315A  103F               	iorwf	(utoa@n+7)^0,w,c
 13400  00315C  A4D8               	btfss	status,2,c
 13401  00315E  EFB3  F018         	goto	u7991
 13402  003162  EFB5  F018         	goto	u7990
 13403  003166                     u7991:
 13404  003166  EF27  F018         	goto	l6633
 13405  00316A                     u7990:
 13406  00316A  BE35               	btfsc	(utoa@p+1)^0,7,c
 13407  00316C  EFC2  F018         	goto	u8000
 13408  003170  5035               	movf	(utoa@p+1)^0,w,c
 13409  003172  E106               	bnz	u8001
 13410  003174  0434               	decf	utoa@p^0,w,c
 13411  003176  B0D8               	btfsc	status,0,c
 13412  003178  EFC0  F018         	goto	u8001
 13413  00317C  EFC2  F018         	goto	u8000
 13414  003180                     u8001:
 13415  003180  EF27  F018         	goto	l6633
 13416  003184                     u8000:
 13417  003184  BE37               	btfsc	(utoa@w+1)^0,7,c
 13418  003186  EFCD  F018         	goto	u8011
 13419  00318A  5037               	movf	(utoa@w+1)^0,w,c
 13420  00318C  E108               	bnz	u8010
 13421  00318E  0436               	decf	utoa@w^0,w,c
 13422  003190  A0D8               	btfss	status,0,c
 13423  003192  EFCD  F018         	goto	u8011
 13424  003196  EFCF  F018         	goto	u8010
 13425  00319A                     u8011:
 13426  00319A  EFD6  F018         	goto	l6653
 13427  00319E                     u8010:
 13428  00319E  B278               	btfsc	_flags^0,1,c
 13429  0031A0  EFD4  F018         	goto	u8021
 13430  0031A4  EFD6  F018         	goto	u8020
 13431  0031A8                     u8021:
 13432  0031A8  EF27  F018         	goto	l6633
 13433  0031AC                     u8020:
 13434  0031AC                     l6653:
 13435                           
 13436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
 13437  0031AC  C022  F017         	movff	utoa@fp,pad@fp
 13438  0031B0  C023  F018         	movff	utoa@fp+1,pad@fp+1
 13439  0031B4  0EC1               	movlw	low _dbuf
 13440  0031B6  2440               	addwf	utoa@i^0,w,c
 13441  0031B8  6E19               	movwf	pad@buf^0,c
 13442  0031BA  0E01               	movlw	high _dbuf
 13443  0031BC  2041               	addwfc	(utoa@i+1)^0,w,c
 13444  0031BE  6E1A               	movwf	(pad@buf+1)^0,c
 13445  0031C0  C036  F01B         	movff	utoa@w,pad@p
 13446  0031C4  C037  F01C         	movff	utoa@w+1,pad@p+1
 13447  0031C8  EC9D  F026         	call	_pad	;wreg free
 13448  0031CC  C017  F022         	movff	?_pad,?_utoa
 13449  0031D0  C018  F023         	movff	?_pad+1,?_utoa+1
 13450  0031D4  0012               	return		;funcret
 13451  0031D6                     __end_of_utoa:
 13452                           	callstack 0
 13453                           
 13454 ;; *************** function ___lomod *****************
 13455 ;; Defined at:
 13456 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
 13457 ;; Parameters:    Size  Location     Type
 13458 ;;  dividend        8    5[COMRAM] unsigned long long 
 13459 ;;  divisor         8   13[COMRAM] unsigned long long 
 13460 ;; Auto vars:     Size  Location     Type
 13461 ;;  counter         1   21[COMRAM] unsigned char 
 13462 ;; Return value:  Size  Location     Type
 13463 ;;                  8    5[COMRAM] unsigned long long 
 13464 ;; Registers used:
 13465 ;;		wreg, status,2, status,0
 13466 ;; Tracked objects:
 13467 ;;		On entry : 0/0
 13468 ;;		On exit  : 0/0
 13469 ;;		Unchanged: 0/0
 13470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13471 ;;      Params:        16       0       0       0       0       0       0
 13472 ;;      Locals:         1       0       0       0       0       0       0
 13473 ;;      Temps:          0       0       0       0       0       0       0
 13474 ;;      Totals:        17       0       0       0       0       0       0
 13475 ;;Total ram usage:       17 bytes
 13476 ;; Hardware stack levels used: 1
 13477 ;; Hardware stack levels required when called: 1
 13478 ;; This function calls:
 13479 ;;		Nothing
 13480 ;; This function is called by:
 13481 ;;		_utoa
 13482 ;; This function uses a non-reentrant model
 13483 ;;
 13484                           
 13485                           	psect	text47
 13486  004AD8                     __ptext47:
 13487                           	callstack 0
 13488  004AD8                     ___lomod:
 13489                           	callstack 24
 13490  004AD8  500E               	movf	___lomod@divisor^0,w,c
 13491  004ADA  100F               	iorwf	(___lomod@divisor+1)^0,w,c
 13492  004ADC  1010               	iorwf	(___lomod@divisor+2)^0,w,c
 13493  004ADE  1011               	iorwf	(___lomod@divisor+3)^0,w,c
 13494  004AE0  1012               	iorwf	(___lomod@divisor+4)^0,w,c
 13495  004AE2  1013               	iorwf	(___lomod@divisor+5)^0,w,c
 13496  004AE4  1014               	iorwf	(___lomod@divisor+6)^0,w,c
 13497  004AE6  1015               	iorwf	(___lomod@divisor+7)^0,w,c
 13498  004AE8  B4D8               	btfsc	status,2,c
 13499  004AEA  EF79  F025         	goto	u7521
 13500  004AEE  EF7B  F025         	goto	u7520
 13501  004AF2                     u7521:
 13502  004AF2  EFC3  F025         	goto	l1083
 13503  004AF6                     u7520:
 13504  004AF6  0E01               	movlw	1
 13505  004AF8  6E16               	movwf	___lomod@counter^0,c
 13506  004AFA  EF89  F025         	goto	l6447
 13507  004AFE                     l6445:
 13508  004AFE  90D8               	bcf	status,0,c
 13509  004B00  360E               	rlcf	___lomod@divisor^0,f,c
 13510  004B02  360F               	rlcf	(___lomod@divisor+1)^0,f,c
 13511  004B04  3610               	rlcf	(___lomod@divisor+2)^0,f,c
 13512  004B06  3611               	rlcf	(___lomod@divisor+3)^0,f,c
 13513  004B08  3612               	rlcf	(___lomod@divisor+4)^0,f,c
 13514  004B0A  3613               	rlcf	(___lomod@divisor+5)^0,f,c
 13515  004B0C  3614               	rlcf	(___lomod@divisor+6)^0,f,c
 13516  004B0E  3615               	rlcf	(___lomod@divisor+7)^0,f,c
 13517  004B10  2A16               	incf	___lomod@counter^0,f,c
 13518  004B12                     l6447:
 13519  004B12  AE15               	btfss	(___lomod@divisor+7)^0,7,c
 13520  004B14  EF8E  F025         	goto	u7531
 13521  004B18  EF90  F025         	goto	u7530
 13522  004B1C                     u7531:
 13523  004B1C  EF7F  F025         	goto	l6445
 13524  004B20                     u7530:
 13525  004B20                     l6449:
 13526  004B20  500E               	movf	___lomod@divisor^0,w,c
 13527  004B22  5C06               	subwf	___lomod@dividend^0,w,c
 13528  004B24  500F               	movf	(___lomod@divisor+1)^0,w,c
 13529  004B26  5807               	subwfb	(___lomod@dividend+1)^0,w,c
 13530  004B28  5010               	movf	(___lomod@divisor+2)^0,w,c
 13531  004B2A  5808               	subwfb	(___lomod@dividend+2)^0,w,c
 13532  004B2C  5011               	movf	(___lomod@divisor+3)^0,w,c
 13533  004B2E  5809               	subwfb	(___lomod@dividend+3)^0,w,c
 13534  004B30  5012               	movf	(___lomod@divisor+4)^0,w,c
 13535  004B32  580A               	subwfb	(___lomod@dividend+4)^0,w,c
 13536  004B34  5013               	movf	(___lomod@divisor+5)^0,w,c
 13537  004B36  580B               	subwfb	(___lomod@dividend+5)^0,w,c
 13538  004B38  5014               	movf	(___lomod@divisor+6)^0,w,c
 13539  004B3A  580C               	subwfb	(___lomod@dividend+6)^0,w,c
 13540  004B3C  5015               	movf	(___lomod@divisor+7)^0,w,c
 13541  004B3E  580D               	subwfb	(___lomod@dividend+7)^0,w,c
 13542  004B40  A0D8               	btfss	status,0,c
 13543  004B42  EFA5  F025         	goto	u7541
 13544  004B46  EFA7  F025         	goto	u7540
 13545  004B4A                     u7541:
 13546  004B4A  EFB7  F025         	goto	l6453
 13547  004B4E                     u7540:
 13548  004B4E  500E               	movf	___lomod@divisor^0,w,c
 13549  004B50  5E06               	subwf	___lomod@dividend^0,f,c
 13550  004B52  500F               	movf	(___lomod@divisor+1)^0,w,c
 13551  004B54  5A07               	subwfb	(___lomod@dividend+1)^0,f,c
 13552  004B56  5010               	movf	(___lomod@divisor+2)^0,w,c
 13553  004B58  5A08               	subwfb	(___lomod@dividend+2)^0,f,c
 13554  004B5A  5011               	movf	(___lomod@divisor+3)^0,w,c
 13555  004B5C  5A09               	subwfb	(___lomod@dividend+3)^0,f,c
 13556  004B5E  5012               	movf	(___lomod@divisor+4)^0,w,c
 13557  004B60  5A0A               	subwfb	(___lomod@dividend+4)^0,f,c
 13558  004B62  5013               	movf	(___lomod@divisor+5)^0,w,c
 13559  004B64  5A0B               	subwfb	(___lomod@dividend+5)^0,f,c
 13560  004B66  5014               	movf	(___lomod@divisor+6)^0,w,c
 13561  004B68  5A0C               	subwfb	(___lomod@dividend+6)^0,f,c
 13562  004B6A  5015               	movf	(___lomod@divisor+7)^0,w,c
 13563  004B6C  5A0D               	subwfb	(___lomod@dividend+7)^0,f,c
 13564  004B6E                     l6453:
 13565  004B6E  90D8               	bcf	status,0,c
 13566  004B70  3215               	rrcf	(___lomod@divisor+7)^0,f,c
 13567  004B72  3214               	rrcf	(___lomod@divisor+6)^0,f,c
 13568  004B74  3213               	rrcf	(___lomod@divisor+5)^0,f,c
 13569  004B76  3212               	rrcf	(___lomod@divisor+4)^0,f,c
 13570  004B78  3211               	rrcf	(___lomod@divisor+3)^0,f,c
 13571  004B7A  3210               	rrcf	(___lomod@divisor+2)^0,f,c
 13572  004B7C  320F               	rrcf	(___lomod@divisor+1)^0,f,c
 13573  004B7E  320E               	rrcf	___lomod@divisor^0,f,c
 13574  004B80  2E16               	decfsz	___lomod@counter^0,f,c
 13575  004B82  EF90  F025         	goto	l6449
 13576  004B86                     l1083:
 13577  004B86  C006  F006         	movff	___lomod@dividend,?___lomod
 13578  004B8A  C007  F007         	movff	___lomod@dividend+1,?___lomod+1
 13579  004B8E  C008  F008         	movff	___lomod@dividend+2,?___lomod+2
 13580  004B92  C009  F009         	movff	___lomod@dividend+3,?___lomod+3
 13581  004B96  C00A  F00A         	movff	___lomod@dividend+4,?___lomod+4
 13582  004B9A  C00B  F00B         	movff	___lomod@dividend+5,?___lomod+5
 13583  004B9E  C00C  F00C         	movff	___lomod@dividend+6,?___lomod+6
 13584  004BA2  C00D  F00D         	movff	___lomod@dividend+7,?___lomod+7
 13585  004BA6  0012               	return		;funcret
 13586  004BA8                     __end_of___lomod:
 13587                           	callstack 0
 13588                           
 13589 ;; *************** function ___lodiv *****************
 13590 ;; Defined at:
 13591 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
 13592 ;; Parameters:    Size  Location     Type
 13593 ;;  dividend        8    5[COMRAM] unsigned long long 
 13594 ;;  divisor         8   13[COMRAM] unsigned long long 
 13595 ;; Auto vars:     Size  Location     Type
 13596 ;;  quotient        8   21[COMRAM] unsigned long long 
 13597 ;;  counter         1   29[COMRAM] unsigned char 
 13598 ;; Return value:  Size  Location     Type
 13599 ;;                  8    5[COMRAM] unsigned long long 
 13600 ;; Registers used:
 13601 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13602 ;; Tracked objects:
 13603 ;;		On entry : 0/0
 13604 ;;		On exit  : 0/0
 13605 ;;		Unchanged: 0/0
 13606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13607 ;;      Params:        16       0       0       0       0       0       0
 13608 ;;      Locals:         9       0       0       0       0       0       0
 13609 ;;      Temps:          0       0       0       0       0       0       0
 13610 ;;      Totals:        25       0       0       0       0       0       0
 13611 ;;Total ram usage:       25 bytes
 13612 ;; Hardware stack levels used: 1
 13613 ;; Hardware stack levels required when called: 1
 13614 ;; This function calls:
 13615 ;;		Nothing
 13616 ;; This function is called by:
 13617 ;;		_utoa
 13618 ;; This function uses a non-reentrant model
 13619 ;;
 13620                           
 13621                           	psect	text48
 13622  004746                     __ptext48:
 13623                           	callstack 0
 13624  004746                     ___lodiv:
 13625                           	callstack 24
 13626  004746  EE20  F016         	lfsr	2,___lodiv@quotient
 13627  00474A  0E07               	movlw	7
 13628  00474C                     u7481:
 13629  00474C  6ADE               	clrf	postinc2,c
 13630  00474E  06E8               	decf	wreg,f,c
 13631  004750  E2FD               	bc	u7481
 13632  004752  500E               	movf	___lodiv@divisor^0,w,c
 13633  004754  100F               	iorwf	(___lodiv@divisor+1)^0,w,c
 13634  004756  1010               	iorwf	(___lodiv@divisor+2)^0,w,c
 13635  004758  1011               	iorwf	(___lodiv@divisor+3)^0,w,c
 13636  00475A  1012               	iorwf	(___lodiv@divisor+4)^0,w,c
 13637  00475C  1013               	iorwf	(___lodiv@divisor+5)^0,w,c
 13638  00475E  1014               	iorwf	(___lodiv@divisor+6)^0,w,c
 13639  004760  1015               	iorwf	(___lodiv@divisor+7)^0,w,c
 13640  004762  B4D8               	btfsc	status,2,c
 13641  004764  EFB6  F023         	goto	u7491
 13642  004768  EFB8  F023         	goto	u7490
 13643  00476C                     u7491:
 13644  00476C  EF0A  F024         	goto	l1073
 13645  004770                     u7490:
 13646  004770  0E01               	movlw	1
 13647  004772  6E1E               	movwf	___lodiv@counter^0,c
 13648  004774  EFC6  F023         	goto	l6427
 13649  004778                     l6425:
 13650  004778  90D8               	bcf	status,0,c
 13651  00477A  360E               	rlcf	___lodiv@divisor^0,f,c
 13652  00477C  360F               	rlcf	(___lodiv@divisor+1)^0,f,c
 13653  00477E  3610               	rlcf	(___lodiv@divisor+2)^0,f,c
 13654  004780  3611               	rlcf	(___lodiv@divisor+3)^0,f,c
 13655  004782  3612               	rlcf	(___lodiv@divisor+4)^0,f,c
 13656  004784  3613               	rlcf	(___lodiv@divisor+5)^0,f,c
 13657  004786  3614               	rlcf	(___lodiv@divisor+6)^0,f,c
 13658  004788  3615               	rlcf	(___lodiv@divisor+7)^0,f,c
 13659  00478A  2A1E               	incf	___lodiv@counter^0,f,c
 13660  00478C                     l6427:
 13661  00478C  AE15               	btfss	(___lodiv@divisor+7)^0,7,c
 13662  00478E  EFCB  F023         	goto	u7501
 13663  004792  EFCD  F023         	goto	u7500
 13664  004796                     u7501:
 13665  004796  EFBC  F023         	goto	l6425
 13666  00479A                     u7500:
 13667  00479A                     l6429:
 13668  00479A  90D8               	bcf	status,0,c
 13669  00479C  3616               	rlcf	___lodiv@quotient^0,f,c
 13670  00479E  3617               	rlcf	(___lodiv@quotient+1)^0,f,c
 13671  0047A0  3618               	rlcf	(___lodiv@quotient+2)^0,f,c
 13672  0047A2  3619               	rlcf	(___lodiv@quotient+3)^0,f,c
 13673  0047A4  361A               	rlcf	(___lodiv@quotient+4)^0,f,c
 13674  0047A6  361B               	rlcf	(___lodiv@quotient+5)^0,f,c
 13675  0047A8  361C               	rlcf	(___lodiv@quotient+6)^0,f,c
 13676  0047AA  361D               	rlcf	(___lodiv@quotient+7)^0,f,c
 13677  0047AC  500E               	movf	___lodiv@divisor^0,w,c
 13678  0047AE  5C06               	subwf	___lodiv@dividend^0,w,c
 13679  0047B0  500F               	movf	(___lodiv@divisor+1)^0,w,c
 13680  0047B2  5807               	subwfb	(___lodiv@dividend+1)^0,w,c
 13681  0047B4  5010               	movf	(___lodiv@divisor+2)^0,w,c
 13682  0047B6  5808               	subwfb	(___lodiv@dividend+2)^0,w,c
 13683  0047B8  5011               	movf	(___lodiv@divisor+3)^0,w,c
 13684  0047BA  5809               	subwfb	(___lodiv@dividend+3)^0,w,c
 13685  0047BC  5012               	movf	(___lodiv@divisor+4)^0,w,c
 13686  0047BE  580A               	subwfb	(___lodiv@dividend+4)^0,w,c
 13687  0047C0  5013               	movf	(___lodiv@divisor+5)^0,w,c
 13688  0047C2  580B               	subwfb	(___lodiv@dividend+5)^0,w,c
 13689  0047C4  5014               	movf	(___lodiv@divisor+6)^0,w,c
 13690  0047C6  580C               	subwfb	(___lodiv@dividend+6)^0,w,c
 13691  0047C8  5015               	movf	(___lodiv@divisor+7)^0,w,c
 13692  0047CA  580D               	subwfb	(___lodiv@dividend+7)^0,w,c
 13693  0047CC  A0D8               	btfss	status,0,c
 13694  0047CE  EFEB  F023         	goto	u7511
 13695  0047D2  EFED  F023         	goto	u7510
 13696  0047D6                     u7511:
 13697  0047D6  EFFE  F023         	goto	l6437
 13698  0047DA                     u7510:
 13699  0047DA  500E               	movf	___lodiv@divisor^0,w,c
 13700  0047DC  5E06               	subwf	___lodiv@dividend^0,f,c
 13701  0047DE  500F               	movf	(___lodiv@divisor+1)^0,w,c
 13702  0047E0  5A07               	subwfb	(___lodiv@dividend+1)^0,f,c
 13703  0047E2  5010               	movf	(___lodiv@divisor+2)^0,w,c
 13704  0047E4  5A08               	subwfb	(___lodiv@dividend+2)^0,f,c
 13705  0047E6  5011               	movf	(___lodiv@divisor+3)^0,w,c
 13706  0047E8  5A09               	subwfb	(___lodiv@dividend+3)^0,f,c
 13707  0047EA  5012               	movf	(___lodiv@divisor+4)^0,w,c
 13708  0047EC  5A0A               	subwfb	(___lodiv@dividend+4)^0,f,c
 13709  0047EE  5013               	movf	(___lodiv@divisor+5)^0,w,c
 13710  0047F0  5A0B               	subwfb	(___lodiv@dividend+5)^0,f,c
 13711  0047F2  5014               	movf	(___lodiv@divisor+6)^0,w,c
 13712  0047F4  5A0C               	subwfb	(___lodiv@dividend+6)^0,f,c
 13713  0047F6  5015               	movf	(___lodiv@divisor+7)^0,w,c
 13714  0047F8  5A0D               	subwfb	(___lodiv@dividend+7)^0,f,c
 13715  0047FA  8016               	bsf	___lodiv@quotient^0,0,c
 13716  0047FC                     l6437:
 13717  0047FC  90D8               	bcf	status,0,c
 13718  0047FE  3215               	rrcf	(___lodiv@divisor+7)^0,f,c
 13719  004800  3214               	rrcf	(___lodiv@divisor+6)^0,f,c
 13720  004802  3213               	rrcf	(___lodiv@divisor+5)^0,f,c
 13721  004804  3212               	rrcf	(___lodiv@divisor+4)^0,f,c
 13722  004806  3211               	rrcf	(___lodiv@divisor+3)^0,f,c
 13723  004808  3210               	rrcf	(___lodiv@divisor+2)^0,f,c
 13724  00480A  320F               	rrcf	(___lodiv@divisor+1)^0,f,c
 13725  00480C  320E               	rrcf	___lodiv@divisor^0,f,c
 13726  00480E  2E1E               	decfsz	___lodiv@counter^0,f,c
 13727  004810  EFCD  F023         	goto	l6429
 13728  004814                     l1073:
 13729  004814  C016  F006         	movff	___lodiv@quotient,?___lodiv
 13730  004818  C017  F007         	movff	___lodiv@quotient+1,?___lodiv+1
 13731  00481C  C018  F008         	movff	___lodiv@quotient+2,?___lodiv+2
 13732  004820  C019  F009         	movff	___lodiv@quotient+3,?___lodiv+3
 13733  004824  C01A  F00A         	movff	___lodiv@quotient+4,?___lodiv+4
 13734  004828  C01B  F00B         	movff	___lodiv@quotient+5,?___lodiv+5
 13735  00482C  C01C  F00C         	movff	___lodiv@quotient+6,?___lodiv+6
 13736  004830  C01D  F00D         	movff	___lodiv@quotient+7,?___lodiv+7
 13737  004834  0012               	return		;funcret
 13738  004836                     __end_of___lodiv:
 13739                           	callstack 0
 13740                           
 13741 ;; *************** function _strncmp *****************
 13742 ;; Defined at:
 13743 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
 13744 ;; Parameters:    Size  Location     Type
 13745 ;;  _l              2    5[COMRAM] PTR const unsigned char 
 13746 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 13747 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 13748 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 13749 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 13750 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 13751 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 13752 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 13753 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 13754 ;;  _r              2    7[COMRAM] PTR const unsigned char 
 13755 ;;		 -> STR_52(3), STR_48(3), STR_43(3), STR_38(3), 
 13756 ;;		 -> STR_34(3), 
 13757 ;;  n               2    9[COMRAM] unsigned int 
 13758 ;; Auto vars:     Size  Location     Type
 13759 ;;  r               2   14[COMRAM] PTR const unsigned char 
 13760 ;;		 -> STR_52(3), STR_48(3), STR_43(3), STR_38(3), 
 13761 ;;		 -> STR_34(3), 
 13762 ;;  l               2   12[COMRAM] PTR const unsigned char 
 13763 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 13764 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 13765 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 13766 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 13767 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 13768 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 13769 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 13770 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 13771 ;; Return value:  Size  Location     Type
 13772 ;;                  2    5[COMRAM] int 
 13773 ;; Registers used:
 13774 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 13775 ;; Tracked objects:
 13776 ;;		On entry : 0/0
 13777 ;;		On exit  : 0/0
 13778 ;;		Unchanged: 0/0
 13779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13780 ;;      Params:         6       0       0       0       0       0       0
 13781 ;;      Locals:         4       0       0       0       0       0       0
 13782 ;;      Temps:          1       0       0       0       0       0       0
 13783 ;;      Totals:        11       0       0       0       0       0       0
 13784 ;;Total ram usage:       11 bytes
 13785 ;; Hardware stack levels used: 1
 13786 ;; Hardware stack levels required when called: 1
 13787 ;; This function calls:
 13788 ;;		Nothing
 13789 ;; This function is called by:
 13790 ;;		_vfpfcnvrt
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           	psect	text49
 13795  0049FA                     __ptext49:
 13796                           	callstack 0
 13797  0049FA                     _strncmp:
 13798                           	callstack 25
 13799  0049FA  C006  F00D         	movff	strncmp@_l,strncmp@l
 13800  0049FE  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
 13801  004A02  C008  F00F         	movff	strncmp@_r,strncmp@r
 13802  004A06  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
 13803  004A0A  060A               	decf	strncmp@n^0,f,c
 13804  004A0C  A0D8               	btfss	status,0,c
 13805  004A0E  060B               	decf	(strncmp@n+1)^0,f,c
 13806  004A10  280A               	incf	strncmp@n^0,w,c
 13807  004A12  E106               	bnz	u8271
 13808  004A14  280B               	incf	(strncmp@n+1)^0,w,c
 13809  004A16  A4D8               	btfss	status,2,c
 13810  004A18  EF10  F025         	goto	u8271
 13811  004A1C  EF12  F025         	goto	u8270
 13812  004A20                     u8271:
 13813  004A20  EF1F  F025         	goto	l6773
 13814  004A24                     u8270:
 13815  004A24  0E00               	movlw	0
 13816  004A26  6E07               	movwf	(?_strncmp+1)^0,c
 13817  004A28  0E00               	movlw	0
 13818  004A2A  6E06               	movwf	?_strncmp^0,c
 13819  004A2C  EF6B  F025         	goto	l1591
 13820  004A30                     l6771:
 13821  004A30  4A0D               	infsnz	strncmp@l^0,f,c
 13822  004A32  2A0E               	incf	(strncmp@l+1)^0,f,c
 13823  004A34  4A0F               	infsnz	strncmp@r^0,f,c
 13824  004A36  2A10               	incf	(strncmp@r+1)^0,f,c
 13825  004A38  060A               	decf	strncmp@n^0,f,c
 13826  004A3A  A0D8               	btfss	status,0,c
 13827  004A3C  060B               	decf	(strncmp@n+1)^0,f,c
 13828  004A3E                     l6773:
 13829  004A3E  C00D  FFF6         	movff	strncmp@l,tblptrl
 13830  004A42  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 13831  004A46                     	if	0	;tblptru may be non-zero
 13832  004A46                     	endif
 13833  004A46                     	if	0	;tblptru may be non-zero
 13834  004A46                     	endif
 13835  004A46  0008               	tblrd		*
 13836  004A48  50F5               	movf	tablat,w,c
 13837  004A4A  0900               	iorlw	0
 13838  004A4C  B4D8               	btfsc	status,2,c
 13839  004A4E  EF2B  F025         	goto	u8281
 13840  004A52  EF2D  F025         	goto	u8280
 13841  004A56                     u8281:
 13842  004A56  EF59  F025         	goto	l6781
 13843  004A5A                     u8280:
 13844  004A5A  C00F  FFF6         	movff	strncmp@r,tblptrl
 13845  004A5E  C010  FFF7         	movff	strncmp@r+1,tblptrh
 13846  004A62                     	if	0	;tblptru may be non-zero
 13847  004A62                     	endif
 13848  004A62                     	if	0	;tblptru may be non-zero
 13849  004A62                     	endif
 13850  004A62  0008               	tblrd		*
 13851  004A64  50F5               	movf	tablat,w,c
 13852  004A66  0900               	iorlw	0
 13853  004A68  B4D8               	btfsc	status,2,c
 13854  004A6A  EF39  F025         	goto	u8291
 13855  004A6E  EF3B  F025         	goto	u8290
 13856  004A72                     u8291:
 13857  004A72  EF59  F025         	goto	l6781
 13858  004A76                     u8290:
 13859  004A76  500A               	movf	strncmp@n^0,w,c
 13860  004A78  100B               	iorwf	(strncmp@n+1)^0,w,c
 13861  004A7A  B4D8               	btfsc	status,2,c
 13862  004A7C  EF42  F025         	goto	u8301
 13863  004A80  EF44  F025         	goto	u8300
 13864  004A84                     u8301:
 13865  004A84  EF59  F025         	goto	l6781
 13866  004A88                     u8300:
 13867  004A88  C00D  FFF6         	movff	strncmp@l,tblptrl
 13868  004A8C  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 13869  004A90                     	if	0	;tblptru may be non-zero
 13870  004A90                     	endif
 13871  004A90                     	if	0	;tblptru may be non-zero
 13872  004A90                     	endif
 13873  004A90  0008               	tblrd		*
 13874  004A92  CFF5 F00C          	movff	tablat,??_strncmp
 13875  004A96  C00F  FFF6         	movff	strncmp@r,tblptrl
 13876  004A9A  C010  FFF7         	movff	strncmp@r+1,tblptrh
 13877  004A9E                     	if	0	;tblptru may be non-zero
 13878  004A9E                     	endif
 13879  004A9E                     	if	0	;tblptru may be non-zero
 13880  004A9E                     	endif
 13881  004A9E  0008               	tblrd		*
 13882  004AA0  50F5               	movf	tablat,w,c
 13883  004AA2  180C               	xorwf	??_strncmp^0,w,c
 13884  004AA4  B4D8               	btfsc	status,2,c
 13885  004AA6  EF57  F025         	goto	u8311
 13886  004AAA  EF59  F025         	goto	u8310
 13887  004AAE                     u8311:
 13888  004AAE  EF18  F025         	goto	l6771
 13889  004AB2                     u8310:
 13890  004AB2                     l6781:
 13891  004AB2  C00D  FFF6         	movff	strncmp@l,tblptrl
 13892  004AB6  C00E  FFF7         	movff	strncmp@l+1,tblptrh
 13893  004ABA                     	if	0	;tblptru may be non-zero
 13894  004ABA                     	endif
 13895  004ABA                     	if	0	;tblptru may be non-zero
 13896  004ABA                     	endif
 13897  004ABA  0008               	tblrd		*
 13898  004ABC  CFF5 F00C          	movff	tablat,??_strncmp
 13899  004AC0  C00F  FFF6         	movff	strncmp@r,tblptrl
 13900  004AC4  C010  FFF7         	movff	strncmp@r+1,tblptrh
 13901  004AC8                     	if	0	;tblptru may be non-zero
 13902  004AC8                     	endif
 13903  004AC8                     	if	0	;tblptru may be non-zero
 13904  004AC8                     	endif
 13905  004AC8  0008               	tblrd		*
 13906  004ACA  50F5               	movf	tablat,w,c
 13907  004ACC  5C0C               	subwf	??_strncmp^0,w,c
 13908  004ACE  6E06               	movwf	?_strncmp^0,c
 13909  004AD0  6A07               	clrf	(?_strncmp+1)^0,c
 13910  004AD2  A0D8               	btfss	status,0,c
 13911  004AD4  0607               	decf	(?_strncmp+1)^0,f,c
 13912  004AD6                     l1591:
 13913  004AD6  0012               	return		;funcret
 13914  004AD8                     __end_of_strncmp:
 13915                           	callstack 0
 13916                           
 13917 ;; *************** function _stoa *****************
 13918 ;; Defined at:
 13919 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 13920 ;; Parameters:    Size  Location     Type
 13921 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
 13922 ;;		 -> NULL(0), 
 13923 ;;  s               2   17[COMRAM] PTR unsigned char 
 13924 ;;		 -> ?_printf(2), main@fno(22), put_rc@str(69), 
 13925 ;; Auto vars:     Size  Location     Type
 13926 ;;  nuls            7   20[COMRAM] unsigned char [7]
 13927 ;;  l               2   35[COMRAM] int 
 13928 ;;  p               2   33[COMRAM] int 
 13929 ;;  cp              2   31[COMRAM] PTR unsigned char 
 13930 ;;		 -> stoa@nuls(7), ?_printf(2), main@fno(22), put_rc@str(69), 
 13931 ;;  w               2   29[COMRAM] int 
 13932 ;;  i               2   27[COMRAM] int 
 13933 ;; Return value:  Size  Location     Type
 13934 ;;                  2   15[COMRAM] int 
 13935 ;; Registers used:
 13936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13937 ;; Tracked objects:
 13938 ;;		On entry : 0/0
 13939 ;;		On exit  : 0/0
 13940 ;;		Unchanged: 0/0
 13941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13942 ;;      Params:         4       0       0       0       0       0       0
 13943 ;;      Locals:        17       0       0       0       0       0       0
 13944 ;;      Temps:          1       0       0       0       0       0       0
 13945 ;;      Totals:        22       0       0       0       0       0       0
 13946 ;;Total ram usage:       22 bytes
 13947 ;; Hardware stack levels used: 1
 13948 ;; Hardware stack levels required when called: 3
 13949 ;; This function calls:
 13950 ;;		_fputc
 13951 ;;		_strlen
 13952 ;; This function is called by:
 13953 ;;		_vfpfcnvrt
 13954 ;; This function uses a non-reentrant model
 13955 ;;
 13956                           
 13957                           	psect	text50
 13958  003530                     __ptext50:
 13959                           	callstack 0
 13960  003530                     _stoa:
 13961                           	callstack 23
 13962  003530                     
 13963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
 13964  003530  EE21  F0E1         	lfsr	2,stoa@F1141
 13965  003534  EE10  F015         	lfsr	1,stoa@nuls
 13966  003538  0E06               	movlw	6
 13967  00353A                     u7861:
 13968  00353A  CFDB FFE3          	movff	plusw2,plusw1
 13969  00353E  06E8               	decf	wreg,f,c
 13970  003540  E2FC               	bc	u7861
 13971  003542                     
 13972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
 13973  003542  C012  F020         	movff	stoa@s,stoa@cp
 13974  003546  C013  F021         	movff	stoa@s+1,stoa@cp+1
 13975  00354A                     
 13976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
 13977  00354A  5020               	movf	stoa@cp^0,w,c
 13978  00354C  1021               	iorwf	(stoa@cp+1)^0,w,c
 13979  00354E  A4D8               	btfss	status,2,c
 13980  003550  EFAC  F01A         	goto	u7871
 13981  003554  EFAE  F01A         	goto	u7870
 13982  003558                     u7871:
 13983  003558  EFB2  F01A         	goto	l6587
 13984  00355C                     u7870:
 13985  00355C                     
 13986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
 13987  00355C  0E15               	movlw	low stoa@nuls
 13988  00355E  6E20               	movwf	stoa@cp^0,c
 13989  003560  0E00               	movlw	high stoa@nuls
 13990  003562  6E21               	movwf	(stoa@cp+1)^0,c
 13991  003564                     l6587:
 13992                           
 13993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
 13994  003564  C020  F006         	movff	stoa@cp,strlen@s
 13995  003568  C021  F007         	movff	stoa@cp+1,strlen@s+1
 13996  00356C  EC25  F02A         	call	_strlen	;wreg free
 13997  003570  C006  F024         	movff	?_strlen,stoa@l
 13998  003574  C007  F025         	movff	?_strlen+1,stoa@l+1
 13999  003578                     
 14000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
 14001  003578  C076  F022         	movff	_prec,stoa@p
 14002  00357C  C077  F023         	movff	_prec+1,stoa@p+1
 14003  003580                     
 14004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
 14005  003580  BE23               	btfsc	(stoa@p+1)^0,7,c
 14006  003582  EFC5  F01A         	goto	u7881
 14007  003586  EFC7  F01A         	goto	u7880
 14008  00358A                     u7881:
 14009  00358A  EFDC  F01A         	goto	l1402
 14010  00358E                     u7880:
 14011  00358E  5024               	movf	stoa@l^0,w,c
 14012  003590  5C22               	subwf	stoa@p^0,w,c
 14013  003592  5023               	movf	(stoa@p+1)^0,w,c
 14014  003594  0A80               	xorlw	128
 14015  003596  6E14               	movwf	??_stoa^0,c
 14016  003598  5025               	movf	(stoa@l+1)^0,w,c
 14017  00359A  0A80               	xorlw	128
 14018  00359C  5814               	subwfb	??_stoa^0,w,c
 14019  00359E  A0D8               	btfss	status,0,c
 14020  0035A0  EFD4  F01A         	goto	u7891
 14021  0035A4  EFD6  F01A         	goto	u7890
 14022  0035A8                     u7891:
 14023  0035A8  EFD8  F01A         	goto	l1400
 14024  0035AC                     u7890:
 14025  0035AC  EFDC  F01A         	goto	l1402
 14026  0035B0                     l1400:
 14027  0035B0  C022  F024         	movff	stoa@p,stoa@l
 14028  0035B4  C023  F025         	movff	stoa@p+1,stoa@l+1
 14029  0035B8                     l1402:
 14030                           
 14031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
 14032  0035B8  C024  F022         	movff	stoa@l,stoa@p
 14033  0035BC  C025  F023         	movff	stoa@l+1,stoa@p+1
 14034                           
 14035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
 14036  0035C0  C0F9  F01E         	movff	_width,stoa@w
 14037  0035C4  C0FA  F01F         	movff	_width+1,stoa@w+1
 14038                           
 14039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
 14040  0035C8  B078               	btfsc	_flags^0,0,c
 14041  0035CA  EFE9  F01A         	goto	u7901
 14042  0035CE  EFEB  F01A         	goto	u7900
 14043  0035D2                     u7901:
 14044  0035D2  EF08  F01B         	goto	l6603
 14045  0035D6                     u7900:
 14046  0035D6  EFF9  F01A         	goto	l6601
 14047  0035DA                     l6597:
 14048                           
 14049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
 14050  0035DA  0E00               	movlw	0
 14051  0035DC  6E08               	movwf	(fputc@c+1)^0,c
 14052  0035DE  0E20               	movlw	32
 14053  0035E0  6E07               	movwf	fputc@c^0,c
 14054  0035E2  C010  F009         	movff	stoa@fp,fputc@fp
 14055  0035E6  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 14056  0035EA  ECF4  F027         	call	_fputc	;wreg free
 14057  0035EE                     
 14058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
 14059  0035EE  4A24               	infsnz	stoa@l^0,f,c
 14060  0035F0  2A25               	incf	(stoa@l+1)^0,f,c
 14061  0035F2                     l6601:
 14062                           
 14063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
 14064  0035F2  501E               	movf	stoa@w^0,w,c
 14065  0035F4  5C24               	subwf	stoa@l^0,w,c
 14066  0035F6  5025               	movf	(stoa@l+1)^0,w,c
 14067  0035F8  0A80               	xorlw	128
 14068  0035FA  6E14               	movwf	??_stoa^0,c
 14069  0035FC  501F               	movf	(stoa@w+1)^0,w,c
 14070  0035FE  0A80               	xorlw	128
 14071  003600  5814               	subwfb	??_stoa^0,w,c
 14072  003602  A0D8               	btfss	status,0,c
 14073  003604  EF06  F01B         	goto	u7911
 14074  003608  EF08  F01B         	goto	u7910
 14075  00360C                     u7911:
 14076  00360C  EFED  F01A         	goto	l6597
 14077  003610                     u7910:
 14078  003610                     l6603:
 14079                           
 14080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
 14081  003610  0E00               	movlw	0
 14082  003612  6E1D               	movwf	(stoa@i+1)^0,c
 14083  003614  0E00               	movlw	0
 14084  003616  6E1C               	movwf	stoa@i^0,c
 14085                           
 14086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
 14087  003618  EF2C  F01B         	goto	l6611
 14088  00361C                     l6605:
 14089                           
 14090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
 14091  00361C  C020  FFF6         	movff	stoa@cp,tblptrl
 14092  003620  C021  FFF7         	movff	stoa@cp+1,tblptrh
 14093  003624  6AF8               	clrf	tblptru,c
 14094  003626  0E05               	movlw	(high __ramtop+-1)
 14095  003628  64F7               	cpfsgt	tblptrh,c
 14096  00362A  D003               	bra	u7927
 14097  00362C  0008               	tblrd		*
 14098  00362E  50F5               	movf	tablat,w,c
 14099  003630  D005               	bra	u7920
 14100  003632                     u7927:
 14101  003632  CFF6 FFE1          	movff	tblptrl,fsr1l
 14102  003636  CFF7 FFE2          	movff	tblptrh,fsr1h
 14103  00363A  50E7               	movf	indf1,w,c
 14104  00363C                     u7920:
 14105  00363C  6E14               	movwf	??_stoa^0,c
 14106  00363E  5014               	movf	??_stoa^0,w,c
 14107  003640  6E07               	movwf	fputc@c^0,c
 14108  003642  6A08               	clrf	(fputc@c+1)^0,c
 14109  003644  C010  F009         	movff	stoa@fp,fputc@fp
 14110  003648  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 14111  00364C  ECF4  F027         	call	_fputc	;wreg free
 14112  003650                     
 14113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
 14114  003650  4A20               	infsnz	stoa@cp^0,f,c
 14115  003652  2A21               	incf	(stoa@cp+1)^0,f,c
 14116  003654                     
 14117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
 14118  003654  4A1C               	infsnz	stoa@i^0,f,c
 14119  003656  2A1D               	incf	(stoa@i+1)^0,f,c
 14120  003658                     l6611:
 14121                           
 14122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
 14123  003658  5022               	movf	stoa@p^0,w,c
 14124  00365A  5C1C               	subwf	stoa@i^0,w,c
 14125  00365C  501D               	movf	(stoa@i+1)^0,w,c
 14126  00365E  0A80               	xorlw	128
 14127  003660  6E14               	movwf	??_stoa^0,c
 14128  003662  5023               	movf	(stoa@p+1)^0,w,c
 14129  003664  0A80               	xorlw	128
 14130  003666  5814               	subwfb	??_stoa^0,w,c
 14131  003668  A0D8               	btfss	status,0,c
 14132  00366A  EF39  F01B         	goto	u7931
 14133  00366E  EF3B  F01B         	goto	u7930
 14134  003672                     u7931:
 14135  003672  EF0E  F01B         	goto	l6605
 14136  003676                     u7930:
 14137  003676                     
 14138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
 14139  003676  A078               	btfss	_flags^0,0,c
 14140  003678  EF40  F01B         	goto	u7941
 14141  00367C  EF42  F01B         	goto	u7940
 14142  003680                     u7941:
 14143  003680  EF5F  F01B         	goto	l1412
 14144  003684                     u7940:
 14145  003684  EF50  F01B         	goto	l6619
 14146  003688                     l6615:
 14147                           
 14148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
 14149  003688  0E00               	movlw	0
 14150  00368A  6E08               	movwf	(fputc@c+1)^0,c
 14151  00368C  0E20               	movlw	32
 14152  00368E  6E07               	movwf	fputc@c^0,c
 14153  003690  C010  F009         	movff	stoa@fp,fputc@fp
 14154  003694  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
 14155  003698  ECF4  F027         	call	_fputc	;wreg free
 14156  00369C                     
 14157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
 14158  00369C  4A24               	infsnz	stoa@l^0,f,c
 14159  00369E  2A25               	incf	(stoa@l+1)^0,f,c
 14160  0036A0                     l6619:
 14161                           
 14162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
 14163  0036A0  501E               	movf	stoa@w^0,w,c
 14164  0036A2  5C24               	subwf	stoa@l^0,w,c
 14165  0036A4  5025               	movf	(stoa@l+1)^0,w,c
 14166  0036A6  0A80               	xorlw	128
 14167  0036A8  6E14               	movwf	??_stoa^0,c
 14168  0036AA  501F               	movf	(stoa@w+1)^0,w,c
 14169  0036AC  0A80               	xorlw	128
 14170  0036AE  5814               	subwfb	??_stoa^0,w,c
 14171  0036B0  A0D8               	btfss	status,0,c
 14172  0036B2  EF5D  F01B         	goto	u7951
 14173  0036B6  EF5F  F01B         	goto	u7950
 14174  0036BA                     u7951:
 14175  0036BA  EF44  F01B         	goto	l6615
 14176  0036BE                     u7950:
 14177  0036BE                     l1412:
 14178                           
 14179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
 14180  0036BE  C024  F010         	movff	stoa@l,?_stoa
 14181  0036C2  C025  F011         	movff	stoa@l+1,?_stoa+1
 14182  0036C6  0012               	return		;funcret
 14183  0036C8                     __end_of_stoa:
 14184                           	callstack 0
 14185                           
 14186 ;; *************** function _dtoa *****************
 14187 ;; Defined at:
 14188 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 14189 ;; Parameters:    Size  Location     Type
 14190 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
 14191 ;;		 -> NULL(0), 
 14192 ;;  d               8   35[COMRAM] long long 
 14193 ;; Auto vars:     Size  Location     Type
 14194 ;;  n               8   59[COMRAM] long long 
 14195 ;;  i               2   67[COMRAM] int 
 14196 ;;  s               2   57[COMRAM] int 
 14197 ;;  w               2   55[COMRAM] int 
 14198 ;;  p               2   53[COMRAM] int 
 14199 ;; Return value:  Size  Location     Type
 14200 ;;                  2   33[COMRAM] int 
 14201 ;; Registers used:
 14202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14203 ;; Tracked objects:
 14204 ;;		On entry : 0/0
 14205 ;;		On exit  : 0/0
 14206 ;;		Unchanged: 0/0
 14207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14208 ;;      Params:        10       0       0       0       0       0       0
 14209 ;;      Locals:        18       0       0       0       0       0       0
 14210 ;;      Temps:          8       0       0       0       0       0       0
 14211 ;;      Totals:        36       0       0       0       0       0       0
 14212 ;;Total ram usage:       36 bytes
 14213 ;; Hardware stack levels used: 1
 14214 ;; Hardware stack levels required when called: 5
 14215 ;; This function calls:
 14216 ;;		___aodiv
 14217 ;;		___aomod
 14218 ;;		_abs
 14219 ;;		_pad
 14220 ;; This function is called by:
 14221 ;;		_vfpfcnvrt
 14222 ;; This function uses a non-reentrant model
 14223 ;;
 14224                           
 14225                           	psect	text51
 14226  001E5A                     __ptext51:
 14227                           	callstack 0
 14228  001E5A                     _dtoa:
 14229                           	callstack 21
 14230  001E5A                     
 14231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 14232  001E5A  C024  F03C         	movff	dtoa@d,dtoa@n
 14233  001E5E  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
 14234  001E62  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
 14235  001E66  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
 14236  001E6A  C028  F040         	movff	dtoa@d+4,dtoa@n+4
 14237  001E6E  C029  F041         	movff	dtoa@d+5,dtoa@n+5
 14238  001E72  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
 14239  001E76  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
 14240  001E7A                     
 14241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 14242  001E7A  BE43               	btfsc	(dtoa@n+7)^0,7,c
 14243  001E7C  EF42  F00F         	goto	u7711
 14244  001E80  EF45  F00F         	goto	u7710
 14245  001E84                     u7711:
 14246  001E84  0E01               	movlw	1
 14247  001E86  EF46  F00F         	goto	u7720
 14248  001E8A                     u7710:
 14249  001E8A  0E00               	movlw	0
 14250  001E8C                     u7720:
 14251  001E8C  6E3A               	movwf	dtoa@s^0,c
 14252  001E8E  6A3B               	clrf	(dtoa@s+1)^0,c
 14253                           
 14254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 14255  001E90  503A               	movf	dtoa@s^0,w,c
 14256  001E92  103B               	iorwf	(dtoa@s+1)^0,w,c
 14257  001E94  B4D8               	btfsc	status,2,c
 14258  001E96  EF4F  F00F         	goto	u7731
 14259  001E9A  EF51  F00F         	goto	u7730
 14260  001E9E                     u7731:
 14261  001E9E  EF61  F00F         	goto	l6523
 14262  001EA2                     u7730:
 14263  001EA2                     
 14264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 14265  001EA2  1E43               	comf	(dtoa@n+7)^0,f,c
 14266  001EA4  1E42               	comf	(dtoa@n+6)^0,f,c
 14267  001EA6  1E41               	comf	(dtoa@n+5)^0,f,c
 14268  001EA8  1E40               	comf	(dtoa@n+4)^0,f,c
 14269  001EAA  1E3F               	comf	(dtoa@n+3)^0,f,c
 14270  001EAC  1E3E               	comf	(dtoa@n+2)^0,f,c
 14271  001EAE  1E3D               	comf	(dtoa@n+1)^0,f,c
 14272  001EB0  6C3C               	negf	dtoa@n^0,c
 14273  001EB2  0E00               	movlw	0
 14274  001EB4  223D               	addwfc	(dtoa@n+1)^0,f,c
 14275  001EB6  223E               	addwfc	(dtoa@n+2)^0,f,c
 14276  001EB8  223F               	addwfc	(dtoa@n+3)^0,f,c
 14277  001EBA  2240               	addwfc	(dtoa@n+4)^0,f,c
 14278  001EBC  2241               	addwfc	(dtoa@n+5)^0,f,c
 14279  001EBE  2242               	addwfc	(dtoa@n+6)^0,f,c
 14280  001EC0  2243               	addwfc	(dtoa@n+7)^0,f,c
 14281  001EC2                     l6523:
 14282                           
 14283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 14284  001EC2  BE77               	btfsc	(_prec+1)^0,7,c
 14285  001EC4  EF66  F00F         	goto	u7741
 14286  001EC8  EF68  F00F         	goto	u7740
 14287  001ECC                     u7741:
 14288  001ECC  EF69  F00F         	goto	l6527
 14289  001ED0                     u7740:
 14290  001ED0                     
 14291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 14292  001ED0  9278               	bcf	_flags^0,1,c
 14293  001ED2                     l6527:
 14294                           
 14295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 14296  001ED2  BE77               	btfsc	(_prec+1)^0,7,c
 14297  001ED4  EF76  F00F         	goto	u7750
 14298  001ED8  5077               	movf	(_prec+1)^0,w,c
 14299  001EDA  E106               	bnz	u7751
 14300  001EDC  0476               	decf	_prec^0,w,c
 14301  001EDE  B0D8               	btfsc	status,0,c
 14302  001EE0  EF74  F00F         	goto	u7751
 14303  001EE4  EF76  F00F         	goto	u7750
 14304  001EE8                     u7751:
 14305  001EE8  EF7C  F00F         	goto	l1373
 14306  001EEC                     u7750:
 14307  001EEC  0E00               	movlw	0
 14308  001EEE  6E37               	movwf	(dtoa@p+1)^0,c
 14309  001EF0  0E01               	movlw	1
 14310  001EF2  6E36               	movwf	dtoa@p^0,c
 14311  001EF4  EF80  F00F         	goto	l1375
 14312  001EF8                     l1373:
 14313  001EF8  C076  F036         	movff	_prec,dtoa@p
 14314  001EFC  C077  F037         	movff	_prec+1,dtoa@p+1
 14315  001F00                     l1375:
 14316                           
 14317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 14318  001F00  C0F9  F038         	movff	_width,dtoa@w
 14319  001F04  C0FA  F039         	movff	_width+1,dtoa@w+1
 14320  001F08                     
 14321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 14322  001F08  503A               	movf	dtoa@s^0,w,c
 14323  001F0A  103B               	iorwf	(dtoa@s+1)^0,w,c
 14324  001F0C  A4D8               	btfss	status,2,c
 14325  001F0E  EF8B  F00F         	goto	u7761
 14326  001F12  EF8D  F00F         	goto	u7760
 14327  001F16                     u7761:
 14328  001F16  EF94  F00F         	goto	l6535
 14329  001F1A                     u7760:
 14330  001F1A  A478               	btfss	_flags^0,2,c
 14331  001F1C  EF92  F00F         	goto	u7771
 14332  001F20  EF94  F00F         	goto	u7770
 14333  001F24                     u7771:
 14334  001F24  EF97  F00F         	goto	l6537
 14335  001F28                     u7770:
 14336  001F28                     l6535:
 14337                           
 14338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 14339  001F28  0638               	decf	dtoa@w^0,f,c
 14340  001F2A  A0D8               	btfss	status,0,c
 14341  001F2C  0639               	decf	(dtoa@w+1)^0,f,c
 14342  001F2E                     l6537:
 14343                           
 14344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 14345  001F2E  0E00               	movlw	0
 14346  001F30  6E45               	movwf	(dtoa@i+1)^0,c
 14347  001F32  0E1F               	movlw	31
 14348  001F34  6E44               	movwf	dtoa@i^0,c
 14349  001F36                     
 14350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 14351  001F36  0E00               	movlw	0
 14352  001F38  0101               	movlb	1	; () banked
 14353  001F3A  6FE0               	movwf	(_dbuf+31)& (0+255),b
 14354                           
 14355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14356  001F3C  EF1C  F010         	goto	l6551
 14357  001F40                     l6541:
 14358                           
 14359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 14360  001F40  0644               	decf	dtoa@i^0,f,c
 14361  001F42  A0D8               	btfss	status,0,c
 14362  001F44  0645               	decf	(dtoa@i+1)^0,f,c
 14363  001F46                     
 14364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 14365  001F46  0EC1               	movlw	low _dbuf
 14366  001F48  2444               	addwf	dtoa@i^0,w,c
 14367  001F4A  6ED9               	movwf	fsr2l,c
 14368  001F4C  0E01               	movlw	high _dbuf
 14369  001F4E  2045               	addwfc	(dtoa@i+1)^0,w,c
 14370  001F50  6EDA               	movwf	fsr2h,c
 14371  001F52  C03C  F006         	movff	dtoa@n,___aomod@dividend
 14372  001F56  C03D  F007         	movff	dtoa@n+1,___aomod@dividend+1
 14373  001F5A  C03E  F008         	movff	dtoa@n+2,___aomod@dividend+2
 14374  001F5E  C03F  F009         	movff	dtoa@n+3,___aomod@dividend+3
 14375  001F62  C040  F00A         	movff	dtoa@n+4,___aomod@dividend+4
 14376  001F66  C041  F00B         	movff	dtoa@n+5,___aomod@dividend+5
 14377  001F6A  C042  F00C         	movff	dtoa@n+6,___aomod@dividend+6
 14378  001F6E  C043  F00D         	movff	dtoa@n+7,___aomod@dividend+7
 14379  001F72  0E0A               	movlw	10
 14380  001F74  6E0E               	movwf	___aomod@divisor^0,c
 14381  001F76  0E00               	movlw	0
 14382  001F78  6E0F               	movwf	(___aomod@divisor+1)^0,c
 14383  001F7A  0E00               	movlw	0
 14384  001F7C  6E10               	movwf	(___aomod@divisor+2)^0,c
 14385  001F7E  0E00               	movlw	0
 14386  001F80  6E11               	movwf	(___aomod@divisor+3)^0,c
 14387  001F82  0E00               	movlw	0
 14388  001F84  6E12               	movwf	(___aomod@divisor+4)^0,c
 14389  001F86  0E00               	movlw	0
 14390  001F88  6E13               	movwf	(___aomod@divisor+5)^0,c
 14391  001F8A  0E00               	movlw	0
 14392  001F8C  6E14               	movwf	(___aomod@divisor+6)^0,c
 14393  001F8E  0E00               	movlw	0
 14394  001F90  6E15               	movwf	(___aomod@divisor+7)^0,c
 14395  001F92  EC9A  F020         	call	___aomod	;wreg free
 14396  001F96  C006  F02C         	movff	?___aomod,??_dtoa
 14397  001F9A  C007  F02D         	movff	?___aomod+1,??_dtoa+1
 14398  001F9E  C008  F02E         	movff	?___aomod+2,??_dtoa+2
 14399  001FA2  C009  F02F         	movff	?___aomod+3,??_dtoa+3
 14400  001FA6  C00A  F030         	movff	?___aomod+4,??_dtoa+4
 14401  001FAA  C00B  F031         	movff	?___aomod+5,??_dtoa+5
 14402  001FAE  C00C  F032         	movff	?___aomod+6,??_dtoa+6
 14403  001FB2  C00D  F033         	movff	?___aomod+7,??_dtoa+7
 14404  001FB6  C02C  F018         	movff	??_dtoa,abs@a
 14405  001FBA  C02E  F019         	movff	??_dtoa+2,abs@a+1
 14406  001FBE  EC6E  F02A         	call	_abs	;wreg free
 14407  001FC2  5018               	movf	?_abs^0,w,c
 14408  001FC4  0F30               	addlw	48
 14409  001FC6  6EDF               	movwf	indf2,c
 14410  001FC8                     
 14411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 14412  001FC8  0636               	decf	dtoa@p^0,f,c
 14413  001FCA  A0D8               	btfss	status,0,c
 14414  001FCC  0637               	decf	(dtoa@p+1)^0,f,c
 14415  001FCE                     
 14416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 14417  001FCE  0638               	decf	dtoa@w^0,f,c
 14418  001FD0  A0D8               	btfss	status,0,c
 14419  001FD2  0639               	decf	(dtoa@w+1)^0,f,c
 14420  001FD4                     
 14421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 14422  001FD4  C03C  F006         	movff	dtoa@n,___aodiv@dividend
 14423  001FD8  C03D  F007         	movff	dtoa@n+1,___aodiv@dividend+1
 14424  001FDC  C03E  F008         	movff	dtoa@n+2,___aodiv@dividend+2
 14425  001FE0  C03F  F009         	movff	dtoa@n+3,___aodiv@dividend+3
 14426  001FE4  C040  F00A         	movff	dtoa@n+4,___aodiv@dividend+4
 14427  001FE8  C041  F00B         	movff	dtoa@n+5,___aodiv@dividend+5
 14428  001FEC  C042  F00C         	movff	dtoa@n+6,___aodiv@dividend+6
 14429  001FF0  C043  F00D         	movff	dtoa@n+7,___aodiv@dividend+7
 14430  001FF4  0E0A               	movlw	10
 14431  001FF6  6E0E               	movwf	___aodiv@divisor^0,c
 14432  001FF8  0E00               	movlw	0
 14433  001FFA  6E0F               	movwf	(___aodiv@divisor+1)^0,c
 14434  001FFC  0E00               	movlw	0
 14435  001FFE  6E10               	movwf	(___aodiv@divisor+2)^0,c
 14436  002000  0E00               	movlw	0
 14437  002002  6E11               	movwf	(___aodiv@divisor+3)^0,c
 14438  002004  0E00               	movlw	0
 14439  002006  6E12               	movwf	(___aodiv@divisor+4)^0,c
 14440  002008  0E00               	movlw	0
 14441  00200A  6E13               	movwf	(___aodiv@divisor+5)^0,c
 14442  00200C  0E00               	movlw	0
 14443  00200E  6E14               	movwf	(___aodiv@divisor+6)^0,c
 14444  002010  0E00               	movlw	0
 14445  002012  6E15               	movwf	(___aodiv@divisor+7)^0,c
 14446  002014  ECF4  F01C         	call	___aodiv	;wreg free
 14447  002018  C006  F03C         	movff	?___aodiv,dtoa@n
 14448  00201C  C007  F03D         	movff	?___aodiv+1,dtoa@n+1
 14449  002020  C008  F03E         	movff	?___aodiv+2,dtoa@n+2
 14450  002024  C009  F03F         	movff	?___aodiv+3,dtoa@n+3
 14451  002028  C00A  F040         	movff	?___aodiv+4,dtoa@n+4
 14452  00202C  C00B  F041         	movff	?___aodiv+5,dtoa@n+5
 14453  002030  C00C  F042         	movff	?___aodiv+6,dtoa@n+6
 14454  002034  C00D  F043         	movff	?___aodiv+7,dtoa@n+7
 14455  002038                     l6551:
 14456                           
 14457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14458  002038  BE45               	btfsc	(dtoa@i+1)^0,7,c
 14459  00203A  EF27  F010         	goto	u7781
 14460  00203E  5045               	movf	(dtoa@i+1)^0,w,c
 14461  002040  E108               	bnz	u7780
 14462  002042  0444               	decf	dtoa@i^0,w,c
 14463  002044  A0D8               	btfss	status,0,c
 14464  002046  EF27  F010         	goto	u7781
 14465  00204A  EF29  F010         	goto	u7780
 14466  00204E                     u7781:
 14467  00204E  EF59  F010         	goto	l6561
 14468  002052                     u7780:
 14469  002052  503C               	movf	dtoa@n^0,w,c
 14470  002054  103D               	iorwf	(dtoa@n+1)^0,w,c
 14471  002056  103E               	iorwf	(dtoa@n+2)^0,w,c
 14472  002058  103F               	iorwf	(dtoa@n+3)^0,w,c
 14473  00205A  1040               	iorwf	(dtoa@n+4)^0,w,c
 14474  00205C  1041               	iorwf	(dtoa@n+5)^0,w,c
 14475  00205E  1042               	iorwf	(dtoa@n+6)^0,w,c
 14476  002060  1043               	iorwf	(dtoa@n+7)^0,w,c
 14477  002062  A4D8               	btfss	status,2,c
 14478  002064  EF36  F010         	goto	u7791
 14479  002068  EF38  F010         	goto	u7790
 14480  00206C                     u7791:
 14481  00206C  EFA0  F00F         	goto	l6541
 14482  002070                     u7790:
 14483  002070  BE37               	btfsc	(dtoa@p+1)^0,7,c
 14484  002072  EF45  F010         	goto	u7800
 14485  002076  5037               	movf	(dtoa@p+1)^0,w,c
 14486  002078  E106               	bnz	u7801
 14487  00207A  0436               	decf	dtoa@p^0,w,c
 14488  00207C  B0D8               	btfsc	status,0,c
 14489  00207E  EF43  F010         	goto	u7801
 14490  002082  EF45  F010         	goto	u7800
 14491  002086                     u7801:
 14492  002086  EFA0  F00F         	goto	l6541
 14493  00208A                     u7800:
 14494  00208A  BE39               	btfsc	(dtoa@w+1)^0,7,c
 14495  00208C  EF50  F010         	goto	u7811
 14496  002090  5039               	movf	(dtoa@w+1)^0,w,c
 14497  002092  E108               	bnz	u7810
 14498  002094  0438               	decf	dtoa@w^0,w,c
 14499  002096  A0D8               	btfss	status,0,c
 14500  002098  EF50  F010         	goto	u7811
 14501  00209C  EF52  F010         	goto	u7810
 14502  0020A0                     u7811:
 14503  0020A0  EF59  F010         	goto	l6561
 14504  0020A4                     u7810:
 14505  0020A4  B278               	btfsc	_flags^0,1,c
 14506  0020A6  EF57  F010         	goto	u7821
 14507  0020AA  EF59  F010         	goto	u7820
 14508  0020AE                     u7821:
 14509  0020AE  EFA0  F00F         	goto	l6541
 14510  0020B2                     u7820:
 14511  0020B2                     l6561:
 14512                           
 14513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 14514  0020B2  503A               	movf	dtoa@s^0,w,c
 14515  0020B4  103B               	iorwf	(dtoa@s+1)^0,w,c
 14516  0020B6  A4D8               	btfss	status,2,c
 14517  0020B8  EF60  F010         	goto	u7831
 14518  0020BC  EF62  F010         	goto	u7830
 14519  0020C0                     u7831:
 14520  0020C0  EF69  F010         	goto	l6565
 14521  0020C4                     u7830:
 14522  0020C4  A478               	btfss	_flags^0,2,c
 14523  0020C6  EF67  F010         	goto	u7841
 14524  0020CA  EF69  F010         	goto	u7840
 14525  0020CE                     u7841:
 14526  0020CE  EF87  F010         	goto	l6575
 14527  0020D2                     u7840:
 14528  0020D2                     l6565:
 14529                           
 14530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 14531  0020D2  0644               	decf	dtoa@i^0,f,c
 14532  0020D4  A0D8               	btfss	status,0,c
 14533  0020D6  0645               	decf	(dtoa@i+1)^0,f,c
 14534  0020D8                     
 14535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 14536  0020D8  503A               	movf	dtoa@s^0,w,c
 14537  0020DA  103B               	iorwf	(dtoa@s+1)^0,w,c
 14538  0020DC  A4D8               	btfss	status,2,c
 14539  0020DE  EF73  F010         	goto	u7851
 14540  0020E2  EF75  F010         	goto	u7850
 14541  0020E6                     u7851:
 14542  0020E6  EF7B  F010         	goto	l6571
 14543  0020EA                     u7850:
 14544  0020EA  0E00               	movlw	0
 14545  0020EC  6E35               	movwf	(_dtoa$1753+1)^0,c
 14546  0020EE  0E2B               	movlw	43
 14547  0020F0  6E34               	movwf	_dtoa$1753^0,c
 14548  0020F2  EF7F  F010         	goto	l6573
 14549  0020F6                     l6571:
 14550  0020F6  0E00               	movlw	0
 14551  0020F8  6E35               	movwf	(_dtoa$1753+1)^0,c
 14552  0020FA  0E2D               	movlw	45
 14553  0020FC  6E34               	movwf	_dtoa$1753^0,c
 14554  0020FE                     l6573:
 14555  0020FE  0EC1               	movlw	low _dbuf
 14556  002100  2444               	addwf	dtoa@i^0,w,c
 14557  002102  6ED9               	movwf	fsr2l,c
 14558  002104  0E01               	movlw	high _dbuf
 14559  002106  2045               	addwfc	(dtoa@i+1)^0,w,c
 14560  002108  6EDA               	movwf	fsr2h,c
 14561  00210A  C034  FFDF         	movff	_dtoa$1753,indf2
 14562  00210E                     l6575:
 14563                           
 14564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 14565  00210E  C022  F017         	movff	dtoa@fp,pad@fp
 14566  002112  C023  F018         	movff	dtoa@fp+1,pad@fp+1
 14567  002116  0EC1               	movlw	low _dbuf
 14568  002118  2444               	addwf	dtoa@i^0,w,c
 14569  00211A  6E19               	movwf	pad@buf^0,c
 14570  00211C  0E01               	movlw	high _dbuf
 14571  00211E  2045               	addwfc	(dtoa@i+1)^0,w,c
 14572  002120  6E1A               	movwf	(pad@buf+1)^0,c
 14573  002122  C038  F01B         	movff	dtoa@w,pad@p
 14574  002126  C039  F01C         	movff	dtoa@w+1,pad@p+1
 14575  00212A  EC9D  F026         	call	_pad	;wreg free
 14576  00212E  C017  F022         	movff	?_pad,?_dtoa
 14577  002132  C018  F023         	movff	?_pad+1,?_dtoa+1
 14578  002136  0012               	return		;funcret
 14579  002138                     __end_of_dtoa:
 14580                           	callstack 0
 14581                           
 14582 ;; *************** function _pad *****************
 14583 ;; Defined at:
 14584 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 14587 ;;		 -> NULL(0), 
 14588 ;;  buf             2   24[COMRAM] PTR unsigned char 
 14589 ;;		 -> dbuf(32), 
 14590 ;;  p               2   26[COMRAM] int 
 14591 ;; Auto vars:     Size  Location     Type
 14592 ;;  w               2   31[COMRAM] int 
 14593 ;;  i               2   29[COMRAM] int 
 14594 ;; Return value:  Size  Location     Type
 14595 ;;                  2   22[COMRAM] int 
 14596 ;; Registers used:
 14597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14598 ;; Tracked objects:
 14599 ;;		On entry : 0/0
 14600 ;;		On exit  : 0/0
 14601 ;;		Unchanged: 0/0
 14602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14603 ;;      Params:         6       0       0       0       0       0       0
 14604 ;;      Locals:         4       0       0       0       0       0       0
 14605 ;;      Temps:          1       0       0       0       0       0       0
 14606 ;;      Totals:        11       0       0       0       0       0       0
 14607 ;;Total ram usage:       11 bytes
 14608 ;; Hardware stack levels used: 1
 14609 ;; Hardware stack levels required when called: 4
 14610 ;; This function calls:
 14611 ;;		_fputc
 14612 ;;		_fputs
 14613 ;;		_strlen
 14614 ;; This function is called by:
 14615 ;;		_dtoa
 14616 ;;		_utoa
 14617 ;;		_xtoa
 14618 ;; This function uses a non-reentrant model
 14619 ;;
 14620                           
 14621                           	psect	text52
 14622  004D3A                     __ptext52:
 14623                           	callstack 0
 14624  004D3A                     _pad:
 14625                           	callstack 21
 14626  004D3A                     
 14627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 14628  004D3A  A078               	btfss	_flags^0,0,c
 14629  004D3C  EFA2  F026         	goto	u7551
 14630  004D40  EFA4  F026         	goto	u7550
 14631  004D44                     u7551:
 14632  004D44  EFAE  F026         	goto	l6461
 14633  004D48                     u7550:
 14634  004D48                     
 14635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 14636  004D48  C019  F010         	movff	pad@buf,fputs@s
 14637  004D4C  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14638  004D50  C017  F012         	movff	pad@fp,fputs@fp
 14639  004D54  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14640  004D58  EC4C  F02A         	call	_fputs	;wreg free
 14641  004D5C                     l6461:
 14642                           
 14643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 14644  004D5C  BE1C               	btfsc	(pad@p+1)^0,7,c
 14645  004D5E  EFB3  F026         	goto	u7561
 14646  004D62  EFB5  F026         	goto	u7560
 14647  004D66                     u7561:
 14648  004D66  EFBB  F026         	goto	l6465
 14649  004D6A                     u7560:
 14650  004D6A  C01B  F020         	movff	pad@p,pad@w
 14651  004D6E  C01C  F021         	movff	pad@p+1,pad@w+1
 14652  004D72  EFBF  F026         	goto	l1362
 14653  004D76                     l6465:
 14654  004D76  0E00               	movlw	0
 14655  004D78  6E21               	movwf	(pad@w+1)^0,c
 14656  004D7A  0E00               	movlw	0
 14657  004D7C  6E20               	movwf	pad@w^0,c
 14658  004D7E                     l1362:
 14659                           
 14660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 14661  004D7E  0E00               	movlw	0
 14662  004D80  6E1F               	movwf	(pad@i+1)^0,c
 14663  004D82  0E00               	movlw	0
 14664  004D84  6E1E               	movwf	pad@i^0,c
 14665                           
 14666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 14667  004D86  EFD1  F026         	goto	l6471
 14668  004D8A                     l6467:
 14669                           
 14670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 14671  004D8A  0E00               	movlw	0
 14672  004D8C  6E08               	movwf	(fputc@c+1)^0,c
 14673  004D8E  0E20               	movlw	32
 14674  004D90  6E07               	movwf	fputc@c^0,c
 14675  004D92  C017  F009         	movff	pad@fp,fputc@fp
 14676  004D96  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 14677  004D9A  ECF4  F027         	call	_fputc	;wreg free
 14678  004D9E                     
 14679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 14680  004D9E  4A1E               	infsnz	pad@i^0,f,c
 14681  004DA0  2A1F               	incf	(pad@i+1)^0,f,c
 14682  004DA2                     l6471:
 14683                           
 14684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 14685  004DA2  5020               	movf	pad@w^0,w,c
 14686  004DA4  5C1E               	subwf	pad@i^0,w,c
 14687  004DA6  501F               	movf	(pad@i+1)^0,w,c
 14688  004DA8  0A80               	xorlw	128
 14689  004DAA  6E1D               	movwf	??_pad^0,c
 14690  004DAC  5021               	movf	(pad@w+1)^0,w,c
 14691  004DAE  0A80               	xorlw	128
 14692  004DB0  581D               	subwfb	??_pad^0,w,c
 14693  004DB2  A0D8               	btfss	status,0,c
 14694  004DB4  EFDE  F026         	goto	u7571
 14695  004DB8  EFE0  F026         	goto	u7570
 14696  004DBC                     u7571:
 14697  004DBC  EFC5  F026         	goto	l6467
 14698  004DC0                     u7570:
 14699  004DC0                     
 14700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 14701  004DC0  B078               	btfsc	_flags^0,0,c
 14702  004DC2  EFE5  F026         	goto	u7581
 14703  004DC6  EFE7  F026         	goto	u7580
 14704  004DCA                     u7581:
 14705  004DCA  EFF1  F026         	goto	l6475
 14706  004DCE                     u7580:
 14707  004DCE                     
 14708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 14709  004DCE  C019  F010         	movff	pad@buf,fputs@s
 14710  004DD2  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14711  004DD6  C017  F012         	movff	pad@fp,fputs@fp
 14712  004DDA  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14713  004DDE  EC4C  F02A         	call	_fputs	;wreg free
 14714  004DE2                     l6475:
 14715                           
 14716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 14717  004DE2  C019  F006         	movff	pad@buf,strlen@s
 14718  004DE6  C01A  F007         	movff	pad@buf+1,strlen@s+1
 14719  004DEA  EC25  F02A         	call	_strlen	;wreg free
 14720  004DEE  5020               	movf	pad@w^0,w,c
 14721  004DF0  2406               	addwf	?_strlen^0,w,c
 14722  004DF2  6E17               	movwf	?_pad^0,c
 14723  004DF4  5021               	movf	(pad@w+1)^0,w,c
 14724  004DF6  2007               	addwfc	(?_strlen+1)^0,w,c
 14725  004DF8  6E18               	movwf	(?_pad+1)^0,c
 14726  004DFA  0012               	return		;funcret
 14727  004DFC                     __end_of_pad:
 14728                           	callstack 0
 14729                           
 14730 ;; *************** function _strlen *****************
 14731 ;; Defined at:
 14732 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 14733 ;; Parameters:    Size  Location     Type
 14734 ;;  s               2    5[COMRAM] PTR const unsigned char 
 14735 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), main@fno(22), 
 14736 ;;		 -> put_rc@str(69), 
 14737 ;; Auto vars:     Size  Location     Type
 14738 ;;  a               2    7[COMRAM] PTR const unsigned char 
 14739 ;;		 -> stoa@nuls(7), dbuf(32), ?_printf(2), main@fno(22), 
 14740 ;;		 -> put_rc@str(69), 
 14741 ;; Return value:  Size  Location     Type
 14742 ;;                  2    5[COMRAM] unsigned int 
 14743 ;; Registers used:
 14744 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 14745 ;; Tracked objects:
 14746 ;;		On entry : 0/0
 14747 ;;		On exit  : 0/0
 14748 ;;		Unchanged: 0/0
 14749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14750 ;;      Params:         2       0       0       0       0       0       0
 14751 ;;      Locals:         2       0       0       0       0       0       0
 14752 ;;      Temps:          0       0       0       0       0       0       0
 14753 ;;      Totals:         4       0       0       0       0       0       0
 14754 ;;Total ram usage:        4 bytes
 14755 ;; Hardware stack levels used: 1
 14756 ;; Hardware stack levels required when called: 1
 14757 ;; This function calls:
 14758 ;;		Nothing
 14759 ;; This function is called by:
 14760 ;;		_pad
 14761 ;;		_stoa
 14762 ;; This function uses a non-reentrant model
 14763 ;;
 14764                           
 14765                           	psect	text53
 14766  00544A                     __ptext53:
 14767                           	callstack 0
 14768  00544A                     _strlen:
 14769                           	callstack 23
 14770  00544A  C006  F008         	movff	strlen@s,strlen@a
 14771  00544E  C007  F009         	movff	strlen@s+1,strlen@a+1
 14772  005452  EF2D  F02A         	goto	l6323
 14773  005456                     l6321:
 14774  005456  4A06               	infsnz	strlen@s^0,f,c
 14775  005458  2A07               	incf	(strlen@s+1)^0,f,c
 14776  00545A                     l6323:
 14777  00545A  C006  FFF6         	movff	strlen@s,tblptrl
 14778  00545E  C007  FFF7         	movff	strlen@s+1,tblptrh
 14779  005462  6AF8               	clrf	tblptru,c
 14780  005464  0E05               	movlw	(high __ramtop+-1)
 14781  005466  64F7               	cpfsgt	tblptrh,c
 14782  005468  D003               	bra	u7317
 14783  00546A  0008               	tblrd		*
 14784  00546C  50F5               	movf	tablat,w,c
 14785  00546E  D005               	bra	u7310
 14786  005470                     u7317:
 14787  005470  CFF6 FFE1          	movff	tblptrl,fsr1l
 14788  005474  CFF7 FFE2          	movff	tblptrh,fsr1h
 14789  005478  50E7               	movf	indf1,w,c
 14790  00547A                     u7310:
 14791  00547A  0900               	iorlw	0
 14792  00547C  A4D8               	btfss	status,2,c
 14793  00547E  EF43  F02A         	goto	u7321
 14794  005482  EF45  F02A         	goto	u7320
 14795  005486                     u7321:
 14796  005486  EF2B  F02A         	goto	l6321
 14797  00548A                     u7320:
 14798  00548A  5008               	movf	strlen@a^0,w,c
 14799  00548C  5C06               	subwf	strlen@s^0,w,c
 14800  00548E  6E06               	movwf	?_strlen^0,c
 14801  005490  5009               	movf	(strlen@a+1)^0,w,c
 14802  005492  5807               	subwfb	(strlen@s+1)^0,w,c
 14803  005494  6E07               	movwf	(?_strlen+1)^0,c
 14804  005496  0012               	return		;funcret
 14805  005498                     __end_of_strlen:
 14806                           	callstack 0
 14807                           
 14808 ;; *************** function _fputs *****************
 14809 ;; Defined at:
 14810 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 14811 ;; Parameters:    Size  Location     Type
 14812 ;;  s               2   15[COMRAM] PTR const unsigned char 
 14813 ;;		 -> dbuf(32), 
 14814 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 14815 ;;		 -> NULL(0), 
 14816 ;; Auto vars:     Size  Location     Type
 14817 ;;  i               2   20[COMRAM] int 
 14818 ;;  c               1   19[COMRAM] unsigned char 
 14819 ;; Return value:  Size  Location     Type
 14820 ;;                  2   15[COMRAM] int 
 14821 ;; Registers used:
 14822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14823 ;; Tracked objects:
 14824 ;;		On entry : 0/0
 14825 ;;		On exit  : 0/0
 14826 ;;		Unchanged: 0/0
 14827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14828 ;;      Params:         4       0       0       0       0       0       0
 14829 ;;      Locals:         3       0       0       0       0       0       0
 14830 ;;      Temps:          0       0       0       0       0       0       0
 14831 ;;      Totals:         7       0       0       0       0       0       0
 14832 ;;Total ram usage:        7 bytes
 14833 ;; Hardware stack levels used: 1
 14834 ;; Hardware stack levels required when called: 3
 14835 ;; This function calls:
 14836 ;;		_fputc
 14837 ;; This function is called by:
 14838 ;;		_pad
 14839 ;; This function uses a non-reentrant model
 14840 ;;
 14841                           
 14842                           	psect	text54
 14843  005498                     __ptext54:
 14844                           	callstack 0
 14845  005498                     _fputs:
 14846                           	callstack 21
 14847  005498  0E00               	movlw	0
 14848  00549A  6E16               	movwf	(fputs@i+1)^0,c
 14849  00549C  0E00               	movlw	0
 14850  00549E  6E15               	movwf	fputs@i^0,c
 14851  0054A0  EF5D  F02A         	goto	l6317
 14852  0054A4                     l6313:
 14853  0054A4  C014  F007         	movff	fputs@c,fputc@c
 14854  0054A8  6A08               	clrf	(fputc@c+1)^0,c
 14855  0054AA  C012  F009         	movff	fputs@fp,fputc@fp
 14856  0054AE  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 14857  0054B2  ECF4  F027         	call	_fputc	;wreg free
 14858  0054B6  4A15               	infsnz	fputs@i^0,f,c
 14859  0054B8  2A16               	incf	(fputs@i+1)^0,f,c
 14860  0054BA                     l6317:
 14861  0054BA  5015               	movf	fputs@i^0,w,c
 14862  0054BC  2410               	addwf	fputs@s^0,w,c
 14863  0054BE  6ED9               	movwf	fsr2l,c
 14864  0054C0  5016               	movf	(fputs@i+1)^0,w,c
 14865  0054C2  2011               	addwfc	(fputs@s+1)^0,w,c
 14866  0054C4  6EDA               	movwf	fsr2h,c
 14867  0054C6  50DF               	movf	indf2,w,c
 14868  0054C8  6E14               	movwf	fputs@c^0,c
 14869  0054CA  5014               	movf	fputs@c^0,w,c
 14870  0054CC  A4D8               	btfss	status,2,c
 14871  0054CE  EF6B  F02A         	goto	u7301
 14872  0054D2  EF6D  F02A         	goto	u7300
 14873  0054D6                     u7301:
 14874  0054D6  EF52  F02A         	goto	l6313
 14875  0054DA                     u7300:
 14876  0054DA  0012               	return		;funcret
 14877  0054DC                     __end_of_fputs:
 14878                           	callstack 0
 14879                           
 14880 ;; *************** function _fputc *****************
 14881 ;; Defined at:
 14882 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 14883 ;; Parameters:    Size  Location     Type
 14884 ;;  c               2    6[COMRAM] int 
 14885 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 14886 ;;		 -> NULL(0), 
 14887 ;; Auto vars:     Size  Location     Type
 14888 ;;		None
 14889 ;; Return value:  Size  Location     Type
 14890 ;;                  2    6[COMRAM] int 
 14891 ;; Registers used:
 14892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14893 ;; Tracked objects:
 14894 ;;		On entry : 0/0
 14895 ;;		On exit  : 0/0
 14896 ;;		Unchanged: 0/0
 14897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14898 ;;      Params:         4       0       0       0       0       0       0
 14899 ;;      Locals:         0       0       0       0       0       0       0
 14900 ;;      Temps:          5       0       0       0       0       0       0
 14901 ;;      Totals:         9       0       0       0       0       0       0
 14902 ;;Total ram usage:        9 bytes
 14903 ;; Hardware stack levels used: 1
 14904 ;; Hardware stack levels required when called: 2
 14905 ;; This function calls:
 14906 ;;		_putch
 14907 ;; This function is called by:
 14908 ;;		_pad
 14909 ;;		_stoa
 14910 ;;		_vfpfcnvrt
 14911 ;;		_fputs
 14912 ;; This function uses a non-reentrant model
 14913 ;;
 14914                           
 14915                           	psect	text55
 14916  004FE8                     __ptext55:
 14917                           	callstack 0
 14918  004FE8                     _fputc:
 14919                           	callstack 21
 14920  004FE8  5009               	movf	fputc@fp^0,w,c
 14921  004FEA  100A               	iorwf	(fputc@fp+1)^0,w,c
 14922  004FEC  B4D8               	btfsc	status,2,c
 14923  004FEE  EFFB  F027         	goto	u7261
 14924  004FF2  EFFD  F027         	goto	u7260
 14925  004FF6                     u7261:
 14926  004FF6  EF06  F028         	goto	l6301
 14927  004FFA                     u7260:
 14928  004FFA  5009               	movf	fputc@fp^0,w,c
 14929  004FFC  100A               	iorwf	(fputc@fp+1)^0,w,c
 14930  004FFE  A4D8               	btfss	status,2,c
 14931  005000  EF04  F028         	goto	u7271
 14932  005004  EF06  F028         	goto	u7270
 14933  005008                     u7271:
 14934  005008  EF0B  F028         	goto	l6303
 14935  00500C                     u7270:
 14936  00500C                     l6301:
 14937  00500C  5007               	movf	fputc@c^0,w,c
 14938  00500E  EC87  F02B         	call	_putch
 14939  005012  EF3E  F028         	goto	l1573
 14940  005016                     l6303:
 14941  005016  EE20 F004          	lfsr	2,4
 14942  00501A  5009               	movf	fputc@fp^0,w,c
 14943  00501C  26D9               	addwf	fsr2l,f,c
 14944  00501E  500A               	movf	(fputc@fp+1)^0,w,c
 14945  005020  22DA               	addwfc	fsr2h,f,c
 14946  005022  50DE               	movf	postinc2,w,c
 14947  005024  10DE               	iorwf	postinc2,w,c
 14948  005026  B4D8               	btfsc	status,2,c
 14949  005028  EF18  F028         	goto	u7281
 14950  00502C  EF1A  F028         	goto	u7280
 14951  005030                     u7281:
 14952  005030  EF35  F028         	goto	l6307
 14953  005034                     u7280:
 14954  005034  EE20 F004          	lfsr	2,4
 14955  005038  5009               	movf	fputc@fp^0,w,c
 14956  00503A  26D9               	addwf	fsr2l,f,c
 14957  00503C  500A               	movf	(fputc@fp+1)^0,w,c
 14958  00503E  22DA               	addwfc	fsr2h,f,c
 14959  005040  EE10 F002          	lfsr	1,2
 14960  005044  5009               	movf	fputc@fp^0,w,c
 14961  005046  26E1               	addwf	fsr1l,f,c
 14962  005048  500A               	movf	(fputc@fp+1)^0,w,c
 14963  00504A  22E2               	addwfc	fsr1h,f,c
 14964  00504C  50DE               	movf	postinc2,w,c
 14965  00504E  5CE6               	subwf	postinc1,w,c
 14966  005050  50E6               	movf	postinc1,w,c
 14967  005052  0A80               	xorlw	128
 14968  005054  6E0F               	movwf	(??_fputc+4)^0,c
 14969  005056  50DE               	movf	postinc2,w,c
 14970  005058  0A80               	xorlw	128
 14971  00505A  580F               	subwfb	(??_fputc+4)^0,w,c
 14972  00505C  B0D8               	btfsc	status,0,c
 14973  00505E  EF33  F028         	goto	u7291
 14974  005062  EF35  F028         	goto	u7290
 14975  005066                     u7291:
 14976  005066  EF3E  F028         	goto	l1573
 14977  00506A                     u7290:
 14978  00506A                     l6307:
 14979  00506A  EE20 F002          	lfsr	2,2
 14980  00506E  5009               	movf	fputc@fp^0,w,c
 14981  005070  26D9               	addwf	fsr2l,f,c
 14982  005072  500A               	movf	(fputc@fp+1)^0,w,c
 14983  005074  22DA               	addwfc	fsr2h,f,c
 14984  005076  2ADE               	incf	postinc2,f,c
 14985  005078  0E00               	movlw	0
 14986  00507A  22DD               	addwfc	postdec2,f,c
 14987  00507C                     l1573:
 14988  00507C  0012               	return		;funcret
 14989  00507E                     __end_of_fputc:
 14990                           	callstack 0
 14991                           
 14992 ;; *************** function _putch *****************
 14993 ;; Defined at:
 14994 ;;		line 140 in file "uart.c"
 14995 ;; Parameters:    Size  Location     Type
 14996 ;;  byte            1    wreg     unsigned char 
 14997 ;; Auto vars:     Size  Location     Type
 14998 ;;  byte            1    5[COMRAM] unsigned char 
 14999 ;; Return value:  Size  Location     Type
 15000 ;;                  1    wreg      void 
 15001 ;; Registers used:
 15002 ;;		wreg
 15003 ;; Tracked objects:
 15004 ;;		On entry : 0/0
 15005 ;;		On exit  : 0/0
 15006 ;;		Unchanged: 0/0
 15007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15008 ;;      Params:         0       0       0       0       0       0       0
 15009 ;;      Locals:         1       0       0       0       0       0       0
 15010 ;;      Temps:          0       0       0       0       0       0       0
 15011 ;;      Totals:         1       0       0       0       0       0       0
 15012 ;;Total ram usage:        1 bytes
 15013 ;; Hardware stack levels used: 1
 15014 ;; Hardware stack levels required when called: 1
 15015 ;; This function calls:
 15016 ;;		Nothing
 15017 ;; This function is called by:
 15018 ;;		_fputc
 15019 ;; This function uses a non-reentrant model
 15020 ;;
 15021                           
 15022                           	psect	text56
 15023  00570E                     __ptext56:
 15024                           	callstack 0
 15025  00570E                     _putch:
 15026                           	callstack 21
 15027                           
 15028                           ;incstack = 0
 15029                           ;putch@byte stored from wreg
 15030  00570E  6E06               	movwf	putch@byte^0,c
 15031  005710                     l464:
 15032  005710  A89E               	btfss	3998,4,c	;volatile
 15033  005712  EF8D  F02B         	goto	u7251
 15034  005716  EF8F  F02B         	goto	u7250
 15035  00571A                     u7251:
 15036  00571A  EF88  F02B         	goto	l464
 15037  00571E                     u7250:
 15038  00571E                     
 15039                           ;uart.c: 144:     TXREG = byte;
 15040  00571E  C006  FFAD         	movff	putch@byte,4013	;volatile
 15041  005722  0012               	return		;funcret
 15042  005724                     __end_of_putch:
 15043                           	callstack 0
 15044                           
 15045 ;; *************** function _abs *****************
 15046 ;; Defined at:
 15047 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 15048 ;; Parameters:    Size  Location     Type
 15049 ;;  a               2   23[COMRAM] int 
 15050 ;; Auto vars:     Size  Location     Type
 15051 ;;		None
 15052 ;; Return value:  Size  Location     Type
 15053 ;;                  2   23[COMRAM] int 
 15054 ;; Registers used:
 15055 ;;		wreg, status,2, status,0
 15056 ;; Tracked objects:
 15057 ;;		On entry : 0/0
 15058 ;;		On exit  : 0/0
 15059 ;;		Unchanged: 0/0
 15060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15061 ;;      Params:         2       0       0       0       0       0       0
 15062 ;;      Locals:         0       0       0       0       0       0       0
 15063 ;;      Temps:          2       0       0       0       0       0       0
 15064 ;;      Totals:         4       0       0       0       0       0       0
 15065 ;;Total ram usage:        4 bytes
 15066 ;; Hardware stack levels used: 1
 15067 ;; Hardware stack levels required when called: 1
 15068 ;; This function calls:
 15069 ;;		Nothing
 15070 ;; This function is called by:
 15071 ;;		_dtoa
 15072 ;; This function uses a non-reentrant model
 15073 ;;
 15074                           
 15075                           	psect	text57
 15076  0054DC                     __ptext57:
 15077                           	callstack 0
 15078  0054DC                     _abs:
 15079                           	callstack 24
 15080  0054DC  BE19               	btfsc	(abs@a+1)^0,7,c
 15081  0054DE  EF7B  F02A         	goto	u7590
 15082  0054E2  5019               	movf	(abs@a+1)^0,w,c
 15083  0054E4  E106               	bnz	u7591
 15084  0054E6  0418               	decf	abs@a^0,w,c
 15085  0054E8  B0D8               	btfsc	status,0,c
 15086  0054EA  EF79  F02A         	goto	u7591
 15087  0054EE  EF7B  F02A         	goto	u7590
 15088  0054F2                     u7591:
 15089  0054F2  EF89  F02A         	goto	l1501
 15090  0054F6                     u7590:
 15091  0054F6  C018  F01A         	movff	abs@a,??_abs
 15092  0054FA  C019  F01B         	movff	abs@a+1,??_abs+1
 15093  0054FE  1E1A               	comf	??_abs^0,f,c
 15094  005500  1E1B               	comf	(??_abs+1)^0,f,c
 15095  005502  4A1A               	infsnz	??_abs^0,f,c
 15096  005504  2A1B               	incf	(??_abs+1)^0,f,c
 15097  005506  C01A  F018         	movff	??_abs,?_abs
 15098  00550A  C01B  F019         	movff	??_abs+1,?_abs+1
 15099  00550E  EF8D  F02A         	goto	l1504
 15100  005512                     l1501:
 15101  005512  C018  F018         	movff	abs@a,?_abs
 15102  005516  C019  F019         	movff	abs@a+1,?_abs+1
 15103  00551A                     l1504:
 15104  00551A  0012               	return		;funcret
 15105  00551C                     __end_of_abs:
 15106                           	callstack 0
 15107                           
 15108 ;; *************** function ___aomod *****************
 15109 ;; Defined at:
 15110 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 15111 ;; Parameters:    Size  Location     Type
 15112 ;;  dividend        8    5[COMRAM] long long 
 15113 ;;  divisor         8   13[COMRAM] long long 
 15114 ;; Auto vars:     Size  Location     Type
 15115 ;;  sign            1   22[COMRAM] unsigned char 
 15116 ;;  counter         1   21[COMRAM] unsigned char 
 15117 ;; Return value:  Size  Location     Type
 15118 ;;                  8    5[COMRAM] long long 
 15119 ;; Registers used:
 15120 ;;		wreg, status,2, status,0
 15121 ;; Tracked objects:
 15122 ;;		On entry : 0/0
 15123 ;;		On exit  : 0/0
 15124 ;;		Unchanged: 0/0
 15125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15126 ;;      Params:        16       0       0       0       0       0       0
 15127 ;;      Locals:         2       0       0       0       0       0       0
 15128 ;;      Temps:          0       0       0       0       0       0       0
 15129 ;;      Totals:        18       0       0       0       0       0       0
 15130 ;;Total ram usage:       18 bytes
 15131 ;; Hardware stack levels used: 1
 15132 ;; Hardware stack levels required when called: 1
 15133 ;; This function calls:
 15134 ;;		Nothing
 15135 ;; This function is called by:
 15136 ;;		_dtoa
 15137 ;; This function uses a non-reentrant model
 15138 ;;
 15139                           
 15140                           	psect	text58
 15141  004134                     __ptext58:
 15142                           	callstack 0
 15143  004134                     ___aomod:
 15144                           	callstack 24
 15145  004134  0E00               	movlw	0
 15146  004136  6E17               	movwf	___aomod@sign^0,c
 15147  004138  BE0D               	btfsc	(___aomod@dividend+7)^0,7,c
 15148  00413A  EFA3  F020         	goto	u7420
 15149  00413E  EFA1  F020         	goto	u7421
 15150  004142                     u7421:
 15151  004142  EFB5  F020         	goto	l6391
 15152  004146                     u7420:
 15153  004146  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 15154  004148  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 15155  00414A  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 15156  00414C  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 15157  00414E  1E09               	comf	(___aomod@dividend+3)^0,f,c
 15158  004150  1E08               	comf	(___aomod@dividend+2)^0,f,c
 15159  004152  1E07               	comf	(___aomod@dividend+1)^0,f,c
 15160  004154  6C06               	negf	___aomod@dividend^0,c
 15161  004156  0E00               	movlw	0
 15162  004158  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 15163  00415A  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 15164  00415C  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 15165  00415E  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 15166  004160  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 15167  004162  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 15168  004164  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 15169  004166  0E01               	movlw	1
 15170  004168  6E17               	movwf	___aomod@sign^0,c
 15171  00416A                     l6391:
 15172  00416A  BE15               	btfsc	(___aomod@divisor+7)^0,7,c
 15173  00416C  EFBC  F020         	goto	u7430
 15174  004170  EFBA  F020         	goto	u7431
 15175  004174                     u7431:
 15176  004174  EFCC  F020         	goto	l6395
 15177  004178                     u7430:
 15178  004178  1E15               	comf	(___aomod@divisor+7)^0,f,c
 15179  00417A  1E14               	comf	(___aomod@divisor+6)^0,f,c
 15180  00417C  1E13               	comf	(___aomod@divisor+5)^0,f,c
 15181  00417E  1E12               	comf	(___aomod@divisor+4)^0,f,c
 15182  004180  1E11               	comf	(___aomod@divisor+3)^0,f,c
 15183  004182  1E10               	comf	(___aomod@divisor+2)^0,f,c
 15184  004184  1E0F               	comf	(___aomod@divisor+1)^0,f,c
 15185  004186  6C0E               	negf	___aomod@divisor^0,c
 15186  004188  0E00               	movlw	0
 15187  00418A  220F               	addwfc	(___aomod@divisor+1)^0,f,c
 15188  00418C  2210               	addwfc	(___aomod@divisor+2)^0,f,c
 15189  00418E  2211               	addwfc	(___aomod@divisor+3)^0,f,c
 15190  004190  2212               	addwfc	(___aomod@divisor+4)^0,f,c
 15191  004192  2213               	addwfc	(___aomod@divisor+5)^0,f,c
 15192  004194  2214               	addwfc	(___aomod@divisor+6)^0,f,c
 15193  004196  2215               	addwfc	(___aomod@divisor+7)^0,f,c
 15194  004198                     l6395:
 15195  004198  500E               	movf	___aomod@divisor^0,w,c
 15196  00419A  100F               	iorwf	(___aomod@divisor+1)^0,w,c
 15197  00419C  1010               	iorwf	(___aomod@divisor+2)^0,w,c
 15198  00419E  1011               	iorwf	(___aomod@divisor+3)^0,w,c
 15199  0041A0  1012               	iorwf	(___aomod@divisor+4)^0,w,c
 15200  0041A2  1013               	iorwf	(___aomod@divisor+5)^0,w,c
 15201  0041A4  1014               	iorwf	(___aomod@divisor+6)^0,w,c
 15202  0041A6  1015               	iorwf	(___aomod@divisor+7)^0,w,c
 15203  0041A8  B4D8               	btfsc	status,2,c
 15204  0041AA  EFD9  F020         	goto	u7441
 15205  0041AE  EFDB  F020         	goto	u7440
 15206  0041B2                     u7441:
 15207  0041B2  EF23  F021         	goto	l6411
 15208  0041B6                     u7440:
 15209  0041B6  0E01               	movlw	1
 15210  0041B8  6E16               	movwf	___aomod@counter^0,c
 15211  0041BA  EFE9  F020         	goto	l6401
 15212  0041BE                     l6399:
 15213  0041BE  90D8               	bcf	status,0,c
 15214  0041C0  360E               	rlcf	___aomod@divisor^0,f,c
 15215  0041C2  360F               	rlcf	(___aomod@divisor+1)^0,f,c
 15216  0041C4  3610               	rlcf	(___aomod@divisor+2)^0,f,c
 15217  0041C6  3611               	rlcf	(___aomod@divisor+3)^0,f,c
 15218  0041C8  3612               	rlcf	(___aomod@divisor+4)^0,f,c
 15219  0041CA  3613               	rlcf	(___aomod@divisor+5)^0,f,c
 15220  0041CC  3614               	rlcf	(___aomod@divisor+6)^0,f,c
 15221  0041CE  3615               	rlcf	(___aomod@divisor+7)^0,f,c
 15222  0041D0  2A16               	incf	___aomod@counter^0,f,c
 15223  0041D2                     l6401:
 15224  0041D2  AE15               	btfss	(___aomod@divisor+7)^0,7,c
 15225  0041D4  EFEE  F020         	goto	u7451
 15226  0041D8  EFF0  F020         	goto	u7450
 15227  0041DC                     u7451:
 15228  0041DC  EFDF  F020         	goto	l6399
 15229  0041E0                     u7450:
 15230  0041E0                     l6403:
 15231  0041E0  500E               	movf	___aomod@divisor^0,w,c
 15232  0041E2  5C06               	subwf	___aomod@dividend^0,w,c
 15233  0041E4  500F               	movf	(___aomod@divisor+1)^0,w,c
 15234  0041E6  5807               	subwfb	(___aomod@dividend+1)^0,w,c
 15235  0041E8  5010               	movf	(___aomod@divisor+2)^0,w,c
 15236  0041EA  5808               	subwfb	(___aomod@dividend+2)^0,w,c
 15237  0041EC  5011               	movf	(___aomod@divisor+3)^0,w,c
 15238  0041EE  5809               	subwfb	(___aomod@dividend+3)^0,w,c
 15239  0041F0  5012               	movf	(___aomod@divisor+4)^0,w,c
 15240  0041F2  580A               	subwfb	(___aomod@dividend+4)^0,w,c
 15241  0041F4  5013               	movf	(___aomod@divisor+5)^0,w,c
 15242  0041F6  580B               	subwfb	(___aomod@dividend+5)^0,w,c
 15243  0041F8  5014               	movf	(___aomod@divisor+6)^0,w,c
 15244  0041FA  580C               	subwfb	(___aomod@dividend+6)^0,w,c
 15245  0041FC  5015               	movf	(___aomod@divisor+7)^0,w,c
 15246  0041FE  580D               	subwfb	(___aomod@dividend+7)^0,w,c
 15247  004200  A0D8               	btfss	status,0,c
 15248  004202  EF05  F021         	goto	u7461
 15249  004206  EF07  F021         	goto	u7460
 15250  00420A                     u7461:
 15251  00420A  EF17  F021         	goto	l6407
 15252  00420E                     u7460:
 15253  00420E  500E               	movf	___aomod@divisor^0,w,c
 15254  004210  5E06               	subwf	___aomod@dividend^0,f,c
 15255  004212  500F               	movf	(___aomod@divisor+1)^0,w,c
 15256  004214  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
 15257  004216  5010               	movf	(___aomod@divisor+2)^0,w,c
 15258  004218  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
 15259  00421A  5011               	movf	(___aomod@divisor+3)^0,w,c
 15260  00421C  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
 15261  00421E  5012               	movf	(___aomod@divisor+4)^0,w,c
 15262  004220  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
 15263  004222  5013               	movf	(___aomod@divisor+5)^0,w,c
 15264  004224  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
 15265  004226  5014               	movf	(___aomod@divisor+6)^0,w,c
 15266  004228  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
 15267  00422A  5015               	movf	(___aomod@divisor+7)^0,w,c
 15268  00422C  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
 15269  00422E                     l6407:
 15270  00422E  90D8               	bcf	status,0,c
 15271  004230  3215               	rrcf	(___aomod@divisor+7)^0,f,c
 15272  004232  3214               	rrcf	(___aomod@divisor+6)^0,f,c
 15273  004234  3213               	rrcf	(___aomod@divisor+5)^0,f,c
 15274  004236  3212               	rrcf	(___aomod@divisor+4)^0,f,c
 15275  004238  3211               	rrcf	(___aomod@divisor+3)^0,f,c
 15276  00423A  3210               	rrcf	(___aomod@divisor+2)^0,f,c
 15277  00423C  320F               	rrcf	(___aomod@divisor+1)^0,f,c
 15278  00423E  320E               	rrcf	___aomod@divisor^0,f,c
 15279  004240  2E16               	decfsz	___aomod@counter^0,f,c
 15280  004242  EFF0  F020         	goto	l6403
 15281  004246                     l6411:
 15282  004246  5017               	movf	___aomod@sign^0,w,c
 15283  004248  B4D8               	btfsc	status,2,c
 15284  00424A  EF29  F021         	goto	u7471
 15285  00424E  EF2B  F021         	goto	u7470
 15286  004252                     u7471:
 15287  004252  EF3B  F021         	goto	l6415
 15288  004256                     u7470:
 15289  004256  1E0D               	comf	(___aomod@dividend+7)^0,f,c
 15290  004258  1E0C               	comf	(___aomod@dividend+6)^0,f,c
 15291  00425A  1E0B               	comf	(___aomod@dividend+5)^0,f,c
 15292  00425C  1E0A               	comf	(___aomod@dividend+4)^0,f,c
 15293  00425E  1E09               	comf	(___aomod@dividend+3)^0,f,c
 15294  004260  1E08               	comf	(___aomod@dividend+2)^0,f,c
 15295  004262  1E07               	comf	(___aomod@dividend+1)^0,f,c
 15296  004264  6C06               	negf	___aomod@dividend^0,c
 15297  004266  0E00               	movlw	0
 15298  004268  2207               	addwfc	(___aomod@dividend+1)^0,f,c
 15299  00426A  2208               	addwfc	(___aomod@dividend+2)^0,f,c
 15300  00426C  2209               	addwfc	(___aomod@dividend+3)^0,f,c
 15301  00426E  220A               	addwfc	(___aomod@dividend+4)^0,f,c
 15302  004270  220B               	addwfc	(___aomod@dividend+5)^0,f,c
 15303  004272  220C               	addwfc	(___aomod@dividend+6)^0,f,c
 15304  004274  220D               	addwfc	(___aomod@dividend+7)^0,f,c
 15305  004276                     l6415:
 15306  004276  C006  F006         	movff	___aomod@dividend,?___aomod
 15307  00427A  C007  F007         	movff	___aomod@dividend+1,?___aomod+1
 15308  00427E  C008  F008         	movff	___aomod@dividend+2,?___aomod+2
 15309  004282  C009  F009         	movff	___aomod@dividend+3,?___aomod+3
 15310  004286  C00A  F00A         	movff	___aomod@dividend+4,?___aomod+4
 15311  00428A  C00B  F00B         	movff	___aomod@dividend+5,?___aomod+5
 15312  00428E  C00C  F00C         	movff	___aomod@dividend+6,?___aomod+6
 15313  004292  C00D  F00D         	movff	___aomod@dividend+7,?___aomod+7
 15314  004296  0012               	return		;funcret
 15315  004298                     __end_of___aomod:
 15316                           	callstack 0
 15317                           
 15318 ;; *************** function ___aodiv *****************
 15319 ;; Defined at:
 15320 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 15321 ;; Parameters:    Size  Location     Type
 15322 ;;  dividend        8    5[COMRAM] long long 
 15323 ;;  divisor         8   13[COMRAM] long long 
 15324 ;; Auto vars:     Size  Location     Type
 15325 ;;  quotient        8   23[COMRAM] long long 
 15326 ;;  sign            1   22[COMRAM] unsigned char 
 15327 ;;  counter         1   21[COMRAM] unsigned char 
 15328 ;; Return value:  Size  Location     Type
 15329 ;;                  8    5[COMRAM] long long 
 15330 ;; Registers used:
 15331 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15332 ;; Tracked objects:
 15333 ;;		On entry : 0/0
 15334 ;;		On exit  : 0/0
 15335 ;;		Unchanged: 0/0
 15336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15337 ;;      Params:        16       0       0       0       0       0       0
 15338 ;;      Locals:        10       0       0       0       0       0       0
 15339 ;;      Temps:          0       0       0       0       0       0       0
 15340 ;;      Totals:        26       0       0       0       0       0       0
 15341 ;;Total ram usage:       26 bytes
 15342 ;; Hardware stack levels used: 1
 15343 ;; Hardware stack levels required when called: 1
 15344 ;; This function calls:
 15345 ;;		Nothing
 15346 ;; This function is called by:
 15347 ;;		_dtoa
 15348 ;; This function uses a non-reentrant model
 15349 ;;
 15350                           
 15351                           	psect	text59
 15352  0039E8                     __ptext59:
 15353                           	callstack 0
 15354  0039E8                     ___aodiv:
 15355                           	callstack 24
 15356  0039E8  0E00               	movlw	0
 15357  0039EA  6E17               	movwf	___aodiv@sign^0,c
 15358  0039EC  BE15               	btfsc	(___aodiv@divisor+7)^0,7,c
 15359  0039EE  EFFD  F01C         	goto	u7350
 15360  0039F2  EFFB  F01C         	goto	u7351
 15361  0039F6                     u7351:
 15362  0039F6  EF0F  F01D         	goto	l6347
 15363  0039FA                     u7350:
 15364  0039FA  1E15               	comf	(___aodiv@divisor+7)^0,f,c
 15365  0039FC  1E14               	comf	(___aodiv@divisor+6)^0,f,c
 15366  0039FE  1E13               	comf	(___aodiv@divisor+5)^0,f,c
 15367  003A00  1E12               	comf	(___aodiv@divisor+4)^0,f,c
 15368  003A02  1E11               	comf	(___aodiv@divisor+3)^0,f,c
 15369  003A04  1E10               	comf	(___aodiv@divisor+2)^0,f,c
 15370  003A06  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
 15371  003A08  6C0E               	negf	___aodiv@divisor^0,c
 15372  003A0A  0E00               	movlw	0
 15373  003A0C  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
 15374  003A0E  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
 15375  003A10  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
 15376  003A12  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
 15377  003A14  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
 15378  003A16  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
 15379  003A18  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
 15380  003A1A  0E01               	movlw	1
 15381  003A1C  6E17               	movwf	___aodiv@sign^0,c
 15382  003A1E                     l6347:
 15383  003A1E  BE0D               	btfsc	(___aodiv@dividend+7)^0,7,c
 15384  003A20  EF16  F01D         	goto	u7360
 15385  003A24  EF14  F01D         	goto	u7361
 15386  003A28                     u7361:
 15387  003A28  EF28  F01D         	goto	l6353
 15388  003A2C                     u7360:
 15389  003A2C  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
 15390  003A2E  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
 15391  003A30  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
 15392  003A32  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
 15393  003A34  1E09               	comf	(___aodiv@dividend+3)^0,f,c
 15394  003A36  1E08               	comf	(___aodiv@dividend+2)^0,f,c
 15395  003A38  1E07               	comf	(___aodiv@dividend+1)^0,f,c
 15396  003A3A  6C06               	negf	___aodiv@dividend^0,c
 15397  003A3C  0E00               	movlw	0
 15398  003A3E  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
 15399  003A40  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
 15400  003A42  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
 15401  003A44  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
 15402  003A46  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
 15403  003A48  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
 15404  003A4A  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
 15405  003A4C  0E01               	movlw	1
 15406  003A4E  1A17               	xorwf	___aodiv@sign^0,f,c
 15407  003A50                     l6353:
 15408  003A50  EE20  F018         	lfsr	2,___aodiv@quotient
 15409  003A54  0E07               	movlw	7
 15410  003A56                     u7371:
 15411  003A56  6ADE               	clrf	postinc2,c
 15412  003A58  06E8               	decf	wreg,f,c
 15413  003A5A  E2FD               	bc	u7371
 15414  003A5C  500E               	movf	___aodiv@divisor^0,w,c
 15415  003A5E  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
 15416  003A60  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
 15417  003A62  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
 15418  003A64  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
 15419  003A66  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
 15420  003A68  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
 15421  003A6A  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
 15422  003A6C  B4D8               	btfsc	status,2,c
 15423  003A6E  EF3B  F01D         	goto	u7381
 15424  003A72  EF3D  F01D         	goto	u7380
 15425  003A76                     u7381:
 15426  003A76  EF8F  F01D         	goto	l6375
 15427  003A7A                     u7380:
 15428  003A7A  0E01               	movlw	1
 15429  003A7C  6E16               	movwf	___aodiv@counter^0,c
 15430  003A7E  EF4B  F01D         	goto	l6361
 15431  003A82                     l6359:
 15432  003A82  90D8               	bcf	status,0,c
 15433  003A84  360E               	rlcf	___aodiv@divisor^0,f,c
 15434  003A86  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
 15435  003A88  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
 15436  003A8A  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
 15437  003A8C  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
 15438  003A8E  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
 15439  003A90  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
 15440  003A92  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
 15441  003A94  2A16               	incf	___aodiv@counter^0,f,c
 15442  003A96                     l6361:
 15443  003A96  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
 15444  003A98  EF50  F01D         	goto	u7391
 15445  003A9C  EF52  F01D         	goto	u7390
 15446  003AA0                     u7391:
 15447  003AA0  EF41  F01D         	goto	l6359
 15448  003AA4                     u7390:
 15449  003AA4                     l6363:
 15450  003AA4  90D8               	bcf	status,0,c
 15451  003AA6  3618               	rlcf	___aodiv@quotient^0,f,c
 15452  003AA8  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
 15453  003AAA  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
 15454  003AAC  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
 15455  003AAE  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
 15456  003AB0  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
 15457  003AB2  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
 15458  003AB4  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
 15459  003AB6  500E               	movf	___aodiv@divisor^0,w,c
 15460  003AB8  5C06               	subwf	___aodiv@dividend^0,w,c
 15461  003ABA  500F               	movf	(___aodiv@divisor+1)^0,w,c
 15462  003ABC  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
 15463  003ABE  5010               	movf	(___aodiv@divisor+2)^0,w,c
 15464  003AC0  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
 15465  003AC2  5011               	movf	(___aodiv@divisor+3)^0,w,c
 15466  003AC4  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
 15467  003AC6  5012               	movf	(___aodiv@divisor+4)^0,w,c
 15468  003AC8  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
 15469  003ACA  5013               	movf	(___aodiv@divisor+5)^0,w,c
 15470  003ACC  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
 15471  003ACE  5014               	movf	(___aodiv@divisor+6)^0,w,c
 15472  003AD0  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
 15473  003AD2  5015               	movf	(___aodiv@divisor+7)^0,w,c
 15474  003AD4  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
 15475  003AD6  A0D8               	btfss	status,0,c
 15476  003AD8  EF70  F01D         	goto	u7401
 15477  003ADC  EF72  F01D         	goto	u7400
 15478  003AE0                     u7401:
 15479  003AE0  EF83  F01D         	goto	l6371
 15480  003AE4                     u7400:
 15481  003AE4  500E               	movf	___aodiv@divisor^0,w,c
 15482  003AE6  5E06               	subwf	___aodiv@dividend^0,f,c
 15483  003AE8  500F               	movf	(___aodiv@divisor+1)^0,w,c
 15484  003AEA  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
 15485  003AEC  5010               	movf	(___aodiv@divisor+2)^0,w,c
 15486  003AEE  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
 15487  003AF0  5011               	movf	(___aodiv@divisor+3)^0,w,c
 15488  003AF2  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
 15489  003AF4  5012               	movf	(___aodiv@divisor+4)^0,w,c
 15490  003AF6  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
 15491  003AF8  5013               	movf	(___aodiv@divisor+5)^0,w,c
 15492  003AFA  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
 15493  003AFC  5014               	movf	(___aodiv@divisor+6)^0,w,c
 15494  003AFE  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
 15495  003B00  5015               	movf	(___aodiv@divisor+7)^0,w,c
 15496  003B02  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
 15497  003B04  8018               	bsf	___aodiv@quotient^0,0,c
 15498  003B06                     l6371:
 15499  003B06  90D8               	bcf	status,0,c
 15500  003B08  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
 15501  003B0A  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
 15502  003B0C  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
 15503  003B0E  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
 15504  003B10  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
 15505  003B12  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
 15506  003B14  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
 15507  003B16  320E               	rrcf	___aodiv@divisor^0,f,c
 15508  003B18  2E16               	decfsz	___aodiv@counter^0,f,c
 15509  003B1A  EF52  F01D         	goto	l6363
 15510  003B1E                     l6375:
 15511  003B1E  5017               	movf	___aodiv@sign^0,w,c
 15512  003B20  B4D8               	btfsc	status,2,c
 15513  003B22  EF95  F01D         	goto	u7411
 15514  003B26  EF97  F01D         	goto	u7410
 15515  003B2A                     u7411:
 15516  003B2A  EFA7  F01D         	goto	l6379
 15517  003B2E                     u7410:
 15518  003B2E  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
 15519  003B30  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
 15520  003B32  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
 15521  003B34  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
 15522  003B36  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
 15523  003B38  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
 15524  003B3A  1E19               	comf	(___aodiv@quotient+1)^0,f,c
 15525  003B3C  6C18               	negf	___aodiv@quotient^0,c
 15526  003B3E  0E00               	movlw	0
 15527  003B40  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
 15528  003B42  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
 15529  003B44  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
 15530  003B46  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
 15531  003B48  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
 15532  003B4A  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
 15533  003B4C  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
 15534  003B4E                     l6379:
 15535  003B4E  C018  F006         	movff	___aodiv@quotient,?___aodiv
 15536  003B52  C019  F007         	movff	___aodiv@quotient+1,?___aodiv+1
 15537  003B56  C01A  F008         	movff	___aodiv@quotient+2,?___aodiv+2
 15538  003B5A  C01B  F009         	movff	___aodiv@quotient+3,?___aodiv+3
 15539  003B5E  C01C  F00A         	movff	___aodiv@quotient+4,?___aodiv+4
 15540  003B62  C01D  F00B         	movff	___aodiv@quotient+5,?___aodiv+5
 15541  003B66  C01E  F00C         	movff	___aodiv@quotient+6,?___aodiv+6
 15542  003B6A  C01F  F00D         	movff	___aodiv@quotient+7,?___aodiv+7
 15543  003B6E  0012               	return		;funcret
 15544  003B70                     __end_of___aodiv:
 15545                           	callstack 0
 15546                           
 15547 ;; *************** function _atoi *****************
 15548 ;; Defined at:
 15549 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 15550 ;; Parameters:    Size  Location     Type
 15551 ;;  s               2   12[COMRAM] PTR const unsigned char 
 15552 ;;		 -> STR_31(3), STR_30(3), STR_29(7), STR_28(6), 
 15553 ;;		 -> STR_27(3), STR_26(2), STR_25(6), STR_24(14), 
 15554 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(14), 
 15555 ;;		 -> STR_19(12), STR_18(17), STR_17(21), STR_16(21), 
 15556 ;;		 -> STR_15(2), STR_14(26), STR_13(2), STR_12(2), 
 15557 ;;		 -> STR_11(39), STR_10(2), STR_9(40), STR_8(16), 
 15558 ;;		 -> STR_7(21), STR_6(30), STR_5(3), STR_4(2), 
 15559 ;;		 -> STR_3(31), STR_2(8), STR_1(14), 
 15560 ;; Auto vars:     Size  Location     Type
 15561 ;;  n               2   25[COMRAM] int 
 15562 ;;  neg             2   18[COMRAM] int 
 15563 ;; Return value:  Size  Location     Type
 15564 ;;                  2   12[COMRAM] int 
 15565 ;; Registers used:
 15566 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15567 ;; Tracked objects:
 15568 ;;		On entry : 0/0
 15569 ;;		On exit  : 0/0
 15570 ;;		Unchanged: 0/0
 15571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15572 ;;      Params:         2       0       0       0       0       0       0
 15573 ;;      Locals:         9       0       0       0       0       0       0
 15574 ;;      Temps:          4       0       0       0       0       0       0
 15575 ;;      Totals:        15       0       0       0       0       0       0
 15576 ;;Total ram usage:       15 bytes
 15577 ;; Hardware stack levels used: 1
 15578 ;; Hardware stack levels required when called: 2
 15579 ;; This function calls:
 15580 ;;		___wmul
 15581 ;;		_isdigit
 15582 ;;		_isspace
 15583 ;; This function is called by:
 15584 ;;		_vfpfcnvrt
 15585 ;; This function uses a non-reentrant model
 15586 ;;
 15587                           
 15588                           	psect	text60
 15589  003858                     __ptext60:
 15590                           	callstack 0
 15591  003858                     _atoi:
 15592                           	callstack 24
 15593  003858  0E00               	movlw	0
 15594  00385A  6E1B               	movwf	(atoi@n+1)^0,c
 15595  00385C  0E00               	movlw	0
 15596  00385E  6E1A               	movwf	atoi@n^0,c
 15597  003860  0E00               	movlw	0
 15598  003862  6E14               	movwf	(atoi@neg+1)^0,c
 15599  003864  0E00               	movlw	0
 15600  003866  6E13               	movwf	atoi@neg^0,c
 15601  003868  EF38  F01C         	goto	l6727
 15602  00386C                     l6725:
 15603  00386C  4A0D               	infsnz	atoi@s^0,f,c
 15604  00386E  2A0E               	incf	(atoi@s+1)^0,f,c
 15605  003870                     l6727:
 15606  003870  0E01               	movlw	1
 15607  003872  6E19               	movwf	_atoi$1843^0,c
 15608  003874  C00D  FFF6         	movff	atoi@s,tblptrl
 15609  003878  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15610  00387C                     	if	0	;tblptru may be non-zero
 15611  00387C                     	endif
 15612  00387C                     	if	0	;tblptru may be non-zero
 15613  00387C                     	endif
 15614  00387C  0008               	tblrd		*
 15615  00387E  50F5               	movf	tablat,w,c
 15616  003880  0A20               	xorlw	32
 15617  003882  B4D8               	btfsc	status,2,c
 15618  003884  EF46  F01C         	goto	u8201
 15619  003888  EF48  F01C         	goto	u8200
 15620  00388C                     u8201:
 15621  00388C  EF65  F01C         	goto	l6735
 15622  003890                     u8200:
 15623  003890  0EF7               	movlw	247
 15624  003892  6E0F               	movwf	??_atoi^0,c
 15625  003894  0EFF               	movlw	255
 15626  003896  6E10               	movwf	(??_atoi+1)^0,c
 15627  003898  C00D  FFF6         	movff	atoi@s,tblptrl
 15628  00389C  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15629  0038A0                     	if	0	;tblptru may be non-zero
 15630  0038A0                     	endif
 15631  0038A0                     	if	0	;tblptru may be non-zero
 15632  0038A0                     	endif
 15633  0038A0  0008               	tblrd		*
 15634  0038A2  50F5               	movf	tablat,w,c
 15635  0038A4  6E11               	movwf	(??_atoi+2)^0,c
 15636  0038A6  6A12               	clrf	(??_atoi+3)^0,c
 15637  0038A8  500F               	movf	??_atoi^0,w,c
 15638  0038AA  2611               	addwf	(??_atoi+2)^0,f,c
 15639  0038AC  5010               	movf	(??_atoi+1)^0,w,c
 15640  0038AE  2212               	addwfc	(??_atoi+3)^0,f,c
 15641  0038B0  5012               	movf	(??_atoi+3)^0,w,c
 15642  0038B2  E109               	bnz	u8210
 15643  0038B4  0E05               	movlw	5
 15644  0038B6  5C11               	subwf	(??_atoi+2)^0,w,c
 15645  0038B8  A0D8               	btfss	status,0,c
 15646  0038BA  EF61  F01C         	goto	u8211
 15647  0038BE  EF63  F01C         	goto	u8210
 15648  0038C2                     u8211:
 15649  0038C2  EF65  F01C         	goto	l6735
 15650  0038C6                     u8210:
 15651  0038C6  0E00               	movlw	0
 15652  0038C8  6E19               	movwf	_atoi$1843^0,c
 15653  0038CA                     l6735:
 15654  0038CA  C019  F015         	movff	_atoi$1843,_atoi$1842
 15655  0038CE  6A16               	clrf	(_atoi$1842+1)^0,c
 15656  0038D0  5015               	movf	_atoi$1842^0,w,c
 15657  0038D2  1016               	iorwf	(_atoi$1842+1)^0,w,c
 15658  0038D4  A4D8               	btfss	status,2,c
 15659  0038D6  EF6F  F01C         	goto	u8221
 15660  0038DA  EF71  F01C         	goto	u8220
 15661  0038DE                     u8221:
 15662  0038DE  EF36  F01C         	goto	l6725
 15663  0038E2                     u8220:
 15664  0038E2  EF7B  F01C         	goto	l6745
 15665  0038E6                     l6741:
 15666  0038E6  0E00               	movlw	0
 15667  0038E8  6E14               	movwf	(atoi@neg+1)^0,c
 15668  0038EA  0E01               	movlw	1
 15669  0038EC  6E13               	movwf	atoi@neg^0,c
 15670  0038EE                     l6743:
 15671  0038EE  4A0D               	infsnz	atoi@s^0,f,c
 15672  0038F0  2A0E               	incf	(atoi@s+1)^0,f,c
 15673  0038F2  EFB0  F01C         	goto	l6751
 15674  0038F6                     l6745:
 15675  0038F6  C00D  FFF6         	movff	atoi@s,tblptrl
 15676  0038FA  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15677  0038FE                     	if	0	;tblptru may be non-zero
 15678  0038FE                     	endif
 15679  0038FE                     	if	0	;tblptru may be non-zero
 15680  0038FE                     	endif
 15681  0038FE  0008               	tblrd		*
 15682  003900  50F5               	movf	tablat,w,c
 15683  003902  6E0F               	movwf	??_atoi^0,c
 15684  003904  6A10               	clrf	(??_atoi+1)^0,c
 15685                           
 15686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15687                           ; Switch size 1, requested type "simple"
 15688                           ; Number of cases is 1, Range of values is 0 to 0
 15689                           ; switch strategies available:
 15690                           ; Name         Instructions Cycles
 15691                           ; simple_byte            4     3 (average)
 15692                           ;	Chosen strategy is simple_byte
 15693  003906  5010               	movf	(??_atoi+1)^0,w,c
 15694  003908  0A00               	xorlw	0	; case 0
 15695  00390A  B4D8               	btfsc	status,2,c
 15696  00390C  EF8A  F01C         	goto	l8067
 15697  003910  EFB0  F01C         	goto	l6751
 15698  003914                     l8067:
 15699                           
 15700                           ; Switch size 1, requested type "simple"
 15701                           ; Number of cases is 2, Range of values is 43 to 45
 15702                           ; switch strategies available:
 15703                           ; Name         Instructions Cycles
 15704                           ; simple_byte            7     4 (average)
 15705                           ;	Chosen strategy is simple_byte
 15706  003914  500F               	movf	??_atoi^0,w,c
 15707  003916  0A2B               	xorlw	43	; case 43
 15708  003918  B4D8               	btfsc	status,2,c
 15709  00391A  EF77  F01C         	goto	l6743
 15710  00391E  0A06               	xorlw	6	; case 45
 15711  003920  B4D8               	btfsc	status,2,c
 15712  003922  EF73  F01C         	goto	l6741
 15713  003926  EFB0  F01C         	goto	l6751
 15714  00392A                     l6747:
 15715  00392A  C01A  F006         	movff	atoi@n,___wmul@multiplier
 15716  00392E  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
 15717  003932  0E00               	movlw	0
 15718  003934  6E09               	movwf	(___wmul@multiplicand+1)^0,c
 15719  003936  0E0A               	movlw	10
 15720  003938  6E08               	movwf	___wmul@multiplicand^0,c
 15721  00393A  EC43  F02B         	call	___wmul	;wreg free
 15722  00393E  C00D  FFF6         	movff	atoi@s,tblptrl
 15723  003942  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15724  003946                     	if	0	;tblptru may be non-zero
 15725  003946                     	endif
 15726  003946                     	if	0	;tblptru may be non-zero
 15727  003946                     	endif
 15728  003946  0008               	tblrd		*
 15729  003948  50F5               	movf	tablat,w,c
 15730  00394A  5E06               	subwf	?___wmul^0,f,c
 15731  00394C  0E00               	movlw	0
 15732  00394E  5A07               	subwfb	(?___wmul+1)^0,f,c
 15733  003950  0E30               	movlw	48
 15734  003952  2406               	addwf	?___wmul^0,w,c
 15735  003954  6E1A               	movwf	atoi@n^0,c
 15736  003956  0E00               	movlw	0
 15737  003958  2007               	addwfc	(?___wmul+1)^0,w,c
 15738  00395A  6E1B               	movwf	(atoi@n+1)^0,c
 15739  00395C  EF77  F01C         	goto	l6743
 15740  003960                     l6751:
 15741  003960  0ED0               	movlw	208
 15742  003962  6E0F               	movwf	??_atoi^0,c
 15743  003964  0EFF               	movlw	255
 15744  003966  6E10               	movwf	(??_atoi+1)^0,c
 15745  003968  C00D  FFF6         	movff	atoi@s,tblptrl
 15746  00396C  C00E  FFF7         	movff	atoi@s+1,tblptrh
 15747  003970                     	if	0	;tblptru may be non-zero
 15748  003970                     	endif
 15749  003970                     	if	0	;tblptru may be non-zero
 15750  003970                     	endif
 15751  003970  0008               	tblrd		*
 15752  003972  50F5               	movf	tablat,w,c
 15753  003974  6E11               	movwf	(??_atoi+2)^0,c
 15754  003976  6A12               	clrf	(??_atoi+3)^0,c
 15755  003978  500F               	movf	??_atoi^0,w,c
 15756  00397A  2611               	addwf	(??_atoi+2)^0,f,c
 15757  00397C  5010               	movf	(??_atoi+1)^0,w,c
 15758  00397E  2212               	addwfc	(??_atoi+3)^0,f,c
 15759  003980  5012               	movf	(??_atoi+3)^0,w,c
 15760  003982  E10A               	bnz	u8230
 15761  003984  0E0A               	movlw	10
 15762  003986  5C11               	subwf	(??_atoi+2)^0,w,c
 15763  003988  A0D8               	btfss	status,0,c
 15764  00398A  EFC9  F01C         	goto	u8231
 15765  00398E  EFCC  F01C         	goto	u8230
 15766  003992                     u8231:
 15767  003992  0E01               	movlw	1
 15768  003994  EFCD  F01C         	goto	u8240
 15769  003998                     u8230:
 15770  003998  0E00               	movlw	0
 15771  00399A                     u8240:
 15772  00399A  6E17               	movwf	_atoi$1844^0,c
 15773  00399C  6A18               	clrf	(_atoi$1844+1)^0,c
 15774  00399E  5017               	movf	_atoi$1844^0,w,c
 15775  0039A0  1018               	iorwf	(_atoi$1844+1)^0,w,c
 15776  0039A2  A4D8               	btfss	status,2,c
 15777  0039A4  EFD6  F01C         	goto	u8251
 15778  0039A8  EFD8  F01C         	goto	u8250
 15779  0039AC                     u8251:
 15780  0039AC  EF95  F01C         	goto	l6747
 15781  0039B0                     u8250:
 15782  0039B0  5013               	movf	atoi@neg^0,w,c
 15783  0039B2  1014               	iorwf	(atoi@neg+1)^0,w,c
 15784  0039B4  A4D8               	btfss	status,2,c
 15785  0039B6  EFDF  F01C         	goto	u8261
 15786  0039BA  EFE1  F01C         	goto	u8260
 15787  0039BE                     u8261:
 15788  0039BE  EFEF  F01C         	goto	l1532
 15789  0039C2                     u8260:
 15790  0039C2  C01A  F00F         	movff	atoi@n,??_atoi
 15791  0039C6  C01B  F010         	movff	atoi@n+1,??_atoi+1
 15792  0039CA  1E0F               	comf	??_atoi^0,f,c
 15793  0039CC  1E10               	comf	(??_atoi+1)^0,f,c
 15794  0039CE  4A0F               	infsnz	??_atoi^0,f,c
 15795  0039D0  2A10               	incf	(??_atoi+1)^0,f,c
 15796  0039D2  C00F  F00D         	movff	??_atoi,?_atoi
 15797  0039D6  C010  F00E         	movff	??_atoi+1,?_atoi+1
 15798  0039DA  EFF3  F01C         	goto	l1535
 15799  0039DE                     l1532:
 15800  0039DE  C01A  F00D         	movff	atoi@n,?_atoi
 15801  0039E2  C01B  F00E         	movff	atoi@n+1,?_atoi+1
 15802  0039E6                     l1535:
 15803  0039E6  0012               	return		;funcret
 15804  0039E8                     __end_of_atoi:
 15805                           	callstack 0
 15806                           
 15807 ;; *************** function _isspace *****************
 15808 ;; Defined at:
 15809 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 15810 ;; Parameters:    Size  Location     Type
 15811 ;;  c               2    5[COMRAM] int 
 15812 ;; Auto vars:     Size  Location     Type
 15813 ;;		None
 15814 ;; Return value:  Size  Location     Type
 15815 ;;                  2    5[COMRAM] int 
 15816 ;; Registers used:
 15817 ;;		wreg, status,2, status,0
 15818 ;; Tracked objects:
 15819 ;;		On entry : 0/0
 15820 ;;		On exit  : 0/0
 15821 ;;		Unchanged: 0/0
 15822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15823 ;;      Params:         2       0       0       0       0       0       0
 15824 ;;      Locals:         1       0       0       0       0       0       0
 15825 ;;      Temps:          4       0       0       0       0       0       0
 15826 ;;      Totals:         7       0       0       0       0       0       0
 15827 ;;Total ram usage:        7 bytes
 15828 ;; Hardware stack levels used: 1
 15829 ;; Hardware stack levels required when called: 1
 15830 ;; This function calls:
 15831 ;;		Nothing
 15832 ;; This function is called by:
 15833 ;;		_atoi
 15834 ;; This function uses a non-reentrant model
 15835 ;;
 15836                           
 15837                           	psect	text61
 15838  0053F8                     __ptext61:
 15839                           	callstack 0
 15840  0053F8                     _isspace:
 15841                           	callstack 24
 15842  0053F8  0E01               	movlw	1
 15843  0053FA  6E0C               	movwf	_isspace$1869^0,c
 15844  0053FC  0E20               	movlw	32
 15845  0053FE  1806               	xorwf	isspace@c^0,w,c
 15846  005400  1007               	iorwf	(isspace@c+1)^0,w,c
 15847  005402  B4D8               	btfsc	status,2,c
 15848  005404  EF06  F02A         	goto	u7691
 15849  005408  EF08  F02A         	goto	u7690
 15850  00540C                     u7691:
 15851  00540C  EF21  F02A         	goto	l6513
 15852  005410                     u7690:
 15853  005410  0EF7               	movlw	247
 15854  005412  6E08               	movwf	??_isspace^0,c
 15855  005414  0EFF               	movlw	255
 15856  005416  6E09               	movwf	(??_isspace+1)^0,c
 15857  005418  C006  F00A         	movff	isspace@c,??_isspace+2
 15858  00541C  C007  F00B         	movff	isspace@c+1,??_isspace+3
 15859  005420  5008               	movf	??_isspace^0,w,c
 15860  005422  260A               	addwf	(??_isspace+2)^0,f,c
 15861  005424  5009               	movf	(??_isspace+1)^0,w,c
 15862  005426  220B               	addwfc	(??_isspace+3)^0,f,c
 15863  005428  500B               	movf	(??_isspace+3)^0,w,c
 15864  00542A  E109               	bnz	u7700
 15865  00542C  0E05               	movlw	5
 15866  00542E  5C0A               	subwf	(??_isspace+2)^0,w,c
 15867  005430  A0D8               	btfss	status,0,c
 15868  005432  EF1D  F02A         	goto	u7701
 15869  005436  EF1F  F02A         	goto	u7700
 15870  00543A                     u7701:
 15871  00543A  EF21  F02A         	goto	l6513
 15872  00543E                     u7700:
 15873  00543E  0E00               	movlw	0
 15874  005440  6E0C               	movwf	_isspace$1869^0,c
 15875  005442                     l6513:
 15876  005442  C00C  F006         	movff	_isspace$1869,?_isspace
 15877  005446  6A07               	clrf	(?_isspace+1)^0,c
 15878  005448  0012               	return		;funcret
 15879  00544A                     __end_of_isspace:
 15880                           	callstack 0
 15881                           
 15882 ;; *************** function _isdigit *****************
 15883 ;; Defined at:
 15884 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 15885 ;; Parameters:    Size  Location     Type
 15886 ;;  c               2    5[COMRAM] int 
 15887 ;; Auto vars:     Size  Location     Type
 15888 ;;		None
 15889 ;; Return value:  Size  Location     Type
 15890 ;;                  2    5[COMRAM] int 
 15891 ;; Registers used:
 15892 ;;		wreg, status,2, status,0
 15893 ;; Tracked objects:
 15894 ;;		On entry : 0/0
 15895 ;;		On exit  : 0/0
 15896 ;;		Unchanged: 0/0
 15897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15898 ;;      Params:         2       0       0       0       0       0       0
 15899 ;;      Locals:         0       0       0       0       0       0       0
 15900 ;;      Temps:          4       0       0       0       0       0       0
 15901 ;;      Totals:         6       0       0       0       0       0       0
 15902 ;;Total ram usage:        6 bytes
 15903 ;; Hardware stack levels used: 1
 15904 ;; Hardware stack levels required when called: 1
 15905 ;; This function calls:
 15906 ;;		Nothing
 15907 ;; This function is called by:
 15908 ;;		_vfpfcnvrt
 15909 ;;		_atoi
 15910 ;; This function uses a non-reentrant model
 15911 ;;
 15912                           
 15913                           	psect	text62
 15914  005600                     __ptext62:
 15915                           	callstack 0
 15916  005600                     _isdigit:
 15917                           	callstack 25
 15918  005600  0ED0               	movlw	208
 15919  005602  6E08               	movwf	??_isdigit^0,c
 15920  005604  0EFF               	movlw	255
 15921  005606  6E09               	movwf	(??_isdigit+1)^0,c
 15922  005608  C006  F00A         	movff	isdigit@c,??_isdigit+2
 15923  00560C  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
 15924  005610  5008               	movf	??_isdigit^0,w,c
 15925  005612  260A               	addwf	(??_isdigit+2)^0,f,c
 15926  005614  5009               	movf	(??_isdigit+1)^0,w,c
 15927  005616  220B               	addwfc	(??_isdigit+3)^0,f,c
 15928  005618  500B               	movf	(??_isdigit+3)^0,w,c
 15929  00561A  E10A               	bnz	u7670
 15930  00561C  0E0A               	movlw	10
 15931  00561E  5C0A               	subwf	(??_isdigit+2)^0,w,c
 15932  005620  A0D8               	btfss	status,0,c
 15933  005622  EF15  F02B         	goto	u7671
 15934  005626  EF18  F02B         	goto	u7670
 15935  00562A                     u7671:
 15936  00562A  0E01               	movlw	1
 15937  00562C  EF19  F02B         	goto	u7680
 15938  005630                     u7670:
 15939  005630  0E00               	movlw	0
 15940  005632                     u7680:
 15941  005632  6E06               	movwf	?_isdigit^0,c
 15942  005634  6A07               	clrf	(?_isdigit+1)^0,c
 15943  005636  0012               	return		;funcret
 15944  005638                     __end_of_isdigit:
 15945                           	callstack 0
 15946                           
 15947 ;; *************** function ___wmul *****************
 15948 ;; Defined at:
 15949 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 15950 ;; Parameters:    Size  Location     Type
 15951 ;;  multiplier      2    5[COMRAM] unsigned int 
 15952 ;;  multiplicand    2    7[COMRAM] unsigned int 
 15953 ;; Auto vars:     Size  Location     Type
 15954 ;;  product         2    9[COMRAM] unsigned int 
 15955 ;; Return value:  Size  Location     Type
 15956 ;;                  2    5[COMRAM] unsigned int 
 15957 ;; Registers used:
 15958 ;;		wreg, status,2, status,0, prodl, prodh
 15959 ;; Tracked objects:
 15960 ;;		On entry : 0/0
 15961 ;;		On exit  : 0/0
 15962 ;;		Unchanged: 0/0
 15963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15964 ;;      Params:         4       0       0       0       0       0       0
 15965 ;;      Locals:         2       0       0       0       0       0       0
 15966 ;;      Temps:          0       0       0       0       0       0       0
 15967 ;;      Totals:         6       0       0       0       0       0       0
 15968 ;;Total ram usage:        6 bytes
 15969 ;; Hardware stack levels used: 1
 15970 ;; Hardware stack levels required when called: 1
 15971 ;; This function calls:
 15972 ;;		Nothing
 15973 ;; This function is called by:
 15974 ;;		_atoi
 15975 ;; This function uses a non-reentrant model
 15976 ;;
 15977                           
 15978                           	psect	text63
 15979  005686                     __ptext63:
 15980                           	callstack 0
 15981  005686                     ___wmul:
 15982                           	callstack 24
 15983  005686  5006               	movf	___wmul@multiplier^0,w,c
 15984  005688  0208               	mulwf	___wmul@multiplicand^0,c
 15985  00568A  CFF3 F00A          	movff	prodl,___wmul@product
 15986  00568E  CFF4 F00B          	movff	prodh,___wmul@product+1
 15987  005692  5006               	movf	___wmul@multiplier^0,w,c
 15988  005694  0209               	mulwf	(___wmul@multiplicand+1)^0,c
 15989  005696  50F3               	movf	243,w,c
 15990  005698  260B               	addwf	(___wmul@product+1)^0,f,c
 15991  00569A  5007               	movf	(___wmul@multiplier+1)^0,w,c
 15992  00569C  0208               	mulwf	___wmul@multiplicand^0,c
 15993  00569E  50F3               	movf	243,w,c
 15994  0056A0  260B               	addwf	(___wmul@product+1)^0,f,c
 15995  0056A2  C00A  F006         	movff	___wmul@product,?___wmul
 15996  0056A6  C00B  F007         	movff	___wmul@product+1,?___wmul+1
 15997  0056AA  0012               	return		;funcret
 15998  0056AC                     __end_of___wmul:
 15999                           	callstack 0
 16000                           
 16001 ;; *************** function _clust2sect *****************
 16002 ;; Defined at:
 16003 ;;		line 396 in file "pff.c"
 16004 ;; Parameters:    Size  Location     Type
 16005 ;;  clst            4   17[COMRAM] unsigned long 
 16006 ;; Auto vars:     Size  Location     Type
 16007 ;;  fs              2   26[COMRAM] PTR struct .
 16008 ;;		 -> NULL(0), main@fs(42), 
 16009 ;; Return value:  Size  Location     Type
 16010 ;;                  4   17[COMRAM] unsigned long 
 16011 ;; Registers used:
 16012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16013 ;; Tracked objects:
 16014 ;;		On entry : 0/0
 16015 ;;		On exit  : 0/0
 16016 ;;		Unchanged: 0/0
 16017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16018 ;;      Params:         4       0       0       0       0       0       0
 16019 ;;      Locals:         2       0       0       0       0       0       0
 16020 ;;      Temps:          5       0       0       0       0       0       0
 16021 ;;      Totals:        11       0       0       0       0       0       0
 16022 ;;Total ram usage:       11 bytes
 16023 ;; Hardware stack levels used: 1
 16024 ;; Hardware stack levels required when called: 2
 16025 ;; This function calls:
 16026 ;;		___lmul
 16027 ;; This function is called by:
 16028 ;;		_dir_rewind
 16029 ;;		_dir_next
 16030 ;;		_pf_read
 16031 ;;		_pf_lseek
 16032 ;; This function uses a non-reentrant model
 16033 ;;
 16034                           
 16035                           	psect	text64
 16036  004BA8                     __ptext64:
 16037                           	callstack 0
 16038  004BA8                     _clust2sect:
 16039                           	callstack 26
 16040  004BA8                     
 16041                           ;pff.c: 397:  DWORD clst;pff.c: 399: {;pff.c: 400:  FATFS *fs = FatFs;
 16042  004BA8  C0FD  F01B         	movff	_FatFs,clust2sect@fs
 16043  004BAC  C0FE  F01C         	movff	_FatFs+1,clust2sect@fs+1
 16044                           
 16045                           ;pff.c: 403:  clst -= 2;
 16046  004BB0  0E02               	movlw	2
 16047  004BB2  5E12               	subwf	clust2sect@clst^0,f,c
 16048  004BB4  0E00               	movlw	0
 16049  004BB6  5A13               	subwfb	(clust2sect@clst+1)^0,f,c
 16050  004BB8  5A14               	subwfb	(clust2sect@clst+2)^0,f,c
 16051  004BBA  5A15               	subwfb	(clust2sect@clst+3)^0,f,c
 16052  004BBC                     
 16053                           ;pff.c: 404:  if (clst >= (fs->n_fatent - 2)) return 0;
 16054  004BBC  EE20 F006          	lfsr	2,6
 16055  004BC0  501B               	movf	clust2sect@fs^0,w,c
 16056  004BC2  26D9               	addwf	fsr2l,f,c
 16057  004BC4  501C               	movf	(clust2sect@fs+1)^0,w,c
 16058  004BC6  22DA               	addwfc	fsr2h,f,c
 16059  004BC8  0EFE               	movlw	254
 16060  004BCA  24DE               	addwf	postinc2,w,c
 16061  004BCC  6E16               	movwf	??_clust2sect^0,c
 16062  004BCE  0EFF               	movlw	255
 16063  004BD0  20DE               	addwfc	postinc2,w,c
 16064  004BD2  6E17               	movwf	(??_clust2sect+1)^0,c
 16065  004BD4  0EFF               	movlw	255
 16066  004BD6  20DE               	addwfc	postinc2,w,c
 16067  004BD8  6E18               	movwf	(??_clust2sect+2)^0,c
 16068  004BDA  0EFF               	movlw	255
 16069  004BDC  20DE               	addwfc	postinc2,w,c
 16070  004BDE  6E19               	movwf	(??_clust2sect+3)^0,c
 16071  004BE0  5016               	movf	??_clust2sect^0,w,c
 16072  004BE2  5C12               	subwf	clust2sect@clst^0,w,c
 16073  004BE4  5017               	movf	(??_clust2sect+1)^0,w,c
 16074  004BE6  5813               	subwfb	(clust2sect@clst+1)^0,w,c
 16075  004BE8  5018               	movf	(??_clust2sect+2)^0,w,c
 16076  004BEA  5814               	subwfb	(clust2sect@clst+2)^0,w,c
 16077  004BEC  5019               	movf	(??_clust2sect+3)^0,w,c
 16078  004BEE  5815               	subwfb	(clust2sect@clst+3)^0,w,c
 16079  004BF0  A0D8               	btfss	status,0,c
 16080  004BF2  EFFD  F025         	goto	u5171
 16081  004BF6  EFFF  F025         	goto	u5170
 16082  004BFA                     u5171:
 16083  004BFA  EF09  F026         	goto	l4747
 16084  004BFE                     u5170:
 16085  004BFE  0E00               	movlw	0
 16086  004C00  6E12               	movwf	?_clust2sect^0,c
 16087  004C02  0E00               	movlw	0
 16088  004C04  6E13               	movwf	(?_clust2sect+1)^0,c
 16089  004C06  0E00               	movlw	0
 16090  004C08  6E14               	movwf	(?_clust2sect+2)^0,c
 16091  004C0A  0E00               	movlw	0
 16092  004C0C  6E15               	movwf	(?_clust2sect+3)^0,c
 16093  004C0E  EF3A  F026         	goto	l202
 16094  004C12                     l4747:
 16095                           
 16096                           ;pff.c: 405:  return (DWORD)clst * fs->csize + fs->database;
 16097  004C12  EE20 F012          	lfsr	2,18
 16098  004C16  501B               	movf	clust2sect@fs^0,w,c
 16099  004C18  26D9               	addwf	fsr2l,f,c
 16100  004C1A  501C               	movf	(clust2sect@fs+1)^0,w,c
 16101  004C1C  22DA               	addwfc	fsr2h,f,c
 16102  004C1E  CFDE F016          	movff	postinc2,??_clust2sect
 16103  004C22  CFDE F017          	movff	postinc2,??_clust2sect+1
 16104  004C26  CFDE F018          	movff	postinc2,??_clust2sect+2
 16105  004C2A  CFDE F019          	movff	postinc2,??_clust2sect+3
 16106  004C2E  EE20 F002          	lfsr	2,2
 16107  004C32  501B               	movf	clust2sect@fs^0,w,c
 16108  004C34  26D9               	addwf	fsr2l,f,c
 16109  004C36  501C               	movf	(clust2sect@fs+1)^0,w,c
 16110  004C38  22DA               	addwfc	fsr2h,f,c
 16111  004C3A  50DF               	movf	indf2,w,c
 16112  004C3C  6E1A               	movwf	(??_clust2sect+4)^0,c
 16113  004C3E  501A               	movf	(??_clust2sect+4)^0,w,c
 16114  004C40  6E06               	movwf	___lmul@multiplier^0,c
 16115  004C42  6A07               	clrf	(___lmul@multiplier+1)^0,c
 16116  004C44  6A08               	clrf	(___lmul@multiplier+2)^0,c
 16117  004C46  6A09               	clrf	(___lmul@multiplier+3)^0,c
 16118  004C48  C012  F00A         	movff	clust2sect@clst,___lmul@multiplicand
 16119  004C4C  C013  F00B         	movff	clust2sect@clst+1,___lmul@multiplicand+1
 16120  004C50  C014  F00C         	movff	clust2sect@clst+2,___lmul@multiplicand+2
 16121  004C54  C015  F00D         	movff	clust2sect@clst+3,___lmul@multiplicand+3
 16122  004C58  EC38  F029         	call	___lmul	;wreg free
 16123  004C5C  5016               	movf	??_clust2sect^0,w,c
 16124  004C5E  2406               	addwf	?___lmul^0,w,c
 16125  004C60  6E12               	movwf	?_clust2sect^0,c
 16126  004C62  5017               	movf	(??_clust2sect+1)^0,w,c
 16127  004C64  2007               	addwfc	(?___lmul+1)^0,w,c
 16128  004C66  6E13               	movwf	(?_clust2sect+1)^0,c
 16129  004C68  5018               	movf	(??_clust2sect+2)^0,w,c
 16130  004C6A  2008               	addwfc	(?___lmul+2)^0,w,c
 16131  004C6C  6E14               	movwf	(?_clust2sect+2)^0,c
 16132  004C6E  5019               	movf	(??_clust2sect+3)^0,w,c
 16133  004C70  2009               	addwfc	(?___lmul+3)^0,w,c
 16134  004C72  6E15               	movwf	(?_clust2sect+3)^0,c
 16135  004C74                     l202:
 16136  004C74  0012               	return		;funcret
 16137  004C76                     __end_of_clust2sect:
 16138                           	callstack 0
 16139                           
 16140 ;; *************** function ___lmul *****************
 16141 ;; Defined at:
 16142 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
 16143 ;; Parameters:    Size  Location     Type
 16144 ;;  multiplier      4    5[COMRAM] unsigned long 
 16145 ;;  multiplicand    4    9[COMRAM] unsigned long 
 16146 ;; Auto vars:     Size  Location     Type
 16147 ;;  product         4   13[COMRAM] unsigned long 
 16148 ;; Return value:  Size  Location     Type
 16149 ;;                  4    5[COMRAM] unsigned long 
 16150 ;; Registers used:
 16151 ;;		wreg, status,2, status,0
 16152 ;; Tracked objects:
 16153 ;;		On entry : 0/0
 16154 ;;		On exit  : 0/0
 16155 ;;		Unchanged: 0/0
 16156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16157 ;;      Params:         8       0       0       0       0       0       0
 16158 ;;      Locals:         4       0       0       0       0       0       0
 16159 ;;      Temps:          0       0       0       0       0       0       0
 16160 ;;      Totals:        12       0       0       0       0       0       0
 16161 ;;Total ram usage:       12 bytes
 16162 ;; Hardware stack levels used: 1
 16163 ;; Hardware stack levels required when called: 1
 16164 ;; This function calls:
 16165 ;;		Nothing
 16166 ;; This function is called by:
 16167 ;;		_clust2sect
 16168 ;;		_pf_mount
 16169 ;;		_xatoi
 16170 ;; This function uses a non-reentrant model
 16171 ;;
 16172                           
 16173                           	psect	text65
 16174  005270                     __ptext65:
 16175                           	callstack 0
 16176  005270                     ___lmul:
 16177                           	callstack 28
 16178  005270  0E00               	movlw	0
 16179  005272  6E0E               	movwf	___lmul@product^0,c
 16180  005274  0E00               	movlw	0
 16181  005276  6E0F               	movwf	(___lmul@product+1)^0,c
 16182  005278  0E00               	movlw	0
 16183  00527A  6E10               	movwf	(___lmul@product+2)^0,c
 16184  00527C  0E00               	movlw	0
 16185  00527E  6E11               	movwf	(___lmul@product+3)^0,c
 16186  005280                     l4703:
 16187  005280  A006               	btfss	___lmul@multiplier^0,0,c
 16188  005282  EF45  F029         	goto	u5111
 16189  005286  EF47  F029         	goto	u5110
 16190  00528A                     u5111:
 16191  00528A  EF4F  F029         	goto	l4707
 16192  00528E                     u5110:
 16193  00528E  500A               	movf	___lmul@multiplicand^0,w,c
 16194  005290  260E               	addwf	___lmul@product^0,f,c
 16195  005292  500B               	movf	(___lmul@multiplicand+1)^0,w,c
 16196  005294  220F               	addwfc	(___lmul@product+1)^0,f,c
 16197  005296  500C               	movf	(___lmul@multiplicand+2)^0,w,c
 16198  005298  2210               	addwfc	(___lmul@product+2)^0,f,c
 16199  00529A  500D               	movf	(___lmul@multiplicand+3)^0,w,c
 16200  00529C  2211               	addwfc	(___lmul@product+3)^0,f,c
 16201  00529E                     l4707:
 16202  00529E  90D8               	bcf	status,0,c
 16203  0052A0  360A               	rlcf	___lmul@multiplicand^0,f,c
 16204  0052A2  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
 16205  0052A4  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
 16206  0052A6  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
 16207  0052A8  90D8               	bcf	status,0,c
 16208  0052AA  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
 16209  0052AC  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
 16210  0052AE  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
 16211  0052B0  3206               	rrcf	___lmul@multiplier^0,f,c
 16212  0052B2  5006               	movf	___lmul@multiplier^0,w,c
 16213  0052B4  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
 16214  0052B6  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
 16215  0052B8  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
 16216  0052BA  A4D8               	btfss	status,2,c
 16217  0052BC  EF62  F029         	goto	u5121
 16218  0052C0  EF64  F029         	goto	u5120
 16219  0052C4                     u5121:
 16220  0052C4  EF40  F029         	goto	l4703
 16221  0052C8                     u5120:
 16222  0052C8  C00E  F006         	movff	___lmul@product,?___lmul
 16223  0052CC  C00F  F007         	movff	___lmul@product+1,?___lmul+1
 16224  0052D0  C010  F008         	movff	___lmul@product+2,?___lmul+2
 16225  0052D4  C011  F009         	movff	___lmul@product+3,?___lmul+3
 16226  0052D8  0012               	return		;funcret
 16227  0052DA                     __end_of___lmul:
 16228                           	callstack 0
 16229                           
 16230 ;; *************** function ___lldiv *****************
 16231 ;; Defined at:
 16232 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 16233 ;; Parameters:    Size  Location     Type
 16234 ;;  dividend        4    5[COMRAM] unsigned long 
 16235 ;;  divisor         4    9[COMRAM] unsigned long 
 16236 ;; Auto vars:     Size  Location     Type
 16237 ;;  quotient        4   13[COMRAM] unsigned long 
 16238 ;;  counter         1   17[COMRAM] unsigned char 
 16239 ;; Return value:  Size  Location     Type
 16240 ;;                  4    5[COMRAM] unsigned long 
 16241 ;; Registers used:
 16242 ;;		wreg, status,2, status,0
 16243 ;; Tracked objects:
 16244 ;;		On entry : 0/0
 16245 ;;		On exit  : 0/0
 16246 ;;		Unchanged: 0/0
 16247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16248 ;;      Params:         8       0       0       0       0       0       0
 16249 ;;      Locals:         5       0       0       0       0       0       0
 16250 ;;      Temps:          0       0       0       0       0       0       0
 16251 ;;      Totals:        13       0       0       0       0       0       0
 16252 ;;Total ram usage:       13 bytes
 16253 ;; Hardware stack levels used: 1
 16254 ;; Hardware stack levels required when called: 1
 16255 ;; This function calls:
 16256 ;;		Nothing
 16257 ;; This function is called by:
 16258 ;;		_pf_mount
 16259 ;;		_pf_lseek
 16260 ;; This function uses a non-reentrant model
 16261 ;;
 16262                           
 16263                           	psect	text66
 16264  004EA2                     __ptext66:
 16265                           	callstack 0
 16266  004EA2                     ___lldiv:
 16267                           	callstack 28
 16268  004EA2  0E00               	movlw	0
 16269  004EA4  6E0E               	movwf	___lldiv@quotient^0,c
 16270  004EA6  0E00               	movlw	0
 16271  004EA8  6E0F               	movwf	(___lldiv@quotient+1)^0,c
 16272  004EAA  0E00               	movlw	0
 16273  004EAC  6E10               	movwf	(___lldiv@quotient+2)^0,c
 16274  004EAE  0E00               	movlw	0
 16275  004EB0  6E11               	movwf	(___lldiv@quotient+3)^0,c
 16276  004EB2  500A               	movf	___lldiv@divisor^0,w,c
 16277  004EB4  100B               	iorwf	(___lldiv@divisor+1)^0,w,c
 16278  004EB6  100C               	iorwf	(___lldiv@divisor+2)^0,w,c
 16279  004EB8  100D               	iorwf	(___lldiv@divisor+3)^0,w,c
 16280  004EBA  B4D8               	btfsc	status,2,c
 16281  004EBC  EF62  F027         	goto	u6071
 16282  004EC0  EF64  F027         	goto	u6070
 16283  004EC4                     u6071:
 16284  004EC4  EF9A  F027         	goto	l662
 16285  004EC8                     u6070:
 16286  004EC8  0E01               	movlw	1
 16287  004ECA  6E12               	movwf	___lldiv@counter^0,c
 16288  004ECC  EF6E  F027         	goto	l5279
 16289  004ED0                     l5277:
 16290  004ED0  90D8               	bcf	status,0,c
 16291  004ED2  360A               	rlcf	___lldiv@divisor^0,f,c
 16292  004ED4  360B               	rlcf	(___lldiv@divisor+1)^0,f,c
 16293  004ED6  360C               	rlcf	(___lldiv@divisor+2)^0,f,c
 16294  004ED8  360D               	rlcf	(___lldiv@divisor+3)^0,f,c
 16295  004EDA  2A12               	incf	___lldiv@counter^0,f,c
 16296  004EDC                     l5279:
 16297  004EDC  AE0D               	btfss	(___lldiv@divisor+3)^0,7,c
 16298  004EDE  EF73  F027         	goto	u6081
 16299  004EE2  EF75  F027         	goto	u6080
 16300  004EE6                     u6081:
 16301  004EE6  EF68  F027         	goto	l5277
 16302  004EEA                     u6080:
 16303  004EEA                     l5281:
 16304  004EEA  90D8               	bcf	status,0,c
 16305  004EEC  360E               	rlcf	___lldiv@quotient^0,f,c
 16306  004EEE  360F               	rlcf	(___lldiv@quotient+1)^0,f,c
 16307  004EF0  3610               	rlcf	(___lldiv@quotient+2)^0,f,c
 16308  004EF2  3611               	rlcf	(___lldiv@quotient+3)^0,f,c
 16309  004EF4  500A               	movf	___lldiv@divisor^0,w,c
 16310  004EF6  5C06               	subwf	___lldiv@dividend^0,w,c
 16311  004EF8  500B               	movf	(___lldiv@divisor+1)^0,w,c
 16312  004EFA  5807               	subwfb	(___lldiv@dividend+1)^0,w,c
 16313  004EFC  500C               	movf	(___lldiv@divisor+2)^0,w,c
 16314  004EFE  5808               	subwfb	(___lldiv@dividend+2)^0,w,c
 16315  004F00  500D               	movf	(___lldiv@divisor+3)^0,w,c
 16316  004F02  5809               	subwfb	(___lldiv@dividend+3)^0,w,c
 16317  004F04  A0D8               	btfss	status,0,c
 16318  004F06  EF87  F027         	goto	u6091
 16319  004F0A  EF89  F027         	goto	u6090
 16320  004F0E                     u6091:
 16321  004F0E  EF92  F027         	goto	l5289
 16322  004F12                     u6090:
 16323  004F12  500A               	movf	___lldiv@divisor^0,w,c
 16324  004F14  5E06               	subwf	___lldiv@dividend^0,f,c
 16325  004F16  500B               	movf	(___lldiv@divisor+1)^0,w,c
 16326  004F18  5A07               	subwfb	(___lldiv@dividend+1)^0,f,c
 16327  004F1A  500C               	movf	(___lldiv@divisor+2)^0,w,c
 16328  004F1C  5A08               	subwfb	(___lldiv@dividend+2)^0,f,c
 16329  004F1E  500D               	movf	(___lldiv@divisor+3)^0,w,c
 16330  004F20  5A09               	subwfb	(___lldiv@dividend+3)^0,f,c
 16331  004F22  800E               	bsf	___lldiv@quotient^0,0,c
 16332  004F24                     l5289:
 16333  004F24  90D8               	bcf	status,0,c
 16334  004F26  320D               	rrcf	(___lldiv@divisor+3)^0,f,c
 16335  004F28  320C               	rrcf	(___lldiv@divisor+2)^0,f,c
 16336  004F2A  320B               	rrcf	(___lldiv@divisor+1)^0,f,c
 16337  004F2C  320A               	rrcf	___lldiv@divisor^0,f,c
 16338  004F2E  2E12               	decfsz	___lldiv@counter^0,f,c
 16339  004F30  EF75  F027         	goto	l5281
 16340  004F34                     l662:
 16341  004F34  C00E  F006         	movff	___lldiv@quotient,?___lldiv
 16342  004F38  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
 16343  004F3C  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
 16344  004F40  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
 16345  004F44  0012               	return		;funcret
 16346  004F46                     __end_of___lldiv:
 16347                           	callstack 0
 16348                           
 16349 ;; *************** function _gpio_init *****************
 16350 ;; Defined at:
 16351 ;;		line 45 in file "main.c"
 16352 ;; Parameters:    Size  Location     Type
 16353 ;;		None
 16354 ;; Auto vars:     Size  Location     Type
 16355 ;;		None
 16356 ;; Return value:  Size  Location     Type
 16357 ;;                  1    wreg      void 
 16358 ;; Registers used:
 16359 ;;		None
 16360 ;; Tracked objects:
 16361 ;;		On entry : 0/0
 16362 ;;		On exit  : 0/0
 16363 ;;		Unchanged: 0/0
 16364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16365 ;;      Params:         0       0       0       0       0       0       0
 16366 ;;      Locals:         0       0       0       0       0       0       0
 16367 ;;      Temps:          0       0       0       0       0       0       0
 16368 ;;      Totals:         0       0       0       0       0       0       0
 16369 ;;Total ram usage:        0 bytes
 16370 ;; Hardware stack levels used: 1
 16371 ;; Hardware stack levels required when called: 1
 16372 ;; This function calls:
 16373 ;;		Nothing
 16374 ;; This function is called by:
 16375 ;;		_main
 16376 ;; This function uses a non-reentrant model
 16377 ;;
 16378                           
 16379                           	psect	text67
 16380  005724                     __ptext67:
 16381                           	callstack 0
 16382  005724                     _gpio_init:
 16383                           	callstack 29
 16384  005724                     
 16385                           ;main.c: 52:     TRISCbits.RC7 = 1;
 16386  005724  8E94               	bsf	148,7,c	;volatile
 16387                           
 16388                           ;main.c: 53:     TRISCbits.RC6 = 0;
 16389  005726  9C94               	bcf	148,6,c	;volatile
 16390                           
 16391                           ;main.c: 56:     TRISAbits.RA5 = 0;
 16392  005728  9A92               	bcf	146,5,c	;volatile
 16393                           
 16394                           ;main.c: 57:     LATAbits.LA5 = 1;
 16395  00572A  8A89               	bsf	137,5,c	;volatile
 16396                           
 16397                           ;main.c: 59:     TRISCbits.RC5 = 0;
 16398  00572C  9A94               	bcf	148,5,c	;volatile
 16399                           
 16400                           ;main.c: 60:     TRISCbits.RC4 = 1;
 16401  00572E  8894               	bsf	148,4,c	;volatile
 16402                           
 16403                           ;main.c: 61:     TRISCbits.RC3 = 0;
 16404  005730  9694               	bcf	148,3,c	;volatile
 16405  005732  0012               	return		;funcret
 16406  005734                     __end_of_gpio_init:
 16407                           	callstack 0
 16408                           
 16409 ;; *************** function _isr_high *****************
 16410 ;; Defined at:
 16411 ;;		line 68 in file "uart.c"
 16412 ;; Parameters:    Size  Location     Type
 16413 ;;		None
 16414 ;; Auto vars:     Size  Location     Type
 16415 ;;  i               2    3[COMRAM] int 
 16416 ;;  d               1    2[COMRAM] unsigned char 
 16417 ;; Return value:  Size  Location     Type
 16418 ;;                  1    wreg      void 
 16419 ;; Registers used:
 16420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16421 ;; Tracked objects:
 16422 ;;		On entry : 0/0
 16423 ;;		On exit  : 0/0
 16424 ;;		Unchanged: 0/0
 16425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16426 ;;      Params:         0       0       0       0       0       0       0
 16427 ;;      Locals:         3       0       0       0       0       0       0
 16428 ;;      Temps:          2       0       0       0       0       0       0
 16429 ;;      Totals:         5       0       0       0       0       0       0
 16430 ;;Total ram usage:        5 bytes
 16431 ;; Hardware stack levels used: 1
 16432 ;; This function calls:
 16433 ;;		Nothing
 16434 ;; This function is called by:
 16435 ;;		Interrupt level 2
 16436 ;; This function uses a non-reentrant model
 16437 ;;
 16438                           
 16439                           	psect	intcode
 16440  000008                     __pintcode:
 16441                           	callstack 0
 16442  000008                     _isr_high:
 16443                           	callstack 16
 16444                           
 16445                           ;incstack = 0
 16446  000008  827A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16447  00000A  EDFE  F026         	call	int_func,f	;refresh shadow registers
 16448                           
 16449                           	psect	intcode_body
 16450  004DFC                     __pintcode_body:
 16451                           	callstack 16
 16452  004DFC                     int_func:
 16453                           	callstack 16
 16454  004DFC  0006               	pop		; remove dummy address from shadow register refresh
 16455  004DFE  CFD9 F001          	movff	fsr2l,??_isr_high
 16456  004E02  CFDA F002          	movff	fsr2h,??_isr_high+1
 16457  004E06                     
 16458                           ;uart.c: 70:     if(INTCONbits.INT0IF)
 16459  004E06  50F2               	movf	242,w,c	;volatile
 16460  004E08                     
 16461                           ;uart.c: 74:     if (RCIE && RCIF)
 16462  004E08  AA9D               	btfss	3997,5,c	;volatile
 16463  004E0A  EF09  F027         	goto	i2u720_41
 16464  004E0E  EF0B  F027         	goto	i2u720_40
 16465  004E12                     i2u720_41:
 16466  004E12  EF4B  F027         	goto	i2l445
 16467  004E16                     i2u720_40:
 16468  004E16  AA9E               	btfss	3998,5,c	;volatile
 16469  004E18  EF10  F027         	goto	i2u721_41
 16470  004E1C  EF12  F027         	goto	i2u721_40
 16471  004E20                     i2u721_41:
 16472  004E20  EF4B  F027         	goto	i2l445
 16473  004E24                     i2u721_40:
 16474  004E24                     
 16475                           ;uart.c: 75:     {;uart.c: 76:         BYTE d;;uart.c: 77:         int i;;uart.c: 79:   
      +                                d = (BYTE)RCREG;
 16476  004E24  CFAE F003          	movff	4014,isr_high@d	;volatile
 16477                           
 16478                           ;uart.c: 80:         RCIF = 0;
 16479  004E28  9A9E               	bcf	3998,5,c	;volatile
 16480                           
 16481                           ;uart.c: 82:         TXREG = RCREG;
 16482  004E2A  CFAE FFAD          	movff	4014,4013	;volatile
 16483                           
 16484                           ;uart.c: 84:         i = RxFifo.ct;
 16485  004E2E  C204  F004         	movff	_RxFifo+4,isr_high@i	;volatile
 16486  004E32  C205  F005         	movff	_RxFifo+5,isr_high@i+1	;volatile
 16487  004E36                     
 16488                           ;uart.c: 85:         if (i < 128) {
 16489  004E36  BE05               	btfsc	(isr_high@i+1)^0,7,c
 16490  004E38  EF29  F027         	goto	i2u722_40
 16491  004E3C  5005               	movf	(isr_high@i+1)^0,w,c
 16492  004E3E  E107               	bnz	i2u722_41
 16493  004E40  0E80               	movlw	128
 16494  004E42  5C04               	subwf	isr_high@i^0,w,c
 16495  004E44  B0D8               	btfsc	status,0,c
 16496  004E46  EF27  F027         	goto	i2u722_41
 16497  004E4A  EF29  F027         	goto	i2u722_40
 16498  004E4E                     i2u722_41:
 16499  004E4E  EF42  F027         	goto	i2l6109
 16500  004E52                     i2u722_40:
 16501  004E52                     
 16502                           ;uart.c: 86:             RxFifo.ct = ++i;
 16503  004E52  4A04               	infsnz	isr_high@i^0,f,c
 16504  004E54  2A05               	incf	(isr_high@i+1)^0,f,c
 16505  004E56  C004  F204         	movff	isr_high@i,_RxFifo+4	;volatile
 16506  004E5A  C005  F205         	movff	isr_high@i+1,_RxFifo+5	;volatile
 16507  004E5E                     
 16508                           ;uart.c: 87:             i = RxFifo.wi;
 16509  004E5E  C202  F004         	movff	_RxFifo+2,isr_high@i	;volatile
 16510  004E62  C203  F005         	movff	_RxFifo+3,isr_high@i+1	;volatile
 16511  004E66                     
 16512                           ;uart.c: 88:             RxFifo.buff[i++] = d;
 16513  004E66  0E06               	movlw	low (_RxFifo+6)
 16514  004E68  2404               	addwf	isr_high@i^0,w,c
 16515  004E6A  6ED9               	movwf	fsr2l,c
 16516  004E6C  0E02               	movlw	high (_RxFifo+6)
 16517  004E6E  2005               	addwfc	(isr_high@i+1)^0,w,c
 16518  004E70  6EDA               	movwf	fsr2h,c
 16519  004E72  C003  FFDF         	movff	isr_high@d,indf2
 16520  004E76  4A04               	infsnz	isr_high@i^0,f,c
 16521  004E78  2A05               	incf	(isr_high@i+1)^0,f,c
 16522  004E7A                     
 16523                           ;uart.c: 89:             RxFifo.wi = i % 128;
 16524  004E7A  0E7F               	movlw	127
 16525  004E7C  1404               	andwf	isr_high@i^0,w,c
 16526  004E7E  0102               	movlb	2	; () banked
 16527  004E80  6F02               	movwf	(_RxFifo+2)& (0+255),b	;volatile
 16528  004E82  6B03               	clrf	(_RxFifo+3)& (0+255),b	;volatile
 16529  004E84                     i2l6109:
 16530                           
 16531                           ;uart.c: 92:         LATBbits.LB1 = PORTBbits.RB1 ^ 0x01;
 16532  004E84  A281               	btfss	129,1,c	;volatile
 16533  004E86  EF47  F027         	goto	i2u723_41
 16534  004E8A  EF4A  F027         	goto	i2u723_40
 16535  004E8E                     i2u723_41:
 16536  004E8E  828A               	bsf	138,1,c	;volatile
 16537  004E90  EF4B  F027         	goto	i2u724_45
 16538  004E94                     i2u723_40:
 16539  004E94  928A               	bcf	138,1,c	;volatile
 16540  004E96                     i2u724_45:
 16541  004E96                     i2l445:
 16542  004E96  C002  FFDA         	movff	??_isr_high+1,fsr2h
 16543  004E9A  C001  FFD9         	movff	??_isr_high,fsr2l
 16544  004E9E  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16545  004EA0  0011               	retfie		f
 16546  004EA2                     __end_of_isr_high:
 16547                           	callstack 0
 16548                           
 16549                           	psect	rparam
 16550  0000                     
 16551                           	psect	temp
 16552  00007A                     btemp:
 16553                           	callstack 0
 16554  00007A                     	ds	1
 16555  0000                     int$flags	set	btemp
 16556  0000                     wtemp8	set	btemp+1
 16557  0000                     ttemp5	set	btemp+1
 16558  0000                     ttemp6	set	btemp+4
 16559  0000                     ttemp7	set	btemp+8
 16560                           
 16561                           	psect	idloc
 16562                           
 16563                           ;Config register IDLOC0 @ 0x200000
 16564                           ;	unspecified, using default values
 16565  200000                     	org	2097152
 16566  200000  FF                 	db	255
 16567                           
 16568                           ;Config register IDLOC1 @ 0x200001
 16569                           ;	unspecified, using default values
 16570  200001                     	org	2097153
 16571  200001  FF                 	db	255
 16572                           
 16573                           ;Config register IDLOC2 @ 0x200002
 16574                           ;	unspecified, using default values
 16575  200002                     	org	2097154
 16576  200002  FF                 	db	255
 16577                           
 16578                           ;Config register IDLOC3 @ 0x200003
 16579                           ;	unspecified, using default values
 16580  200003                     	org	2097155
 16581  200003  FF                 	db	255
 16582                           
 16583                           ;Config register IDLOC4 @ 0x200004
 16584                           ;	unspecified, using default values
 16585  200004                     	org	2097156
 16586  200004  FF                 	db	255
 16587                           
 16588                           ;Config register IDLOC5 @ 0x200005
 16589                           ;	unspecified, using default values
 16590  200005                     	org	2097157
 16591  200005  FF                 	db	255
 16592                           
 16593                           ;Config register IDLOC6 @ 0x200006
 16594                           ;	unspecified, using default values
 16595  200006                     	org	2097158
 16596  200006  FF                 	db	255
 16597                           
 16598                           ;Config register IDLOC7 @ 0x200007
 16599                           ;	unspecified, using default values
 16600  200007                     	org	2097159
 16601  200007  FF                 	db	255
 16602                           
 16603                           	psect	config
 16604                           
 16605                           ; Padding undefined space
 16606  300000                     	org	3145728
 16607  300000  FF                 	db	255
 16608                           
 16609                           ;Config register CONFIG1H @ 0x300001
 16610                           ;	Oscillator Selection bits
 16611                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
 16612                           ;	Fail-Safe Clock Monitor Enable bit
 16613                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16614                           ;	Internal/External Oscillator Switchover bit
 16615                           ;	IESO = OFF, Oscillator Switchover mode disabled
 16616  300001                     	org	3145729
 16617  300001  06                 	db	6
 16618                           
 16619                           ;Config register CONFIG2L @ 0x300002
 16620                           ;	Power-up Timer Enable bit
 16621                           ;	PWRT = OFF, PWRT disabled
 16622                           ;	Brown-out Reset Enable bits
 16623                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 16624                           ;	Brown Out Reset Voltage bits
 16625                           ;	BORV = 3, Minimum setting
 16626  300002                     	org	3145730
 16627  300002  19                 	db	25
 16628                           
 16629                           ;Config register CONFIG2H @ 0x300003
 16630                           ;	Watchdog Timer Enable bit
 16631                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 16632                           ;	Watchdog Timer Postscale Select bits
 16633                           ;	WDTPS = 32768, 1:32768
 16634  300003                     	org	3145731
 16635  300003  1E                 	db	30
 16636                           
 16637                           ; Padding undefined space
 16638  300004                     	org	3145732
 16639  300004  FF                 	db	255
 16640                           
 16641                           ;Config register CONFIG3H @ 0x300005
 16642                           ;	CCP2 MUX bit
 16643                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 16644                           ;	PORTB A/D Enable bit
 16645                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 16646                           ;	Low-Power Timer1 Oscillator Enable bit
 16647                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 16648                           ;	MCLR Pin Enable bit
 16649                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 16650  300005                     	org	3145733
 16651  300005  81                 	db	129
 16652                           
 16653                           ;Config register CONFIG4L @ 0x300006
 16654                           ;	Stack Full/Underflow Reset Enable bit
 16655                           ;	STVREN = ON, Stack full/underflow will cause Reset
 16656                           ;	Single-Supply ICSP Enable bit
 16657                           ;	LVP = OFF, Single-Supply ICSP disabled
 16658                           ;	Extended Instruction Set Enable bit
 16659                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16660                           ;	Background Debugger Enable bit
 16661                           ;	DEBUG = 0x1, unprogrammed default
 16662  300006                     	org	3145734
 16663  300006  81                 	db	129
 16664                           
 16665                           ; Padding undefined space
 16666  300007                     	org	3145735
 16667  300007  FF                 	db	255
 16668                           
 16669                           ;Config register CONFIG5L @ 0x300008
 16670                           ;	Code Protection bit
 16671                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 16672                           ;	Code Protection bit
 16673                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 16674                           ;	Code Protection bit
 16675                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 16676                           ;	Code Protection bit
 16677                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 16678  300008                     	org	3145736
 16679  300008  0F                 	db	15
 16680                           
 16681                           ;Config register CONFIG5H @ 0x300009
 16682                           ;	Boot Block Code Protection bit
 16683                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16684                           ;	Data EEPROM Code Protection bit
 16685                           ;	CPD = OFF, Data EEPROM not code-protected
 16686  300009                     	org	3145737
 16687  300009  C0                 	db	192
 16688                           
 16689                           ;Config register CONFIG6L @ 0x30000A
 16690                           ;	Write Protection bit
 16691                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 16692                           ;	Write Protection bit
 16693                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 16694                           ;	Write Protection bit
 16695                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 16696                           ;	Write Protection bit
 16697                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 16698  30000A                     	org	3145738
 16699  30000A  0F                 	db	15
 16700                           
 16701                           ;Config register CONFIG6H @ 0x30000B
 16702                           ;	Configuration Register Write Protection bit
 16703                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16704                           ;	Boot Block Write Protection bit
 16705                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
 16706                           ;	Data EEPROM Write Protection bit
 16707                           ;	WRTD = OFF, Data EEPROM not write-protected
 16708  30000B                     	org	3145739
 16709  30000B  E0                 	db	224
 16710                           
 16711                           ;Config register CONFIG7L @ 0x30000C
 16712                           ;	Table Read Protection bit
 16713                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 16714                           ;	Table Read Protection bit
 16715                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 16716                           ;	Table Read Protection bit
 16717                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 16718                           ;	Table Read Protection bit
 16719                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16720  30000C                     	org	3145740
 16721  30000C  0F                 	db	15
 16722                           
 16723                           ;Config register CONFIG7H @ 0x30000D
 16724                           ;	Boot Block Table Read Protection bit
 16725                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16726  30000D                     	org	3145741
 16727  30000D  40                 	db	64
 16728                           tosu	equ	0xFFF
 16729                           tosh	equ	0xFFE
 16730                           tosl	equ	0xFFD
 16731                           stkptr	equ	0xFFC
 16732                           pclatu	equ	0xFFB
 16733                           pclath	equ	0xFFA
 16734                           pcl	equ	0xFF9
 16735                           tblptru	equ	0xFF8
 16736                           tblptrh	equ	0xFF7
 16737                           tblptrl	equ	0xFF6
 16738                           tablat	equ	0xFF5
 16739                           prodh	equ	0xFF4
 16740                           prodl	equ	0xFF3
 16741                           indf0	equ	0xFEF
 16742                           postinc0	equ	0xFEE
 16743                           postdec0	equ	0xFED
 16744                           preinc0	equ	0xFEC
 16745                           plusw0	equ	0xFEB
 16746                           fsr0h	equ	0xFEA
 16747                           fsr0l	equ	0xFE9
 16748                           wreg	equ	0xFE8
 16749                           indf1	equ	0xFE7
 16750                           postinc1	equ	0xFE6
 16751                           postdec1	equ	0xFE5
 16752                           preinc1	equ	0xFE4
 16753                           plusw1	equ	0xFE3
 16754                           fsr1h	equ	0xFE2
 16755                           fsr1l	equ	0xFE1
 16756                           bsr	equ	0xFE0
 16757                           indf2	equ	0xFDF
 16758                           postinc2	equ	0xFDE
 16759                           postdec2	equ	0xFDD
 16760                           preinc2	equ	0xFDC
 16761                           plusw2	equ	0xFDB
 16762                           fsr2h	equ	0xFDA
 16763                           fsr2l	equ	0xFD9
 16764                           status	equ	0xFD8

Data Sizes:
    Strings     365
    Constant    197
    Data        7
    BSS         443
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     121
    BANK0           128    119     128
    BANK1           256    191     232
    BANK2           256      0     134
    BANK3           256      0     128
    BANK4           256      0     134
    BANK5           244      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_52(CODE[3]), STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_52(CODE[3]), STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_printf(BANK0[2]), main@fno(BANK1[22]), 
		 -> put_rc@str(CODE[69]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), ?_printf(BANK0[2]), main@fno(BANK1[22]), 
		 -> put_rc@str(CODE[69]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1658_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), main@fno(BANK1[22]), put_rc@str(CODE[69]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), main@fno(BANK1[22]), put_rc@str(CODE[69]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(BANK0[2]), main@fno(BANK1[22]), put_rc@str(CODE[69]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[7]), STR_28(CODE[6]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[6]), STR_24(CODE[14]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[14]), 
		 -> STR_19(CODE[12]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_14(CODE[26]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[39]), STR_10(CODE[2]), STR_9(CODE[40]), STR_8(CODE[16]), 
		 -> STR_7(CODE[21]), STR_6(CODE[30]), STR_5(CODE[3]), STR_4(CODE[2]), 
		 -> STR_3(CODE[31]), STR_2(CODE[8]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    memset@dest	PTR void  size(2) Largest target is 134
		 -> RxFifo.buff(BANK2[128]), RxFifo(BANK2[134]), 

    memset@s	PTR unsigned char  size(2) Largest target is 134
		 -> RxFifo.buff(BANK2[128]), RxFifo(BANK2[134]), 

    disk_readp@buff	PTR unsigned char  size(2) Largest target is 128
		 -> pf_readdir@dir(BANK1[32]), pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), pf_mount@buf(BANK0[36]), 
		 -> get_fat@buf(BANK0[4]), NULL(NULL[0]), Line(BANK3[128]), 

    xatoi@str	PTR PTR unsigned char  size(2) Largest target is 2
		 -> main@ptr(BANK1[2]), 

    xatoi@res	PTR long  size(2) Largest target is 4
		 -> main@p2(BANK1[4]), main@p1(BANK1[4]), 

    put_dump@lp	PTR const unsigned long  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    put_dump@sp	PTR const unsigned short  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    put_dump@buff	PTR const void  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    put_dump@bp	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    sp__memset	PTR void  size(2) Largest target is 134
		 -> RxFifo.buff(BANK2[128]), RxFifo(BANK2[134]), 

    uart_gets@buff	PTR unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    pf_readdir@fno	PTR struct . size(2) Largest target is 22
		 -> main@fno(BANK1[22]), 

    pf_readdir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    pf_readdir@dj	PTR struct . size(2) Largest target is 17
		 -> main@dir(BANK1[16]), 

    pf_readdir@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    pf_opendir@path	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    pf_opendir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    pf_opendir@dj	PTR struct . size(2) Largest target is 17
		 -> main@dir(BANK1[16]), 

    pf_opendir@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    pf_lseek@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    pf_read$894	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), Line(BANK3[128]), 

    pf_read@br	PTR unsigned int  size(2) Largest target is 2
		 -> main@s1(BANK1[2]), 

    pf_read@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    pf_read@buff	PTR void  size(2) Largest target is 128
		 -> NULL(NULL[0]), Line(BANK3[128]), 

    pf_read@rbuff	PTR unsigned char  size(2) Largest target is 128
		 -> NULL(NULL[0]), Line(BANK3[128]), 

    pf_open@path	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    pf_open@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    pf_mount@fs	PTR struct . size(2) Largest target is 42
		 -> main@fs(BANK1[42]), 

    check_fs@buf	PTR unsigned char  size(2) Largest target is 36
		 -> pf_mount@buf(BANK0[36]), 

    follow_path@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    follow_path@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    follow_path@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    get_fileinfo@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK1[32]), 

    get_fileinfo@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    get_fileinfo@dj	PTR struct . size(2) Largest target is 17
		 -> main@dir(BANK1[16]), 

    get_fileinfo@fno	PTR struct . size(2) Largest target is 22
		 -> main@fno(BANK1[22]), 

    get_fileinfo@p	PTR unsigned char  size(2) Largest target is 22
		 -> fno.fname(COMRAM[13]), main@fno(BANK1[22]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK0[2]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    create_name@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    create_name@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_read@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_read@dj	PTR struct . size(2) Largest target is 17
		 -> main@dir(BANK1[16]), 

    dir_read@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK1[32]), 

    dir_find@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_find@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    dir_find@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    dir_next@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_next@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    dir_next@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    dir_rewind@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir_rewind@dj	PTR struct . size(2) Largest target is 17
		 -> pf_open@dj(BANK1[16]), main@dir(BANK1[16]), 

    dir_rewind@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    get_clust@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    get_clust@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    clust2sect@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    FatFs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    get_fat@fs	PTR struct . size(2) Largest target is 42
		 -> NULL(NULL[0]), main@fs(BANK1[42]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 32
		 -> pf_opendir@dir(BANK1[32]), pf_open@dir(BANK1[32]), 

    mem_set@dst	PTR void  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    main@ptr	PTR unsigned char  size(2) Largest target is 128
		 -> Line(BANK3[128]), 

    S179$fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    dir.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK1[12]), pf_opendir@sp(BANK1[12]), pf_open@sp(BANK1[12]), 

    put_rc@p	PTR const unsigned char  size(2) Largest target is 69
		 -> put_rc@str(CODE[69]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _xatoi->___lmul
    _uart_gets->_printf
    _put_rc->_printf
    _put_dump->_printf
    _put_drc->_printf
    _dir_rewind->_clust2sect
    _create_name->_mem_set
    _disk_initialize->_send_cmd
    _disk_readp->_printf
    _send_cmd->_send_cmd2
    _send_cmd2->_xmit_spi
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _atoi->_isspace
    _clust2sect->___lmul

Critical Paths under _isr_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_pf_mount
    _uart_gets->_printf
    _put_rc->_printf
    _put_dump->_printf
    _put_drc->_printf
    _pf_readdir->_dir_read
    _dir_read->_dir_next
    _pf_read->_get_fat
    _pf_opendir->_follow_path
    _pf_open->_follow_path
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_next->_get_fat
    _pf_mount->_check_fs
    _check_fs->_disk_readp
    _pf_lseek->_get_fat
    _get_fat->_disk_readp
    _disk_readp->_printf
    _printf->_vfprintf

Critical Paths under _isr_high in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_pf_open

Critical Paths under _isr_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               112   112      0  754972
                                             85 BANK1    106   106      0
                    _disk_initialize
                         _disk_readp
                          _gpio_init
                           _pf_lseek
                           _pf_mount
                            _pf_open
                         _pf_opendir
                            _pf_read
                         _pf_readdir
                             _printf
                            _put_drc
                           _put_dump
                             _put_rc
                           _pwm_Init
                        _pwm_setDuty
                          _pwm_start
                           _pwm_stop
                          _uart_gets
                          _uart_init
                              _xatoi
 ---------------------------------------------------------------------------------
 (1) _xatoi                                               13     9      4    1732
                                             17 COMRAM    13     9      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uart_gets                                           13     9      4   36580
                                             16 BANK0     13     9      4
                             _memset
                             _printf
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6     947
                                              5 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _pwm_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm_setDuty                                          4     2      2     196
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _pwm_Init                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _put_rc                                               4     4      0   35140
                                             16 BANK0      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _put_dump                                            22    12     10   36380
                                             16 BANK0     22    12     10
                             _printf
 ---------------------------------------------------------------------------------
 (1) _put_drc                                              1     1      0   34976
                                             16 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _pf_readdir                                          51    47      4  130144
                                             92 BANK0      4     0      4
                                              0 BANK1     47    47      0
                           _dir_next
                           _dir_read
                         _dir_rewind
                       _get_fileinfo
 ---------------------------------------------------------------------------------
 (2) _get_fileinfo                                        36    30      6     965
                                              5 COMRAM    36    30      6
 ---------------------------------------------------------------------------------
 (2) _dir_read                                            11     7      4   83869
                                             81 BANK0     11     7      4
                           _dir_next
                         _disk_readp
 ---------------------------------------------------------------------------------
 (1) _pf_read                                             36    30      6   84526
                                             64 BANK0     36    30      6
                         _clust2sect
                         _disk_readp
                            _get_fat
 ---------------------------------------------------------------------------------
 (1) _pf_opendir                                          51    47      4   92986
                                             97 BANK0      4     0      4
                                              0 BANK1     47    47      0
                         _dir_rewind
                        _follow_path
                          _get_clust
 ---------------------------------------------------------------------------------
 (1) _pf_open                                             87    85      2   91500
                                             97 BANK0      2     0      2
                                              0 BANK1     85    85      0
                        _follow_path
                          _get_clust
 ---------------------------------------------------------------------------------
 (2) _follow_path                                          8     2      6   90242
                                             89 BANK0      8     2      6
                        _create_name
                           _dir_find
                         _dir_rewind
                          _get_clust
 ---------------------------------------------------------------------------------
 (2) _get_clust                                           18    14      4     365
                                              5 COMRAM    16    12      4
 ---------------------------------------------------------------------------------
 (3) _dir_find                                             8     4      4   85874
                                             81 BANK0      8     4      4
                           _dir_next
                         _dir_rewind
                         _disk_readp
                            _mem_cmp
 ---------------------------------------------------------------------------------
 (4) _mem_cmp                                             14     8      6     364
                                              5 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (2) _dir_rewind                                          16    14      2    1675
                                             28 COMRAM    16    14      2
                         _clust2sect
 ---------------------------------------------------------------------------------
 (3) _dir_next                                            17    15      2   42885
                                             64 BANK0     17    15      2
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (3) _create_name                                         17    13      4    1234
                                             13 COMRAM    16    12      4
                            _mem_set
 ---------------------------------------------------------------------------------
 (4) _mem_set                                              8     2      6     318
                                              5 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _pf_mount                                            77    75      2   86695
                                             42 BANK0     77    75      2
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                         _disk_readp
 ---------------------------------------------------------------------------------
 (2) _disk_initialize                                     12    12      0    1755
                                             20 COMRAM    12    12      0
                          _dly_100us
                           _init_spi
                            _rcv_spi
                           _send_cmd
 ---------------------------------------------------------------------------------
 (3) _init_spi                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _dly_100us                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_fs                                            10     4      6   41022
                                             32 BANK0     10     4      6
                         _disk_readp
 ---------------------------------------------------------------------------------
 (1) _pf_lseek                                            39    35      4   44003
                                             64 BANK0     39    35      4
                            ___lldiv
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (4) _get_fat                                             32    28      4   40950
                                             32 BANK0     32    28      4
                         _disk_readp
 ---------------------------------------------------------------------------------
 (3) _disk_readp                                          16     6     10   40290
                                             16 BANK0     16     6     10
                             _printf
                            _rcv_spi
                           _send_cmd
 ---------------------------------------------------------------------------------
 (4) _send_cmd                                             7     3      4    1290
                                             13 COMRAM     7     3      4
                            _rcv_spi
                          _send_cmd2
                           _xmit_spi
 ---------------------------------------------------------------------------------
 (5) _send_cmd2                                            7     3      4     345
                                              6 COMRAM     7     3      4
                            _rcv_spi
                           _xmit_spi
 ---------------------------------------------------------------------------------
 (5) _xmit_spi                                             1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _rcv_spi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _printf                                              14     4     10   34945
                                            115 COMRAM     2     2      0
                                              6 BANK0     10     0     10
                            _rcv_spi (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   32032
                                            113 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           55    49      6   31466
                                             72 COMRAM    41    35      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7303
                                             33 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6595
                                             33 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              5 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              5 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    1675
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2670
                                             15 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7449
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5003
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2015
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1515
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1815
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     712
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _clust2sect                                          11     7      4    1036
                                             17 COMRAM    11     7      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     620
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     564
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _isr_high                                            5     5      0     114
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _disk_initialize
     _dly_100us
     _init_spi
     _rcv_spi
     _send_cmd
       _rcv_spi
       _send_cmd2
         _rcv_spi
         _xmit_spi
       _xmit_spi
   _disk_readp
     _printf
       _rcv_spi (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit
           _stoa
             _fputc
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
     _rcv_spi
     _send_cmd
   _gpio_init
   _pf_lseek
     ___lldiv
     _clust2sect
       ___lmul
     _get_fat
       _disk_readp
   _pf_mount
     ___lldiv
     ___lmul
     _check_fs
       _disk_readp
     _disk_initialize
     _disk_readp
   _pf_open
     _follow_path
       _create_name
         _mem_set
       _dir_find
         _dir_next
           _clust2sect
           _get_fat
         _dir_rewind
           _clust2sect
         _disk_readp
         _mem_cmp
       _dir_rewind
       _get_clust
     _get_clust
   _pf_opendir
     _dir_rewind
     _follow_path
     _get_clust
   _pf_read
     _clust2sect
     _disk_readp
     _get_fat
   _pf_readdir
     _dir_next
     _dir_read
       _dir_next
       _disk_readp
     _dir_rewind
     _get_fileinfo
   _printf
   _put_drc
     _printf
   _put_dump
     _printf
   _put_rc
     _printf
   _pwm_Init
   _pwm_setDuty
   _pwm_start
   _pwm_stop
   _uart_gets
     _memset
     _printf
   _uart_init
   _xatoi
     ___lmul

 _isr_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0      86      12       52.3%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0      80      10       50.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      86       8       52.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100     BF      E8       6       90.6%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     77      80       4      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     75      79       1       96.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     36D      14        0.0%
DATA                 0      0     36D      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jan 17 20:00:22 2022

             get_fat@clst 00A0              create_name@c 001D              create_name@i 001C  
            create_name@p 0016                        l62 5684                        l65 5756  
                      l91 5732                        l59 56F6                        l68 5752  
                      l85 5182                        l88 56C4               _pwm_setDuty 5660  
           pf_mount@bsect 00EE       ___wmul@multiplicand 0008             pf_mount@mclst 00EA  
           pf_mount@fsize 00F2             create_name@dj 000E             pf_mount@tsect 00E6  
           create_name@ni 0018             create_name@si 0019                       l120 0A14  
                     l105 08CC                       l202 4C74                       l214 4744  
                     l302 4132                       l215 46E6                       l135 0B8C  
                     l208 4FE6                       l313 15C6                       l306 4638  
                     l330 1520                       l227 2DC8                       l180 558E  
                     l164 0E8C                       l325 1472                       l238 43EA  
                     l334 3E5A                       l342 1E58                       l254 3FC8  
                     l600 2B98                       l512 25A4                       l194 3396  
                     l602 2B0A                       l363 1A56                       l611 2BB6  
                     l275 352E                       l187 51F4                       l347 1D1A  
                     l540 573C                       l188 51FC                       l508 26B4  
                     l365 1650                       l381 49D4                       l470 5398  
                     l518 25CC                       l543 5746                       l287 2936  
                     l464 5710                       l552 56FA                       l632 3856  
                     l392 48C4                       l385 49F8                       l554 5708  
                     l546 56CC                       l562 50E4                       l458 451C  
                     l635 56AA                       l467 5722                       l555 570C  
                     l571 4D38                       l395 4918                       l548 56DA  
                     l549 56DE                       l389 4916                       l662 4F34  
                     l646 52C8                       l566 5100                       l574 4D1A  
                     l494 2FD4                       l647 52D8                       l569 4CB6  
                     l497 2432                       l762 4296                       l595 2AA4  
                     l669 4F44                       l749 3B6E                       _GIE 007F97  
                     _PR2 000FCB                       _abs 54DC                       _pad 4D3A  
                     wreg 000FE8              disk_readp@bc 009E              disk_readp@rc 009D  
       disk_initialize@ty 001D            create_name@cvt 7B8D            create_name@sfn 001A  
                    ?_abs 0018                      l1310 3CE4                      l1400 35B0  
                    l1080 4834                      l1073 4814                      l1402 35B8  
                    l1090 4BA6                      l1411 3676                      l1083 4B86  
                    l1323 565E                      l1412 36BE                      l1501 5512  
                    l1421 300C                      l1431 31D4                      l1423 3014  
                    l1504 551A                      l1416 36C6                      l1601 53EE  
                    l1362 4D7E                      l1532 39DE                      l1612 55C6  
                    l1436 216E                      l1365 4DC0                      l1373 1EF8  
                    l1461 240A                      l1445 220C                      l1606 53F6  
                    l1438 2176                      l1535 39E6                      l1367 4DFA  
                    l1375 1F00                      l1544 5636                      l1552 5448  
                    l1393 2136                      l5001 2A06                      l1538 5556  
                    l1459 23A8                      l5011 2A7C                      l5003 2A0C  
                    l1573 507C                      l1581 54DA                      l5021 2A94  
                    l5005 2A1E                      l5101 26C2                      l1558 55FE  
                    l1478 07D6                      l1591 4AD6                      l5031 2AF6  
                    l5023 2AB2                      l5007 2A44                      l5111 26F8  
                    l5103 26E4                      l1496 5332                      l1497 533A  
                    l5041 2B32                      l5033 2B02                      l5025 2ABE  
                    l5017 2A80                      l5009 2A56                      l5121 2730  
                    l1587 5496                      l5051 2B9C                      l5043 2B58  
                    l5035 2B16                      l5027 2AC6                      l5019 2A92  
                    l5131 2770                      l5123 2734                      l5115 270E  
                    l5053 2B9E                      l5045 2B6A                      l5037 2B1A  
                    l5029 2ACE                      l5141 2788                      l5133 2774  
                    l5125 2736                      l5117 2720                      l5109 26E8  
                    l5301 5754                      l5055 2BA2                      l5047 2B90  
                    l5039 2B20                      l5151 27B0                      l5119 2724  
                    l5127 2746                      l5303 5750                      l4441 56C8  
                    l5049 2B98                      l7001 2BC0                      l5145 279E  
                    l5129 2764                      l5153 27C0                      l5161 292A  
                    l5321 533C                      l5401 24D4                      l4443 56F8  
                    l7011 2C18                      l7003 2BDE                      l5155 27DC  
                    l5147 27AA                      l5139 2778                      l5251 3C28  
                    l5243 3B8E                      l5331 5390                      l5323 5340  
                    l5403 24FA                      l4701 5270                      l6301 500C  
                    l4445 570A                      l4621 4CB0                      l4613 4C78  
                    l7021 2C94                      l7013 2C36                      l7005 2BF0  
                    l7101 3F4A                      l5157 28A6                      l5149 27AE  
                    l5261 3C88                      l5245 3B9A                      l5333 5392  
                    l5325 538A                      l5421 254A                      l5413 251E  
                    ?_pad 0017                      l5319 5724                      l5271 4EA2  
                    l4703 5280                      l6303 5016                      l6311 5498  
                    l4631 4CE4                      l4615 4C86                      l7031 2D3A  
                    l7023 2CE8                      l7015 2C6E                      l7007 2C12  
                    l7111 3F80                      l5159 28E8                      l5263 3CBC  
                    l5255 3C42                      l5239 3B70                      l5335 5394  
                    l5327 538C                      l5415 252E                      l5407 2502  
                    l5423 2552                      l5281 4EEA                      l5273 4EB2  
                    l4705 528E                      l6401 41D2                      l6305 5034  
                    l6313 54A4                      l6321 5456                      l4641 4D16  
                    l4633 4CF6                      l4625 4CB8                      l4617 4C88  
                    l7025 2D18                      l7041 2DB6                      l7121 3FCA  
                    l7105 3F5C                      l7113 3FA2                      l7201 5138  
                    l5265 3CC8                      l5257 3C6E                      l5249 3BD0  
                    l5337 5396                      l5329 538E                      l5433 25A0  
                    l5417 253E                      l5409 2512                      l5425 257C  
                    l5291 4F2E                      l5283 4EF4                      l5275 4EC8  
                    l4707 529E                      l6403 41E0                      l6411 4246  
                    l6307 506A                      l6315 54B6                      l6323 545A  
                    l4571 5080                      l4643 4D20                      l4635 4CFA  
                    l4627 4CBC                      l4619 4CA0                      l7043 2DC6  
                    l7027 2D34                      l7051 42B8                      l7131 400E  
                    l7123 3FCE                      l7115 3FB2                      l7107 3F6C  
                    l5099 26B6                      l7203 513A                      l5267 3CCE  
                    l7211 43EC                      l5451 260E                      l5435 25B8  
                    l5427 258C                      l5285 4F12                      l5277 4ED0  
                    l4709 52A8                      l4741 4BBC                      l6333 5686  
                    l6501 5600                      l6341 39EC                      l6413 4256  
                    l6405 420E                      l6317 54BA                      l6325 548A  
                    l6421 4752                      l4581 50C0                      l4573 5082  
                    l4645 4D2E                      l4637 4D0C                      l4629 4CE0  
                    l4901 33AC                      l7037 2D68                      l7061 434A  
                    l7141 4074                      l7133 4024                      l7125 3FD4  
                    l7117 3FC6                      l7205 514C                      l5293 56E2  
                    l5269 3CD2                      l7213 43F6                      l5461 2698  
                    l5453 2644                      l5445 25F8                      l5437 25C8  
                    l5287 4F22                      l5279 4EDC                      l4743 4BFE  
                    l6335 56A2                      l6511 543E                      l6351 3A4C  
                    l6343 39FA                      l6415 4276                      l6407 422E  
                    l6319 544A                      l6431 47AC                      l6423 4770  
                    l4591 50EA                      l4583 50C4                      l4575 5086  
                    l4639 4D10                      l4751 5558                      l4911 33F4  
                    l4903 33C8                      l7039 2D84                      l7063 4356  
                    l7055 42C0                      l7047 4298                      l7151 40B4  
                    l7135 403C                      l7127 3FEE                      l7303 2F92  
                    l7207 5168                      l5295 56EE                      l7223 443A  
                    l7215 440C                      l5439 25E0                      l5455 2666  
                    l5391 2472                      l5383 240C                      l5289 4F24  
                    l6513 5442                      l6505 53F8                      l6361 3A96  
                    l6353 3A50                      l6345 3A1A                      l6409 4240  
                    l6521 1EA2                      l6601 35F2                      l6433 47DA  
                    l6425 4778                      l6441 4AD8                      l6329 5590  
                    l4593 50F8                      l4585 50D6                      l4577 50AA  
                    l7401 1492                      l7321 0FBC                      l7313 0F96  
                    l4753 5564                      l4921 3440                      l4913 33F6  
                    l4905 33D0                      l4761 5194                      l7073 43C6  
                    l7065 4366                      l7057 4336                      l7049 42A8  
                    l7145 4088                      l7161 4130                      l7137 404C  
                    l7129 4008                      l7081 3E5C                      l7209 56B0  
                    l7305 2FC8                      l5297 56F2                      l7225 444E  
                    l7233 447A                      l5457 2676                      l5393 2476  
                    l5385 2410                      l4747 4C12                      l4739 4BA8  
                    l6507 53FC                      l6371 3B06                      l6363 3AA4  
                    l6355 3A5C                      l6347 3A1E                      l6339 39E8  
                    l6531 1F08                      l6523 1EC2                      l6611 3658  
                    l6603 3610                      l6435 47FA                      l6427 478C  
                    l6419 4746                      l6451 4B4E                      l6443 4AF6  
                    l4595 50FE                      l4587 50DA                      l4579 50AE  
                    l7171 4562                      l7331 1042                      l7323 0FCC  
                    l7315 0FA0                      l4755 5570                      l4923 3452  
                    l4915 3406                      l4907 33D4                      l4771 4652  
                    l4763 519C                      l7075 43D6                      l7067 436E  
                    l4851 4F46                      l7155 40E0                      l7147 40A0  
                    l7139 405C                      l7411 3CE6                      l7091 3EFC  
                    l7083 3E66                      l5299 5660                      l7251 4514  
                    l7235 4490                      l7227 4460                      l7243 44DE  
                    l7219 4422                      l5459 2686                      l5395 2498  
                    l5387 2424                      l6509 5410                      l6373 3B18  
                    l6365 3AB6                      l6357 3A7A                      l6349 3A2C  
                    l6293 5710                      l6461 4D5C                      l6541 1F40  
                    l6533 1F1A                      l6525 1ED0                      l6517 1E5A  
                    l6605 361C                      l6437 47FC                      l6429 479A  
                    l6453 4B6E                      l6445 4AFE                      l6621 2FD6  
                    l6701 22CE                      l4589 50E0                      l7181 45AC  
                    l7173 45A6                      l7165 451E                      l7405 15BC  
                    l7333 1054                      l7325 0FEC                      l7317 0FB6  
                    l4757 5574                      l4941 34B0                      l4925 3468  
                    l4917 341C                      l4909 33E4                      l4781 46B4  
                    l4773 466E                      l4765 51B6                      l7069 4388  
                    l4861 4FD6                      l7157 40FA                      l7421 3D20  
                    l7413 3D02                      l7093 3F0C                      l7085 3EDC  
                    l7261 2E00                      l7237 44C6                      l7229 4470  
                    l8061 2566                      l5397 24AA                      l5389 2460  
                    l6367 3AE4                      l6359 3A82                      l6375 3B1E  
                    l6391 416A                      l6383 4134                      l6295 571E  
                    l6471 4DA2                      l6463 4D6A                      l6543 1F46  
                    l6551 2038                      l6535 1F28                      l6527 1ED2  
                    l6519 1E7A                      l6615 3688                      l6607 3650  
                    l6439 480E                      l6455 4B80                      l6447 4B12  
                    l6631 3044                      l6623 2FE4                      l6711 239A  
                    l6703 232C                      l7167 455C                      l7407 15C4  
                    l7343 10FE                      l7335 10C6                      l7327 0FFC  
                    l4943 34B6                      l4927 3474                      l4919 342E  
                    l4775 4684                      l4767 463A                      l4759 5184  
                    l4855 4F46                      l7159 4102                      l7431 3D68  
                    l7423 3D42                      l7511 1D7E                      l7503 1CE6  
                    l7095 3F14                      l8063 2FAA                      l7271 2E60  
                    l7263 2E22                      l7255 2DCA                      l7247 44EE  
                    l7239 44D6                      l5399 24D0                      l8055 09F0  
                    l6377 3B2E                      l6369 3B04                      l6393 4178  
                    l6385 4138                      l6481 54F6                      l6297 4FE8  
                    l6473 4DCE                      l6465 4D76                      l6457 4D3A  
                    l6553 2052                      l6561 20B2                      l6545 1FC8  
                    l6537 1F2E                      l6529 1EEC                      l6617 369C  
                    l6609 3654                      l6449 4B20                      l6641 30D6  
                    l6633 304E                      l6625 2FE6                      l6713 23B6  
                    l6705 2348                      l6801 00D0                      l8065 3388  
                    l7193 4636                      l7185 45B2                      l4961 573E  
                    l7361 122C                      l7345 110E                      l7329 1038  
                    l7337 10E6                      l4945 34C6                      l4929 3484  
                    l4953 34EE                      l4793 4702                      l4777 46AE  
                    l4769 4642                      l4857 4F80                      l4849 4F46  
                    l7441 3E34                      l7433 3D76                      l7425 3D52  
                    l7417 3D08                      l7513 1D8A                      l7505 1D4E  
                    l7097 3F26                      l7089 3EF0                      l7281 2ECE  
                    l7273 2E7C                      l7265 2E28                      l7257 2DEC  
                    l7249 450A                      l8057 0F1E                      l8067 3914  
                    l6731 3890                      l6723 3858                      l6379 3B4E  
                    l6395 4198                      l6387 4146                      l6299 4FFA  
                    l6475 4DE2                      l6467 4D8A                      l6459 4D48  
                    l6571 20F6                      l6563 20C4                      l6555 2070  
                    l6547 1FCE                      l6539 1F36                      l6619 36A0  
                    l6651 319E                      l6635 3054                      l6643 313A  
                    l6627 3000                      l6483 55C8                      l6491 539A  
                    l6715 23BC                      l6707 2366                      l6803 00F0  
                    l6811 0156                      l7187 45EE                      l4971 294A  
                    l4963 2938                      l7371 12E4                      l7363 1276  
                    l7355 1154                      l7339 10F8                      l4955 352C  
                    l4947 34D6                      l4795 4726                      l4787 46CA  
                    l4859 4F92                      l7443 3E48                      l7419 3D18  
                    l7611 4974                      l7603 491A                      l7531 1E34  
                    l7515 1D92                      l7507 1D64                      l7451 1A68  
                    l7099 3F38                      l7291 2F24                      l7275 2E98  
                    l7283 2ED4                      l7267 2E46                      l7259 2DF4  
                    l8059 0F7C                      l6741 38E6                      l6733 38C6  
                    l6725 386C                      l6397 41B6                      l6389 4166  
                    l6469 4D9E                      l6573 20FE                      l6565 20D2  
                    l6557 208A                      l6549 1FD4                      l6581 3542  
                    l6645 314C                      l6653 31AC                      l6637 30CA  
                    l6629 303C                      l6717 23CC                      l6709 2380  
                    l6661 2148                      l6901 07C4                      l6821 021E  
                    l6813 017A                      l6805 00FE                      l7541 15E4  
                    l4981 29AC                      l4973 294C                      l4965 293C  
                    l7373 1356                      l7365 1286                      l7357 118C  
                    l7349 1114                      l4949 34DA                      l4797 4742  
                    l7445 3E58                      l7437 3D7C                      l7429 3D58  
                    l7621 49E6                      l7613 4984                      l7605 4936  
                    l7525 1E0A                      l7517 1DE6                      l7509 1D6C  
                    l7533 1E44                      l7461 1AAC                      l7453 1A78  
                    l7293 2F40                      l7285 2EF6                      l7277 2EA4  
                    l7269 2E52                      l7197 5106                      l7701 09A6  
                    l6751 3960                      l6743 38EE                      l6735 38CA  
                    l6727 3870                      l6399 41BE                      l6479 54DC  
                    l6567 20D8                      l6575 210E                      l6559 20A4  
                    l6591 3580                      l6583 354A                      l6647 316A  
                    l6639 30D0                      l6487 551C                      l6495 53D0  
                    l6719 23E2                      l6671 21BC                      l6663 2162  
                    l6831 0344                      l6823 0254                      l6815 019E  
                    l6911 52F0                      l7551 160A                      l4959 5734  
                    l4991 29C4                      l4975 295C                      l4967 293E  
                    l7391 146E                      l7375 1432                      l7367 12AE  
                    l7359 11FE                      l7439 3DA6                      l7615 4994  
                    l7623 49F6                      l7607 493E                      l7535 1E56  
                    l7527 1E24                      l7519 1DF6                      l7471 1B38  
                    l7455 1A8C                      l7631 485A                      l7295 2F48  
                    l7287 2EFE                      l7279 2EBA                      l7199 5118  
                    l7711 0A06                      l7703 09AE                      l6745 38F6  
                    l6729 3874                      l6569 20EA                      l6593 358E  
                    l6585 355C                      l6649 3184                      l6497 53E2  
                    l6681 2200                      l6673 21C6                      l6665 218C  
                    l6657 2138                      l6841 03E2                      l6833 0368  
                    l6825 028A                      l6817 01E6                      l6809 0144  
                    l6913 5316                      l6921 36C8                      l7561 16E8  
                    l7553 1634                      l7545 15EA                      l4993 29D4  
                    l4977 2960                      l4969 2946                      l7377 144E  
                    l7369 12CE                      l7617 49A2                      l7609 4954  
                    l7529 1E2C                      l7481 1C0C                      l7473 1B72  
                    l7465 1AB2                      l7449 1A58                      l7641 48C0  
                    l7633 4870                      l7297 2F6C                      l7289 2F1A  
                    l7801 0CF6                      l7721 0A58                      l7713 0A26  
                    l7705 09B6                      l6755 399E                      l6747 392A  
                    l6739 38D0                      l6587 3564                      l6579 3530  
                    l6771 4A30                      l6691 228C                      l6675 21CC  
                    l6667 2194                      l6659 2146                      l6851 04F2  
                    l6843 042C                      l6835 039E                      l6827 030C  
                    l6907 52DA                      l6915 5638                      l6931 371E  
                    l6923 36D8                      l7571 189E                      l7563 1772  
                    l7555 1680                      l7547 1604                      l7539 15C8  
                    l4995 29E4                      l4987 29B0                      l4979 2986  
                    l4899 3398                      l7619 49D0                      l7491 1C6E  
                    l7483 1C3C                      l7475 1BBA                      l7467 1B02  
                    l7459 1A92                      l7643 48D4                      l7635 4882  
                    l7627 4836                      l7299 2F76                      l7811 0D64  
                    l7803 0D0E                      l7731 0AB4                      l7723 0A72  
                    l7715 0A36                      l6757 39B0                      l6597 35DA  
                    l6589 3578                      l6781 4AB2                      l6773 4A3E  
                    l6765 49FA                      l6693 229E                      l6685 2240  
                    l6677 21D4                      l6669 21B4                      l6861 0588  
                    l6909 52E2                      l6917 5640                      l6941 3796  
                    l6933 3726                      l6925 36EA                      l7581 1916  
                    l7573 18C8                      l7565 1822                      l7557 1696  
                    l4997 29F6                      l4989 29C2                      l7397 1486  
                    l7389 1452                      l7485 1C58                      l7477 1BCA  
                    l7493 1C8A                      l7469 1B2C                      l7645 48F0  
                    l7637 4896                      l7629 4852                      l7821 0DEE  
                    l7813 0D92                      l7805 0D12                      l7741 0AFE  
                    l7733 0AC0                      l7725 0A88                      l7717 0A40  
                    l7709 09D0                      l7661 07FA                      l7653 07D8  
                    l6759 39C2                      l6599 35EE                      l6775 4A5A  
                    l6767 4A24                      l6687 2252                      l6695 22B2  
                    l6679 21F0                      l6871 0644                      l6863 0596  
                    l6855 052A                      l6847 0464                      l6839 03BE  
                    l6791 0056                      l6951 37DA                      l6943 379A  
                    l6935 3736                      l6927 36EE                      l7591 199C  
                    l7575 18D8                      l7567 185E                      l7583 1926  
                    l7559 16D2                      l4999 2A02                      l7495 1CBA  
                    l7487 1C68                      l7479 1BEC                      l7647 4900  
                    l7639 48AE                      l7831 0E44                      l7823 0E08  
                    l7815 0DA4                      l7807 0D2C                      l7751 0B46  
                    l7743 0B18                      l7735 0AC4                      l7727 0A9A  
                    l7719 0A52                      l7671 084C                      l7663 080C  
                    l7655 07DE                      l6777 4A76                      l6697 22C2  
                    l6873 067A                      l6865 05D2                      l6857 054E  
                    l6849 049A                      l6793 005A                      l6785 0012  
                    l6961 3848                      l6953 37F6                      l6945 37B4  
                    l6937 374E                      l6929 3714                      l7585 1944  
                    l7569 1882                      l7497 1CD2                      l7649 4912  
                    l7841 0E9A                      l7833 0E5E                      l7825 0E22  
                    l7817 0DD6                      l7809 0D52                      l7761 0B9A  
                    l7753 0B5C                      l7745 0B20                      l7737 0ACC  
                    l7729 0AA6                      l7681 08A2                      l7673 085A  
                    l7665 081A                      l7657 07E8                      l6779 4A88  
                    l6699 22C8                      l6875 06A0                      l6883 0734  
                    l6859 0572                      l6795 007E                      l6787 0036  
                    l6955 3810                      l6947 37C6                      l6939 3760  
                    l6963 384C                      l6971 31D6                      l7587 1960  
                    l7579 18DE                      l7851 0EFE                      l7843 0EB4  
                    l7835 0E6E                      l7827 0E32                      l7819 0DE8  
                    l7771 0BF2                      l7763 0BA0                      l7755 0B68  
                    l7747 0B32                      l7739 0AEE                      l7691 0938  
                    l7683 08D4                      l7675 0862                      l7667 0830  
                    l7659 07EC                      l6885 0758                      l6893 0786  
                    l6877 06B0                      l6869 060E                      l6797 00B4  
                    l6789 0044                      l6965 384E                      l6957 382A  
                    l6949 37D4                      l6973 31FA                      l7597 19B0  
                    l7589 1984                      l7845 0EDA                      l7837 0E78  
                    l7829 0E3C                      l7781 0C4A                      l7773 0C02  
                    l7757 0B6E                      l7749 0B3A                      l7765 0BB2  
                    l7693 095A                      l7685 0906                      l7677 0872  
                    l7669 083E                      l6895 0794                      l6887 0766  
                    l6879 06F8                      l6799 00C2                      l6967 3852  
                    l6959 382E                      l6983 32DC                      l6975 3224  
                    l7599 1A54                      l7847 0EE4                      l7791 0C9C  
                    l7783 0C52                      l7775 0C1C                      l7767 0BBA  
                    l7759 0B74                      l7695 096A                      l7687 0916  
                    l7679 087C                      l7855 0F5C                      l6889 077A  
                    l7785 0C5A                      l7777 0C28                      l7793 0CA4  
                    l7769 0BC8                      l7697 0972                      l7689 0920  
                    l6899 07A0                      l6979 323A                      l7795 0CBA  
                    l7787 0C68                      l7779 0C3E                      l7699 099C  
                    l6989 336C                      l7797 0CDC                      l7789 0C92  
                    l6999 2BB8                      l7799 0CEC                      STR_1 7D74  
                    STR_2 7D8E                      STR_3 7CA1                      STR_4 7DBD  
                    STR_5 7D1F                      STR_6 7CC0                      STR_7 7CF8  
                    STR_8 7D48                      STR_9 7C52                      _LATC 000F8B  
                    u5110 528E                      u5111 528A                      u5120 52C8  
                    u5200 51F4                      u5121 52C4                      u5201 51F0  
                    u5210 4684                      u5211 4680                      u5220 46AE  
                    u6020 3B8A                      u5221 46AA                      u6021 3B86  
                    u5230 46CA                      u6030 3BCC                      u5231 46C6  
                    u6031 3BC8                      u6040 3C3E                      u6200 2472  
                    u6041 3C3A                      u6201 246E                      u5170 4BFE  
                    u6050 3C84                      u6210 24AA                      u5171 4BFA  
                    u6051 3C80                      u6211 24A6                      _PEIE 007F96  
                    u4700 56DA                      u5180 558E                      u5500 34C6  
                    u6060 3CE4                      u6300 260A                      u6220 2512  
                    u4701 56D6                      u5181 558A                      u5501 34C2  
                    u6061 3CE0                      u6301 2606                      u6221 250E  
                    u6070 4EC8                      u4710 5708                      u5510 34D6  
                    u5430 3406                      u5190 51B6                      u6310 2676  
                    u6230 252E                      u6071 4EC4                      u4711 5704  
                    u5511 34D2                      u5431 3402                      u5191 51B2  
                    u5335 4F82                      u6311 2672                      u6231 252A  
                    u6080 4EEA                      u8000 3184                      u5600 2A1E  
                    u5520 3528                      u5440 3418                      u6320 2686  
                    u6240 253E                      u6081 4EE6                      u8001 3180  
                    u5601 2A1A                      u5521 3522                      u5441 3414  
                    u6321 2682                      u6241 253A                      u6090 4F12  
                    u8010 319E                      u5610 2A44                      u5530 352A  
                    u5450 342E                      u6250 258C                      u6091 4F0E  
                    u8011 319A                      u5611 2A40                      u5451 342A  
                    u6251 2588                      _RCIE 007CED                      u7300 54DA  
                    u8020 31AC                      u8100 2286                      u4900 50C0  
                    u5700 2B90                      u5620 2A56                      u5540 295C  
                    u5460 3440                      u6260 259C                      _RCIF 007CF5  
                    u7301 54D6                      u8021 31A8                      u8101 2280  
                    u4901 50BC                      u5701 2B8C                      u5621 2A52  
                    u5541 2958                      u5461 343C                      u6261 2598  
                    u7310 547A                      u8110 2288                      u8030 2146  
                    u4910 50D6                      u5710 2BB4                      u5630 2A7C  
                    u5550 2986                      u5470 3452                      u6270 25C8  
                    u6190 2460                      u8031 2142                      u4911 50D2  
                    u5711 2BAE                      u5631 2A78                      u5551 2982  
                    u5471 344E                      u6271 25C4                      u6191 245C  
                    u8200 3890                      u7400 3AE4                      u7320 548A  
                    u8120 229E                      u8040 2162                      u4920 50F8  
                    u5720 2BB6                      u5640 2AA4                      u5560 29AC  
                    u5480 3464                      u9000 40B0                      u6280 25E0  
                    u8201 388C                      u7401 3AE0                      u7321 5486  
                    u8121 229A                      u8041 215E                      u4921 50F4  
                    u5641 2AA0                      u5561 29A8                      u5481 3460  
                    u9001 40AC                      u6281 25DC                      u8210 38C6  
                    u7410 3B2E                      u7250 571E                      u7330 55C0  
                    u8130 2306                      u8050 218C                      u5650 2AB2  
                    u5570 29D4                      u5490 3484                      u9010 40DC  
                    u6290 25F4                      u8211 38C2                      u7411 3B2A  
                    u7251 571A                      u7331 55BA                      u8051 2188  
                    u5651 2AAE                      u5571 29D0                      u5491 3480  
                    u9011 40D8                      u6291 25F0                      u8220 38E2  
                    u7420 4146                      u7260 4FFA                      u8300 4A88  
                    u7500 479A                      u7340 55C2                      u8140 2348  
                    u8060 21F0                      u4940 4C86                      u5660 2AF6  
                    u5580 29E4                      u9020 40FA                      u5900 27C0  
                    u9100 441E                      u8221 38DE                      u7421 4142  
                    u7261 4FF6                      u7317 5470                      u8301 4A84  
                    u7501 4796                      u8141 2344                      u8061 21EC  
                    u4941 4C82                      u5661 2AF2                      u5581 29E0  
                    u9021 40F6                      u5901 27BC                      u9101 441A  
                    u8230 3998                      u7350 39FA                      u7430 4178  
                    u7270 500C                      u8310 4AB2                      u7510 47DA  
                    u8150 2366                      u8070 223A                      u4950 4CB0  
                    u9030 455C                      u5670 2B32                      u5590 29F6  
                    u9110 4436                      _RCIP 007CFD                      u8231 3992  
                    u7351 39F6                      u7431 4174                      u7271 5008  
                    u8311 4AAE                      u7511 47D6                      u8151 2362  
                    u8135 22F4                      u8071 2234                      u4951 4CAC  
                    u9031 4558                      u5671 2B2E                      u5591 29F2  
                    u9111 4432                      u8240 399A                      u7360 3A2C  
                    u7440 41B6                      u7280 5034                      u7520 4AF6  
                    u7600 55F8                      u8160 2380                      u8080 223C  
                    u8400 0254                      u8320 0036                      u4960 4CF6  
                    u9040 45A6                      u5680 2B58                      u5840 26E4  
                    u9200 2F3C                      u9120 444E                      u7361 3A28  
                    u7441 41B2                      u7281 5030                      u7521 4AF2  
                    u7601 55F2                      u8161 237C                      u8401 0250  
                    u8321 0032                      u4961 4CF2                      u9041 45A2  
                    u5681 2B54                      u5841 26E0                      u9201 2F38  
                    u9121 444A                      u8250 39B0                      u7450 41E0  
                    u7290 506A                      u7530 4B20                      u7610 55FA  
                    u8170 239A                      u8090 2252                      u8410 028A  
                    u8330 007E                      u4970 4D0C                      u9050 45EE  
                    u5690 2B6A                      u5850 270A                      u9210 2F8E  
                    u9130 4460                      u8251 39AC                      u7371 3A56  
                    u7451 41DC                      u7291 5066                      u7531 4B1C  
                    u8171 2396                      u8091 224E                      u8411 0286  
                    u8331 007A                      u4971 4D08                      u9051 45EA  
                    u5691 2B66                      u5851 2706                      u9211 2F8A  
                    u9131 445C                      u7700 543E                      u8260 39C2  
                    u7380 3A7A                      u7460 420E                      u7540 4B4E  
                    u7620 5550                      u8180 23A8                      u8420 0368  
                    u8340 00C2                      u8500 5332                      u4980 4D2E  
                    u9060 4632                      u9300 12E4                      u9220 0FB6  
                    u5860 2720                      u9140 4490                      u7701 543A  
                    u8261 39BE                      u7381 3A76                      u7461 420A  
                    u7541 4B4A                      u7621 554A                      u8181 23A4  
                    u8421 0364                      u8341 00BE                      u8501 532E  
                    u4981 4D2A                      u9061 462E                      u9301 12E0  
                    u9221 0FB2                      u5861 271C                      u9141 448C  
                    u7390 3AA4                      u7470 4256                      u7550 4D48  
                    u7710 1E8A                      u8270 4A24                      u7630 5552  
                    u8190 23B6                      u8430 03E2                      u8350 013E  
                    u8510 36D8                      u9230 0FFC                      u5870 2746  
                    u9070 5138                      u9150 44C6                      u7391 3AA0  
                    u7471 4252                      u7551 4D44                      u7711 1E84  
                    u8271 4A20                      u8191 23B2                      u8431 03DE  
                    u8351 0138                      u8511 36D4                      u9231 0FF8  
                    u5871 2742                      u9071 5134                      u9151 44C2  
                    u7560 4D6A                      u7800 208A                      u7720 1E8C  
                    u8280 4A5A                      u7640 53CA                      u8440 049A  
                    u8360 0140                      u8600 37F2                      u9320 146E  
                    u9240 1038                      u9400 1AAC                      u5880 2764  
                    u9160 2E46                      u9080 514C                      u7561 4D66  
                    u7801 2086                      u8281 4A56                      u7481 474C  
                    u7641 53C4                      u8441 0496                      u8601 37EE  
                    u9321 146A                      u9241 1034                      u9401 1AA8  
                    u5881 2760                      u9161 2E42                      u9081 5148  
                    u7570 4DC0                      u7810 20A4                      u7730 1EA2  
                    u8290 4A76                      u7490 4770                      u7650 53CC  
                    u8450 054E                      u8370 0156                      u8610 382A  
                    u8530 3714                      u9330 1482                      u9250 1054  
                    u9410 1B2C                      u5890 279A                      u9170 2E7C  
                    u9090 5168                      u7571 4DBC                      u7811 20A0  
                    u7731 1E9E                      u8291 4A72                      u7491 476C  
                    u8451 054A                      u8371 0152                      u8611 3826  
                    u8531 3710                      u9331 147E                      u9315 136E  
                    u9251 1050                      u9411 1B28                      u5891 2796  
                    u9171 2E78                      u9091 5164             _put_dump$1127 00A0  
                    u7580 4DCE                      u7820 20B2                      u7740 1ED0  
                    u7900 35D6                      u7660 53E2                      u8460 0572  
                    u8380 017A                      u8620 3848                      u8540 3736  
                    u9260 10F8                      u8700 2C6E                      u9500 1DF6  
                    u9420 1B72                      u9180 2E98                      u7581 4DCA  
                    u7821 20AE                      u7741 1ECC                      u7901 35D2  
                    u7661 53DE                      u8461 056E                      u8381 0176  
                    u8621 3844                      u8541 3732                      u8525 36DA  
                    u9261 10F4                      u8701 2C6A                      u9501 1DF2  
                    u9421 1B6E                      u9181 2E94                      u7670 5630  
                    u7590 54F6                      u7830 20C4                      u7750 1EEC  
                    u7910 3610                      u8470 0644                      u8390 019E  
                    u8550 374E                      u8630 31FA                      u9270 110E  
                    u8710 2C90                      u9350 3D02                      u9510 1E56  
                    u9430 1B9E                      u9190 2EF2              get_clust@dir 0006  
                    u7671 562A                      u7591 54F2                      u7831 20C0  
                    u7751 1EE8                      u7911 360C                      u8471 0640  
                    u8391 019A                      u8551 374A                      u8631 31F6  
                    u9271 110A                      u8711 2C8C                      u9351 3CFE  
                    u9511 1E52                      u9191 2EEE                      u7680 5632  
                    u7840 20D2                      u7760 1F1A                      u7920 363C  
                    u8480 067A                      u8560 3760                      u8640 3224  
                    u9600 18C8                      u9520 15E4                      u9280 1150  
                    u8800 4346                      u9360 3D52                      u9440 1BCA  
                    u7841 20CE                      u7761 1F16                      u8481 0676  
                    u8561 375C                      u8641 3220                      u9601 18C4  
                    u9521 15E0                      u9345 1554                      u9281 114C  
                    u8801 4342                      u9361 3D4E                      u9441 1BC6  
                    u7690 5410                      u7850 20EA                      u7770 1F28  
                    u7930 3676                      u8490 0758                      u8570 3796  
                    u8650 327E                      u9610 1944                      u9530 1604  
                    u9290 118C                      u8730 2CE8                      u8810 4366  
                    u9370 3D68                      u9450 1BEC                      u7691 540C  
                    u7851 20E6                      u7771 1F24                      u7931 3672  
                    u8491 0754                      u8571 3792                      u9611 1940  
                    u9531 1600                      u9291 1188                      u8731 2CE4  
                    u8811 4362                      u9371 3D64                      u9451 1BE8  
                    u9435 1B94                      u7780 2052                      u7940 3684  
                    u8580 37B4                      u8660 32D8                      u9620 199C  
                    u9540 1634                      u8740 2D34                      u8820 4388  
                    u9380 3D76                      u9460 1C58                      u8900 3F38  
                    u9700 4882                      u7781 204E                      u7941 3680  
                    u7861 353A                      u8581 37B0                      u8661 32D4  
                    u9621 1998                      u9541 1630                      u8741 2D30  
                    u8725 2CA0                      u8821 4384                      u9381 3D72  
                    u9461 1C54                      u8901 3F34                      u9701 487E  
                    u7790 2070                      u7950 36BE                      u7870 355C  
                    u8590 37C6                      u9630 1A02                      u9550 1696  
                    u8750 2D64                      u8670 2BF0                      u8830 43C2  
                    u9470 1CD2                      u9390 1A8C                      u8910 3F4A  
                    u9710 48C0                      u7791 206C                      u7951 36BA  
                    u7927 3632                      u7871 3558                      u8591 37C2  
                    u8655 3274                      u9551 1692                      u8751 2D60  
                    u8671 2BEC                      u8831 43BE                      u9471 1CCE  
                    u9391 1A88                      u8911 3F46                      u9711 48BC  
                    u7880 358E                      u7960 2FE4                      u8680 2C12  
                    u8840 43E6                      u8760 42B8                      u9640 4936  
                    u9480 1D64                      u8920 3F58                      u9720 48D4  
                    u9800 095A                      u7881 358A                      u7961 2FE0  
                    u8681 2C0E                      u8841 43E2                      u8761 42B4  
                    u9641 4932                      u9481 1D60                      u8921 3F54  
                    u9721 48D0                      u9801 0956                      u7890 35AC  
                    u7970 3000                      u9570 16E8                      u8690 2C36  
                    u9650 4984                      u9490 1D7E                      u8930 3F7C  
                    u9730 4912                      u9810 09CC                      u7891 35A8  
                    u7971 2FFC                      u9635 19F8                      u9571 16E4  
                    u8691 2C32                      u9651 4980                      u9491 1D7A  
                    u8931 3F78                      u9731 490E                      u9811 09C8  
                    u7980 314C                      u9580 1772                      u8780 4330  
                    u9660 4994                      u8940 3FA2                      u8860 3ED6  
                    u9900 0C02                      u9820 0A36                      u9740 080A  
                    u7981 3148                      u9581 176E                      u9565 16B2  
                    u8781 432A                      u9661 4990                      u8941 3F9E  
                    u8861 3ED0                      u9901 0BFE                      u9821 0A32  
                    u9741 0804                      u7990 316A                      u9590 189E  
                    u8790 4332                      u9670 49A2                      u8950 3FB2  
                    u8870 3ED8                      u9910 0C3E                      u9830 0A72  
                    u7991 3166                      u9591 189A                      u8775 42FE  
                    u9671 499E                      u8951 3FAE                      u8855 3EA4  
                    u9911 0C3A                      u9831 0A6E                      u8960 3FEE  
                    u9680 49E6                      u8880 3EEC                      u9920 0CB6  
                    u9840 0A9A                      u9760 0872            ??_get_fileinfo 000C  
                    u8961 3FEA                      u9681 49E2                      u8881 3EE8  
                    u9921 0CB2                      u9841 0A96                      u9761 086E  
                    u8970 4008                      u8890 3F0C                      u9690 4852  
                    u9930 0CEC                      u9850 0AFE                      u9770 08A2  
                    u8971 4004                      u8891 3F08                      u9691 484E  
                    u9931 0CE8                      u9851 0AFA                      u9771 089E  
                    u9755 080C                      u8980 403C                      u9940 0D0A  
                    u9860 0B32                      u9780 08C8                      u8981 4038  
                    u9941 0D06                      u9861 0B2E                      u9781 08C4  
                    u8990 4084                      u9950 0D2C                      u9870 0B8C  
                    u9790 0916                      u8991 4080                      u9951 0D28  
                    u9871 0B88                      u9791 0912                      u9960 0D52  
                    u9880 0B9A                      u9961 0D4E                      u9881 0B96  
                    u9970 0DA4                      u9890 0BB2                      u9971 0DA0  
                    u9891 0BAE                      u9980 0E08                      u9981 0E04  
                    u9990 0E32                      u9991 0E2E                      _TXIE 007CEC  
                    _TXIF 007CF4                      _TXIP 007CFC                      _Line 0300  
                    abs@a 0018                      _dbuf 01C1                      _atoi 3858  
                    _main 07D8                      _dtoa 1E5A                      _prec 0076  
                    _nout 00F7                      pad@i 001E                      pad@p 001B  
                    fsr1h 000FE2                      fsr2h 000FDA                      indf1 000FE7  
                    indf2 000FDF                      fsr1l 000FE1                      pad@w 0020  
                    fsr2l 000FD9                      _stoa 3530                      btemp 007A  
                    _utoa 2FD6                      _xtoa 2138                      prodh 000FF4  
                    prodl 000FF3                      start 000E             disk_readp@res 009C  
      disk_initialize@cmd 001C              ?_follow_path 00D9        disk_initialize@ocr 0016  
            ___param_bank 000000        disk_initialize@tmr 001E           create_name@path 0010  
                   ??_abs 001A             get_fileinfo@c 0028             get_fileinfo@i 0029  
                   ??_pad 001D             get_fileinfo@p 0026            pwm_Init@period 0006  
         __end_of___aodiv 3B70                     ?_atoi 000D                     ?_main 0001  
                   ?_dtoa 0022           __end_of___aomod 4298                     STR_10 7D56  
                   STR_11 7C7A                     STR_12 7D56                     STR_20 7D66  
                   STR_13 7D56                     STR_21 7DB8                     STR_30 7D1F  
                   STR_14 7CDE                     STR_15 7D56                     STR_31 7DB8  
                   STR_32 7DAC                     STR_24 7D58                     STR_16 7D0D  
                   STR_41 7DB2                     STR_25 7D9D                     STR_17 7D22  
                   STR_34 7DAC                     STR_26 7DBB                     STR_50 7DA9  
                   STR_18 7D37                     STR_27 7DB8                     STR_43 7DB2  
                   STR_19 7D82                     STR_52 7DA9                     STR_36 7DAF  
                   STR_28 7DA3                     STR_29 7D96                     STR_38 7DAF  
                   STR_46 7DB5                     STR_48 7DB5                     ?_stoa 0010  
                   u10000 0E6E                     u10001 0E6A                     u10010 0E88  
         __end_of___lldiv 4F46                     u10011 0E84                     u10020 0E9A  
                   u10021 0E96                     ?_utoa 0022                     u10037 0B70  
                   u10047 5740           __end_of___lodiv 4836                     ?_xtoa 0022  
                   _T2CON 000FCA           __end_of___lomod 4BA8                     i2l442 4E08  
                   i2l445 4E96                     _RCREG 000FAE                     _RCSTA 000FAB  
            vfpfcnvrt@fmt 004B             get_clust@clst 0012              vfpfcnvrt@llu 006A  
                   _SPBRG 000FAF                     _TRISC 000F94                     _SSPIF 007CF3  
                   _TXREG 000FAD                     _TXSTA 000FAC                     _FatFs 00FD  
  __end_ofcreate_name@cvt 7C0D       ___lmul@multiplicand 000A           __end_of_get_fat 3398  
                   _TxRun 00FB                     _flags 0078           __end_of_mem_cmp 51FE  
         __end_of_mem_set 5590                     _fputc 4FE8           __end_of_pf_read 1E5A  
         __end_of_isalpha 5558                     _fputs 5498           __end_of_isdigit 5638  
         __end_of_pf_open 3E5C                     atoi@n 001A                     pad@fp 0017  
                   atoi@s 000D                     _width 00F9                     _xatoi 240C  
                   _putch 570E                     dtoa@d 0024                     dtoa@i 0044  
                   dtoa@n 003C                     dtoa@p 0036                     dtoa@s 003A  
                   dtoa@w 0038           __end_of_islower 55C8           __end_of_isspace 544A  
            main@num_temp 0158           __end_of_rcv_spi 570E           __end_of_isupper 5600  
                   tablat 000FF5                     plusw1 000FE3                     plusw2 000FDB  
                   stoa@i 001C                     stoa@l 0024                     stoa@p 0022  
                   stoa@s 0012                     stoa@w 001E           __end_of_put_drc 56C6  
                   ttemp5 007B                     ttemp6 007E                     ttemp7 0082  
                   utoa@d 0024                     utoa@i 0040                     utoa@n 0038  
                   utoa@p 0034                     utoa@w 0036                     status 000FD8  
                   wtemp8 007B                     xtoa@c 0047                     xtoa@d 0024  
                   xtoa@i 0045                     xtoa@n 003D                     xtoa@p 0039  
                   xtoa@w 003B                     xtoa@x 002C           __end_of_strncmp 4AD8  
         __end_of_toupper 53F8          ___lodiv@dividend 0006            disk_readp@buff 0090  
            _toupper$1924 0012           __initialization 51FE              __end_of_atoi 39E8  
            __end_of_main 0F96              __end_of_dtoa 2138              clust2sect@fs 001B  
            __end_of_stoa 36C8              __end_of_utoa 31D6              __end_of_xtoa 240C  
                  ??_atoi 000F            get_fileinfo@dj 0006                    ??_main 0155  
                  ??_dtoa 002C                    ??_stoa 0014                    ??_utoa 002C  
                  ??_xtoa 002D             __activetblptr 000002          ___lodiv@quotient 0016  
                  ?_fputc 0007                    ?_fputs 0010                    _CCPR1L 000FBE  
                  ?_xatoi 0012                    ?_putch 0001                    _INT0IF 007F91  
                  i2l6101 4E5E                    i2l6103 4E66                    i2l6105 4E76  
                  i2l6107 4E7A                    i2l6109 4E84                    i2l6091 4E06  
                  i2l6093 4E16                    i2l6095 4E24                    i2l6097 4E36  
                  i2l6099 4E52                    _TMR2ON 007E52                    _SSPBUF 000FC9  
        __end_of_check_fs 463A      __size_of_create_name 0198  __size_of_disk_initialize 0280  
        __end_of_dir_find 43EC                    _RxFifo 0200          __end_of_dir_read 3FCA  
        __end_of_dir_next 2DCA                    _TxFifo 0400              put_dump@addr 0092  
            vfprintf@cfmt 0072              put_dump@buff 0090                    ___lmul 5270  
               ??___aodiv 0016                 ??___aomod 0016                    ___wmul 5686  
               ??___lldiv 000E                 ??___lodiv 0016                 ??___lomod 0016  
                  _memset 3B70          __end_of_init_spi 573E                    clear_0 5224  
                  clear_1 5230                    clear_2 523C                    clear_3 5248  
                  clear_4 5254          __end_of_pf_lseek 1A58      pwm_setDuty@dutycycle 0006  
        __end_of_pf_mount 15C8      __end_of_get_fileinfo 2938                    isa$std 000001  
                  _printf 5638                    pad@buf 0019               pf_read@buff 00C0  
             pf_read@clst 00DB          __end_of_isr_high 4EA2                    main@p1 0164  
                  main@p2 015C                    _put_rc 5102                    main@s1 0190  
                  main@s2 0168                    main@s3 0162               pf_read@sect 00D3  
             pf_read@rcnt 00E0                 ??_get_fat 00A4                    main@fs 0195  
                  dtoa@fp 0022                    _strlen 544A          __end_of_send_cmd 4D3A  
               ??_mem_cmp 000C                    fputc@c 0007                 ??_mem_set 000C  
                  fputs@c 0014                    fputs@i 0015                 ??_pf_read 00C6  
                  fputs@s 0010                 ??_isalpha 0008                 ??_isdigit 0008  
               ??_pf_open 0100                 ??_islower 0008              __mediumconst 7B8C  
               ??_isspace 0008          __end_of_pwm_Init 56F8                 ??_rcv_spi 0006  
                  tblptrh 000FF7                 ??_isupper 0008                    tblptrl 000FF6  
                  tblptru 000FF8               pf_lseek@bcs 00DD               pf_lseek@ofs 00C0  
                  xatoi@c 001E                    stoa@cp 0020                    xatoi@r 0019  
                  xatoi@s 0018                    stoa@fp 0010          __end_of_vfprintf 533C  
        __end_of_put_dump 2FD6          __end_of_pwm_stop 5754                 ??_put_drc 0076  
                  utoa@fp 0022               pf_open@path 00E1                    xtoa@fp 0022  
               ??_strncmp 000C                 ??_toupper 000E          __end_of_xmit_spi 56E0  
              __accesstop 0080   __end_of__initialization 5262               pf_mount@buf 00C2  
             pf_mount@fmt 00F6           disk_readp@count 0098             ___rparam_used 000001  
          __pcstackCOMRAM 0001              __pidataBANK1 5748             __end_of_fputc 507E  
    __size_of_follow_path 016A             __end_of_fputs 54DC              ?_pwm_setDuty 0006  
           __end_of_xatoi 26B6             __end_of_putch 5724        __size_of_dly_100us 000A  
      __size_of_get_clust 00A2           get_fileinfo@dir 0008           get_fileinfo@fno 000A  
                 ??_fputc 000B                   ??_fputs 0014                   ??_xatoi 0016  
                 ??_putch 0006                __pbssBANK0 00F7                __pbssBANK1 01BF  
              __pbssBANK2 0200                __pbssBANK3 0300                __pbssBANK4 0400  
      __size_of_gpio_init 0010                   ?___lmul 0006                   ?___wmul 0006  
      __size_of_send_cmd2 0084                   _CCP1CON 000FBD         ??_disk_initialize 0015  
                 ?_memset 0006            ___lmul@product 000E                   ?_printf 0086  
                 ?_put_rc 0001                   ?_strlen 0006                _dir_rewind 463A  
      __size_of_uart_gets 0132        __size_of_uart_init 005E                 ?_check_fs 00A0  
              _disk_readp 36C8            follow_path@dir 00DB            follow_path@res 00E0  
      __size_of_vfpfcnvrt 07C6               send_cmd@cmd 0013               send_cmd@arg 000E  
             send_cmd@res 0014                 ?_dir_find 00D1                 ?_dir_read 00D1  
               ?_dir_next 00C0                   _SSPCON1 000FC6        __size_of_pwm_start 0004  
                 _SSPSTAT 000FC7                _clust2sect 4BA8          ___lomod@dividend 0006  
       __end_of_dly_100us 5748                 ?_init_spi 0001                 ?_pf_lseek 00C0  
               ?_pf_mount 00AA                 ?_isr_high 0001                 ?_send_cmd 000E  
                 __Hparam 0000                   __Lparam 0000     __size_of_get_fileinfo 0282  
       __end_of_get_clust 4FE8                 ?_pwm_Init 0001                   ___aodiv 39E8  
                 ___aomod 4134           __size_of___lmul 006A             put_dump@width 0098  
                 ___lldiv 4EA2           __size_of___wmul 0026                   ___lodiv 4746  
                 ___lomod 4AD8                 ?_put_dump 0090                 ?_vfprintf 0080  
               ?_pwm_stop 0001                   __pcinit 51FE                _pf_readdir 4836  
         __size_of_memset 0176                   __ramtop 0600                 ?_xmit_spi 0001  
                 __ptext0 07D8                   __ptext1 240C                   __ptext2 533C  
                 __ptext3 43EC                   __ptext4 3B70                   __ptext5 5750  
                 __ptext6 5754                   __ptext7 5660                   __ptext8 56E0  
                 __ptext9 5102                   _get_fat 31D6                _pf_opendir 491A  
         __size_of_printf 0028         __end_of_gpio_init 5734           __size_of_put_rc 0082  
         __size_of_strlen 004E                   _mem_cmp 5184                   _mem_set 5558  
            __size_of_abs 0040              __size_of_pad 00C2                   _pf_read 1A58  
                 _isalpha 551C                   _isdigit 5600                   _pf_open 3CE6  
              ??_check_fs 00A6                   _islower 5590                   _isspace 53F8  
                 _rcv_spi 56F8                   _isupper 55C8                   atoi@neg 0013  
              ??_dir_find 00D5                ??_dir_read 00D5                   _put_drc 56AC  
              ??_dir_next 00C2              pf_read@rbuff 00CF                   main@dir 0180  
                 main@fno 016A                   main@ofs 015A                   main@res 0194  
                 main@ptr 0192                   _strncmp 49FA            __pintcode_body 4DFC  
                 _toupper 539A      end_of_initialization 5262         __end_of_send_cmd2 5102  
                 fputc@fp 0009              _get_fileinfo 26B6                   memset@c 0008  
                 memset@k 000E                   memset@n 000A                   memset@s 0010  
           __Lmediumconst 7B8C                   int_func 4DFC                   fputs@fp 0012  
              ??_init_spi 0006                ??_pf_lseek 00C4              pf_readdir@dj 00DC  
            pf_readdir@fs 012C                ??_pf_mount 00AC              pf_readdir@sp 0120  
              ??_isr_high 0001         __end_of_uart_gets 451E         __end_of_uart_init 539A  
         ___lldiv@divisor 000A                ??_send_cmd 0012           ___lldiv@counter 0012  
            pf_lseek@clst 00E1         __end_of_vfpfcnvrt 07D8              pf_lseek@sect 00D5  
              ??_pwm_Init 0006                   postdec1 000FE5                   postdec2 000FDD  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
                 put_rc@i 0090                   put_rc@p 0092         __end_of_pwm_start 5758  
              ??_vfprintf 0072                ??_put_dump 009A                ??_pwm_stop 0006  
                 strlen@a 0008                   strlen@s 0006                dir_find@dj 00D1  
              ??_xmit_spi 0006                 _PORTBbits 000F81      __size_of_pwm_setDuty 0026  
              dir_read@dj 00D1               ?_dir_rewind 001D                dir_next@dj 00C0  
              dir_next@fs 00C9              pf_opendir@dj 00E1               ?_disk_readp 0090  
            pf_opendir@fs 012C              pf_opendir@sp 0120                 _TRISAbits 000F92  
               _TRISCbits 000F94                get_fat@buf 00BA               ?_clust2sect 0012  
        disk_readp@offset 0096          disk_readp@sector 0092             ??_create_name 0012  
        disk_initialize@n 0020                main@upmode 0157            __end_of___lmul 52DA  
             vfpfcnvrt@ap 004D               vfpfcnvrt@cp 005D               vfpfcnvrt@fp 0049  
             vfpfcnvrt@ll 0061            __end_of___wmul 56AC               ?_pf_readdir 00DC  
          clust2sect@clst 0012               ?_pf_opendir 00E1            __end_of_memset 3CE6  
          __end_of_printf 5660            __end_of_put_rc 5184            __end_of_strlen 5498  
     start_initialization 51FE           ___lodiv@divisor 000E           ___lodiv@counter 001E  
             __end_of_abs 551C               __end_of_pad 4DFC                mem_cmp@cnt 000A  
              mem_cmp@dst 0006                mem_cmp@src 0008           _disk_initialize 2938  
              mem_set@cnt 000A                mem_set@dst 0006                mem_set@val 0008  
     __size_of_dir_rewind 010C             ??_follow_path 00DF       __size_of_disk_readp 0190  
     __end_of_create_name 3530               vfprintf@fmt 0082               put_dump@len 0096  
                ??___lmul 000E                  ??___wmul 000A                pf_read@btr 00C2  
             __pdataBANK1 01E1       __size_of_clust2sect 00CE                  ??_memset 000C  
              pf_lseek@fs 00E5                memset@dest 0006                  ??_printf 0074  
              pf_open@dir 0122                  ??_put_rc 0076         __end_ofput_rc@str 7C52  
              pf_open@res 0142                  ??_strlen 0008                pf_mount@fs 00AA  
             __pbssCOMRAM 0076             __pcstackBANK0 0080             __pcstackBANK1 0100  
        ___aodiv@dividend 0006         __size_of_check_fs 011C              check_fs@sect 00A2  
       __size_of_dir_find 0154         __size_of_dir_read 016E         __size_of_dir_next 0212  
     __size_of_pf_readdir 00E4                 _atoi$1842 0015                 _atoi$1843 0019  
               _atoi$1844 0017       __size_of_pf_opendir 00E0         __size_of_init_spi 000A  
       __size_of_pf_lseek 0490                 _dly_100us 573E         __size_of_pf_mount 0632  
               _dtoa$1753 0034         __size_of_isr_high 4E9A                 __pintcode 0008  
           __pmediumconst 7B8C         __size_of_send_cmd 00C4                  ?___aodiv 0006  
                ?___aomod 0006          ___aodiv@quotient 0018                  ?___lldiv 0006  
                ?___lodiv 0006                  ?___lomod 0006         __size_of_pwm_Init 0018  
               _get_clust 4F46                send_cmd2@n 000D             follow_path@dj 00D9  
     __end_of_follow_path 4134         __size_of_vfprintf 0062         __size_of_put_dump 020C  
                ?_get_fat 00A0         __size_of_pwm_stop 0004           ___lomod@divisor 000E  
                ?_mem_cmp 0006           ___lomod@counter 0016                  ?_mem_set 0006  
                ?_pf_read 00C0                  ?_isalpha 0006                  ?_isdigit 0006  
                ?_pf_open 00E1         __size_of_xmit_spi 001A                  ?_islower 0006  
                ?_isspace 0006                  ?_rcv_spi 0001                  ?_isupper 0006  
               _gpio_init 5724            _dir_rewind$703 0023                  ?_put_drc 0001  
               _init_flag 01BF   __end_of_disk_initialize 2BB8            __size_of_fputc 0096  
          __size_of_fputs 0044                  ?_strncmp 0006                  ?_toupper 000C  
          __size_of_xatoi 02AA            __size_of_putch 0016               _create_name 3398  
          ___wmul@product 000A                  _LATAbits 000F89                  _LATBbits 000F8A  
               _send_cmd2 507E              send_cmd2@cmd 000C              send_cmd2@arg 0007  
            send_cmd2@res 000B                ?_dly_100us 0001           follow_path@path 00DD  
                i2u720_40 4E16                  i2u720_41 4E12                  i2u721_40 4E24  
                i2u721_41 4E20                  i2u722_40 4E52                  i2u722_41 4E4E  
                i2u723_40 4E94                  i2u723_41 4E8E                  i2u724_45 4E96  
               _uart_gets 43EC                uart_gets@c 009B                uart_gets@i 0099  
               _uart_init 533C                 dir_find@c 00D7                 dir_read@a 00D9  
               dir_read@c 00DA                 dir_next@i 00CF                 _vfpfcnvrt 0012  
              ?_get_clust 0006                 _xtoa$1781 0035                 _xtoa$1782 0037  
               get_fat@fs 00BE         ___wmul@multiplier 0006                 _pwm_start 5754  
            ??_dir_rewind 001F                  _CardType 00FF              ??_disk_readp 009A  
               main@count 0160                ?_gpio_init 0001              _isspace$1869 000C  
              vfpfcnvrt@c 0069              ??_clust2sect 0016         ___lmul@multiplier 0006  
               copy_data0 5212                ?_send_cmd2 0007                put_drc@res 0090  
                __Hrparam 0000        __end_of_dir_rewind 4746                vfprintf@ap 0084  
              put_dump@bp 00A2                  __Lrparam 0000                vfprintf@fp 0080  
              put_dump@lp 009E                put_dump@sp 009C               _follow_path 3FCA  
      __end_of_disk_readp 3858                 pf_read@br 00C4                 pf_read@cs 00DF  
               pf_read@dr 00CE                 pf_read@fs 00E2                ?_uart_gets 0090  
              ?_uart_init 0001             ??_pwm_setDuty 0008                 pf_open@dj 0145  
               pf_open@fs 0143                 pf_open@sp 0116          __size_of___aodiv 0188  
        __size_of___aomod 0164          __size_of___lldiv 00A4          __size_of___lodiv 00F0  
            ??_pf_readdir 0076          __size_of___lomod 00D0                ?_vfpfcnvrt 0049  
             _pf_read$894 00D1        __end_of_clust2sect 4C76           ___aodiv@divisor 000E  
            ??_pf_opendir 0076               check_fs@buf 00A0           ___aodiv@counter 0016  
              ?_pwm_start 0001          __size_of_get_fat 01C2                 isr_high@d 0003  
               isr_high@i 0004                  _check_fs 451E      _disk_initialize$1200 001A  
        __size_of_mem_cmp 007A          __size_of_mem_set 0038          __size_of_pf_read 0402  
        __size_of_isalpha 003C          __size_of_isdigit 0038          __size_of_pf_open 0176  
        __size_of_islower 0038          __size_of_isspace 0052          __size_of_rcv_spi 0016  
                __ptext10 2DCA                  __ptext11 56AC                  __ptext20 4298  
                __ptext12 4836                  __ptext21 5184                  __ptext13 26B6  
                __ptext30 451E                  __ptext22 463A                  __ptext14 3E5C  
                __ptext31 15C8                  __ptext23 2BB8                  __ptext15 1A58  
                __ptext40 0012                  __ptext32 31D6                  __ptext24 3398  
                __ptext16 491A                  __ptext41 2138                  __ptext33 36C8  
                __ptext25 5558                  __ptext17 3CE6                  __ptext50 3530  
                __ptext42 539A                  __ptext34 4C76                  __ptext26 0F96  
                __ptext18 3FCA                  __ptext51 1E5A                  __ptext43 5590  
                __ptext35 507E                  __ptext27 2938                  __ptext19 4F46  
                __ptext60 3858                  __ptext52 4D3A                  __ptext44 55C8  
                __ptext36 56C6                  __ptext28 5734                  __ptext61 53F8  
                __ptext53 544A                  __ptext45 551C                  __ptext37 56F8  
                __ptext29 573E                  __ptext62 5600                  __ptext54 5498  
                __ptext46 2FD6                  __ptext38 5638                  __ptext63 5686  
                __ptext55 4FE8                  __ptext47 4AD8                  __ptext39 52DA  
                __ptext64 4BA8                  __ptext56 570E                  __ptext48 4746  
                __ptext65 5270                  __ptext57 54DC                  __ptext49 49FA  
                __ptext66 4EA2                  __ptext58 4134                  __ptext67 5724  
                __ptext59 39E8                  _dir_find 4298          __size_of_isupper 0038  
                _dir_read 3E5C                  _dir_next 2BB8          ?_disk_initialize 0001  
               send_cmd@n 0012          __size_of_put_drc 001A          __size_of_strncmp 00DE  
        __size_of_toupper 005E             __size_of_atoi 0190             __size_of_main 07BE  
           __size_of_dtoa 02DE                  _init_spi 5734                  _pf_lseek 15C8  
           __size_of_stoa 0198                  _pf_mount 0F96             __size_of_utoa 0200  
           __size_of_xtoa 02D4        __end_of_pf_readdir 491A                  _isr_high 0008  
      __end_of_pf_opendir 49FA                  _send_cmd 4C76               ??_dly_100us 0006  
               stoa@F1141 01E1                  isa$xinst 000000                  _pwm_Init 56E0  
                int$flags 007A                  _vfprintf 52DA                  _put_dump 2DCA  
                _pwm_stop 5750             pf_read@remain 00D7                 printf@fmt 0086  
             ??_get_clust 000A                  _xmit_spi 56C6          ___aomod@dividend 0006  
               putch@byte 0006            _vfpfcnvrt$1796 005F       __end_of_pwm_setDuty 5686  
                mem_cmp@d 000E                  mem_cmp@r 0012                  mem_cmp@s 0010  
              _INTCONbits 000FF2                  mem_set@d 000C                 put_rc@str 7C0D  
             ??_gpio_init 0006                 put_dump@i 00A4                  isalpha@c 0006  
                isdigit@c 0006             pf_readdir@dir 0100             pf_readdir@fno 00DE  
           pf_readdir@res 012E                  intlevel2 0000             uart_gets@buff 0090  
                islower@c 0006                  isspace@c 0006          ___lldiv@dividend 0006  
             ??_send_cmd2 000B                  isupper@c 0006                 strncmp@_l 0006  
               strncmp@_r 0008                 xmit_spi@d 0006             pf_lseek@ifptr 00D9  
             ??_uart_gets 0094               ??_uart_init 0006                  printf@ap 0074  
         ___aomod@divisor 000E                  xatoi@res 0014                  xatoi@val 001A  
                xatoi@str 0012               ??_vfpfcnvrt 004F                  stoa@nuls 0015  
         ___aomod@counter 0016                  put_rc@rc 0091               ??_pwm_start 0006  
            uart_gets@len 0092          ___lldiv@quotient 000E            dir_rewind@clst 0029  
             dir_find@dir 00D3               dir_find@res 00D8                  strncmp@l 000D  
                strncmp@n 000A                  strncmp@r 000F                  toupper@c 000C  
            dir_next@clst 00CB               dir_read@dir 00D3               dir_read@res 00DB  
            ___aodiv@sign 0017            pf_opendir@path 00E3             ?_get_fileinfo 0006  
            ?_create_name 000E             pf_opendir@dir 0100              dir_rewind@dj 001D  
            dir_rewind@fs 0027             pf_opendir@res 012E              ___aomod@sign 0017  
